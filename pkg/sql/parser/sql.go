// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:78

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}

//line sql-gen.y:724
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACCESS = lex.ACCESS
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const AVAILABILITY = lex.AVAILABILITY
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONNECTION = lex.CONNECTION
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CSV = lex.CSV
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CURSOR = lex.CURSOR
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DELIMITER = lex.DELIMITER
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FAILURE = lex.FAILURE
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE = lex.FORCE
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GOAL = lex.GOAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INHERITS = lex.INHERITS
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALITY = lex.LOCALITY
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const METHOD = lex.METHOD
const MINUTE = lex.MINUTE
const MODIFYCLUSTERSETTING = lex.MODIFYCLUSTERSETTING
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NOMODIFYCLUSTERSETTING = lex.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NON_VOTERS = lex.NON_VOTERS
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PRIVILEGES = lex.PRIVILEGES
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const REASSIGN = lex.REASSIGN
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGION = lex.REGION
const REGIONAL = lex.REGIONAL
const REGIONS = lex.REGIONS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const REPLICATION = lex.REPLICATION
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCANS = lex.SCANS
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETS = lex.SETS
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STREAM = lex.STREAM
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SURVIVE = lex.SURVIVE
const SURVIVAL = lex.SURVIVAL
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const STATEMENTS = lex.STATEMENTS
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TABLESPACE = lex.TABLESPACE
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const VISIBLE = lex.VISIBLE
const VOTERS = lex.VOTERS
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const NULLS_LA = lex.NULLS_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:12868

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1488,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	258, 392,
	-2, 0,
	-1, 74,
	240, 231,
	506, 231,
	-2, 0,
	-1, 87,
	228, 1248,
	242, 1248,
	258, 388,
	385, 388,
	395, 1018,
	431, 388,
	444, 1018,
	490, 1018,
	517, 388,
	543, 1018,
	-2, 0,
	-1, 93,
	132, 1488,
	235, 1488,
	528, 1488,
	529, 1488,
	-2, 0,
	-1, 109,
	150, 1459,
	169, 1459,
	182, 1459,
	238, 1459,
	271, 1459,
	337, 1459,
	347, 1459,
	523, 1459,
	-2, 1430,
	-1, 148,
	158, 875,
	257, 875,
	388, 842,
	449, 842,
	489, 842,
	509, 875,
	511, 842,
	-2, 0,
	-1, 151,
	4, 1490,
	21, 1490,
	22, 1490,
	23, 1490,
	24, 1490,
	25, 1490,
	26, 1490,
	27, 1490,
	29, 1490,
	30, 1490,
	36, 1490,
	41, 1490,
	42, 1490,
	44, 1490,
	45, 1490,
	46, 1490,
	47, 1490,
	48, 1490,
	49, 1490,
	50, 1490,
	51, 1490,
	53, 1490,
	54, 1490,
	55, 1490,
	56, 1490,
	58, 1490,
	59, 1490,
	60, 1490,
	61, 1490,
	62, 1490,
	63, 1490,
	64, 1490,
	68, 1490,
	69, 1490,
	70, 1490,
	71, 1490,
	73, 1490,
	74, 1490,
	75, 1490,
	79, 1490,
	80, 1490,
	81, 1490,
	82, 1490,
	83, 1490,
	84, 1490,
	85, 1490,
	88, 1490,
	89, 1490,
	90, 1490,
	91, 1490,
	92, 1490,
	94, 1490,
	96, 1490,
	97, 1490,
	98, 1490,
	99, 1490,
	100, 1490,
	101, 1490,
	103, 1490,
	104, 1490,
	105, 1490,
	107, 1490,
	108, 1490,
	109, 1490,
	117, 1490,
	118, 1490,
	119, 1490,
	120, 1490,
	121, 1490,
	123, 1490,
	124, 1490,
	125, 1490,
	127, 1490,
	128, 1490,
	129, 1490,
	131, 1490,
	132, 1490,
	133, 1490,
	135, 1490,
	136, 1490,
	137, 1490,
	140, 1490,
	141, 1490,
	142, 1490,
	144, 1490,
	145, 1490,
	147, 1490,
	148, 1490,
	149, 1490,
	151, 1490,
	152, 1490,
	153, 1490,
	154, 1490,
	155, 1490,
	156, 1490,
	157, 1490,
	158, 1490,
	159, 1490,
	160, 1490,
	161, 1490,
	162, 1490,
	163, 1490,
	164, 1490,
	165, 1490,
	166, 1490,
	168, 1490,
	174, 1490,
	175, 1490,
	176, 1490,
	177, 1490,
	181, 1490,
	183, 1490,
	184, 1490,
	188, 1490,
	189, 1490,
	190, 1490,
	191, 1490,
	192, 1490,
	193, 1490,
	194, 1490,
	195, 1490,
	196, 1490,
	197, 1490,
	198, 1490,
	199, 1490,
	200, 1490,
	202, 1490,
	203, 1490,
	205, 1490,
	206, 1490,
	208, 1490,
	209, 1490,
	210, 1490,
	211, 1490,
	212, 1490,
	213, 1490,
	214, 1490,
	215, 1490,
	216, 1490,
	218, 1490,
	219, 1490,
	221, 1490,
	222, 1490,
	223, 1490,
	224, 1490,
	228, 1490,
	229, 1490,
	230, 1490,
	231, 1490,
	232, 1490,
	235, 1490,
	236, 1490,
	237, 1490,
	239, 1490,
	241, 1490,
	242, 1490,
	244, 1490,
	246, 1490,
	247, 1490,
	248, 1490,
	250, 1490,
	254, 1490,
	255, 1490,
	256, 1490,
	257, 1490,
	258, 1490,
	259, 1490,
	261, 1490,
	262, 1490,
	263, 1490,
	265, 1490,
	266, 1490,
	268, 1490,
	269, 1490,
	272, 1490,
	276, 1490,
	277, 1490,
	278, 1490,
	281, 1490,
	282, 1490,
	283, 1490,
	284, 1490,
	286, 1490,
	287, 1490,
	288, 1490,
	289, 1490,
	290, 1490,
	291, 1490,
	292, 1490,
	293, 1490,
	294, 1490,
	295, 1490,
	296, 1490,
	297, 1490,
	298, 1490,
	299, 1490,
	300, 1490,
	301, 1490,
	302, 1490,
	303, 1490,
	304, 1490,
	305, 1490,
	306, 1490,
	307, 1490,
	309, 1490,
	311, 1490,
	312, 1490,
	313, 1490,
	314, 1490,
	315, 1490,
	316, 1490,
	317, 1490,
	318, 1490,
	319, 1490,
	320, 1490,
	321, 1490,
	322, 1490,
	324, 1490,
	325, 1490,
	327, 1490,
	329, 1490,
	330, 1490,
	332, 1490,
	333, 1490,
	334, 1490,
	335, 1490,
	336, 1490,
	339, 1490,
	342, 1490,
	343, 1490,
	344, 1490,
	345, 1490,
	348, 1490,
	349, 1490,
	350, 1490,
	352, 1490,
	354, 1490,
	355, 1490,
	356, 1490,
	357, 1490,
	358, 1490,
	359, 1490,
	360, 1490,
	361, 1490,
	362, 1490,
	363, 1490,
	364, 1490,
	365, 1490,
	367, 1490,
	368, 1490,
	369, 1490,
	370, 1490,
	371, 1490,
	372, 1490,
	373, 1490,
	374, 1490,
	375, 1490,
	376, 1490,
	377, 1490,
	378, 1490,
	379, 1490,
	380, 1490,
	381, 1490,
	383, 1490,
	384, 1490,
	386, 1490,
	387, 1490,
	388, 1490,
	389, 1490,
	390, 1490,
	391, 1490,
	392, 1490,
	393, 1490,
	394, 1490,
	395, 1490,
	396, 1490,
	397, 1490,
	399, 1490,
	401, 1490,
	402, 1490,
	403, 1490,
	408, 1490,
	410, 1490,
	411, 1490,
	412, 1490,
	413, 1490,
	414, 1490,
	415, 1490,
	416, 1490,
	417, 1490,
	418, 1490,
	420, 1490,
	421, 1490,
	422, 1490,
	424, 1490,
	425, 1490,
	426, 1490,
	427, 1490,
	428, 1490,
	429, 1490,
	431, 1490,
	432, 1490,
	433, 1490,
	434, 1490,
	435, 1490,
	436, 1490,
	437, 1490,
	438, 1490,
	439, 1490,
	440, 1490,
	441, 1490,
	442, 1490,
	444, 1490,
	445, 1490,
	446, 1490,
	447, 1490,
	448, 1490,
	449, 1490,
	451, 1490,
	452, 1490,
	453, 1490,
	454, 1490,
	455, 1490,
	456, 1490,
	458, 1490,
	459, 1490,
	460, 1490,
	461, 1490,
	462, 1490,
	463, 1490,
	464, 1490,
	466, 1490,
	468, 1490,
	469, 1490,
	470, 1490,
	471, 1490,
	472, 1490,
	473, 1490,
	474, 1490,
	475, 1490,
	476, 1490,
	477, 1490,
	478, 1490,
	479, 1490,
	480, 1490,
	481, 1490,
	482, 1490,
	483, 1490,
	485, 1490,
	486, 1490,
	488, 1490,
	489, 1490,
	491, 1490,
	492, 1490,
	493, 1490,
	494, 1490,
	495, 1490,
	496, 1490,
	497, 1490,
	498, 1490,
	499, 1490,
	501, 1490,
	502, 1490,
	503, 1490,
	504, 1490,
	505, 1490,
	507, 1490,
	509, 1490,
	510, 1490,
	511, 1490,
	512, 1490,
	513, 1490,
	514, 1490,
	516, 1490,
	517, 1490,
	518, 1490,
	519, 1490,
	521, 1490,
	522, 1490,
	525, 1490,
	526, 1490,
	527, 1490,
	528, 1490,
	529, 1490,
	530, 1490,
	531, 1490,
	533, 1490,
	536, 1490,
	537, 1490,
	538, 1490,
	539, 1490,
	540, 1490,
	541, 1490,
	543, 1490,
	544, 1490,
	545, 1490,
	546, 1490,
	548, 1490,
	553, 1490,
	554, 1490,
	555, 1490,
	556, 1490,
	557, 1490,
	558, 1490,
	-2, 0,
	-1, 152,
	1, 1345,
	130, 1345,
	246, 1345,
	326, 1345,
	383, 1345,
	392, 1345,
	562, 1345,
	586, 1345,
	-2, 0,
	-1, 154,
	1, 1345,
	586, 1345,
	-2, 0,
	-1, 155,
	1, 1345,
	586, 1345,
	-2, 0,
	-1, 156,
	1, 1345,
	506, 1345,
	586, 1345,
	-2, 0,
	-1, 184,
	150, 1458,
	169, 1458,
	182, 1458,
	238, 1458,
	271, 1458,
	337, 1458,
	347, 1458,
	523, 1458,
	-2, 1433,
	-1, 230,
	4, 1497,
	5, 1497,
	6, 1497,
	7, 1497,
	8, 1497,
	9, 1497,
	10, 1497,
	21, 1497,
	22, 1497,
	23, 1497,
	24, 1497,
	25, 1497,
	26, 1497,
	27, 1497,
	29, 1497,
	30, 1497,
	36, 1497,
	37, 1497,
	41, 1497,
	42, 1497,
	43, 1497,
	44, 1497,
	45, 1497,
	46, 1497,
	47, 1497,
	48, 1497,
	49, 1497,
	50, 1497,
	51, 1497,
	53, 1497,
	54, 1497,
	55, 1497,
	56, 1497,
	58, 1497,
	59, 1497,
	60, 1497,
	61, 1497,
	62, 1497,
	63, 1497,
	64, 1497,
	65, 1497,
	66, 1497,
	67, 1497,
	68, 1497,
	69, 1497,
	70, 1497,
	71, 1497,
	73, 1497,
	74, 1497,
	75, 1497,
	77, 1497,
	79, 1497,
	80, 1497,
	81, 1497,
	82, 1497,
	83, 1497,
	84, 1497,
	85, 1497,
	88, 1497,
	89, 1497,
	90, 1497,
	91, 1497,
	92, 1497,
	94, 1497,
	96, 1497,
	97, 1497,
	98, 1497,
	99, 1497,
	100, 1497,
	101, 1497,
	103, 1497,
	104, 1497,
	105, 1497,
	106, 1497,
	107, 1497,
	108, 1497,
	109, 1497,
	110, 1497,
	111, 1497,
	112, 1497,
	113, 1497,
	114, 1497,
	115, 1497,
	116, 1497,
	117, 1497,
	118, 1497,
	119, 1497,
	120, 1497,
	121, 1497,
	122, 1497,
	123, 1497,
	124, 1497,
	125, 1497,
	126, 1497,
	127, 1497,
	128, 1497,
	129, 1497,
	131, 1497,
	132, 1497,
	133, 1497,
	135, 1497,
	136, 1497,
	137, 1497,
	140, 1497,
	141, 1497,
	142, 1497,
	144, 1497,
	145, 1497,
	147, 1497,
	148, 1497,
	149, 1497,
	151, 1497,
	152, 1497,
	153, 1497,
	154, 1497,
	155, 1497,
	156, 1497,
	157, 1497,
	158, 1497,
	159, 1497,
	160, 1497,
	161, 1497,
	162, 1497,
	163, 1497,
	164, 1497,
	165, 1497,
	166, 1497,
	167, 1497,
	168, 1497,
	174, 1497,
	175, 1497,
	176, 1497,
	177, 1497,
	181, 1497,
	183, 1497,
	184, 1497,
	187, 1497,
	188, 1497,
	189, 1497,
	190, 1497,
	191, 1497,
	192, 1497,
	193, 1497,
	194, 1497,
	195, 1497,
	196, 1497,
	197, 1497,
	198, 1497,
	199, 1497,
	200, 1497,
	202, 1497,
	203, 1497,
	205, 1497,
	206, 1497,
	208, 1497,
	209, 1497,
	210, 1497,
	211, 1497,
	212, 1497,
	213, 1497,
	214, 1497,
	215, 1497,
	216, 1497,
	217, 1497,
	218, 1497,
	219, 1497,
	221, 1497,
	222, 1497,
	223, 1497,
	224, 1497,
	228, 1497,
	229, 1497,
	230, 1497,
	231, 1497,
	232, 1497,
	234, 1497,
	235, 1497,
	236, 1497,
	237, 1497,
	239, 1497,
	241, 1497,
	242, 1497,
	243, 1497,
	244, 1497,
	245, 1497,
	246, 1497,
	247, 1497,
	248, 1497,
	249, 1497,
	250, 1497,
	254, 1497,
	255, 1497,
	256, 1497,
	257, 1497,
	258, 1497,
	259, 1497,
	261, 1497,
	262, 1497,
	263, 1497,
	265, 1497,
	266, 1497,
	267, 1497,
	268, 1497,
	269, 1497,
	270, 1497,
	272, 1497,
	276, 1497,
	277, 1497,
	278, 1497,
	279, 1497,
	280, 1497,
	281, 1497,
	282, 1497,
	283, 1497,
	284, 1497,
	286, 1497,
	287, 1497,
	288, 1497,
	289, 1497,
	290, 1497,
	291, 1497,
	292, 1497,
	293, 1497,
	294, 1497,
	295, 1497,
	296, 1497,
	297, 1497,
	298, 1497,
	299, 1497,
	300, 1497,
	301, 1497,
	302, 1497,
	303, 1497,
	304, 1497,
	305, 1497,
	306, 1497,
	307, 1497,
	309, 1497,
	310, 1497,
	311, 1497,
	312, 1497,
	313, 1497,
	314, 1497,
	315, 1497,
	316, 1497,
	317, 1497,
	318, 1497,
	319, 1497,
	320, 1497,
	321, 1497,
	322, 1497,
	323, 1497,
	324, 1497,
	325, 1497,
	326, 1497,
	327, 1497,
	328, 1497,
	329, 1497,
	330, 1497,
	331, 1497,
	332, 1497,
	333, 1497,
	334, 1497,
	335, 1497,
	336, 1497,
	339, 1497,
	343, 1497,
	344, 1497,
	345, 1497,
	348, 1497,
	349, 1497,
	350, 1497,
	351, 1497,
	352, 1497,
	353, 1497,
	354, 1497,
	355, 1497,
	356, 1497,
	357, 1497,
	358, 1497,
	359, 1497,
	360, 1497,
	361, 1497,
	362, 1497,
	363, 1497,
	364, 1497,
	365, 1497,
	367, 1497,
	368, 1497,
	369, 1497,
	370, 1497,
	371, 1497,
	372, 1497,
	373, 1497,
	374, 1497,
	375, 1497,
	376, 1497,
	377, 1497,
	378, 1497,
	379, 1497,
	380, 1497,
	381, 1497,
	383, 1497,
	384, 1497,
	386, 1497,
	387, 1497,
	388, 1497,
	389, 1497,
	390, 1497,
	391, 1497,
	392, 1497,
	393, 1497,
	394, 1497,
	395, 1497,
	396, 1497,
	397, 1497,
	399, 1497,
	401, 1497,
	402, 1497,
	403, 1497,
	408, 1497,
	410, 1497,
	411, 1497,
	412, 1497,
	413, 1497,
	414, 1497,
	415, 1497,
	416, 1497,
	417, 1497,
	418, 1497,
	420, 1497,
	421, 1497,
	422, 1497,
	423, 1497,
	424, 1497,
	425, 1497,
	426, 1497,
	427, 1497,
	428, 1497,
	429, 1497,
	431, 1497,
	432, 1497,
	433, 1497,
	434, 1497,
	435, 1497,
	436, 1497,
	437, 1497,
	438, 1497,
	439, 1497,
	440, 1497,
	441, 1497,
	442, 1497,
	444, 1497,
	445, 1497,
	446, 1497,
	447, 1497,
	448, 1497,
	449, 1497,
	450, 1497,
	451, 1497,
	452, 1497,
	453, 1497,
	454, 1497,
	455, 1497,
	456, 1497,
	457, 1497,
	458, 1497,
	459, 1497,
	460, 1497,
	461, 1497,
	462, 1497,
	463, 1497,
	464, 1497,
	466, 1497,
	468, 1497,
	469, 1497,
	470, 1497,
	471, 1497,
	472, 1497,
	473, 1497,
	474, 1497,
	475, 1497,
	476, 1497,
	477, 1497,
	478, 1497,
	479, 1497,
	480, 1497,
	481, 1497,
	482, 1497,
	483, 1497,
	485, 1497,
	486, 1497,
	487, 1497,
	488, 1497,
	489, 1497,
	491, 1497,
	492, 1497,
	493, 1497,
	494, 1497,
	495, 1497,
	496, 1497,
	497, 1497,
	498, 1497,
	499, 1497,
	501, 1497,
	502, 1497,
	503, 1497,
	504, 1497,
	505, 1497,
	507, 1497,
	509, 1497,
	510, 1497,
	511, 1497,
	512, 1497,
	513, 1497,
	514, 1497,
	515, 1497,
	516, 1497,
	517, 1497,
	518, 1497,
	519, 1497,
	521, 1497,
	522, 1497,
	524, 1497,
	525, 1497,
	526, 1497,
	527, 1497,
	528, 1497,
	529, 1497,
	530, 1497,
	531, 1497,
	532, 1497,
	533, 1497,
	536, 1497,
	537, 1497,
	538, 1497,
	539, 1497,
	540, 1497,
	541, 1497,
	543, 1497,
	544, 1497,
	545, 1497,
	546, 1497,
	548, 1497,
	553, 1497,
	554, 1497,
	555, 1497,
	556, 1497,
	557, 1497,
	558, 1497,
	559, 1497,
	567, 1497,
	574, 1497,
	575, 1497,
	576, 1497,
	583, 1497,
	587, 1497,
	-2, 0,
	-1, 727,
	4, 1246,
	21, 1246,
	22, 1246,
	23, 1246,
	24, 1246,
	25, 1246,
	26, 1246,
	27, 1246,
	29, 1246,
	30, 1246,
	36, 1246,
	41, 1246,
	42, 1246,
	44, 1246,
	45, 1246,
	46, 1246,
	47, 1246,
	48, 1246,
	49, 1246,
	50, 1246,
	51, 1246,
	53, 1246,
	54, 1246,
	55, 1246,
	56, 1246,
	58, 1246,
	59, 1246,
	60, 1246,
	61, 1246,
	62, 1246,
	63, 1246,
	64, 1246,
	68, 1246,
	69, 1246,
	70, 1246,
	71, 1246,
	73, 1246,
	74, 1246,
	75, 1246,
	79, 1246,
	80, 1246,
	81, 1246,
	82, 1246,
	83, 1246,
	84, 1246,
	85, 1246,
	88, 1246,
	89, 1246,
	90, 1246,
	91, 1246,
	92, 1246,
	94, 1246,
	96, 1246,
	97, 1246,
	98, 1246,
	99, 1246,
	100, 1246,
	101, 1246,
	103, 1246,
	104, 1246,
	105, 1246,
	107, 1246,
	108, 1246,
	109, 1246,
	117, 1246,
	118, 1246,
	119, 1246,
	120, 1246,
	121, 1246,
	123, 1246,
	124, 1246,
	125, 1246,
	127, 1246,
	128, 1246,
	129, 1246,
	131, 1246,
	132, 1246,
	133, 1246,
	135, 1246,
	136, 1246,
	137, 1246,
	140, 1246,
	141, 1246,
	142, 1246,
	144, 1246,
	145, 1246,
	147, 1246,
	148, 1246,
	149, 1246,
	151, 1246,
	152, 1246,
	153, 1246,
	154, 1246,
	155, 1246,
	156, 1246,
	157, 1246,
	158, 1246,
	159, 1246,
	160, 1246,
	161, 1246,
	162, 1246,
	163, 1246,
	164, 1246,
	165, 1246,
	166, 1246,
	168, 1246,
	174, 1246,
	175, 1246,
	176, 1246,
	177, 1246,
	181, 1246,
	183, 1246,
	184, 1246,
	188, 1246,
	189, 1246,
	190, 1246,
	191, 1246,
	192, 1246,
	193, 1246,
	194, 1246,
	195, 1246,
	196, 1246,
	197, 1246,
	198, 1246,
	199, 1246,
	200, 1246,
	202, 1246,
	203, 1246,
	205, 1246,
	206, 1246,
	208, 1246,
	209, 1246,
	210, 1246,
	211, 1246,
	212, 1246,
	213, 1246,
	214, 1246,
	215, 1246,
	216, 1246,
	218, 1246,
	219, 1246,
	221, 1246,
	222, 1246,
	223, 1246,
	224, 1246,
	228, 1246,
	229, 1246,
	230, 1246,
	231, 1246,
	232, 1246,
	235, 1246,
	236, 1246,
	237, 1246,
	239, 1246,
	241, 1246,
	242, 1246,
	244, 1246,
	246, 1246,
	247, 1246,
	248, 1246,
	250, 1246,
	254, 1246,
	255, 1246,
	256, 1246,
	257, 1246,
	258, 1246,
	259, 1246,
	261, 1246,
	262, 1246,
	263, 1246,
	265, 1246,
	266, 1246,
	268, 1246,
	269, 1246,
	272, 1246,
	276, 1246,
	277, 1246,
	278, 1246,
	281, 1246,
	282, 1246,
	283, 1246,
	284, 1246,
	286, 1246,
	287, 1246,
	288, 1246,
	289, 1246,
	290, 1246,
	291, 1246,
	292, 1246,
	293, 1246,
	294, 1246,
	295, 1246,
	296, 1246,
	297, 1246,
	298, 1246,
	299, 1246,
	300, 1246,
	301, 1246,
	302, 1246,
	303, 1246,
	304, 1246,
	305, 1246,
	306, 1246,
	307, 1246,
	309, 1246,
	311, 1246,
	312, 1246,
	313, 1246,
	314, 1246,
	315, 1246,
	316, 1246,
	317, 1246,
	318, 1246,
	319, 1246,
	320, 1246,
	321, 1246,
	322, 1246,
	324, 1246,
	325, 1246,
	327, 1246,
	329, 1246,
	330, 1246,
	332, 1246,
	333, 1246,
	334, 1246,
	335, 1246,
	336, 1246,
	339, 1246,
	343, 1246,
	344, 1246,
	345, 1246,
	348, 1246,
	349, 1246,
	350, 1246,
	352, 1246,
	354, 1246,
	355, 1246,
	356, 1246,
	357, 1246,
	358, 1246,
	359, 1246,
	360, 1246,
	361, 1246,
	362, 1246,
	363, 1246,
	364, 1246,
	365, 1246,
	367, 1246,
	368, 1246,
	369, 1246,
	370, 1246,
	371, 1246,
	372, 1246,
	373, 1246,
	374, 1246,
	375, 1246,
	376, 1246,
	377, 1246,
	378, 1246,
	379, 1246,
	380, 1246,
	381, 1246,
	383, 1246,
	384, 1246,
	386, 1246,
	387, 1246,
	388, 1246,
	389, 1246,
	390, 1246,
	391, 1246,
	392, 1246,
	393, 1246,
	394, 1246,
	395, 1246,
	396, 1246,
	397, 1246,
	399, 1246,
	401, 1246,
	402, 1246,
	403, 1246,
	408, 1246,
	410, 1246,
	411, 1246,
	412, 1246,
	413, 1246,
	414, 1246,
	415, 1246,
	416, 1246,
	417, 1246,
	418, 1246,
	420, 1246,
	421, 1246,
	422, 1246,
	424, 1246,
	425, 1246,
	426, 1246,
	427, 1246,
	428, 1246,
	429, 1246,
	431, 1246,
	432, 1246,
	433, 1246,
	434, 1246,
	435, 1246,
	436, 1246,
	437, 1246,
	438, 1246,
	439, 1246,
	440, 1246,
	441, 1246,
	442, 1246,
	444, 1246,
	445, 1246,
	446, 1246,
	447, 1246,
	448, 1246,
	449, 1246,
	451, 1246,
	452, 1246,
	453, 1246,
	454, 1246,
	455, 1246,
	456, 1246,
	458, 1246,
	459, 1246,
	460, 1246,
	461, 1246,
	462, 1246,
	463, 1246,
	464, 1246,
	466, 1246,
	468, 1246,
	469, 1246,
	470, 1246,
	471, 1246,
	472, 1246,
	473, 1246,
	474, 1246,
	475, 1246,
	476, 1246,
	477, 1246,
	478, 1246,
	479, 1246,
	480, 1246,
	481, 1246,
	482, 1246,
	483, 1246,
	485, 1246,
	486, 1246,
	488, 1246,
	489, 1246,
	491, 1246,
	492, 1246,
	493, 1246,
	494, 1246,
	495, 1246,
	496, 1246,
	497, 1246,
	498, 1246,
	499, 1246,
	501, 1246,
	502, 1246,
	503, 1246,
	504, 1246,
	505, 1246,
	507, 1246,
	509, 1246,
	510, 1246,
	511, 1246,
	512, 1246,
	513, 1246,
	514, 1246,
	516, 1246,
	517, 1246,
	518, 1246,
	519, 1246,
	521, 1246,
	522, 1246,
	525, 1246,
	526, 1246,
	527, 1246,
	528, 1246,
	529, 1246,
	530, 1246,
	531, 1246,
	533, 1246,
	536, 1246,
	537, 1246,
	538, 1246,
	539, 1246,
	540, 1246,
	541, 1246,
	543, 1246,
	544, 1246,
	545, 1246,
	546, 1246,
	548, 1246,
	553, 1246,
	554, 1246,
	555, 1246,
	556, 1246,
	557, 1246,
	558, 1246,
	-2, 0,
	-1, 746,
	186, 2254,
	506, 2254,
	566, 2254,
	585, 2254,
	-2, 0,
	-1, 747,
	186, 2359,
	506, 2359,
	566, 2359,
	585, 2359,
	-2, 0,
	-1, 748,
	186, 2241,
	506, 2241,
	566, 2241,
	585, 2241,
	-2, 0,
	-1, 750,
	186, 2491,
	506, 2491,
	566, 2491,
	585, 2491,
	-2, 0,
	-1, 752,
	186, 2531,
	506, 2531,
	566, 2531,
	585, 2531,
	-2, 0,
	-1, 759,
	186, 2386,
	506, 2386,
	566, 2386,
	585, 2386,
	-2, 676,
	-1, 792,
	585, 2190,
	588, 2190,
	-2, 949,
	-1, 793,
	585, 2192,
	588, 2192,
	-2, 950,
	-1, 794,
	585, 2191,
	588, 2191,
	-2, 951,
	-1, 795,
	588, 2117,
	-2, 952,
	-1, 818,
	182, 245,
	-2, 0,
	-1, 842,
	43, 2164,
	-2, 0,
	-1, 843,
	543, 1224,
	-2, 1019,
	-1, 859,
	4, 1626,
	21, 1626,
	22, 1626,
	23, 1626,
	24, 1626,
	25, 1626,
	26, 1626,
	27, 1626,
	29, 1626,
	30, 1626,
	36, 1626,
	41, 1626,
	42, 1626,
	44, 1626,
	45, 1626,
	46, 1626,
	47, 1626,
	48, 1626,
	49, 1626,
	50, 1626,
	51, 1626,
	53, 1626,
	54, 1626,
	55, 1626,
	56, 1626,
	58, 1626,
	59, 1626,
	60, 1626,
	61, 1626,
	62, 1626,
	63, 1626,
	64, 1626,
	68, 1626,
	69, 1626,
	70, 1626,
	71, 1626,
	73, 1626,
	74, 1626,
	75, 1626,
	79, 1626,
	80, 1626,
	81, 1626,
	82, 1626,
	83, 1626,
	84, 1626,
	85, 1626,
	88, 1626,
	89, 1626,
	90, 1626,
	91, 1626,
	92, 1626,
	94, 1626,
	96, 1626,
	97, 1626,
	98, 1626,
	99, 1626,
	100, 1626,
	101, 1626,
	103, 1626,
	104, 1626,
	105, 1626,
	107, 1626,
	108, 1626,
	109, 1626,
	117, 1626,
	118, 1626,
	119, 1626,
	120, 1626,
	121, 1626,
	123, 1626,
	124, 1626,
	125, 1626,
	127, 1626,
	128, 1626,
	129, 1626,
	131, 1626,
	132, 1626,
	133, 1626,
	135, 1626,
	136, 1626,
	137, 1626,
	140, 1626,
	141, 1626,
	142, 1626,
	144, 1626,
	145, 1626,
	147, 1626,
	148, 1626,
	149, 1626,
	151, 1626,
	152, 1626,
	153, 1626,
	154, 1626,
	155, 1626,
	156, 1626,
	157, 1626,
	158, 1626,
	159, 1626,
	160, 1626,
	161, 1626,
	162, 1626,
	163, 1626,
	164, 1626,
	165, 1626,
	166, 1626,
	168, 1626,
	174, 1626,
	175, 1626,
	176, 1626,
	177, 1626,
	181, 1626,
	183, 1626,
	184, 1626,
	188, 1626,
	189, 1626,
	190, 1626,
	191, 1626,
	192, 1626,
	193, 1626,
	194, 1626,
	195, 1626,
	196, 1626,
	197, 1626,
	198, 1626,
	199, 1626,
	200, 1626,
	202, 1626,
	203, 1626,
	205, 1626,
	206, 1626,
	208, 1626,
	209, 1626,
	210, 1626,
	211, 1626,
	212, 1626,
	213, 1626,
	214, 1626,
	215, 1626,
	216, 1626,
	218, 1626,
	219, 1626,
	221, 1626,
	222, 1626,
	223, 1626,
	224, 1626,
	228, 1626,
	229, 1626,
	230, 1626,
	231, 1626,
	232, 1626,
	235, 1626,
	236, 1626,
	237, 1626,
	239, 1626,
	241, 1626,
	242, 1626,
	244, 1626,
	246, 1626,
	247, 1626,
	248, 1626,
	250, 1626,
	254, 1626,
	255, 1626,
	256, 1626,
	257, 1626,
	258, 1626,
	259, 1626,
	261, 1626,
	262, 1626,
	263, 1626,
	265, 1626,
	266, 1626,
	268, 1626,
	269, 1626,
	272, 1626,
	276, 1626,
	277, 1626,
	278, 1626,
	281, 1626,
	282, 1626,
	283, 1626,
	284, 1626,
	286, 1626,
	287, 1626,
	288, 1626,
	289, 1626,
	290, 1626,
	291, 1626,
	292, 1626,
	293, 1626,
	294, 1626,
	295, 1626,
	296, 1626,
	297, 1626,
	298, 1626,
	299, 1626,
	300, 1626,
	301, 1626,
	302, 1626,
	303, 1626,
	304, 1626,
	305, 1626,
	306, 1626,
	307, 1626,
	309, 1626,
	311, 1626,
	312, 1626,
	313, 1626,
	314, 1626,
	315, 1626,
	316, 1626,
	317, 1626,
	318, 1626,
	319, 1626,
	320, 1626,
	321, 1626,
	322, 1626,
	324, 1626,
	325, 1626,
	327, 1626,
	329, 1626,
	330, 1626,
	332, 1626,
	333, 1626,
	334, 1626,
	335, 1626,
	336, 1626,
	339, 1626,
	343, 1626,
	344, 1626,
	345, 1626,
	348, 1626,
	349, 1626,
	350, 1626,
	352, 1626,
	354, 1626,
	355, 1626,
	356, 1626,
	357, 1626,
	358, 1626,
	359, 1626,
	360, 1626,
	361, 1626,
	362, 1626,
	363, 1626,
	364, 1626,
	365, 1626,
	367, 1626,
	368, 1626,
	369, 1626,
	370, 1626,
	371, 1626,
	372, 1626,
	373, 1626,
	374, 1626,
	375, 1626,
	376, 1626,
	377, 1626,
	378, 1626,
	379, 1626,
	380, 1626,
	381, 1626,
	383, 1626,
	384, 1626,
	386, 1626,
	387, 1626,
	388, 1626,
	389, 1626,
	390, 1626,
	391, 1626,
	392, 1626,
	393, 1626,
	394, 1626,
	395, 1626,
	396, 1626,
	397, 1626,
	399, 1626,
	401, 1626,
	402, 1626,
	403, 1626,
	408, 1626,
	410, 1626,
	411, 1626,
	412, 1626,
	413, 1626,
	414, 1626,
	415, 1626,
	416, 1626,
	417, 1626,
	418, 1626,
	420, 1626,
	421, 1626,
	422, 1626,
	424, 1626,
	425, 1626,
	426, 1626,
	427, 1626,
	428, 1626,
	429, 1626,
	431, 1626,
	432, 1626,
	433, 1626,
	434, 1626,
	435, 1626,
	436, 1626,
	437, 1626,
	438, 1626,
	439, 1626,
	440, 1626,
	441, 1626,
	442, 1626,
	444, 1626,
	445, 1626,
	446, 1626,
	447, 1626,
	448, 1626,
	449, 1626,
	451, 1626,
	452, 1626,
	453, 1626,
	454, 1626,
	455, 1626,
	456, 1626,
	458, 1626,
	459, 1626,
	460, 1626,
	461, 1626,
	462, 1626,
	463, 1626,
	464, 1626,
	466, 1626,
	468, 1626,
	469, 1626,
	470, 1626,
	471, 1626,
	472, 1626,
	473, 1626,
	474, 1626,
	475, 1626,
	476, 1626,
	477, 1626,
	478, 1626,
	479, 1626,
	480, 1626,
	481, 1626,
	482, 1626,
	483, 1626,
	485, 1626,
	486, 1626,
	488, 1626,
	489, 1626,
	491, 1626,
	492, 1626,
	493, 1626,
	494, 1626,
	495, 1626,
	496, 1626,
	497, 1626,
	498, 1626,
	499, 1626,
	501, 1626,
	502, 1626,
	503, 1626,
	504, 1626,
	505, 1626,
	507, 1626,
	509, 1626,
	510, 1626,
	511, 1626,
	512, 1626,
	513, 1626,
	514, 1626,
	516, 1626,
	517, 1626,
	518, 1626,
	519, 1626,
	521, 1626,
	522, 1626,
	525, 1626,
	526, 1626,
	527, 1626,
	528, 1626,
	529, 1626,
	530, 1626,
	531, 1626,
	533, 1626,
	536, 1626,
	537, 1626,
	538, 1626,
	539, 1626,
	540, 1626,
	541, 1626,
	543, 1626,
	544, 1626,
	545, 1626,
	546, 1626,
	548, 1626,
	553, 1626,
	554, 1626,
	555, 1626,
	556, 1626,
	557, 1626,
	558, 1626,
	-2, 0,
	-1, 867,
	258, 392,
	-2, 0,
	-1, 938,
	388, 843,
	449, 843,
	489, 843,
	511, 843,
	-2, 0,
	-1, 939,
	388, 842,
	449, 842,
	489, 842,
	511, 842,
	-2, 782,
	-1, 943,
	1, 889,
	582, 889,
	584, 889,
	586, 889,
	-2, 0,
	-1, 944,
	1, 817,
	582, 817,
	584, 817,
	586, 817,
	-2, 0,
	-1, 945,
	1, 821,
	582, 821,
	584, 821,
	586, 821,
	-2, 0,
	-1, 946,
	1, 948,
	182, 948,
	582, 948,
	584, 948,
	586, 948,
	-2, 0,
	-1, 954,
	1, 848,
	582, 848,
	584, 848,
	586, 848,
	-2, 0,
	-1, 960,
	1, 889,
	582, 889,
	584, 889,
	586, 889,
	-2, 0,
	-1, 961,
	1, 891,
	582, 891,
	584, 891,
	586, 891,
	-2, 0,
	-1, 962,
	1, 894,
	582, 894,
	584, 894,
	586, 894,
	-2, 0,
	-1, 968,
	1, 912,
	582, 912,
	584, 912,
	586, 912,
	-2, 0,
	-1, 969,
	1, 914,
	582, 914,
	584, 914,
	586, 914,
	-2, 0,
	-1, 974,
	1, 942,
	582, 942,
	584, 942,
	586, 942,
	-2, 0,
	-1, 1021,
	169, 1501,
	182, 1501,
	271, 1501,
	337, 1501,
	-2, 1437,
	-1, 1036,
	169, 1500,
	182, 1500,
	271, 1500,
	337, 1500,
	-2, 1434,
	-1, 1062,
	585, 2189,
	-2, 684,
	-1, 1090,
	5, 2181,
	583, 2179,
	-2, 2170,
	-1, 1098,
	5, 2202,
	583, 2199,
	-2, 2190,
	-1, 1099,
	5, 2203,
	583, 2200,
	-2, 2191,
	-1, 1107,
	585, 2187,
	-2, 2169,
	-1, 1108,
	583, 2614,
	-2, 2188,
	-1, 1131,
	583, 2613,
	-2, 2204,
	-1, 1132,
	5, 1701,
	-2, 2584,
	-1, 1133,
	5, 1702,
	-2, 2585,
	-1, 1134,
	5, 1703,
	-2, 2599,
	-1, 1135,
	5, 1704,
	-2, 2563,
	-1, 1136,
	5, 1705,
	-2, 2597,
	-1, 1137,
	5, 1713,
	-2, 2576,
	-1, 1138,
	5, 1700,
	-2, 2572,
	-1, 1139,
	5, 1700,
	-2, 2571,
	-1, 1140,
	5, 1700,
	-2, 2590,
	-1, 1141,
	5, 1711,
	-2, 2565,
	-1, 1142,
	5, 1716,
	-2, 2564,
	-1, 1143,
	5, 1718,
	-2, 2609,
	-1, 1146,
	5, 1740,
	-2, 2602,
	-1, 1147,
	5, 1732,
	-2, 2603,
	-1, 1148,
	5, 1740,
	-2, 2604,
	-1, 1149,
	5, 1736,
	-2, 2605,
	-1, 1150,
	5, 1686,
	-2, 2577,
	-1, 1151,
	5, 1687,
	-2, 2578,
	-1, 1152,
	5, 1688,
	-2, 2566,
	-1, 1180,
	5, 1723,
	-2, 2610,
	-1, 1181,
	5, 1724,
	-2, 2600,
	-1, 1182,
	5, 1725,
	544, 1725,
	-2, 2567,
	-1, 1183,
	5, 1726,
	544, 1726,
	-2, 2568,
	-1, 1220,
	583, 2199,
	-2, 2190,
	-1, 1221,
	583, 2200,
	-2, 2191,
	-1, 1321,
	186, 2531,
	506, 2531,
	566, 2531,
	585, 2531,
	-2, 0,
	-1, 1324,
	1, 662,
	586, 662,
	-2, 1353,
	-1, 1452,
	356, 2165,
	410, 2165,
	451, 2165,
	576, 2165,
	-2, 2155,
	-1, 1463,
	587, 2165,
	-2, 2166,
	-1, 1472,
	1, 1221,
	582, 1221,
	584, 1221,
	586, 1221,
	-2, 1486,
	-1, 1520,
	395, 1018,
	543, 1018,
	-2, 387,
	-1, 1537,
	43, 2163,
	-2, 984,
	-1, 1544,
	1, 1221,
	582, 1221,
	584, 1221,
	586, 1221,
	-2, 1486,
	-1, 1552,
	4, 1246,
	21, 1246,
	22, 1246,
	23, 1246,
	24, 1246,
	25, 1246,
	26, 1246,
	27, 1246,
	29, 1246,
	30, 1246,
	36, 1246,
	41, 1246,
	42, 1246,
	44, 1246,
	45, 1246,
	46, 1246,
	47, 1246,
	48, 1246,
	49, 1246,
	50, 1246,
	51, 1246,
	53, 1246,
	54, 1246,
	55, 1246,
	56, 1246,
	58, 1246,
	59, 1246,
	60, 1246,
	61, 1246,
	62, 1246,
	63, 1246,
	64, 1246,
	68, 1246,
	69, 1246,
	70, 1246,
	71, 1246,
	73, 1246,
	74, 1246,
	75, 1246,
	79, 1246,
	80, 1246,
	81, 1246,
	82, 1246,
	83, 1246,
	84, 1246,
	85, 1246,
	88, 1246,
	89, 1246,
	90, 1246,
	91, 1246,
	92, 1246,
	94, 1246,
	96, 1246,
	97, 1246,
	98, 1246,
	99, 1246,
	100, 1246,
	101, 1246,
	103, 1246,
	104, 1246,
	105, 1246,
	107, 1246,
	108, 1246,
	109, 1246,
	117, 1246,
	118, 1246,
	119, 1246,
	120, 1246,
	121, 1246,
	123, 1246,
	124, 1246,
	125, 1246,
	127, 1246,
	128, 1246,
	129, 1246,
	131, 1246,
	132, 1246,
	133, 1246,
	135, 1246,
	136, 1246,
	137, 1246,
	140, 1246,
	141, 1246,
	142, 1246,
	144, 1246,
	145, 1246,
	147, 1246,
	148, 1246,
	149, 1246,
	151, 1246,
	152, 1246,
	153, 1246,
	154, 1246,
	155, 1246,
	156, 1246,
	157, 1246,
	158, 1246,
	159, 1246,
	160, 1246,
	161, 1246,
	162, 1246,
	163, 1246,
	164, 1246,
	165, 1246,
	166, 1246,
	174, 1246,
	175, 1246,
	176, 1246,
	177, 1246,
	181, 1246,
	183, 1246,
	184, 1246,
	188, 1246,
	189, 1246,
	190, 1246,
	191, 1246,
	192, 1246,
	193, 1246,
	194, 1246,
	195, 1246,
	196, 1246,
	197, 1246,
	198, 1246,
	199, 1246,
	200, 1246,
	202, 1246,
	203, 1246,
	205, 1246,
	206, 1246,
	208, 1246,
	209, 1246,
	210, 1246,
	211, 1246,
	212, 1246,
	213, 1246,
	214, 1246,
	215, 1246,
	216, 1246,
	218, 1246,
	219, 1246,
	221, 1246,
	222, 1246,
	223, 1246,
	224, 1246,
	229, 1246,
	230, 1246,
	231, 1246,
	232, 1246,
	235, 1246,
	236, 1246,
	237, 1246,
	239, 1246,
	241, 1246,
	242, 1246,
	244, 1246,
	246, 1246,
	247, 1246,
	248, 1246,
	250, 1246,
	254, 1246,
	255, 1246,
	256, 1246,
	257, 1246,
	258, 1246,
	259, 1246,
	261, 1246,
	262, 1246,
	263, 1246,
	265, 1246,
	266, 1246,
	268, 1246,
	269, 1246,
	272, 1246,
	276, 1246,
	277, 1246,
	278, 1246,
	281, 1246,
	282, 1246,
	283, 1246,
	284, 1246,
	286, 1246,
	287, 1246,
	288, 1246,
	289, 1246,
	290, 1246,
	291, 1246,
	292, 1246,
	293, 1246,
	294, 1246,
	295, 1246,
	296, 1246,
	297, 1246,
	298, 1246,
	299, 1246,
	300, 1246,
	301, 1246,
	302, 1246,
	303, 1246,
	304, 1246,
	305, 1246,
	306, 1246,
	307, 1246,
	309, 1246,
	311, 1246,
	312, 1246,
	313, 1246,
	314, 1246,
	315, 1246,
	316, 1246,
	317, 1246,
	318, 1246,
	319, 1246,
	320, 1246,
	321, 1246,
	322, 1246,
	324, 1246,
	325, 1246,
	329, 1246,
	330, 1246,
	332, 1246,
	333, 1246,
	334, 1246,
	335, 1246,
	336, 1246,
	339, 1246,
	341, 1246,
	343, 1246,
	344, 1246,
	345, 1246,
	348, 1246,
	349, 1246,
	350, 1246,
	352, 1246,
	354, 1246,
	355, 1246,
	356, 1246,
	357, 1246,
	358, 1246,
	359, 1246,
	360, 1246,
	361, 1246,
	362, 1246,
	363, 1246,
	364, 1246,
	365, 1246,
	367, 1246,
	368, 1246,
	369, 1246,
	370, 1246,
	371, 1246,
	372, 1246,
	373, 1246,
	374, 1246,
	375, 1246,
	376, 1246,
	377, 1246,
	378, 1246,
	379, 1246,
	380, 1246,
	381, 1246,
	383, 1246,
	384, 1246,
	386, 1246,
	387, 1246,
	388, 1246,
	389, 1246,
	390, 1246,
	391, 1246,
	392, 1246,
	393, 1246,
	394, 1246,
	395, 1246,
	396, 1246,
	397, 1246,
	399, 1246,
	401, 1246,
	402, 1246,
	403, 1246,
	408, 1246,
	410, 1246,
	411, 1246,
	412, 1246,
	413, 1246,
	414, 1246,
	415, 1246,
	416, 1246,
	417, 1246,
	418, 1246,
	420, 1246,
	421, 1246,
	422, 1246,
	424, 1246,
	425, 1246,
	426, 1246,
	427, 1246,
	428, 1246,
	429, 1246,
	431, 1246,
	432, 1246,
	433, 1246,
	434, 1246,
	435, 1246,
	436, 1246,
	437, 1246,
	438, 1246,
	439, 1246,
	440, 1246,
	441, 1246,
	442, 1246,
	444, 1246,
	445, 1246,
	446, 1246,
	447, 1246,
	448, 1246,
	449, 1246,
	451, 1246,
	452, 1246,
	453, 1246,
	454, 1246,
	455, 1246,
	456, 1246,
	458, 1246,
	459, 1246,
	460, 1246,
	461, 1246,
	462, 1246,
	463, 1246,
	464, 1246,
	466, 1246,
	468, 1246,
	469, 1246,
	470, 1246,
	471, 1246,
	472, 1246,
	473, 1246,
	474, 1246,
	475, 1246,
	476, 1246,
	477, 1246,
	478, 1246,
	479, 1246,
	480, 1246,
	481, 1246,
	482, 1246,
	483, 1246,
	485, 1246,
	486, 1246,
	488, 1246,
	489, 1246,
	491, 1246,
	492, 1246,
	493, 1246,
	494, 1246,
	495, 1246,
	496, 1246,
	497, 1246,
	498, 1246,
	499, 1246,
	501, 1246,
	502, 1246,
	503, 1246,
	504, 1246,
	505, 1246,
	507, 1246,
	509, 1246,
	510, 1246,
	511, 1246,
	512, 1246,
	513, 1246,
	514, 1246,
	516, 1246,
	517, 1246,
	518, 1246,
	519, 1246,
	521, 1246,
	522, 1246,
	525, 1246,
	526, 1246,
	527, 1246,
	528, 1246,
	529, 1246,
	530, 1246,
	531, 1246,
	533, 1246,
	536, 1246,
	537, 1246,
	538, 1246,
	539, 1246,
	540, 1246,
	541, 1246,
	543, 1246,
	544, 1246,
	545, 1246,
	546, 1246,
	548, 1246,
	553, 1246,
	554, 1246,
	555, 1246,
	556, 1246,
	557, 1246,
	558, 1246,
	-2, 0,
	-1, 1575,
	1, 532,
	582, 532,
	584, 532,
	586, 532,
	-2, 1457,
	-1, 1578,
	4, 2608,
	11, 2608,
	12, 2608,
	14, 2608,
	15, 2608,
	16, 2608,
	17, 2608,
	18, 2608,
	19, 2608,
	21, 2608,
	22, 2608,
	23, 2608,
	24, 2608,
	25, 2608,
	26, 2608,
	27, 2608,
	29, 2608,
	30, 2608,
	33, 2608,
	34, 2608,
	36, 2608,
	38, 2608,
	41, 2608,
	42, 2608,
	44, 2608,
	45, 2608,
	46, 2608,
	47, 2608,
	48, 2608,
	49, 2608,
	50, 2608,
	51, 2608,
	53, 2608,
	54, 2608,
	55, 2608,
	56, 2608,
	58, 2608,
	59, 2608,
	60, 2608,
	61, 2608,
	62, 2608,
	63, 2608,
	64, 2608,
	68, 2608,
	69, 2608,
	70, 2608,
	71, 2608,
	73, 2608,
	74, 2608,
	75, 2608,
	76, 2608,
	79, 2608,
	80, 2608,
	81, 2608,
	82, 2608,
	83, 2608,
	84, 2608,
	85, 2608,
	86, 2608,
	88, 2608,
	89, 2608,
	90, 2608,
	91, 2608,
	92, 2608,
	94, 2608,
	95, 2608,
	96, 2608,
	97, 2608,
	98, 2608,
	99, 2608,
	100, 2608,
	101, 2608,
	103, 2608,
	104, 2608,
	105, 2608,
	106, 2608,
	107, 2608,
	108, 2608,
	109, 2608,
	117, 2608,
	118, 2608,
	119, 2608,
	120, 2608,
	121, 2608,
	123, 2608,
	124, 2608,
	125, 2608,
	127, 2608,
	128, 2608,
	129, 2608,
	131, 2608,
	132, 2608,
	133, 2608,
	135, 2608,
	136, 2608,
	137, 2608,
	140, 2608,
	141, 2608,
	142, 2608,
	144, 2608,
	145, 2608,
	147, 2608,
	148, 2608,
	149, 2608,
	151, 2608,
	152, 2608,
	153, 2608,
	154, 2608,
	155, 2608,
	156, 2608,
	157, 2608,
	158, 2608,
	159, 2608,
	160, 2608,
	161, 2608,
	162, 2608,
	163, 2608,
	164, 2608,
	165, 2608,
	166, 2608,
	170, 2608,
	171, 2608,
	172, 2608,
	173, 2608,
	174, 2608,
	175, 2608,
	176, 2608,
	177, 2608,
	180, 2608,
	181, 2608,
	183, 2608,
	184, 2608,
	187, 2608,
	188, 2608,
	189, 2608,
	190, 2608,
	191, 2608,
	192, 2608,
	193, 2608,
	194, 2608,
	195, 2608,
	196, 2608,
	197, 2608,
	198, 2608,
	199, 2608,
	200, 2608,
	202, 2608,
	203, 2608,
	205, 2608,
	206, 2608,
	208, 2608,
	209, 2608,
	210, 2608,
	211, 2608,
	212, 2608,
	213, 2608,
	214, 2608,
	215, 2608,
	216, 2608,
	217, 2608,
	218, 2608,
	219, 2608,
	220, 2608,
	221, 2608,
	222, 2608,
	223, 2608,
	224, 2608,
	226, 2608,
	227, 2608,
	229, 2608,
	230, 2608,
	231, 2608,
	232, 2608,
	234, 2608,
	235, 2608,
	236, 2608,
	237, 2608,
	239, 2608,
	241, 2608,
	242, 2608,
	243, 2608,
	244, 2608,
	245, 2608,
	246, 2608,
	247, 2608,
	248, 2608,
	249, 2608,
	250, 2608,
	252, 2608,
	253, 2608,
	254, 2608,
	255, 2608,
	256, 2608,
	257, 2608,
	258, 2608,
	259, 2608,
	261, 2608,
	262, 2608,
	263, 2608,
	265, 2608,
	266, 2608,
	267, 2608,
	268, 2608,
	269, 2608,
	270, 2608,
	272, 2608,
	276, 2608,
	277, 2608,
	278, 2608,
	281, 2608,
	282, 2608,
	283, 2608,
	284, 2608,
	285, 2608,
	286, 2608,
	287, 2608,
	288, 2608,
	289, 2608,
	290, 2608,
	291, 2608,
	292, 2608,
	293, 2608,
	294, 2608,
	295, 2608,
	296, 2608,
	297, 2608,
	298, 2608,
	299, 2608,
	300, 2608,
	301, 2608,
	302, 2608,
	303, 2608,
	304, 2608,
	305, 2608,
	306, 2608,
	307, 2608,
	309, 2608,
	310, 2608,
	311, 2608,
	312, 2608,
	313, 2608,
	314, 2608,
	315, 2608,
	316, 2608,
	317, 2608,
	318, 2608,
	319, 2608,
	320, 2608,
	321, 2608,
	322, 2608,
	324, 2608,
	325, 2608,
	328, 2608,
	329, 2608,
	330, 2608,
	332, 2608,
	333, 2608,
	334, 2608,
	335, 2608,
	336, 2608,
	339, 2608,
	343, 2608,
	344, 2608,
	345, 2608,
	346, 2608,
	348, 2608,
	349, 2608,
	350, 2608,
	352, 2608,
	354, 2608,
	355, 2608,
	356, 2608,
	357, 2608,
	358, 2608,
	359, 2608,
	360, 2608,
	361, 2608,
	362, 2608,
	363, 2608,
	364, 2608,
	365, 2608,
	367, 2608,
	368, 2608,
	369, 2608,
	370, 2608,
	371, 2608,
	372, 2608,
	373, 2608,
	374, 2608,
	375, 2608,
	376, 2608,
	377, 2608,
	378, 2608,
	379, 2608,
	380, 2608,
	381, 2608,
	383, 2608,
	384, 2608,
	386, 2608,
	387, 2608,
	388, 2608,
	389, 2608,
	390, 2608,
	391, 2608,
	392, 2608,
	393, 2608,
	394, 2608,
	395, 2608,
	396, 2608,
	397, 2608,
	399, 2608,
	401, 2608,
	402, 2608,
	403, 2608,
	408, 2608,
	409, 2608,
	410, 2608,
	411, 2608,
	412, 2608,
	413, 2608,
	414, 2608,
	415, 2608,
	416, 2608,
	417, 2608,
	418, 2608,
	420, 2608,
	421, 2608,
	422, 2608,
	423, 2608,
	424, 2608,
	425, 2608,
	426, 2608,
	427, 2608,
	428, 2608,
	429, 2608,
	430, 2608,
	431, 2608,
	432, 2608,
	433, 2608,
	434, 2608,
	435, 2608,
	436, 2608,
	437, 2608,
	438, 2608,
	439, 2608,
	440, 2608,
	441, 2608,
	442, 2608,
	444, 2608,
	445, 2608,
	446, 2608,
	447, 2608,
	448, 2608,
	449, 2608,
	451, 2608,
	452, 2608,
	453, 2608,
	454, 2608,
	455, 2608,
	456, 2608,
	457, 2608,
	458, 2608,
	459, 2608,
	460, 2608,
	461, 2608,
	462, 2608,
	463, 2608,
	464, 2608,
	466, 2608,
	468, 2608,
	469, 2608,
	470, 2608,
	471, 2608,
	472, 2608,
	473, 2608,
	474, 2608,
	475, 2608,
	476, 2608,
	477, 2608,
	478, 2608,
	479, 2608,
	480, 2608,
	481, 2608,
	482, 2608,
	483, 2608,
	485, 2608,
	486, 2608,
	488, 2608,
	489, 2608,
	491, 2608,
	492, 2608,
	493, 2608,
	494, 2608,
	495, 2608,
	496, 2608,
	497, 2608,
	498, 2608,
	499, 2608,
	501, 2608,
	502, 2608,
	503, 2608,
	504, 2608,
	505, 2608,
	507, 2608,
	509, 2608,
	510, 2608,
	511, 2608,
	512, 2608,
	513, 2608,
	514, 2608,
	516, 2608,
	517, 2608,
	518, 2608,
	519, 2608,
	521, 2608,
	522, 2608,
	525, 2608,
	526, 2608,
	527, 2608,
	528, 2608,
	529, 2608,
	530, 2608,
	531, 2608,
	533, 2608,
	536, 2608,
	537, 2608,
	538, 2608,
	539, 2608,
	540, 2608,
	541, 2608,
	543, 2608,
	544, 2608,
	545, 2608,
	546, 2608,
	548, 2608,
	553, 2608,
	554, 2608,
	555, 2608,
	556, 2608,
	557, 2608,
	558, 2608,
	559, 2608,
	561, 2608,
	564, 2608,
	565, 2608,
	566, 2608,
	567, 2608,
	568, 2608,
	569, 2608,
	571, 2608,
	572, 2608,
	573, 2608,
	574, 2608,
	575, 2608,
	576, 2608,
	577, 2608,
	578, 2608,
	579, 2608,
	581, 2608,
	584, 2608,
	585, 2608,
	587, 2608,
	588, 2608,
	-2, 0,
	-1, 1583,
	186, 2491,
	506, 2491,
	566, 2491,
	585, 2491,
	-2, 0,
	-1, 1632,
	388, 843,
	449, 843,
	489, 843,
	511, 843,
	-2, 0,
	-1, 1659,
	1, 838,
	582, 838,
	584, 838,
	586, 838,
	-2, 0,
	-1, 1660,
	1, 876,
	582, 876,
	584, 876,
	586, 876,
	-2, 0,
	-1, 1661,
	1, 884,
	582, 884,
	584, 884,
	586, 884,
	-2, 0,
	-1, 1664,
	1, 847,
	582, 847,
	584, 847,
	586, 847,
	-2, 0,
	-1, 1666,
	1, 851,
	582, 851,
	584, 851,
	586, 851,
	-2, 0,
	-1, 1672,
	1, 858,
	582, 858,
	584, 858,
	586, 858,
	-2, 0,
	-1, 1701,
	1, 2553,
	582, 2553,
	584, 2553,
	585, 2553,
	586, 2553,
	-2, 910,
	-1, 1702,
	1, 2488,
	582, 2488,
	584, 2488,
	585, 2488,
	586, 2488,
	-2, 911,
	-1, 1706,
	1, 923,
	582, 923,
	584, 923,
	586, 923,
	-2, 0,
	-1, 1721,
	1, 1348,
	586, 1348,
	-2, 1353,
	-1, 1724,
	169, 1500,
	182, 1500,
	271, 1500,
	337, 1500,
	-2, 1438,
	-1, 1818,
	150, 1459,
	169, 1459,
	182, 1459,
	238, 1459,
	271, 1459,
	337, 1459,
	347, 1459,
	523, 1459,
	-2, 1901,
	-1, 1878,
	584, 2051,
	-2, 0,
	-1, 1913,
	150, 1459,
	169, 1459,
	182, 1459,
	238, 1459,
	271, 1459,
	337, 1459,
	347, 1459,
	523, 1459,
	-2, 1587,
	-1, 1947,
	506, 2488,
	585, 2488,
	588, 2488,
	-2, 0,
	-1, 1964,
	583, 1728,
	-2, 1716,
	-1, 1995,
	186, 2488,
	585, 2488,
	588, 2488,
	-2, 0,
	-1, 2043,
	1, 664,
	586, 664,
	-2, 1353,
	-1, 2169,
	220, 246,
	-2, 2198,
	-1, 2170,
	220, 247,
	-2, 295,
	-1, 2274,
	1, 840,
	582, 840,
	584, 840,
	586, 840,
	-2, 0,
	-1, 2275,
	1, 878,
	582, 878,
	584, 878,
	586, 878,
	-2, 0,
	-1, 2276,
	1, 886,
	582, 886,
	584, 886,
	586, 886,
	-2, 0,
	-1, 2277,
	1, 925,
	582, 925,
	584, 925,
	586, 925,
	-2, 0,
	-1, 2310,
	1, 860,
	582, 860,
	584, 860,
	586, 860,
	-2, 0,
	-1, 2366,
	428, 1527,
	429, 1527,
	-2, 1761,
	-1, 2397,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1781,
	-1, 2398,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1782,
	-1, 2399,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1783,
	-1, 2400,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1784,
	-1, 2401,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1785,
	-1, 2402,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1786,
	-1, 2403,
	95, 0,
	252, 0,
	253, 0,
	568, 0,
	569, 0,
	-2, 1787,
	-1, 2404,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1788,
	-1, 2416,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1800,
	-1, 2417,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1801,
	-1, 2418,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1802,
	-1, 2421,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1807,
	-1, 2427,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1811,
	-1, 2429,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1819,
	-1, 2430,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1820,
	-1, 2431,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1821,
	-1, 2432,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1822,
	-1, 2568,
	5, 2202,
	186, 2062,
	583, 2199,
	-2, 2190,
	-1, 2569,
	186, 2063,
	-2, 2559,
	-1, 2570,
	186, 2064,
	-2, 2385,
	-1, 2571,
	186, 2065,
	-2, 2272,
	-1, 2572,
	186, 2066,
	-2, 2326,
	-1, 2573,
	186, 2067,
	-2, 2370,
	-1, 2574,
	186, 2068,
	-2, 2486,
	-1, 2575,
	186, 2069,
	-2, 1884,
	-1, 2645,
	1, 1588,
	2, 1588,
	106, 1588,
	150, 1588,
	169, 1588,
	182, 1588,
	187, 1588,
	204, 1588,
	207, 1588,
	234, 1588,
	238, 1588,
	249, 1588,
	267, 1588,
	271, 1588,
	310, 1588,
	337, 1588,
	341, 1588,
	347, 1588,
	419, 1588,
	423, 1588,
	523, 1588,
	534, 1588,
	550, 1588,
	551, 1588,
	552, 1588,
	562, 1588,
	582, 1588,
	584, 1588,
	586, 1588,
	588, 1588,
	-2, 1587,
	-1, 2658,
	583, 2171,
	-2, 2185,
	-1, 2660,
	1, 312,
	550, 312,
	-2, 1486,
	-1, 2687,
	583, 1727,
	-2, 1717,
	-1, 2864,
	1, 1221,
	582, 1221,
	584, 1221,
	586, 1221,
	-2, 1486,
	-1, 3033,
	342, 1530,
	-2, 2598,
	-1, 3034,
	342, 1531,
	-2, 2471,
	-1, 3038,
	428, 2128,
	429, 2128,
	-2, 1882,
	-1, 3039,
	428, 2132,
	429, 2132,
	-2, 1883,
	-1, 3040,
	428, 2129,
	429, 2129,
	-2, 1882,
	-1, 3041,
	428, 2133,
	429, 2133,
	-2, 1883,
	-1, 3054,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1809,
	-1, 3055,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1813,
	-1, 3061,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1815,
	-1, 3277,
	1, 661,
	582, 661,
	584, 661,
	586, 661,
	-2, 1353,
	-1, 3431,
	43, 2163,
	-2, 985,
	-1, 3436,
	1, 1221,
	582, 1221,
	584, 1221,
	586, 1221,
	-2, 1486,
	-1, 3541,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1817,
	-1, 3548,
	243, 0,
	245, 0,
	328, 0,
	-2, 1836,
	-1, 3615,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1865,
	-1, 3616,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1866,
	-1, 3617,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1867,
	-1, 3621,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1871,
	-1, 3622,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1872,
	-1, 3623,
	14, 0,
	15, 0,
	16, 0,
	564, 0,
	565, 0,
	566, 0,
	-2, 1873,
	-1, 3669,
	583, 2172,
	-2, 2186,
	-1, 3829,
	585, 2716,
	-2, 1412,
	-1, 3887,
	243, 0,
	245, 0,
	328, 0,
	-2, 1837,
	-1, 3890,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1840,
	-1, 3891,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1842,
	-1, 3983,
	585, 2187,
	-2, 1256,
	-1, 4126,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1841,
	-1, 4127,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	217, 0,
	220, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 1843,
	-1, 4138,
	243, 0,
	-2, 1874,
	-1, 4306,
	243, 0,
	-2, 1875,
	-1, 4488,
	50, 0,
	217, 0,
	270, 0,
	457, 0,
	559, 0,
	567, 0,
	-2, 2562,
}

const sqlPrivate = 57344

const sqlLast = 122273

var sqlAct = [...]int{
	266, 4341, 3420, 2929, 4670, 3188, 4584, 4481, 4540, 2942,
	4181, 4363, 3419, 4487, 4228, 4469, 4480, 4498, 4384, 4611,
	4333, 4456, 2166, 4437, 2091, 4359, 4440, 2749, 4499, 4420,
	4500, 4553, 4235, 2793, 4167, 4259, 3580, 4082, 4310, 4486,
	3979, 4077, 4043, 3533, 4186, 4147, 1484, 2376, 4023, 2241,
	3821, 3870, 4115, 3299, 3453, 3813, 4064, 1293, 4244, 1286,
	4066, 4057, 1224, 3757, 1951, 3980, 1297, 3964, 2600, 3047,
	3359, 2444, 1101, 4273, 1733, 794, 2250, 1046, 3447, 4087,
	2384, 3794, 3779, 3777, 3415, 2377, 2099, 757, 2918, 2826,
	3302, 1599, 1919, 3405, 3492, 2025, 2964, 1357, 3494, 2888,
	2951, 794, 3231, 2953, 4143, 3211, 3672, 3926, 2899, 1449,
	2813, 3203, 3171, 3869, 869, 2950, 1037, 2961, 2944, 2913,
	2915, 2930, 1888, 3192, 4585, 2160, 1213, 3321, 4, 2161,
	2110, 2751, 2638, 3170, 1045, 175, 2214, 2488, 1864, 4311,
	3640, 2381, 1952, 2486, 1826, 2457, 3031, 3296, 2841, 3194,
	1539, 789, 2960, 1291, 2137, 108, 260, 1456, 2892, 2156,
	2144, 1097, 3288, 2900, 1204, 1094, 2079, 1340, 2083, 2023,
	2640, 2792, 1721, 1279, 2597, 2618, 1265, 3238, 2477, 2441,
	2069, 1889, 2365, 2348, 1090, 2346, 2000, 1288, 1099, 3417,
	2923, 2637, 1276, 258, 2671, 1576, 2201, 1542, 2774, 1597,
	795, 796, 4385, 1096, 688, 1908, 2737, 1326, 259, 2670,
	2954, 1859, 791, 1207, 1898, 2564, 1186, 2627, 2458, 1905,
	674, 1640, 862, 1811, 696, 2530, 2480, 184, 175, 2248,
	1734, 800, 2608, 1221, 1735, 739, 185, 1299, 1672, 2347,
	1659, 2349, 751, 1479, 1574, 2200, 1203, 2098, 2227, 1567,
	4541, 2370, 1075, 2001, 1998, 691, 1209, 800, 44, 699,
	43, 41, 32, 30, 28, 1740, 1184, 932, 1720, 3082,
	1490, 952, 3654, 714, 3655, 843, 3078, 4683, 4673, 2014,
	2014, 2617, 3472, 803, 3190, 4658, 2014, 1748, 1749, 2617,
	2014, 2014, 2014, 4657, 4647, 4629, 4627, 2617, 2175, 4185,
	4185, 4572, 4529, 4522, 4520, 2175, 4530, 2617, 2617, 803,
	1779, 4517, 4514, 884, 4484, 4518, 4515, 1751, 2175, 4483,
	4482, 4477, 3462, 2175, 2035, 2035, 4476, 4467, 4465, 4462,
	2035, 4185, 4185, 4247, 4435, 4409, 4402, 4401, 4185, 2678,
	2617, 2617, 1042, 4396, 4395, 1041, 3463, 4185, 4185, 1748,
	1749, 4389, 1750, 4355, 4308, 2175, 4290, 4034, 2678, 4287,
	3856, 4284, 1770, 2175, 4237, 4185, 3143, 3144, 4238, 3161,
	3162, 3163, 1779, 4201, 4200, 3947, 4192, 2175, 2175, 1751,
	2175, 4191, 1201, 4184, 3261, 4185, 4154, 4185, 3885, 4128,
	2175, 3260, 1335, 2678, 1216, 1187, 1187, 4106, 4095, 3246,
	4018, 2035, 3472, 1022, 2617, 4003, 3889, 1335, 1041, 2617,
	2678, 2175, 1021, 2698, 1750, 3837, 3831, 1219, 2249, 3489,
	3489, 3792, 3664, 3662, 3647, 3793, 3665, 3663, 2617, 2610,
	3564, 3560, 3472, 3644, 2175, 2617, 1215, 1243, 3488, 3479,
	3187, 3158, 3489, 3480, 2617, 1236, 1773, 1774, 1775, 1776,
	3182, 1031, 2674, 3181, 2617, 1036, 1756, 2617, 3134, 3132,
	3124, 3122, 3135, 3133, 3125, 2617, 3093, 3091, 1748, 1749,
	2617, 2968, 2940, 3092, 2939, 2035, 2237, 2175, 2237, 2721,
	2677, 2032, 3046, 2617, 2678, 2668, 1144, 2617, 2175, 2617,
	2662, 1779, 1188, 2616, 2175, 2697, 2236, 2617, 1751, 1190,
	2237, 1191, 1778, 1780, 4410, 4312, 230, 4303, 4291, 1504,
	4247, 2035, 3644, 2609, 1073, 4075, 4034, 4004, 1756, 3856,
	3480, 2816, 2103, 2483, 2736, 2048, 2013, 1237, 2029, 2032,
	2894, 2174, 2836, 1750, 1483, 3149, 2734, 1884, 1478, 3742,
	3536, 3512, 1906, 1770, 2149, 1642, 2654, 2653, 2652, 3464,
	2651, 2650, 1767, 232, 1192, 1189, 1030, 230, 1029, 1028,
	1027, 1771, 1026, 1025, 1778, 1780, 1748, 1749, 3465, 1781,
	1782, 1783, 1791, 1792, 1793, 1024, 1020, 1019, 3008, 3468,
	1018, 1017, 1016, 1015, 1483, 1014, 2617, 1013, 1784, 1779,
	1748, 1749, 1012, 1011, 1010, 1009, 1751, 1008, 3164, 1007,
	1006, 1005, 231, 1004, 232, 1797, 3883, 930, 929, 928,
	927, 2484, 926, 1779, 925, 224, 924, 923, 922, 921,
	1751, 920, 919, 1771, 225, 918, 917, 1773, 1774, 1775,
	1776, 1750, 2015, 2015, 916, 915, 914, 1756, 913, 2015,
	3159, 1770, 912, 2015, 2015, 2015, 186, 2513, 911, 3081,
	1767, 1748, 1749, 231, 910, 1750, 1665, 909, 908, 907,
	906, 905, 904, 903, 902, 901, 900, 899, 898, 897,
	887, 886, 882, 881, 875, 874, 861, 860, 817, 816,
	815, 1751, 814, 1778, 1780, 1777, 806, 93, 805, 1748,
	1749, 804, 2485, 772, 2482, 763, 762, 186, 761, 745,
	4179, 254, 253, 252, 251, 250, 1772, 249, 248, 1765,
	1766, 247, 1779, 246, 245, 244, 1750, 243, 242, 1751,
	1503, 241, 240, 239, 238, 1773, 1774, 1775, 1776, 237,
	236, 235, 1302, 1099, 863, 1756, 234, 233, 3942, 3901,
	3685, 4089, 1771, 3658, 3490, 2908, 3234, 1217, 3462, 3104,
	3087, 2991, 3185, 2875, 1750, 2012, 1099, 1606, 1867, 1756,
	1099, 73, 2682, 866, 865, 1866, 1867, 2659, 1772, 1909,
	2644, 2499, 1788, 1866, 2077, 1798, 1360, 2497, 74, 2034,
	1360, 1778, 1780, 4505, 2244, 3160, 1237, 1870, 1302, 4294,
	1592, 3186, 1747, 2032, 78, 1865, 1932, 4485, 1794, 1837,
	1795, 3797, 1486, 2708, 2013, 1778, 1780, 1765, 1766, 1099,
	2032, 1099, 4292, 1099, 2029, 2697, 2341, 1346, 1223, 1302,
	1756, 4464, 4370, 1828, 4315, 1786, 4300, 1835, 4142, 1330,
	4096, 2609, 4074, 1339, 87, 1200, 1492, 1344, 3952, 1237,
	1771, 1464, 2487, 3924, 3923, 1302, 3917, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 3916, 3915, 1756, 3908,
	3252, 3907, 3905, 2926, 1771, 1302, 1777, 3900, 2243, 1610,
	1302, 3897, 3896, 3791, 867, 3689, 1459, 3688, 1099, 3687,
	1099, 3668, 3635, 1796, 1302, 3634, 3633, 1772, 107, 3556,
	1099, 1482, 1099, 93, 104, 1491, 3552, 3229, 3178, 3169,
	3142, 1785, 1270, 1273, 1778, 1780, 1548, 1551, 3139, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 3138, 3155,
	3156, 3157, 1828, 1287, 1283, 1324, 3154, 3152, 3153, 3145,
	3146, 3147, 3148, 3150, 3151, 3143, 3144, 1492, 1302, 1353,
	1470, 1446, 1451, 4091, 3136, 3131, 3130, 3143, 3144, 3129,
	230, 94, 1454, 3126, 800, 1830, 1099, 2481, 3123, 1099,
	3103, 3086, 3079, 1771, 1777, 2941, 3143, 3144, 2645, 230,
	1492, 1452, 2470, 1747, 1463, 1287, 1829, 2217, 1827, 4316,
	1746, 2182, 148, 2691, 2180, 1772, 4677, 4621, 2910, 4620,
	3143, 3144, 3798, 1319, 1579, 1581, 1537, 232, 1481, 1480,
	175, 175, 4586, 4539, 4537, 1225, 803, 3582, 1611, 1772,
	4427, 4362, 1789, 4351, 4348, 1568, 232, 4347, 4346, 3740,
	1042, 4327, 3158, 1554, 4314, 1768, 1764, 4313, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 4288, 4272, 4271,
	1287, 1287, 2447, 4257, 4254, 3798, 231, 4253, 3183, 1498,
	4248, 4197, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 224,
	4175, 4140, 4123, 4122, 4103, 231, 4102, 1330, 225, 4060,
	1330, 4035, 3941, 3922, 3857, 1492, 3851, 2453, 224, 1596,
	1748, 1749, 3848, 1099, 3728, 3727, 3712, 225, 3711, 1099,
	186, 3709, 3650, 3638, 3547, 97, 1815, 230, 3491, 3473,
	3143, 3144, 1577, 1779, 3149, 3439, 1570, 3374, 1772, 186,
	1751, 3334, 3301, 3254, 1787, 3108, 3149, 3107, 3102, 1762,
	1763, 1769, 1790, 1768, 1764, 3070, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 3149, 2887, 1873, 1725, 3911,
	1748, 1749, 1872, 3910, 232, 1750, 1871, 183, 100, 1591,
	103, 1310, 1719, 1752, 1753, 1754, 1755, 1757, 1758, 3149,
	3226, 1605, 2680, 1868, 1860, 1858, 1044, 2689, 2688, 2656,
	1751, 2649, 2615, 1817, 2495, 230, 1931, 1887, 1882, 1881,
	230, 2909, 1681, 868, 1880, 4090, 1879, 1878, 148, 1877,
	1876, 1875, 1874, 231, 1099, 1099, 1099, 1855, 230, 1854,
	1099, 1616, 1853, 1667, 1852, 1750, 224, 1221, 1851, 1221,
	1850, 1633, 1849, 1848, 1847, 225, 1754, 1755, 1757, 1758,
	1846, 3159, 232, 4063, 1360, 1668, 1845, 232, 3948, 2512,
	1844, 230, 1843, 1099, 1842, 1841, 794, 186, 1042, 1830,
	3159, 1816, 1969, 794, 1814, 232, 1302, 1809, 151, 1756,
	1886, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 1318, 1241,
	1497, 3893, 1722, 187, 3159, 2245, 1232, 3684, 1895, 3149,
	3661, 231, 1935, 1022, 3653, 3090, 231, 1730, 232, 1729,
	4159, 4178, 1021, 1948, 224, 2647, 1573, 1869, 3950, 224,
	1996, 1724, 3683, 225, 231, 1778, 1780, 1829, 225, 3250,
	1726, 1943, 3143, 3144, 1812, 1743, 1744, 224, 4618, 1927,
	230, 4610, 1302, 4006, 1963, 864, 225, 1892, 1893, 1099,
	2925, 1343, 2814, 1302, 4349, 1940, 4249, 231, 2068, 4240,
	4239, 4094, 1341, 4037, 4036, 1335, 230, 2068, 186, 39,
	224, 1099, 2068, 4005, 4295, 175, 3944, 1360, 3860, 225,
	1909, 1861, 1862, 2498, 1771, 1573, 1187, 232, 1916, 2496,
	3859, 2093, 3858, 3656, 1042, 3475, 3160, 4293, 1216, 3474,
	1216, 186, 2066, 1867, 3159, 4245, 3801, 3534, 1717, 1632,
	1866, 1342, 2054, 232, 3752, 3160, 1335, 2041, 3366, 2797,
	3128, 1219, 800, 1219, 1938, 3127, 3052, 2779, 1330, 800,
	1936, 1338, 3725, 3484, 2040, 1836, 231, 3303, 1002, 3160,
	1215, 1850, 1215, 1939, 1850, 1917, 1199, 1839, 2075, 224,
	2266, 4551, 1914, 1463, 1907, 2242, 1748, 1749, 225, 3422,
	1335, 3421, 231, 4236, 3251, 1682, 1641, 4525, 4510, 4497,
	3406, 2965, 1642, 2162, 803, 224, 2017, 3805, 1944, 3788,
	186, 803, 1885, 1003, 225, 1992, 1751, 3754, 3749, 3733,
	3509, 3275, 4144, 1911, 3190, 3584, 2478, 2146, 4506, 1926,
	1463, 1925, 1924, 1922, 1921, 1920, 186, 1302, 1302, 4171,
	2830, 2687, 1883, 2004, 2483, 1863, 3413, 1360, 2211, 2103,
	230, 1750, 1547, 1949, 2043, 1475, 1313, 1269, 4519, 1772,
	3147, 3148, 3150, 3151, 4516, 3096, 2039, 3154, 3152, 3153,
	3145, 3146, 3147, 3148, 3150, 3151, 2822, 3337, 2833, 3160,
	230, 3458, 2218, 2828, 3704, 1572, 3154, 3152, 3153, 3145,
	3146, 3147, 3148, 3150, 3151, 4507, 4342, 232, 4078, 4434,
	4324, 2131, 3306, 2136, 3720, 2948, 2141, 3398, 2922, 2004,
	2776, 3152, 3153, 3145, 3146, 3147, 3148, 3150, 3151, 4570,
	2004, 4569, 3528, 1620, 3767, 4672, 2037, 232, 2167, 2172,
	4218, 3976, 2484, 3993, 3279, 2821, 2046, 1514, 1679, 3143,
	3144, 1302, 983, 1302, 1000, 1302, 231, 1522, 2722, 2740,
	2071, 2061, 230, 4211, 1572, 1756, 2055, 4600, 998, 224,
	2316, 1302, 1302, 2314, 2738, 3972, 996, 230, 225, 2775,
	2740, 4203, 1302, 2109, 4032, 856, 231, 2753, 4031, 1680,
	3765, 3764, 994, 991, 1302, 2738, 1302, 1302, 1302, 224,
	186, 3766, 1040, 3756, 3748, 800, 3747, 3745, 225, 232,
	2164, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 794,
	3744, 2207, 1343, 2485, 232, 2482, 1476, 2129, 2252, 3973,
	186, 3732, 3153, 3145, 3146, 3147, 3148, 3150, 3151, 3699,
	2212, 3698, 3402, 1523, 2265, 3401, 3245, 1678, 1092, 1481,
	1480, 2323, 3101, 3100, 2224, 3099, 3098, 803, 231, 3056,
	2839, 2044, 2838, 2835, 2824, 4172, 3707, 2812, 2811, 2807,
	2806, 224, 2247, 231, 2805, 2128, 2681, 2140, 1758, 2784,
	225, 2783, 1342, 2744, 2669, 2428, 224, 2270, 857, 1723,
	1039, 1217, 2173, 1217, 3281, 225, 2526, 2525, 1966, 3303,
	2756, 2386, 186, 3143, 3144, 2210, 1042, 1099, 1042, 1099,
	2232, 2919, 4121, 1618, 3364, 2221, 1099, 186, 3149, 1969,
	1969, 1360, 2242, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 2258, 1099,
	2234, 1099, 1099, 1099, 1099, 2193, 2192, 2781, 4601, 2777,
	1560, 2253, 1559, 2487, 2330, 800, 1518, 3957, 1570, 2358,
	2229, 2226, 2229, 1099, 2230, 2345, 1099, 1099, 1577, 1336,
	1577, 1963, 1963, 3510, 1099, 2238, 1319, 2239, 1099, 1041,
	1099, 1099, 1325, 2777, 2100, 2060, 2059, 2338, 1360, 2068,
	2070, 4605, 2262, 1255, 1099, 1099, 1099, 1099, 1715, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 803, 2257, 3968,
	2191, 2292, 2356, 1634, 3969, 988, 1558, 2096, 1557, 3956,
	3151, 1531, 2801, 2729, 2274, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 2459, 2460, 1343, 4007, 1099, 2356,
	4335, 2382, 2383, 2333, 2794, 2795, 2101, 2102, 2459, 2475,
	1221, 3365, 3149, 2794, 2795, 2443, 1336, 1360, 2794, 2795,
	1613, 2478, 1228, 2310, 3336, 3971, 1221, 1663, 2481, 2369,
	2443, 2354, 1477, 1663, 2521, 2583, 2097, 2755, 2134, 1677,
	2971, 3974, 1099, 1360, 1716, 1332, 4606, 2661, 1536, 3011,
	2767, 1691, 2320, 2567, 2567, 2581, 1342, 2459, 2354, 3029,
	2601, 2603, 1728, 4631, 1226, 4569, 2607, 2063, 3044, 2342,
	1336, 2766, 3717, 2231, 2357, 2344, 2350, 2343, 1022, 2725,
	1042, 1022, 1022, 3988, 2474, 1927, 2829, 2373, 2275, 1042,
	2374, 2375, 2832, 1042, 1660, 1642, 1642, 1317, 2727, 1752,
	1753, 1754, 1755, 1757, 1758, 1630, 2632, 1230, 2523, 3518,
	2657, 2332, 2103, 2524, 4120, 1038, 2527, 3159, 2528, 2529,
	4337, 859, 858, 3278, 2831, 1337, 2487, 3729, 1662, 2827,
	3517, 2279, 1332, 2728, 1662, 770, 2019, 2352, 1614, 2021,
	2282, 3005, 2273, 4030, 2455, 2026, 1302, 1302, 2739, 2028,
	2276, 3746, 3573, 2726, 2031, 4608, 1661, 3014, 2472, 2624,
	3743, 3570, 3400, 3362, 2834, 1187, 1617, 3970, 978, 2780,
	2111, 1216, 1229, 2355, 895, 1916, 2329, 1897, 2804, 2754,
	2065, 1042, 1333, 1309, 2623, 4503, 1332, 1216, 1360, 2675,
	3715, 1334, 1035, 2115, 1219, 175, 2782, 3043, 1543, 2711,
	2355, 2576, 992, 2683, 2717, 1619, 3977, 2592, 1674, 2563,
	1219, 2605, 1337, 1215, 2743, 2743, 992, 2315, 2064, 2646,
	2313, 2631, 1969, 2636, 992, 2625, 2642, 2643, 4581, 1215,
	2629, 2630, 1869, 2084, 1330, 2613, 2614, 4589, 2085, 1914,
	993, 992, 3571, 768, 2672, 686, 2353, 1541, 2283, 1287,
	2112, 2339, 3145, 3146, 3147, 3148, 3150, 3151, 1901, 1489,
	1360, 1496, 3160, 1502, 4588, 2451, 1337, 2667, 4614, 1333,
	3455, 681, 2449, 2353, 1302, 854, 4634, 853, 1334, 2179,
	2178, 1695, 4558, 3986, 979, 3875, 2719, 1517, 3456, 3013,
	1099, 1099, 2694, 1099, 1963, 2745, 2713, 1287, 978, 3774,
	1861, 1862, 2487, 2702, 2690, 1904, 3874, 2705, 1520, 2706,
	2425, 2710, 2696, 2693, 4406, 794, 2742, 1302, 2720, 3010,
	1899, 2147, 1035, 1333, 1254, 3976, 888, 4661, 1590, 2014,
	1595, 2714, 1334, 1287, 1287, 2712, 3353, 2159, 1902, 4416,
	1604, 2802, 1609, 4607, 3290, 1966, 1966, 2150, 1302, 3502,
	2786, 2086, 2157, 3775, 2825, 2116, 2891, 4504, 3495, 3972,
	1302, 1335, 1302, 3965, 2787, 2723, 3455, 4282, 2090, 2933,
	2770, 3377, 4163, 2331, 3730, 2741, 3782, 1302, 2815, 4336,
	3963, 1900, 2147, 2785, 2962, 3780, 2809, 2906, 3345, 3967,
	3354, 2158, 2487, 2866, 3773, 1058, 2803, 2808, 2796, 2798,
	2799, 2800, 2758, 2761, 1666, 2748, 3145, 3146, 3147, 3148,
	3150, 3151, 3205, 3973, 979, 4343, 2972, 2973, 1099, 3012,
	4274, 2117, 2118, 3036, 3037, 1452, 4357, 2979, 2980, 2981,
	1543, 3352, 2143, 4275, 1227, 2439, 3987, 2123, 3067, 2087,
	2092, 800, 3346, 2810, 2992, 2113, 2993, 2867, 1335, 2820,
	3280, 2966, 1463, 769, 3497, 3966, 4502, 2142, 2902, 3058,
	4471, 1689, 4472, 989, 2437, 2151, 4276, 3065, 2947, 3496,
	735, 800, 1099, 980, 2442, 2937, 1239, 2423, 1099, 1099,
	2426, 175, 1901, 3344, 2135, 1481, 2873, 2114, 2865, 2989,
	2138, 2124, 4557, 803, 1903, 4052, 3783, 1856, 4404, 3716,
	2885, 771, 1335, 2898, 3248, 767, 2106, 2870, 1615, 2895,
	2281, 3318, 2872, 1727, 2935, 2072, 2073, 4612, 2660, 2101,
	2102, 1690, 2088, 803, 1217, 1692, 2917, 2896, 4278, 1904,
	2422, 2928, 2122, 1099, 1099, 2740, 3016, 4405, 3018, 1099,
	1217, 2147, 4117, 2938, 2626, 2949, 896, 3291, 1316, 2139,
	2759, 4277, 1099, 1099, 2004, 2094, 1629, 1631, 1099, 1099,
	2107, 2967, 1902, 3871, 1099, 2936, 2988, 3317, 4279, 2094,
	4133, 889, 890, 1099, 1099, 1099, 4580, 4454, 2997, 1099,
	2999, 2084, 3001, 2278, 2340, 1577, 2085, 1463, 2994, 1099,
	4445, 4015, 807, 2969, 2272, 1287, 2995, 704, 2974, 4532,
	2975, 2105, 2119, 980, 2433, 3204, 1099, 3062, 3059, 4533,
	2469, 682, 2986, 3968, 981, 1808, 3024, 3019, 3969, 3284,
	3021, 4613, 3035, 2434, 3106, 2996, 3089, 2998, 2435, 3000,
	4635, 3063, 2440, 2628, 1463, 3068, 1463, 2641, 3026, 3025,
	3322, 4622, 3084, 3085, 4062, 1041, 4067, 3088, 3586, 3009,
	3865, 3680, 2369, 1244, 3030, 4615, 3876, 3530, 3027, 3045,
	1923, 3781, 1693, 3782, 1647, 4068, 982, 4364, 1738, 3971,
	4501, 4568, 3780, 3498, 3499, 3500, 3501, 4116, 2120, 2154,
	4662, 4566, 2015, 4383, 4256, 3974, 3819, 3080, 683, 4556,
	3443, 3324, 2199, 1894, 1242, 1235, 1099, 1099, 1099, 2086,
	673, 1737, 2126, 1737, 2450, 1099, 1099, 1099, 1966, 4053,
	1099, 876, 3796, 1042, 1732, 3057, 2090, 2424, 1903, 3872,
	1099, 1221, 1360, 2372, 2104, 2056, 1099, 3239, 1099, 3197,
	3198, 4194, 4193, 2152, 4265, 1050, 684, 1221, 685, 4323,
	3820, 3674, 4640, 3760, 981, 3920, 2089, 1033, 3703, 978,
	3297, 1694, 3991, 3444, 3323, 1360, 3435, 2053, 3293, 3990,
	891, 892, 2907, 2901, 2889, 3095, 2225, 1221, 2103, 2219,
	1360, 2213, 2205, 1035, 2153, 3569, 2185, 2132, 3180, 2362,
	4365, 1511, 3695, 3783, 3624, 1246, 3639, 2087, 2092, 1969,
	3502, 4421, 3531, 1360, 3199, 3675, 982, 2743, 3822, 3495,
	1737, 4386, 2321, 1736, 744, 1736, 2049, 4083, 1302, 1302,
	4280, 3970, 2436, 3219, 4118, 3064, 4281, 2619, 2886, 1034,
	2127, 3676, 2438, 3673, 3877, 3066, 3244, 1257, 4234, 2788,
	4232, 1099, 2051, 4174, 3309, 3305, 3209, 808, 809, 2760,
	3304, 3050, 3028, 2263, 3652, 1099, 3202, 3201, 4531, 3258,
	3977, 2622, 3228, 1664, 2093, 1302, 2666, 2665, 2664, 1039,
	1969, 1963, 2663, 1552, 3787, 979, 2893, 1566, 4229, 1738,
	2088, 1738, 3778, 2052, 4065, 3285, 3286, 1553, 1099, 3175,
	3176, 3177, 1216, 2703, 3233, 1564, 3207, 894, 2093, 2707,
	4330, 3225, 2621, 3232, 1302, 3497, 3307, 2620, 1216, 3311,
	3237, 3191, 1736, 2718, 4182, 1219, 4044, 3878, 3276, 1330,
	3496, 3206, 2764, 3328, 3269, 2363, 1302, 2094, 1302, 3710,
	3218, 1219, 3282, 3308, 1215, 1808, 3313, 3485, 1216, 3315,
	2223, 3249, 1963, 3208, 2146, 1360, 3255, 3256, 3217, 3257,
	1215, 3409, 3921, 2146, 3220, 3221, 1302, 4639, 3781, 3700,
	1302, 1219, 3241, 3242, 3243, 4577, 877, 878, 3294, 3989,
	4361, 3223, 4100, 3224, 4161, 4169, 3380, 3326, 3382, 1897,
	1215, 3386, 3625, 1302, 4366, 3392, 3696, 2970, 811, 810,
	1302, 3626, 1302, 2871, 2869, 2251, 1360, 3339, 1623, 3270,
	3361, 3266, 3378, 794, 3262, 3263, 4431, 4424, 4418, 3493,
	2789, 2790, 3298, 1648, 1302, 3277, 3927, 4183, 3327, 3641,
	4170, 4331, 1463, 1463, 1711, 3283, 1302, 2494, 4449, 3677,
	4579, 1713, 2325, 4521, 3375, 3418, 3357, 1710, 4350, 1708,
	1957, 3343, 4099, 1221, 2125, 1686, 3367, 3451, 812, 813,
	1684, 3292, 4139, 3919, 3786, 2004, 2004, 3325, 3172, 1658,
	1901, 3173, 3427, 3240, 980, 3341, 1656, 3335, 1302, 1302,
	2135, 3546, 1654, 2962, 3507, 1652, 1650, 3348, 3506, 3526,
	3259, 3404, 2962, 3407, 3137, 3434, 3351, 3355, 3069, 3349,
	3342, 1302, 3442, 3350, 4425, 1463, 1939, 3368, 2133, 743,
	3376, 2890, 2004, 3460, 2089, 2823, 3363, 1904, 4332, 3395,
	3399, 3471, 3356, 2778, 3358, 1565, 3389, 3387, 1644, 3701,
	2210, 3393, 1899, 2692, 3498, 3499, 3500, 3501, 1639, 1637,
	2334, 1360, 1562, 1563, 1360, 893, 1934, 1930, 1714, 2130,
	1902, 2004, 3388, 1601, 2312, 3525, 3394, 1732, 3511, 3007,
	3449, 2786, 3006, 3403, 3411, 879, 880, 3445, 3213, 800,
	2977, 2351, 1673, 2004, 2287, 2004, 3452, 1099, 3432, 2204,
	2134, 3431, 2184, 1099, 1099, 3430, 1997, 1099, 1099, 1099,
	1840, 1099, 1612, 1900, 1535, 2493, 3504, 2635, 3469, 3470,
	1099, 1969, 4496, 2004, 175, 175, 3483, 2004, 3457, 1099,
	3487, 1042, 1099, 1032, 1216, 981, 4016, 3466, 1360, 4017,
	3379, 803, 2327, 3751, 3450, 1712, 2326, 1099, 3459, 3750,
	4002, 1709, 3481, 1707, 990, 1360, 1287, 1219, 4417, 1685,
	3524, 3523, 4081, 4022, 1683, 1969, 1969, 1099, 1099, 3961,
	1099, 1099, 1099, 1657, 3818, 1217, 1215, 3809, 3763, 3723,
	1655, 3721, 3532, 3214, 3702, 3549, 1653, 982, 1099, 1651,
	1649, 1217, 1099, 1963, 1969, 1969, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099, 1099,
	1099, 1099, 1099, 1099, 1099, 1966, 1099, 3598, 3520, 3599,
	3505, 1217, 3438, 1099, 1099, 1969, 1903, 3529, 3433, 3423,
	1099, 2920, 1643, 3212, 2912, 3521, 2905, 1963, 1963, 2897,
	2883, 1099, 1638, 1636, 3527, 2868, 1561, 3503, 2709, 2704,
	3558, 3559, 1221, 1221, 2311, 2183, 1099, 2181, 1463, 2163,
	2148, 2121, 2108, 2095, 2036, 3216, 1963, 1963, 2033, 3514,
	2030, 3515, 2027, 3516, 3554, 2022, 2020, 2016, 2007, 4554,
	4076, 3566, 3448, 4545, 1741, 1360, 1966, 3565, 1196, 1942,
	3576, 4570, 3670, 3572, 3574, 3575, 3581, 1963, 3636, 3390,
	3048, 4067, 2057, 3022, 2157, 2337, 3588, 2382, 3589, 995,
	997, 999, 3020, 3595, 1197, 3596, 4459, 4105, 4098, 3597,
	4068, 4097, 4029, 3953, 3601, 2963, 2076, 1516, 1107, 2740,
	2740, 3657, 1099, 3628, 4267, 3603, 2382, 3604, 2765, 4260,
	3830, 2222, 3678, 3679, 2738, 2762, 731, 2103, 1705, 1706,
	1277, 2335, 1099, 2277, 1278, 3629, 3690, 3691, 3692, 2307,
	4458, 2306, 3637, 2284, 3994, 1748, 1749, 3632, 175, 4024,
	1635, 3215, 2768, 4302, 262, 262, 262, 3928, 676, 677,
	3906, 692, 676, 692, 702, 1099, 1099, 742, 3645, 3646,
	3320, 760, 2769, 2791, 1742, 3049, 766, 2336, 1748, 1749,
	1745, 3648, 3649, 262, 2769, 1311, 3659, 1245, 4573, 687,
	4564, 3759, 255, 1216, 1216, 4526, 2882, 3391, 1820, 2309,
	787, 3806, 1825, 873, 1198, 1099, 1278, 2206, 1751, 262,
	1750, 1322, 2830, 3758, 844, 1278, 1219, 1219, 2828, 2837,
	2817, 2819, 3686, 2771, 2773, 4411, 4377, 4371, 4329, 1302,
	4251, 4609, 1302, 3734, 2818, 1215, 1215, 2772, 4227, 670,
	4162, 3816, 3808, 1750, 698, 3795, 3660, 3667, 3437, 1969,
	2927, 2606, 3643, 2042, 3738, 3739, 3741, 1957, 1957, 1950,
	4451, 3706, 4180, 3247, 4638, 4452, 4373, 1217, 3753, 1483,
	3761, 3143, 3144, 3755, 1748, 1749, 4451, 3898, 3726, 3815,
	1302, 4452, 3731, 2732, 2733, 4583, 1099, 1622, 3265, 2730,
	2731, 3267, 3268, 1621, 1221, 1099, 3271, 3832, 3272, 2489,
	3273, 3682, 2732, 2730, 2522, 1302, 1302, 1302, 1688, 4252,
	4212, 1687, 2786, 3839, 4026, 4021, 4020, 3894, 3681, 3577,
	2933, 1963, 1302, 3384, 3381, 1834, 1833, 4624, 4590, 4415,
	4414, 3802, 3785, 676, 676, 4413, 4317, 1302, 4230, 3827,
	4207, 262, 4160, 1360, 4158, 4156, 3824, 2962, 2876, 3803,
	4055, 2879, 4041, 2881, 3992, 3949, 3854, 3843, 3836, 3790,
	3719, 3713, 3441, 3440, 3314, 3264, 3004, 1360, 2985, 3772,
	1099, 1099, 2984, 3807, 2983, 2982, 1099, 1099, 1969, 3855,
	3789, 1099, 1099, 2911, 1099, 2884, 2763, 1966, 1099, 3823,
	2700, 3298, 3810, 3770, 2695, 2685, 2684, 2924, 3826, 1099,
	2924, 2673, 2454, 2328, 1287, 3812, 2308, 2305, 3828, 2304,
	3825, 2303, 2302, 2301, 3833, 1099, 2220, 3834, 3771, 2194,
	2190, 3838, 2189, 3844, 3845, 2188, 3846, 2187, 3863, 2186,
	3861, 1966, 1966, 3852, 3849, 3879, 3850, 3853, 2010, 2009,
	2008, 2006, 3888, 1941, 1704, 1703, 1645, 1530, 1529, 1528,
	1963, 1527, 3892, 1526, 1525, 1216, 3880, 2210, 1524, 1519,
	1966, 1966, 1515, 1513, 3776, 1512, 1469, 3784, 3873, 2004,
	1468, 1467, 1466, 1351, 1350, 1221, 3002, 1349, 1219, 1348,
	1347, 1315, 1314, 1221, 1264, 1263, 1262, 1360, 1261, 1360,
	1260, 1966, 1259, 1258, 1256, 1251, 1221, 1215, 1250, 1249,
	1248, 1247, 1179, 2047, 1001, 987, 4334, 1302, 1302, 3975,
	2324, 1697, 92, 1521, 830, 86, 1360, 2155, 3718, 957,
	4448, 1505, 4356, 838, 4433, 3804, 3316, 3933, 2840, 2286,
	1646, 2288, 3227, 2648, 4403, 3902, 3105, 4309, 4132, 2492,
	1221, 1838, 1221, 3184, 3918, 88, 1217, 1217, 1083, 1129,
	4051, 4050, 3962, 3705, 2952, 4048, 3954, 3955, 4047, 1954,
	1956, 1049, 1363, 1302, 4470, 3862, 2058, 1089, 2074, 2067,
	2686, 3868, 2566, 1360, 1106, 1302, 3936, 1103, 1302, 3995,
	1958, 1960, 3984, 3930, 3931, 1105, 3939, 1360, 1104, 3985,
	3935, 3932, 1959, 1857, 1102, 1953, 3814, 3925, 3940, 2931,
	3467, 1571, 3958, 175, 3997, 3998, 1569, 3996, 3943, 959,
	2062, 2448, 2476, 3094, 1831, 1064, 1085, 1302, 1302, 2473,
	1957, 4025, 3232, 4027, 3929, 1240, 1074, 1063, 3210, 3189,
	3454, 3666, 3934, 3960, 2361, 848, 1216, 1302, 3140, 2479,
	1231, 2589, 2582, 2578, 1216, 3274, 2921, 1718, 4146, 1360,
	1810, 4045, 2932, 1345, 1302, 1067, 4028, 1216, 2446, 1219,
	1822, 3074, 2371, 3461, 3230, 2679, 3981, 1219, 3981, 4455,
	3585, 2198, 1195, 1358, 4039, 1194, 4019, 1457, 1215, 1221,
	1219, 1238, 4042, 1193, 4439, 4436, 1215, 2145, 4014, 1302,
	1302, 1302, 3847, 3416, 2050, 2724, 1800, 3424, 1079, 1215,
	4033, 1216, 1360, 1216, 1462, 4073, 3195, 3486, 4038, 4040,
	1532, 765, 4011, 4187, 1099, 1099, 1099, 1091, 1799, 4101,
	4085, 2861, 2860, 4000, 1219, 4326, 1219, 4046, 4104, 4061,
	1331, 4088, 1360, 1329, 1328, 1966, 4009, 1099, 4079, 4012,
	1099, 1099, 1327, 1215, 4086, 1215, 4070, 4597, 4660, 4001,
	1099, 3714, 229, 1969, 3042, 1739, 1731, 226, 1099, 1099,
	228, 4010, 227, 4084, 4013, 4056, 3671, 3236, 4524, 3736,
	3408, 23, 2210, 1360, 22, 1302, 4072, 21, 112, 4093,
	4124, 4110, 4108, 42, 20, 4107, 150, 1233, 128, 4112,
	1287, 147, 146, 120, 145, 144, 1360, 143, 142, 4119,
	2004, 149, 141, 140, 1099, 3981, 135, 139, 1217, 138,
	137, 136, 2004, 1099, 134, 2004, 132, 4141, 133, 127,
	1253, 1099, 4135, 4069, 1969, 1963, 131, 130, 129, 126,
	125, 124, 262, 1099, 262, 262, 1099, 1282, 262, 1292,
	1216, 123, 4129, 122, 121, 119, 118, 4165, 1099, 117,
	1312, 116, 3693, 115, 114, 1360, 3694, 113, 4190, 760,
	4155, 756, 1302, 1219, 1966, 4152, 4153, 1302, 1302, 753,
	61, 60, 111, 110, 2004, 19, 4166, 40, 14, 65,
	66, 18, 1215, 262, 13, 262, 262, 1282, 35, 262,
	262, 4173, 4164, 91, 102, 1292, 1963, 3722, 101, 3724,
	36, 99, 98, 34, 4242, 17, 262, 4217, 1485, 16,
	15, 96, 1360, 4206, 95, 1302, 33, 4233, 3418, 31,
	11, 9, 4204, 4113, 2452, 4208, 8, 37, 1918, 1509,
	12, 5, 180, 1221, 1221, 4214, 179, 182, 178, 1820,
	181, 3329, 3330, 90, 3331, 3332, 3333, 4222, 1534, 4223,
	177, 1292, 176, 1099, 1099, 262, 262, 4231, 1282, 4225,
	89, 29, 10, 172, 4226, 4250, 4196, 4266, 3762, 4246,
	1099, 1969, 4264, 4285, 4286, 4241, 4270, 760, 4243, 262,
	262, 4262, 3800, 81, 174, 173, 4289, 3369, 3370, 1217,
	3371, 3372, 3373, 2588, 171, 4263, 4269, 1217, 4088, 4221,
	170, 4258, 873, 4268, 4283, 169, 1099, 82, 79, 1099,
	1217, 168, 85, 167, 80, 84, 1221, 83, 27, 4209,
	264, 4298, 4299, 4219, 4261, 6, 64, 7, 1221, 4114,
	3508, 105, 106, 38, 4322, 4307, 77, 76, 75, 26,
	63, 25, 213, 1963, 212, 211, 210, 4297, 4220, 209,
	208, 207, 206, 201, 1217, 200, 1217, 205, 203, 3981,
	3981, 202, 4318, 4321, 204, 199, 2093, 216, 4345, 215,
	1099, 1099, 221, 220, 219, 4344, 262, 218, 217, 4301,
	1099, 4338, 214, 4360, 223, 1221, 198, 4339, 1221, 197,
	196, 194, 1302, 190, 1216, 1216, 262, 189, 193, 2004,
	195, 192, 1302, 1302, 191, 188, 4352, 222, 4354, 72,
	165, 166, 71, 164, 163, 162, 4394, 1219, 1219, 1302,
	161, 1933, 160, 159, 158, 4380, 70, 24, 4382, 2,
	4367, 1, 4372, 1099, 1099, 4375, 1215, 1215, 4374, 4379,
	0, 0, 3981, 1099, 4388, 1463, 0, 4368, 4369, 0,
	4246, 4390, 0, 4391, 3981, 0, 0, 0, 4387, 4392,
	4393, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4399, 0, 4400, 0, 4398, 0, 4397, 1216, 4426, 1099,
	1099, 4408, 1099, 0, 0, 0, 4430, 1957, 4412, 1216,
	0, 0, 0, 1217, 2366, 0, 0, 3071, 3072, 0,
	1219, 4407, 4453, 0, 0, 0, 0, 0, 1062, 0,
	4450, 3981, 1219, 4428, 3981, 4429, 0, 0, 0, 1215,
	4457, 0, 0, 0, 0, 4475, 0, 4479, 4438, 4441,
	0, 1215, 0, 4447, 0, 1099, 1099, 1099, 0, 1966,
	0, 0, 1287, 4460, 2078, 4478, 1216, 4442, 0, 1216,
	4446, 0, 0, 4466, 0, 0, 4474, 4443, 1957, 0,
	0, 0, 0, 0, 0, 1099, 0, 4513, 0, 1219,
	0, 0, 1219, 4508, 0, 4492, 4493, 0, 4495, 4494,
	0, 0, 0, 0, 0, 0, 0, 0, 1215, 0,
	0, 1215, 0, 0, 676, 4527, 0, 4536, 0, 0,
	0, 0, 0, 0, 4509, 4534, 0, 0, 0, 0,
	1966, 0, 0, 4550, 0, 262, 0, 262, 4538, 1099,
	0, 262, 0, 4548, 4535, 4511, 0, 4473, 0, 0,
	4549, 0, 4555, 2584, 1485, 1282, 262, 4543, 262, 0,
	4544, 3166, 3167, 3168, 262, 1485, 692, 0, 0, 4571,
	0, 262, 1485, 0, 4561, 4562, 4546, 4547, 4575, 4567,
	4565, 4563, 4552, 0, 0, 0, 2011, 0, 1221, 4576,
	1221, 4574, 2093, 0, 0, 4578, 0, 4592, 262, 4582,
	0, 0, 4587, 4595, 2176, 262, 4604, 4593, 4457, 4360,
	4591, 0, 0, 4599, 4603, 4602, 0, 4438, 0, 0,
	4441, 0, 0, 0, 0, 0, 0, 4617, 4594, 0,
	4596, 4542, 0, 0, 0, 0, 0, 0, 0, 4598,
	4616, 0, 4619, 0, 0, 760, 0, 0, 0, 0,
	0, 0, 0, 0, 4625, 4632, 0, 0, 4626, 0,
	1099, 1099, 4628, 0, 0, 4630, 0, 1217, 1217, 1099,
	4633, 1099, 1099, 4636, 0, 0, 0, 1966, 0, 4650,
	4642, 4651, 4645, 4623, 0, 4654, 4656, 4648, 4655, 4653,
	0, 0, 0, 4649, 0, 0, 0, 2588, 0, 0,
	4652, 0, 4664, 0, 0, 4663, 4659, 4666, 0, 2933,
	4668, 0, 4669, 0, 3981, 4671, 3981, 4667, 0, 0,
	4674, 4665, 0, 0, 0, 0, 0, 0, 1099, 4679,
	4675, 4681, 0, 0, 4676, 4682, 0, 4684, 4685, 4643,
	4644, 4671, 4678, 0, 0, 0, 0, 0, 0, 1216,
	1217, 1216, 0, 0, 0, 0, 0, 0, 0, 0,
	2084, 0, 1217, 0, 0, 2085, 0, 0, 0, 0,
	0, 0, 1219, 0, 1219, 0, 0, 2588, 2588, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1215, 0, 1215, 0, 0, 4680, 0, 0, 1957,
	0, 4198, 4199, 0, 262, 0, 0, 262, 0, 0,
	0, 0, 2171, 0, 0, 0, 0, 0, 73, 1217,
	0, 2856, 1217, 0, 0, 0, 0, 3811, 0, 4213,
	0, 4215, 0, 4216, 0, 74, 3143, 3144, 0, 3161,
	3162, 3163, 0, 1957, 1957, 0, 0, 0, 0, 0,
	0, 78, 0, 0, 2848, 2846, 0, 0, 3884, 0,
	262, 2850, 2852, 2842, 262, 0, 0, 0, 2385, 0,
	262, 0, 1957, 1957, 0, 0, 262, 0, 2086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 262, 0, 262, 2090, 0, 3864, 676, 0,
	262, 0, 0, 1957, 0, 0, 0, 0, 0, 0,
	0, 3158, 760, 0, 0, 0, 873, 0, 0, 0,
	0, 2588, 2588, 2588, 0, 0, 0, 0, 0, 0,
	0, 867, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 1282, 262, 107, 0, 0, 0, 0,
	93, 104, 0, 0, 0, 2490, 0, 0, 760, 0,
	0, 0, 0, 0, 0, 262, 2087, 2092, 0, 0,
	0, 0, 2285, 0, 0, 0, 0, 262, 262, 0,
	262, 0, 262, 0, 262, 0, 262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	1062, 0, 0, 0, 0, 3149, 0, 0, 94, 2317,
	0, 0, 2318, 0, 2319, 0, 1444, 0, 0, 0,
	1444, 0, 0, 4353, 0, 0, 262, 0, 0, 0,
	0, 0, 0, 3542, 3543, 0, 0, 3032, 0, 0,
	2844, 0, 0, 0, 0, 0, 0, 0, 0, 2088,
	2658, 2858, 742, 0, 0, 0, 760, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3164, 0,
	0, 0, 2857, 2849, 2847, 2851, 2853, 2843, 2845, 2859,
	0, 0, 0, 0, 0, 0, 0, 2855, 0, 0,
	0, 0, 2082, 0, 0, 0, 2094, 0, 0, 0,
	0, 0, 1217, 0, 1217, 0, 0, 0, 0, 0,
	3159, 0, 0, 0, 0, 0, 0, 2584, 2584, 0,
	2862, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613,
	3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623,
	0, 3627, 0, 0, 0, 0, 2080, 1957, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4054, 0, 2081, 0, 0,
	0, 0, 0, 0, 0, 2735, 0, 0, 4071, 0,
	0, 0, 0, 0, 183, 100, 0, 103, 0, 0,
	0, 0, 0, 676, 0, 0, 0, 0, 0, 0,
	0, 4092, 0, 0, 0, 0, 1748, 1749, 262, 0,
	0, 0, 230, 0, 0, 0, 0, 676, 0, 0,
	868, 0, 0, 0, 262, 148, 676, 0, 0, 1779,
	0, 0, 0, 4523, 0, 3160, 1751, 0, 262, 0,
	0, 2584, 2584, 2584, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2089, 262, 1292, 1957, 0, 0, 232,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 2863, 0, 0, 0, 0, 0,
	0, 1770, 0, 2854, 0, 151, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	187, 0, 262, 1292, 0, 0, 692, 0, 231, 0,
	0, 0, 0, 0, 0, 0, 2699, 0, 0, 0,
	0, 224, 262, 0, 0, 262, 0, 0, 0, 262,
	225, 262, 0, 0, 1748, 1749, 1282, 0, 262, 262,
	0, 1292, 1292, 2715, 3545, 0, 0, 0, 262, 0,
	0, 0, 186, 0, 0, 0, 0, 1779, 0, 0,
	0, 0, 0, 0, 1751, 1773, 1774, 1775, 1776, 3155,
	3156, 3157, 0, 2588, 2588, 1756, 3154, 3152, 3153, 3145,
	3146, 3147, 3148, 3150, 3151, 0, 0, 0, 0, 0,
	0, 0, 0, 2752, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 262, 0, 0, 0, 0, 1770,
	0, 0, 0, 0, 0, 0, 0, 262, 1767, 0,
	0, 1778, 1780, 0, 0, 0, 0, 0, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1444, 0, 0, 1765, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
	2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588, 2588,
	1771, 2588, 0, 262, 2874, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 1774, 1775, 1776, 0, 0, 0,
	0, 73, 0, 1756, 0, 0, 0, 0, 1485, 0,
	0, 262, 0, 262, 0, 0, 0, 0, 74, 0,
	262, 0, 0, 0, 1296, 0, 0, 0, 0, 0,
	2916, 0, 0, 0, 78, 0, 0, 0, 0, 0,
	2752, 0, 676, 0, 0, 0, 0, 0, 0, 1778,
	1780, 2945, 873, 0, 2752, 2752, 0, 0, 0, 0,
	0, 1062, 0, 0, 0, 0, 0, 1444, 0, 0,
	0, 262, 0, 0, 87, 1765, 1766, 0, 0, 0,
	1472, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	262, 1282, 262, 0, 0, 0, 1485, 4358, 1485, 1292,
	262, 0, 0, 1282, 1777, 1282, 0, 1282, 1771, 0,
	0, 1507, 0, 0, 867, 0, 0, 0, 0, 0,
	0, 4378, 0, 0, 0, 1772, 0, 0, 107, 0,
	0, 1957, 0, 93, 104, 0, 0, 1544, 262, 262,
	262, 262, 1282, 0, 0, 1282, 0, 262, 0, 0,
	262, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1585, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1598, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 262,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1957, 0, 0, 0, 0, 1444, 0, 3196,
	0, 0, 0, 2584, 2584, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1624, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 4461, 3222, 0, 0, 0, 0, 4463, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 3235, 0, 0,
	0, 0, 0, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 0, 1485, 0,
	3253, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
	2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584, 2584,
	0, 2584, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1957,
	0, 0, 0, 73, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 4138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 78, 183, 100, 0,
	103, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754,
	1755, 1757, 1758, 0, 0, 0, 3143, 3144, 0, 3161,
	3162, 3163, 0, 0, 0, 230, 0, 0, 0, 262,
	0, 0, 0, 868, 0, 0, 87, 0, 148, 4176,
	0, 0, 0, 0, 0, 262, 0, 0, 0, 0,
	676, 0, 0, 0, 0, 676, 0, 0, 676, 0,
	0, 676, 676, 0, 0, 0, 0, 676, 0, 0,
	0, 0, 232, 0, 0, 262, 867, 0, 0, 0,
	0, 1444, 0, 3235, 0, 0, 0, 0, 1485, 0,
	107, 3158, 0, 0, 0, 93, 104, 0, 151, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1485, 0, 187, 0, 0, 0, 0, 0, 0,
	0, 231, 0, 262, 0, 0, 0, 262, 262, 0,
	0, 0, 0, 0, 224, 0, 0, 0, 0, 0,
	0, 0, 0, 225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 94, 0, 0, 2752, 2752, 262, 0,
	3289, 0, 0, 157, 0, 1582, 2752, 0, 1444, 3300,
	0, 73, 0, 46, 45, 0, 0, 2752, 3300, 0,
	2752, 3300, 0, 0, 3300, 3149, 0, 0, 74, 0,
	0, 152, 0, 0, 0, 0, 0, 0, 0, 262,
	262, 3289, 0, 262, 78, 4306, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 67, 0, 0, 1457, 0,
	0, 1358, 48, 3289, 154, 262, 0, 3360, 3360, 0,
	0, 1282, 0, 0, 0, 0, 0, 1444, 0, 0,
	0, 0, 47, 0, 87, 0, 0, 2752, 3164, 2752,
	0, 3385, 2752, 3289, 0, 0, 2752, 3289, 0, 0,
	0, 0, 0, 1444, 0, 0, 0, 0, 0, 0,
	50, 68, 0, 0, 73, 0, 0, 2676, 0, 51,
	0, 0, 0, 0, 57, 0, 0, 262, 155, 0,
	3159, 74, 0, 0, 0, 3562, 49, 97, 107, 0,
	0, 262, 3412, 93, 104, 3414, 2752, 78, 0, 262,
	0, 0, 3578, 262, 0, 0, 1292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 0, 0, 0, 0, 2916, 0, 0, 1282,
	0, 262, 0, 52, 2752, 2588, 676, 87, 0, 183,
	100, 0, 103, 2752, 0, 0, 0, 0, 0, 1896,
	0, 94, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 262, 2916, 0, 230, 2916, 0,
	0, 0, 0, 0, 0, 868, 0, 867, 0, 0,
	148, 0, 0, 0, 0, 0, 0, 0, 0, 2588,
	0, 107, 0, 0, 0, 0, 93, 104, 1444, 0,
	3513, 0, 0, 0, 0, 0, 0, 3143, 3144, 0,
	3161, 3162, 3163, 0, 232, 0, 0, 3519, 0, 0,
	1282, 262, 0, 262, 0, 3160, 0, 0, 0, 1282,
	0, 0, 3669, 1131, 0, 0, 0, 0, 0, 0,
	151, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 94, 187, 0, 0, 0, 262,
	0, 0, 0, 231, 0, 0, 0, 1748, 1749, 0,
	1444, 0, 0, 1791, 1792, 1793, 224, 2240, 0, 0,
	0, 0, 3158, 0, 0, 225, 0, 0, 0, 0,
	1779, 0, 0, 1296, 2254, 97, 0, 1751, 0, 0,
	0, 0, 0, 0, 2256, 0, 1797, 186, 0, 0,
	0, 0, 53, 0, 0, 3583, 2264, 0, 2267, 2268,
	2269, 0, 0, 0, 0, 0, 56, 0, 0, 0,
	0, 59, 1750, 0, 0, 0, 0, 1048, 0, 0,
	69, 0, 1770, 0, 0, 0, 58, 183, 100, 0,
	103, 1767, 0, 0, 54, 2588, 773, 0, 156, 3155,
	3156, 3157, 0, 0, 0, 55, 3154, 3152, 3153, 3145,
	3146, 3147, 3148, 3150, 3151, 230, 3149, 0, 0, 0,
	0, 784, 0, 62, 0, 0, 0, 0, 148, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 153, 0, 0, 0, 0, 0, 0, 0,
	262, 262, 0, 0, 0, 0, 3165, 0, 0, 0,
	0, 0, 232, 0, 0, 0, 1773, 1774, 1775, 1776,
	0, 0, 676, 676, 0, 0, 1756, 0, 0, 3164,
	0, 0, 0, 0, 0, 0, 0, 0, 151, 0,
	183, 100, 0, 103, 1485, 1485, 0, 0, 0, 0,
	0, 0, 0, 187, 0, 0, 1222, 0, 1485, 1485,
	1485, 231, 0, 1788, 778, 2584, 1798, 0, 230, 0,
	785, 3159, 1778, 1780, 224, 0, 868, 0, 0, 0,
	0, 148, 0, 225, 783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 1766,
	0, 0, 0, 0, 0, 186, 0, 0, 3, 0,
	0, 0, 0, 0, 0, 232, 1786, 3143, 3144, 2584,
	3161, 3162, 3163, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 782, 0, 0, 760, 0, 0, 0, 3551,
	0, 151, 0, 0, 0, 0, 0, 0, 737, 0,
	0, 0, 0, 0, 0, 0, 187, 0, 0, 0,
	0, 0, 0, 0, 231, 0, 3360, 0, 1748, 1749,
	0, 0, 780, 0, 0, 0, 0, 224, 0, 262,
	0, 0, 0, 0, 0, 0, 225, 0, 0, 0,
	0, 1779, 3158, 0, 0, 0, 0, 0, 1751, 3289,
	0, 262, 0, 0, 0, 0, 0, 0, 1580, 0,
	0, 0, 262, 0, 0, 0, 3160, 0, 0, 0,
	0, 0, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 788, 262, 1750, 0, 0, 0, 262, 0, 0,
	0, 0, 262, 1770, 0, 0, 3938, 0, 0, 0,
	0, 0, 1767, 0, 0, 1777, 0, 0, 0, 0,
	0, 2752, 262, 0, 0, 0, 0, 0, 0, 0,
	0, 2945, 2945, 3951, 0, 0, 1772, 873, 873, 2752,
	0, 0, 0, 2916, 2916, 2584, 3149, 873, 2752, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 775, 0, 3540, 0, 0, 262,
	0, 0, 0, 0, 0, 0, 0, 0, 2716, 1296,
	0, 0, 1444, 0, 0, 0, 0, 1773, 1774, 1775,
	1776, 0, 0, 0, 779, 0, 0, 1756, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3164,
	3155, 3156, 3157, 0, 0, 1444, 0, 3154, 3152, 3153,
	3145, 3146, 3147, 3148, 3150, 3151, 0, 0, 736, 0,
	1444, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3903, 786, 1778, 1780, 0, 0, 0, 777, 0,
	0, 3159, 0, 1444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 1765,
	1766, 0, 0, 1790, 1768, 1764, 0, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0,
	0, 1062, 0, 0, 774, 0, 0, 0, 0, 0,
	0, 0, 1771, 262, 0, 1062, 2864, 0, 0, 1485,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 1358,
	0, 0, 781, 0, 262, 0, 0, 0, 0, 0,
	0, 0, 1307, 0, 0, 0, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 776, 0, 4130,
	0, 0, 0, 0, 0, 1048, 0, 2752, 2752, 1048,
	3360, 2752, 0, 0, 0, 0, 0, 0, 3983, 0,
	3983, 1485, 0, 0, 0, 0, 0, 0, 0, 0,
	2752, 0, 3300, 0, 0, 0, 1485, 1485, 262, 3289,
	4130, 0, 0, 0, 0, 1444, 3160, 0, 0, 0,
	0, 0, 3289, 0, 262, 3289, 0, 262, 1487, 2978,
	1493, 0, 1499, 2385, 0, 1222, 0, 0, 0, 0,
	0, 0, 2752, 0, 2752, 262, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1444, 1772, 0, 0,
	0, 0, 2752, 0, 0, 0, 0, 4058, 0, 1222,
	0, 0, 0, 1222, 0, 0, 0, 0, 262, 0,
	0, 1222, 2385, 0, 0, 0, 0, 1588, 262, 1593,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1602,
	0, 1607, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1222, 0, 0, 0, 0, 3983, 0, 0,
	1485, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	3155, 3156, 3157, 0, 0, 0, 0, 3154, 3152, 3153,
	3145, 3146, 3147, 3148, 3150, 3151, 0, 0, 1222, 0,
	0, 0, 0, 1222, 0, 1669, 0, 0, 1675, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 0,
	0, 0, 0, 0, 3143, 3144, 0, 3161, 3162, 3163,
	0, 1444, 0, 0, 1444, 1768, 1764, 0, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2752, 1222, 3300, 0, 0, 4168, 0, 0, 0, 0,
	0, 0, 0, 262, 0, 0, 0, 0, 0, 0,
	4188, 0, 4188, 0, 0, 0, 0, 1748, 1749, 3158,
	0, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1444, 0,
	0, 0, 0, 760, 0, 0, 0, 0, 0, 0,
	1779, 0, 0, 0, 1282, 1444, 0, 1751, 0, 0,
	0, 0, 1819, 0, 0, 0, 0, 0, 1832, 3289,
	0, 262, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4168, 1750, 0, 0, 0, 0, 0, 0, 2752,
	0, 0, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 4255, 0, 0,
	0, 1211, 0, 3149, 0, 0, 0, 0, 0, 1485,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3983, 3983, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 262,
	262, 0, 0, 0, 0, 3539, 0, 257, 257, 672,
	0, 0, 0, 1890, 1890, 1890, 0, 0, 0, 0,
	0, 0, 0, 3583, 0, 1444, 1773, 1774, 1775, 1776,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	3360, 4320, 0, 0, 0, 0, 0, 0, 4168, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3143, 3144, 3983, 3161, 3162, 3163, 3159, 0,
	0, 0, 0, 0, 0, 0, 3983, 0, 0, 0,
	0, 0, 1778, 1780, 3550, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1765, 1766,
	1222, 0, 1222, 0, 0, 0, 0, 4058, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 0,
	0, 0, 0, 3983, 0, 262, 3983, 3158, 0, 0,
	0, 1771, 0, 0, 0, 1970, 3300, 0, 0, 1222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1485, 0, 1485, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4422, 0, 0, 0,
	0, 0, 0, 3160, 0, 1222, 0, 0, 0, 4188,
	0, 0, 262, 0, 0, 3396, 1222, 0, 0, 0,
	0, 3149, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2752, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 3428, 0, 0, 0,
	0, 0, 262, 0, 0, 1777, 0, 0, 3436, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 3583,
	0, 0, 0, 0, 3164, 0, 0, 0, 0, 0,
	0, 0, 0, 1444, 0, 0, 1485, 0, 0, 0,
	3477, 3478, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1444, 0, 0,
	0, 0, 0, 262, 0, 0, 3159, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3155, 3156, 3157,
	0, 0, 0, 0, 3154, 3152, 3153, 3145, 3146, 3147,
	3148, 3150, 3151, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4168, 0, 0, 0, 0,
	1222, 1222, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2752,
	0, 0, 0, 0, 0, 0, 3983, 0, 3983, 0,
	0, 1485, 0, 0, 1768, 1764, 0, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1444, 0, 1444,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1485, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1444, 0, 0, 0,
	0, 3160, 0, 0, 1222, 0, 1222, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2945, 0, 0, 1222, 1222, 0, 0, 0, 0,
	2752, 0, 0, 0, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2945, 0, 1222, 0, 1222,
	1222, 1222, 0, 1444, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1444, 0, 0,
	0, 0, 0, 0, 0, 0, 2360, 0, 2364, 0,
	0, 0, 0, 0, 0, 2378, 0, 0, 0, 0,
	0, 0, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394,
	2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404,
	2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414,
	2415, 2416, 2417, 2418, 2419, 2420, 2421, 0, 2427, 1444,
	2429, 2430, 2431, 2432, 0, 3155, 3156, 3157, 0, 0,
	0, 0, 3154, 3152, 3153, 3145, 3146, 3147, 3148, 3150,
	3151, 0, 2456, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 2471, 0, 0,
	0, 0, 1970, 1970, 1222, 0, 0, 0, 0, 0,
	0, 0, 1444, 2501, 2504, 2507, 2510, 0, 2514, 2515,
	2516, 2517, 2518, 2519, 2520, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1268, 0, 1268, 1268, 1748,
	1749, 0, 1444, 0, 0, 0, 2580, 0, 2591, 2593,
	2598, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1444, 0, 0, 1355, 0, 0, 0,
	0, 1222, 1461, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 1444, 0, 0, 0,
	0, 3768, 0, 0, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792,
	1793, 0, 0, 0, 0, 0, 1062, 0, 0, 0,
	0, 0, 0, 1222, 1784, 1779, 0, 0, 0, 0,
	1222, 0, 1751, 0, 0, 1444, 0, 0, 0, 1222,
	0, 1797, 0, 0, 0, 0, 0, 3060, 0, 0,
	0, 0, 1586, 1587, 0, 0, 1222, 3840, 3841, 3842,
	0, 0, 0, 0, 0, 0, 0, 1750, 1773, 1774,
	1775, 1776, 0, 0, 1296, 0, 0, 1770, 1756, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 1444, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	1749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1778, 1780, 0, 0, 0, 0,
	0, 0, 1779, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	1765, 1766, 0, 0, 0, 0, 0, 0, 0, 1222,
	1222, 1773, 1774, 1775, 1776, 0, 0, 0, 0, 0,
	0, 1756, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 1222, 0, 0, 0, 0, 0, 0, 1788, 0,
	0, 1798, 0, 0, 0, 0, 0, 1778, 1780, 2877,
	2878, 0, 2880, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1794, 1970, 1795, 0, 0, 0,
	0, 0, 0, 1765, 1766, 0, 0, 3053, 0, 0,
	1062, 1062, 0, 0, 0, 0, 0, 0, 0, 3945,
	3946, 1786, 0, 0, 0, 0, 0, 0, 1773, 1774,
	1775, 1776, 0, 1222, 0, 0, 1771, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 1778, 1780, 0, 0, 1772, 0,
	1222, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3003, 0, 0,
	1765, 1766, 0, 0, 0, 0, 0, 0, 0, 0,
	1062, 1222, 0, 0, 0, 0, 0, 0, 0, 1296,
	0, 0, 0, 1222, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 1928, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 1801, 1802, 1937,
	0, 1461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2559, 2560, 2561, 2562, 2555, 2556, 2557, 2558,
	0, 4109, 0, 4111, 0, 0, 0, 0, 1789, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 1461, 0,
	0, 0, 3054, 3055, 0, 0, 1768, 1764, 3061, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3075, 3076, 0,
	0, 0, 0, 2471, 0, 0, 0, 0, 0, 0,
	0, 0, 3083, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 2535, 2536, 2537, 2538, 0, 3097, 0,
	0, 0, 0, 0, 0, 0, 0, 4157, 1772, 0,
	0, 0, 0, 0, 0, 3109, 2547, 2548, 2549, 2550,
	2543, 2544, 2545, 2546, 2551, 2552, 2553, 2554, 0, 0,
	1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768,
	1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 0, 0, 0, 0, 3118, 0, 0, 0, 3119,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2531, 2532, 2533, 2534, 2539, 2540, 2541, 2542, 0, 4224,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2598, 2598, 2598, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1890,
	0, 0, 0, 0, 0, 0, 0, 3200, 0, 0,
	0, 0, 0, 0, 0, 0, 1768, 1764, 0, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2196, 0, 0, 0, 2203, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2216,
	0, 0, 0, 0, 1222, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2228, 0, 2228, 0, 0,
	1222, 0, 0, 2235, 0, 0, 0, 0, 0, 0,
	1048, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 1048, 0, 0, 0, 0, 0,
	1222, 0, 0, 1222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2203, 0, 0, 2260, 0, 0,
	0, 0, 1970, 0, 0, 0, 1222, 3319, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2280, 0,
	0, 1222, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 2293, 0, 2295, 0, 2297, 0, 2299, 0, 2300,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1296, 1296, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 1296, 0, 1970, 0, 0, 0, 1108, 0, 2322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 263, 263, 0, 0, 0, 1222,
	0, 1222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 931, 0, 978, 0, 0, 1222, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 1222,
	0, 0, 0, 1222, 0, 0, 0, 0, 0, 939,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 953, 1222, 937, 936, 0,
	0, 0, 0, 1222, 0, 1222, 0, 0, 0, 1222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 938, 0, 1222, 0, 0,
	941, 0, 0, 0, 0, 986, 0, 0, 0, 1222,
	0, 0, 0, 0, 950, 951, 0, 0, 0, 0,
	0, 0, 0, 967, 0, 0, 1222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 979, 943, 0, 0, 0, 0, 0, 0, 0,
	0, 1222, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2378, 0, 0, 944,
	0, 0, 3537, 3538, 1222, 0, 3541, 0, 976, 0,
	3544, 0, 0, 0, 0, 0, 0, 0, 0, 3548,
	0, 2655, 0, 0, 0, 0, 0, 0, 3555, 0,
	0, 3200, 0, 0, 0, 0, 0, 0, 977, 0,
	0, 0, 0, 0, 1222, 0, 3567, 1222, 0, 0,
	0, 0, 0, 946, 0, 0, 0, 0, 0, 0,
	0, 935, 0, 0, 0, 0, 3590, 3591, 0, 3592,
	3593, 3594, 0, 0, 0, 0, 0, 0, 0, 947,
	948, 0, 0, 0, 0, 0, 0, 3600, 0, 0,
	0, 3602, 0, 0, 0, 0, 0, 0, 955, 954,
	0, 0, 0, 0, 1970, 2701, 949, 0, 1268, 0,
	964, 0, 1268, 0, 1268, 0, 0, 0, 0, 0,
	0, 1222, 3630, 3631, 0, 0, 0, 0, 983, 975,
	0, 2216, 0, 0, 0, 0, 0, 0, 1222, 0,
	3642, 0, 0, 0, 0, 0, 0, 0, 1970, 1970,
	0, 0, 0, 0, 0, 3651, 0, 0, 0, 0,
	980, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1970, 1970, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1970, 0,
	0, 0, 942, 0, 0, 985, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3697, 0, 0, 0, 1222, 1222, 940, 0, 0,
	1461, 971, 972, 0, 0, 0, 0, 0, 0, 0,
	0, 3708, 0, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 969, 0, 0, 0,
	0, 0, 0, 984, 965, 3735, 0, 958, 956, 0,
	961, 0, 0, 0, 2203, 0, 962, 0, 0, 933,
	0, 981, 0, 2216, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 934, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 973, 0, 963, 0, 0, 0,
	0, 0, 960, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 982, 2976, 0, 0, 0, 0, 0,
	0, 966, 0, 0, 0, 0, 0, 0, 0, 0,
	945, 0, 0, 2987, 0, 2990, 0, 0, 0, 0,
	0, 0, 0, 0, 968, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1890, 0, 0, 0, 970,
	0, 0, 0, 0, 3835, 0, 0, 0, 0, 0,
	0, 3015, 1461, 3017, 1461, 0, 0, 0, 0, 0,
	3023, 0, 1222, 0, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1970, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 0, 0, 0, 0, 0,
	0, 0, 3051, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1222, 0, 0, 0, 0, 0, 3881,
	3882, 0, 0, 0, 0, 3886, 3887, 1222, 0, 0,
	3890, 3891, 0, 0, 0, 0, 0, 3895, 1222, 1222,
	1222, 263, 0, 263, 263, 0, 0, 263, 3899, 1305,
	0, 0, 0, 0, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 3904, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 1222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 1305, 263, 263, 0, 1305, 263, 263,
	1222, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 1970, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 263, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 1305, 263, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1305, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 0, 0, 0, 0, 0, 1222, 0, 0, 0,
	1222, 0, 1222, 0, 0, 0, 0, 0, 0, 1222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 1222, 0, 0, 0, 0, 0, 0, 0, 1222,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1222, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1222, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 1222, 0, 1222, 0,
	0, 1222, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 1268, 0, 0, 0,
	1461, 1461, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1222, 1222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3287, 0, 4125, 4126, 4127, 0, 0, 0, 0,
	1222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1222, 0, 0, 0, 2378, 1222, 0, 4136,
	4137, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3338, 3340, 0, 0, 2216, 4145, 4148, 0,
	0, 0, 1222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1222, 1222, 1222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1222, 0, 0, 0, 0,
	0, 0, 0, 0, 1748, 1749, 0, 1781, 1782, 1783,
	1791, 1792, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4189, 0, 0, 1222, 0, 1779, 0, 0,
	4195, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 4202, 1797, 0, 1048, 1970, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4210, 0, 0,
	0, 0, 0, 0, 0, 0, 1222, 0, 1222, 1750,
	0, 0, 3425, 0, 0, 0, 3429, 0, 1095, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 1222,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1305, 0, 0, 0, 263, 263, 263, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 1970, 0, 0,
	263, 0, 0, 1305, 261, 261, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3482, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 1222, 0,
	0, 0, 0, 801, 263, 1222, 0, 0, 0, 0,
	1222, 1222, 0, 1773, 1774, 1775, 1776, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 3522, 0, 1461, 0, 0, 0,
	1305, 0, 0, 0, 0, 1222, 0, 0, 1222, 0,
	1788, 0, 0, 1798, 0, 4325, 0, 0, 4328, 1778,
	1780, 0, 0, 0, 1305, 0, 1222, 1222, 0, 0,
	0, 722, 3535, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1765, 1766, 0, 0, 722,
	0, 705, 0, 0, 0, 0, 706, 0, 0, 0,
	0, 0, 0, 1786, 1970, 0, 0, 0, 0, 705,
	0, 0, 0, 0, 706, 0, 0, 0, 1771, 1048,
	1048, 0, 0, 0, 0, 0, 0, 0, 0, 4376,
	0, 0, 0, 0, 0, 707, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 708, 0, 0, 1222,
	0, 1218, 0, 707, 0, 0, 0, 0, 0, 0,
	0, 1222, 0, 0, 708, 0, 0, 709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2378, 0, 709, 0, 0, 0, 728,
	0, 0, 4148, 263, 1305, 1305, 263, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 0, 728, 0, 710,
	0, 0, 0, 0, 0, 0, 0, 0, 1222, 0,
	0, 1222, 0, 0, 0, 1222, 0, 710, 0, 1048,
	0, 0, 711, 0, 0, 1222, 1222, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 263,
	711, 0, 1222, 263, 712, 0, 0, 713, 0, 263,
	0, 0, 0, 1772, 0, 263, 0, 0, 0, 0,
	0, 0, 712, 737, 0, 713, 0, 0, 0, 0,
	0, 263, 0, 263, 4491, 4491, 4491, 0, 0, 263,
	1789, 737, 0, 0, 0, 0, 0, 727, 1305, 0,
	1305, 0, 1305, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4512, 727, 0, 0, 1305, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	263, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 1305, 0, 1305, 1305, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 263, 0, 724, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 263, 4491, 263,
	0, 263, 0, 263, 724, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 0, 1762, 1763, 1769,
	1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754,
	1755, 1757, 1758, 0, 0, 263, 0, 0, 0, 0,
	0, 0, 0, 0, 2216, 0, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 2216, 0, 0, 0, 0,
	0, 0, 734, 0, 715, 3799, 0, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 716, 0, 0, 0,
	2216, 0, 0, 0, 0, 3817, 0, 0, 1305, 0,
	0, 0, 735, 0, 716, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4491,
	4637, 0, 0, 736, 0, 0, 0, 0, 4641, 0,
	717, 1222, 0, 1222, 0, 732, 733, 730, 0, 0,
	0, 736, 0, 725, 0, 0, 718, 0, 717, 0,
	0, 0, 0, 732, 733, 730, 0, 0, 0, 0,
	0, 725, 3866, 0, 718, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 719, 0, 726,
	0, 0, 0, 0, 0, 0, 0, 0, 720, 0,
	0, 0, 0, 0, 0, 719, 0, 726, 0, 0,
	0, 0, 721, 0, 0, 0, 720, 729, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	721, 738, 0, 0, 0, 729, 0, 0, 0, 0,
	0, 0, 723, 0, 0, 0, 0, 0, 0, 738,
	0, 0, 0, 0, 1305, 0, 0, 0, 0, 0,
	723, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 261, 261, 0, 263, 261, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 1748, 1749,
	0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 1779, 0, 261, 0, 261, 261, 0, 1751, 261,
	261, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 263, 0, 0, 0, 0, 801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 1750, 263, 0, 0, 0, 263, 0,
	263, 0, 0, 1770, 0, 0, 0, 263, 263, 0,
	0, 3999, 1767, 1305, 1305, 0, 0, 263, 0, 0,
	0, 0, 0, 0, 0, 261, 261, 2216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	261, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 1773, 1774, 1775,
	1776, 2216, 0, 0, 0, 0, 0, 1756, 0, 263,
	0, 4080, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 263, 1305, 0, 0,
	0, 0, 0, 0, 1788, 0, 0, 1798, 0, 0,
	0, 1305, 0, 1778, 1780, 0, 261, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 0, 0, 0, 0,
	1794, 0, 1795, 0, 0, 0, 261, 0, 0, 1765,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 263, 0, 1305, 0, 0, 1786, 0, 263,
	0, 0, 0, 1084, 109, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1305, 0, 1305,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 1305, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4177, 0, 0, 263,
	0, 263, 0, 1785, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 263, 263, 263,
	263, 0, 0, 0, 2216, 0, 263, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1023,
	0, 0, 0, 0, 1789, 0, 0, 0, 0, 0,
	1043, 0, 0, 0, 0, 1912, 0, 1218, 0, 1748,
	1749, 261, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0,
	0, 0, 4296, 1461, 0, 0, 261, 1912, 261, 0,
	0, 1784, 1779, 0, 801, 0, 0, 0, 0, 1751,
	0, 801, 0, 0, 0, 0, 1205, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 1750, 261, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 0, 0, 0, 0,
	0, 0, 0, 1767, 0, 0, 1787, 0, 0, 0,
	0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0,
	0, 2467, 0, 0, 0, 2468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4381, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1774,
	1775, 1776, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 1788, 0, 0, 1798, 0,
	0, 0, 0, 0, 1778, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 1305, 1795, 0, 4432, 0, 0, 0, 0,
	1765, 1766, 0, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 261, 0, 0, 801, 0, 0,
	1305, 0, 0, 1771, 0, 4468, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1305, 1305, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 263, 263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	261, 0, 0, 0, 261, 0, 0, 263, 0, 0,
	261, 0, 1305, 0, 1785, 0, 261, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4528, 0, 0, 0,
	0, 0, 261, 0, 261, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 263, 263,
	0, 1305, 263, 0, 0, 0, 0, 0, 0, 263,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1305, 263, 1305, 0, 1777, 0, 0,
	0, 261, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 1305, 0, 261, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 801, 261, 0,
	261, 0, 261, 0, 261, 1789, 261, 0, 0, 0,
	1305, 0, 0, 0, 0, 0, 263, 1305, 0, 1305,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 1305, 263, 0, 0, 0, 261, 0, 0, 0,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	263, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 1305, 1305, 109, 0, 0,
	0, 0, 0, 263, 0, 0, 0, 1787, 0, 0,
	0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 1305, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 3909, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1305, 0,
	263, 1305, 263, 793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 109, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 793,
	0, 0, 0, 0, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 1043, 109,
	109, 0, 0, 0, 0, 1305, 0, 0, 0, 0,
	0, 0, 109, 0, 109, 821, 0, 0, 1218, 0,
	822, 0, 1305, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 1218, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 823,
	0, 840, 0, 0, 261, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 824, 0, 109, 0,
	0, 825, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 849, 0, 0, 0, 0, 0, 826,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 847, 0, 261, 0, 0, 0, 261,
	0, 261, 0, 0, 0, 0, 0, 0, 261, 261,
	0, 0, 1305, 0, 0, 0, 820, 0, 261, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 827, 1023,
	0, 828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1100, 851, 0, 0, 0, 0, 737, 0, 1813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 261, 0, 1818, 0, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 801, 0, 0, 0, 0, 263, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1305, 0, 0, 1305,
	263, 261, 0, 801, 0, 0, 0, 0, 0, 0,
	261, 263, 0, 0, 0, 0, 0, 0, 0, 829,
	1910, 263, 1913, 0, 109, 0, 0, 0, 0, 0,
	831, 263, 0, 0, 0, 0, 263, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 1305, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	832, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 1305, 1305, 0, 0, 0, 0, 0,
	261, 0, 261, 0, 0, 0, 841, 0, 0, 1305,
	261, 0, 0, 0, 0, 0, 0, 736, 0, 0,
	0, 0, 0, 0, 1305, 0, 0, 0, 263, 818,
	1305, 842, 0, 0, 0, 0, 0, 0, 0, 0,
	833, 0, 0, 0, 0, 0, 0, 0, 261, 261,
	261, 261, 0, 0, 1305, 0, 0, 261, 0, 0,
	261, 0, 0, 0, 839, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 834, 0, 0, 0, 835, 854, 0, 853, 0,
	0, 261, 836, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 837, 0, 0, 0,
	0, 846, 0, 0, 0, 0, 0, 855, 0, 852,
	0, 0, 0, 0, 0, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 1305, 1305, 0, 0, 0, 0,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1361, 0, 0, 0, 1361, 0,
	0, 0, 0, 0, 0, 0, 1303, 263, 0, 0,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1305, 0, 1305, 263, 0, 1305, 263, 0, 0, 0,
	0, 0, 0, 0, 1305, 0, 0, 1303, 0, 0,
	0, 0, 0, 0, 263, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 1305, 1305, 0, 0, 0, 0,
	0, 0, 0, 0, 1043, 0, 1043, 0, 0, 0,
	0, 0, 0, 1303, 1305, 0, 0, 263, 1303, 1218,
	0, 0, 0, 0, 0, 0, 1305, 263, 0, 0,
	0, 1305, 1303, 0, 0, 1218, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1912, 1305, 1305, 1305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 0, 0, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1305,
	0, 0, 0, 261, 0, 0, 0, 261, 261, 0,
	0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 1779, 0, 0, 0, 261, 0,
	1305, 1751, 1305, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 0, 0, 1023, 0, 0, 1023, 1023, 0,
	0, 0, 0, 1305, 0, 0, 0, 0, 0, 0,
	0, 0, 263, 0, 0, 0, 1750, 0, 0, 261,
	261, 0, 0, 261, 0, 0, 1770, 0, 0, 0,
	1912, 0, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 1304, 0, 261, 0, 0, 0, 0,
	0, 0, 2445, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1305, 0, 0, 0, 0, 0, 1043, 1305,
	263, 0, 0, 0, 1305, 1305, 0, 1818, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 261, 0, 0,
	1773, 1774, 1775, 1776, 0, 0, 0, 0, 0, 1305,
	1756, 801, 1305, 0, 0, 0, 0, 0, 0, 261,
	1304, 0, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 1205, 0, 0, 1304, 1788, 263, 263,
	1798, 1218, 0, 0, 0, 0, 1778, 1780, 0, 1913,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 0,
	0, 1304, 0, 1794, 0, 1795, 0, 0, 0, 0,
	0, 0, 1765, 1766, 261, 1304, 0, 0, 0, 0,
	0, 0, 1361, 0, 109, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 793, 0, 0, 0, 0, 0,
	0, 793, 0, 0, 1303, 1771, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 261, 0, 261, 0, 0, 263, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 261,
	1303, 0, 0, 0, 263, 0, 0, 0, 0, 1305,
	0, 1303, 0, 0, 0, 0, 0, 0, 0, 1305,
	1305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1361, 1305, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 263, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 109, 0, 109, 0, 0,
	1218, 1218, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1303, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 1361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 109, 0, 0, 0, 0, 0,
	109, 0, 263, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764,
	0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758,
	0, 0, 0, 0, 0, 0, 0, 0, 3553, 0,
	0, 0, 0, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1304, 0, 1303,
	109, 1303, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1303,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 1303, 1303, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	0, 0, 0, 1304, 0, 0, 0, 793, 0, 0,
	0, 0, 0, 0, 1304, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 1362, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 0, 0, 0, 0, 261, 0, 0,
	2445, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 1218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1361,
	0, 0, 0, 0, 0, 0, 0, 0, 1748, 1749,
	0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 261,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 1779, 0, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 1304,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1770, 0, 0, 1361, 0, 0, 0,
	0, 0, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1205, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1205, 0, 0, 1218, 0, 1361, 0, 0, 0, 0,
	0, 1218, 1304, 0, 1304, 0, 1304, 1773, 1774, 1775,
	1776, 0, 0, 0, 1912, 0, 0, 1756, 0, 0,
	0, 1361, 1304, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1304, 0, 1304, 1304, 1304,
	0, 0, 0, 0, 1788, 0, 0, 1798, 1912, 0,
	1912, 0, 0, 1778, 1780, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	1794, 0, 1795, 0, 0, 0, 0, 0, 0, 1765,
	1766, 0, 0, 0, 261, 0, 0, 261, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 261, 0, 0, 0, 0,
	0, 0, 1771, 0, 1303, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 109, 0, 109, 109,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 261, 0,
	0, 0, 0, 0, 0, 1796, 1361, 0, 261, 0,
	0, 0, 1362, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 109, 1785, 109, 109, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1912, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1361, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1205, 0, 0, 1043,
	0, 0, 0, 793, 1789, 1303, 0, 0, 0, 0,
	0, 0, 0, 109, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 261, 0, 0, 1303, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1303, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1362, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 261, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0,
	0, 0, 0, 0, 0, 3121, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1912, 1912, 0, 0, 0, 0, 1304, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 261,
	261, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1912, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1912, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1205, 1205, 261, 0, 0,
	0, 1362, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1912, 0, 261, 1912, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1304, 0, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	0, 0, 261, 0, 0, 0, 0, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 261, 1361, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1361, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1303, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 261, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1205, 0, 0,
	0, 0, 0, 1303, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 1303, 0, 1784, 1779, 0, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 1912, 0, 1912, 0,
	0, 1797, 0, 0, 1303, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1361, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 1303, 0, 0, 1770, 1303, 0,
	0, 0, 0, 0, 0, 0, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1303, 0, 0, 0, 0, 0, 0, 1303, 0,
	1303, 0, 0, 0, 1361, 0, 0, 0, 0, 0,
	0, 793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1303, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1303, 0, 0, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 1205, 0,
	0, 1773, 1774, 1775, 1776, 0, 1205, 0, 0, 0,
	0, 1756, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 1303, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1788, 1303,
	0, 1798, 0, 0, 0, 0, 1362, 1778, 1780, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1362, 0, 0, 1794, 0, 1795, 0, 0, 0,
	0, 0, 0, 1765, 1766, 0, 0, 0, 0, 1361,
	0, 0, 1361, 0, 1362, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 0, 0, 1304,
	1304, 0, 0, 0, 0, 0, 1771, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 109,
	0, 0, 0, 0, 0, 0, 1304, 0, 0, 1796,
	0, 0, 109, 0, 0, 0, 1361, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 1361, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 0, 1304, 0, 1304,
	0, 0, 0, 0, 0, 0, 0, 1784, 1779, 0,
	0, 0, 0, 0, 0, 1751, 1362, 0, 0, 0,
	1777, 0, 0, 0, 1797, 0, 0, 1304, 0, 0,
	0, 1304, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1772, 0, 0, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 1304, 0, 0, 0, 0, 0,
	1770, 1304, 0, 1304, 0, 0, 0, 1362, 1789, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1304, 0, 0, 0, 0,
	0, 0, 0, 1361, 0, 0, 0, 1304, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1304,
	1304, 0, 0, 0, 1773, 1774, 1775, 1776, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 1304, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768,
	1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 1788, 0, 0, 1798, 0, 0, 0, 0, 3120,
	1778, 1780, 1362, 0, 0, 1362, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 1795,
	0, 0, 0, 0, 0, 0, 1765, 1766, 2445, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1303, 0, 1771,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1362,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 1796, 0, 0, 0, 0, 0, 1303, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1303, 1303, 1303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 1303, 0, 0, 0, 0,
	0, 1361, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1361, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 1361, 0, 1361, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 1303, 1303, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 1361, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 3117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1304, 1303, 0, 1304, 0, 0, 0, 0, 0, 0,
	0, 1361, 0, 1303, 0, 0, 1303, 0, 0, 0,
	0, 0, 0, 0, 0, 1361, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 0, 0, 0, 0,
	0, 1304, 0, 0, 0, 1303, 1303, 1784, 1779, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1303, 1304, 1304, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 1361, 0, 0,
	0, 0, 1303, 1304, 0, 0, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	1770, 0, 0, 0, 1362, 0, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 1303, 1303, 1303,
	0, 0, 0, 0, 0, 0, 0, 0, 1362, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1361, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1773, 1774, 1775, 1776, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 0, 0,
	0, 1361, 0, 1303, 0, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1361, 0, 0, 1784, 1779, 0,
	0, 1788, 0, 0, 1798, 1751, 0, 0, 0, 0,
	1778, 1780, 0, 0, 1797, 0, 0, 0, 1362, 0,
	1362, 0, 0, 0, 0, 0, 0, 1794, 0, 1795,
	0, 0, 0, 0, 0, 0, 1765, 1766, 1304, 1304,
	1750, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	1770, 0, 0, 1361, 1786, 0, 0, 0, 0, 1767,
	1303, 0, 0, 0, 0, 1303, 1303, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1304, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1362, 0, 1304, 0, 0, 1304,
	1361, 0, 1796, 1303, 0, 0, 0, 0, 1362, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 1773, 1774, 1775, 1776, 0, 0,
	0, 0, 0, 0, 1756, 0, 0, 0, 1304, 1304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1362, 1788, 0, 0, 1798, 1304, 0, 0, 0, 0,
	1778, 1780, 0, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 1795,
	0, 0, 0, 0, 1772, 0, 1765, 1766, 0, 0,
	1304, 1304, 1304, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 1786, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 1771,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1303, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	1303, 1303, 0, 0, 1362, 0, 1304, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 1303, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1362, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 3116, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1362, 0, 0, 0,
	0, 0, 0, 1304, 1772, 0, 0, 0, 1304, 1304,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1362, 0, 0, 1304, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 3115, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1359, 0, 0, 1304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1304, 1304, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 1364, 278, 279, 1365, 1366, 1367,
	1304, 1368, 618, 1369, 1370, 1371, 1372, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 1373, 623, 290, 291, 292, 293, 294,
	295, 1374, 1375, 0, 296, 624, 625, 626, 1376, 297,
	298, 627, 1377, 1306, 1378, 299, 300, 301, 302, 303,
	304, 305, 0, 1379, 307, 308, 309, 306, 310, 1380,
	311, 0, 312, 313, 314, 315, 316, 317, 1381, 318,
	319, 320, 1163, 321, 322, 323, 1382, 1383, 1385, 1384,
	1386, 1387, 1388, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 1389, 333, 330, 331, 1390, 334, 332, 335,
	1391, 336, 337, 338, 1392, 1393, 339, 340, 341, 1394,
	342, 343, 1395, 344, 345, 346, 1396, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 1397, 268, 1398, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 1399, 365,
	366, 1400, 1401, 1164, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1402, 378, 636,
	1403, 637, 379, 1404, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 1166, 385, 386, 1405, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 1406,
	1165, 394, 641, 642, 1407, 643, 1408, 396, 397, 1167,
	644, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1409, 408, 410, 409,
	1410, 411, 645, 1170, 412, 413, 1171, 1411, 414, 0,
	0, 0, 415, 416, 419, 1412, 1413, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1414, 270, 1174, 459, 460, 1415, 646, 461,
	647, 463, 464, 1416, 0, 465, 0, 1417, 1418, 467,
	468, 469, 1419, 1420, 470, 471, 648, 1175, 472, 1176,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 1421, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 1422, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 1423, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1424, 521, 522, 523, 1177,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 1425,
	545, 546, 544, 547, 548, 549, 1426, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 1427, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	1428, 576, 577, 0, 573, 564, 1429, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 1430, 586, 659, 660,
	661, 662, 1431, 595, 1432, 587, 588, 589, 663, 590,
	664, 1433, 591, 592, 593, 594, 0, 596, 597, 1434,
	1435, 598, 599, 600, 602, 603, 601, 604, 1436, 605,
	1437, 0, 606, 607, 608, 665, 666, 667, 1438, 610,
	609, 611, 668, 1439, 612, 1440, 1441, 1442, 1443, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	0, 0, 0, 0, 0, 0, 0, 2633, 0, 0,
	0, 0, 0, 0, 0, 2634, 271, 273, 272, 274,
	275, 276, 277, 1364, 278, 279, 1365, 1366, 1367, 0,
	1368, 618, 1369, 1370, 1371, 1372, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 1373, 623, 290, 291, 292, 293, 294, 295,
	1374, 1375, 0, 296, 624, 625, 626, 1376, 297, 298,
	627, 1377, 1306, 1378, 299, 300, 301, 302, 303, 304,
	305, 0, 1379, 307, 308, 309, 306, 310, 1380, 311,
	0, 312, 313, 314, 315, 316, 317, 1381, 318, 319,
	320, 1163, 321, 322, 323, 1382, 1383, 1385, 1384, 1386,
	1387, 1388, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 1389, 333, 330, 331, 1390, 334, 332, 335, 1391,
	336, 337, 338, 1392, 1393, 339, 340, 341, 1394, 342,
	343, 1395, 344, 345, 346, 1396, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 1397, 268, 1398, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 1399, 365, 366,
	1400, 1401, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1402, 378, 636, 1403,
	637, 379, 1404, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 1166, 385, 386, 1405, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 1406, 1165,
	394, 641, 642, 1407, 643, 1408, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1409, 408, 410, 409, 1410,
	411, 645, 1170, 412, 413, 1171, 1411, 414, 0, 0,
	0, 415, 416, 419, 1412, 1413, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1414, 270, 1174, 459, 460, 1415, 646, 461, 647,
	463, 464, 1416, 0, 465, 0, 1417, 1418, 467, 468,
	469, 1419, 1420, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 1421, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 1422, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 1423, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1424, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 1425, 545,
	546, 544, 547, 548, 549, 1426, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 1427, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 1428,
	576, 577, 0, 573, 564, 1429, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 1430, 586, 659, 660, 661,
	662, 1431, 595, 1432, 587, 588, 589, 663, 590, 664,
	1433, 591, 592, 593, 594, 0, 596, 597, 1434, 1435,
	598, 599, 600, 602, 603, 601, 604, 1436, 605, 1437,
	0, 606, 607, 608, 665, 666, 667, 1438, 610, 609,
	611, 668, 1439, 612, 1440, 1441, 1442, 1443, 613, 614,
	669, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1359, 0, 0, 0,
	0, 3561, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3563, 271, 273, 272, 274, 275, 276, 277,
	1364, 278, 279, 1365, 1366, 1367, 0, 1368, 618, 1369,
	1370, 1371, 1372, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 1373,
	623, 290, 291, 292, 293, 294, 295, 1374, 1375, 0,
	296, 624, 625, 626, 1376, 297, 298, 627, 1377, 1306,
	1378, 299, 300, 301, 302, 303, 304, 305, 0, 1379,
	307, 308, 309, 306, 310, 1380, 311, 0, 312, 313,
	314, 315, 316, 317, 1381, 318, 319, 320, 1163, 321,
	322, 323, 1382, 1383, 1385, 1384, 1386, 1387, 1388, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 1389, 333,
	330, 331, 1390, 334, 332, 335, 1391, 336, 337, 338,
	1392, 1393, 339, 340, 341, 1394, 342, 343, 1395, 344,
	345, 346, 1396, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 1397,
	268, 1398, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 1399, 365, 366, 1400, 1401, 1164,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 1402, 378, 636, 1403, 637, 379, 1404,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 1166,
	385, 386, 1405, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 1406, 1165, 394, 641, 642,
	1407, 643, 1408, 396, 397, 1167, 644, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 1409, 408, 410, 409, 1410, 411, 645, 1170,
	412, 413, 1171, 1411, 414, 0, 0, 0, 415, 416,
	419, 1412, 1413, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 1414, 270,
	1174, 459, 460, 1415, 646, 461, 647, 463, 464, 1416,
	0, 465, 0, 1417, 1418, 467, 468, 469, 1419, 1420,
	470, 471, 648, 1175, 472, 1176, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 1421, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 1422, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	1423, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 1424, 521, 522, 523, 1177, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 1425, 545, 546, 544, 547,
	548, 549, 1426, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 1427,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 1428, 576, 577, 0,
	573, 564, 1429, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 1430, 586, 659, 660, 661, 662, 1431, 595,
	1432, 587, 588, 589, 663, 590, 664, 1433, 591, 592,
	593, 594, 0, 596, 597, 1434, 1435, 598, 599, 600,
	602, 603, 601, 604, 1436, 605, 1437, 0, 606, 607,
	608, 665, 666, 667, 1438, 610, 609, 611, 668, 1439,
	612, 1440, 1441, 1442, 1443, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 1359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3937, 271, 273, 272, 274, 275, 276,
	277, 1364, 278, 279, 1365, 1366, 1367, 0, 1368, 618,
	1369, 1370, 1371, 1372, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	1373, 623, 290, 291, 292, 293, 294, 295, 1374, 1375,
	0, 296, 624, 625, 626, 1376, 297, 298, 627, 1377,
	1306, 1378, 299, 300, 301, 302, 303, 304, 305, 0,
	1379, 307, 308, 309, 306, 310, 1380, 311, 0, 312,
	313, 314, 315, 316, 317, 1381, 318, 319, 320, 1163,
	321, 322, 323, 1382, 1383, 1385, 1384, 1386, 1387, 1388,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 1389,
	333, 330, 331, 1390, 334, 332, 335, 1391, 336, 337,
	338, 1392, 1393, 339, 340, 341, 1394, 342, 343, 1395,
	344, 345, 346, 1396, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	1397, 268, 1398, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 1399, 365, 366, 1400, 1401,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1402, 378, 636, 1403, 637, 379,
	1404, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 1405, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 1406, 1165, 394, 641,
	642, 1407, 643, 1408, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1409, 408, 410, 409, 1410, 411, 645,
	1170, 412, 413, 1171, 1411, 414, 0, 0, 0, 415,
	416, 419, 1412, 1413, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1414,
	270, 1174, 459, 460, 1415, 646, 461, 647, 463, 464,
	1416, 0, 465, 0, 1417, 1418, 467, 468, 469, 1419,
	1420, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 1421,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 1422, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 1423, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 1424, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 1425, 545, 546, 544,
	547, 548, 549, 1426, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	1427, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 1428, 576, 577,
	0, 573, 564, 1429, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 1430, 586, 659, 660, 661, 662, 1431,
	595, 1432, 587, 588, 589, 663, 590, 664, 1433, 591,
	592, 593, 594, 0, 596, 597, 1434, 1435, 598, 599,
	600, 602, 603, 601, 604, 1436, 605, 1437, 0, 606,
	607, 608, 665, 666, 667, 1438, 610, 609, 611, 668,
	1439, 612, 1440, 1441, 1442, 1443, 613, 614, 669, 615,
	616, 617, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4131,
	271, 273, 272, 274, 275, 276, 277, 1364, 278, 279,
	1365, 1366, 1367, 0, 1368, 618, 1369, 1370, 1371, 1372,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 1373, 623, 290, 291,
	292, 293, 294, 295, 1374, 1375, 0, 296, 624, 625,
	626, 1376, 297, 298, 627, 1377, 1306, 1378, 299, 300,
	301, 302, 303, 304, 305, 0, 1379, 307, 308, 309,
	306, 310, 1380, 311, 0, 312, 313, 314, 315, 316,
	317, 1381, 318, 319, 320, 1163, 321, 322, 323, 1382,
	1383, 1385, 1384, 1386, 1387, 1388, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 1389, 333, 330, 331, 1390,
	334, 332, 335, 1391, 336, 337, 338, 1392, 1393, 339,
	340, 341, 1394, 342, 343, 1395, 344, 345, 346, 1396,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 1397, 268, 1398, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 1399, 365, 366, 1400, 1401, 1164, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1402, 378, 636, 1403, 637, 379, 1404, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 1166, 385, 386, 1405,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 1406, 1165, 394, 641, 642, 1407, 643, 1408,
	396, 397, 1167, 644, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1409,
	408, 410, 409, 1410, 411, 645, 1170, 412, 413, 1171,
	1411, 414, 0, 0, 0, 415, 416, 419, 1412, 1413,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1414, 270, 1174, 459, 460,
	1415, 646, 461, 647, 463, 464, 1416, 0, 465, 0,
	1417, 1418, 467, 468, 469, 1419, 1420, 470, 471, 648,
	1175, 472, 1176, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 1421, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 1422, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 1423, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 1424, 521,
	522, 523, 1177, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 1425, 545, 546, 544, 547, 548, 549, 1426,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 1427, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 1428, 576, 577, 0, 573, 564, 1429,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 1430,
	586, 659, 660, 661, 662, 1431, 595, 1432, 587, 588,
	589, 663, 590, 664, 1433, 591, 592, 593, 594, 0,
	596, 597, 1434, 1435, 598, 599, 600, 602, 603, 601,
	604, 1436, 605, 1437, 0, 606, 607, 608, 665, 666,
	667, 1438, 610, 609, 611, 668, 1439, 612, 1440, 1441,
	1442, 1443, 613, 614, 669, 615, 616, 617, 0, 1359,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4008, 271, 273, 272, 274,
	275, 276, 277, 1364, 278, 279, 1365, 1366, 1367, 0,
	1368, 618, 1369, 1370, 1371, 1372, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 1373, 623, 290, 291, 292, 293, 294, 295,
	1374, 1375, 0, 296, 624, 625, 626, 1376, 297, 298,
	627, 1377, 1306, 1378, 299, 300, 301, 302, 303, 304,
	305, 0, 1379, 307, 308, 309, 306, 310, 1380, 311,
	0, 312, 313, 314, 315, 316, 317, 1381, 318, 319,
	320, 1163, 321, 322, 323, 1382, 1383, 1385, 1384, 1386,
	1387, 1388, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 1389, 333, 330, 331, 1390, 334, 332, 335, 1391,
	336, 337, 338, 1392, 1393, 339, 340, 341, 1394, 342,
	343, 1395, 344, 345, 346, 1396, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 1397, 268, 1398, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 1399, 365, 366,
	1400, 1401, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 1402, 378, 636, 1403,
	637, 379, 1404, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 1166, 385, 386, 1405, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 1406, 1165,
	394, 641, 642, 1407, 643, 1408, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 1409, 408, 410, 409, 1410,
	411, 645, 1170, 412, 413, 1171, 1411, 414, 0, 0,
	0, 415, 416, 419, 1412, 1413, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1414, 270, 1174, 459, 460, 1415, 646, 461, 647,
	463, 464, 1416, 0, 465, 0, 1417, 1418, 467, 468,
	469, 1419, 1420, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 1421, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 1422, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 1423, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 1424, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 1425, 545,
	546, 544, 547, 548, 549, 1426, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 1427, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 1428,
	576, 577, 0, 573, 564, 1429, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 1430, 586, 659, 660, 661,
	662, 1431, 595, 1432, 587, 588, 589, 663, 590, 664,
	1433, 591, 592, 593, 594, 0, 596, 597, 1434, 1435,
	598, 599, 600, 602, 603, 601, 604, 1436, 605, 1437,
	0, 606, 607, 608, 665, 666, 667, 1438, 610, 609,
	611, 668, 1439, 612, 1440, 1441, 1442, 1443, 613, 614,
	669, 615, 616, 617, 0, 1359, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3867, 271, 273, 272, 274, 275, 276, 277, 1364,
	278, 279, 1365, 1366, 1367, 0, 1368, 618, 1369, 1370,
	1371, 1372, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 1373, 623,
	290, 291, 292, 293, 294, 295, 1374, 1375, 0, 296,
	624, 625, 626, 1376, 297, 298, 627, 1377, 1306, 1378,
	299, 300, 301, 302, 303, 304, 305, 0, 1379, 307,
	308, 309, 306, 310, 1380, 311, 0, 312, 313, 314,
	315, 316, 317, 1381, 318, 319, 320, 1163, 321, 322,
	323, 1382, 1383, 1385, 1384, 1386, 1387, 1388, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 1389, 333, 330,
	331, 1390, 334, 332, 335, 1391, 336, 337, 338, 1392,
	1393, 339, 340, 341, 1394, 342, 343, 1395, 344, 345,
	346, 1396, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 1397, 268,
	1398, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 1399, 365, 366, 1400, 1401, 1164, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 1402, 378, 636, 1403, 637, 379, 1404, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 1166, 385,
	386, 1405, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 1406, 1165, 394, 641, 642, 1407,
	643, 1408, 396, 397, 1167, 644, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 1409, 408, 410, 409, 1410, 411, 645, 1170, 412,
	413, 1171, 1411, 414, 0, 0, 0, 415, 416, 419,
	1412, 1413, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1414, 270, 1174,
	459, 460, 1415, 646, 461, 647, 463, 464, 1416, 0,
	465, 0, 1417, 1418, 467, 468, 469, 1419, 1420, 470,
	471, 648, 1175, 472, 1176, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 1421, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 1422, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 1423,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	1424, 521, 522, 523, 1177, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 1425, 545, 546, 544, 547, 548,
	549, 1426, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 1427, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 1428, 576, 577, 0, 573,
	564, 1429, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 1430, 586, 659, 660, 661, 662, 1431, 595, 1432,
	587, 588, 589, 663, 590, 664, 1433, 591, 592, 593,
	594, 0, 596, 597, 1434, 1435, 598, 599, 600, 602,
	603, 601, 604, 1436, 605, 1437, 0, 606, 607, 608,
	665, 666, 667, 1438, 610, 609, 611, 668, 1439, 612,
	1440, 1441, 1442, 1443, 613, 614, 669, 615, 616, 617,
	0, 1359, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3579, 271, 273,
	272, 274, 275, 276, 277, 1364, 278, 279, 1365, 1366,
	1367, 0, 1368, 618, 1369, 1370, 1371, 1372, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 1373, 623, 290, 291, 292, 293,
	294, 295, 1374, 1375, 0, 296, 624, 625, 626, 1376,
	297, 298, 627, 1377, 1306, 1378, 299, 300, 301, 302,
	303, 304, 305, 0, 1379, 307, 308, 309, 306, 310,
	1380, 311, 0, 312, 313, 314, 315, 316, 317, 1381,
	318, 319, 320, 1163, 321, 322, 323, 1382, 1383, 1385,
	1384, 1386, 1387, 1388, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 1389, 333, 330, 331, 1390, 334, 332,
	335, 1391, 336, 337, 338, 1392, 1393, 339, 340, 341,
	1394, 342, 343, 1395, 344, 345, 346, 1396, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 1397, 268, 1398, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 1399,
	365, 366, 1400, 1401, 1164, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 1402, 378,
	636, 1403, 637, 379, 1404, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 1166, 385, 386, 1405, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	1406, 1165, 394, 641, 642, 1407, 643, 1408, 396, 397,
	1167, 644, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 1409, 408, 410,
	409, 1410, 411, 645, 1170, 412, 413, 1171, 1411, 414,
	0, 0, 0, 415, 416, 419, 1412, 1413, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 1414, 270, 1174, 459, 460, 1415, 646,
	461, 647, 463, 464, 1416, 0, 465, 0, 1417, 1418,
	467, 468, 469, 1419, 1420, 470, 471, 648, 1175, 472,
	1176, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 1421, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 1422,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 1423, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 1424, 521, 522, 523,
	1177, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	1425, 545, 546, 544, 547, 548, 549, 1426, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 1427, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 1428, 576, 577, 0, 573, 564, 1429, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 1430, 586, 659,
	660, 661, 662, 1431, 595, 1432, 587, 588, 589, 663,
	590, 664, 1433, 591, 592, 593, 594, 0, 596, 597,
	1434, 1435, 598, 599, 600, 602, 603, 601, 604, 1436,
	605, 1437, 0, 606, 607, 608, 665, 666, 667, 1438,
	610, 609, 611, 668, 1439, 612, 1440, 1441, 1442, 1443,
	613, 614, 669, 615, 616, 617, 0, 1359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3410, 271, 273, 272, 274, 275, 276,
	277, 1364, 278, 279, 1365, 1366, 1367, 0, 1368, 618,
	1369, 1370, 1371, 1372, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	1373, 623, 290, 291, 292, 293, 294, 295, 1374, 1375,
	0, 296, 624, 625, 626, 1376, 297, 298, 627, 1377,
	1306, 1378, 299, 300, 301, 302, 303, 304, 305, 0,
	1379, 307, 308, 309, 306, 310, 1380, 311, 0, 312,
	313, 314, 315, 316, 317, 1381, 318, 319, 320, 1163,
	321, 322, 323, 1382, 1383, 1385, 1384, 1386, 1387, 1388,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 1389,
	333, 330, 331, 1390, 334, 332, 335, 1391, 336, 337,
	338, 1392, 1393, 339, 340, 341, 1394, 342, 343, 1395,
	344, 345, 346, 1396, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	1397, 268, 1398, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 1399, 365, 366, 1400, 1401,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1402, 378, 636, 1403, 637, 379,
	1404, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 1405, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 1406, 1165, 394, 641,
	642, 1407, 643, 1408, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1409, 408, 410, 409, 1410, 411, 645,
	1170, 412, 413, 1171, 1411, 414, 0, 0, 0, 415,
	416, 419, 1412, 1413, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1414,
	270, 1174, 459, 460, 1415, 646, 461, 647, 463, 464,
	1416, 0, 465, 0, 1417, 1418, 467, 468, 469, 1419,
	1420, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 1421,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 1422, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 1423, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 1424, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 1425, 545, 546, 544,
	547, 548, 549, 1426, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	1427, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 1428, 576, 577,
	0, 573, 564, 1429, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 1430, 586, 659, 660, 661, 662, 1431,
	595, 1432, 587, 588, 589, 663, 590, 664, 1433, 591,
	592, 593, 594, 0, 596, 597, 1434, 1435, 598, 599,
	600, 602, 603, 601, 604, 1436, 605, 1437, 0, 606,
	607, 608, 665, 666, 667, 1438, 610, 609, 611, 668,
	1439, 612, 1440, 1441, 1442, 1443, 613, 614, 669, 615,
	616, 617, 0, 1359, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2491,
	271, 273, 272, 274, 275, 276, 277, 1364, 278, 279,
	1365, 1366, 1367, 0, 1368, 618, 1369, 1370, 1371, 1372,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 1373, 623, 290, 291,
	292, 293, 294, 295, 1374, 1375, 0, 296, 624, 625,
	626, 1376, 297, 298, 627, 1377, 1306, 1378, 299, 300,
	301, 302, 303, 304, 305, 0, 1379, 307, 308, 309,
	306, 310, 1380, 311, 0, 312, 313, 314, 315, 316,
	317, 1381, 318, 319, 320, 1163, 321, 322, 323, 1382,
	1383, 1385, 1384, 1386, 1387, 1388, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 1389, 333, 330, 331, 1390,
	334, 332, 335, 1391, 336, 337, 338, 1392, 1393, 339,
	340, 341, 1394, 342, 343, 1395, 344, 345, 346, 1396,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 1397, 268, 1398, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 1399, 365, 366, 1400, 1401, 1164, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	1402, 378, 636, 1403, 637, 379, 1404, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 1166, 385, 386, 1405,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 1406, 1165, 394, 641, 642, 1407, 643, 1408,
	396, 397, 1167, 644, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 1409,
	408, 410, 409, 1410, 411, 645, 1170, 412, 413, 1171,
	1411, 414, 0, 0, 0, 415, 416, 419, 1412, 1413,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1414, 270, 1174, 459, 460,
	1415, 646, 461, 647, 463, 464, 1416, 0, 465, 0,
	1417, 1418, 467, 468, 469, 1419, 1420, 470, 471, 648,
	1175, 472, 1176, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 1421, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 1422, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 1423, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 1424, 521,
	522, 523, 1177, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 1425, 545, 546, 544, 547, 548, 549, 1426,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 1427, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 1428, 576, 577, 0, 573, 564, 1429,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 1430,
	586, 659, 660, 661, 662, 1431, 595, 1432, 587, 588,
	589, 663, 590, 664, 1433, 591, 592, 593, 594, 0,
	596, 597, 1434, 1435, 598, 599, 600, 602, 603, 601,
	604, 1436, 605, 1437, 0, 606, 607, 608, 665, 666,
	667, 1438, 610, 609, 611, 668, 1439, 612, 1440, 1441,
	1442, 1443, 613, 614, 669, 615, 616, 617, 1455, 0,
	1359, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2177, 0, 271, 273, 272,
	274, 275, 276, 277, 1364, 278, 279, 1365, 1366, 1367,
	0, 1368, 618, 1369, 1370, 1371, 1372, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 1373, 623, 290, 291, 292, 293, 294,
	295, 1374, 1375, 0, 296, 624, 625, 626, 1376, 297,
	298, 627, 1377, 1306, 1378, 299, 300, 301, 302, 303,
	304, 305, 0, 1379, 307, 308, 309, 306, 310, 1380,
	311, 0, 312, 313, 314, 315, 316, 317, 1381, 318,
	319, 320, 1163, 321, 322, 323, 1382, 1383, 1385, 1384,
	1386, 1387, 1388, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 1389, 333, 330, 331, 1390, 334, 332, 335,
	1391, 336, 337, 338, 1392, 1393, 339, 340, 341, 1394,
	342, 343, 1395, 344, 345, 346, 1396, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 1397, 268, 1398, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 1399, 365,
	366, 1400, 1401, 1164, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 1402, 378, 636,
	1403, 637, 379, 1404, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 1166, 385, 386, 1405, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 1406,
	1165, 394, 641, 642, 1407, 643, 1408, 396, 397, 1167,
	644, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1409, 408, 410, 409,
	1410, 411, 645, 1170, 412, 413, 1171, 1411, 414, 0,
	0, 0, 415, 416, 419, 1412, 1413, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 1414, 270, 1174, 459, 460, 1415, 646, 461,
	647, 463, 464, 1416, 0, 465, 0, 1417, 1418, 467,
	468, 469, 1419, 1420, 470, 471, 648, 1175, 472, 1176,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 1421, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 1422, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 1423, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 1424, 521, 522, 523, 1177,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 1425,
	545, 546, 544, 547, 548, 549, 1426, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 1427, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	1428, 576, 577, 0, 573, 564, 1429, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 1430, 586, 659, 660,
	661, 662, 1431, 595, 1432, 587, 588, 589, 663, 590,
	664, 1433, 591, 592, 593, 594, 0, 596, 597, 1434,
	1435, 598, 599, 600, 602, 603, 601, 604, 1436, 605,
	1437, 0, 606, 607, 608, 665, 666, 667, 1438, 610,
	609, 611, 668, 1439, 612, 1440, 1441, 1442, 1443, 613,
	614, 669, 615, 616, 617, 1356, 0, 1359, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1364, 278, 279, 1365, 1366, 1367, 0, 1368, 618,
	1369, 1370, 1371, 1372, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	1373, 623, 290, 291, 292, 293, 294, 295, 1374, 1375,
	0, 296, 624, 625, 626, 1376, 297, 298, 627, 1377,
	1306, 1378, 299, 300, 301, 302, 303, 304, 305, 0,
	1379, 307, 308, 309, 306, 310, 1380, 311, 0, 312,
	313, 314, 315, 316, 317, 1381, 318, 319, 320, 1163,
	321, 322, 323, 1382, 1383, 1385, 1384, 1386, 1387, 1388,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 1389,
	333, 330, 331, 1390, 334, 332, 335, 1391, 336, 337,
	338, 1392, 1393, 339, 340, 341, 1394, 342, 343, 1395,
	344, 345, 346, 1396, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	1397, 268, 1398, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 1399, 365, 366, 1400, 1401,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 1402, 378, 636, 1403, 637, 379,
	1404, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 1405, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 1406, 1165, 394, 641,
	642, 1407, 643, 1408, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1409, 408, 410, 409, 1410, 411, 645,
	1170, 412, 413, 1171, 1411, 414, 0, 0, 0, 415,
	416, 419, 1412, 1413, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1414,
	270, 1174, 459, 460, 1415, 646, 461, 647, 463, 464,
	1416, 0, 465, 0, 1417, 1418, 467, 468, 469, 1419,
	1420, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 1421,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 1422, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 1423, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 1424, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 1425, 545, 546, 544,
	547, 548, 549, 1426, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	1427, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 1428, 576, 577,
	0, 573, 564, 1429, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 1430, 586, 659, 660, 661, 662, 1431,
	595, 1432, 587, 588, 589, 663, 590, 664, 1433, 591,
	592, 593, 594, 0, 596, 597, 1434, 1435, 598, 599,
	600, 602, 603, 601, 604, 1436, 605, 1437, 0, 606,
	607, 608, 665, 666, 667, 1438, 610, 609, 611, 668,
	1439, 612, 1440, 1441, 1442, 1443, 613, 614, 669, 615,
	616, 617, 1359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1364, 278, 279, 1365,
	1366, 1367, 0, 1368, 618, 1369, 1370, 1371, 1372, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 1373, 623, 290, 291, 292,
	293, 294, 295, 1374, 1375, 0, 296, 624, 625, 626,
	1376, 297, 298, 627, 1377, 1306, 1378, 299, 300, 301,
	302, 303, 304, 305, 0, 1379, 307, 308, 309, 306,
	310, 1380, 311, 0, 312, 313, 314, 315, 316, 317,
	1381, 318, 319, 320, 1163, 321, 322, 323, 1382, 1383,
	1385, 1384, 1386, 1387, 1388, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 1389, 333, 330, 331, 1390, 334,
	332, 335, 1391, 336, 337, 338, 1392, 1393, 339, 340,
	341, 1394, 342, 343, 1395, 344, 345, 346, 1396, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 1397, 268, 1398, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	1399, 365, 366, 1400, 1401, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 1402,
	378, 636, 1403, 637, 379, 1404, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 1405, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 1406, 1165, 394, 641, 642, 1407, 643, 1408, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 1409, 408,
	410, 409, 1410, 411, 645, 1170, 412, 413, 1171, 1411,
	414, 0, 0, 0, 415, 416, 419, 1412, 1413, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 1414, 270, 1174, 459, 460, 1415,
	646, 461, 647, 463, 464, 1416, 0, 465, 0, 1417,
	1418, 467, 468, 469, 1419, 1420, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 1421, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	1422, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 1423, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 1424, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 1425, 545, 546, 544, 547, 548, 549, 1426, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 1427, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 1428, 576, 577, 0, 573, 564, 1429, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 1430, 586,
	659, 660, 661, 662, 1431, 595, 1432, 587, 588, 589,
	663, 590, 664, 1433, 591, 592, 593, 594, 0, 596,
	597, 1434, 1435, 598, 599, 600, 602, 603, 601, 604,
	1436, 605, 1437, 0, 606, 607, 608, 665, 666, 667,
	1438, 610, 609, 611, 668, 1439, 612, 1440, 1441, 1442,
	1443, 613, 614, 669, 615, 616, 617, 2466, 0, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 2463, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 2464, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 383, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 2462, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 2465, 0, 0, 0, 0, 0, 0, 1082, 2461,
	0, 1044, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1123, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 270, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 230, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 232,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 1578, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 224, 613, 614, 669, 615, 616, 617, 1057, 0,
	225, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 1098, 1070, 1071, 1072, 1068,
	1069, 1081, 1823, 1821, 0, 0, 1080, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1122, 1086, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 1135, 0, 288, 1142, 289, 1141, 0, 1152,
	290, 291, 292, 293, 294, 295, 1088, 1121, 1055, 296,
	1182, 1183, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 1145, 329, 1139, 1138, 1059, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1130, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1065, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 1077, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1137, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 1150, 1151, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 1087, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 1132, 1133, 0,
	1093, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1056, 270, 1174,
	459, 460, 1078, 1126, 461, 1140, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1136, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 1066,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 230, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 1134, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 1181, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 1054, 573,
	564, 232, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 1146, 1147, 1148, 1149, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 1076, 591, 592, 593,
	594, 0, 596, 597, 0, 1060, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	1578, 1143, 1180, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 224, 613, 614, 669, 615, 616, 617,
	1057, 0, 225, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 1051, 1052, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 1823, 3073, 0, 0, 1080, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	1055, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 1059,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1056,
	270, 1174, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 230, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	1054, 573, 564, 232, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 596, 597, 0, 1060, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 1578, 1143, 1180, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 224, 613, 614, 669, 615,
	616, 617, 1057, 0, 225, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 1051, 1052, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 1823, 1821, 0, 0,
	1080, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 2594, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 2599, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 383, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 2595,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 2596, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 0, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 2511, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1123, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 270, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 665, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1057, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 0, 0, 0, 0, 0,
	0, 0, 1082, 2509, 0, 2508, 1080, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	1055, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 1059,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1056,
	270, 1174, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	1054, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 596, 597, 0, 1060, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 1143, 1180, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1057, 0, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 1051, 1052, 0,
	0, 0, 0, 0, 0, 0, 1082, 2506, 0, 2505,
	1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 1086, 0, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 1135, 0,
	288, 1142, 289, 1141, 0, 1152, 290, 291, 292, 293,
	294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 1145,
	329, 1139, 1138, 1059, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1130, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1065, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 1077, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1137, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 1150, 1151, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 1087, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 1132, 1133, 0, 1093, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 1056, 270, 1174, 459, 460, 1078, 1126,
	461, 1140, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1136, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 1066, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 1134, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 1181, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 1054, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 1146,
	1147, 1148, 1149, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 1076, 591, 592, 593, 594, 0, 596, 597,
	0, 1060, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 665, 1143, 1180, 0,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 1057, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 1051, 1052, 0, 0, 0, 0, 0, 0, 0,
	1082, 2503, 0, 2502, 1080, 1098, 1070, 1071, 1072, 1068,
	1069, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1122, 1086, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 1135, 0, 288, 1142, 289, 1141, 0, 1152,
	290, 291, 292, 293, 294, 295, 1088, 1121, 1055, 296,
	1182, 1183, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 1145, 329, 1139, 1138, 1059, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1130, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1065, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 1077, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1137, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 1150, 1151, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 1087, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 1132, 1133, 0,
	1093, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1056, 270, 1174,
	459, 460, 1078, 1126, 461, 1140, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1136, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 1066,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 1134, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 1181, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 1054, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 1146, 1147, 1148, 1149, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 1076, 591, 592, 593,
	594, 0, 596, 597, 0, 1060, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 1143, 1180, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	1057, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 1051, 1052, 0, 0, 0,
	0, 0, 0, 0, 1082, 2500, 0, 1671, 1080, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 383, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 1670, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 0, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 1047, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1123, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 270, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	1061, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 665, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1057, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 1098, 1070, 1071, 1072, 1068,
	1069, 1081, 1082, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1122, 1086, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 1135, 0, 288, 1142, 289, 1141, 0, 1152,
	290, 291, 292, 293, 294, 295, 1088, 1121, 1055, 296,
	1182, 1183, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 4444, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 1145, 329, 1139, 1138, 1059, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1130, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1065, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 1077, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1137, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 1150, 1151, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 1087, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 1132, 1133, 0,
	1093, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1056, 270, 1174,
	459, 460, 1078, 1126, 461, 1140, 463, 464, 0, 0,
	465, 0, 1061, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1136, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 1066,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 1134, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 1181, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 1054, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 1146, 1147, 1148, 1149, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 1076, 591, 592, 593,
	594, 0, 596, 597, 0, 1060, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 1143, 1180, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	1057, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 1051, 1052, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 1082, 0, 0, 0, 1080, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	1055, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 1059,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 2380, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1056,
	270, 1174, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 2379, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	1054, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 596, 597, 0, 1060, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 1143, 1180, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1057, 0, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 1051, 1052, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 1082, 0, 0, 0,
	1080, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 383, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 1061, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 1082, 0,
	0, 0, 1080, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 1086, 0, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 1135, 0,
	288, 1142, 289, 1141, 0, 1152, 290, 291, 292, 293,
	294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 4205, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 1145,
	329, 1139, 1138, 1059, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1130, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1065, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 1077, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1137, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 1150, 1151, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 1087, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 1132, 1133, 0, 1093, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 1056, 270, 1174, 459, 460, 1078, 1126,
	461, 1140, 463, 464, 0, 0, 465, 0, 1061, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1136, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 1066, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 1134, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 1181, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 1054, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 1146,
	1147, 1148, 1149, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 1076, 591, 592, 593, 594, 0, 596, 597,
	0, 1060, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 665, 1143, 1180, 0,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 1057, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069, 1081,
	1082, 0, 0, 0, 1080, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1123, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 3829, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 665, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1057, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 1891, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 0, 1080, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	1055, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 1059,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1056,
	270, 1174, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	1054, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 596, 597, 0, 1060, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 1143, 1180, 3557, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1057, 0, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 1051, 1052, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 1082, 0, 0, 0,
	1080, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 383, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 1891, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 0, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 2599, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1123, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 270, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 665, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1057, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 1098, 1070, 1071, 1072, 1068,
	1069, 1081, 1082, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1122, 1086, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 1135, 0, 288, 1142, 289, 1141, 0, 1152,
	290, 291, 292, 293, 294, 295, 1088, 1121, 1055, 296,
	1182, 1183, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 1145, 329, 1139, 1138, 1059, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1130, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1065, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 1077, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1137, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 1150, 1151, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 1087, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 1132, 1133, 0,
	1093, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1056, 270, 1174,
	459, 460, 1078, 1126, 461, 1140, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1136, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 1066,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 1134, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 1181, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 1054, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 1146, 1147, 1148, 1149, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 1076, 591, 592, 593,
	594, 0, 596, 597, 0, 1060, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 1143, 1180, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	1057, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 1051, 1052, 0, 0, 0,
	0, 0, 0, 0, 1082, 1821, 0, 2604, 1080, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 383, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 0, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 2602, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1123, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 270, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 665, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1057, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 2590, 1080, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	1055, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 1059,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1056,
	270, 1174, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	1054, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 596, 597, 0, 1060, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 1143, 1180, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1057, 0, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 1051, 1052, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 2579,
	1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 1086, 0, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 1135, 0,
	288, 1142, 289, 1141, 0, 1152, 290, 291, 292, 293,
	294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 1145,
	329, 1139, 1138, 1059, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1130, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1065, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 1077, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1137, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 1150, 1151, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 1087, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 1132, 1133, 0, 1093, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 1056, 270, 1174, 459, 460, 1078, 1126,
	461, 1140, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1136, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 1066, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 1134, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 1181, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 1054, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 1146,
	1147, 1148, 1149, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 1076, 591, 592, 593, 594, 0, 596, 597,
	0, 1060, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 665, 1143, 1180, 0,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 1057, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 1051, 1052, 0, 0, 0, 0, 0, 0, 0,
	1082, 0, 0, 2577, 1080, 2568, 2575, 1071, 1072, 1068,
	1069, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1122, 1086, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 1135, 0, 288, 1142, 289, 1141, 0, 1152,
	290, 291, 292, 293, 294, 295, 1088, 1121, 1055, 296,
	1182, 1183, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 1145, 2571, 1139, 1138, 1059, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1130, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1065, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 1077, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1137, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 1150, 1151, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 1087, 379, 0, 380,
	381, 382, 2572, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 1132, 1133, 0,
	1093, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 2573, 429, 2570, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1056, 270, 1174,
	459, 460, 1078, 1126, 461, 1140, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1136, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 1066,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 2574, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 1134, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 1181, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 1054, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 1146, 1147, 1148, 1149, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 1076, 591, 592, 593,
	594, 0, 596, 597, 0, 1060, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 1143, 1180, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 2569, 617,
	1057, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 1051, 1052, 0, 0, 0,
	0, 0, 0, 0, 1082, 0, 0, 2565, 1080, 2568,
	2575, 1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 2571, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 2572, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 2573, 429, 2570,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 2574, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 2569, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 1082, 0,
	0, 0, 1080, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 1086, 0, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 1135, 0,
	288, 1142, 289, 1141, 0, 1152, 290, 291, 292, 293,
	294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 1145,
	329, 1139, 1138, 1059, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1130, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1065, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 1077, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1137, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 1150, 1151, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 1087, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 1132, 1133, 0, 1093, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 1056, 270, 1174, 459, 460, 1078, 1126,
	461, 1140, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1136, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 1066, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 1134, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 1181, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 1054, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 1146,
	1147, 1148, 1149, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 1076, 591, 592, 593, 594, 0, 596, 597,
	0, 1060, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 665, 1143, 1180, 0,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 1057, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 1051, 1052, 0, 0, 0, 0, 0, 1829, 0,
	1082, 0, 0, 0, 1080, 1098, 1070, 1071, 1072, 1068,
	1069, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 2359,
	278, 279, 0, 0, 0, 0, 0, 1122, 1086, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 1135, 0, 288, 1142, 289, 1141, 0, 1152,
	290, 291, 292, 293, 294, 295, 1088, 1121, 1055, 296,
	1182, 1183, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 1145, 329, 1139, 1138, 1059, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1130, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1065, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 1077, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1137, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 1150, 1151, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 1087, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 1132, 1133, 0,
	1093, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1056, 270, 1174,
	459, 460, 1078, 1126, 461, 1140, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1136, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 1066,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 1134, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 1181, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 1054, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 1146, 1147, 1148, 1149, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 1076, 591, 592, 593,
	594, 0, 596, 597, 0, 1060, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 1143, 1180, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	1057, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 1051, 1052, 0, 0, 0,
	0, 0, 0, 0, 1082, 0, 0, 1676, 1080, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 383, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 0, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 1608, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1123, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 270, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 665, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1057, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 1603, 1080, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	1055, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 1059,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1056,
	270, 1174, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	1054, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 596, 597, 0, 1060, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 1143, 1180, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1057, 0, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 1051, 1052, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 1594,
	1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 1086, 0, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 1135, 0,
	288, 1142, 289, 1141, 0, 1152, 290, 291, 292, 293,
	294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 1145,
	329, 1139, 1138, 1059, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1130, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1065, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 1077, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1137, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 1150, 1151, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 1087, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 1132, 1133, 0, 1093, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 1056, 270, 1174, 459, 460, 1078, 1126,
	461, 1140, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1136, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 1066, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 1134, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 1181, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 1054, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 1146,
	1147, 1148, 1149, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 1076, 591, 592, 593, 594, 0, 596, 597,
	0, 1060, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 665, 1143, 1180, 0,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 1057, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 1051, 1052, 0, 0, 0, 0, 0, 0, 0,
	1082, 0, 0, 1589, 1080, 1098, 1070, 1071, 1072, 1068,
	1069, 1081, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1122, 1086, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 1135, 0, 288, 1142, 289, 1141, 0, 1152,
	290, 291, 292, 293, 294, 295, 1088, 1121, 1055, 296,
	1182, 1183, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 1145, 329, 1139, 1138, 1059, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1130, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1065, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 1077, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1137, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 1150, 1151, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 1087, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 1132, 1133, 0,
	1093, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1056, 270, 1174,
	459, 460, 1078, 1126, 461, 1140, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1136, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 1066,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 1134, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 1181, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 1054, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 1146, 1147, 1148, 1149, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 1076, 591, 592, 593,
	594, 0, 596, 597, 0, 1060, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 1143, 1180, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	1057, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 1051, 1052, 0, 0, 0,
	0, 0, 0, 0, 1082, 0, 0, 1501, 1080, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	1087, 379, 0, 380, 381, 382, 383, 384, 1500, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 0, 0, 0, 0, 0, 0, 0, 1082, 0,
	0, 1495, 1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1494, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 270, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 665, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1057, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 0, 0, 0, 0, 0,
	0, 0, 1082, 0, 0, 1488, 1080, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	1055, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 1059,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1056,
	270, 1174, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	1054, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 596, 597, 0, 1060, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 1143, 1180, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1057, 0, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 1051, 1052, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 1308,
	1080, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 1086, 0, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 1135, 0,
	288, 1142, 289, 1141, 0, 1152, 290, 291, 292, 293,
	294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 1145,
	329, 1139, 1138, 1059, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1130, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1065, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 1077, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1137, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 1150, 1151, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 1087, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 1132, 1133, 0, 1093, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 1056, 270, 1174, 459, 460, 1078, 1126,
	461, 1140, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1136, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 1066, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 1134, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 1181, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 1054, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 1146,
	1147, 1148, 1149, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 1076, 591, 592, 593, 594, 0, 596, 597,
	0, 1060, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 665, 1143, 1180, 0,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 1057, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 1051, 1052, 1098, 1070, 1071, 1072, 1068, 1069, 1081,
	1082, 0, 0, 0, 1080, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1123, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 270, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 665, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1057, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 1098, 1070, 1071, 1072, 1068,
	1069, 1081, 1082, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1122, 1086, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 1135, 0, 288, 1142, 289, 1141, 0, 1152,
	290, 291, 292, 293, 294, 295, 1088, 1121, 1055, 296,
	1182, 1183, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	4490, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 1145, 329, 1139, 1138, 1059, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1130, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1065, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 1077, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1137, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 1150, 1151, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 1087, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 1132, 1133, 0,
	1093, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1056, 270, 1174,
	459, 460, 1078, 1126, 461, 1140, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1136, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 1066,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 1134, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 1181, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 1054, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 1146, 1147, 1148, 1149, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 1076, 591, 592, 593,
	594, 0, 4489, 597, 0, 1060, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 1143, 1180, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	1057, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 1051, 1052, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 1082, 0, 0, 0, 1080, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 4488, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	1055, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 4490, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 1059,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1056,
	270, 1174, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	1054, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 4489, 597, 0, 1060, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 1143, 1180, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1057, 0, 0, 0, 0, 0, 0, 0,
	1053, 0, 0, 0, 0, 0, 0, 1051, 1052, 1098,
	1070, 1071, 1072, 1068, 1069, 1081, 1082, 0, 0, 0,
	1080, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 1122, 1086, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 1135, 0, 288, 1142,
	289, 1141, 0, 1152, 290, 291, 292, 293, 294, 295,
	1088, 1121, 1055, 296, 1182, 1183, 626, 0, 297, 298,
	1128, 0, 1109, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 4150, 323, 1112, 1110, 1111, 1118, 1114,
	1113, 1117, 324, 325, 326, 327, 328, 1145, 329, 1139,
	1138, 1059, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 1130, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 1065, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 1153,
	1154, 360, 1077, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 1137, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 1150, 1151, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 1160, 0,
	4151, 379, 0, 380, 381, 382, 383, 384, 1123, 1124,
	1127, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 1165,
	394, 1132, 1133, 0, 1093, 0, 396, 397, 1167, 1125,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 1161, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 1116, 1115, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 1056, 270, 1174, 459, 460, 1078, 1126, 461, 1140,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 1155,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 1156, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 1136, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 4149, 1066, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 1119, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 1134,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 1181, 567, 568, 569, 570, 1157, 574, 575, 0,
	576, 577, 1054, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 1146, 1147, 1148,
	1149, 0, 595, 0, 587, 588, 589, 1158, 590, 1159,
	1076, 591, 592, 593, 594, 0, 596, 597, 0, 1060,
	598, 599, 600, 602, 603, 601, 604, 1120, 605, 0,
	0, 606, 607, 608, 665, 1143, 1180, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1057, 0, 0, 0, 0, 0,
	0, 0, 1053, 0, 0, 0, 0, 0, 0, 1051,
	1052, 1098, 1070, 1071, 1072, 3040, 3041, 1081, 1082, 0,
	0, 0, 1080, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 1086, 0, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 1135, 0,
	288, 1142, 289, 1141, 0, 1152, 290, 291, 292, 293,
	294, 295, 1088, 1121, 1055, 296, 1182, 1183, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 1145,
	329, 1139, 1138, 1059, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1130, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	1065, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 1077, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 1137, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 1150, 1151, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 1087, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 1132, 1133, 0, 1093, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 1056, 270, 1174, 459, 460, 1078, 1126,
	461, 1140, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1136, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 1066, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 1134, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 1181, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 1054, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 1146,
	1147, 1148, 1149, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 1076, 591, 592, 593, 594, 0, 596, 597,
	0, 1060, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 665, 1143, 1180, 0,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 1057, 0, 0, 0,
	0, 0, 0, 0, 1053, 0, 0, 0, 0, 0,
	0, 1051, 1052, 1098, 1070, 1071, 1072, 3038, 3039, 1081,
	1082, 0, 0, 0, 1080, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 1122, 1086, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	1135, 0, 288, 1142, 289, 1141, 0, 1152, 290, 291,
	292, 293, 294, 295, 1088, 1121, 1055, 296, 1182, 1183,
	626, 0, 297, 298, 1128, 0, 1109, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 1112,
	1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327,
	328, 1145, 329, 1139, 1138, 1059, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	1130, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 1065, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 1153, 1154, 360, 1077, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 1137, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 1150,
	1151, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 1160, 0, 1087, 379, 0, 380, 381, 382,
	383, 384, 1123, 1124, 1127, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 1165, 394, 1132, 1133, 0, 1093, 0,
	396, 397, 1167, 1125, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 1161, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 1116, 1115,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 1056, 270, 1174, 459, 460,
	1078, 1126, 461, 1140, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 1155, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 1156, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 1136, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 1066, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 1119,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 1134, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 1181, 567, 568, 569, 570,
	1157, 574, 575, 0, 576, 577, 1054, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 1146, 1147, 1148, 1149, 0, 595, 0, 587, 588,
	589, 1158, 590, 1159, 1076, 591, 592, 593, 594, 0,
	596, 597, 0, 1060, 598, 599, 600, 602, 603, 601,
	604, 1120, 605, 0, 0, 606, 607, 608, 665, 1143,
	1180, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1057, 0,
	0, 0, 0, 0, 0, 0, 1053, 0, 0, 0,
	0, 0, 0, 1051, 1052, 1098, 1070, 1071, 1072, 1068,
	1069, 1081, 1082, 0, 0, 0, 1080, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1122, 1086, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 1135, 0, 288, 1142, 289, 1141, 0, 1152,
	290, 291, 292, 293, 294, 295, 1088, 1121, 1055, 296,
	1182, 1183, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 1145, 329, 1139, 1138, 1059, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 1130, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 1065, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 1077, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 1137, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 1150, 1151, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 1087, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 1132, 1133, 0,
	1093, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 1056, 270, 1174,
	459, 460, 1078, 1126, 461, 1140, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 1136, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 1066,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 1134, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 1181, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 1054, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 1146, 1147, 1148, 1149, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 1076, 591, 592, 593,
	594, 0, 596, 597, 0, 1060, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 1143, 1180, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	1057, 0, 0, 0, 0, 0, 0, 0, 1053, 0,
	0, 0, 0, 0, 0, 2367, 2368, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 1082, 0, 0, 0, 1080, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	0, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	270, 1174, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 1143, 1180, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1098, 1070, 1071, 1072, 1068, 1069, 1081, 0,
	2587, 0, 0, 0, 0, 0, 0, 2585, 2586, 271,
	273, 272, 274, 275, 276, 277, 1082, 278, 279, 0,
	1080, 0, 0, 0, 1122, 1086, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 1135,
	0, 288, 1142, 289, 1141, 0, 1152, 290, 291, 292,
	293, 294, 295, 1088, 1121, 0, 296, 1182, 1183, 626,
	0, 297, 298, 1128, 0, 1109, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 1112, 1110,
	1111, 1118, 1114, 1113, 1117, 324, 325, 326, 327, 328,
	1145, 329, 1139, 1138, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 1130,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 1065, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 1153, 1154, 360, 1077, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 1137, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 1150, 1151,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 1160, 0, 1087, 379, 0, 380, 381, 382, 383,
	384, 1123, 1124, 1127, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 1165, 394, 1132, 1133, 0, 1093, 0, 396,
	397, 1167, 1125, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 1161, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 1116, 1115, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 270, 1174, 459, 460, 1078,
	1126, 461, 1140, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 1155, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 1156, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 1136, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 3033, 3034, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 1119, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 1134, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 1181, 567, 568, 569, 570, 1157,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	1146, 1147, 1148, 1149, 0, 595, 0, 587, 588, 589,
	1158, 590, 1159, 1076, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	1120, 605, 0, 0, 606, 607, 608, 665, 1143, 1180,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1098, 1070, 1071,
	1072, 1068, 1069, 1081, 0, 0, 0, 0, 0, 0,
	0, 0, 2072, 2073, 271, 273, 272, 274, 275, 276,
	277, 1082, 278, 279, 0, 1080, 0, 0, 0, 1122,
	1086, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 0, 1135, 0, 288, 1142, 289, 1141,
	0, 1152, 290, 291, 292, 293, 294, 295, 1088, 1121,
	1055, 296, 1182, 1183, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 4490, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 1145, 329, 1139, 1138, 1059,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 1130, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 1065, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	1077, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	1137, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 1150, 1151, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 1087, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 1132,
	1133, 0, 1093, 0, 396, 397, 0, 1125, 0, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 1056,
	270, 0, 459, 460, 1078, 1126, 461, 1140, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 1136, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 1066, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 1134, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 1181,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	1054, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 1146, 1147, 1148, 1149, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 1076, 591,
	592, 593, 594, 0, 4489, 597, 0, 1060, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 1143, 1180, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1044, 0, 1220, 0, 0, 1051, 1052, 0,
	0, 0, 0, 0, 0, 0, 1082, 0, 0, 0,
	1080, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 0, 0, 0,
	0, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 1121, 0, 296, 624,
	625, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 641, 642, 0, 643,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	1206, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 270, 1174, 459,
	460, 0, 1126, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 1212, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 1214,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 230, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 0, 573, 564,
	232, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 1578,
	666, 667, 0, 610, 609, 611, 668, 1220, 612, 0,
	0, 0, 224, 613, 614, 669, 615, 616, 617, 0,
	0, 225, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	0, 1210, 0, 1915, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 1121,
	0, 296, 624, 625, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 1206, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	270, 1174, 459, 460, 0, 1126, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 1212, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 1214, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 230, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	0, 573, 564, 232, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 1578, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 224, 613, 614, 669, 615,
	616, 617, 0, 0, 225, 0, 0, 0, 3193, 0,
	1220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1210, 0, 1915, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 1122, 0, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 1121, 0, 296, 624, 625, 626, 0, 297,
	298, 1128, 0, 1109, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 1112, 1110, 1111, 1118,
	1114, 1113, 1117, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	1153, 1154, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 1160,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 1123,
	1124, 1127, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	1165, 394, 641, 642, 0, 643, 0, 396, 397, 1167,
	1125, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 1206, 408, 410, 409,
	0, 411, 1161, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 1116, 1115, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 0, 270, 1174, 459, 460, 0, 1126, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 1212, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	1155, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 1156, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 655, 1214, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 1119, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 1157, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 1158, 590,
	1159, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 1120, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 0, 612, 0, 1202, 0, 1220, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 1210, 0, 1208,
	1122, 0, 0, 0, 0, 280, 281, 1162, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	1121, 0, 296, 624, 625, 626, 0, 297, 298, 1128,
	0, 1109, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	1163, 321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113,
	1117, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 1153, 1154,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 1164, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 1160, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 1123, 1124, 1127,
	462, 1166, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 1165, 394,
	641, 642, 0, 643, 0, 396, 397, 1167, 1125, 1168,
	398, 399, 400, 1169, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 1206, 408, 410, 409, 0, 411,
	1161, 1170, 412, 413, 1171, 0, 414, 0, 0, 0,
	415, 416, 419, 1116, 1115, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 1172, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 1173, 458, 448,
	0, 270, 1174, 459, 460, 0, 1126, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 1212, 467, 468, 469,
	0, 0, 470, 471, 648, 1175, 472, 1176, 1155, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 1156, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 1177, 524, 525,
	526, 527, 655, 1214, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 1119, 550, 551, 533, 534, 552,
	553, 1178, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 1157, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 1158, 590, 1159, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 1120, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1220, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 1122, 0, 1210, 0, 1208, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 1121, 0, 296, 624, 625, 626, 0,
	297, 298, 1128, 0, 1109, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 1112, 1110, 1111,
	1118, 1114, 1113, 1117, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 1153, 1154, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	1160, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	1123, 1124, 1127, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 1165, 394, 641, 642, 0, 643, 0, 396, 397,
	1167, 1125, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 1206, 408, 410,
	409, 0, 411, 1161, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 1116, 1115, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 0, 270, 1174, 459, 460, 0, 1126,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 1212,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 1155, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 1156, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 655, 1214, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 1119, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 1157, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 1158,
	590, 1159, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 1120,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 1220, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 1122, 0, 1210, 0,
	1208, 280, 281, 1162, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 1121, 0, 296, 624,
	625, 626, 0, 297, 298, 1128, 0, 1109, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 1163, 321, 322, 323,
	1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 1153, 1154, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 1164, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 1160, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 1123, 1124, 1127, 462, 1166, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 1165, 394, 641, 642, 0, 643,
	0, 396, 397, 1167, 1125, 1168, 398, 399, 400, 1169,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 1161, 1170, 412, 413,
	1171, 0, 414, 0, 0, 0, 415, 416, 419, 1116,
	1115, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	1172, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 1173, 458, 448, 0, 270, 1174, 459,
	460, 0, 1126, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 1175, 472, 1176, 1155, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 1156, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 1177, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	1119, 550, 551, 533, 534, 552, 553, 1178, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 1157, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 1158, 590, 1159, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 1120, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 1220, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 1122,
	0, 0, 0, 3982, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 1121,
	0, 296, 624, 625, 626, 0, 297, 298, 1128, 0,
	1109, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 1112, 1110, 1111, 1118, 1114, 1113, 1117,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 1153, 1154, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 1160, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 1123, 1124, 1127, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 1125, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 1161,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 1116, 1115, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	270, 1174, 459, 460, 0, 1126, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 1155, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	1156, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 1214, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 1119, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 1157, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 1158, 590, 1159, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 1120, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	1044, 612, 1301, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 1814, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 1306, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1165, 394, 641, 642, 0, 643, 0, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 0, 1174, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 230, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 232, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 1578, 666, 667,
	0, 610, 609, 611, 668, 1575, 612, 1301, 0, 0,
	224, 613, 614, 669, 615, 616, 617, 0, 0, 225,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 186, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	1306, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	0, 1174, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 230, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 232, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 1578, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 224, 613, 614, 669, 615,
	616, 617, 1301, 1300, 225, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 186, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 1306, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1165, 394, 641, 642, 0, 643, 0, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 0, 1174, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1301, 1300, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1600, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	1306, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	0, 1174, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1301, 1300, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 3476, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 1306, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1165, 394, 641, 642, 0, 643, 0, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 0, 1174, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 2255, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1301, 2169, 0,
	0, 0, 0, 2170, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 1600, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	1306, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 2168, 410, 409, 0, 411, 645,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	0, 1174, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1301, 1300, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 1600, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 1306, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1165, 394, 641, 642, 0, 643, 0, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 0, 1174, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 1220, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 1122, 0, 0,
	0, 1584, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 1121, 0, 296,
	624, 625, 626, 0, 297, 298, 1128, 0, 1109, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 1112, 1110, 1111, 1118, 1114, 1113, 1117, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 1153, 1154, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 1160, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 1123, 1124, 1127, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 1165, 394, 641, 642, 0,
	643, 0, 396, 397, 1167, 1125, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 1161, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	1116, 1115, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 0, 270, 1174,
	459, 460, 0, 1126, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 1155, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 1156, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 1119, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 1157, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 1158, 590, 1159, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 1120, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 1044, 612,
	265, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 230,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 232, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 1578, 666, 667, 0, 610,
	609, 611, 668, 265, 612, 0, 0, 0, 224, 613,
	614, 669, 615, 616, 617, 0, 0, 225, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 186,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 0, 612, 265, 2946,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 1929, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 265, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 4646, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 265,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 3426, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 270, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 265, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 1572, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 0, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	0, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	265, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 2934, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 265, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 3582,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 885, 612, 792, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 2246, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 799, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	883, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 797, 578, 579, 580, 581, 582,
	798, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 790, 612, 792, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	802, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 799,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 797,
	578, 579, 580, 581, 582, 798, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 1968, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 0, 0, 802, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 0, 1974, 0,
	288, 1964, 289, 1980, 0, 1987, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 1990, 1991, 0, 0,
	297, 298, 0, 0, 1306, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 1145,
	329, 1978, 1977, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 1130, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 0, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 1976, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 1985, 1986, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	0, 0, 0, 379, 0, 380, 381, 382, 383, 384,
	0, 0, 0, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 1165, 394, 1971, 1972, 0, 1967, 0, 396, 397,
	1167, 0, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 0, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 0, 0, 1174, 459, 460, 0, 0,
	461, 1979, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 0, 1175, 472,
	1176, 0, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 1961, 485, 486, 487,
	1962, 488, 489, 490, 0, 491, 0, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	1975, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 0, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 1973, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 1989, 567, 568, 569, 570, 0, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 1981,
	1982, 1983, 1984, 0, 595, 0, 587, 588, 589, 0,
	590, 0, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 0, 1965, 1988, 0,
	610, 609, 611, 0, 0, 612, 0, 0, 792, 0,
	613, 614, 0, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 1955, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 799, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 797, 578, 579, 580, 581, 582,
	798, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 792, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	802, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 799, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 2289, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	2290, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 797, 578, 579, 580, 581, 582, 798, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	2291, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 2038,
	612, 1301, 2005, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 802, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	1162, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 1306, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 1163, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 2002, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 1164, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 1166, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 1165, 394, 641, 642, 0, 643, 0, 396, 397,
	1167, 644, 1168, 398, 399, 400, 1169, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 1170, 412, 413, 1171, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 1172, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	1173, 458, 448, 0, 0, 1174, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 1175, 472,
	1176, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	1177, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 2003, 550, 551,
	533, 534, 552, 553, 1178, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 1999, 612, 1301, 2005, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 1306,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 2002, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1165, 394, 641, 642,
	0, 643, 0, 396, 397, 1167, 644, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 0, 0,
	1174, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 2003, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 792, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	799, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 270, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 1994, 540,
	541, 542, 543, 0, 1995, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	797, 578, 579, 580, 581, 582, 798, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 1993, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 792, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 802, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 799, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 270, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 1946, 540, 541, 542,
	543, 0, 1947, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 797, 578,
	579, 580, 581, 582, 798, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 1945, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 0, 612, 1301, 2005, 0,
	0, 613, 614, 669, 615, 616, 617, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 802, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	1306, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 2002,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	0, 1174, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 2003, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 0, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 1301, 1300, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 1306, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1165, 394, 641, 642, 0, 643, 0, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 0, 1174, 459, 460, 3769,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1301, 1300, 0,
	0, 0, 0, 1298, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 1162, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	1306, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 1163,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	1164, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	1166, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 0, 391, 392, 393, 395, 0, 1165, 394, 641,
	642, 0, 643, 0, 396, 397, 1167, 644, 1168, 398,
	399, 400, 1169, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	1170, 412, 413, 1171, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 1172, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 1173, 458, 448, 0,
	0, 1174, 459, 460, 3397, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 0, 467, 468, 469, 0,
	0, 470, 471, 648, 1175, 472, 1176, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 1177, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	1178, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 265, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 270, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	1628, 0, 1301, 1300, 0, 0, 0, 0, 1298, 0,
	0, 0, 0, 0, 0, 0, 0, 802, 0, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 1162, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 1306, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 1163, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 1627, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 1164, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 1166, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 1165, 394, 641, 642, 0, 643, 0, 396,
	397, 1167, 644, 1168, 398, 399, 400, 1169, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 1170, 412, 413, 1171, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 1172, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 1173, 458, 448, 0, 0, 1174, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 1175,
	472, 1176, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 1626,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 1177, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 1625, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 1178, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	0, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 1546, 0, 1301,
	1300, 0, 0, 0, 0, 1298, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 1162, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 1306, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 1163, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 1164, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 1545, 639,
	640, 462, 1166, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 1165,
	394, 641, 642, 0, 643, 0, 396, 397, 1167, 644,
	1168, 398, 399, 400, 1169, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 1170, 412, 413, 1171, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 1172, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 1173, 458,
	448, 0, 0, 1174, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 1175, 472, 1176, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 1177, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 1178, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 1506, 0, 1301, 1300, 0, 0,
	0, 0, 1298, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 1162, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 1306,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 1163, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 1164,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 1166,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 1165, 394, 641, 642,
	0, 643, 0, 396, 397, 1167, 644, 1168, 398, 399,
	400, 1169, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 1170,
	412, 413, 1171, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 1172, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 1173, 458, 448, 0, 0,
	1174, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 1175, 472, 1176, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 1177, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 1178,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 1474, 0, 1301, 1300, 0, 0, 0, 0, 1298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 1306, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 1473, 639, 640, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1165, 394, 641, 642, 0, 643, 0,
	396, 397, 1167, 644, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 0, 0, 1174, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 1295, 0,
	1301, 1300, 0, 0, 0, 0, 1298, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 1306, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 1294,
	639, 640, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1165, 394, 641, 642, 0, 643, 0, 396, 397, 1167,
	644, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 0, 0, 1174, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1301, 1300, 0, 0, 0,
	0, 1298, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 1306, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1165, 394, 641, 642, 0,
	643, 0, 396, 397, 1167, 644, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 0, 0, 1174,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 0, 612,
	1301, 2005, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 1162,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 1306, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 1163, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 2045, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 1164, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 1166, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	1165, 394, 641, 642, 0, 643, 0, 396, 397, 1167,
	644, 1168, 398, 399, 400, 1169, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 1170, 412, 413, 1171, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 1172, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 1173,
	458, 448, 0, 0, 1174, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 1175, 472, 1176,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 1177,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 1178, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 0, 612, 1301, 1300, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 1162, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 1306, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 1163, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 1164, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 1166, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 1165, 394, 641, 642, 0,
	643, 0, 396, 397, 1167, 644, 1168, 398, 399, 400,
	1169, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 1170, 412,
	413, 1171, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 1172, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 1173, 458, 448, 0, 0, 1174,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 1175, 472, 1176, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 1177, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 1178, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 1301, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 1162, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 1306, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 1163, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 1164, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 1166, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 1165, 394, 641, 642, 0, 643, 0,
	396, 397, 1167, 644, 1168, 398, 399, 400, 1169, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 1170, 412, 413, 1171,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 1172,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 1173, 458, 448, 0, 0, 1174, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	1175, 472, 1176, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 1177, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 1178, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 265, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 2753,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	2750, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 2757, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 2959, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 2756, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 2956, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 2958,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 2955, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 2755,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 2957, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 265,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 2753, 297, 298,
	627, 0, 0, 2747, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 2750, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 2757, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	2756, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 2746, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 2755, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 2754,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 1699, 612, 265, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 1698, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 270, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 1702, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	1700, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 1701, 609, 611, 668, 1448, 612, 265,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 1450, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 270, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 1212, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 1445, 612, 265, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 1447, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 270, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 1212, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 1352, 612, 265,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 268, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 1354, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 269, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 270, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 1212, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 701, 612, 265, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 700, 276, 277, 690, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 693, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 694, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 695, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 689, 612, 265,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 690, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 693, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 694, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 695, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 265, 610, 609,
	611, 668, 0, 612, 0, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 271, 273, 272, 274, 275, 276,
	277, 0, 278, 279, 0, 0, 0, 0, 0, 618,
	0, 0, 0, 0, 280, 281, 0, 282, 283, 284,
	285, 286, 287, 619, 620, 0, 288, 621, 289, 622,
	0, 623, 290, 291, 292, 293, 294, 295, 0, 0,
	0, 296, 624, 625, 626, 0, 297, 298, 627, 0,
	0, 0, 299, 300, 301, 302, 303, 304, 305, 0,
	0, 307, 308, 309, 306, 310, 0, 311, 0, 312,
	313, 314, 315, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 323, 0, 0, 0, 0, 0, 0, 0,
	324, 325, 326, 327, 328, 0, 329, 628, 629, 0,
	333, 330, 331, 0, 334, 332, 335, 0, 336, 337,
	338, 0, 0, 339, 340, 341, 0, 342, 343, 0,
	344, 345, 346, 0, 347, 348, 630, 349, 350, 351,
	353, 355, 352, 356, 357, 358, 359, 631, 632, 360,
	0, 268, 0, 0, 0, 0, 0, 361, 362, 363,
	633, 0, 0, 0, 364, 0, 365, 366, 0, 0,
	0, 367, 368, 634, 635, 369, 370, 371, 372, 373,
	374, 375, 376, 377, 0, 378, 636, 0, 637, 379,
	0, 380, 381, 382, 383, 384, 638, 639, 640, 462,
	0, 385, 386, 0, 387, 388, 389, 390, 0, 0,
	0, 269, 391, 392, 393, 395, 0, 0, 394, 641,
	642, 0, 643, 0, 396, 397, 0, 644, 0, 398,
	399, 400, 0, 401, 0, 0, 0, 402, 403, 404,
	405, 406, 407, 0, 408, 410, 409, 0, 411, 645,
	0, 412, 413, 0, 0, 414, 0, 0, 0, 415,
	416, 419, 0, 0, 417, 418, 420, 421, 0, 422,
	423, 425, 428, 424, 426, 427, 429, 442, 430, 431,
	432, 433, 434, 435, 436, 437, 438, 439, 440, 441,
	444, 0, 443, 0, 445, 446, 447, 452, 454, 455,
	450, 451, 453, 456, 457, 449, 0, 458, 448, 0,
	270, 0, 459, 460, 0, 646, 461, 647, 463, 464,
	0, 0, 465, 0, 0, 1212, 467, 468, 469, 0,
	0, 470, 471, 648, 0, 472, 0, 649, 473, 474,
	466, 475, 476, 477, 478, 479, 480, 481, 482, 0,
	483, 484, 650, 485, 486, 487, 651, 488, 489, 490,
	652, 491, 653, 492, 493, 0, 494, 495, 0, 496,
	497, 498, 499, 500, 501, 502, 654, 503, 505, 504,
	506, 0, 507, 0, 508, 509, 510, 0, 0, 0,
	0, 511, 0, 513, 514, 515, 516, 512, 517, 518,
	519, 520, 0, 521, 522, 523, 0, 524, 525, 526,
	527, 655, 528, 0, 529, 530, 536, 537, 538, 531,
	532, 539, 540, 541, 542, 543, 0, 545, 546, 544,
	547, 548, 549, 0, 550, 551, 533, 534, 552, 553,
	0, 554, 555, 556, 557, 558, 559, 656, 0, 560,
	0, 561, 562, 563, 565, 535, 566, 571, 572, 657,
	567, 568, 569, 570, 658, 574, 575, 0, 576, 577,
	0, 573, 564, 0, 578, 579, 580, 581, 582, 583,
	584, 354, 585, 0, 586, 659, 660, 661, 662, 0,
	595, 0, 587, 588, 589, 663, 590, 664, 0, 591,
	592, 593, 594, 0, 596, 597, 0, 0, 598, 599,
	600, 602, 603, 601, 604, 0, 605, 0, 0, 606,
	607, 608, 665, 666, 667, 265, 610, 609, 611, 668,
	0, 612, 0, 0, 0, 0, 613, 614, 669, 615,
	616, 617, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 3347, 458, 448, 0, 270, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 0, 610, 609, 611, 668, 2904, 612,
	265, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	0, 0, 0, 0, 0, 0, 0, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 2903,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 270, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 2261, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 268,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 269,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 270, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 265, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 2202,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 2209, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 2208, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 2195, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 268, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 2197, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 269, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 270, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 265, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	2165, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 1212,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 1550, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 1549, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 1465,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 1458, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 1460, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 1285,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	1284, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 1275, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 1274, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 1272,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	1271, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 1267, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 1266, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 0, 610, 609, 611, 668, 671,
	612, 265, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 0, 0, 0, 0, 0, 0, 0, 271, 273,
	272, 274, 275, 276, 277, 0, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 268, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 269, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 270, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 0,
	610, 609, 611, 668, 256, 612, 265, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 0, 0, 0, 0,
	0, 0, 0, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 265, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 270, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 265, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	693, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 694,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 695, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	265, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 2298, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 270, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 265, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 2296, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 268, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 269, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 270, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 265, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 2294, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	268, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	269, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 270,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 265, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 268, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 2215, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 269, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 270, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 265, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 268, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 2024, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 269, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 270, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	265, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 268, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 2018,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 269, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 270, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 872, 612, 265, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 871, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 469, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 870, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 265, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 2959, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 4049, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 758, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 1322, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 1320, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 759, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 755, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 1323, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 754, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 758, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 1322, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	1320, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 759, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 755, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 1323, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 754, 660, 661, 662, 0, 595, 0, 587, 1321,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 680, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 679, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 678, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 0, 612, 265, 2946, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 0, 612, 265, 4059,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 265, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 4319, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 265, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 3959, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 265, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 3737, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	265, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 2639, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 0, 612, 265, 2946, 0, 0, 613,
	614, 669, 615, 616, 617, 0, 0, 0, 0, 0,
	0, 0, 271, 273, 272, 274, 275, 276, 277, 0,
	278, 279, 0, 0, 0, 0, 0, 618, 0, 0,
	0, 0, 280, 281, 0, 282, 283, 284, 285, 286,
	287, 619, 620, 0, 288, 621, 289, 622, 0, 623,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	624, 625, 626, 0, 297, 298, 627, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 305, 0, 0, 307,
	308, 309, 306, 310, 0, 311, 0, 312, 313, 314,
	315, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	323, 0, 0, 0, 0, 0, 0, 0, 324, 325,
	326, 327, 328, 0, 329, 628, 629, 0, 333, 330,
	331, 0, 334, 332, 335, 0, 336, 337, 338, 0,
	0, 339, 340, 341, 0, 342, 343, 0, 344, 345,
	346, 0, 347, 348, 630, 349, 350, 351, 353, 355,
	352, 356, 357, 358, 359, 631, 632, 360, 0, 0,
	0, 0, 0, 0, 0, 361, 362, 363, 633, 0,
	0, 0, 364, 0, 365, 366, 0, 0, 0, 367,
	368, 634, 635, 369, 370, 371, 372, 373, 374, 375,
	376, 377, 0, 378, 636, 0, 637, 379, 0, 380,
	381, 382, 383, 384, 638, 639, 640, 462, 0, 385,
	386, 0, 387, 388, 389, 390, 0, 0, 0, 0,
	391, 392, 393, 395, 0, 0, 394, 641, 642, 0,
	643, 0, 396, 397, 0, 644, 0, 398, 399, 400,
	0, 401, 0, 0, 0, 402, 403, 404, 405, 406,
	407, 0, 408, 410, 409, 0, 411, 645, 0, 412,
	413, 0, 0, 414, 0, 0, 0, 415, 416, 419,
	0, 0, 417, 418, 420, 421, 0, 422, 423, 425,
	428, 424, 426, 427, 429, 442, 430, 431, 432, 433,
	434, 435, 436, 437, 438, 439, 440, 441, 444, 0,
	443, 0, 445, 446, 447, 452, 454, 455, 450, 451,
	453, 456, 457, 449, 0, 458, 448, 0, 0, 0,
	459, 460, 0, 646, 461, 647, 463, 464, 0, 0,
	465, 0, 0, 0, 467, 468, 2943, 0, 0, 470,
	471, 648, 0, 472, 0, 649, 473, 474, 466, 475,
	476, 477, 478, 479, 480, 481, 482, 0, 483, 484,
	650, 485, 486, 487, 651, 488, 489, 490, 652, 491,
	653, 492, 493, 0, 494, 495, 0, 496, 497, 498,
	499, 500, 501, 502, 654, 503, 505, 504, 506, 0,
	507, 0, 508, 509, 510, 0, 0, 0, 0, 511,
	0, 513, 514, 515, 516, 512, 517, 518, 519, 520,
	0, 521, 522, 523, 0, 524, 525, 526, 527, 655,
	528, 0, 529, 530, 536, 537, 538, 531, 532, 539,
	540, 541, 542, 543, 0, 545, 546, 544, 547, 548,
	549, 0, 550, 551, 533, 534, 552, 553, 0, 554,
	555, 556, 557, 558, 559, 656, 0, 560, 0, 561,
	562, 563, 565, 535, 566, 571, 572, 657, 567, 568,
	569, 570, 658, 574, 575, 0, 576, 577, 0, 573,
	564, 0, 578, 579, 580, 581, 582, 583, 584, 354,
	585, 0, 586, 659, 660, 661, 662, 0, 595, 0,
	587, 588, 589, 663, 590, 664, 0, 591, 592, 593,
	594, 0, 596, 597, 0, 0, 598, 599, 600, 602,
	603, 601, 604, 0, 605, 0, 0, 606, 607, 608,
	665, 666, 667, 265, 610, 609, 611, 668, 0, 612,
	0, 0, 0, 0, 613, 614, 669, 615, 616, 617,
	271, 273, 272, 274, 275, 276, 277, 2271, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 2259, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 758, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 748, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 759, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 755, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 1583, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 754, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 1556, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 1555, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1540, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 1538, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 1533, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1510, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 1508, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 1471, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1453, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 638, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 0, 610, 609, 611, 668, 1290, 612, 265, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 0, 0,
	0, 0, 0, 0, 0, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 1289, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 0, 610, 609, 611,
	668, 1281, 612, 265, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 0, 0, 0, 0, 0, 0, 0,
	271, 273, 272, 274, 275, 276, 277, 0, 278, 279,
	0, 0, 0, 0, 0, 618, 0, 0, 0, 0,
	280, 281, 0, 282, 283, 284, 285, 286, 287, 619,
	620, 0, 288, 621, 289, 622, 0, 623, 290, 291,
	292, 293, 294, 295, 0, 0, 0, 296, 624, 625,
	626, 0, 297, 298, 627, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 305, 0, 0, 307, 308, 309,
	306, 310, 0, 311, 0, 312, 313, 314, 315, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 323, 0,
	0, 0, 0, 0, 0, 0, 324, 325, 326, 327,
	328, 0, 329, 628, 629, 0, 333, 330, 331, 0,
	334, 332, 335, 0, 336, 337, 338, 0, 0, 339,
	340, 341, 0, 342, 343, 0, 344, 345, 346, 0,
	347, 348, 630, 349, 350, 351, 353, 355, 352, 356,
	357, 358, 359, 631, 632, 360, 0, 0, 0, 0,
	0, 0, 0, 361, 362, 363, 633, 0, 0, 0,
	364, 0, 365, 366, 0, 0, 0, 367, 368, 634,
	635, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	0, 378, 636, 0, 637, 379, 0, 380, 381, 382,
	383, 384, 1280, 639, 640, 462, 0, 385, 386, 0,
	387, 388, 389, 390, 0, 0, 0, 0, 391, 392,
	393, 395, 0, 0, 394, 641, 642, 0, 643, 0,
	396, 397, 0, 644, 0, 398, 399, 400, 0, 401,
	0, 0, 0, 402, 403, 404, 405, 406, 407, 0,
	408, 410, 409, 0, 411, 645, 0, 412, 413, 0,
	0, 414, 0, 0, 0, 415, 416, 419, 0, 0,
	417, 418, 420, 421, 0, 422, 423, 425, 428, 424,
	426, 427, 429, 442, 430, 431, 432, 433, 434, 435,
	436, 437, 438, 439, 440, 441, 444, 0, 443, 0,
	445, 446, 447, 452, 454, 455, 450, 451, 453, 456,
	457, 449, 0, 458, 448, 0, 0, 0, 459, 460,
	0, 646, 461, 647, 463, 464, 0, 0, 465, 0,
	0, 0, 467, 468, 469, 0, 0, 470, 471, 648,
	0, 472, 0, 649, 473, 474, 466, 475, 476, 477,
	478, 479, 480, 481, 482, 0, 483, 484, 650, 485,
	486, 487, 651, 488, 489, 490, 652, 491, 653, 492,
	493, 0, 494, 495, 0, 496, 497, 498, 499, 500,
	501, 502, 654, 503, 505, 504, 506, 0, 507, 0,
	508, 509, 510, 0, 0, 0, 0, 511, 0, 513,
	514, 515, 516, 512, 517, 518, 519, 520, 0, 521,
	522, 523, 0, 524, 525, 526, 527, 655, 528, 0,
	529, 530, 536, 537, 538, 531, 532, 539, 540, 541,
	542, 543, 0, 545, 546, 544, 547, 548, 549, 0,
	550, 551, 533, 534, 552, 553, 0, 554, 555, 556,
	557, 558, 559, 656, 0, 560, 0, 561, 562, 563,
	565, 535, 566, 571, 572, 657, 567, 568, 569, 570,
	658, 574, 575, 0, 576, 577, 0, 573, 564, 0,
	578, 579, 580, 581, 582, 583, 584, 354, 585, 0,
	586, 659, 660, 661, 662, 0, 595, 0, 587, 588,
	589, 663, 590, 664, 0, 591, 592, 593, 594, 0,
	596, 597, 0, 0, 598, 599, 600, 602, 603, 601,
	604, 0, 605, 0, 0, 606, 607, 608, 665, 666,
	667, 265, 610, 609, 611, 668, 0, 612, 0, 0,
	0, 0, 613, 614, 669, 615, 616, 617, 271, 273,
	272, 274, 275, 276, 277, 1234, 278, 279, 0, 0,
	0, 0, 0, 618, 0, 0, 0, 0, 280, 281,
	0, 282, 283, 284, 285, 286, 287, 619, 620, 0,
	288, 621, 289, 622, 0, 623, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 624, 625, 626, 0,
	297, 298, 627, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 305, 0, 0, 307, 308, 309, 306, 310,
	0, 311, 0, 312, 313, 314, 315, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 323, 0, 0, 0,
	0, 0, 0, 0, 324, 325, 326, 327, 328, 0,
	329, 628, 629, 0, 333, 330, 331, 0, 334, 332,
	335, 0, 336, 337, 338, 0, 0, 339, 340, 341,
	0, 342, 343, 0, 344, 345, 346, 0, 347, 348,
	630, 349, 350, 351, 353, 355, 352, 356, 357, 358,
	359, 631, 632, 360, 0, 0, 0, 0, 0, 0,
	0, 361, 362, 363, 633, 0, 0, 0, 364, 0,
	365, 366, 0, 0, 0, 367, 368, 634, 635, 369,
	370, 371, 372, 373, 374, 375, 376, 377, 0, 378,
	636, 0, 637, 379, 0, 380, 381, 382, 383, 384,
	638, 639, 640, 462, 0, 385, 386, 0, 387, 388,
	389, 390, 0, 0, 0, 0, 391, 392, 393, 395,
	0, 0, 394, 641, 642, 0, 643, 0, 396, 397,
	0, 644, 0, 398, 399, 400, 0, 401, 0, 0,
	0, 402, 403, 404, 405, 406, 407, 0, 408, 410,
	409, 0, 411, 645, 0, 412, 413, 0, 0, 414,
	0, 0, 0, 415, 416, 419, 0, 0, 417, 418,
	420, 421, 0, 422, 423, 425, 428, 424, 426, 427,
	429, 442, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 444, 0, 443, 0, 445, 446,
	447, 452, 454, 455, 450, 451, 453, 456, 457, 449,
	0, 458, 448, 0, 0, 0, 459, 460, 0, 646,
	461, 647, 463, 464, 0, 0, 465, 0, 0, 0,
	467, 468, 469, 0, 0, 470, 471, 648, 0, 472,
	0, 649, 473, 474, 466, 475, 476, 477, 478, 479,
	480, 481, 482, 0, 483, 484, 650, 485, 486, 487,
	651, 488, 489, 490, 652, 491, 653, 492, 493, 0,
	494, 495, 0, 496, 497, 498, 499, 500, 501, 502,
	654, 503, 505, 504, 506, 0, 507, 0, 508, 509,
	510, 0, 0, 0, 0, 511, 0, 513, 514, 515,
	516, 512, 517, 518, 519, 520, 0, 521, 522, 523,
	0, 524, 525, 526, 527, 655, 528, 0, 529, 530,
	536, 537, 538, 531, 532, 539, 540, 541, 542, 543,
	0, 545, 546, 544, 547, 548, 549, 0, 550, 551,
	533, 534, 552, 553, 0, 554, 555, 556, 557, 558,
	559, 656, 0, 560, 0, 561, 562, 563, 565, 535,
	566, 571, 572, 657, 567, 568, 569, 570, 658, 574,
	575, 0, 576, 577, 0, 573, 564, 0, 578, 579,
	580, 581, 582, 583, 584, 354, 585, 0, 586, 659,
	660, 661, 662, 0, 595, 0, 587, 588, 589, 663,
	590, 664, 0, 591, 592, 593, 594, 0, 596, 597,
	0, 0, 598, 599, 600, 602, 603, 601, 604, 0,
	605, 0, 0, 606, 607, 608, 665, 666, 667, 265,
	610, 609, 611, 668, 0, 612, 0, 0, 0, 0,
	613, 614, 669, 615, 616, 617, 271, 273, 272, 274,
	275, 276, 277, 764, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 758, 612, 265, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 748, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 746, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 747, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 759,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 749, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 755, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 750, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 754, 660, 661, 662, 0, 595, 0, 587,
	752, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 740, 612, 265,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 741, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 703, 612, 265, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 0, 610, 609, 611, 668, 697, 612, 265,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 0,
	0, 0, 0, 0, 0, 0, 271, 273, 272, 274,
	275, 276, 277, 0, 278, 279, 0, 0, 0, 0,
	0, 618, 0, 0, 0, 0, 280, 281, 0, 282,
	283, 284, 285, 286, 287, 619, 620, 0, 288, 621,
	289, 622, 0, 623, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 624, 625, 626, 0, 297, 298,
	627, 0, 0, 0, 299, 300, 301, 302, 303, 304,
	305, 0, 0, 307, 308, 309, 306, 310, 0, 311,
	0, 312, 313, 314, 315, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 323, 0, 0, 0, 0, 0,
	0, 0, 324, 325, 326, 327, 328, 0, 329, 628,
	629, 0, 333, 330, 331, 0, 334, 332, 335, 0,
	336, 337, 338, 0, 0, 339, 340, 341, 0, 342,
	343, 0, 344, 345, 346, 0, 347, 348, 630, 349,
	350, 351, 353, 355, 352, 356, 357, 358, 359, 631,
	632, 360, 0, 0, 0, 0, 0, 0, 0, 361,
	362, 363, 633, 0, 0, 0, 364, 0, 365, 366,
	0, 0, 0, 367, 368, 634, 635, 369, 370, 371,
	372, 373, 374, 375, 376, 377, 0, 378, 636, 0,
	637, 379, 0, 380, 381, 382, 383, 384, 638, 639,
	640, 462, 0, 385, 386, 0, 387, 388, 389, 390,
	0, 0, 0, 0, 391, 392, 393, 395, 0, 0,
	394, 641, 642, 0, 643, 0, 396, 397, 0, 644,
	0, 398, 399, 400, 0, 401, 0, 0, 0, 402,
	403, 404, 405, 406, 407, 0, 408, 410, 409, 0,
	411, 645, 0, 412, 413, 0, 0, 414, 0, 0,
	0, 415, 416, 419, 0, 0, 417, 418, 420, 421,
	0, 422, 423, 425, 428, 424, 426, 427, 429, 442,
	430, 431, 432, 433, 434, 435, 436, 437, 438, 439,
	440, 441, 444, 0, 443, 0, 445, 446, 447, 452,
	454, 455, 450, 451, 453, 456, 457, 449, 0, 458,
	448, 0, 0, 0, 459, 460, 0, 646, 461, 647,
	463, 464, 0, 0, 465, 0, 0, 0, 467, 468,
	469, 0, 0, 470, 471, 648, 0, 472, 0, 649,
	473, 474, 466, 475, 476, 477, 478, 479, 480, 481,
	482, 0, 483, 484, 650, 485, 486, 487, 651, 488,
	489, 490, 652, 491, 653, 492, 493, 0, 494, 495,
	0, 496, 497, 498, 499, 500, 501, 502, 654, 503,
	505, 504, 506, 0, 507, 0, 508, 509, 510, 0,
	0, 0, 0, 511, 0, 513, 514, 515, 516, 512,
	517, 518, 519, 520, 0, 521, 522, 523, 0, 524,
	525, 526, 527, 655, 528, 0, 529, 530, 536, 537,
	538, 531, 532, 539, 540, 541, 542, 543, 0, 545,
	546, 544, 547, 548, 549, 0, 550, 551, 533, 534,
	552, 553, 0, 554, 555, 556, 557, 558, 559, 656,
	0, 560, 0, 561, 562, 563, 565, 535, 566, 571,
	572, 657, 567, 568, 569, 570, 658, 574, 575, 0,
	576, 577, 0, 573, 564, 0, 578, 579, 580, 581,
	582, 583, 584, 354, 585, 0, 586, 659, 660, 661,
	662, 0, 595, 0, 587, 588, 589, 663, 590, 664,
	0, 591, 592, 593, 594, 0, 596, 597, 0, 0,
	598, 599, 600, 602, 603, 601, 604, 0, 605, 0,
	0, 606, 607, 608, 665, 666, 667, 0, 610, 609,
	611, 668, 675, 612, 265, 0, 0, 0, 613, 614,
	669, 615, 616, 617, 0, 0, 0, 0, 0, 0,
	0, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 638, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 265, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	265, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 3446,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 265, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 3383, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 536, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 265, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	0, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 3312, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 550, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 265, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 3310, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 265, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 3295, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 505, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	265, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 379, 0, 380, 381, 382, 383, 384, 2914,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 477, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 500, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 528, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 265, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 271, 273, 272, 274, 275,
	276, 277, 0, 278, 279, 0, 0, 0, 0, 0,
	618, 0, 0, 0, 0, 280, 281, 0, 282, 283,
	284, 285, 286, 287, 619, 620, 0, 288, 621, 289,
	622, 0, 623, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 624, 625, 626, 0, 297, 298, 627,
	0, 0, 0, 299, 300, 301, 302, 303, 304, 305,
	0, 0, 307, 308, 309, 306, 310, 0, 311, 0,
	312, 313, 314, 315, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 323, 0, 0, 0, 0, 0, 0,
	0, 324, 325, 326, 327, 328, 0, 329, 628, 629,
	0, 333, 330, 331, 0, 334, 332, 335, 0, 336,
	337, 338, 0, 0, 339, 340, 341, 0, 342, 343,
	0, 344, 345, 346, 0, 347, 348, 630, 349, 350,
	351, 353, 355, 352, 356, 357, 358, 359, 631, 632,
	360, 0, 0, 0, 0, 0, 0, 0, 361, 362,
	363, 633, 0, 0, 0, 364, 0, 365, 366, 0,
	0, 0, 367, 368, 634, 635, 369, 370, 371, 372,
	373, 374, 375, 376, 377, 0, 378, 636, 0, 637,
	379, 0, 380, 381, 382, 383, 384, 638, 639, 640,
	462, 0, 385, 386, 0, 387, 388, 389, 390, 0,
	0, 0, 0, 391, 392, 393, 395, 0, 0, 394,
	641, 642, 0, 643, 0, 396, 397, 0, 644, 0,
	398, 399, 400, 0, 401, 0, 0, 0, 402, 403,
	404, 405, 406, 407, 0, 408, 410, 409, 0, 411,
	645, 0, 412, 413, 0, 0, 414, 0, 0, 0,
	415, 416, 419, 0, 0, 417, 418, 420, 421, 0,
	422, 423, 425, 428, 424, 426, 427, 429, 442, 430,
	431, 432, 433, 434, 435, 436, 437, 438, 439, 440,
	441, 444, 0, 443, 0, 445, 446, 447, 452, 454,
	455, 450, 451, 453, 456, 457, 449, 0, 458, 448,
	0, 0, 0, 459, 460, 0, 646, 461, 647, 463,
	464, 0, 0, 465, 0, 0, 0, 467, 468, 469,
	0, 0, 470, 471, 648, 0, 472, 0, 649, 473,
	474, 466, 475, 476, 477, 478, 479, 480, 481, 482,
	0, 483, 484, 650, 485, 486, 487, 651, 488, 489,
	490, 652, 491, 653, 492, 493, 0, 494, 495, 0,
	496, 497, 498, 499, 500, 501, 502, 654, 503, 505,
	504, 506, 0, 507, 0, 508, 509, 510, 0, 0,
	0, 0, 511, 0, 513, 514, 515, 516, 512, 517,
	518, 519, 520, 0, 521, 522, 523, 0, 524, 525,
	526, 527, 655, 528, 0, 529, 530, 741, 537, 538,
	531, 532, 539, 540, 541, 542, 543, 0, 545, 546,
	544, 547, 548, 549, 0, 550, 551, 533, 534, 552,
	553, 0, 554, 555, 556, 557, 558, 559, 656, 0,
	560, 0, 561, 562, 563, 565, 535, 566, 571, 572,
	657, 567, 568, 569, 570, 658, 574, 575, 0, 576,
	577, 0, 573, 564, 0, 578, 579, 580, 581, 582,
	583, 584, 354, 585, 0, 586, 659, 660, 661, 662,
	0, 595, 0, 587, 588, 589, 663, 590, 664, 0,
	591, 592, 593, 594, 0, 596, 597, 0, 0, 598,
	599, 600, 602, 603, 601, 604, 0, 605, 0, 0,
	606, 607, 608, 665, 666, 667, 265, 610, 609, 611,
	668, 0, 612, 0, 0, 0, 0, 613, 614, 669,
	615, 616, 617, 271, 273, 272, 274, 275, 276, 277,
	0, 278, 279, 0, 0, 0, 0, 0, 618, 0,
	2233, 0, 0, 280, 281, 0, 282, 283, 284, 285,
	286, 287, 619, 620, 0, 288, 621, 289, 622, 0,
	623, 290, 291, 292, 293, 294, 295, 0, 0, 0,
	296, 624, 625, 626, 0, 297, 298, 627, 0, 0,
	0, 299, 300, 301, 302, 303, 304, 305, 0, 0,
	307, 308, 309, 306, 310, 0, 311, 0, 312, 313,
	314, 315, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 323, 0, 0, 0, 0, 0, 0, 0, 324,
	325, 326, 327, 328, 0, 329, 628, 629, 0, 333,
	330, 331, 0, 334, 332, 335, 0, 336, 337, 338,
	0, 0, 339, 340, 341, 0, 342, 343, 0, 344,
	345, 346, 0, 347, 348, 630, 349, 350, 351, 353,
	355, 352, 356, 357, 358, 359, 631, 632, 360, 0,
	0, 0, 0, 0, 0, 0, 361, 362, 363, 633,
	0, 0, 0, 364, 0, 365, 366, 0, 0, 0,
	367, 368, 634, 635, 369, 370, 371, 372, 373, 374,
	375, 376, 377, 0, 378, 636, 0, 637, 379, 0,
	380, 381, 382, 383, 384, 638, 639, 640, 462, 0,
	385, 386, 0, 387, 388, 389, 390, 0, 0, 0,
	0, 391, 392, 393, 395, 0, 0, 394, 641, 642,
	0, 643, 0, 396, 397, 0, 644, 0, 398, 399,
	400, 0, 401, 0, 0, 0, 402, 403, 404, 405,
	406, 407, 0, 408, 410, 409, 0, 411, 645, 0,
	412, 413, 0, 0, 414, 0, 0, 0, 415, 416,
	419, 0, 0, 417, 418, 420, 421, 0, 422, 423,
	425, 428, 424, 426, 427, 429, 442, 430, 431, 432,
	433, 434, 435, 436, 437, 438, 439, 440, 441, 444,
	0, 443, 0, 445, 446, 447, 452, 454, 455, 450,
	451, 453, 456, 457, 449, 0, 458, 448, 0, 0,
	0, 459, 460, 0, 646, 461, 647, 463, 464, 0,
	0, 465, 0, 0, 0, 467, 468, 469, 0, 0,
	470, 471, 648, 0, 472, 0, 649, 473, 474, 466,
	475, 476, 477, 478, 479, 480, 481, 482, 0, 483,
	484, 650, 485, 486, 487, 651, 488, 489, 490, 652,
	491, 653, 492, 493, 0, 494, 495, 0, 496, 497,
	498, 499, 500, 501, 502, 654, 503, 505, 504, 506,
	0, 507, 0, 508, 509, 510, 0, 0, 0, 0,
	511, 0, 513, 514, 515, 516, 512, 517, 518, 519,
	520, 0, 521, 522, 523, 0, 524, 525, 526, 527,
	655, 528, 0, 529, 530, 536, 537, 538, 531, 532,
	539, 540, 541, 542, 543, 0, 545, 546, 544, 547,
	548, 549, 0, 0, 551, 533, 534, 552, 553, 0,
	554, 555, 556, 557, 558, 559, 656, 0, 560, 0,
	561, 562, 563, 565, 535, 566, 571, 572, 657, 567,
	568, 569, 570, 658, 574, 575, 0, 576, 577, 0,
	573, 564, 0, 578, 579, 580, 581, 582, 583, 584,
	354, 585, 0, 586, 659, 660, 661, 662, 0, 595,
	0, 587, 588, 589, 663, 590, 664, 0, 591, 592,
	593, 594, 0, 596, 597, 0, 0, 598, 599, 600,
	602, 603, 601, 604, 0, 605, 0, 0, 606, 607,
	608, 665, 666, 667, 265, 610, 609, 611, 668, 0,
	612, 0, 0, 0, 0, 613, 614, 669, 615, 616,
	617, 271, 273, 272, 274, 275, 276, 277, 0, 278,
	279, 0, 0, 0, 0, 0, 618, 0, 0, 0,
	0, 280, 281, 0, 282, 283, 284, 285, 286, 287,
	619, 620, 0, 288, 621, 289, 622, 0, 623, 290,
	291, 292, 293, 294, 295, 0, 0, 0, 296, 624,
	625, 626, 0, 297, 298, 627, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 305, 0, 0, 307, 308,
	309, 306, 310, 0, 311, 0, 312, 313, 314, 315,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 323,
	0, 0, 0, 0, 0, 0, 0, 324, 325, 326,
	327, 328, 0, 329, 628, 629, 0, 333, 330, 331,
	0, 334, 332, 335, 0, 336, 337, 338, 0, 0,
	339, 340, 341, 0, 342, 343, 0, 344, 345, 346,
	0, 347, 348, 630, 349, 350, 351, 353, 355, 352,
	356, 357, 358, 359, 631, 632, 360, 0, 0, 0,
	0, 0, 0, 0, 361, 362, 363, 633, 0, 0,
	0, 364, 0, 365, 366, 0, 0, 0, 367, 368,
	634, 635, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 0, 378, 636, 0, 637, 379, 0, 380, 381,
	382, 383, 384, 1252, 639, 640, 462, 0, 385, 386,
	0, 387, 388, 389, 390, 0, 0, 0, 0, 391,
	392, 393, 395, 0, 0, 394, 641, 642, 0, 643,
	0, 396, 397, 0, 644, 0, 398, 399, 400, 0,
	401, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	0, 408, 410, 409, 0, 411, 645, 0, 412, 413,
	0, 0, 414, 0, 0, 0, 415, 416, 419, 0,
	0, 417, 418, 420, 421, 0, 422, 423, 425, 428,
	424, 426, 427, 429, 442, 430, 431, 432, 433, 434,
	435, 436, 437, 438, 439, 440, 441, 444, 0, 443,
	0, 445, 446, 447, 452, 454, 455, 450, 451, 453,
	456, 457, 449, 0, 458, 448, 0, 0, 0, 459,
	460, 0, 646, 461, 647, 463, 464, 0, 0, 465,
	0, 0, 0, 467, 468, 469, 0, 0, 470, 471,
	648, 0, 472, 0, 649, 473, 474, 466, 475, 476,
	477, 478, 479, 480, 481, 482, 0, 483, 484, 650,
	485, 486, 487, 651, 488, 489, 490, 652, 491, 653,
	492, 493, 0, 494, 495, 0, 496, 497, 498, 499,
	500, 501, 502, 654, 503, 505, 504, 506, 0, 507,
	0, 508, 509, 510, 0, 0, 0, 0, 511, 0,
	513, 514, 515, 516, 512, 517, 518, 519, 520, 0,
	521, 522, 523, 0, 524, 525, 526, 527, 655, 528,
	0, 529, 530, 536, 537, 538, 531, 532, 539, 540,
	541, 542, 543, 0, 545, 546, 544, 547, 548, 549,
	0, 550, 551, 533, 534, 552, 553, 0, 554, 555,
	556, 557, 558, 559, 656, 0, 560, 0, 561, 562,
	563, 565, 535, 566, 571, 572, 657, 567, 568, 569,
	570, 658, 574, 575, 0, 576, 577, 0, 573, 564,
	0, 578, 579, 580, 581, 582, 583, 584, 354, 585,
	0, 586, 659, 660, 661, 662, 0, 595, 0, 587,
	588, 589, 663, 590, 664, 0, 591, 592, 593, 594,
	0, 596, 597, 0, 0, 598, 599, 600, 602, 603,
	601, 604, 0, 605, 0, 0, 606, 607, 608, 665,
	666, 667, 265, 610, 609, 611, 668, 0, 612, 0,
	0, 0, 0, 613, 614, 669, 615, 616, 617, 271,
	273, 272, 274, 275, 276, 277, 0, 278, 279, 0,
	0, 0, 0, 0, 618, 0, 0, 0, 0, 280,
	281, 0, 282, 283, 284, 285, 286, 287, 619, 620,
	0, 288, 621, 289, 622, 0, 623, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 624, 625, 626,
	0, 297, 298, 627, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 305, 0, 0, 307, 308, 309, 306,
	310, 0, 311, 0, 312, 313, 314, 315, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 323, 0, 0,
	0, 0, 0, 0, 0, 324, 325, 326, 327, 328,
	0, 329, 628, 629, 0, 333, 330, 331, 0, 334,
	332, 335, 0, 336, 337, 338, 0, 0, 339, 340,
	341, 0, 342, 343, 0, 344, 345, 346, 0, 347,
	348, 630, 349, 350, 351, 353, 355, 352, 356, 357,
	358, 359, 631, 632, 360, 0, 0, 0, 0, 0,
	0, 0, 361, 362, 363, 633, 0, 0, 0, 364,
	0, 365, 366, 0, 0, 0, 367, 368, 634, 635,
	369, 370, 371, 372, 373, 374, 375, 376, 377, 0,
	378, 636, 0, 637, 379, 0, 380, 381, 382, 383,
	384, 638, 639, 640, 462, 0, 385, 386, 0, 387,
	388, 389, 390, 0, 0, 0, 0, 391, 392, 393,
	395, 0, 0, 394, 641, 642, 0, 643, 0, 396,
	397, 0, 644, 0, 398, 399, 400, 0, 401, 0,
	0, 0, 402, 403, 404, 405, 406, 407, 0, 408,
	410, 409, 0, 411, 645, 0, 412, 413, 0, 0,
	414, 0, 0, 0, 415, 416, 419, 0, 0, 417,
	418, 420, 421, 0, 422, 423, 425, 428, 424, 426,
	427, 429, 442, 430, 431, 432, 433, 434, 435, 436,
	437, 438, 439, 440, 441, 444, 0, 443, 0, 445,
	446, 447, 452, 454, 455, 450, 451, 453, 456, 457,
	449, 0, 458, 448, 0, 0, 0, 459, 460, 0,
	646, 461, 647, 463, 464, 0, 0, 465, 0, 0,
	0, 467, 468, 469, 0, 0, 470, 471, 648, 0,
	472, 0, 649, 473, 474, 466, 475, 476, 477, 478,
	479, 480, 481, 482, 0, 483, 484, 650, 485, 486,
	487, 651, 488, 489, 490, 652, 491, 653, 492, 493,
	0, 494, 495, 0, 496, 497, 498, 499, 500, 501,
	502, 654, 503, 1185, 504, 506, 0, 507, 0, 508,
	509, 510, 0, 0, 0, 0, 511, 0, 513, 514,
	515, 516, 512, 517, 518, 519, 520, 0, 521, 522,
	523, 0, 524, 525, 526, 527, 655, 528, 0, 529,
	530, 536, 537, 538, 531, 532, 539, 540, 541, 542,
	543, 0, 545, 546, 544, 547, 548, 549, 0, 550,
	551, 533, 534, 552, 553, 0, 554, 555, 556, 557,
	558, 559, 656, 0, 560, 0, 561, 562, 563, 565,
	535, 566, 571, 572, 657, 567, 568, 569, 570, 658,
	574, 575, 0, 576, 577, 0, 573, 564, 0, 578,
	579, 580, 581, 582, 583, 584, 354, 585, 0, 586,
	659, 660, 661, 662, 0, 595, 0, 587, 588, 589,
	663, 590, 664, 0, 591, 592, 593, 594, 0, 596,
	597, 0, 0, 598, 599, 600, 602, 603, 601, 604,
	0, 605, 0, 0, 606, 607, 608, 665, 666, 667,
	265, 610, 609, 611, 668, 0, 612, 0, 0, 0,
	0, 613, 614, 669, 615, 616, 617, 271, 273, 272,
	274, 275, 276, 277, 0, 278, 279, 0, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 280, 281, 0,
	282, 283, 284, 285, 286, 287, 619, 620, 0, 288,
	621, 289, 622, 0, 623, 290, 291, 292, 293, 294,
	295, 0, 0, 0, 296, 624, 625, 626, 0, 297,
	298, 627, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 305, 0, 0, 307, 308, 309, 306, 310, 0,
	311, 0, 312, 313, 314, 315, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 323, 0, 0, 0, 0,
	0, 0, 0, 324, 325, 326, 327, 328, 0, 329,
	628, 629, 0, 333, 330, 331, 0, 334, 332, 335,
	0, 336, 337, 338, 0, 0, 339, 340, 341, 0,
	342, 343, 0, 344, 345, 346, 0, 347, 348, 630,
	349, 350, 351, 353, 355, 352, 356, 357, 358, 359,
	631, 632, 360, 0, 0, 0, 0, 0, 0, 0,
	361, 362, 363, 633, 0, 0, 0, 364, 0, 365,
	366, 0, 0, 0, 367, 368, 634, 635, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 0, 378, 636,
	0, 637, 0, 0, 380, 381, 382, 383, 384, 638,
	639, 640, 462, 0, 385, 386, 0, 387, 388, 389,
	390, 0, 0, 0, 0, 391, 392, 393, 395, 0,
	0, 394, 641, 642, 0, 643, 0, 396, 397, 0,
	644, 0, 398, 399, 400, 0, 401, 0, 0, 0,
	402, 403, 404, 405, 406, 407, 0, 408, 410, 409,
	0, 411, 645, 0, 412, 413, 0, 0, 414, 0,
	0, 0, 415, 416, 419, 0, 0, 417, 418, 420,
	421, 0, 422, 423, 425, 428, 424, 426, 427, 429,
	442, 430, 431, 432, 433, 434, 435, 436, 437, 438,
	439, 440, 441, 444, 0, 443, 0, 445, 446, 447,
	452, 454, 455, 450, 451, 453, 456, 457, 449, 0,
	458, 448, 0, 0, 0, 459, 460, 0, 646, 461,
	647, 463, 464, 0, 0, 465, 0, 0, 0, 467,
	468, 469, 0, 0, 470, 471, 648, 0, 472, 0,
	649, 473, 474, 466, 475, 476, 0, 478, 479, 480,
	481, 482, 0, 483, 484, 650, 485, 486, 487, 651,
	488, 489, 490, 652, 491, 653, 492, 493, 0, 494,
	495, 0, 496, 497, 498, 499, 0, 501, 502, 654,
	503, 505, 504, 506, 0, 507, 0, 508, 509, 510,
	0, 0, 0, 0, 511, 0, 513, 514, 515, 516,
	512, 517, 518, 519, 520, 0, 521, 522, 523, 0,
	524, 525, 526, 527, 655, 0, 0, 529, 530, 536,
	537, 538, 531, 532, 539, 540, 541, 542, 543, 0,
	545, 546, 544, 547, 548, 549, 0, 550, 551, 533,
	534, 552, 553, 0, 554, 555, 556, 557, 558, 559,
	656, 0, 560, 0, 561, 562, 563, 565, 535, 566,
	571, 572, 657, 567, 568, 569, 570, 658, 574, 575,
	0, 576, 577, 0, 573, 564, 0, 578, 579, 580,
	581, 582, 583, 584, 354, 585, 0, 586, 659, 660,
	661, 662, 0, 595, 0, 587, 588, 589, 663, 590,
	664, 0, 591, 592, 593, 594, 0, 596, 597, 0,
	0, 598, 599, 600, 602, 603, 601, 604, 0, 605,
	0, 0, 606, 607, 608, 665, 666, 667, 0, 610,
	609, 611, 668, 0, 612, 0, 0, 0, 0, 613,
	614, 669, 615, 616, 617, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 1779, 0,
	0, 0, 0, 0, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 1748, 1749, 0, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1779,
	1750, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	1770, 0, 0, 0, 0, 1797, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 1748, 1749, 0,
	1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 1784,
	1779, 1770, 0, 0, 0, 0, 0, 1751, 0, 0,
	1767, 0, 0, 0, 0, 0, 1797, 0, 1748, 1749,
	0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 1779, 1750, 0, 1773, 1774, 1775, 1776, 1751, 0,
	0, 0, 1770, 0, 1756, 0, 0, 1797, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1750, 0, 1773, 1774, 1775, 1776, 0,
	0, 1788, 0, 1770, 1798, 1756, 0, 0, 0, 0,
	1778, 1780, 1767, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1794, 0, 1795,
	0, 0, 0, 0, 0, 0, 1765, 1766, 0, 0,
	0, 0, 1788, 0, 0, 1798, 1773, 1774, 1775, 1776,
	0, 1778, 1780, 0, 1786, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1794, 1771,
	1795, 0, 0, 0, 0, 0, 0, 1765, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 1773, 1774, 1775,
	1776, 0, 0, 1788, 0, 1786, 1798, 1756, 0, 0,
	0, 0, 1778, 1780, 0, 0, 0, 0, 0, 0,
	1771, 0, 1796, 0, 0, 0, 0, 0, 0, 1794,
	0, 1795, 0, 0, 0, 0, 0, 0, 1765, 1766,
	1785, 0, 0, 0, 1788, 0, 0, 1798, 0, 0,
	0, 0, 0, 1778, 1780, 0, 1786, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	1794, 1771, 1795, 0, 0, 0, 0, 0, 0, 1765,
	1766, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 1771, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1789, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 1772, 1762, 1763,
	1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 2468, 0, 1789, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0, 4423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0,
	4419, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 1748,
	1749, 4340, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 1779, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 0,
	1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 1779, 1750, 0, 0, 0, 0, 0,
	1751, 0, 0, 0, 1770, 0, 0, 0, 0, 1797,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 1784, 1779, 1770, 0, 0, 0, 0,
	0, 1751, 0, 0, 1767, 0, 0, 0, 0, 0,
	1797, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 1779, 1750, 0, 1773, 1774,
	1775, 1776, 1751, 0, 0, 0, 1770, 0, 1756, 0,
	0, 1797, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1750, 0, 1773,
	1774, 1775, 1776, 0, 0, 1788, 0, 1770, 1798, 1756,
	0, 0, 0, 0, 1778, 1780, 1767, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 1795, 0, 0, 0, 0, 0, 0,
	1765, 1766, 0, 0, 0, 0, 1788, 0, 0, 1798,
	1773, 1774, 1775, 1776, 0, 1778, 1780, 0, 1786, 0,
	1756, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1794, 1771, 1795, 0, 0, 0, 0, 0,
	0, 1765, 1766, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1774, 1775, 1776, 0, 0, 1788, 0, 1786,
	1798, 1756, 0, 0, 0, 0, 1778, 1780, 0, 0,
	0, 0, 0, 0, 1771, 0, 1796, 0, 0, 0,
	0, 0, 0, 1794, 0, 1795, 0, 0, 0, 0,
	0, 0, 1765, 1766, 1785, 0, 0, 0, 1788, 0,
	0, 1798, 0, 0, 0, 0, 0, 1778, 1780, 0,
	1786, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 1794, 1771, 1795, 0, 0, 0,
	0, 0, 0, 1765, 1766, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 1771, 0, 1796, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1789, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 1772, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0,
	0, 0, 4305, 0, 0, 0, 0, 0, 1789, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 0, 0, 4304, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764,
	0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758,
	0, 0, 0, 0, 4134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768,
	1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 0, 0, 1748, 1749, 3978, 1781, 1782, 1783, 1791,
	1792, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 1779, 0, 0, 0,
	0, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 1748, 1749, 0, 1781, 1782, 1783,
	1791, 1792, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 1779, 1750, 0,
	0, 0, 0, 0, 1751, 0, 0, 0, 1770, 0,
	0, 0, 0, 1797, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 1784, 1779, 1770,
	0, 0, 0, 0, 0, 1751, 0, 0, 1767, 0,
	0, 0, 0, 0, 1797, 0, 1748, 1749, 0, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1779,
	1750, 0, 1773, 1774, 1775, 1776, 1751, 0, 0, 0,
	1770, 0, 1756, 0, 0, 1797, 0, 0, 0, 1767,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 1773, 1774, 1775, 1776, 0, 0, 1788,
	0, 1770, 1798, 1756, 0, 0, 0, 0, 1778, 1780,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1794, 0, 1795, 0, 0,
	0, 0, 0, 0, 1765, 1766, 0, 0, 0, 0,
	1788, 0, 0, 1798, 1773, 1774, 1775, 1776, 0, 1778,
	1780, 0, 1786, 0, 1756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1794, 1771, 1795, 0,
	0, 0, 0, 0, 0, 1765, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 0,
	0, 1788, 0, 1786, 1798, 1756, 0, 0, 0, 0,
	1778, 1780, 0, 0, 0, 0, 0, 0, 1771, 0,
	1796, 0, 0, 0, 0, 0, 0, 1794, 0, 1795,
	0, 0, 0, 0, 0, 0, 1765, 1766, 1785, 0,
	0, 0, 1788, 0, 0, 1798, 0, 0, 0, 0,
	0, 1778, 1780, 0, 1786, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 1794, 1771,
	1795, 0, 0, 0, 0, 0, 0, 1765, 1766, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 1796, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 1789,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 1777, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 1772, 1762, 1763, 1769, 1790,
	1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755,
	1757, 1758, 0, 0, 0, 0, 3914, 0, 0, 0,
	0, 0, 1789, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 0, 1762, 1763, 1769,
	1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754,
	1755, 1757, 1758, 0, 0, 0, 0, 3913, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 0, 0, 3912, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 1748, 1749, 3587,
	1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	1779, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 1748, 1749,
	0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1784, 1779, 1750, 0, 0, 0, 0, 0, 1751, 0,
	0, 0, 1770, 0, 0, 0, 0, 1797, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 1748,
	1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0,
	0, 0, 0, 1750, 0, 0, 0, 0, 0, 0,
	0, 1784, 1779, 1770, 0, 0, 0, 0, 0, 1751,
	0, 0, 1767, 0, 0, 0, 0, 0, 1797, 0,
	1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 1779, 1750, 0, 1773, 1774, 1775, 1776,
	1751, 0, 0, 0, 1770, 0, 1756, 0, 0, 1797,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 1773, 1774, 1775,
	1776, 0, 0, 1788, 0, 1770, 1798, 1756, 0, 0,
	0, 0, 1778, 1780, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1794,
	0, 1795, 0, 0, 0, 0, 0, 0, 1765, 1766,
	0, 0, 0, 0, 1788, 0, 0, 1798, 1773, 1774,
	1775, 1776, 0, 1778, 1780, 0, 1786, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1794, 1771, 1795, 0, 0, 0, 0, 0, 0, 1765,
	1766, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1774, 1775, 1776, 0, 0, 1788, 0, 1786, 1798, 1756,
	0, 0, 0, 0, 1778, 1780, 0, 0, 0, 0,
	0, 0, 1771, 0, 1796, 0, 0, 0, 0, 0,
	0, 1794, 0, 1795, 0, 0, 0, 0, 0, 0,
	1765, 1766, 1785, 0, 0, 0, 1788, 0, 0, 1798,
	0, 0, 0, 0, 0, 1778, 1780, 0, 1786, 0,
	0, 0, 0, 0, 0, 1796, 0, 0, 0, 0,
	0, 0, 1794, 1771, 1795, 0, 0, 0, 0, 0,
	0, 1765, 1766, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1777, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1772, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1789, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 1772,
	1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0,
	3113, 0, 0, 0, 0, 0, 1789, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1787, 0, 0, 0,
	0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759,
	1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0,
	0, 3112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0,
	0, 0, 3111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 1748, 1749, 3110, 1781, 1782, 1783, 1791, 1792, 1793,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1784, 1779, 0, 0, 0, 0, 0,
	0, 1751, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 1779, 1750, 0, 0, 0,
	0, 0, 1751, 0, 0, 0, 1770, 0, 0, 0,
	0, 1797, 0, 0, 0, 1767, 0, 0, 0, 0,
	0, 0, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791,
	1792, 1793, 0, 0, 0, 0, 0, 1750, 0, 0,
	0, 0, 0, 0, 0, 1784, 1779, 1770, 0, 0,
	0, 0, 0, 1751, 0, 0, 1767, 0, 0, 0,
	0, 0, 1797, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	1773, 1774, 1775, 1776, 0, 0, 0, 0, 1770, 0,
	1756, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1773, 1774, 1775, 1776, 0, 0, 1788, 0, 0,
	1798, 1756, 4560, 0, 0, 0, 1778, 1780, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1794, 0, 1795, 0, 0, 0, 0,
	0, 0, 1765, 1766, 0, 0, 0, 0, 1788, 0,
	0, 1798, 1773, 1774, 1775, 1776, 0, 1778, 1780, 0,
	1786, 0, 1756, 0, 3173, 0, 0, 0, 3172, 0,
	0, 0, 0, 0, 1794, 1771, 1795, 0, 0, 0,
	0, 0, 0, 1765, 1766, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1788,
	0, 1786, 1798, 0, 0, 0, 0, 0, 1778, 1780,
	0, 0, 0, 0, 0, 0, 1771, 0, 1796, 0,
	0, 0, 0, 0, 0, 1794, 0, 1795, 0, 0,
	0, 0, 0, 0, 1765, 1766, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 1796,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1777,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4559,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1772, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1777, 0, 0, 0, 0, 0, 0, 1789, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	1749, 1772, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 1779, 0, 0, 0, 0, 3048, 1789, 1751,
	0, 1777, 0, 0, 0, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 0, 0, 0, 1789,
	0, 0, 0, 1767, 0, 0, 0, 0, 0, 1787,
	0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764,
	0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758,
	0, 0, 3077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3049, 0, 0, 0, 0, 0, 0, 0,
	1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790, 1768,
	1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757,
	1758, 0, 0, 0, 0, 0, 0, 0, 1773, 1774,
	1775, 1776, 0, 0, 0, 0, 0, 0, 1756, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790,
	1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755,
	1757, 1758, 0, 0, 0, 1788, 0, 0, 1798, 2612,
	0, 0, 0, 0, 1778, 1780, 1748, 1749, 0, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0, 0,
	0, 1794, 0, 1795, 0, 0, 0, 0, 1784, 1779,
	1765, 1766, 0, 2611, 0, 0, 1751, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 0, 0, 0, 0,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1777, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 1788, 0, 0, 1798, 0, 0, 0, 0,
	0, 1778, 1780, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1789, 0, 0, 1794, 0,
	1795, 0, 0, 0, 0, 0, 0, 1765, 1766, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 0,
	0, 1785, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1748,
	1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 1779, 0, 0, 0, 0, 0, 0, 1751,
	0, 0, 0, 0, 1777, 0, 0, 0, 1797, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 0,
	0, 0, 0, 0, 1750, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1770, 0, 0, 0, 0, 0,
	0, 0, 1789, 1767, 0, 0, 0, 1748, 1749, 0,
	1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	1779, 0, 0, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 1773, 1774,
	1775, 1776, 1770, 0, 0, 0, 0, 0, 1756, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 0, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 1788, 0, 0, 1798, 0,
	0, 0, 0, 0, 1778, 1780, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1794, 0, 1795, 0, 0, 0, 0, 0, 0,
	1765, 1766, 0, 0, 0, 0, 1773, 1774, 1775, 1776,
	0, 0, 0, 0, 0, 0, 1756, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1771, 0, 1748, 1749, 0, 1781, 1782,
	1783, 1791, 1792, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1788, 0, 0, 1798, 1784, 1779, 0,
	0, 0, 1778, 1780, 0, 1751, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 0, 1796, 0, 0, 1794,
	0, 1795, 0, 0, 0, 0, 0, 0, 1765, 1766,
	0, 0, 0, 0, 1785, 1041, 0, 0, 0, 0,
	1750, 0, 0, 0, 0, 0, 1786, 0, 0, 0,
	1770, 0, 0, 0, 0, 0, 0, 0, 0, 1767,
	0, 1771, 0, 1748, 1749, 0, 1781, 1782, 1783, 1791,
	1792, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1784, 1779, 0, 0, 0,
	3174, 0, 0, 1751, 0, 0, 0, 1777, 0, 0,
	0, 0, 1797, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1772, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 1773, 1774, 1775, 1776, 1770, 0,
	0, 0, 0, 0, 1756, 1789, 0, 1767, 0, 0,
	3179, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1788, 0, 0, 1798, 1777, 0, 0, 0, 0,
	1778, 1780, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 1794, 0, 1795,
	0, 0, 0, 0, 0, 0, 1765, 1766, 0, 0,
	0, 0, 1773, 1774, 1775, 1776, 0, 0, 0, 0,
	0, 0, 1756, 1789, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1787, 0, 1771,
	0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0, 1761,
	1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0, 1788,
	0, 0, 1798, 0, 0, 0, 3568, 0, 1778, 1780,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 0, 0, 1794, 0, 1795, 0, 0,
	0, 0, 0, 0, 1765, 1766, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 1771, 0, 0,
	1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1777, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1772, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1789, 0, 0, 0, 0, 1748, 1749, 0, 1781,
	1782, 1783, 1791, 1792, 1793, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 1779,
	0, 0, 0, 0, 0, 0, 1751, 0, 0, 0,
	0, 1777, 0, 0, 0, 1797, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 0, 0, 0, 0,
	0, 1750, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1770, 0, 0, 0, 0, 0, 0, 0, 1789,
	1767, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1787, 0, 0, 0, 0, 1762, 1763,
	1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753,
	1754, 1755, 1757, 1758, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1773, 1774, 1775, 1776, 0,
	0, 0, 0, 0, 0, 1756, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 0, 1762, 1763, 1769, 1790,
	1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755,
	1757, 1758, 1788, 0, 0, 1798, 0, 0, 0, 0,
	0, 1778, 1780, 1748, 1749, 0, 1781, 1782, 1783, 1791,
	1792, 1793, 0, 0, 0, 0, 0, 0, 1794, 0,
	1795, 0, 0, 0, 0, 1784, 1779, 1765, 1766, 0,
	3114, 0, 0, 1751, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1771, 0, 0, 0, 0, 0, 0, 0, 1750, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1770, 0,
	0, 0, 0, 0, 0, 0, 0, 1767, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3141, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1773, 1774, 1775, 1776, 0, 0, 0, 0,
	0, 0, 1756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1777, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1772, 0, 0, 0, 1788,
	0, 0, 1798, 0, 0, 0, 0, 0, 1778, 1780,
	1748, 1749, 0, 1781, 1782, 1783, 1791, 1792, 1793, 0,
	0, 0, 1789, 0, 0, 1794, 0, 1795, 0, 0,
	0, 0, 1784, 1779, 1765, 1766, 0, 0, 0, 0,
	1751, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1771, 0, 0,
	0, 0, 0, 0, 0, 1750, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1770, 0, 0, 0, 0,
	0, 0, 0, 0, 1767, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1787, 0, 0, 0, 1785, 1762,
	1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760, 1752,
	1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1773,
	1774, 1775, 1776, 0, 0, 0, 0, 0, 0, 1756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1777, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1772, 0, 0, 0, 1788, 0, 0, 1798,
	0, 0, 0, 0, 0, 1778, 1780, 1748, 1749, 0,
	1781, 1782, 1783, 1791, 1792, 1793, 0, 0, 0, 1789,
	0, 0, 1794, 0, 1795, 0, 0, 0, 0, 1784,
	1779, 1765, 1766, 0, 0, 0, 0, 1751, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1771, 0, 0, 0, 0, 0,
	0, 0, 1750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1770, 0, 0, 0, 0, 0, 0, 0,
	0, 1767, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1787, 0, 0, 0, 1785, 1762, 1763, 1769, 1790,
	1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754, 1755,
	1757, 1758, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1773, 1774, 1775, 1776,
	0, 0, 0, 0, 0, 0, 1756, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1777, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1772,
	0, 0, 0, 1788, 0, 0, 1798, 0, 0, 0,
	0, 0, 1778, 1780, 1748, 1749, 0, 1781, 1782, 1783,
	1791, 1792, 1793, 0, 0, 0, 1789, 0, 0, 1794,
	0, 1795, 0, 0, 0, 0, 0, 1779, 1765, 1766,
	0, 0, 0, 0, 1751, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 0, 0, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1771, 0, 0, 0, 0, 0, 0, 0, 1750,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1770,
	0, 0, 0, 0, 0, 0, 0, 0, 1767, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1796, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1787, 0,
	0, 0, 0, 1762, 1763, 1769, 1790, 1768, 1764, 0,
	1761, 1759, 1760, 1752, 1753, 1754, 1755, 1757, 1758, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1773, 1774, 1775, 1776, 0, 0, 0,
	0, 0, 0, 1756, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1777, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1772, 0, 0, 0,
	1788, 0, 0, 1798, 0, 0, 0, 0, 0, 1778,
	1780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1789, 0, 0, 1794, 0, 1795, 0,
	0, 0, 0, 0, 0, 1765, 1766, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1787, 0, 0, 0, 0,
	1762, 1763, 1769, 1790, 1768, 1764, 0, 1761, 1759, 1760,
	1752, 1753, 1754, 1755, 1757, 1758, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1777, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1772, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1789, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1787, 0, 0, 0, 0, 1762, 1763, 1769,
	1790, 1768, 1764, 0, 1761, 1759, 1760, 1752, 1753, 1754,
	1755, 1757, 1758,
}

var sqlPact = [...]int{
	6002, -1000, -1000, -1000, -1000, 151, -1000, -1000, 150, 145,
	144, 143, 138, 137, 136, 135, 132, 131, 129, -1000,
	-1000, -1000, -1000, -1000, -1000, 128, -1000, -1000, 127, -1000,
	125, 122, 121, -1000, -1000, 119, -1000, 118, -1000, -1000,
	-1000, -1000, 117, 116, 115, 88642, 88097, 89180, 2249, 109240,
	95664, 2133, 79405, 108695, 78860, 108150, 2132, 10427, 107605, 2692,
	113, -1000, 107060, 112, 110, 109, -1000, 106515, -1000, 1905,
	-1000, 107, -1000, 6424, 64109, 105, 102, 100, 2480, 96,
	-1000, 94, 93, -1000, -1000, 92, -1000, 12133, 1483, -1000,
	91, 90, -1000, 732, 93491, 89, 88, 2599, 87, 86,
	63564, 85, 84, 2214, 2775, -1000, -1000, 1996, -1000, -1000,
	83, 82, 81, 80, 79, 78, 77, 76, 75, 74,
	73, -1000, 72, 71, 68, 62, 56, -1000, 52, 50,
	49, -1000, 48, -1000, 40, 39, 36, 35, 33, 32,
	31, 30, 28, 26, 24, 23, 22, 21, 9121, -1000,
	-1000, 1863, 1621, 1620, 1604, 1596, 1582, 898, 17, 15,
	14, 13, 11, 9, 8, 7, 6, 1, -1, -3,
	-4, -5, -6, -9, -10, 114, -11, -23, -24, -26,
	-27, -28, -30, 2635, -1000, 1482, 1164, 29649, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 115158, 109778, -31, -87, -32, -1000,
	3236, 833, 52644, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 233, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 422, 1834, 683, -1000, -1000, -1000, 105977, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2244, -61, -1000,
	1982, -1000, -1000, -1000, -1000, -1000, 676, -1000, 2243, 251,
	2199, -1000, -1000, -1000, 3297, 2384, 3669, 3668, 3667, 3666,
	3663, 114620, 1724, 3662, 2459, 3661, 3660, 3658, 3656, 3654,
	3653, 3652, -1000, 87552, 954, 87007, 86462, 3298, 105439, 85917,
	104894, 72876, 44737, 1149, 3295, -1000, -1000, -1000, -1000, -1000,
	-1000, 109778, -1000, 953, -1000, -1000, 3650, 3649, 1985, 675,
	95119, -1000, 1830, -1000, 843, 31365, -1000, 1146, -1000, 31365,
	232, -1000, -1000, -1000, -1000, -1000, -1000, 3648, 3647, 3645,
	3642, 3641, -1000, -1000, 78315, 22733, 77770, 77225, 104349, 22176,
	85372, 84827, 3640, 3639, 3638, 3634, 103804, 72319, 952, 1416,
	-1000, -1000, -1000, -1000, -1000, -1000, -50, 70091, 3431, 109778,
	-1000, 217, -1000, -1000, -1000, -1000, -1000, -1000, 44153, 893,
	43569, 1047, 42985, 507, -1000, -1000, -1000, -1000, 71762, -1000,
	103259, 2380, 3633, 3631, 1064, 3630, 3179, 1687, 3627, 1786,
	1156, 3626, 3622, 3621, 3619, 3617, 3616, 3615, 1381, 102714,
	2882, 1464, 102169, 1693, 71205, 949, 84282, 89180, 2525, 101624,
	1373, 1307, -1000, -1000, -1000, -1000, 3010, 2773, 2755, 1013,
	-1000, -1000, -1000, -1000, 55363, 6105, 5442, 10409, 101079, 58138,
	89180, 89180, -1000, -1000, -1000, -1000, -1000, 42401, 788, 41817,
	1077, -1000, -1000, 55918, 2837, -1000, -1000, -1000, -1000, 41233,
	755, 40649, 867, 109778, -1000, 2880, 1908, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2054, 1561, 3455, 2658, 70648, 1993, 1305,
	3246, 3007, 3006, 1434, 2996, 3614, 2552, 2954, 2953, 2950,
	2944, 2937, 1535, 2495, 654, 29065, 2860, 1661, 40065, 1420,
	1433, 2928, 2923, 3476, 1962, 1939, 2169, 76680, 3613, 3612,
	3210, 2917, 2915, 2704, 2909, -1000, 2832, 1358, -1000, -1000,
	-1000, -1000, 1376, -1000, -1000, -1000, -1000, 79943, -1000, -1000,
	1776, -1000, -1000, 1776, -1000, -1000, -1000, -1000, -1000, 1213,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 1482, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2184, -1000, 1950, -1000, -1000, 2422, 3206, 3206,
	3206, 3290, 396, 389, -1000, 114, -1000, -1000, 121259, -1000,
	-1000, 45309, 45309, 45309, 45309, 45309, 45309, 45309, 2152, -1000,
	664, -1000, -1000, 723, -1000, 661, 513, -1000, -1000, -1000,
	-1000, -1000, -1000, 658, -1000, -1000, -1000, -1000, -1000, -1000,
	3431, -1000, 25573, -1000, -1000, -1000, 395, 656, 45309, -1000,
	-1000, 3491, 3490, 822, -1000, 214, 864, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2878,
	652, 651, -1000, 649, 647, 643, 637, 631, -1000, -1000,
	-1000, 630, 629, 627, 625, 621, 619, 616, 614, -1000,
	2008, -1000, -1000, -1000, -1000, -1000, -1000, 582, 581, 581,
	581, -1000, 941, -1000, -1000, -1000, 212, 580, 204, 563,
	559, 554, -1000, 609, 608, 607, 606, 604, 603, 601,
	596, 595, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 938,
	-1000, -1000, -1000, -1000, -51, 109778, -1000, 422, -51, -1000,
	-1000, 594, -1000, 33665, 33665, 33665, -1000, -1000, 2242, 45309,
	-1000, 2753, -1000, -45, -45, 789, 54273, -1000, 51533, 789,
	526, 733, 59769, -1000, 2831, -1000, -1000, 593, 211, -1000,
	-1000, -1000, -1000, 23288, 2830, 109778, 109778, 89180, 89180, 89180,
	3611, 3102, 45309, -1000, -1000, 67898, 109778, 89718, -1000, -1000,
	3391, 64647, 67360, 109778, 2874, 66822, 3609, -1000, -1000, -1000,
	-1000, -1000, 3075, 3608, 3607, 3606, -1000, 109778, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 216, 3074, -1000, -1000, 92946,
	216, 3073, -1000, 216, 3072, -1000, 92408, -1000, -1000, 2155,
	3069, -1000, -1000, 226, 3067, -1000, -1000, -1000, 222, 3065,
	-1000, -1000, 194, -77, 3061, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 121259, -1000, -1000,
	-1000, 66277, -1000, 3217, -1000, -1000, 109778, -1000, 45309, -1000,
	3385, 1689, 73976, 3338, -63, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2427, 2438, 1040, 2280, -1000, 3122, 1831, -1000,
	31365, 3167, -1000, -1000, -1000, 189, 23288, -1000, -1000, -1000,
	-1000, -1000, -1000, 4686, 3060, 1399, -1000, 2279, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2040, 3059, -1000, 2022,
	3058, 1971, -1000, -1000, 2568, -1000, 3207, -1000, -1000, 1912,
	3057, -43, -1000, -1000, 2213, -1000, -1000, -1000, -1000, -1000,
	1871, -1000, 891, 3056, -1000, 83737, 57583, 55918, 70091, -57,
	-1000, -1000, -1000, -1000, -111, -1000, 21619, 121259, -1000, -1000,
	-1000, -1000, 1733, 121259, 831, -1000, -1000, 3054, -1000, 121259,
	828, -1000, -1000, 3052, -1000, 2870, -1000, -1000, 2340, -1000,
	-1000, 3597, -1000, -1000, 3595, -1000, 3593, 3590, 3588, -1000,
	1672, 1975, 3587, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 83199, 2241, -1000, -1000, 82109, 2867, -1000, 2336, 3334,
	-1000, 82654, 945, -1000, 891, 2335, -1000, 91870, 939, 2333,
	-1000, 3584, 3289, 2592, 891, 2330, -1000, -1000, -1000, -1000,
	-1000, 944, -1000, 61395, -1000, 61395, -1000, 1512, -1000, 114082,
	-45, 89180, 3431, -1000, -88, -1000, -1000, -1000, 833, -1000,
	54818, -1000, 54818, 94574, 73431, 873, 682, 63019, 121259, -1000,
	-1000, -1000, -1000, 121259, -1000, -1000, -1000, -170, 2655, -1000,
	73431, 57028, 121259, -1000, -1000, -1000, -1000, 121259, -1000, -1000,
	-1000, 73431, 82109, -1000, 100534, 81571, -1000, -1000, 1352, 2483,
	-1000, -1000, -1000, 73431, 1200, 73431, 73431, 73431, -1000, 99989,
	-1000, -1000, 2030, 1529, 3214, 2019, 89180, -1000, 1910, -1000,
	-1000, -1000, 3233, 109778, -1000, -1000, 2862, -1000, 65732, 91332,
	-1000, 90794, -1000, 90256, -1000, 89180, -1000, 89180, -1000, 3581,
	3580, 3579, -1000, -1000, 3577, -1000, 3575, 3226, -1000, 121259,
	3224, -1000, 3574, 3323, 2860, 121259, -1000, 3022, 1601, 1598,
	109778, -1000, -1000, 109778, -1000, 109778, -1000, -1000, -1000, 1471,
	-1000, -1000, 2423, -1000, -1000, -1000, -1000, 89180, 1190, -1000,
	-1000, -1000, -1000, -1000, -1000, 2910, 3571, 1576, -1000, 1773,
	-1000, 2824, 3227, -1000, 1347, 1707, -1000, -1000, 228, -1000,
	-1000, -63, -1000, 113544, -1000, 2422, -1000, 109778, -1000, 2424,
	2845, 2859, 1635, 2221, 2521, -1000, 39481, 2493, 48741, 2278,
	114, -1000, -1000, 114, 114, 30793, -1000, -1000, 64647, 64647,
	23288, 1229, 45309, 45309, 45309, 45309, 45309, 45309, 45309, 45309,
	45309, 45309, 45309, 45309, 45309, 45309, 45309, 45309, 45309, 45309,
	45309, 45309, 45309, 45309, 45309, 45309, 45309, 45309, 45309, 45309,
	45309, 45309, 45309, 45309, 45309, 45309, 45309, 2150, 45309, 1209,
	45309, 45309, 45309, 45309, 2187, -1000, -1000, 1880, 459, 2127,
	-1000, 3433, 3433, 3433, 1415, 1415, 121693, 121693, 494, 3570,
	723, -1000, 45309, -1000, 63, 45309, 23845, -1000, 389, 10997,
	2462, -1000, 388, 24429, -1000, -1000, -1000, 25573, 513, 38897,
	45309, 917, 121259, -1000, -1000, 1361, 3461, 21063, 2890, 2703,
	591, 775, 769, 28481, 27897, 27313, 26729, 645, 45309, 45309,
	45309, 45309, 45309, 45309, 45309, 45309, -1000, -1000, 3466, -1000,
	3461, -1000, -1000, -1000, -1000, 3461, 1225, 1224, 3461, -1000,
	3461, 3461, 8421, 8421, 38325, 37741, 37157, 49313, 36573, 45309,
	26145, 35989, 35405, -1000, 109778, -51, 3383, 45309, 243, -1000,
	119735, -1000, 243, 243, 589, -91, 121259, 2499, 2499, 53187,
	2185, 2172, 2172, 2172, -1000, 789, 16586, 789, 98906, 2179,
	789, 789, 185, 208, 384, 50990, 2753, 98906, 703, 588,
	-35, -36, -38, -1000, -1000, -39, -40, -1000, -1000, 89180,
	586, 23845, 23288, 182, 1935, -94, 2509, 2505, 2504, -1000,
	2503, -1000, 1728, -99, 1208, 89180, 109778, 3569, -100, -1000,
	5794, -104, -1000, 1125, 177, 3461, -1000, -1000, -1000, -1000,
	-1000, 3564, 3563, -1000, 937, 585, 584, 400, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 582, 581, 581, 581,
	-1000, 212, 580, 204, 563, 559, 554, -1000, -1000, -1000,
	-1000, -1000, 2817, 89180, 109778, 3562, -111, 89718, -93, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 109778, -1000, -1000,
	-1000, 3558, -1000, 89180, -1000, -1000, 89180, 216, 3046, -1000,
	89180, -1000, 89180, 215, 3045, -1000, -1000, 109778, -1000, 89180,
	89180, -1000, 109778, 109778, 109778, 73431, 73431, 227, -1000, 89180,
	815, -105, 1078, -63, -1000, -1000, -1000, 1776, -1000, 1577,
	-1000, -1000, -1000, -1000, -1000, -1000, 1387, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 822, -1000, -1000, -1000, -1000,
	-1000, -1000, 3451, 3445, -52, -1000, -1000, 23288, -1000, -64,
	1532, 1827, 1207, -1000, 76135, 2347, 3202, 3554, 2572, 3195,
	1510, -1000, 1469, -1000, 3294, 79943, 3352, 3366, 1285, -1000,
	2807, -1000, -1000, 839, 1569, 1648, 1205, 1203, 79943, 2022,
	-1000, 64647, -1000, 2601, 3283, 1334, 1329, 1334, 1334, 1320,
	-1000, 79943, 1630, 1198, 1194, 1193, 1886, 1875, -1000, -1000,
	1992, -1000, 1192, 1191, 756, 1867, -1000, -67, 3349, 3363,
	1251, -1000, 2799, 1188, -1000, -1000, -1000, 3282, 89180, 23288,
	1481, 1438, 1476, 1616, 1187, -56, -1000, 3347, 1186, 1184,
	-1000, 4708, -1000, 73431, 1927, 3042, 2654, 773, 2653, -1000,
	-1000, -1000, 773, -57, 70091, 109778, 168, -1000, 63, 45309,
	45309, 63, 45309, 63, 3320, 3037, -1000, -1000, -1000, -1000,
	-1000, 3553, 1925, 2450, -1000, -1000, 553, 2328, 2795, 109778,
	2516, -58, 89180, -1000, 65194, 3036, 68443, 2022, 2327, -1000,
	-1000, 81026, -1000, 3033, 422, 2326, -1000, 598, 3551, 3031,
	-1000, 113006, -1000, 3217, 1247, 3028, 1014, 737, 3382, -1000,
	737, 61933, -1000, 109778, -1000, -45, 4739, 75059, -110, -112,
	381, -1000, 99451, 109778, 1011, 75597, 109778, 3156, 889, 55918,
	-1000, 55918, -113, -170, 2647, 1456, 873, 873, 773, -1000,
	773, -1000, 89180, 2858, -1000, -1000, 73431, 873, 873, 873,
	-1000, -1000, -1000, -1000, 3543, 3542, 3540, 3536, -1000, -1000,
	890, 89180, 109778, 89180, -1000, 166, -1000, 109778, -1000, 109778,
	109778, 89180, -1000, 890, 109778, 890, 109778, 890, 109778, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 63, 45309, -1000, -1000,
	3534, 1583, -1000, 2850, -1000, 2847, -1000, -7, -1000, -1000,
	-1000, -1000, -1000, -1000, 1819, -1000, -1000, -1000, -1000, 89180,
	89180, 89180, 89180, 109778, 3142, -1000, 109778, 3132, 89180, -1000,
	-1000, 79943, -1000, 2424, 2845, -1000, -1000, -1000, -1000, -1000,
	-1000, 1608, 2206, -1000, 2478, -1000, 1494, -1000, -1000, -1000,
	121259, 49868, -1000, -1000, 121259, 1885, -1000, 48169, 47597, -1000,
	-1000, 1628, 89180, 2511, -1000, 2511, -106, -1000, 119518, 2477,
	89180, -1000, -1000, -1000, -1000, -1000, 838, 640, 640, 1129,
	1129, 1129, 1129, 3337, 678, 579, 1069, 6326, 6326, 276,
	276, 276, 276, 276, 6326, 338, 1415, 1415, 338, 338,
	338, 338, 338, 1415, 1415, 1415, 6326, 6326, 6326, 121693,
	121476, 8278, 45309, 45309, 1183, 1865, 459, 8078, 45309, 5293,
	5293, 5293, 5293, -1000, 2190, -1000, -1000, -1000, -1000, 2782,
	542, 49313, 49313, -1000, -1000, -1000, -1000, 25001, 45309, -1000,
	-1000, -1000, -1000, 34821, -1000, -1000, 119060, -315, 378, -101,
	61, -1000, 45309, 45309, 45309, 377, -1000, 165, 45309, 109778,
	-1000, 116244, 693, -115, -1000, -118, 1362, -1000, 45309, -1000,
	-1000, 1180, -1000, 1179, 1177, 1176, -1000, 535, 376, -1000,
	164, -1000, 2162, 534, 532, 45309, -1000, -1000, -1000, -1000,
	-1000, 118489, -1000, -1000, 118448, -1000, -1000, 118397, -1000, -1000,
	118356, -1000, -1000, -1000, 121042, 15934, 15754, 15114, 8171, 14751,
	13747, -123, 374, -124, 369, 837, 832, 365, 362, 361,
	-125, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -126, 360, -1000, 2778, -101, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 334, -1000, 324, -1000,
	120825, -101, 316, 6266, -1000, 49313, 49313, 49313, -1000, 315,
	-1000, 119152, -1000, 120462, 34249, 34249, 34249, 314, 120374, 45309,
	-101, -131, -1000, -134, -1000, -1000, 465, -144, 914, 33665,
	52096, 23288, -1000, 914, 914, 45309, -1000, 45309, 2488, -1000,
	-1000, -1000, -1000, 2487, 1961, 2499, 53187, -1000, -1000, -1000,
	-1000, 98906, -1000, 3431, 2999, -1000, 98906, -1000, -1000, 109778,
	422, -1000, 98906, 98906, 23288, 789, -1000, 789, 98906, 576,
	-1000, -1000, -1000, -1000, -1000, 313, 58681, 61, 161, 23288,
	891, -1000, -1000, 2612, 2612, 2612, 2612, -1000, -1000, 109778,
	1170, -60, -107, -1000, 3408, -1000, 2027, -1000, 64647, -1000,
	718, 852, 23288, -1000, -1000, -1000, 530, -1000, 3461, 3461,
	-1000, 3461, 109778, 2774, 205, -1000, 198, 68443, 68443, 3533,
	-1000, -1000, 216, -1000, 89180, 216, 216, -1000, 89180, 89180,
	2155, -1000, 226, -1000, 222, -1000, -1000, -77, -1000, 909,
	31365, -1000, 1776, -1000, -1000, 1491, -1000, 1948, -1000, 1222,
	-1000, -1000, -1000, -1000, 31365, -1000, 2099, 109778, 109778, 89180,
	-1000, 109778, -1000, 2035, 68443, -1000, 2322, 112468, 2314, 64647,
	109778, -1000, -1000, 529, 853, 2476, 2471, 1008, 109778, 109778,
	2470, 111930, 111392, -1000, 3532, 109778, 2065, 45309, 3280, 2254,
	2447, 63, 63, -1000, 63, 63, 63, -1000, 528, 1380,
	89180, 89180, 109778, 68443, 89180, 1922, -1000, -1000, -1000, -1000,
	-1000, 80481, -1000, -1000, 3465, 3464, -1000, 1334, -1000, -1000,
	-1000, 1334, 2022, 1870, 109778, 68443, 89180, 68443, 109778, 109778,
	-1000, 1615, 109778, 1343, -1000, 756, 2071, 63, 63, -1000,
	63, 63, 63, 524, 23288, 1851, -1000, 2877, 109778, 3489,
	110854, 3488, 109778, 109778, 109778, 68443, 3225, 109778, 109778, 68443,
	4708, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 69553, 1017, 891, 1614, 1169, 1166, 79943, 55918,
	888, 55918, 2607, -1000, -1000, 20507, -1000, 121259, 121259, -1000,
	121259, -1000, 65194, 109778, -1000, 943, 109778, 75597, 877, 3026,
	60857, -111, 873, 73431, 89180, -58, 2516, 109778, -1000, -1000,
	2022, 3025, 422, 2320, -1000, 73431, 3380, 3019, 522, 3531,
	3530, -1000, 89180, 2239, 2317, -1000, -1000, 110316, 3088, 756,
	109778, 914, 53187, 1837, -1000, 59226, 982, 109778, 1741, 160,
	-1000, -1000, -1000, -17, 109778, -1000, 3, -1000, -1000, 4739,
	4739, 873, -156, 516, -1000, 803, 799, 56473, 73431, -145,
	-1000, -1000, -1000, -1000, 2314, 89180, 109778, 1175, 2589, 109778,
	-146, -1000, 159, 515, -1000, 2544, -1000, -170, -1000, 889,
	55918, 2772, 2768, -1000, -1000, 908, -1000, 1333, 873, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-46, 109778, -111, -111, -59, -60, -1000, 890, -1000, 890,
	-1000, 890, -1000, 121259, -1000, -1000, 1572, 1551, 109778, -1000,
	23288, 109778, 89180, 23288, 89180, 2843, 2777, -1000, -1000, -1000,
	109778, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1034, -1000,
	1885, 2205, -1000, 513, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2401, -1000, -62, 30793, 817, -1000, -1000,
	89180, -47, 45309, 45309, 7256, 6637, 45309, 49313, 49313, -1000,
	45309, 5165, -1000, -1000, -1000, -1000, -1000, 2765, 511, 45309,
	64647, 7451, 6586, -1000, 312, 12960, 338, -1000, 45309, -1000,
	305, 33093, -1000, 120098, -2, -153, -1000, 17155, -101, -154,
	-1000, -1000, 716, -1000, 3085, -1000, 45309, 120186, 2371, 1840,
	1750, 1574, 3461, 3484, 19951, -1000, 62476, 915, 2191, 117785,
	-1000, -1000, -1000, -1000, 64647, 64647, 45309, 45309, -1000, 45309,
	45309, 45309, -1000, -1000, -1000, 3461, 819, -1000, -1000, -1000,
	819, -1000, -1000, 1334, -1000, 1334, -1000, 45309, -1000, -1000,
	2752, 45309, -1000, 64647, 64647, 49313, 49313, 49313, 49313, 49313,
	49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313, 49313,
	49313, 49313, 49313, 49313, 2536, 49313, 3430, 3430, 3430, -1000,
	2759, 2752, 45309, 45309, 64647, 302, 301, 298, -1000, 45309,
	-101, -1000, -1000, 4739, 510, -1000, 2389, -1000, 2695, -1000,
	45309, -1000, -155, -1000, 2753, -1000, -1000, 2695, 2695, -160,
	121259, 53187, 53187, -1000, 509, 45309, 2485, -1000, -1000, 692,
	-316, -1000, 797, -1000, -1000, -1000, -1000, -1000, 422, -1000,
	-1000, -1000, 158, 98906, 98906, 688, -1000, -161, -1000, -1000,
	-162, -1000, 3379, 297, 23288, -1000, 914, 2578, -1000, -1000,
	-1000, -1000, -1000, -1000, -111, 109778, 109778, 2197, 3483, -1000,
	3463, 711, 685, 155, 3461, 295, 293, 291, -111, 109778,
	109778, 109778, -1000, -1000, -1000, -1000, 216, -1000, -1000, -1000,
	215, -1000, -1000, -1000, -1000, 2553, -1000, -63, -1000, -1000,
	-1000, 45309, -1000, -1000, 3201, 1165, 1163, -1000, -1000, -1000,
	-1000, 2779, -1000, 2981, -1000, 2312, -1000, 988, -1000, 1545,
	-1000, 45309, 508, 2581, 505, 503, 3529, 1938, 3528, 1010,
	2978, 2155, 2976, 2155, -1000, -1000, -1000, 846, -1000, 121259,
	2254, -1000, 502, 501, -1000, -64, 1511, 1826, 1155, 907,
	-1000, -1000, -1000, -1000, 45309, 45309, 98368, -1000, 432, 3207,
	-48, -1000, -1000, -1000, 1612, 1144, 1131, -1000, -1000, -1000,
	-1000, 2022, 1603, 1130, 1128, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 906, -1000, 2933, 2927, 826, 109778, -1000, 905,
	-1000, -1000, -1000, -1000, 45309, -1000, -67, 1127, 3335, 2307,
	89180, -1000, 2155, 2975, 1115, -1000, 1114, -1000, -1000, -1000,
	3346, 3340, 1113, -1000, -1000, -1000, -1000, -1000, 68998, -1000,
	109778, 68443, 89180, 1833, 773, -1000, 2417, 773, 888, 2748,
	-1000, 2514, 897, 89180, 3527, 289, -163, -68, 64647, 3377,
	-1000, 2263, 462, 89180, 824, -1000, 3431, -1000, -1000, -1000,
	895, -1000, 3328, 89180, 3374, 2974, 891, 63, 89180, 3444,
	-1000, -1000, 3373, 89180, 2971, 2235, 2304, 2425, 756, 74521,
	891, 2188, -76, -1000, 1741, 32509, 3199, -168, -1000, -1000,
	-1000, 914, 61933, 53187, 45309, 3526, -169, -1000, -1000, -1000,
	-1000, -1000, 96209, 96209, 73431, 73431, 73431, 873, 109778, 109778,
	75597, -1000, -1000, 499, 109778, 109778, 493, -1000, 109778, 109778,
	3524, 73431, -69, 491, -1000, 796, 794, 782, -1000, -1000,
	-1000, -1000, -1000, 889, -1000, -170, 55918, 63, -1000, 2195,
	89180, -1000, 19395, -1000, -1000, -1000, -1000, -1000, -1000, 890,
	-1000, -1000, 2093, 2274, 2093, 1768, 1747, -1000, -1000, 2204,
	-1000, -1000, -1000, -1000, 2538, 3211, 23288, 3304, 5293, 45309,
	45309, 457, 4775, 355, 5293, 45309, 45309, 64647, 10173, -178,
	45309, 45309, -1000, 45309, 679, 121259, 3482, 45309, 288, 287,
	-1000, -1000, -1000, 3439, -1000, -1000, -1000, 121259, 45309, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 283, -1000, 154, -1000,
	-1000, -1000, 115696, -1000, 45309, 278, 3270, -1000, 277, 275,
	11458, 555, 117744, 117693, 117652, 273, -1000, -1000, 272, 262,
	121259, 2759, 121259, -1000, -1000, 924, 924, 1291, 1291, 1291,
	1291, 3430, 1089, 1722, 979, 936, 936, 936, 955, 1568,
	1568, 936, 936, 936, 2747, 2497, 490, 5865, -1000, -1000,
	121259, 121259, 260, -1000, -1000, -1000, -101, 259, 4739, -1000,
	2689, 3267, 121259, -1000, 53187, 2689, 2689, -1000, -1000, 1961,
	109778, 121259, 53187, -1000, 2999, -1000, 17722, -1000, 23288, -1000,
	-1000, -1000, -1000, 3431, -1000, 58681, -1000, 489, -1000, 153,
	-1000, 2578, -1000, 780, -1000, -1000, 73431, 73431, -111, -177,
	-1000, -1000, 646, 3523, 707, 23288, 254, -1000, -1000, -1000,
	-111, -111, -111, -1000, -1000, -1000, 3154, 121259, 109778, 109778,
	1379, 97830, 109778, 2966, -1000, 2177, -1000, 1008, 117081, 53730,
	-1000, 53730, 109778, -1000, -1000, 1847, 2523, 3522, 1055, -1000,
	3235, 109778, -1000, 109778, -1000, -1000, -1000, 109778, 109778, 89180,
	109778, -1000, 68443, 2940, -179, 121259, -71, -1000, 777, -1000,
	1311, -1000, 18839, 109778, 68443, 89180, 109778, 68443, 89180, 2123,
	-1000, -1000, 2920, -1000, 2929, -184, 23288, -1000, 3481, 3480,
	2960, 3243, -1000, 109778, 3479, 109778, 89180, 3153, -1000, -1000,
	-1000, -1000, -1000, 1595, 1112, 1108, 888, -72, 488, -1000,
	768, -1000, -1000, 767, 888, -1000, 73431, 55918, 3520, 422,
	-1000, 2566, -1000, 94029, 2217, 63, -1000, 3518, 96754, 486,
	-1000, 2189, -1000, 641, -1000, 2419, 68443, 2022, 63, 89180,
	-1000, -1000, 422, 248, -73, -1000, 3083, 1004, 23288, 89180,
	2959, 2435, 756, 74521, -1000, 1247, 2521, -1000, -75, -1000,
	602, 63, 2188, -1000, -76, 121259, -1000, 765, -1000, -186,
	-1000, -1000, 246, -1000, 3152, 3149, -1000, 2700, 53730, 483,
	481, 109778, 3148, -1000, -1000, -187, 2103, 2103, 73431, 55918,
	73431, -1000, 889, 773, -1000, 2339, -1000, -1000, -1000, -1000,
	-1000, 23288, 1514, -1000, 480, 479, -1000, -1000, -1000, -1000,
	3211, 5293, 5293, 45309, 45309, 45309, 5293, 10173, -195, -1000,
	5293, 5293, -101, -1000, -1000, 120098, -1000, -1000, -1000, 121259,
	-1000, 18283, 2100, -1000, 117040, -1000, 30793, -1000, -1000, 45309,
	45309, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 49313,
	2746, 478, 64647, -1000, -1000, 244, 911, 45309, 47025, 2753,
	911, 911, -1000, -198, -1000, -1000, -1000, 3431, 153, -1000,
	-1000, 3513, 23288, -1000, 73431, -1000, -1000, 3512, 699, -1000,
	3510, -1000, -1000, -1000, -1000, -1000, 2634, 3372, -1000, 1861,
	-1000, 109778, -1000, 109778, -1000, 23288, 109778, 2687, 1148, -1000,
	853, 2469, 477, 49313, 89180, 698, -1000, 3402, 2664, -201,
	-1000, 109778, 45309, 109778, -203, -208, 2291, -1000, -1000, 2290,
	45309, -1000, -1000, 64647, 468, 2155, 2155, -210, -211, -1000,
	-1000, -1000, 45309, 1105, 109778, 31937, -1000, 3508, 3207, -1000,
	-1000, -1000, -1000, -1000, -1000, 109778, -1000, 45309, 1087, -1000,
	-1000, -1000, 3475, 2155, 23288, 2155, -1000, 2155, 3243, 1052,
	109778, 68443, 89180, -1000, 2130, 2130, 73431, 55918, -1000, -77,
	888, -1000, 3370, 2526, 3506, -1000, -1000, -1000, -1000, 2466,
	-1000, -1000, 109778, 2464, 881, -1000, -220, -1000, 764, 763,
	75597, 877, 868, -1000, -78, 467, -1000, 760, -1000, -1000,
	-1000, -1000, 422, 3362, -1000, 3474, 464, 461, 109778, 2233,
	460, 23288, 3197, 756, 74521, -1000, 3088, 1741, -1000, 2297,
	109778, 3191, -1000, 2521, 459, -1000, 873, 456, 455, 2229,
	2229, -223, 53730, 53730, -225, 454, 873, -1000, -228, -1000,
	-1000, -1000, -1000, -1000, -80, -1000, 784, 761, -1000, -1000,
	89180, 89180, 45309, 45309, -1000, 5293, 5293, 5293, -1000, 242,
	-1000, -1000, 2188, 3263, -1000, -81, 116989, 116948, 7183, 49313,
	64647, -230, -1000, -1000, 109778, 121259, -83, -1000, 121259, 444,
	441, 372, -1000, -1000, -1000, 397, -1000, -1000, -1000, 3504,
	-1000, 97292, 109778, -1000, -1000, 1533, -1000, -1000, -1000, 109778,
	2303, -1000, -1000, -1000, 1006, 45309, 5865, 438, 45309, -1000,
	3360, -1000, 2547, 2770, 1789, 53730, -1000, 3211, -1000, 116377,
	-1000, 1002, 1907, -1000, -1000, 121259, 3243, 53730, -1000, -1000,
	435, 434, 121259, 431, 758, 2732, -1000, -1000, -1000, -1000,
	121259, 430, 3335, -1000, -1000, -1000, -1000, 2155, 89180, -1000,
	-1000, -1000, -1000, -231, -1000, -1000, 1920, 63, 2085, 2630,
	-1000, 2217, 428, -1000, -1000, 2216, 2551, -1000, 96754, 31365,
	31365, 238, 3359, 868, -1000, 3427, -1000, 3134, 3134, 45309,
	3358, 63, -1000, 3444, 53730, -1000, 89180, 53730, 2232, 1992,
	2420, 74521, -1000, 2425, -1000, -1000, -233, 109778, 1741, -1000,
	-1000, 73431, 73431, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1002, -240, -241, -1000, 73431, -1000,
	-1000, 2339, -1000, 109778, -1000, 109778, -1000, -1000, -247, -248,
	-1000, 1998, 45309, 30793, -1000, -1000, 7183, -249, -1000, -84,
	-1000, 3357, 47025, 3503, 3498, 3497, -1000, -1000, -1000, 1828,
	-1000, -1000, -1000, 2955, 2680, 116336, 2395, 109778, 116285, -1000,
	2756, -1000, -1000, 2526, 427, -1000, -1000, -1000, -1000, 817,
	109778, 2526, 2678, 89180, 1005, -250, 2093, 2093, 45309, 30221,
	2122, 45309, -1000, -1000, 3243, -1000, 2721, 3441, -1000, 877,
	-1000, 2109, 109778, -1000, 3228, -1000, 3147, -1000, -1000, -1000,
	2566, 63, -1000, -1000, -1000, -255, 121259, 63, -1000, 237,
	-256, 1004, -257, 89180, 1949, -1000, 756, -1000, 2435, 914,
	-1000, -1000, -258, -263, 1789, 1002, 2071, -264, -1000, -265,
	-270, -1000, -1000, 213, 46453, 46453, 46453, -101, -106, -1000,
	109778, 424, -1000, -1000, -1000, -1000, -1000, 2904, 887, -1000,
	2219, 1888, 199, 989, -1000, -1000, 2071, 109778, -1000, -1000,
	-1000, 886, 422, -1000, 45309, 1002, -272, -1000, 965, -273,
	-1000, 959, -280, -1000, 2727, -1000, -281, 2155, 885, 3319,
	-1000, -1000, -1000, 2216, 89180, -282, -1000, -1000, 2357, -1000,
	2526, 881, -1000, -1000, -1000, 1002, 421, 1789, 420, 1446,
	756, -1000, -1000, 1334, 3197, 3094, 873, 873, 2526, 1789,
	869, -1000, 873, -1000, -1000, -1000, 3078, -1000, 50423, 2201,
	1744, 119101, 3078, 3078, -1000, -1000, 109778, 3305, -1000, 2230,
	2220, 1427, -1000, -1000, -1000, -1000, -1000, -1000, 2664, -283,
	3303, 2395, 121259, 2526, -1000, 2093, 2625, -1000, 2093, 2724,
	-1000, 2108, -1000, -1000, -1000, 1682, 3425, 2409, 419, -1000,
	109778, 1725, 1698, 3496, 2085, 2216, 1789, 53730, 2526, 53730,
	-1000, -1000, 109778, -1000, 1992, 1270, -1000, -1000, 2071, 2526,
	914, 409, -1000, -1000, 1732, 3368, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 745, -1000, 3109, -1000, 1033, 2094,
	2094, 914, -1000, 742, 2219, -1000, -1000, 406, -1000, 404,
	-1000, 2186, -1000, -1000, -1000, -1000, 109778, -1000, -1000, 3495,
	-1000, 877, -1000, 2526, -288, 2071, -289, -1000, -111, 1949,
	-1000, 1502, 869, 2071, -1000, 1738, -1000, -1000, 2171, 45881,
	45309, -1000, 3411, -1000, -1000, 2506, -1000, -1000, 45309, 2664,
	45309, 45309, 60314, -290, -1000, 2216, 2071, 1002, 869, 1789,
	1446, 61933, 914, 869, -1000, -1000, -1000, 121259, -1000, -1000,
	-1000, 121259, -1000, -291, -299, -156, 96209, 2153, 2409, 869,
	1789, 914, 2526, -1000, -266, -1000, 914, 2071, 1059, -306,
	-1000, -1000, -1000, -1000, 914, 2526, -1000, 2071, -1000, -1000,
	-1000, -1000, 403, -1000, -1000, 2071, 869, 45309, 869, 914,
	-307, 914, -1000, 2071, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4301, 4299, 4297, 4296, 4294, 4293, 4292, 4290, 4285,
	4284, 4283, 4282, 4281, 4280, 4279, 4277, 4275, 4274, 4271,
	4270, 4268, 4267, 4263, 4261, 4260, 4259, 4256, 4254, 4252,
	4248, 4247, 4244, 4243, 4242, 4239, 4237, 4235, 4234, 4231,
	4228, 4227, 4225, 4223, 4222, 4221, 4220, 4219, 4216, 4215,
	4214, 4212, 4211, 4210, 4209, 4208, 4207, 4206, 4203, 4202,
	4201, 4200, 4199, 52, 4197, 4196, 4195, 4188, 4187, 4185,
	4184, 4183, 4182, 4181, 4178, 4177, 4175, 4170, 4164, 4155,
	4154, 4153, 4152, 4148, 58, 4133, 264, 4132, 4131, 4130,
	4122, 4120, 4113, 4110, 4108, 4107, 4106, 4102, 4101, 263,
	4100, 128, 4098, 4097, 4096, 4091, 4090, 262, 4089, 4086,
	4084, 4081, 270, 4080, 4079, 4075, 4073, 4072, 4071, 4070,
	4068, 4064, 4063, 4058, 91, 199, 4054, 4051, 1339, 4050,
	4049, 4048, 4047, 4045, 4043, 4042, 4041, 4040, 4039, 242,
	4031, 261, 4027, 4024, 4023, 4021, 4019, 4016, 4015, 4014,
	4013, 4011, 4001, 4000, 3999, 3998, 3997, 3996, 3989, 3988,
	3986, 3984, 3981, 3980, 3979, 3977, 3976, 3973, 3972, 3971,
	3968, 3967, 3965, 3964, 3963, 3962, 3961, 3958, 3956, 240,
	267, 177, 3954, 3953, 260, 258, 3948, 3947, 3944, 3941,
	3940, 118, 9, 49, 3939, 3938, 93, 82, 83, 96,
	98, 94, 3937, 106, 3936, 114, 61, 3935, 12, 2,
	155, 236, 11273, 227, 3932, 3930, 3927, 241, 183, 3926,
	234, 3925, 3924, 3922, 3921, 69, 43, 168, 166, 160,
	154, 755, 3918, 147, 88, 78, 50, 37, 15, 70,
	202, 18, 3917, 250, 8, 124, 6, 35, 3912, 3904,
	3903, 3900, 3278, 120, 3895, 255, 235, 148, 3892, 3891,
	3888, 514, 3887, 3883, 48, 3881, 173, 89, 119, 27,
	117, 3880, 139, 34, 3877, 170, 53, 3876, 157, 97,
	80, 10258, 7361, 3874, 109, 59, 136, 193, 208, 156,
	194, 162, 153, 150, 187, 201, 200, 165, 184, 3868,
	248, 3867, 3362, 95, 169, 3866, 3865, 3864, 84, 189,
	99, 3863, 3862, 73, 11, 14, 4, 7, 127, 25,
	24, 16, 3857, 51, 113, 42, 23, 3855, 26, 3854,
	3853, 3851, 3845, 3842, 62, 152, 3841, 269, 3840, 116,
	47, 40, 3839, 46, 204, 3835, 232, 123, 3834, 3833,
	243, 196, 176, 3832, 68, 218, 3831, 3830, 3828, 3825,
	3823, 122, 3, 121, 3822, 3820, 140, 3818, 45, 239,
	185, 3817, 54, 3816, 3815, 163, 108, 130, 265, 221,
	217, 111, 214, 175, 215, 3813, 3812, 3811, 174, 3810,
	3809, 226, 143, 3808, 3805, 192, 271, 90, 41, 74,
	230, 79, 182, 146, 3804, 190, 3801, 3800, 268, 172,
	207, 1, 20, 100, 115, 3799, 5, 223, 145, 219,
	105, 3798, 6219, 1925, 2625, 3797, 3796, 133, 112, 71,
	107, 144, 252, 64, 3795, 3789, 2285, 3786, 3785, 3784,
	3783, 178, 3782, 3781, 3780, 132, 191, 205, 3779, 85,
	65, 44, 21, 149, 246, 256, 102, 213, 164, 249,
	3776, 3771, 3770, 181, 3769, 76, 229, 158, 195, 244,
	55, 3766, 142, 3765, 141, 1678, 63, 138, 3764, 211,
	3763, 3762, 3758, 3755, 3751, 3750, 3747, 486, 225, 3744,
	3742, 3740, 33, 180, 3739, 251, 137, 171, 92, 77,
	3738, 87, 3067, 3737, 72, 237, 66, 253, 186, 254,
	3736, 4762, 57, 3734, 0, 12331, 6303, 9057, 11998, 3732,
	4190, 3731, 3730, 3729, 210, 131, 3728, 3725, 3724, 103,
	3723, 81, 3722, 3721, 67, 3720, 29, 17, 19, 30,
	28, 203, 161, 3719, 3718, 126, 129, 134, 3715, 266,
	216, 3713, 3711, 3709, 3708, 104, 3707, 38, 3706, 36,
	3705, 3704, 39, 13, 31, 3703, 3702, 212, 3701, 209,
	245, 3700, 151, 3699, 3359, 125, 3698, 3696, 3695, 60,
	56, 247, 86, 3694, 275, 3693, 3296, 3692, 3691, 22,
	3690, 3689, 238, 198, 167, 206, 3688, 3687, 159, 3685,
	3684, 3683, 273, 3682, 3681, 3680, 32, 3679, 10, 3676,
	3675, 197, 3104, 3674, 3673, 110, 3672, 179,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 11, 11, 7, 7, 7, 7, 8, 8, 8,
	8, 8, 49, 49, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 36, 31, 32, 33, 34, 34, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	17, 17, 37, 37, 18, 18, 39, 39, 19, 19,
	40, 40, 581, 581, 593, 593, 22, 22, 42, 42,
	23, 43, 16, 582, 582, 582, 582, 35, 24, 44,
	28, 28, 28, 28, 28, 194, 194, 194, 194, 21,
	21, 38, 38, 228, 228, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	227, 227, 227, 227, 227, 227, 227, 227, 227, 227,
	577, 577, 230, 230, 229, 224, 224, 583, 583, 231,
	231, 231, 233, 233, 13, 13, 13, 13, 13, 13,
	13, 13, 13, 13, 476, 476, 476, 509, 509, 508,
	508, 508, 507, 507, 597, 597, 598, 598, 598, 598,
	598, 127, 127, 374, 374, 374, 52, 52, 52, 52,
	52, 572, 572, 196, 196, 196, 198, 198, 197, 197,
	197, 197, 75, 75, 588, 588, 589, 589, 587, 590,
	590, 590, 195, 195, 195, 123, 123, 123, 123, 123,
	123, 124, 124, 125, 125, 199, 199, 199, 201, 201,
	200, 200, 200, 200, 200, 200, 200, 200, 205, 15,
	15, 15, 15, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 103, 103, 511, 511, 512, 512, 190, 190,
	191, 191, 191, 191, 192, 192, 193, 193, 193, 66,
	66, 202, 202, 204, 204, 203, 203, 203, 203, 203,
	54, 54, 54, 54, 54, 54, 54, 55, 55, 55,
	55, 55, 56, 56, 56, 56, 56, 56, 57, 57,
	57, 57, 57, 57, 64, 64, 64, 64, 64, 181,
	181, 67, 67, 67, 67, 67, 67, 67, 67, 67,
	67, 67, 67, 67, 72, 72, 72, 72, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 599, 599, 599,
	599, 599, 599, 599, 599, 599, 599, 600, 600, 601,
	601, 602, 602, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 603, 603, 603, 603, 603, 603, 603, 603,
	603, 603, 70, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 70, 70, 70, 81,
	81, 336, 336, 301, 301, 82, 82, 82, 83, 83,
	84, 84, 68, 68, 570, 570, 351, 351, 467, 467,
	69, 578, 578, 578, 580, 580, 579, 579, 86, 86,
	373, 373, 87, 87, 87, 87, 87, 87, 88, 88,
	88, 88, 88, 88, 88, 89, 89, 89, 89, 89,
	89, 89, 89, 89, 89, 89, 89, 89, 89, 96,
	96, 96, 96, 96, 97, 97, 97, 94, 94, 94,
	91, 91, 91, 90, 90, 90, 95, 95, 95, 569,
	290, 290, 93, 93, 93, 92, 92, 92, 352, 352,
	98, 98, 98, 98, 302, 99, 99, 99, 99, 99,
	99, 99, 99, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 101, 102, 102, 102, 102, 102, 102,
	102, 102, 102, 102, 102, 102, 469, 469, 100, 100,
	100, 434, 434, 104, 104, 104, 389, 389, 105, 105,
	105, 105, 105, 106, 106, 106, 106, 106, 106, 106,
	106, 126, 126, 126, 126, 126, 126, 126, 574, 574,
	344, 344, 255, 255, 255, 255, 116, 116, 116, 116,
	117, 117, 117, 118, 118, 186, 186, 133, 133, 133,
	133, 133, 132, 132, 132, 132, 132, 132, 58, 58,
	58, 59, 59, 60, 60, 61, 61, 62, 62, 63,
	63, 63, 63, 63, 135, 135, 594, 594, 137, 134,
	134, 134, 136, 136, 136, 136, 138, 139, 139, 139,
	139, 139, 139, 139, 139, 140, 140, 501, 501, 360,
	360, 499, 499, 521, 521, 500, 500, 306, 306, 306,
	306, 306, 307, 307, 307, 510, 510, 510, 510, 510,
	510, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	187, 187, 188, 189, 189, 189, 189, 189, 164, 164,
	164, 180, 180, 180, 180, 180, 180, 180, 167, 167,
	167, 151, 151, 142, 142, 142, 142, 142, 142, 142,
	146, 146, 146, 146, 146, 146, 146, 146, 143, 143,
	153, 153, 153, 153, 153, 147, 147, 148, 148, 148,
	148, 174, 174, 150, 150, 152, 152, 152, 152, 152,
	152, 152, 152, 152, 144, 144, 144, 144, 155, 155,
	155, 155, 396, 396, 396, 179, 179, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 177, 177,
	177, 177, 177, 177, 591, 591, 592, 592, 171, 171,
	171, 171, 171, 171, 448, 448, 165, 165, 165, 165,
	170, 170, 170, 170, 173, 173, 173, 173, 379, 379,
	162, 162, 162, 163, 163, 163, 168, 168, 169, 166,
	166, 172, 172, 172, 172, 145, 145, 145, 145, 604,
	604, 604, 175, 175, 161, 161, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 605, 605, 157,
	157, 157, 156, 156, 156, 156, 159, 159, 160, 160,
	160, 160, 160, 160, 158, 149, 178, 571, 571, 567,
	567, 567, 567, 567, 567, 567, 567, 568, 568, 568,
	568, 573, 573, 109, 109, 109, 109, 109, 119, 119,
	119, 119, 119, 110, 110, 110, 110, 110, 112, 112,
	111, 111, 111, 111, 76, 76, 76, 76, 76, 14,
	14, 14, 77, 77, 246, 246, 208, 208, 208, 325,
	325, 209, 209, 314, 314, 314, 314, 206, 206, 207,
	207, 78, 78, 606, 606, 606, 584, 584, 584, 585,
	585, 585, 585, 585, 585, 308, 308, 309, 309, 414,
	414, 414, 414, 414, 312, 312, 312, 313, 313, 313,
	313, 313, 313, 313, 313, 313, 315, 315, 232, 232,
	232, 323, 324, 324, 316, 316, 322, 321, 321, 320,
	320, 319, 319, 317, 318, 318, 318, 327, 327, 326,
	329, 329, 328, 413, 530, 530, 532, 532, 532, 532,
	532, 532, 532, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 397, 397, 607, 607, 528,
	528, 528, 529, 524, 524, 525, 525, 525, 525, 525,
	310, 310, 311, 311, 311, 311, 526, 527, 342, 342,
	452, 531, 531, 533, 533, 535, 608, 608, 608, 608,
	608, 608, 609, 609, 609, 412, 412, 411, 411, 334,
	334, 536, 536, 536, 536, 537, 537, 537, 537, 537,
	540, 539, 538, 538, 538, 538, 538, 80, 80, 80,
	376, 376, 375, 375, 377, 377, 377, 377, 377, 377,
	377, 377, 377, 377, 377, 377, 377, 377, 377, 183,
	183, 258, 258, 74, 74, 74, 12, 12, 12, 586,
	586, 586, 79, 79, 79, 79, 79, 79, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 257, 576, 576,
	575, 575, 259, 259, 611, 611, 85, 85, 85, 85,
	85, 85, 85, 85, 470, 470, 471, 471, 73, 73,
	73, 73, 73, 398, 398, 395, 395, 394, 394, 341,
	341, 450, 450, 450, 451, 263, 263, 264, 264, 225,
	225, 225, 30, 29, 20, 20, 25, 25, 26, 26,
	245, 245, 245, 245, 245, 245, 245, 245, 245, 27,
	27, 46, 46, 46, 46, 47, 47, 47, 47, 50,
	50, 51, 51, 45, 45, 45, 45, 48, 48, 41,
	41, 595, 595, 596, 596, 115, 115, 120, 120, 120,
	120, 120, 121, 121, 121, 121, 122, 122, 122, 122,
	131, 131, 182, 182, 182, 182, 182, 182, 182, 53,
	53, 53, 53, 65, 65, 65, 65, 129, 613, 613,
	613, 130, 130, 130, 612, 612, 256, 256, 408, 408,
	409, 409, 614, 614, 410, 410, 410, 410, 410, 249,
	248, 250, 250, 251, 251, 71, 71, 71, 241, 241,
	240, 238, 238, 513, 513, 243, 243, 243, 244, 244,
	234, 234, 235, 235, 236, 236, 237, 237, 247, 247,
	615, 615, 107, 107, 107, 185, 185, 300, 300, 300,
	405, 405, 405, 335, 335, 270, 270, 407, 407, 407,
	407, 372, 372, 372, 184, 184, 349, 349, 362, 362,
	363, 363, 464, 464, 364, 113, 113, 114, 114, 128,
	128, 212, 212, 210, 210, 210, 210, 210, 210, 210,
	210, 217, 217, 218, 218, 219, 219, 220, 221, 221,
	221, 221, 353, 353, 222, 222, 222, 211, 211, 211,
	213, 213, 213, 213, 213, 213, 213, 216, 216, 216,
	216, 223, 223, 223, 215, 215, 547, 547, 547, 549,
	549, 551, 551, 550, 550, 546, 546, 548, 548, 610,
	610, 378, 378, 378, 332, 333, 330, 330, 331, 331,
	339, 339, 337, 338, 338, 340, 340, 449, 449, 449,
	226, 226, 226, 369, 369, 369, 369, 370, 370, 401,
	401, 399, 399, 399, 399, 400, 400, 402, 402, 402,
	403, 403, 404, 404, 366, 366, 367, 367, 368, 368,
	368, 368, 430, 430, 214, 214, 214, 346, 346, 346,
	347, 347, 420, 420, 420, 420, 420, 420, 421, 421,
	419, 419, 419, 419, 453, 453, 453, 453, 453, 453,
	453, 453, 453, 454, 455, 455, 348, 348, 456, 406,
	406, 565, 565, 565, 566, 566, 447, 447, 457, 457,
	457, 457, 457, 457, 445, 445, 446, 446, 465, 466,
	466, 382, 382, 382, 382, 380, 380, 383, 383, 383,
	383, 383, 381, 381, 458, 458, 458, 458, 371, 371,
	459, 459, 459, 459, 460, 461, 461, 462, 462, 415,
	416, 416, 472, 472, 472, 472, 474, 345, 345, 345,
	345, 345, 523, 522, 522, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 489, 489, 489, 489,
	489, 489, 489, 475, 475, 475, 475, 475, 479, 479,
	479, 478, 478, 478, 478, 478, 478, 478, 478, 478,
	478, 478, 480, 480, 485, 485, 486, 486, 486, 481,
	482, 487, 487, 487, 487, 616, 616, 491, 491, 483,
	483, 483, 483, 483, 483, 483, 483, 483, 477, 477,
	477, 484, 484, 484, 391, 391, 391, 391, 391, 391,
	391, 391, 391, 391, 391, 391, 391, 390, 390, 392,
	392, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 422,
	422, 422, 422, 422, 422, 422, 422, 422, 422, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 423, 423,
	423, 423, 423, 423, 423, 423, 423, 423, 424, 424,
	424, 424, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 425, 425, 425,
	425, 425, 425, 425, 425, 425, 425, 541, 541, 541,
	541, 541, 541, 541, 541, 426, 426, 544, 544, 545,
	545, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 542, 542, 542, 542, 542, 542,
	542, 542, 542, 542, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	543, 543, 543, 543, 543, 543, 543, 543, 543, 543,
	552, 552, 553, 553, 555, 555, 556, 556, 557, 558,
	558, 558, 559, 560, 560, 554, 554, 561, 561, 561,
	561, 562, 562, 563, 563, 563, 563, 563, 564, 564,
	564, 564, 564, 436, 436, 437, 437, 443, 443, 443,
	305, 305, 305, 305, 305, 305, 305, 305, 305, 305,
	305, 305, 305, 305, 305, 305, 260, 260, 260, 260,
	260, 358, 358, 356, 356, 356, 359, 359, 357, 357,
	355, 355, 354, 354, 433, 433, 431, 431, 435, 435,
	384, 384, 490, 490, 490, 490, 490, 490, 490, 490,
	385, 385, 385, 393, 386, 386, 387, 387, 387, 387,
	387, 427, 428, 388, 388, 388, 429, 429, 438, 442,
	442, 441, 440, 440, 439, 439, 417, 417, 418, 418,
	365, 365, 617, 617, 361, 361, 463, 463, 463, 463,
	304, 304, 350, 350, 303, 303, 295, 295, 296, 296,
	296, 296, 343, 343, 444, 444, 492, 492, 493, 493,
	494, 494, 495, 495, 496, 497, 498, 432, 432, 280,
	279, 267, 268, 278, 277, 276, 266, 269, 273, 274,
	275, 271, 272, 286, 285, 284, 239, 242, 291, 292,
	292, 294, 294, 293, 293, 282, 283, 468, 265, 297,
	297, 298, 298, 298, 299, 299, 299, 299, 261, 261,
	262, 262, 287, 287, 288, 289, 289, 281, 281, 281,
	252, 252, 252, 253, 253, 254, 254, 506, 506, 503,
	503, 503, 504, 504, 504, 505, 505, 505, 505, 502,
	502, 502, 502, 502, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 514, 514, 514, 514, 514, 514, 514, 514, 514,
	514, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 518, 518, 518, 518, 518, 518, 518,
	518, 518, 518, 515, 515, 516, 516, 516, 516, 516,
	516, 516, 516, 516, 516, 516, 516, 516, 516, 516,
	516, 516, 516, 517, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 520, 520,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 3, 4, 6, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 6, 6, 6, 4, 4, 5, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 0, 6, 6, 6, 6,
	6, 6, 4, 4, 4, 4, 3, 4, 4, 4,
	7, 7, 9, 8, 9, 5, 3, 5, 7, 4,
	12, 4, 12, 1, 3, 5, 5, 2, 5, 3,
	6, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 2, 0, 1,
	1, 0, 2, 0, 7, 10, 6, 8, 6, 6,
	6, 9, 4, 3, 2, 2, 0, 1, 3, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 12, 3, 1, 0, 1, 1, 2, 3,
	3, 0, 4, 6, 0, 5, 7, 6, 8, 8,
	2, 1, 3, 1, 3, 2, 5, 0, 1, 3,
	3, 3, 3, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 6, 4, 9, 7, 12, 12, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 2, 3, 3, 3,
	3, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 6, 6, 6, 6, 4, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 6, 3, 8, 3, 4, 3,
	3, 4, 3, 4, 4, 4, 3, 5, 7, 3,
	3, 4, 3, 3, 3, 3, 3, 2, 0, 1,
	0, 1, 0, 4, 3, 3, 3, 3, 3, 6,
	4, 4, 4, 3, 5, 3, 3, 3, 3, 3,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 1, 2, 1, 2, 1, 2, 7,
	3, 2, 0, 1, 3, 3, 1, 0, 1, 2,
	2, 1, 6, 5, 1, 2, 1, 3, 2, 0,
	7, 2, 5, 0, 1, 3, 3, 1, 9, 3,
	2, 0, 2, 2, 2, 2, 2, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 4,
	6, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	5, 7, 3, 4, 6, 3, 4, 6, 3, 1,
	1, 3, 4, 6, 3, 3, 5, 3, 1, 3,
	2, 2, 2, 2, 1, 2, 2, 5, 3, 3,
	6, 6, 3, 1, 1, 2, 1, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 1,
	2, 1, 1, 2, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 3, 5, 7,
	2, 3, 0, 3, 5, 2, 3, 0, 2, 3,
	2, 3, 2, 6, 4, 7, 7, 7, 9, 5,
	2, 6, 4, 7, 7, 7, 5, 2, 2, 1,
	1, 3, 1, 1, 1, 1, 1, 2, 1, 2,
	2, 3, 2, 4, 3, 2, 2, 1, 2, 1,
	3, 3, 1, 2, 1, 2, 1, 2, 1, 1,
	3, 5, 4, 6, 4, 3, 0, 1, 3, 2,
	4, 2, 4, 1, 6, 3, 1, 1, 5, 3,
	2, 6, 3, 3, 4, 4, 3, 1, 3, 2,
	3, 3, 1, 3, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	2, 2, 1, 3, 3, 3, 3, 3, 2, 3,
	3, 1, 1, 1, 1, 1, 2, 2, 5, 7,
	3, 3, 3, 4, 4, 6, 5, 5, 5, 3,
	4, 4, 3, 4, 4, 3, 4, 4, 5, 3,
	5, 5, 5, 7, 3, 3, 3, 2, 6, 4,
	3, 2, 3, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 4, 3, 4, 3, 3, 4,
	4, 5, 0, 1, 1, 1, 1, 3, 2, 4,
	3, 3, 5, 3, 4, 3, 5, 3, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 4, 4, 3, 1,
	1, 1, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 6, 5, 8, 3, 6,
	6, 3, 13, 16, 1, 0, 1, 2, 3, 0,
	2, 0, 4, 0, 4, 5, 4, 3, 3, 1,
	3, 10, 13, 0, 2, 3, 1, 1, 0, 1,
	2, 2, 2, 2, 1, 1, 0, 1, 3, 1,
	1, 1, 2, 3, 3, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 8, 0, 1, 1,
	0, 2, 1, 0, 1, 0, 1, 1, 0, 1,
	4, 1, 0, 3, 7, 7, 1, 1, 3, 7,
	1, 3, 11, 3, 2, 0, 3, 1, 2, 2,
	3, 2, 6, 2, 1, 2, 2, 2, 8, 4,
	2, 5, 5, 5, 2, 2, 0, 1, 3, 11,
	12, 9, 5, 3, 1, 5, 10, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 3, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 12, 15, 3, 1, 0,
	4, 3, 0, 1, 1, 4, 4, 5, 1, 0,
	3, 0, 3, 0, 3, 0, 3, 0, 4, 0,
	1, 0, 6, 7, 3, 6, 3, 1, 3, 1,
	1, 4, 2, 1, 3, 1, 3, 4, 8, 11,
	5, 2, 2, 0, 10, 3, 2, 0, 1, 3,
	1, 1, 3, 3, 5, 6, 4, 5, 4, 1,
	1, 3, 3, 1, 2, 4, 4, 2, 3, 5,
	5, 1, 3, 1, 0, 1, 2, 3, 2, 4,
	2, 3, 0, 2, 0, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 2, 1, 8, 8, 8,
	2, 4, 4, 4, 2, 2, 2, 2, 3, 1,
	3, 1, 2, 6, 7, 1, 0, 1, 0, 1,
	0, 1, 1, 0, 1, 5, 1, 0, 1, 0,
	1, 0, 3, 3, 5, 1, 3, 3, 4, 5,
	2, 2, 0, 2, 2, 1, 1, 1, 0, 1,
	0, 2, 2, 5, 4, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 0, 1, 3, 1, 3,
	3, 3, 2, 0, 4, 2, 5, 3, 2, 0,
	1, 3, 3, 5, 1, 1, 1, 1, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 2, 2, 4, 1, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 6, 6, 8, 8, 6, 4, 6,
	6, 6, 4, 1, 3, 3, 3, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 1, 2, 3, 2, 3, 2, 3,
	1, 0, 1, 3, 1, 3, 3, 3, 1, 3,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	4, 3, 1, 2, 3, 0, 3, 3, 2, 2,
	1, 2, 2, 3, 2, 1, 1, 1, 5, 1,
	2, 4, 2, 0, 1, 0, 3, 5, 1, 0,
	1, 2, 1, 0, 1, 3, 3, 2, 1, 1,
	1, 3, 1, 3, 3, 1, 1, 1, 1, 5,
	3, 1, 1, 3, 1, 1, 1, 1, 2, 2,
	1, 1, 2, 2, 1, 1, 1, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 586, -101, -98, -66, -64, -104, -105,
	-87, -106, -100, -126, -131, -113, -114, -115, -127, -133,
	-182, -187, -188, -189, -3, -52, -54, -67, -86, -88,
	-99, -108, -107, -109, -116, -123, -119, -103, -58, -128,
	-132, -141, -183, -184, -185, 32, 31, 100, 80, 154,
	128, 137, 201, 380, 422, 433, 394, 142, 414, 399,
	-136, -137, 451, -53, -65, -130, -129, 73, 129, 408,
	-4, -12, -15, 29, 46, -55, -56, -57, 62, -74,
	-70, -81, -75, -68, -69, -72, -599, 102, -548, -89,
	-92, -122, -603, 161, 219, -110, -111, 363, -117, -118,
	416, -120, -121, 418, 162, -60, -59, 156, -210, -212,
	-134, -135, -186, -142, -143, -144, -145, -146, -147, -148,
	-174, -149, -150, -151, -152, -153, -154, -158, -177, -155,
	-156, -157, -160, -159, -161, -166, -162, -163, -164, -165,
	-167, -168, -170, -171, -172, -173, -175, -176, 456, -169,
	-178, 516, 49, 470, 82, 146, 426, 21, -5, -6,
	-7, -8, -9, -10, -11, -14, -13, -71, -73, -76,
	-77, -78, -85, -79, -80, -547, -90, -91, -94, -96,
	-97, -93, -95, 415, -213, -211, 583, 531, -17, -22,
	-23, -18, -19, -21, -24, -20, -25, -26, -27, -37,
	-42, -43, -39, -40, -38, -41, -44, -45, -46, -47,
	-48, -49, -50, -51, -29, -35, -36, -30, -31, -32,
	-33, -34, -16, -28, 552, 561, -216, -214, -215, -223,
	443, 539, 490, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, -302, 2, -282, -287, -288,
	-289, -281, -252, -517, -520, 4, -514, -518, 168, 228,
	327, 21, 23, 22, 24, 25, 26, 27, 29, 30,
	41, 42, 44, 45, 46, 47, 48, 49, 53, 55,
	59, 60, 61, 62, 63, 64, 68, 73, 74, 79,
	80, 81, 82, 83, 84, 85, 91, 88, 89, 90,
	92, 94, 96, 97, 98, 99, 100, 101, 103, 104,
	105, 107, 108, 109, 117, 118, 119, 120, 121, 123,
	128, 129, 132, 127, 131, 133, 135, 136, 137, 140,
	141, 142, 144, 145, 147, 148, 149, 151, 152, 154,
	155, 156, 159, 157, 498, 158, 160, 161, 162, 163,
	166, 174, 175, 176, 181, 183, 184, 188, 189, 192,
	193, 194, 195, 196, 197, 198, 199, 200, 202, 206,
	208, 209, 210, 211, 212, 218, 219, 221, 222, 223,
	224, 229, 230, 231, 235, 232, 241, 242, 246, 247,
	248, 250, 254, 255, 256, 257, 258, 259, 261, 263,
	262, 265, 268, 269, 272, 276, 277, 281, 282, 278,
	283, 284, 286, 287, 290, 288, 291, 292, 289, 293,
	295, 296, 297, 298, 299, 300, 301, 302, 303, 304,
	305, 306, 294, 309, 307, 311, 312, 313, 325, 322,
	317, 318, 314, 319, 315, 316, 320, 321, 324, 329,
	330, 333, 216, 335, 336, 339, 357, 343, 344, 345,
	348, 349, 352, 355, 356, 358, 359, 360, 361, 362,
	363, 364, 365, 367, 368, 370, 371, 372, 374, 375,
	376, 378, 380, 381, 383, 384, 386, 387, 388, 389,
	390, 391, 392, 394, 396, 395, 397, 399, 401, 402,
	403, 408, 414, 410, 411, 412, 413, 415, 416, 417,
	418, 420, 421, 422, 424, 425, 426, 427, 429, 431,
	432, 436, 437, 453, 454, 472, 433, 434, 435, 438,
	439, 440, 441, 442, 446, 444, 445, 447, 448, 449,
	451, 452, 455, 456, 458, 459, 460, 461, 462, 463,
	466, 468, 469, 470, 489, 471, 473, 477, 478, 479,
	480, 474, 475, 488, 482, 483, 485, 486, 491, 492,
	493, 494, 495, 496, 497, 499, 501, 509, 510, 511,
	513, 516, 517, 518, 519, 507, 521, 522, 525, 526,
	527, 530, 528, 529, 531, 533, 536, 537, 538, 544,
	543, 545, 548, 553, 554, 556, 557, 558, 36, 50,
	51, 54, 56, 58, 69, 70, 71, 75, 124, 125,
	153, 164, 165, 177, 190, 191, 203, 205, 213, 214,
	215, 236, 237, 239, 244, 266, 332, 334, 350, 354,
	369, 373, 377, 379, 393, 428, 464, 476, 481, 502,
	503, 504, 505, 512, 514, 539, 540, 541, 546, 555,
	-302, 2, -282, 341, -275, 2, -252, -252, 380, 28,
	2, 28, 368, 445, 493, 495, 2, -574, -344, 2,
	28, -255, -252, 102, 201, 443, -275, 2, -574, -344,
	25, 2, -252, 2, 355, 22, 27, 66, 77, 98,
	140, 163, 185, 188, -602, 357, 387, 431, 447, 488,
	499, 513, 2, 543, 287, 444, 490, 228, 120, 518,
	438, -586, 436, 437, 355, 385, 424, 204, 532, -256,
	2, 433, -252, 287, 2, 586, 94, 277, 74, 428,
	448, -139, 510, -138, 502, 438, -140, -501, 2, 309,
	-252, 586, 586, 586, 28, -265, -252, 490, 228, 438,
	120, 486, 586, 2, 490, 360, 543, 444, 120, 390,
	228, 518, 188, 140, 27, 126, 438, -586, 287, -572,
	2, -567, 4, -518, -514, -296, -295, 490, 496, 120,
	-289, -281, 576, -288, 586, 586, 586, 2, 247, 248,
	389, 388, 448, 449, 586, 586, 586, 586, 436, 2,
	163, 22, 27, 66, 93, 98, 126, 185, 188, 346,
	-600, 357, 387, 447, 488, 492, 499, 513, -585, 471,
	68, 413, 438, -584, -586, 287, 518, 140, -394, 120,
	277, 199, 526, 495, 493, 524, 132, 235, 529, 528,
	586, 586, -101, 2, 583, 32, 31, 142, 451, -205,
	490, 240, 2, -252, 586, 586, 2, 247, 248, 436,
	437, 586, 586, 186, -567, 2, 586, 586, 2, 247,
	248, 436, 437, 240, 2, 68, 440, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, 2, -180, 448, 471, 210, 47, 46, 74, 28,
	386, 79, 361, 121, 148, 519, 202, 228, 229, 255,
	93, 94, -396, 44, 248, 247, 437, -591, 436, -448,
	491, 439, 445, 485, 259, 433, 510, 102, 533, 425,
	558, 390, 391, 483, 403, 278, 157, 187, 4, 120,
	309, 450, 502, 277, 432, 364, 84, -610, 2, 490,
	-612, 2, 510, 510, 2, -612, 2, -612, 2, -612,
	2, -613, 510, 555, 586, 586, 586, 586, 586, 586,
	586, 586, 586, 586, 586, 586, 586, 586, 586, 586,
	586, -211, -213, -212, 586, 586, 586, 586, 586, 586,
	586, -180, 448, 2, 74, 28, -337, -339, 523, 238,
	150, 347, -210, -212, 2, -547, -499, 2, -422, -521,
	-424, 574, 575, 567, 487, 67, 326, 559, -436, 126,
	524, 341, -520, -425, -438, 153, 428, -359, 8, 9,
	5, 6, 7, -261, -426, -432, 515, 167, 331, -299,
	587, 10, 583, -544, -212, -437, 37, 205, 65, -503,
	-298, -262, -475, 239, -297, -281, -541, -542, 4, -514,
	-515, -504, -478, -486, -482, -483, -489, -252, -517, 77,
	111, 112, 110, 115, 114, 280, 279, 116, 113, 450,
	532, 66, 36, 213, 214, 244, 332, 215, 75, -543,
	141, -516, 236, 237, 464, 51, 393, 177, 125, 124,
	334, 56, 54, 540, -487, 122, 502, 503, 504, 505,
	190, 191, 58, 164, 165, 354, 377, 481, 512, 514,
	203, 266, 43, 106, 187, 234, 217, 243, 245, 249,
	267, 270, 310, 323, 328, 351, 353, 423, 457, -616,
	541, 476, 69, 70, -549, 395, -550, -275, -549, 586,
	586, 588, 586, -330, -332, -333, 2, 28, 138, 583,
	2, -453, 2, -454, -458, -212, 260, -457, 583, -455,
	581, -282, 342, -545, 429, -541, -542, -261, -281, -298,
	4, -514, -516, 585, -334, 583, 120, 490, 78, 228,
	163, -389, 583, -252, 28, 341, 506, 588, -331, 384,
	-434, 583, 341, 186, 344, 60, 291, 2, 2, 2,
	2, 2, 213, -252, 490, 119, 2, 258, 2, 2,
	2, 2, 2, 2, 2, -352, 213, 2, -282, 543,
	-352, 213, 2, -352, 213, 2, -395, 2, 87, -266,
	213, 2, -252, -290, 213, 2, -285, -287, -294, 213,
	2, -292, -252, -512, 213, 2, -511, -506, 10, -505,
	5, 4, -514, -518, -515, -517, 77, -422, 2, -128,
	2, 60, -252, 543, 2, 2, 453, 2, 583, -139,
	71, 510, 43, 448, -409, 2, -410, -248, -249, -250,
	-465, -251, 246, 383, 392, 562, 130, 326, 558, -499,
	-594, 186, 566, 506, -499, -360, 585, 2, 2, 2,
	2, 2, 2, -458, 213, -282, 2, -279, -502, 4,
	-514, -518, -515, -519, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 126,
	130, 134, 138, 139, 143, 146, 150, 167, 169, 182,
	185, 186, 201, 204, 207, 220, 233, 238, 240, 260,
	264, 271, 279, 280, 326, 331, 337, 341, 342, 346,
	347, 366, 382, 398, 419, 443, 450, 467, 484, 490,
	500, 506, 508, 515, 523, 524, 532, 534, 542, 547,
	549, 550, 551, 552, -520, 2, -458, 213, 2, -284,
	213, -458, -287, 2, -266, 2, -278, -502, 2, -303,
	213, -282, -283, -287, -285, 2, 2, 2, 2, 2,
	-292, 2, -511, 213, 2, 543, 240, 506, 588, -350,
	-295, -296, -498, 8, -343, -252, 585, -422, 2, -128,
	-112, 2, 182, -422, 213, 2, -128, 213, 2, -422,
	213, 2, -128, 213, 2, -588, 2, -511, 213, -252,
	2, 291, 2, 2, 513, 2, 98, 490, 119, 2,
	412, -601, 431, 517, 2, 2, 2, 2, 2, 2,
	2, 490, -271, 2, -252, 182, 474, -292, 213, -293,
	2, 444, -611, 395, -511, 213, 2, 543, -285, 213,
	2, -285, 228, 242, -266, 213, 2, 495, 493, 495,
	493, 186, 2, 240, 2, 240, 2, -459, 2, -460,
	-454, -461, 581, 342, -469, 2, -468, -505, 539, -101,
	583, -101, 583, 448, 583, -511, -282, -282, -422, 2,
	-128, -112, 2, -422, 2, -128, 2, -125, -511, -124,
	583, 186, -422, 2, -128, -112, 2, -422, 2, -128,
	2, -205, 182, 2, 120, 490, -180, 2, 182, 534,
	2, 8, 2, 220, -511, 439, 391, 174, 2, 453,
	2, 454, 74, -396, 558, 74, 186, 2, 186, 2,
	-379, 2, 552, 186, 2, 2, -571, 2, 341, 186,
	2, 186, 2, 186, 2, 186, 2, 186, 2, -179,
	449, 511, 489, 388, 248, 2, -128, 549, -112, -422,
	549, 2, -592, 182, 437, -422, 2, 509, 257, 158,
	186, -379, 2, 186, 2, 186, 2, 5, 2, 389,
	472, 2, 246, 383, 472, 2, -282, -604, 28, 2,
	490, 543, 444, 2, 2, 88, 89, 186, 2, 186,
	2, 200, 186, 2, 186, 490, 558, 2, -371, -458,
	-408, -409, -408, 506, -337, -339, -180, 453, 2, -217,
	-369, -219, 182, -399, -400, -220, 271, 169, 337, -221,
	-378, 28, 138, -378, -378, 60, 584, 584, 11, 12,
	76, 41, 574, 575, 576, 577, 180, 578, 579, 572,
	573, 571, 564, 565, 569, 252, 253, 95, 568, 566,
	86, 285, 430, 170, 171, 172, 173, 409, 226, 34,
	227, 14, 15, 16, 33, 346, 270, 559, 217, 457,
	567, 17, 18, 19, 243, 245, 328, 50, 220, -260,
	-305, -422, -422, -422, -422, -422, -422, -422, 353, 583,
	-365, -417, 581, -212, 583, 583, 583, -498, -212, -422,
	-436, 584, -357, 583, -212, -436, -431, 583, 428, 581,
	583, -439, -422, 5, 5, 5, 583, 585, -552, 553,
	182, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 583, 583, 583, 379, -480, 583, -479,
	583, -479, -479, 544, -477, 583, 561, 554, 583, -477,
	583, 583, 583, 583, 583, 583, 583, 583, 583, 583,
	583, 583, 583, 544, 588, -549, -334, 583, -361, -463,
	-422, 576, -361, -361, 341, -354, -422, 106, -382, 249,
	310, 187, 267, 423, 234, -419, 587, -419, -447, 561,
	-212, -455, -281, -212, -457, 583, -453, -447, -102, -498,
	-86, -99, -107, -128, -141, -184, -185, 576, -282, 583,
	186, 583, 585, -502, 186, -343, -266, -282, -297, -298,
	-303, 2, 137, -354, -567, 518, 438, 444, -343, -255,
	38, -433, -472, -473, -523, 587, -522, -475, -485, -481,
	-484, 369, 373, -504, 54, 540, -487, 239, 4, -514,
	-516, 236, 237, 464, 51, 393, 177, 125, 124, 334,
	56, 502, 503, 504, 505, 190, 191, 58, 541, 476,
	69, 70, -567, 518, 438, 444, -343, 182, -509, 2,
	-508, -507, 116, 450, -505, 5, 2, 153, 2, 2,
	2, -252, -231, 588, 64, 417, 153, -352, 213, -231,
	153, -231, 153, -304, 213, -303, -231, 153, -231, 588,
	153, -231, 588, 153, 585, 588, 153, -509, 2, -395,
	-501, -354, 38, -409, 2, 126, -507, -614, 588, 269,
	-307, 284, 325, 209, 342, 556, 335, 130, -510, 5,
	4, -432, -444, 126, 277, 239, -492, -494, 8, -493,
	9, -495, 574, 575, -500, -499, 109, 585, -502, -228,
	410, 451, 356, -227, 24, 29, 142, 230, 313, 537,
	159, -320, 231, -317, 360, 153, 468, 527, -581, -582,
	435, 497, 498, 90, 335, 451, 356, 410, 153, -375,
	-377, 38, 118, 313, 355, 61, 223, 289, 290, 470,
	546, 153, 451, 356, 410, 356, 24, 142, -243, -240,
	451, -582, 99, 410, 482, 382, -582, -230, 468, 527,
	-581, -582, 435, 410, -229, -322, -317, 360, 153, 587,
	24, 142, 410, 451, 356, -597, -598, 29, 410, 356,
	-575, -546, 552, 153, -458, 213, -589, -124, 261, 5,
	10, -511, -124, -350, 588, 588, -502, 576, 437, 436,
	153, 153, 153, 153, 182, 326, 2, 2, 2, 2,
	2, 188, -584, -602, 2, 2, -282, 213, -336, 341,
	-570, -351, 490, -282, 182, 326, 43, -284, 213, 2,
	-287, 543, -575, 326, -286, 213, -282, 38, 583, 326,
	2, -395, 2, 228, -546, 326, -459, -300, -282, -454,
	-300, 451, -275, 38, -419, -282, 584, 588, -469, -469,
	-511, -193, 552, 186, 102, 583, 583, -205, -466, 588,
	-465, 220, -512, -125, -511, 413, -511, -570, -266, 2,
	-282, 2, 490, 250, -511, -193, 220, -511, -511, -511,
	-501, 28, 454, 2, -179, 449, 511, 89, 454, 2,
	-282, 490, 120, 228, 80, -252, -573, 182, -568, 424,
	438, 518, -567, -282, 120, -282, 120, -282, 120, -282,
	-282, 2, 2, 2, 2, 2, 85, 85, 2, 46,
	-592, 182, 2, 509, 2, 509, 2, -252, -252, -252,
	471, 269, -282, 491, -605, 2, 186, 182, 2, 490,
	228, 490, 228, 120, 186, 74, 120, 28, 490, 434,
	-231, 588, -256, -217, -369, -501, -370, -369, -218, -217,
	-220, 182, 392, 528, 313, 455, 254, -400, -399, 28,
	-422, -404, 176, 312, -422, -402, -424, 574, 575, -493,
	-495, -353, 335, -211, -211, -211, -340, -449, -422, 382,
	228, -474, -472, -472, -280, -502, 502, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, -422, -422, -422, -422, -422, -422, -422, -422,
	-422, -422, 270, 217, 457, 50, 220, -422, 506, -422,
	-422, -422, -422, 307, 326, 331, 515, 167, 525, 138,
	335, -617, 484, 40, -429, -212, -358, 583, -443, 35,
	467, 28, -436, 583, 2, -417, -422, -418, -355, -354,
	-354, 584, 542, 28, 138, 576, 2, 584, 588, 38,
	584, -422, -355, -435, -431, -354, -442, -441, 549, -390,
	-391, 557, 294, 123, 211, 292, -392, 442, -496, 8,
	-502, 576, -553, 175, 204, 583, 584, 2, 584, 2,
	584, -422, 2, 584, -422, 2, 584, -422, 2, 584,
	-422, 2, 584, 2, -422, -422, -422, -422, -422, -422,
	-422, -354, 8, -496, -496, 502, 502, -496, -496, -496,
	-488, 369, 370, 371, 372, 272, 273, 274, 275, 373,
	374, 375, 376, 299, 300, 301, 302, 295, 296, 297,
	298, 303, 304, 305, 306, 195, 196, 197, 198, 191,
	192, 193, 194, -488, -384, 2, -490, -354, 4, 557,
	294, 123, 211, 292, 442, 5, -384, 2, -385, 2,
	-422, -354, -386, -423, -424, 574, 575, 567, -436, -387,
	2, -422, -355, -422, 57, 264, 508, -388, -422, 186,
	-354, -354, 2, -354, 2, -550, 38, -354, -346, 588,
	186, 38, 4, -346, -346, 583, 584, 588, -383, 208,
	288, 283, 242, -383, -453, -382, 249, -380, 351, -380,
	-380, -447, -267, 581, 589, -502, -447, -446, -445, 38,
	-275, 348, -447, -447, 585, 584, -446, 582, -565, 583,
	586, 586, 586, 586, 586, -282, 583, -354, -502, 585,
	473, 2, 584, 243, 243, 243, 243, 429, 584, 506,
	-569, -290, -294, 2, 552, -101, 343, 584, 588, -345,
	37, 581, 585, -496, 2, 2, -491, 544, 583, 583,
	-391, 583, 186, -569, -294, 2, -344, 588, 506, -252,
	2, -282, -352, -231, 153, -352, -352, -231, 588, 153,
	-266, -285, -290, -292, -294, -252, -511, -512, -231, -286,
	-594, 584, 510, -410, -306, 392, 466, 411, 446, 486,
	8, 9, 8, 9, 588, -502, 588, -595, 93, 506,
	78, 438, -245, 278, 506, -413, 213, 78, -524, -269,
	93, -525, -252, 72, 524, 382, 185, 151, -595, 93,
	382, -595, 93, 2, 230, 93, 451, 471, 28, 60,
	-458, 41, 41, 28, -593, 324, 265, 548, 186, 558,
	490, 228, 438, 506, 506, -458, -377, -472, 118, 289,
	290, 60, -497, -492, 574, 575, -497, 60, -497, -497,
	-497, 552, -284, -458, 438, 506, 506, 506, 401, 401,
	-240, 506, 506, -615, 566, 401, 588, 41, 41, 28,
	-593, 324, 265, 186, 506, -303, -267, 538, 42, 538,
	42, 538, 506, 42, 438, 506, 588, 42, 506, 506,
	-576, -257, 105, 319, 282, 320, 97, 316, 96, 315,
	103, 317, 104, 318, 545, 329, 63, 314, 293, 321,
	-258, -259, 362, 536, -511, 451, 356, 410, 153, 220,
	-466, 220, -466, -295, -252, 585, -128, -422, -422, -128,
	-422, -128, 46, 153, 2, -611, 258, 583, -310, 326,
	186, -343, -467, 240, 588, -351, -567, 153, -508, -376,
	-375, 326, -286, 213, 2, 153, -334, 326, 147, 583,
	390, 2, 153, -268, 213, -253, -252, -395, -234, 494,
	153, -373, 534, -405, -128, 583, 126, 38, -405, -362,
	-363, -464, -364, -269, 583, -275, -419, -101, -468, 584,
	584, 584, -192, 345, -191, -252, 5, -205, 534, -309,
	-414, -413, -528, -529, -524, 270, 228, 524, 242, 168,
	-335, -270, -269, 119, -199, 552, -124, -125, 584, -466,
	220, 474, -193, -193, -466, -466, -282, 182, -511, -193,
	-193, -193, 2, 2, 2, 2, -379, -282, -266, -303,
	-282, 585, -343, -343, -294, -290, -379, -266, -379, -266,
	-379, -266, -128, -422, 2, 448, 182, 182, 585, -379,
	390, 120, 490, 360, 228, -282, -303, -282, -303, -266,
	120, -266, 121, -282, -458, -370, -218, 342, 254, 455,
	-402, -403, -424, 428, 429, -403, 428, 429, 8, 9,
	8, 9, -222, 459, 330, -352, 588, -225, 39, 134,
	254, -282, 558, 149, -422, -422, 506, -617, 484, -429,
	149, -422, 307, 331, 515, 167, 525, 138, 335, 186,
	583, -423, -423, 584, -356, -422, -422, 582, 591, 584,
	-339, 588, -337, -422, -354, -354, 584, 585, -354, -343,
	582, 582, 588, 584, -440, -441, 143, -422, 506, 506,
	506, 506, 583, 584, 585, -558, 352, 583, 583, -422,
	584, 584, 584, 584, 38, 588, 588, 588, 584, 588,
	588, 588, 584, 584, 584, 588, 584, 558, 558, 584,
	584, 584, 584, 588, 584, 588, 584, 186, 584, 584,
	-393, 366, 584, 11, 12, 574, 575, 576, 577, 180,
	578, 579, 572, 573, 571, 564, 565, 566, 86, 285,
	430, 14, 15, 16, 243, 220, -423, -423, -423, 584,
	-427, -428, 186, 182, 38, -388, -388, -388, 584, 186,
	-354, 584, 584, 583, -551, 287, 326, 584, -416, -415,
	550, -463, -347, 2, -453, -277, -502, -416, -416, -354,
	-422, 249, 249, -381, 534, 341, -383, -453, -446, -498,
	-421, -420, 184, 39, 134, 322, 216, -446, -275, -334,
	-446, -446, -502, -447, -447, -445, 584, -566, -498, 584,
	-348, -456, -545, -339, 585, -502, -202, -546, -181, 5,
	331, -181, -181, -181, -343, 506, 506, 25, 367, -472,
	581, 582, 8, -502, 583, -496, -496, -496, -343, 186,
	186, 186, -508, -508, 2, -231, -352, -231, -231, -303,
	-304, -231, -231, -231, -374, 552, -499, -409, 522, 83,
	392, 502, -499, -227, 410, -269, -269, -282, -291, -252,
	199, 402, -508, 326, -413, 213, -233, 326, -472, -276,
	-252, 583, -397, 554, 254, 254, 534, -269, -276, 254,
	213, -269, 213, -276, 2, -276, -577, 392, 336, -422,
	60, -318, 276, 390, 327, -228, 410, 451, 356, -128,
	-128, -128, -128, -128, 583, -594, 534, 137, -282, -303,
	-282, -291, -508, -286, 451, 356, 410, 323, -297, -497,
	-497, -375, 451, 356, 410, -291, -508, -284, -508, -239,
	-252, -239, 438, -266, 401, 558, 45, -615, -229, -128,
	-128, -128, -128, -128, 583, -267, -230, 410, 5, 213,
	-269, 5, -269, 213, 5, -252, -269, -291, -508, -598,
	24, 142, -269, -291, -508, -257, -511, 331, 530, -575,
	438, 506, 506, -458, -124, -196, 552, -124, -190, 224,
	576, -572, -252, 543, -252, -308, -311, -309, -269, -208,
	-209, 554, 552, 153, -301, -282, 581, -193, -511, -282,
	-467, -292, -293, 153, -334, 326, -511, 38, 153, 583,
	2, 2, -285, 341, 326, -268, 213, -235, 144, -615,
	-266, -416, -347, -372, -407, 419, 341, -335, 539, -275,
	-372, -349, 588, 186, 566, 585, -335, -462, 576, -101,
	-101, -193, 588, 583, 566, 566, 583, -511, -511, 584,
	588, -233, -282, -268, 228, 228, -274, -253, 584, 588,
	585, 583, -201, 345, -200, 145, 256, 241, 460, 461,
	462, 463, 136, -466, -199, -125, 186, 186, -61, 552,
	490, -193, 587, -252, -379, -379, -379, 448, 448, -252,
	-278, -266, -282, -279, -303, 182, 182, -266, 528, -403,
	342, 281, -449, -226, 560, -282, 587, -422, -422, 149,
	149, -422, -423, -423, -422, 149, 186, 583, -422, -433,
	33, 33, 584, 588, -418, -422, 584, 542, -339, -339,
	584, 576, -502, 587, 584, -431, 146, -422, 500, 294,
	211, 292, -392, 292, -392, -392, -496, 5, -502, 576,
	-559, -272, 583, -252, 550, -338, 347, 584, -474, -472,
	-422, -422, -422, -422, -422, -496, -477, -477, -492, -492,
	-422, -427, -422, -474, -472, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, -423, -423, -423, -423, -423, -423,
	-423, -423, -423, -423, 138, 326, 335, -423, -428, -427,
	-422, -422, -472, 584, 584, 584, -354, -101, 583, 287,
	-366, 204, -422, -466, 588, -366, -366, 584, -453, -453,
	583, -422, 249, 582, 588, 590, 566, -334, 585, -445,
	-446, 582, 584, 588, 584, 588, -406, 38, 584, -502,
	-416, -204, -203, 135, 53, 107, 133, 331, -343, -343,
	344, 5, 8, 581, 582, 585, -496, 584, 584, 584,
	-343, -343, -343, -231, -231, 119, 313, -422, 506, 506,
	60, 220, 153, 326, 536, -530, -525, 151, -422, 583,
	228, 583, 583, 2, -224, 142, 451, 24, -596, 2,
	534, 153, -231, 153, -231, 556, -318, 583, 583, 506,
	438, -245, 506, 552, -354, -422, -194, 126, -501, -582,
	587, -582, 587, 438, 506, 506, 438, 506, 506, 552,
	166, 166, 558, -239, 552, -354, 506, -476, 48, 26,
	326, -285, -231, 153, 506, 506, 518, 451, -511, 331,
	-291, -508, -286, 451, 356, 410, -466, -198, 345, -197,
	145, 421, 136, 256, -466, -196, 186, 240, 552, -286,
	2, 584, 584, 588, -531, 38, 339, 339, 583, -282,
	-82, 552, -465, -498, -578, 552, 43, -284, 38, 153,
	-575, -128, -286, -470, -471, 5, 38, -282, 153, 341,
	326, -236, 263, -615, -506, -546, -339, -372, -361, 327,
	91, 584, -416, -363, -347, -422, 2, 584, -191, -192,
	-511, -511, -511, -193, -205, -205, -414, -312, 583, -268,
	-253, 583, -205, -270, 2, -512, 588, 583, 566, 566,
	566, -199, -466, -124, -128, 345, -282, 576, -379, -324,
	-323, 360, 335, -324, 428, 428, 342, 176, 259, -225,
	-267, -422, -422, 149, 33, 33, -422, -422, -433, 584,
	-422, -422, -354, 582, 5, -422, 584, 584, 8, -422,
	584, 585, -560, -252, -422, 584, 60, 584, 584, 588,
	588, 584, 584, 584, 584, 584, 584, 584, -428, 186,
	138, 335, 583, 584, 584, -101, -430, 207, 60, -453,
	-430, -430, -381, -343, -453, -420, -267, 581, -502, -498,
	-456, 583, 585, -203, 566, -511, -511, 552, 582, 2,
	581, -502, 584, 119, -269, -269, 490, 428, -239, 382,
	-413, 153, -532, 93, -534, 76, 168, 102, 326, 331,
	524, 382, 72, 126, 398, -607, 38, 563, 584, -341,
	-450, -545, 583, -252, -341, -343, 326, 479, 126, 326,
	126, 119, 2, 518, 79, -269, -276, -343, -343, -282,
	-291, -508, 160, 584, 588, 566, 2, 576, 576, -291,
	-508, -286, -291, -508, -284, 358, 166, 160, 584, -267,
	5, 5, 153, -264, 76, -269, 5, -269, -285, 119,
	438, 506, 506, -196, 588, 583, 566, 566, -196, -512,
	-124, 2, -334, -325, 230, -269, -529, -526, -527, 382,
	-533, -535, 168, 382, -128, 2, -207, -206, -252, 5,
	583, -310, 345, 582, -580, 345, -579, 117, 136, -508,
	-376, -128, -286, -334, 584, 588, 147, -398, 534, -267,
	-282, 153, -237, 262, -615, -506, -234, -401, -399, 139,
	583, 341, -128, -339, 566, 584, 584, 119, 119, 222,
	152, -341, 583, 583, -343, 119, 584, -200, -201, -511,
	-124, -511, -199, -466, -62, -63, 228, 93, 365, -279,
	490, 228, 583, 583, -225, -422, -422, -422, 584, -339,
	-502, 576, -554, 360, 584, -449, -422, -422, -423, 186,
	583, -433, 584, -555, 551, -422, -367, -368, -422, 427,
	108, 205, -555, -555, 584, -498, 2, -511, 2, 581,
	2, 220, 38, 401, -413, -276, -280, -273, -252, 168,
	213, 331, 547, -397, 254, 583, -423, -282, 583, 2,
	30, -608, 130, 233, 584, 588, -451, -263, -252, -422,
	-451, 584, 584, 331, 331, -422, -472, 583, -231, -231,
	584, 584, -422, 506, -501, 100, -499, 2, -582, -266,
	-422, 506, 5, -231, -280, -231, -231, -264, 518, -291,
	-508, -286, -197, -198, -511, -124, -196, 38, -315, 232,
	2, -531, 254, -273, 254, -606, 552, 584, 588, 566,
	566, -308, -208, -83, -84, 507, -465, 588, 583, 566,
	-334, 38, 5, 583, 583, -252, 341, 583, -267, -247,
	92, -615, -506, -235, -372, 327, -343, 93, -401, -429,
	-193, 583, 583, -313, 81, 94, 127, 212, 189, 229,
	471, 477, 28, -313, 584, -341, -341, 584, 583, -193,
	584, 588, 28, 583, 28, 583, -282, -303, -354, -354,
	584, -339, 60, 588, 584, 584, -423, -433, 584, -556,
	-557, -272, 588, 583, 583, 452, 582, 2, -239, 382,
	-252, -534, -273, 326, 534, -422, -254, 583, -422, 38,
	233, 131, 218, -412, -609, 101, 480, 221, -450, -225,
	584, -411, 534, 398, -264, -341, 583, 583, 583, 566,
	186, 583, -476, -231, -285, 584, -587, 396, -128, -319,
	-320, 220, 583, -314, 341, 119, 313, -206, -499, -499,
	584, 38, -84, 9, -579, -580, -422, 38, -128, -470,
	-341, -282, -341, 341, -241, -240, 271, -506, -236, 584,
	-276, -372, -512, -512, -411, 584, 584, -512, -63, -343,
	-343, 584, 584, -561, 390, 429, 206, -354, -340, 584,
	588, 38, -368, 2, 2, 2, 401, 153, 208, 584,
	-536, 286, -252, 584, 131, 218, -315, 583, -226, -451,
	-315, 208, -282, -583, 534, 584, -327, -326, -323, -329,
	-328, -323, -354, -499, 100, 358, -354, -264, -590, 187,
	-589, 5, 10, -208, 358, -342, -452, -269, 82, 119,
	-325, -128, 584, -128, 584, 584, -398, 584, -282, -238,
	-513, 401, 403, -615, -237, -416, 584, 584, -412, -411,
	-321, -317, 584, 584, 584, 584, -562, -563, 50, 521,
	109, -422, -562, -562, -557, -559, 168, 552, -537, -540,
	-539, 341, 458, 187, 359, 584, 479, 546, -321, -343,
	552, -334, -422, -411, 584, 588, 539, 584, 588, 539,
	584, 186, 584, -231, -195, 552, 46, -314, -282, 584,
	588, 381, 132, 142, -315, -606, -411, 583, -412, 583,
	-244, -243, -615, -492, -247, 139, -193, -193, -315, -412,
	-209, 552, -193, -564, 151, -563, 378, 181, 428, 378,
	181, -564, -564, -273, 55, -539, 341, -540, 341, 528,
	132, -608, 584, 55, -536, -315, -326, 220, -328, 186,
	358, 436, -589, 30, -246, -245, 583, -452, 429, 429,
	2, -319, -314, -412, -341, -315, -341, -242, -343, -241,
	327, 528, -321, -315, -416, 109, 204, 501, 313, 33,
	566, -538, 313, 417, 64, 451, -538, -416, 566, -537,
	583, 583, 345, -343, 2, -208, -315, 584, -321, 584,
	-238, 451, -209, -321, 428, 349, -563, -422, 23, 331,
	126, -422, -608, -354, -354, -192, 583, 584, -314, -321,
	-411, -209, -412, -244, -362, -416, -209, 584, 584, -192,
	-232, 64, 417, -246, -209, -412, -416, -315, -416, -416,
	-316, -317, 506, 584, -416, -315, -321, 583, -321, -209,
	-354, -209, -416, 584, -416, -316,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 533, 534, 536, 537, 538, 540,
	541, 543, 545, 547, 548, 549, 551, 552, 554, 555,
	556, 557, 558, 560, 562, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	627, 629, 0, 1322, 1324, 1326, 1328, 0, 772, 0,
	36, 37, 39, 0, -2, 320, 322, 324, 0, 351,
	353, 354, 356, 358, 359, 360, 362, -2, 0, 468,
	469, 471, 473, -2, 0, 963, 965, 0, 616, 618,
	0, 968, 970, 0, 0, 638, 639, 0, 1429, -2,
	632, 634, 636, 701, 703, 705, 707, 709, 711, 713,
	715, 717, 718, 720, 722, 724, 726, 728, 729, 731,
	733, 735, 736, 738, 739, 741, 743, 745, 747, 749,
	751, 753, 755, 757, 759, 761, 763, 765, -2, 768,
	769, -2, -2, 0, -2, -2, -2, 1340, 41, 43,
	45, 47, 49, 51, 53, 55, 57, 412, 414, 416,
	418, 420, 423, 425, 427, 1487, 475, 477, 479, 481,
	483, 485, 487, 0, -2, 1501, 0, 0, 59, 60,
	61, 62, 63, 64, 65, 66, 67, 68, 69, 101,
	102, 103, 104, 105, 106, 107, 108, 73, 74, 75,
	77, 78, 79, 80, 84, 85, 86, 87, 88, 89,
	90, 91, 99, 71, 0, 0, 1460, 1462, 1464, 1466,
	-2, 0, 0, 5, 9, 11, 13, 15, 17, 19,
	21, 23, 25, 27, 29, 535, 539, 542, 544, 546,
	550, 553, 559, 561, 563, 520, 521, 524, 2165, 2182,
	2183, 2184, 2187, 2188, 2189, 2190, 2191, 2192, 2633, 2715,
	2716, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222,
	2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232,
	2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242,
	2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252,
	2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262,
	2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272,
	2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282,
	2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292,
	2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302,
	2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312,
	2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322,
	2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332,
	2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342,
	2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352,
	2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362,
	2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372,
	2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382,
	2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392,
	2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402,
	2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412,
	2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422,
	2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432,
	2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552,
	2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572,
	2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582,
	2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592,
	2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602,
	2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612,
	522, 523, 1140, 0, 587, 585, 2150, 588, 2435, 590,
	592, 462, 463, 464, 465, 466, 467, 0, 609, 600,
	1499, 610, 612, 613, 614, 615, 582, 580, 0, 609,
	2218, 607, 1320, 1321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 474, 0, 0, 0, 0, -2, 0, 0,
	0, 0, 0, 0, 0, 391, 1189, 1190, 1191, 1305,
	1306, 2479, 1347, 0, 222, 628, -2, -2, -2, 2598,
	-2, 660, -2, 667, 2602, 2482, 672, 0, 674, -2,
	677, 1323, 1325, 1327, 770, 771, 2168, 0, 0, 0,
	0, 0, 38, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	230, 232, -2, -2, -2, -2, 0, 0, 2526, 2270,
	2118, 2184, 2121, 2116, 321, 323, 325, 326, 0, 0,
	0, 0, 0, 0, 352, 355, 357, 361, -2, 363,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 1024, 1016, 1017, 1247, 0, 0, 0, -2,
	470, 472, 525, 526, 0, 1488, 1488, -2, 0, 0,
	0, 0, 291, 278, 964, 966, 967, 0, 0, 0,
	0, 617, 619, 0, 0, 260, 969, 971, 972, 0,
	0, 0, 0, 0, 293, 0, 0, 633, 635, 637,
	702, 704, 706, 708, 710, 712, 714, 716, 719, 721,
	723, 725, 727, 730, 732, 734, 737, 740, 742, 744,
	746, 748, 750, 752, 754, 756, 758, 760, 762, 764,
	766, 767, 778, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 866, 0, 0, 0,
	-2, -2, -2, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, -2, 944, 0, 0, 781, 783,
	784, 785, 0, 844, 864, 865, 874, 0, 1180, 1489,
	1349, 1330, 1344, 1349, 1332, 1333, 1334, 1335, 1336, 1341,
	1343, 1337, 1338, 1339, 42, 44, 46, 48, 50, 52,
	54, 56, 58, 413, 415, 417, 419, 421, 424, 426,
	428, -2, 1458, 1459, 476, 478, 480, 482, 484, 486,
	488, 620, 0, 622, 0, 782, -2, 0, 1493, 1493,
	1493, 0, 0, 1459, 1457, 0, 625, 626, 681, 682,
	1761, 0, 0, 0, 0, 0, 0, 0, 2015, 1847,
	0, 683, -2, 1878, 1880, 2573, 2598, 2014, 1882, 1883,
	1884, 1885, 1886, 0, 1888, 1889, 1890, 1891, 1892, 1893,
	0, 1895, 0, 1900, 1901, 1902, 0, 2580, 2095, 2178,
	-2, 0, 0, 2586, 2174, 0, 1981, 1918, -2, -2,
	2201, 2180, 1693, 1694, 1695, 1696, 1697, -2, -2, 2616,
	1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931,
	1932, 0, 2561, 2581, 2582, 2587, 2589, 2583, 2570, 1943,
	2283, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1720, 1729, -2, -2, -2, -2,
	-2, -2, -2, 2574, 2575, 2592, 2595, 2601, 2606, 2607,
	2579, 2588, 2615, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 1721,
	-2, -2, -2, -2, 1476, 2448, 1479, 1140, 1477, 1461,
	1463, 0, 1465, 0, 0, 0, 1470, 1496, 1494, 0,
	1545, 1474, 1475, 1563, 1563, 1587, 0, 1568, 0, 1587,
	1488, 1614, 0, 1574, 2471, 1919, 1920, 0, 2184, 2179,
	-2, -2, 2613, 0, 0, 0, 0, 0, 0, 0,
	0, 583, 0, 589, 591, 0, 0, 0, 608, 1498,
	0, 0, 0, 0, 0, 0, 0, 394, 395, 396,
	397, 398, 2581, 0, 0, 0, 403, 0, 405, 406,
	407, 408, 409, 410, 411, 191, 2581, 493, 518, 0,
	191, 2581, 496, 191, 2581, 499, 0, 502, 1245, 191,
	2581, 505, 2146, 191, 2581, 508, 510, 2154, 191, 2581,
	514, 2161, 2159, 515, 2581, 517, 296, 294, 295, 2197,
	2198, 2205, 2206, 2207, 2208, 2614, 2616, 1316, 1317, 1318,
	1319, 0, 1346, 1246, 630, 631, 0, 655, 0, 659,
	2569, -2, 0, 2491, -2, 663, 1350, 1354, 1355, 1356,
	1357, 1358, 0, 0, 0, 0, 1363, 0, 0, 669,
	0, 0, 656, 657, 675, 678, 0, 773, 774, 775,
	776, 777, 70, 0, 2581, 1614, 72, 0, 2140, 2209,
	2210, 2211, 2212, 2213, 2634, 2635, 2636, 2637, 2638, 2639,
	2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649,
	2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659,
	2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669,
	2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679,
	2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689,
	2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699,
	2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709,
	2710, 2711, 2712, 2713, 2714, 76, 0, 2581, 81, 0,
	2581, 0, -2, 92, 0, 100, 0, 2143, 109, 0,
	2581, 0, 2115, -2, 0, 203, 279, 280, 281, 282,
	0, 991, -2, 2581, 1188, 0, 0, 0, 0, 954,
	2112, 2117, 955, 2136, 956, 2122, 0, 327, 328, 329,
	330, 331, 0, 332, 2581, 334, 335, 0, 337, 338,
	2581, 340, 341, 0, 343, 0, 243, 244, 2581, 365,
	367, 0, 369, 370, 0, 372, 0, 0, 0, 376,
	-2, 392, 0, 389, 379, 380, 382, 383, 384, 385,
	386, 0, 432, 430, 2151, 0, 0, -2, 2581, 0,
	988, 0, 0, 1225, -2, 2581, 1185, 0, 1232, 2581,
	1228, 0, -2, 0, 1486, 2581, 1367, 1020, 1021, 1022,
	1023, 1626, 459, 0, 1394, 0, 1396, 0, 1415, 1620,
	1563, 0, 0, 1625, 0, -2, 576, 2167, -2, 528,
	0, 529, 0, -2, 0, 308, 0, 0, 973, 974,
	975, 976, 977, 980, 981, 982, 983, 1600, 261, 263,
	0, 0, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314,
	1315, 0, 0, 640, 0, 0, 779, 780, 0, 0,
	790, 791, 792, 0, 308, 2483, 2444, 2304, 799, 0,
	802, 805, -2, 0, 0, 0, 0, 809, 0, 814,
	815, 816, 0, 0, 820, 822, 962, 824, 0, 0,
	826, 0, 830, 0, 833, 0, 835, 0, 837, -2,
	-2, -2, 845, 846, -2, 850, -2, 0, 853, 855,
	0, 857, -2, 0, 866, 862, 863, 0, 0, 0,
	0, 882, 883, 0, 892, 0, 895, 896, 897, 0,
	899, 900, 0, 902, 903, 904, 905, 0, 0, 908,
	909, -2, -2, 913, 915, 0, -2, 0, 931, 0,
	935, 0, 0, 943, 0, 0, 786, 787, 191, 1618,
	1329, -2, 1331, 0, -2, 0, 621, 0, 624, 1518,
	1444, 1441, 0, 1515, 1516, 1445, 0, 0, 0, 1452,
	0, 1491, 1492, 0, 0, 0, 1431, 1432, 0, 0,
	0, 0, 2020, 2021, 2022, 2023, 2024, 2025, 2028, 2029,
	2026, 2027, 2030, 2031, 0, 0, 0, 0, 0, 2032,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2033, 2034, 2035, 0, 0, 2037, 0, 2039, 0,
	0, 0, 0, 0, 0, 1826, 1828, 2103, 0, 0,
	2036, 1766, 1767, 1768, 1769, 1770, 1805, 1806, 0, 0,
	1879, 2100, 2099, 1881, 0, 2051, 0, 1894, -2, 0,
	2015, 2046, 0, 0, 1903, 1904, 1905, 0, 0, 2051,
	0, 0, 2094, 1915, 1916, 1758, 0, 0, 1983, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1707, 1706, 0, 1708,
	0, 1709, 1710, 1717, 1730, 0, 0, 0, 0, 1734,
	0, 0, 0, 0, 0, 0, 0, 2075, -2, 0,
	0, 0, 0, 1722, 0, 1478, 0, 0, 1549, 2104,
	2108, 2109, 1549, 1549, 0, 0, 2052, 1611, 1611, 0,
	0, 1606, 1606, 1606, 1604, 1587, 0, 1587, 1597, 0,
	1587, 1587, 0, -2, 1568, 0, 0, 1597, 0, 1581,
	564, 566, 568, 570, 571, 572, 574, 1615, 1616, 0,
	0, 0, 0, 2185, 0, 0, 0, 0, 0, 2170,
	0, 348, 0, 0, 0, 2536, 2482, -2, 594, 611,
	1488, 0, 2054, 1641, 1645, 0, 1647, 1648, 1649, 1650,
	1651, 0, 0, 1642, -2, 1718, 1720, 1741, 2202, 2203,
	2204, 1701, 1702, 1703, 1704, 1705, 1713, 1700, 1700, 1700,
	1711, 1740, 1732, 1740, 1736, 1686, 1687, 1688, 1723, 1724,
	1725, 1726, 0, 2536, 2482, -2, 602, 0, 0, 1426,
	207, 209, 210, 211, 212, 213, 393, 0, 400, 401,
	402, 0, 489, 0, 189, 190, 0, 191, 2581, 494,
	0, 497, 0, 191, 2581, 2110, 503, 0, 506, 0,
	0, 512, 0, 0, 0, 0, 0, 191, 1428, 0,
	0, 0, 0, -2, 665, 670, 671, 0, 1352, 0,
	1359, 692, 693, 694, 1361, 1362, 0, 1364, 668, 695,
	696, 697, 698, 699, 700, 0, 2124, 2125, 2126, 2127,
	2130, 2131, 0, 0, 666, 685, 673, 0, 679, 110,
	1302, 0, 0, 153, 0, 1302, 1302, 0, 0, 0,
	0, 178, 0, 1059, 0, 0, 0, 0, 125, 138,
	149, 122, 123, 0, 0, 0, 0, 0, 0, 82,
	1162, 0, 1165, 0, 0, 0, 0, 0, 0, 0,
	1178, 0, 0, 0, 0, 0, 0, 0, 96, 97,
	0, 137, 0, 0, 1391, 0, 132, 112, 0, 0,
	125, 139, 151, 0, 182, 184, 1056, 0, 0, 0,
	0, 0, 0, 0, 0, 202, 214, 0, 0, 0,
	1186, 0, 1485, 0, 0, 2581, 0, 1600, 2351, -2,
	-2, 261, 1600, 953, 0, 0, 2185, 2120, 0, 0,
	0, 0, 0, 0, 0, 0, 368, 371, 373, 374,
	375, 0, 1224, 0, 381, 422, 1111, 2581, 0, 0,
	449, 444, 0, 446, 0, 0, 0, 1161, 2581, 1159,
	2155, 0, 1183, 0, 1140, 2581, 2153, 0, 0, 0,
	1233, 2194, 1242, 1246, 1381, 0, 461, 0, 1397, 1399,
	0, 0, 1621, 0, 1623, 1563, 1488, 0, 0, 0,
	0, 284, 0, 0, 0, 0, 0, 0, 267, 0,
	1599, 0, 0, 1600, 261, 2459, 308, 308, 1600, 642,
	1600, 644, 0, 0, 793, 794, 0, 308, 308, 308,
	800, 801, 803, 804, -2, -2, -2, -2, 806, 807,
	889, 0, 0, 0, 888, 819, 823, 0, 947, 2467,
	2482, 2536, 960, 889, 2270, 889, 2270, 889, 2270, 834,
	836, 839, 877, 885, 849, 854, 0, 0, 859, 867,
	-2, 0, 869, 0, 871, 0, 873, 889, 890, 893,
	898, 901, 906, 907, 0, 922, 927, 928, 924, 0,
	0, 0, 0, 0, 0, 938, 939, 0, 0, 946,
	1179, 0, 1342, 1518, 1444, 623, 1435, 1517, 1436, 1443,
	1446, 0, 0, 1448, 0, 1450, 0, 1513, 1514, 1521,
	1522, 0, 1532, 1533, 1525, 0, -2, 0, 0, 1528,
	1529, 1454, 0, 1471, 1472, 1473, 1502, 1505, 1261, 0,
	2715, 1762, 1636, 1763, 1764, 2139, 0, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, -2, -2, -2,
	-2, -2, -2, -2, -2, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 1796, 1797, 1798, 1799, -2, -2, -2, 1803,
	1804, -2, 2038, 2040, 0, 2103, 0, -2, 0, -2,
	-2, -2, -2, 1823, 0, 1825, 1830, 1832, 1834, 0,
	0, 0, 0, 2102, 1844, 2086, 2087, 0, 0, 2017,
	2018, 2019, 1829, 0, 1848, 2101, 2098, 0, 0, 2050,
	1501, 1907, 0, 0, 0, 0, 1914, 1899, 2048, 0,
	2047, 0, 0, 0, 2058, 0, 2093, 2089, 0, 2137,
	1757, 1744, 1745, 1746, 1747, 1748, 1749, 1759, 0, 2134,
	2171, 2177, 1991, 0, 0, 0, 1944, 1945, 1946, 1947,
	1948, 0, 1950, 1951, 0, 1953, 1954, 0, 1956, 1957,
	0, 1959, 1960, 1961, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662,
	1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672,
	1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682,
	1683, 1684, 1685, 0, 0, 1963, 0, 2061, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 1965, 0, 1967,
	2052, 2072, 0, 0, 1849, 0, 0, 0, 2015, 0,
	1970, 2052, 2080, 0, 0, 0, 0, 0, 2052, 0,
	2085, 0, 1977, 0, 1979, 1480, 0, 0, 1631, 0,
	0, 0, 2107, 1631, 1631, 0, 1544, 0, 0, 1607,
	1608, 1609, 1610, 0, 0, 1611, 0, 1601, 1605, 1602,
	1603, 1597, 1560, 0, 0, 2141, 1597, 1566, 1596, 0,
	1140, 1586, 1597, 1597, 0, -2, 1570, 1587, 0, 0,
	565, 567, 569, 573, 575, 0, 0, 1501, -2, 0,
	-2, 310, 1139, 0, 0, 0, 0, 584, 586, 0,
	0, 509, 0, 599, 0, 578, 0, 581, 0, 1632,
	1635, 0, 0, 1646, 1652, 1653, 0, -2, 0, 0,
	1742, 0, 0, 0, 0, 606, 0, 0, 0, 0,
	404, 519, 191, 491, 0, 191, 191, 500, 0, 0,
	191, 511, 191, 2162, 191, 2160, 297, 516, 1427, 225,
	0, 658, 0, 1351, 1360, 0, 689, 0, 691, 0,
	2128, 2132, 2129, 2133, 0, 680, 0, 0, 0, 0,
	1301, 0, 1268, 0, 0, 157, 2581, 0, 193, 0,
	0, 1104, 2147, 0, 1096, 0, 0, 2290, 0, 0,
	0, 0, 0, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 119, 0, 0, 0, 124, 0, 0,
	0, 0, 0, 0, 0, 0, 1163, 1164, 1166, 1173,
	1175, 0, 1169, 2135, 0, 0, 1170, 0, 1172, 1174,
	1176, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	98, 0, 0, 0, 1390, 1391, 0, 0, 0, 121,
	0, 0, 0, 0, 0, 0, 2114, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1220, 1218, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205,
	1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215,
	1216, 1217, 0, 0, -2, 0, 0, 0, 0, 0,
	235, 0, 299, 2113, 2123, 0, 978, 979, 333, 336,
	339, 342, 231, 0, 377, 0, 0, 1026, 1001, 0,
	0, 431, 308, 0, 0, 445, 449, 2164, 986, 1157,
	1160, 0, 1140, 2581, 1197, 0, 0, 0, 0, 0,
	0, 1231, 0, 0, 2581, 2142, 2193, 2194, 1383, 1391,
	0, 1631, 0, 1413, 1400, 0, 0, 0, 1413, 1417,
	1418, 1420, 1421, 0, 0, 1622, 1628, 527, 577, 1488,
	1488, 308, 306, 2412, 304, 301, 303, 0, 0, 0,
	1027, 1029, 1030, 1031, 193, 0, 2194, 1096, 2340, 2194,
	0, 1403, 1405, 0, 255, 0, 264, 1600, 262, 267,
	0, 0, 0, 443, 641, 646, 788, 0, 308, 796,
	797, 798, 841, 879, 887, 926, 808, 810, 811, 812,
	0, 0, 961, 957, 958, 959, 825, 889, 828, 889,
	831, 889, 852, 856, 861, 868, 0, 0, 0, 881,
	0, 0, 0, 0, 0, 0, 0, 932, 933, 934,
	936, 941, 940, 945, 1619, 1439, 1440, 1442, 0, 1451,
	0, 0, 1527, -2, -2, 1526, 1530, 1531, -2, -2,
	-2, -2, 1447, 0, 1456, 1453, 0, 1512, 1259, 1260,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1845,
	0, -2, 1824, 1827, 1831, 1833, 1835, 0, 0, 0,
	0, 0, 0, 2041, 0, 2043, 1846, 2096, 2099, 2013,
	0, 0, 1500, 1501, 1501, 0, 1913, 0, 2049, 0,
	2056, 2057, 0, 1906, 0, 2090, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1917, 0, 0, 0, 0,
	1949, 1952, 1955, 1958, 0, 0, 0, 0, 1938, 0,
	0, 0, 1942, 1712, 1698, 0, 1740, 1738, 1739, 1733,
	1740, 1737, 1690, 0, 1689, 0, 1962, 0, 1964, 1966,
	0, 0, 1968, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 1853, 1854, 1969,
	2078, 2079, 0, 0, 0, 0, 0, 0, 1975, 0,
	2084, 1976, 1978, 1488, 0, 1481, 0, 1546, 1535, 1630,
	0, 2105, 1600, 1548, 1550, 2106, 2144, 1535, 1535, 0,
	2053, 0, 0, 1591, 0, 0, 0, 1593, 1564, 0,
	0, 1558, 0, 1554, 1555, 1556, 1557, 1565, 1140, 1595,
	1567, 1571, 2171, 0, 1597, 0, 1582, 0, 1584, 1617,
	0, 1576, 1579, 0, 0, 2186, 1631, 0, 344, 349,
	350, 345, 346, 347, 593, 0, 0, 0, 0, 2055,
	0, 1637, 0, 1643, 0, 0, 0, 0, 601, 0,
	0, 0, 208, 1425, 399, 490, 191, 495, 498, 2111,
	191, 504, 507, 513, 221, 0, 654, -2, 687, 688,
	690, 0, 686, 154, 1302, 0, 0, 1264, 1266, 2158,
	1270, 1276, 1279, 0, 159, 2581, 169, 0, 1075, 0,
	2145, 0, 0, 0, 0, 0, 0, 1304, 0, 0,
	2581, 191, 2581, 191, 172, 174, 177, 0, 181, 179,
	0, 1063, 0, 0, 1066, 111, 1302, 0, 0, 114,
	118, 126, 127, 130, 0, 0, 0, 136, 0, 0,
	0, 1281, 1285, 1293, 0, 0, 0, 1167, 1168, 1171,
	1177, 83, 0, 0, 0, 1289, 1291, 1297, 93, 94,
	2156, 95, 0, 1263, 0, 0, 0, 0, 183, 116,
	120, 128, 129, 131, 0, 1299, 113, 0, 206, 0,
	0, 196, 191, 2581, 0, 198, 0, 199, 200, 215,
	0, 0, 0, 989, 990, 1219, 1181, 1182, 0, 1187,
	0, 0, 0, 0, 1600, 227, 0, 1600, 235, 0,
	2119, 0, 364, 0, 0, 0, 0, 1025, 1122, 0,
	996, 0, 0, 0, 437, 433, 0, 442, 448, 447,
	453, -2, 0, 0, 0, 0, -2, 0, 0, 1235,
	1229, 1230, 0, 0, 0, 0, 2581, 1385, 1391, 0,
	1486, 1501, 460, 1392, 1413, 0, 0, 0, 1402, 1398,
	1395, 1631, 0, 0, 0, 0, 0, 1624, 1627, 530,
	531, 283, 0, 0, 0, 0, 0, 308, 0, 0,
	0, 1032, 1036, 0, 2194, 2194, 0, 2149, 0, 0,
	0, 0, 265, 0, 268, 0, 0, 0, 273, 274,
	275, 276, 277, 267, 257, 1600, 0, 0, 643, 0,
	0, 795, 0, 818, 827, 829, 832, 870, 872, 889,
	916, 917, 1053, 0, 1053, 0, 0, 937, 1449, 0,
	1524, 1455, 1506, 1507, 0, 1261, 0, 1765, 1808, 0,
	0, -2, 0, 0, 1812, 0, 0, 0, -2, 0,
	0, 0, 2042, 2044, 0, 2098, 1908, 0, 0, 0,
	1912, 1896, 1897, 0, 2016, 2059, 2088, 2092, 0, 1750,
	1751, 1752, 1753, 1754, 1755, 1756, 0, 2138, 2172, 2176,
	1989, 1990, 1994, 2152, 0, 0, 0, 1921, 0, 0,
	0, 0, 0, 0, 0, 0, 1731, 1735, 0, 0,
	2060, 2071, 2073, 1850, 1851, 1855, 1856, 1857, 1858, 1859,
	1860, 1861, 1862, 1863, 1864, -2, -2, -2, 1868, 1869,
	1870, -2, -2, -2, 0, 0, 0, 2074, 2076, 2077,
	2081, 2082, 0, 1972, 1973, 1974, 2083, 0, 1488, 1482,
	1543, 0, 1629, 1547, 0, 1543, 1543, 1495, 1589, 0,
	0, 1613, 0, 1561, 0, 1562, 0, 1594, 0, 1569,
	1572, 1573, 1583, 0, 1575, 0, 1578, 0, 1908, -2,
	309, 311, 313, 0, 316, 317, 0, 0, 596, 597,
	595, 579, 0, 0, 1639, 0, 0, 1715, 1719, 1743,
	604, 605, 603, 492, 501, 223, 0, 1598, 0, 0,
	0, 0, 0, 0, 192, 1073, 1103, 0, 0, 0,
	1095, 0, 0, 1109, 161, 0, 0, 0, 0, 170,
	0, 0, 167, 0, 176, 180, 1060, 0, 0, 0,
	0, 1269, 0, 0, 0, 133, 134, 135, 0, 140,
	0, 141, 0, 0, 0, 0, 0, 0, 0, 0,
	1375, 1376, 0, 1370, 0, 0, 0, 194, 0, 0,
	0, 1258, 217, 0, 0, 0, 0, 0, 1222, 1223,
	1282, 1286, 1294, 0, 0, 0, 235, 233, 0, 236,
	0, 239, 240, 0, 235, 229, 0, 0, 0, 1140,
	378, 999, 1110, 0, 1112, 0, 997, 0, 0, 1111,
	429, 0, 436, 0, 450, 0, 0, 1161, 0, 0,
	1184, 1195, 1140, 0, 1234, 1236, 0, 1244, 0, 0,
	0, 1387, 1391, 0, 1380, 1381, 1520, 1393, 1411, -2,
	0, 0, 1501, 1419, 1416, 1422, 1423, 0, 305, 0,
	300, 302, 0, 286, 0, 0, 1028, 1033, 0, 0,
	0, 0, 0, 1404, 1406, 0, 0, 0, 0, 0,
	0, 256, 267, 1600, 292, 0, 789, 813, 880, 918,
	1052, 0, 0, 920, 0, 0, 1523, 1510, 1511, 1508,
	1261, 1810, 1814, 0, 0, 0, 1816, -2, 0, 1838,
	-2, -2, 2045, 2097, 1887, 1501, 1909, 1911, 1898, 2091,
	1760, 0, 1996, 1993, 0, 1980, 0, 1933, 1934, 0,
	0, 1937, 1939, 1940, 1941, 1699, 1692, 1691, 2070, 0,
	0, 0, 0, 1971, 1483, 0, 1985, 0, 0, 1551,
	1985, 1985, 1590, 0, 1592, 1559, 1552, 0, 2172, 1585,
	1577, 0, 0, 314, 0, 318, 319, 0, 1633, 1638,
	0, 1644, 1714, 224, 155, 156, 1273, 1277, 1274, 0,
	158, 0, 1074, 0, 1077, 0, 0, 0, 0, 1084,
	1096, 0, 0, 0, 0, 0, 1097, 0, 1126, 0,
	1249, 1256, 0, -2, 0, 0, 0, 163, 186, 0,
	0, 1303, 165, 0, 0, 191, 191, 0, 0, 1265,
	1267, 1280, 0, 0, 0, 0, 143, 0, 0, 1283,
	1287, 1295, 1290, 1292, 1298, 0, 1377, 0, 0, 1300,
	204, 205, 0, 191, 0, 191, 197, 191, 1258, 0,
	0, 0, 0, 226, 0, 0, 0, 0, 228, 298,
	235, 366, 0, 1047, 0, 1122, 1114, 1115, 1116, 0,
	1121, 1123, 0, 0, 1013, 998, 0, 1009, 0, 0,
	1026, 1001, 0, 434, 451, 0, 454, 0, 457, 987,
	1158, 1192, 1140, 0, 1226, 0, 0, 0, 0, 0,
	0, 0, 1389, 1391, 0, 1382, 1383, 1413, 1519, 0,
	0, 0, 1401, 1520, 0, 307, 308, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 308, 269, 0, 270,
	271, 272, 258, 259, 645, 647, 0, 0, 653, 1051,
	0, 0, 0, 0, 1509, 1818, -2, -2, 1839, 0,
	2173, 2175, 1501, 0, 1982, 1503, 0, 0, -2, 0,
	0, 0, 1484, 1467, 0, 1542, 1534, 1536, 1538, 2470,
	2265, 2580, 1468, 1469, 1612, 0, 1580, 315, 598, 0,
	1640, 0, 0, 1275, 160, 0, 1078, 1079, 2148, 1081,
	0, 1083, 1085, 1086, 1087, 0, 1090, 2196, 0, 1094,
	0, 1105, 1127, 0, 1136, 0, 1251, 1261, 1255, 0,
	1253, 1138, 0, 162, 164, 185, 1258, 0, 166, 175,
	0, 0, 115, 0, 0, 2259, 146, 144, 142, 1262,
	117, 0, 206, 216, 1257, 218, 201, 191, 0, 1284,
	1288, 1296, 237, 0, 238, 241, 0, 0, 1062, 0,
	1000, 1113, 0, 1124, 1125, 1003, 0, 1002, 0, 0,
	0, 0, 0, 435, 438, 0, 441, 0, 0, 0,
	0, 0, 1237, 1235, 0, 1243, 0, 0, 0, 1369,
	0, 0, 1384, 1385, 458, 1407, 0, 0, 1413, 1424,
	285, 0, 0, 1034, 1037, 1038, 1039, 1040, 1041, 1042,
	1043, 1044, 1045, 1035, 1138, 0, 0, 1102, 0, 290,
	266, 0, 649, 0, 651, 0, 919, 921, 0, 0,
	1910, 2000, 0, 0, 1935, 1936, -2, 0, 1876, 1984,
	1986, 0, 0, 0, 0, 0, 1553, 1634, 1271, 0,
	1278, 1076, 1080, 0, 0, 0, 1144, 0, 0, 1098,
	0, 1130, 1131, 1047, 0, 1132, 1133, 1134, 1250, 1512,
	1256, 1047, 0, 0, 188, 0, 0, 0, 0, 0,
	0, 0, 195, 219, 1258, 234, 251, 0, 1193, 1001,
	1061, 0, 0, 1011, 0, 1014, 0, 1010, 1007, 1008,
	999, 0, 439, 440, 455, 0, 456, 0, 1196, 0,
	0, 1244, 0, 0, 1372, 1368, 1391, 1386, 1387, 1631,
	1410, 1414, 0, 0, 1136, 1138, 1058, 0, 648, 0,
	0, 929, 930, 0, 0, 0, 0, 1995, 1504, 1877,
	0, 0, 1537, 1539, 1540, 1541, 1272, 0, 0, 1089,
	1149, 0, 0, 0, 1128, 1129, 1058, 0, 1254, 1252,
	1107, 0, 1140, 168, 0, 1138, 0, 1067, 0, 0,
	1070, 0, 0, 147, 2259, 145, 0, 191, 254, 0,
	248, 246, 247, 1003, 0, 0, 1118, 1120, 0, 1015,
	1047, 1013, 452, 1194, 1227, 1138, 0, 1136, 0, 1379,
	1391, 1373, 1374, 0, 1389, 0, 308, 308, 1047, 1136,
	1001, 1057, 308, 650, 652, 1992, 2012, 2001, -2, 2539,
	2266, 0, 2012, 2012, 1987, 1988, 0, 0, 1091, 1145,
	1146, 0, 1141, 1142, 1143, 2195, 1092, 1093, 1126, 0,
	0, 1144, 187, 1047, 1064, 0, 0, 1065, 0, 0,
	150, 0, 152, 220, 242, 0, 0, 995, 0, 1117,
	0, 0, 0, 0, 1062, 1003, 1136, 0, 1047, 0,
	1365, 1378, 0, 1388, 1369, 0, 287, 288, 1058, 1047,
	1631, 0, 289, 1997, 0, 0, 2003, 2004, 2005, 2006,
	2007, 1998, 1999, 1082, 0, 1147, 0, 1148, 0, 0,
	0, 1631, 1135, 0, 1149, 173, 1068, 0, 1071, 0,
	148, 0, 249, 250, 992, 994, 0, 1119, 1004, 0,
	1006, 1001, 1012, 1047, 0, 1058, 0, 1371, 2157, 1372,
	1408, 0, 1001, 1058, 1101, 0, 2009, 2010, 0, 0,
	0, 1150, 0, 1153, 1154, 0, 1151, 1106, 0, 1126,
	0, 0, 0, 0, 1005, 1003, 1058, 1138, 1001, 1136,
	1379, 0, 1631, 1001, 2008, 2011, 2002, 1088, 1152, 1155,
	1156, 1137, 1108, 0, 0, 252, 0, 1050, 995, 1001,
	1136, 1631, 1047, 1366, 1631, 1099, 1631, 1055, 0, 0,
	1046, 1048, 1049, 993, 1631, 1047, 1240, 1058, 1409, 1100,
	1069, 1054, 0, 253, 1238, 1058, 1001, 0, 1001, 1631,
	0, 1631, 1241, 1055, 1239, 1072,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 572, 3, 578, 573, 3,
	583, 584, 576, 574, 588, 575, 585, 577, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 591, 3,
	564, 566, 565, 569, 587, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 581, 3, 582, 579, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 589, 571, 590, 567,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 568, 57907, 570, 57908, 580, 57909, 586,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1303
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1308
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1310
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1313
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1314
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1315
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1316
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1317
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1318
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1319
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1320
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1321
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1322
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1323
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1330
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1339
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1341
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1344
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1345
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1346
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1347
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1348
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1349
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1350
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1351
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1352
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 70:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1411
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1437
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 76:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1451
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1469
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1473
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 83:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 92:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1507
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1513
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1522
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1531
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1540
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1547
		{

			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1572
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1604
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1608
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 111:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1612
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1618
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1622
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1628
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1637
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 116:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1648
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1652
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1658
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1666
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1676
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1680
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1689
		{
		}
	case 125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1690
		{
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1694
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1703
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1715
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1727
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1739
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1746
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1759
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1774
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1782
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1793
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1803
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1813
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 142:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1822
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 143:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1833
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 144:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1839
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 145:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1847
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1851
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1859
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1865
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1870
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1881
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1885
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1891
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1907
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1912
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1917
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1932
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1942
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1947
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1951
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1977
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1987
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1994
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1997
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2003
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 173:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2010
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2018
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2034
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2048
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2055
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2068
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2090
		{
			sqlVAL.union.val = nil
		}
	case 187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2096
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2100
		{
			sqlVAL.union.val = nil
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2111
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2121
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 194:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2161
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2172
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2181
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2200
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2218
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2222
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2225
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = []security.SQLUsername{sqlDollar[1].union.user()}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2253
		{
			sqlVAL.union.val = append(sqlDollar[1].union.users(), sqlDollar[3].union.user())
		}
	case 209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2258
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2260
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2265
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2272
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2311
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2319
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2323
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2364
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 231:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2398
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2402
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2418
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2425
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2429
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2442
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2446
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2541
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = nil
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2558
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2568
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2584
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2590
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2594
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2598
		{
			sqlVAL.union.val = nil
		}
	case 255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2629
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2638
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2648
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2657
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2674
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2678
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2682
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2692
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2699
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2703
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2707
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2714
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2718
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2727
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2731
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2735
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2743
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2755
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2767
		{
			return unimplemented(sqllex, "alter function")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2771
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2779
		{
			return unimplemented(sqllex, "alter default privileges")
		}
	case 283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2817
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2822
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2826
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2832
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2837
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2842
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2847
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2852
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2856
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2875
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2879
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2883
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2891
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2895
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2911
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 308:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = nil
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2959
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2973
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2979
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2989
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2993
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3001
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3005
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3025
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3027
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3028
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3048
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3052
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3055
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3065
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3082
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3084
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3088
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3091
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3101
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3110
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3127
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3131
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3139
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3152
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3155
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3159
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3164
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3176
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3178
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3179
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3183
		{
		}
	case 363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "CREATE")
		}
	case 364:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3197
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3198
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3201
		{
			return unimplemented(sqllex, "create access method")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3202
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3203
		{
			return unimplemented(sqllex, "create cast")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3204
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3205
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3206
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3208
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3209
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3210
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3211
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3212
		{
			return unimplemented(sqllex, "create operator")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3213
		{
			return unimplemented(sqllex, "create publication")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3214
		{
			return unimplemented(sqllex, "create rule")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3215
		{
			return unimplemented(sqllex, "create server")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3216
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3217
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3219
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3222
		{
		}
	case 388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3223
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3226
		{
		}
	case 390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3227
		{
		}
	case 391:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3230
		{
		}
	case 392:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3231
		{
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3234
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3236
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3237
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3238
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3239
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3240
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3241
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3242
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3243
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3244
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3245
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3246
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3249
		{
			return unimplemented(sqllex, "drop server")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3250
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3251
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3252
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3255
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3257
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3258
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3259
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3261
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3263
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3264
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 432:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3290
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3300
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3309
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3316
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3328
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3343
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3355
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3378
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3388
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3398
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3409
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3413
		{

			sqlVAL.union.val = nil
		}
	case 450:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3430
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3441
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3445
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3449
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3456
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3473
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "DELETE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3500
		{
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3526
		{
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "DROP")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3530
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3531
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3535
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3536
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3544
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3548
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3552
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3561
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3569
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3577
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3584
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 498:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3596
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3599
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3607
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 501:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3632
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3654
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3669
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3673
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3692
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3715
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3719
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3722
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3726
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3731
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 520:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3756
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3760
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3792
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3800
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3808
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3816
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3824
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3839
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3842
		{
			return helpWith(sqllex, "DELETE")
		}
	case 542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3844
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3846
		{
			return helpWith(sqllex, "INSERT")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3849
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3851
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3859
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3861
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3866
		{
			return helpWith(sqllex, "DELETE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3867
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "INSERT")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3874
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3875
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3879
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 578:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3893
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 579:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3901
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3934
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3946
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3975
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3997
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4001
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4005
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4009
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4013
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4023
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 599:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4027
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4030
		{
			return helpWith(sqllex, "GRANT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4052
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4056
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4060
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4064
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4078
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4090
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4100
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			return helpWith(sqllex, "RESET")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4119
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4127
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4131
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "RESET")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4156
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "USE")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4163
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4164
		{
		}
	case 630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4165
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4166
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4170
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4171
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4172
		{
			return helpWith(sqllex, "USE")
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4203
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4246
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4250
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4268
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4272
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4283
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4286
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4296
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4312
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4321
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4340
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4343
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4345
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4348
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4371
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4378
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4383
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4388
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4393
		{
			return unimplemented(sqllex, "set from current")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4402
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4407
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4414
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4418
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4424
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4435
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4456
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4466
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4474
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4478
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4482
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4488
		{
			sqlVAL.union.val = tree.Low
		}
	case 693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4492
		{
			sqlVAL.union.val = tree.Normal
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4496
		{
			sqlVAL.union.val = tree.High
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4507
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4520
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4540
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4541
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4542
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4543
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4545
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4548
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4549
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4550
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4551
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4554
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4558
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4561
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4562
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4563
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4564
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4566
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4567
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4569
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "SHOW")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4585
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4594
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4599
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4604
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4621
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4632
		{
			sqlVAL.str = "client_encoding"
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4635
		{
			sqlVAL.str = "timezone"
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4636
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4650
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4654
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4658
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4669
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4677
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4685
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4691
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 795:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4717
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 798:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4726
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4734
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4744
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4748
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4751
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4756
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4758
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 807:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4765
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4776
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4792
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4796
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4807
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4821
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4831
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4863
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4882
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4901
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4912
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 836:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4931
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4940
		{
			sqlVAL.union.val = true
		}
	case 843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4942
		{
			sqlVAL.union.val = true
		}
	case 844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4944
		{
			sqlVAL.union.val = false
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4968
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4969
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4971
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5000
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5010
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 866:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5046
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 867:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5050
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5061
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5064
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5069
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5071
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5075
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5078
		{
			sqlVAL.union.val = true
		}
	case 875:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5079
		{
			sqlVAL.union.val = false
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5090
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5095
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5103
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5126
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5136
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5141
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5144
		{
			sqlVAL.union.val = true
		}
	case 889:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = false
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5152
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5166
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5173
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5180
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5184
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5188
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5198
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5201
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5209
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5214
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5219
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5233
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5237
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5290
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5298
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5324
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5326
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5329
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5333
		{
		}
	case 929:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5342
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5350
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5356
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5365
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5377
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5386
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5412
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5424
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5436
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5446
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5453
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5460
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5589
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5593
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5636
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5645
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5653
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5677
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5681
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5694
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5706
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5707
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5708
		{
			return helpWith(sqllex, "RESUME")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5718
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5740
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5759
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5767
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5769
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5775
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5783
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5796
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5803
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5810
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5821
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5838
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5877
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:5893
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5911
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 995:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5915
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5922
		{

			sqlVAL.union.val = nil
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5928
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5934
		{
			sqlVAL.str = ""
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5938
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5944
		{
			sqlVAL.union.val = nil
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5948
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5953
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5957
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5961
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5965
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5971
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5985
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5991
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6005
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6020
		{
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6021
		{
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6022
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6041
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6042
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6047
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6048
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6049
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6061
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6065
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6077
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6090
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6099
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6103
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6114
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6115
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6117
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6118
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6119
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6120
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6121
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6122
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6127
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6136
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6143
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6148
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6153
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6159
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.str = ""
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6199
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6221
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6227
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6234
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6247
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6251
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6277
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6291
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6302
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6312
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6324
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6328
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6354
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6358
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6366
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6372
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6376
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6383
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6387
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6391
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6405
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = true
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = false
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6426
		{
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6427
		{
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6432
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6485
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6496
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6516
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6528
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6539
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6546
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6556
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6566
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6581
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6588
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6605
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6615
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6625
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6635
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6641
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6646
		{
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6648
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6649
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6650
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6651
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6669
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6673
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6685
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6691
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6695
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6723
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6740
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6752
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6758
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6772
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6788
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6807
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6816
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6824
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6831
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6835
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6838
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6852
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6854
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6856
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6859
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6862
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6864
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6866
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6902
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6910
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6917
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = true
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6927
		{

			sqlVAL.union.val = true
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = false
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6942
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6956
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6968
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6980
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6990
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7000
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7004
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7008
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7012
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7024
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7028
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7040
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7052
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7056
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7060
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7064
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7081
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7085
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = nil
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7110
		{
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7111
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7136
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7138
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7140
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7142
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7144
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7146
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7154
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7184
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7202
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7221
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7238
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7255
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7259
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7274
		{
			sqlVAL.union.val = false
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7280
		{
			sqlVAL.union.val = true
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7284
		{
			sqlVAL.union.val = false
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7290
		{
			sqlVAL.union.val = true
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7294
		{
			sqlVAL.union.val = false
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7313
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7319
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7325
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7333
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.str = ""
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.str = ""
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7366
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7370
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7374
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7386
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7392
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7398
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7412
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7497
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7505
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7515
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7521
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7577
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7589
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7595
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7623
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7629
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7641
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7647
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7661
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7667
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7675
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7679
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7685
		{
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7688
		{
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7689
		{
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7700
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7718
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7727
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7750
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7756
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7777
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7785
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7793
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7796
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7800
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7801
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7802
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7826
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7836
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7839
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7844
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7848
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7853
		{
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7855
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7865
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7869
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7872
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7875
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7876
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7880
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7890
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7894
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7904
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7917
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7919
		{
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7923
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7928
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7940
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7958
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:7982
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7996
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8010
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.str = ""
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8036
		{

		}
	case 1375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8043
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8051
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8060
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8066
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8070
		{
			sqlVAL.str = ""
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8076
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8080
		{
			sqlVAL.str = ""
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.str = ""
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8096
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.str = ""
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8106
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8119
		{
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8120
		{
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8149
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8167
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8171
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8180
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8199
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8205
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8229
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8233
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8248
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8256
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8260
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8269
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8304
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8345
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.users(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8351
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8360
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.users(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8366
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8407
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8436
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8440
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8444
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8452
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8465
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8466
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8470
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8478
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8484
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8496
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8500
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8504
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8505
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8510
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8545
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8546
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8547
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8569
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8582
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8608
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8630
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8645
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8664
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8668
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8689
		{
			sqlVAL.union.val = true
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8693
		{
			sqlVAL.union.val = false
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8699
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8721
		{
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8722
		{
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8726
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = nil
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8735
		{
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8736
		{
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8740
		{
			sqlVAL.union.val = true
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = false
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = false
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = true
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8766
		{
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8769
		{
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8770
		{
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8778
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8805
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8811
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8832
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8837
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8857
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8866
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8875
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8917
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8925
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8932
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8955
		{
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8958
		{
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8959
		{
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8976
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8980
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8986
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8992
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8994
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8995
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8999
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9003
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9025
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9027
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9042
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9044
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9050
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9054
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9064
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9069
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9074
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9080
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9097
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9112
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9116
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9155
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9165
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9200
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9211
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9241
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9252
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9256
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9274
		{
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9276
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = nil
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9280
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9281
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9285
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9295
		{
			sqlVAL.union.val = true
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9299
		{
			sqlVAL.union.val = false
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9345
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9362
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.str = tree.AstFull
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.str = tree.AstRight
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.str = tree.AstInner
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9393
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9394
		{
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9418
		{
			sqlVAL.str = tree.AstHash
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9422
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.str = ""
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9456
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9457
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9463
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9468
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9482
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9486
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9492
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9498
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9508
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
			sqlVAL.union.val = true
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = false
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9528
		{
			sqlVAL.union.val = true
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = false
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9538
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9570
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9578
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9579
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9589
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9597
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9599
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9607
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9620
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9627
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9636
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9676
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9688
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9689
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9693
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9695
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9696
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9699
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9700
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9701
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9703
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9704
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9707
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9708
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9712
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9713
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9717
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9719
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9720
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9723
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = types.Geography
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9727
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9738
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9746
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9772
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9780
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9788
		{
			sqlVAL.union.val = nil
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9799
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = types.Int2
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = types.Int
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = types.Float4
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9815
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9819
		{
			sqlVAL.union.val = types.Float
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9831
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9839
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = types.Bool
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9853
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = types.Float
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9872
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9878
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9886
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9890
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9894
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9900
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9922
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9926
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9930
		{
			sqlVAL.union.val = types.String
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = true
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = false
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = types.Date
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9949
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9957
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9971
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9980
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9988
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10001
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10005
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = true
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = false
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = false
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = types.Interval
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10029
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10040
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10086
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10095
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10113
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10128
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.union.val = nil
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10158
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10195
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10199
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10203
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10218
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10231
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10235
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10239
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10247
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10323
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10327
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10339
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10343
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10347
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10355
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10371
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10379
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10387
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10395
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10407
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10463
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10470
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10472
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10476
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10536
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10558
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10578
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10598
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10602
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10606
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10610
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10618
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10622
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10626
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10634
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10642
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10650
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10666
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10674
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10736
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10740
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10744
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10752
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10757
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10759
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10763
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10767
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10783
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10799
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10807
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10818
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10837
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10848
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10849
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10873
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10939
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10951
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10960
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10988
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10992
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10996
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11054
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11064
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11066
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11078
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11102
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11110
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11120
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11122
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11134
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11135
		{
			return unimplemented(sqllex, "treat")
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11156
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11158
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11188
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11192
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11208
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.str = ""
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11283
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11291
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11297
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11310
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11378
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11383
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11396
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11407
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = tree.Any
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = tree.Some
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = tree.All
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = tree.Plus
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = tree.Minus
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = tree.Mult
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = tree.Div
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = tree.Mod
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11439
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = tree.Pow
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11441
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = tree.LT
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11443
		{
			sqlVAL.union.val = tree.GT
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = tree.EQ
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11445
		{
			sqlVAL.union.val = tree.LE
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = tree.GE
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = tree.NE
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11451
		{
			sqlVAL.union.val = tree.Like
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11453
		{
			sqlVAL.union.val = tree.ILike
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11487
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11506
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11510
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11537
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11543
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11547
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11563
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11573
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11577
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11642
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11646
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11650
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11654
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11658
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11670
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11702
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11719
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11725
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11753
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11763
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11768
		{
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11769
		{
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11812
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11849
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11885
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11899
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11922
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11938
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11947
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11958
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11967
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11987
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12123
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12130
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12134
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12200
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12213
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12220
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12245
		{
			sqlVAL.str = ""
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12255
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
