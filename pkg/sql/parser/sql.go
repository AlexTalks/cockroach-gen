// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:880
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13708

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1593,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 415,
	-2, 0,
	-1, 74,
	244, 244,
	519, 244,
	-2, 0,
	-1, 88,
	232, 1329,
	246, 1329,
	262, 411,
	393, 411,
	404, 1083,
	443, 411,
	456, 1083,
	503, 1083,
	530, 411,
	556, 1083,
	-2, 0,
	-1, 94,
	133, 1593,
	239, 1593,
	541, 1593,
	542, 1593,
	-2, 0,
	-1, 112,
	151, 1564,
	170, 1564,
	183, 1564,
	242, 1564,
	275, 1564,
	344, 1564,
	354, 1564,
	536, 1564,
	-2, 1535,
	-1, 153,
	159, 923,
	261, 923,
	396, 884,
	461, 884,
	502, 884,
	522, 923,
	524, 884,
	-2, 0,
	-1, 157,
	4, 1595,
	21, 1595,
	22, 1595,
	23, 1595,
	24, 1595,
	25, 1595,
	26, 1595,
	27, 1595,
	29, 1595,
	30, 1595,
	36, 1595,
	41, 1595,
	42, 1595,
	44, 1595,
	45, 1595,
	46, 1595,
	47, 1595,
	48, 1595,
	49, 1595,
	50, 1595,
	51, 1595,
	53, 1595,
	54, 1595,
	55, 1595,
	56, 1595,
	58, 1595,
	59, 1595,
	60, 1595,
	61, 1595,
	62, 1595,
	63, 1595,
	64, 1595,
	68, 1595,
	69, 1595,
	70, 1595,
	71, 1595,
	73, 1595,
	74, 1595,
	75, 1595,
	79, 1595,
	80, 1595,
	81, 1595,
	82, 1595,
	83, 1595,
	84, 1595,
	85, 1595,
	88, 1595,
	89, 1595,
	90, 1595,
	91, 1595,
	92, 1595,
	94, 1595,
	96, 1595,
	97, 1595,
	98, 1595,
	99, 1595,
	100, 1595,
	101, 1595,
	103, 1595,
	104, 1595,
	105, 1595,
	107, 1595,
	108, 1595,
	109, 1595,
	117, 1595,
	118, 1595,
	119, 1595,
	120, 1595,
	121, 1595,
	123, 1595,
	124, 1595,
	125, 1595,
	126, 1595,
	128, 1595,
	129, 1595,
	130, 1595,
	132, 1595,
	133, 1595,
	134, 1595,
	136, 1595,
	137, 1595,
	138, 1595,
	141, 1595,
	142, 1595,
	143, 1595,
	145, 1595,
	146, 1595,
	148, 1595,
	149, 1595,
	150, 1595,
	152, 1595,
	153, 1595,
	154, 1595,
	155, 1595,
	156, 1595,
	157, 1595,
	158, 1595,
	159, 1595,
	160, 1595,
	161, 1595,
	162, 1595,
	163, 1595,
	164, 1595,
	165, 1595,
	166, 1595,
	167, 1595,
	169, 1595,
	175, 1595,
	176, 1595,
	177, 1595,
	178, 1595,
	182, 1595,
	184, 1595,
	185, 1595,
	186, 1595,
	190, 1595,
	191, 1595,
	192, 1595,
	193, 1595,
	194, 1595,
	195, 1595,
	196, 1595,
	197, 1595,
	198, 1595,
	199, 1595,
	200, 1595,
	201, 1595,
	202, 1595,
	203, 1595,
	205, 1595,
	206, 1595,
	208, 1595,
	209, 1595,
	211, 1595,
	212, 1595,
	213, 1595,
	214, 1595,
	215, 1595,
	216, 1595,
	217, 1595,
	218, 1595,
	219, 1595,
	221, 1595,
	222, 1595,
	224, 1595,
	225, 1595,
	226, 1595,
	227, 1595,
	228, 1595,
	232, 1595,
	233, 1595,
	234, 1595,
	235, 1595,
	236, 1595,
	239, 1595,
	240, 1595,
	241, 1595,
	243, 1595,
	245, 1595,
	246, 1595,
	248, 1595,
	250, 1595,
	251, 1595,
	252, 1595,
	254, 1595,
	258, 1595,
	259, 1595,
	260, 1595,
	261, 1595,
	262, 1595,
	263, 1595,
	265, 1595,
	266, 1595,
	267, 1595,
	269, 1595,
	270, 1595,
	272, 1595,
	273, 1595,
	276, 1595,
	277, 1595,
	278, 1595,
	279, 1595,
	280, 1595,
	281, 1595,
	282, 1595,
	285, 1595,
	286, 1595,
	287, 1595,
	288, 1595,
	290, 1595,
	291, 1595,
	292, 1595,
	293, 1595,
	294, 1595,
	295, 1595,
	296, 1595,
	297, 1595,
	298, 1595,
	299, 1595,
	300, 1595,
	301, 1595,
	302, 1595,
	303, 1595,
	304, 1595,
	305, 1595,
	306, 1595,
	307, 1595,
	308, 1595,
	309, 1595,
	310, 1595,
	311, 1595,
	313, 1595,
	315, 1595,
	316, 1595,
	317, 1595,
	318, 1595,
	319, 1595,
	320, 1595,
	321, 1595,
	322, 1595,
	323, 1595,
	324, 1595,
	325, 1595,
	326, 1595,
	327, 1595,
	328, 1595,
	329, 1595,
	331, 1595,
	332, 1595,
	334, 1595,
	336, 1595,
	337, 1595,
	339, 1595,
	340, 1595,
	341, 1595,
	342, 1595,
	343, 1595,
	346, 1595,
	349, 1595,
	350, 1595,
	351, 1595,
	352, 1595,
	355, 1595,
	356, 1595,
	357, 1595,
	359, 1595,
	361, 1595,
	362, 1595,
	363, 1595,
	364, 1595,
	365, 1595,
	366, 1595,
	367, 1595,
	368, 1595,
	369, 1595,
	370, 1595,
	371, 1595,
	372, 1595,
	373, 1595,
	375, 1595,
	376, 1595,
	377, 1595,
	378, 1595,
	379, 1595,
	380, 1595,
	381, 1595,
	382, 1595,
	383, 1595,
	384, 1595,
	385, 1595,
	386, 1595,
	387, 1595,
	388, 1595,
	389, 1595,
	391, 1595,
	392, 1595,
	394, 1595,
	395, 1595,
	396, 1595,
	397, 1595,
	398, 1595,
	399, 1595,
	400, 1595,
	401, 1595,
	402, 1595,
	403, 1595,
	404, 1595,
	405, 1595,
	406, 1595,
	408, 1595,
	410, 1595,
	411, 1595,
	412, 1595,
	418, 1595,
	420, 1595,
	421, 1595,
	422, 1595,
	423, 1595,
	424, 1595,
	425, 1595,
	426, 1595,
	427, 1595,
	428, 1595,
	429, 1595,
	431, 1595,
	432, 1595,
	433, 1595,
	435, 1595,
	436, 1595,
	437, 1595,
	438, 1595,
	439, 1595,
	440, 1595,
	441, 1595,
	443, 1595,
	444, 1595,
	445, 1595,
	446, 1595,
	447, 1595,
	448, 1595,
	449, 1595,
	450, 1595,
	451, 1595,
	452, 1595,
	453, 1595,
	454, 1595,
	456, 1595,
	457, 1595,
	458, 1595,
	459, 1595,
	460, 1595,
	461, 1595,
	463, 1595,
	464, 1595,
	465, 1595,
	466, 1595,
	467, 1595,
	468, 1595,
	470, 1595,
	471, 1595,
	472, 1595,
	473, 1595,
	474, 1595,
	475, 1595,
	476, 1595,
	477, 1595,
	479, 1595,
	481, 1595,
	482, 1595,
	483, 1595,
	484, 1595,
	485, 1595,
	486, 1595,
	487, 1595,
	488, 1595,
	489, 1595,
	490, 1595,
	491, 1595,
	492, 1595,
	493, 1595,
	494, 1595,
	495, 1595,
	496, 1595,
	498, 1595,
	499, 1595,
	501, 1595,
	502, 1595,
	504, 1595,
	505, 1595,
	506, 1595,
	507, 1595,
	508, 1595,
	509, 1595,
	510, 1595,
	511, 1595,
	512, 1595,
	514, 1595,
	515, 1595,
	516, 1595,
	517, 1595,
	518, 1595,
	520, 1595,
	522, 1595,
	523, 1595,
	524, 1595,
	525, 1595,
	526, 1595,
	527, 1595,
	529, 1595,
	530, 1595,
	531, 1595,
	532, 1595,
	534, 1595,
	535, 1595,
	538, 1595,
	539, 1595,
	540, 1595,
	541, 1595,
	542, 1595,
	543, 1595,
	544, 1595,
	546, 1595,
	549, 1595,
	550, 1595,
	551, 1595,
	552, 1595,
	553, 1595,
	554, 1595,
	556, 1595,
	557, 1595,
	558, 1595,
	559, 1595,
	560, 1595,
	561, 1595,
	566, 1595,
	567, 1595,
	568, 1595,
	569, 1595,
	570, 1595,
	571, 1595,
	-2, 0,
	-1, 158,
	1, 1446,
	131, 1446,
	250, 1446,
	333, 1446,
	391, 1446,
	400, 1446,
	575, 1446,
	604, 1446,
	-2, 0,
	-1, 160,
	1, 1446,
	604, 1446,
	-2, 0,
	-1, 161,
	1, 1446,
	604, 1446,
	-2, 0,
	-1, 162,
	1, 1446,
	519, 1446,
	604, 1446,
	-2, 0,
	-1, 191,
	151, 1563,
	170, 1563,
	183, 1563,
	242, 1563,
	275, 1563,
	344, 1563,
	354, 1563,
	536, 1563,
	-2, 1538,
	-1, 239,
	4, 1602,
	5, 1602,
	6, 1602,
	7, 1602,
	8, 1602,
	9, 1602,
	10, 1602,
	21, 1602,
	22, 1602,
	23, 1602,
	24, 1602,
	25, 1602,
	26, 1602,
	27, 1602,
	29, 1602,
	30, 1602,
	36, 1602,
	37, 1602,
	41, 1602,
	42, 1602,
	43, 1602,
	44, 1602,
	45, 1602,
	46, 1602,
	47, 1602,
	48, 1602,
	49, 1602,
	50, 1602,
	51, 1602,
	53, 1602,
	54, 1602,
	55, 1602,
	56, 1602,
	58, 1602,
	59, 1602,
	60, 1602,
	61, 1602,
	62, 1602,
	63, 1602,
	64, 1602,
	65, 1602,
	66, 1602,
	67, 1602,
	68, 1602,
	69, 1602,
	70, 1602,
	71, 1602,
	73, 1602,
	74, 1602,
	75, 1602,
	77, 1602,
	79, 1602,
	80, 1602,
	81, 1602,
	82, 1602,
	83, 1602,
	84, 1602,
	85, 1602,
	88, 1602,
	89, 1602,
	90, 1602,
	91, 1602,
	92, 1602,
	94, 1602,
	96, 1602,
	97, 1602,
	98, 1602,
	99, 1602,
	100, 1602,
	101, 1602,
	103, 1602,
	104, 1602,
	105, 1602,
	106, 1602,
	107, 1602,
	108, 1602,
	109, 1602,
	110, 1602,
	111, 1602,
	112, 1602,
	113, 1602,
	114, 1602,
	115, 1602,
	116, 1602,
	117, 1602,
	118, 1602,
	119, 1602,
	120, 1602,
	121, 1602,
	122, 1602,
	123, 1602,
	124, 1602,
	125, 1602,
	126, 1602,
	127, 1602,
	128, 1602,
	129, 1602,
	130, 1602,
	132, 1602,
	133, 1602,
	134, 1602,
	136, 1602,
	137, 1602,
	138, 1602,
	141, 1602,
	142, 1602,
	143, 1602,
	145, 1602,
	146, 1602,
	148, 1602,
	149, 1602,
	150, 1602,
	152, 1602,
	153, 1602,
	154, 1602,
	155, 1602,
	156, 1602,
	157, 1602,
	158, 1602,
	159, 1602,
	160, 1602,
	161, 1602,
	162, 1602,
	163, 1602,
	164, 1602,
	165, 1602,
	166, 1602,
	167, 1602,
	168, 1602,
	169, 1602,
	175, 1602,
	176, 1602,
	177, 1602,
	178, 1602,
	182, 1602,
	184, 1602,
	185, 1602,
	186, 1602,
	189, 1602,
	190, 1602,
	191, 1602,
	192, 1602,
	193, 1602,
	194, 1602,
	195, 1602,
	196, 1602,
	197, 1602,
	198, 1602,
	199, 1602,
	200, 1602,
	201, 1602,
	202, 1602,
	203, 1602,
	205, 1602,
	206, 1602,
	208, 1602,
	209, 1602,
	211, 1602,
	212, 1602,
	213, 1602,
	214, 1602,
	215, 1602,
	216, 1602,
	217, 1602,
	218, 1602,
	219, 1602,
	220, 1602,
	221, 1602,
	222, 1602,
	224, 1602,
	225, 1602,
	226, 1602,
	227, 1602,
	228, 1602,
	232, 1602,
	233, 1602,
	234, 1602,
	235, 1602,
	236, 1602,
	238, 1602,
	239, 1602,
	240, 1602,
	241, 1602,
	243, 1602,
	245, 1602,
	246, 1602,
	247, 1602,
	248, 1602,
	249, 1602,
	250, 1602,
	251, 1602,
	252, 1602,
	253, 1602,
	254, 1602,
	258, 1602,
	259, 1602,
	260, 1602,
	261, 1602,
	262, 1602,
	263, 1602,
	265, 1602,
	266, 1602,
	267, 1602,
	269, 1602,
	270, 1602,
	271, 1602,
	272, 1602,
	273, 1602,
	274, 1602,
	276, 1602,
	277, 1602,
	278, 1602,
	279, 1602,
	280, 1602,
	281, 1602,
	282, 1602,
	283, 1602,
	284, 1602,
	285, 1602,
	286, 1602,
	287, 1602,
	288, 1602,
	290, 1602,
	291, 1602,
	292, 1602,
	293, 1602,
	294, 1602,
	295, 1602,
	296, 1602,
	297, 1602,
	298, 1602,
	299, 1602,
	300, 1602,
	301, 1602,
	302, 1602,
	303, 1602,
	304, 1602,
	305, 1602,
	306, 1602,
	307, 1602,
	308, 1602,
	309, 1602,
	310, 1602,
	311, 1602,
	313, 1602,
	314, 1602,
	315, 1602,
	316, 1602,
	317, 1602,
	318, 1602,
	319, 1602,
	320, 1602,
	321, 1602,
	322, 1602,
	323, 1602,
	324, 1602,
	325, 1602,
	326, 1602,
	327, 1602,
	328, 1602,
	329, 1602,
	330, 1602,
	331, 1602,
	332, 1602,
	333, 1602,
	334, 1602,
	335, 1602,
	336, 1602,
	337, 1602,
	338, 1602,
	339, 1602,
	340, 1602,
	341, 1602,
	342, 1602,
	343, 1602,
	346, 1602,
	350, 1602,
	351, 1602,
	352, 1602,
	355, 1602,
	356, 1602,
	357, 1602,
	358, 1602,
	359, 1602,
	360, 1602,
	361, 1602,
	362, 1602,
	363, 1602,
	364, 1602,
	365, 1602,
	366, 1602,
	367, 1602,
	368, 1602,
	369, 1602,
	370, 1602,
	371, 1602,
	372, 1602,
	373, 1602,
	375, 1602,
	376, 1602,
	377, 1602,
	378, 1602,
	379, 1602,
	380, 1602,
	381, 1602,
	382, 1602,
	383, 1602,
	384, 1602,
	385, 1602,
	386, 1602,
	387, 1602,
	388, 1602,
	389, 1602,
	391, 1602,
	392, 1602,
	394, 1602,
	395, 1602,
	396, 1602,
	397, 1602,
	398, 1602,
	399, 1602,
	400, 1602,
	401, 1602,
	402, 1602,
	403, 1602,
	404, 1602,
	405, 1602,
	406, 1602,
	408, 1602,
	410, 1602,
	411, 1602,
	412, 1602,
	418, 1602,
	420, 1602,
	421, 1602,
	422, 1602,
	423, 1602,
	424, 1602,
	425, 1602,
	426, 1602,
	427, 1602,
	428, 1602,
	429, 1602,
	431, 1602,
	432, 1602,
	433, 1602,
	434, 1602,
	435, 1602,
	436, 1602,
	437, 1602,
	438, 1602,
	439, 1602,
	440, 1602,
	441, 1602,
	443, 1602,
	444, 1602,
	445, 1602,
	446, 1602,
	447, 1602,
	448, 1602,
	449, 1602,
	450, 1602,
	451, 1602,
	452, 1602,
	453, 1602,
	454, 1602,
	456, 1602,
	457, 1602,
	458, 1602,
	459, 1602,
	460, 1602,
	461, 1602,
	462, 1602,
	463, 1602,
	464, 1602,
	465, 1602,
	466, 1602,
	467, 1602,
	468, 1602,
	469, 1602,
	470, 1602,
	471, 1602,
	472, 1602,
	473, 1602,
	474, 1602,
	475, 1602,
	476, 1602,
	477, 1602,
	479, 1602,
	481, 1602,
	482, 1602,
	483, 1602,
	484, 1602,
	485, 1602,
	486, 1602,
	487, 1602,
	488, 1602,
	489, 1602,
	490, 1602,
	491, 1602,
	492, 1602,
	493, 1602,
	494, 1602,
	495, 1602,
	496, 1602,
	498, 1602,
	499, 1602,
	500, 1602,
	501, 1602,
	502, 1602,
	504, 1602,
	505, 1602,
	506, 1602,
	507, 1602,
	508, 1602,
	509, 1602,
	510, 1602,
	511, 1602,
	512, 1602,
	514, 1602,
	515, 1602,
	516, 1602,
	517, 1602,
	518, 1602,
	520, 1602,
	522, 1602,
	523, 1602,
	524, 1602,
	525, 1602,
	526, 1602,
	527, 1602,
	528, 1602,
	529, 1602,
	530, 1602,
	531, 1602,
	532, 1602,
	534, 1602,
	535, 1602,
	537, 1602,
	538, 1602,
	539, 1602,
	540, 1602,
	541, 1602,
	542, 1602,
	543, 1602,
	544, 1602,
	545, 1602,
	546, 1602,
	549, 1602,
	550, 1602,
	551, 1602,
	552, 1602,
	553, 1602,
	554, 1602,
	556, 1602,
	557, 1602,
	558, 1602,
	559, 1602,
	560, 1602,
	561, 1602,
	566, 1602,
	567, 1602,
	568, 1602,
	569, 1602,
	570, 1602,
	571, 1602,
	572, 1602,
	585, 1602,
	592, 1602,
	593, 1602,
	594, 1602,
	601, 1602,
	605, 1602,
	-2, 0,
	-1, 752,
	4, 1327,
	21, 1327,
	22, 1327,
	23, 1327,
	24, 1327,
	25, 1327,
	26, 1327,
	27, 1327,
	29, 1327,
	30, 1327,
	36, 1327,
	41, 1327,
	42, 1327,
	44, 1327,
	45, 1327,
	46, 1327,
	47, 1327,
	48, 1327,
	49, 1327,
	50, 1327,
	51, 1327,
	53, 1327,
	54, 1327,
	55, 1327,
	56, 1327,
	58, 1327,
	59, 1327,
	60, 1327,
	61, 1327,
	62, 1327,
	63, 1327,
	64, 1327,
	68, 1327,
	69, 1327,
	70, 1327,
	71, 1327,
	73, 1327,
	74, 1327,
	75, 1327,
	79, 1327,
	80, 1327,
	81, 1327,
	82, 1327,
	83, 1327,
	84, 1327,
	85, 1327,
	88, 1327,
	89, 1327,
	90, 1327,
	91, 1327,
	92, 1327,
	94, 1327,
	96, 1327,
	97, 1327,
	98, 1327,
	99, 1327,
	100, 1327,
	101, 1327,
	103, 1327,
	104, 1327,
	105, 1327,
	107, 1327,
	108, 1327,
	109, 1327,
	117, 1327,
	118, 1327,
	119, 1327,
	120, 1327,
	121, 1327,
	123, 1327,
	124, 1327,
	125, 1327,
	126, 1327,
	128, 1327,
	129, 1327,
	130, 1327,
	132, 1327,
	133, 1327,
	134, 1327,
	136, 1327,
	137, 1327,
	138, 1327,
	141, 1327,
	142, 1327,
	143, 1327,
	145, 1327,
	146, 1327,
	148, 1327,
	149, 1327,
	150, 1327,
	152, 1327,
	153, 1327,
	154, 1327,
	155, 1327,
	156, 1327,
	157, 1327,
	158, 1327,
	159, 1327,
	160, 1327,
	161, 1327,
	162, 1327,
	163, 1327,
	164, 1327,
	165, 1327,
	166, 1327,
	167, 1327,
	169, 1327,
	175, 1327,
	176, 1327,
	177, 1327,
	178, 1327,
	182, 1327,
	184, 1327,
	185, 1327,
	186, 1327,
	190, 1327,
	191, 1327,
	192, 1327,
	193, 1327,
	194, 1327,
	195, 1327,
	196, 1327,
	197, 1327,
	198, 1327,
	199, 1327,
	200, 1327,
	201, 1327,
	202, 1327,
	203, 1327,
	205, 1327,
	206, 1327,
	208, 1327,
	209, 1327,
	211, 1327,
	212, 1327,
	213, 1327,
	214, 1327,
	215, 1327,
	216, 1327,
	217, 1327,
	218, 1327,
	219, 1327,
	221, 1327,
	222, 1327,
	224, 1327,
	225, 1327,
	226, 1327,
	227, 1327,
	228, 1327,
	232, 1327,
	233, 1327,
	234, 1327,
	235, 1327,
	236, 1327,
	239, 1327,
	240, 1327,
	241, 1327,
	243, 1327,
	245, 1327,
	246, 1327,
	248, 1327,
	250, 1327,
	251, 1327,
	252, 1327,
	254, 1327,
	258, 1327,
	259, 1327,
	260, 1327,
	261, 1327,
	262, 1327,
	263, 1327,
	265, 1327,
	266, 1327,
	267, 1327,
	269, 1327,
	270, 1327,
	272, 1327,
	273, 1327,
	276, 1327,
	277, 1327,
	278, 1327,
	279, 1327,
	280, 1327,
	281, 1327,
	282, 1327,
	285, 1327,
	286, 1327,
	287, 1327,
	288, 1327,
	290, 1327,
	291, 1327,
	292, 1327,
	293, 1327,
	294, 1327,
	295, 1327,
	296, 1327,
	297, 1327,
	298, 1327,
	299, 1327,
	300, 1327,
	301, 1327,
	302, 1327,
	303, 1327,
	304, 1327,
	305, 1327,
	306, 1327,
	307, 1327,
	308, 1327,
	309, 1327,
	310, 1327,
	311, 1327,
	313, 1327,
	315, 1327,
	316, 1327,
	317, 1327,
	318, 1327,
	319, 1327,
	320, 1327,
	321, 1327,
	322, 1327,
	323, 1327,
	324, 1327,
	325, 1327,
	326, 1327,
	327, 1327,
	328, 1327,
	329, 1327,
	331, 1327,
	332, 1327,
	334, 1327,
	336, 1327,
	337, 1327,
	339, 1327,
	340, 1327,
	341, 1327,
	342, 1327,
	343, 1327,
	346, 1327,
	350, 1327,
	351, 1327,
	352, 1327,
	355, 1327,
	356, 1327,
	357, 1327,
	359, 1327,
	361, 1327,
	362, 1327,
	363, 1327,
	364, 1327,
	365, 1327,
	366, 1327,
	367, 1327,
	368, 1327,
	369, 1327,
	370, 1327,
	371, 1327,
	372, 1327,
	373, 1327,
	375, 1327,
	376, 1327,
	377, 1327,
	378, 1327,
	379, 1327,
	380, 1327,
	381, 1327,
	382, 1327,
	383, 1327,
	384, 1327,
	385, 1327,
	386, 1327,
	387, 1327,
	388, 1327,
	389, 1327,
	391, 1327,
	392, 1327,
	394, 1327,
	395, 1327,
	396, 1327,
	397, 1327,
	398, 1327,
	399, 1327,
	400, 1327,
	401, 1327,
	402, 1327,
	403, 1327,
	404, 1327,
	405, 1327,
	406, 1327,
	408, 1327,
	410, 1327,
	411, 1327,
	412, 1327,
	418, 1327,
	420, 1327,
	421, 1327,
	422, 1327,
	423, 1327,
	424, 1327,
	425, 1327,
	426, 1327,
	427, 1327,
	428, 1327,
	429, 1327,
	431, 1327,
	432, 1327,
	433, 1327,
	435, 1327,
	436, 1327,
	437, 1327,
	438, 1327,
	439, 1327,
	440, 1327,
	441, 1327,
	443, 1327,
	444, 1327,
	445, 1327,
	446, 1327,
	447, 1327,
	448, 1327,
	449, 1327,
	450, 1327,
	451, 1327,
	452, 1327,
	453, 1327,
	454, 1327,
	456, 1327,
	457, 1327,
	458, 1327,
	459, 1327,
	460, 1327,
	461, 1327,
	463, 1327,
	464, 1327,
	465, 1327,
	466, 1327,
	467, 1327,
	468, 1327,
	470, 1327,
	471, 1327,
	472, 1327,
	473, 1327,
	474, 1327,
	475, 1327,
	476, 1327,
	477, 1327,
	479, 1327,
	481, 1327,
	482, 1327,
	483, 1327,
	484, 1327,
	485, 1327,
	486, 1327,
	487, 1327,
	488, 1327,
	489, 1327,
	490, 1327,
	491, 1327,
	492, 1327,
	493, 1327,
	494, 1327,
	495, 1327,
	496, 1327,
	498, 1327,
	499, 1327,
	501, 1327,
	502, 1327,
	504, 1327,
	505, 1327,
	506, 1327,
	507, 1327,
	508, 1327,
	509, 1327,
	510, 1327,
	511, 1327,
	512, 1327,
	514, 1327,
	515, 1327,
	516, 1327,
	517, 1327,
	518, 1327,
	520, 1327,
	522, 1327,
	523, 1327,
	524, 1327,
	525, 1327,
	526, 1327,
	527, 1327,
	529, 1327,
	530, 1327,
	531, 1327,
	532, 1327,
	534, 1327,
	535, 1327,
	538, 1327,
	539, 1327,
	540, 1327,
	541, 1327,
	542, 1327,
	543, 1327,
	544, 1327,
	546, 1327,
	549, 1327,
	550, 1327,
	551, 1327,
	552, 1327,
	553, 1327,
	554, 1327,
	556, 1327,
	557, 1327,
	558, 1327,
	559, 1327,
	560, 1327,
	561, 1327,
	566, 1327,
	567, 1327,
	568, 1327,
	569, 1327,
	570, 1327,
	571, 1327,
	-2, 0,
	-1, 771,
	188, 2394,
	519, 2394,
	584, 2394,
	603, 2394,
	-2, 0,
	-1, 772,
	188, 2381,
	519, 2381,
	584, 2381,
	603, 2381,
	-2, 0,
	-1, 774,
	188, 2645,
	519, 2645,
	584, 2645,
	603, 2645,
	-2, 0,
	-1, 777,
	188, 2506,
	519, 2506,
	584, 2506,
	603, 2506,
	-2, 0,
	-1, 778,
	188, 2686,
	519, 2686,
	584, 2686,
	603, 2686,
	-2, 0,
	-1, 786,
	188, 2533,
	519, 2533,
	584, 2533,
	603, 2533,
	-2, 710,
	-1, 821,
	603, 2330,
	606, 2330,
	-2, 1004,
	-1, 822,
	603, 2332,
	606, 2332,
	-2, 1005,
	-1, 823,
	603, 2331,
	606, 2331,
	-2, 1006,
	-1, 824,
	606, 2256,
	-2, 1007,
	-1, 849,
	183, 263,
	-2, 0,
	-1, 873,
	43, 2303,
	-2, 0,
	-1, 874,
	556, 1305,
	-2, 1084,
	-1, 890,
	4, 1736,
	21, 1736,
	22, 1736,
	23, 1736,
	24, 1736,
	25, 1736,
	26, 1736,
	27, 1736,
	29, 1736,
	30, 1736,
	36, 1736,
	41, 1736,
	42, 1736,
	44, 1736,
	45, 1736,
	46, 1736,
	47, 1736,
	48, 1736,
	49, 1736,
	50, 1736,
	51, 1736,
	53, 1736,
	54, 1736,
	55, 1736,
	56, 1736,
	58, 1736,
	59, 1736,
	60, 1736,
	61, 1736,
	62, 1736,
	63, 1736,
	64, 1736,
	68, 1736,
	69, 1736,
	70, 1736,
	71, 1736,
	73, 1736,
	74, 1736,
	75, 1736,
	79, 1736,
	80, 1736,
	81, 1736,
	82, 1736,
	83, 1736,
	84, 1736,
	85, 1736,
	88, 1736,
	89, 1736,
	90, 1736,
	91, 1736,
	92, 1736,
	94, 1736,
	96, 1736,
	97, 1736,
	98, 1736,
	99, 1736,
	100, 1736,
	101, 1736,
	103, 1736,
	104, 1736,
	105, 1736,
	107, 1736,
	108, 1736,
	109, 1736,
	117, 1736,
	118, 1736,
	119, 1736,
	120, 1736,
	121, 1736,
	123, 1736,
	124, 1736,
	125, 1736,
	126, 1736,
	128, 1736,
	129, 1736,
	130, 1736,
	132, 1736,
	133, 1736,
	134, 1736,
	136, 1736,
	137, 1736,
	138, 1736,
	141, 1736,
	142, 1736,
	143, 1736,
	145, 1736,
	146, 1736,
	148, 1736,
	149, 1736,
	150, 1736,
	152, 1736,
	153, 1736,
	154, 1736,
	155, 1736,
	156, 1736,
	157, 1736,
	158, 1736,
	159, 1736,
	160, 1736,
	161, 1736,
	162, 1736,
	163, 1736,
	164, 1736,
	165, 1736,
	166, 1736,
	167, 1736,
	169, 1736,
	175, 1736,
	176, 1736,
	177, 1736,
	178, 1736,
	182, 1736,
	184, 1736,
	185, 1736,
	186, 1736,
	190, 1736,
	191, 1736,
	192, 1736,
	193, 1736,
	194, 1736,
	195, 1736,
	196, 1736,
	197, 1736,
	198, 1736,
	199, 1736,
	200, 1736,
	201, 1736,
	202, 1736,
	203, 1736,
	205, 1736,
	206, 1736,
	208, 1736,
	209, 1736,
	211, 1736,
	212, 1736,
	213, 1736,
	214, 1736,
	215, 1736,
	216, 1736,
	217, 1736,
	218, 1736,
	219, 1736,
	221, 1736,
	222, 1736,
	224, 1736,
	225, 1736,
	226, 1736,
	227, 1736,
	228, 1736,
	232, 1736,
	233, 1736,
	234, 1736,
	235, 1736,
	236, 1736,
	239, 1736,
	240, 1736,
	241, 1736,
	243, 1736,
	245, 1736,
	246, 1736,
	248, 1736,
	250, 1736,
	251, 1736,
	252, 1736,
	254, 1736,
	258, 1736,
	259, 1736,
	260, 1736,
	261, 1736,
	262, 1736,
	263, 1736,
	265, 1736,
	266, 1736,
	267, 1736,
	269, 1736,
	270, 1736,
	272, 1736,
	273, 1736,
	276, 1736,
	277, 1736,
	278, 1736,
	279, 1736,
	280, 1736,
	281, 1736,
	282, 1736,
	285, 1736,
	286, 1736,
	287, 1736,
	288, 1736,
	290, 1736,
	291, 1736,
	292, 1736,
	293, 1736,
	294, 1736,
	295, 1736,
	296, 1736,
	297, 1736,
	298, 1736,
	299, 1736,
	300, 1736,
	301, 1736,
	302, 1736,
	303, 1736,
	304, 1736,
	305, 1736,
	306, 1736,
	307, 1736,
	308, 1736,
	309, 1736,
	310, 1736,
	311, 1736,
	313, 1736,
	315, 1736,
	316, 1736,
	317, 1736,
	318, 1736,
	319, 1736,
	320, 1736,
	321, 1736,
	322, 1736,
	323, 1736,
	324, 1736,
	325, 1736,
	326, 1736,
	327, 1736,
	328, 1736,
	329, 1736,
	331, 1736,
	332, 1736,
	334, 1736,
	336, 1736,
	337, 1736,
	339, 1736,
	340, 1736,
	341, 1736,
	342, 1736,
	343, 1736,
	346, 1736,
	350, 1736,
	351, 1736,
	352, 1736,
	355, 1736,
	356, 1736,
	357, 1736,
	359, 1736,
	361, 1736,
	362, 1736,
	363, 1736,
	364, 1736,
	365, 1736,
	366, 1736,
	367, 1736,
	368, 1736,
	369, 1736,
	370, 1736,
	371, 1736,
	372, 1736,
	373, 1736,
	375, 1736,
	376, 1736,
	377, 1736,
	378, 1736,
	379, 1736,
	380, 1736,
	381, 1736,
	382, 1736,
	383, 1736,
	384, 1736,
	385, 1736,
	386, 1736,
	387, 1736,
	388, 1736,
	389, 1736,
	391, 1736,
	392, 1736,
	394, 1736,
	395, 1736,
	396, 1736,
	397, 1736,
	398, 1736,
	399, 1736,
	400, 1736,
	401, 1736,
	402, 1736,
	403, 1736,
	404, 1736,
	405, 1736,
	406, 1736,
	408, 1736,
	410, 1736,
	411, 1736,
	412, 1736,
	418, 1736,
	420, 1736,
	421, 1736,
	422, 1736,
	423, 1736,
	424, 1736,
	425, 1736,
	426, 1736,
	427, 1736,
	428, 1736,
	429, 1736,
	431, 1736,
	432, 1736,
	433, 1736,
	435, 1736,
	436, 1736,
	437, 1736,
	438, 1736,
	439, 1736,
	440, 1736,
	441, 1736,
	443, 1736,
	444, 1736,
	445, 1736,
	446, 1736,
	447, 1736,
	448, 1736,
	449, 1736,
	450, 1736,
	451, 1736,
	452, 1736,
	453, 1736,
	454, 1736,
	456, 1736,
	457, 1736,
	458, 1736,
	459, 1736,
	460, 1736,
	461, 1736,
	463, 1736,
	464, 1736,
	465, 1736,
	466, 1736,
	467, 1736,
	468, 1736,
	470, 1736,
	471, 1736,
	472, 1736,
	473, 1736,
	474, 1736,
	475, 1736,
	476, 1736,
	477, 1736,
	479, 1736,
	481, 1736,
	482, 1736,
	483, 1736,
	484, 1736,
	485, 1736,
	486, 1736,
	487, 1736,
	488, 1736,
	489, 1736,
	490, 1736,
	491, 1736,
	492, 1736,
	493, 1736,
	494, 1736,
	495, 1736,
	496, 1736,
	498, 1736,
	499, 1736,
	501, 1736,
	502, 1736,
	504, 1736,
	505, 1736,
	506, 1736,
	507, 1736,
	508, 1736,
	509, 1736,
	510, 1736,
	511, 1736,
	512, 1736,
	514, 1736,
	515, 1736,
	516, 1736,
	517, 1736,
	518, 1736,
	520, 1736,
	522, 1736,
	523, 1736,
	524, 1736,
	525, 1736,
	526, 1736,
	527, 1736,
	529, 1736,
	530, 1736,
	531, 1736,
	532, 1736,
	534, 1736,
	535, 1736,
	538, 1736,
	539, 1736,
	540, 1736,
	541, 1736,
	542, 1736,
	543, 1736,
	544, 1736,
	546, 1736,
	549, 1736,
	550, 1736,
	551, 1736,
	552, 1736,
	553, 1736,
	554, 1736,
	556, 1736,
	557, 1736,
	558, 1736,
	559, 1736,
	560, 1736,
	561, 1736,
	566, 1736,
	567, 1736,
	568, 1736,
	569, 1736,
	570, 1736,
	571, 1736,
	-2, 0,
	-1, 900,
	262, 415,
	-2, 0,
	-1, 977,
	396, 885,
	461, 885,
	502, 885,
	524, 885,
	-2, 0,
	-1, 978,
	396, 884,
	461, 884,
	502, 884,
	524, 884,
	-2, 820,
	-1, 982,
	1, 937,
	600, 937,
	602, 937,
	604, 937,
	-2, 0,
	-1, 984,
	1, 859,
	600, 859,
	602, 859,
	604, 859,
	-2, 0,
	-1, 985,
	1, 863,
	600, 863,
	602, 863,
	604, 863,
	-2, 0,
	-1, 986,
	1, 1003,
	183, 1003,
	600, 1003,
	602, 1003,
	604, 1003,
	-2, 0,
	-1, 994,
	1, 890,
	600, 890,
	602, 890,
	604, 890,
	-2, 0,
	-1, 1001,
	1, 937,
	600, 937,
	602, 937,
	604, 937,
	-2, 0,
	-1, 1002,
	1, 939,
	600, 939,
	602, 939,
	604, 939,
	-2, 0,
	-1, 1003,
	1, 942,
	600, 942,
	602, 942,
	604, 942,
	-2, 0,
	-1, 1009,
	1, 967,
	600, 967,
	602, 967,
	604, 967,
	-2, 0,
	-1, 1010,
	1, 969,
	600, 969,
	602, 969,
	604, 969,
	-2, 0,
	-1, 1015,
	1, 997,
	600, 997,
	602, 997,
	604, 997,
	-2, 0,
	-1, 1065,
	170, 1606,
	183, 1606,
	275, 1606,
	344, 1606,
	-2, 1542,
	-1, 1080,
	170, 1605,
	183, 1605,
	275, 1605,
	344, 1605,
	-2, 1539,
	-1, 1107,
	603, 2329,
	-2, 718,
	-1, 1136,
	5, 2321,
	601, 2319,
	-2, 2310,
	-1, 1144,
	5, 2342,
	601, 2339,
	-2, 2330,
	-1, 1145,
	5, 2343,
	601, 2340,
	-2, 2331,
	-1, 1153,
	603, 2327,
	-2, 2309,
	-1, 1154,
	601, 2770,
	-2, 2328,
	-1, 1177,
	601, 2769,
	-2, 2344,
	-1, 1178,
	5, 1811,
	-2, 2740,
	-1, 1179,
	5, 1812,
	-2, 2741,
	-1, 1180,
	5, 1813,
	-2, 2755,
	-1, 1181,
	5, 1814,
	-2, 2719,
	-1, 1182,
	5, 1815,
	-2, 2753,
	-1, 1183,
	5, 1823,
	-2, 2732,
	-1, 1184,
	5, 1810,
	-2, 2728,
	-1, 1185,
	5, 1810,
	-2, 2727,
	-1, 1186,
	5, 1810,
	-2, 2746,
	-1, 1187,
	5, 1821,
	-2, 2721,
	-1, 1188,
	5, 1826,
	-2, 2720,
	-1, 1189,
	5, 1828,
	-2, 2765,
	-1, 1192,
	5, 1850,
	-2, 2758,
	-1, 1193,
	5, 1842,
	-2, 2759,
	-1, 1194,
	5, 1850,
	-2, 2760,
	-1, 1195,
	5, 1846,
	-2, 2761,
	-1, 1196,
	5, 1796,
	-2, 2733,
	-1, 1197,
	5, 1797,
	-2, 2734,
	-1, 1198,
	5, 1798,
	-2, 2722,
	-1, 1226,
	5, 1833,
	-2, 2766,
	-1, 1227,
	5, 1834,
	-2, 2756,
	-1, 1228,
	5, 1835,
	557, 1835,
	-2, 2723,
	-1, 1229,
	5, 1836,
	557, 1836,
	-2, 2724,
	-1, 1266,
	601, 2339,
	-2, 2330,
	-1, 1267,
	601, 2340,
	-2, 2331,
	-1, 1363,
	188, 2686,
	519, 2686,
	584, 2686,
	603, 2686,
	-2, 0,
	-1, 1368,
	1, 694,
	604, 694,
	-2, 1454,
	-1, 1498,
	363, 2304,
	420, 2304,
	463, 2304,
	594, 2304,
	-2, 2294,
	-1, 1509,
	605, 2304,
	-2, 2306,
	-1, 1517,
	1, 1302,
	425, 1266,
	463, 1266,
	578, 1266,
	600, 1302,
	602, 1302,
	604, 1302,
	-2, 1591,
	-1, 1523,
	204, 1399,
	223, 1399,
	433, 1399,
	-2, 0,
	-1, 1579,
	404, 1083,
	556, 1083,
	-2, 410,
	-1, 1596,
	43, 2302,
	-2, 1049,
	-1, 1603,
	1, 1302,
	600, 1302,
	602, 1302,
	604, 1302,
	-2, 1591,
	-1, 1611,
	4, 1327,
	21, 1327,
	22, 1327,
	23, 1327,
	24, 1327,
	25, 1327,
	26, 1327,
	27, 1327,
	29, 1327,
	30, 1327,
	36, 1327,
	41, 1327,
	42, 1327,
	44, 1327,
	45, 1327,
	46, 1327,
	47, 1327,
	48, 1327,
	49, 1327,
	50, 1327,
	51, 1327,
	53, 1327,
	54, 1327,
	55, 1327,
	56, 1327,
	58, 1327,
	59, 1327,
	60, 1327,
	61, 1327,
	62, 1327,
	63, 1327,
	64, 1327,
	68, 1327,
	69, 1327,
	70, 1327,
	71, 1327,
	73, 1327,
	74, 1327,
	75, 1327,
	79, 1327,
	80, 1327,
	81, 1327,
	82, 1327,
	83, 1327,
	84, 1327,
	85, 1327,
	88, 1327,
	89, 1327,
	90, 1327,
	91, 1327,
	92, 1327,
	94, 1327,
	96, 1327,
	97, 1327,
	98, 1327,
	99, 1327,
	100, 1327,
	101, 1327,
	103, 1327,
	104, 1327,
	105, 1327,
	107, 1327,
	108, 1327,
	109, 1327,
	117, 1327,
	118, 1327,
	119, 1327,
	120, 1327,
	121, 1327,
	123, 1327,
	124, 1327,
	125, 1327,
	126, 1327,
	128, 1327,
	129, 1327,
	130, 1327,
	132, 1327,
	133, 1327,
	134, 1327,
	136, 1327,
	137, 1327,
	138, 1327,
	141, 1327,
	142, 1327,
	143, 1327,
	145, 1327,
	146, 1327,
	148, 1327,
	149, 1327,
	150, 1327,
	152, 1327,
	153, 1327,
	154, 1327,
	155, 1327,
	156, 1327,
	157, 1327,
	158, 1327,
	159, 1327,
	160, 1327,
	161, 1327,
	162, 1327,
	163, 1327,
	164, 1327,
	165, 1327,
	166, 1327,
	167, 1327,
	175, 1327,
	176, 1327,
	177, 1327,
	178, 1327,
	182, 1327,
	184, 1327,
	185, 1327,
	186, 1327,
	190, 1327,
	191, 1327,
	192, 1327,
	193, 1327,
	194, 1327,
	195, 1327,
	196, 1327,
	197, 1327,
	198, 1327,
	199, 1327,
	200, 1327,
	201, 1327,
	202, 1327,
	203, 1327,
	205, 1327,
	206, 1327,
	208, 1327,
	209, 1327,
	211, 1327,
	212, 1327,
	213, 1327,
	214, 1327,
	215, 1327,
	216, 1327,
	217, 1327,
	218, 1327,
	219, 1327,
	221, 1327,
	222, 1327,
	224, 1327,
	225, 1327,
	226, 1327,
	227, 1327,
	228, 1327,
	233, 1327,
	234, 1327,
	235, 1327,
	236, 1327,
	239, 1327,
	240, 1327,
	241, 1327,
	243, 1327,
	245, 1327,
	246, 1327,
	248, 1327,
	250, 1327,
	251, 1327,
	252, 1327,
	254, 1327,
	258, 1327,
	259, 1327,
	260, 1327,
	261, 1327,
	262, 1327,
	263, 1327,
	265, 1327,
	266, 1327,
	267, 1327,
	269, 1327,
	270, 1327,
	272, 1327,
	273, 1327,
	276, 1327,
	277, 1327,
	278, 1327,
	279, 1327,
	280, 1327,
	281, 1327,
	282, 1327,
	285, 1327,
	286, 1327,
	287, 1327,
	288, 1327,
	290, 1327,
	291, 1327,
	292, 1327,
	293, 1327,
	294, 1327,
	295, 1327,
	296, 1327,
	297, 1327,
	298, 1327,
	299, 1327,
	300, 1327,
	301, 1327,
	302, 1327,
	303, 1327,
	304, 1327,
	305, 1327,
	306, 1327,
	307, 1327,
	308, 1327,
	309, 1327,
	310, 1327,
	311, 1327,
	313, 1327,
	315, 1327,
	316, 1327,
	317, 1327,
	318, 1327,
	319, 1327,
	320, 1327,
	321, 1327,
	322, 1327,
	323, 1327,
	324, 1327,
	325, 1327,
	326, 1327,
	327, 1327,
	328, 1327,
	329, 1327,
	331, 1327,
	332, 1327,
	336, 1327,
	337, 1327,
	339, 1327,
	340, 1327,
	341, 1327,
	342, 1327,
	343, 1327,
	346, 1327,
	348, 1327,
	350, 1327,
	351, 1327,
	352, 1327,
	355, 1327,
	356, 1327,
	357, 1327,
	359, 1327,
	361, 1327,
	362, 1327,
	363, 1327,
	364, 1327,
	365, 1327,
	366, 1327,
	367, 1327,
	368, 1327,
	369, 1327,
	370, 1327,
	371, 1327,
	372, 1327,
	373, 1327,
	375, 1327,
	376, 1327,
	377, 1327,
	378, 1327,
	379, 1327,
	380, 1327,
	381, 1327,
	382, 1327,
	383, 1327,
	384, 1327,
	385, 1327,
	386, 1327,
	387, 1327,
	388, 1327,
	389, 1327,
	391, 1327,
	392, 1327,
	394, 1327,
	395, 1327,
	396, 1327,
	397, 1327,
	398, 1327,
	399, 1327,
	400, 1327,
	401, 1327,
	402, 1327,
	403, 1327,
	404, 1327,
	405, 1327,
	406, 1327,
	408, 1327,
	410, 1327,
	411, 1327,
	412, 1327,
	418, 1327,
	420, 1327,
	421, 1327,
	422, 1327,
	423, 1327,
	424, 1327,
	425, 1327,
	426, 1327,
	427, 1327,
	428, 1327,
	429, 1327,
	431, 1327,
	432, 1327,
	433, 1327,
	435, 1327,
	436, 1327,
	437, 1327,
	438, 1327,
	439, 1327,
	440, 1327,
	441, 1327,
	443, 1327,
	444, 1327,
	445, 1327,
	446, 1327,
	447, 1327,
	448, 1327,
	449, 1327,
	450, 1327,
	451, 1327,
	452, 1327,
	453, 1327,
	454, 1327,
	456, 1327,
	457, 1327,
	458, 1327,
	459, 1327,
	460, 1327,
	461, 1327,
	463, 1327,
	464, 1327,
	465, 1327,
	466, 1327,
	467, 1327,
	468, 1327,
	470, 1327,
	471, 1327,
	472, 1327,
	473, 1327,
	474, 1327,
	475, 1327,
	476, 1327,
	477, 1327,
	479, 1327,
	481, 1327,
	482, 1327,
	483, 1327,
	484, 1327,
	485, 1327,
	486, 1327,
	487, 1327,
	488, 1327,
	489, 1327,
	490, 1327,
	491, 1327,
	492, 1327,
	493, 1327,
	494, 1327,
	495, 1327,
	496, 1327,
	498, 1327,
	499, 1327,
	501, 1327,
	502, 1327,
	504, 1327,
	505, 1327,
	506, 1327,
	507, 1327,
	508, 1327,
	509, 1327,
	510, 1327,
	511, 1327,
	512, 1327,
	514, 1327,
	515, 1327,
	516, 1327,
	517, 1327,
	518, 1327,
	520, 1327,
	522, 1327,
	523, 1327,
	524, 1327,
	525, 1327,
	526, 1327,
	527, 1327,
	529, 1327,
	530, 1327,
	531, 1327,
	532, 1327,
	534, 1327,
	535, 1327,
	538, 1327,
	539, 1327,
	540, 1327,
	541, 1327,
	542, 1327,
	543, 1327,
	544, 1327,
	546, 1327,
	549, 1327,
	550, 1327,
	551, 1327,
	552, 1327,
	553, 1327,
	554, 1327,
	556, 1327,
	557, 1327,
	558, 1327,
	559, 1327,
	560, 1327,
	561, 1327,
	566, 1327,
	567, 1327,
	568, 1327,
	569, 1327,
	570, 1327,
	571, 1327,
	-2, 0,
	-1, 1634,
	1, 555,
	600, 555,
	602, 555,
	604, 555,
	-2, 1562,
	-1, 1637,
	4, 2764,
	11, 2764,
	12, 2764,
	14, 2764,
	15, 2764,
	16, 2764,
	17, 2764,
	18, 2764,
	19, 2764,
	21, 2764,
	22, 2764,
	23, 2764,
	24, 2764,
	25, 2764,
	26, 2764,
	27, 2764,
	29, 2764,
	30, 2764,
	33, 2764,
	34, 2764,
	36, 2764,
	38, 2764,
	41, 2764,
	42, 2764,
	44, 2764,
	45, 2764,
	46, 2764,
	47, 2764,
	48, 2764,
	49, 2764,
	50, 2764,
	51, 2764,
	53, 2764,
	54, 2764,
	55, 2764,
	56, 2764,
	58, 2764,
	59, 2764,
	60, 2764,
	61, 2764,
	62, 2764,
	63, 2764,
	64, 2764,
	67, 2764,
	68, 2764,
	69, 2764,
	70, 2764,
	71, 2764,
	73, 2764,
	74, 2764,
	75, 2764,
	76, 2764,
	79, 2764,
	80, 2764,
	81, 2764,
	82, 2764,
	83, 2764,
	84, 2764,
	85, 2764,
	86, 2764,
	88, 2764,
	89, 2764,
	90, 2764,
	91, 2764,
	92, 2764,
	94, 2764,
	95, 2764,
	96, 2764,
	97, 2764,
	98, 2764,
	99, 2764,
	100, 2764,
	101, 2764,
	103, 2764,
	104, 2764,
	105, 2764,
	106, 2764,
	107, 2764,
	108, 2764,
	109, 2764,
	117, 2764,
	118, 2764,
	119, 2764,
	120, 2764,
	121, 2764,
	123, 2764,
	124, 2764,
	125, 2764,
	126, 2764,
	128, 2764,
	129, 2764,
	130, 2764,
	132, 2764,
	133, 2764,
	134, 2764,
	136, 2764,
	137, 2764,
	138, 2764,
	141, 2764,
	142, 2764,
	143, 2764,
	145, 2764,
	146, 2764,
	148, 2764,
	149, 2764,
	150, 2764,
	152, 2764,
	153, 2764,
	154, 2764,
	155, 2764,
	156, 2764,
	157, 2764,
	158, 2764,
	159, 2764,
	160, 2764,
	161, 2764,
	162, 2764,
	163, 2764,
	164, 2764,
	165, 2764,
	166, 2764,
	167, 2764,
	171, 2764,
	172, 2764,
	173, 2764,
	174, 2764,
	175, 2764,
	176, 2764,
	177, 2764,
	178, 2764,
	181, 2764,
	182, 2764,
	184, 2764,
	185, 2764,
	186, 2764,
	189, 2764,
	190, 2764,
	191, 2764,
	192, 2764,
	193, 2764,
	194, 2764,
	195, 2764,
	196, 2764,
	197, 2764,
	198, 2764,
	199, 2764,
	200, 2764,
	201, 2764,
	202, 2764,
	203, 2764,
	205, 2764,
	206, 2764,
	208, 2764,
	209, 2764,
	211, 2764,
	212, 2764,
	213, 2764,
	214, 2764,
	215, 2764,
	216, 2764,
	217, 2764,
	218, 2764,
	219, 2764,
	220, 2764,
	221, 2764,
	222, 2764,
	223, 2764,
	224, 2764,
	225, 2764,
	226, 2764,
	227, 2764,
	228, 2764,
	230, 2764,
	231, 2764,
	233, 2764,
	234, 2764,
	235, 2764,
	236, 2764,
	238, 2764,
	239, 2764,
	240, 2764,
	241, 2764,
	243, 2764,
	245, 2764,
	246, 2764,
	247, 2764,
	248, 2764,
	249, 2764,
	250, 2764,
	251, 2764,
	252, 2764,
	253, 2764,
	254, 2764,
	256, 2764,
	257, 2764,
	258, 2764,
	259, 2764,
	260, 2764,
	261, 2764,
	262, 2764,
	263, 2764,
	265, 2764,
	266, 2764,
	267, 2764,
	269, 2764,
	270, 2764,
	271, 2764,
	272, 2764,
	273, 2764,
	274, 2764,
	276, 2764,
	277, 2764,
	278, 2764,
	279, 2764,
	280, 2764,
	281, 2764,
	282, 2764,
	285, 2764,
	286, 2764,
	287, 2764,
	288, 2764,
	289, 2764,
	290, 2764,
	291, 2764,
	292, 2764,
	293, 2764,
	294, 2764,
	295, 2764,
	296, 2764,
	297, 2764,
	298, 2764,
	299, 2764,
	300, 2764,
	301, 2764,
	302, 2764,
	303, 2764,
	304, 2764,
	305, 2764,
	306, 2764,
	307, 2764,
	308, 2764,
	309, 2764,
	310, 2764,
	311, 2764,
	313, 2764,
	314, 2764,
	315, 2764,
	316, 2764,
	317, 2764,
	318, 2764,
	319, 2764,
	320, 2764,
	321, 2764,
	322, 2764,
	323, 2764,
	324, 2764,
	325, 2764,
	326, 2764,
	327, 2764,
	328, 2764,
	329, 2764,
	331, 2764,
	332, 2764,
	335, 2764,
	336, 2764,
	337, 2764,
	339, 2764,
	340, 2764,
	341, 2764,
	342, 2764,
	343, 2764,
	346, 2764,
	350, 2764,
	351, 2764,
	352, 2764,
	353, 2764,
	355, 2764,
	356, 2764,
	357, 2764,
	359, 2764,
	361, 2764,
	362, 2764,
	363, 2764,
	364, 2764,
	365, 2764,
	366, 2764,
	367, 2764,
	368, 2764,
	369, 2764,
	370, 2764,
	371, 2764,
	372, 2764,
	373, 2764,
	375, 2764,
	376, 2764,
	377, 2764,
	378, 2764,
	379, 2764,
	380, 2764,
	381, 2764,
	382, 2764,
	383, 2764,
	384, 2764,
	385, 2764,
	386, 2764,
	387, 2764,
	388, 2764,
	389, 2764,
	391, 2764,
	392, 2764,
	394, 2764,
	395, 2764,
	396, 2764,
	397, 2764,
	398, 2764,
	399, 2764,
	400, 2764,
	401, 2764,
	402, 2764,
	403, 2764,
	404, 2764,
	405, 2764,
	406, 2764,
	408, 2764,
	410, 2764,
	411, 2764,
	412, 2764,
	418, 2764,
	419, 2764,
	420, 2764,
	421, 2764,
	422, 2764,
	423, 2764,
	424, 2764,
	425, 2764,
	426, 2764,
	427, 2764,
	428, 2764,
	429, 2764,
	431, 2764,
	432, 2764,
	433, 2764,
	434, 2764,
	435, 2764,
	436, 2764,
	437, 2764,
	438, 2764,
	439, 2764,
	440, 2764,
	441, 2764,
	442, 2764,
	443, 2764,
	444, 2764,
	445, 2764,
	446, 2764,
	447, 2764,
	448, 2764,
	449, 2764,
	450, 2764,
	451, 2764,
	452, 2764,
	453, 2764,
	454, 2764,
	456, 2764,
	457, 2764,
	458, 2764,
	459, 2764,
	460, 2764,
	461, 2764,
	463, 2764,
	464, 2764,
	465, 2764,
	466, 2764,
	467, 2764,
	468, 2764,
	469, 2764,
	470, 2764,
	471, 2764,
	472, 2764,
	473, 2764,
	474, 2764,
	475, 2764,
	476, 2764,
	477, 2764,
	479, 2764,
	481, 2764,
	482, 2764,
	483, 2764,
	484, 2764,
	485, 2764,
	486, 2764,
	487, 2764,
	488, 2764,
	489, 2764,
	490, 2764,
	491, 2764,
	492, 2764,
	493, 2764,
	494, 2764,
	495, 2764,
	496, 2764,
	498, 2764,
	499, 2764,
	500, 2764,
	501, 2764,
	502, 2764,
	504, 2764,
	505, 2764,
	506, 2764,
	507, 2764,
	508, 2764,
	509, 2764,
	510, 2764,
	511, 2764,
	512, 2764,
	514, 2764,
	515, 2764,
	516, 2764,
	517, 2764,
	518, 2764,
	520, 2764,
	522, 2764,
	523, 2764,
	524, 2764,
	525, 2764,
	526, 2764,
	527, 2764,
	529, 2764,
	530, 2764,
	531, 2764,
	532, 2764,
	534, 2764,
	535, 2764,
	538, 2764,
	539, 2764,
	540, 2764,
	541, 2764,
	542, 2764,
	543, 2764,
	544, 2764,
	546, 2764,
	549, 2764,
	550, 2764,
	551, 2764,
	552, 2764,
	553, 2764,
	554, 2764,
	556, 2764,
	557, 2764,
	558, 2764,
	559, 2764,
	560, 2764,
	561, 2764,
	566, 2764,
	567, 2764,
	568, 2764,
	569, 2764,
	570, 2764,
	571, 2764,
	572, 2764,
	574, 2764,
	582, 2764,
	583, 2764,
	584, 2764,
	585, 2764,
	586, 2764,
	587, 2764,
	589, 2764,
	590, 2764,
	591, 2764,
	592, 2764,
	593, 2764,
	594, 2764,
	595, 2764,
	596, 2764,
	597, 2764,
	599, 2764,
	602, 2764,
	603, 2764,
	605, 2764,
	606, 2764,
	-2, 0,
	-1, 1642,
	188, 2645,
	519, 2645,
	584, 2645,
	603, 2645,
	-2, 0,
	-1, 1695,
	396, 885,
	461, 885,
	502, 885,
	524, 885,
	-2, 0,
	-1, 1706,
	1, 1399,
	600, 1399,
	602, 1399,
	604, 1399,
	-2, 0,
	-1, 1723,
	1, 880,
	600, 880,
	602, 880,
	604, 880,
	-2, 0,
	-1, 1724,
	1, 924,
	600, 924,
	602, 924,
	604, 924,
	-2, 0,
	-1, 1725,
	1, 932,
	600, 932,
	602, 932,
	604, 932,
	-2, 0,
	-1, 1728,
	1, 889,
	600, 889,
	602, 889,
	604, 889,
	-2, 0,
	-1, 1730,
	1, 895,
	600, 895,
	602, 895,
	604, 895,
	-2, 0,
	-1, 1733,
	1, 891,
	600, 891,
	602, 891,
	604, 891,
	-2, 0,
	-1, 1738,
	1, 905,
	600, 905,
	602, 905,
	604, 905,
	-2, 0,
	-1, 1769,
	1, 2628,
	600, 2628,
	602, 2628,
	603, 2628,
	604, 2628,
	-2, 0,
	-1, 1773,
	1, 978,
	600, 978,
	602, 978,
	604, 978,
	-2, 0,
	-1, 1788,
	1, 1449,
	604, 1449,
	-2, 1454,
	-1, 1791,
	170, 1605,
	183, 1605,
	275, 1605,
	344, 1605,
	-2, 1543,
	-1, 1891,
	151, 1564,
	170, 1564,
	183, 1564,
	242, 1564,
	275, 1564,
	344, 1564,
	354, 1564,
	536, 1564,
	-2, 2015,
	-1, 1952,
	602, 2190,
	-2, 0,
	-1, 1987,
	151, 1564,
	170, 1564,
	183, 1564,
	242, 1564,
	275, 1564,
	344, 1564,
	354, 1564,
	536, 1564,
	-2, 1697,
	-1, 2026,
	519, 2642,
	603, 2642,
	606, 2642,
	-2, 0,
	-1, 2043,
	601, 1838,
	-2, 1826,
	-1, 2075,
	188, 2642,
	603, 2642,
	606, 2642,
	-2, 0,
	-1, 2117,
	1, 696,
	604, 696,
	-2, 1454,
	-1, 2256,
	223, 258,
	-2, 2338,
	-1, 2257,
	223, 259,
	-2, 312,
	-1, 2368,
	1, 882,
	600, 882,
	602, 882,
	604, 882,
	-2, 0,
	-1, 2369,
	1, 926,
	600, 926,
	602, 926,
	604, 926,
	-2, 0,
	-1, 2370,
	1, 934,
	600, 934,
	602, 934,
	604, 934,
	-2, 0,
	-1, 2371,
	1, 980,
	600, 980,
	602, 980,
	604, 980,
	-2, 0,
	-1, 2412,
	1, 907,
	600, 907,
	602, 907,
	604, 907,
	-2, 0,
	-1, 2431,
	1, 963,
	600, 963,
	602, 963,
	604, 963,
	-2, 0,
	-1, 2476,
	440, 1632,
	441, 1632,
	-2, 1871,
	-1, 2507,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1891,
	-1, 2508,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1892,
	-1, 2509,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1893,
	-1, 2510,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1894,
	-1, 2511,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1895,
	-1, 2512,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1896,
	-1, 2513,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1897,
	-1, 2514,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1898,
	-1, 2526,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1910,
	-1, 2527,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1911,
	-1, 2528,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1912,
	-1, 2532,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1919,
	-1, 2538,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1923,
	-1, 2540,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1931,
	-1, 2541,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1932,
	-1, 2542,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1933,
	-1, 2543,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1934,
	-1, 2717,
	5, 2342,
	188, 2201,
	601, 2339,
	-2, 2330,
	-1, 2718,
	188, 2202,
	-2, 2715,
	-1, 2719,
	188, 2203,
	-2, 2532,
	-1, 2720,
	188, 2204,
	-2, 2412,
	-1, 2721,
	188, 2205,
	-2, 2469,
	-1, 2722,
	188, 2206,
	-2, 2517,
	-1, 2723,
	188, 2207,
	-2, 2640,
	-1, 2724,
	188, 2208,
	-2, 1998,
	-1, 2795,
	1, 1698,
	2, 1698,
	106, 1698,
	151, 1698,
	170, 1698,
	183, 1698,
	189, 1698,
	207, 1698,
	210, 1698,
	238, 1698,
	242, 1698,
	253, 1698,
	271, 1698,
	275, 1698,
	314, 1698,
	344, 1698,
	348, 1698,
	354, 1698,
	430, 1698,
	434, 1698,
	536, 1698,
	547, 1698,
	563, 1698,
	564, 1698,
	565, 1698,
	575, 1698,
	600, 1698,
	602, 1698,
	604, 1698,
	606, 1698,
	-2, 1697,
	-1, 2808,
	601, 2311,
	-2, 2325,
	-1, 2810,
	1, 329,
	563, 329,
	-2, 1591,
	-1, 2840,
	601, 1837,
	-2, 1827,
	-1, 3025,
	1, 1302,
	425, 1266,
	463, 1266,
	578, 1266,
	600, 1302,
	602, 1302,
	604, 1302,
	-2, 1591,
	-1, 3211,
	349, 1635,
	-2, 2754,
	-1, 3212,
	349, 1636,
	-2, 2625,
	-1, 3216,
	440, 2267,
	441, 2267,
	-2, 1996,
	-1, 3217,
	440, 2271,
	441, 2271,
	-2, 1997,
	-1, 3218,
	440, 2268,
	441, 2268,
	-2, 1996,
	-1, 3219,
	440, 2272,
	441, 2272,
	-2, 1997,
	-1, 3232,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1921,
	-1, 3233,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1925,
	-1, 3239,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1927,
	-1, 3465,
	1, 691,
	600, 691,
	602, 691,
	604, 691,
	-2, 1454,
	-1, 3629,
	43, 2302,
	-2, 1050,
	-1, 3634,
	1, 1302,
	600, 1302,
	602, 1302,
	604, 1302,
	-2, 1591,
	-1, 3747,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1929,
	-1, 3754,
	247, 0,
	249, 0,
	335, 0,
	-2, 1948,
	-1, 3822,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1977,
	-1, 3823,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1978,
	-1, 3824,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1979,
	-1, 3828,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1983,
	-1, 3829,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1984,
	-1, 3830,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1985,
	-1, 3878,
	601, 2312,
	-2, 2326,
	-1, 4053,
	603, 2871,
	-2, 1517,
	-1, 4115,
	247, 0,
	249, 0,
	335, 0,
	-2, 1949,
	-1, 4118,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1952,
	-1, 4119,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1954,
	-1, 4220,
	603, 2327,
	-2, 1337,
	-1, 4375,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1953,
	-1, 4376,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	220, 0,
	223, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 1955,
	-1, 4387,
	247, 0,
	-2, 1988,
	-1, 4575,
	247, 0,
	-2, 1989,
	-1, 4776,
	50, 0,
	220, 0,
	274, 0,
	469, 0,
	572, 0,
	585, 0,
	-2, 2718,
}

const sqlPrivate = 57344

const sqlLast = 133606

var sqlAct = [...]int{
	275, 4769, 3618, 4972, 4893, 4880, 3110, 3097, 3370, 4645,
	4437, 4834, 4757, 4768, 4775, 2902, 4609, 4786, 4909, 2166,
	4617, 1532, 4666, 4722, 2253, 3617, 4641, 4098, 4216, 4744,
	4787, 4497, 4725, 4788, 4847, 4702, 2971, 4419, 2946, 4528,
	4504, 1341, 4482, 2750, 1259, 3787, 4329, 4579, 4324, 4265,
	4290, 4442, 3067, 4364, 4774, 3739, 4396, 2486, 2344, 4045,
	4037, 2017, 4311, 4513, 4313, 3973, 1334, 1270, 712, 3651,
	4304, 3225, 4217, 1559, 4197, 823, 4542, 3545, 2099, 2086,
	2555, 1090, 2342, 2984, 4334, 3645, 1800, 2494, 3613, 4018,
	1660, 4000, 3488, 4392, 2303, 4002, 783, 2030, 3119, 3692,
	3134, 1402, 2340, 823, 2174, 3694, 3121, 3056, 3086, 3595,
	3594, 1081, 3881, 3416, 1336, 3393, 3385, 4097, 3602, 2330,
	3353, 4154, 1147, 723, 3374, 3081, 2487, 902, 3129, 3098,
	898, 4, 1495, 3423, 1993, 3083, 3118, 1962, 3112, 3376,
	3032, 2185, 2240, 4881, 2201, 3507, 3848, 2904, 2491, 1938,
	1899, 4580, 1869, 3128, 1339, 2568, 3209, 2242, 2635, 2787,
	3483, 1502, 3060, 2788, 893, 3352, 818, 1598, 3001, 2785,
	1089, 182, 2241, 1103, 779, 2236, 2217, 2633, 2224, 2154,
	269, 1140, 1383, 1136, 1788, 2790, 2945, 3068, 2624, 2158,
	2097, 1313, 2552, 2475, 2768, 1145, 1963, 2144, 2458, 1982,
	2823, 756, 1344, 3615, 1635, 3091, 1250, 2456, 1703, 2011,
	1601, 1658, 2290, 824, 825, 2927, 1561, 1370, 2822, 1933,
	1253, 820, 971, 4667, 3122, 3994, 2747, 2890, 2627, 2777,
	2758, 1232, 268, 1979, 1972, 699, 2713, 1883, 1801, 721,
	191, 2679, 1267, 1802, 1738, 2457, 2031, 192, 2316, 775,
	2459, 2605, 2250, 764, 1633, 829, 1324, 1249, 1626, 1527,
	2173, 1723, 4835, 4894, 2289, 182, 2480, 1121, 267, 716,
	44, 43, 41, 32, 30, 813, 28, 1807, 713, 1255,
	724, 1230, 3262, 829, 874, 739, 1787, 1538, 992, 3862,
	875, 3863, 4412, 3256, 2088, 111, 2088, 3372, 1379, 4985,
	2088, 1190, 2088, 2767, 4975, 2088, 4959, 832, 3670, 163,
	2767, 4958, 4815, 1085, 4948, 2767, 2088, 73, 2262, 46,
	45, 1729, 4929, 4927, 919, 1143, 4441, 4441, 4866, 2341,
	4178, 2827, 2262, 1531, 74, 832, 3661, 158, 1327, 4823,
	3660, 4812, 4810, 4824, 1142, 2767, 2767, 3450, 3448, 73,
	79, 3323, 3324, 2109, 4807, 4804, 4772, 1085, 4808, 4805,
	2262, 67, 4409, 4771, 3670, 4770, 74, 2262, 48, 3139,
	160, 2109, 2109, 4765, 4764, 1815, 1816, 3139, 3139, 4755,
	4753, 1247, 79, 4441, 4441, 4750, 2760, 4720, 47, 4516,
	88, 4441, 4691, 4684, 4683, 4678, 2831, 2767, 2767, 4441,
	3323, 3324, 4677, 4671, 4637, 1818, 4441, 2262, 4281, 3433,
	4577, 4559, 4556, 1075, 2831, 4082, 2262, 50, 68, 1233,
	1233, 3271, 88, 1066, 4553, 1265, 51, 3272, 4441, 4506,
	1065, 57, 4460, 4507, 4459, 161, 2262, 4448, 2262, 1291,
	1817, 2262, 4447, 49, 4440, 110, 4441, 2262, 4441, 2106,
	94, 107, 4403, 4377, 4353, 4342, 2262, 2831, 3139, 3670,
	4260, 4243, 2851, 900, 2767, 2767, 3323, 3324, 4117, 3341,
	3342, 3343, 2831, 1379, 4061, 1080, 4055, 110, 3687, 1284,
	3687, 4016, 94, 107, 3224, 4017, 3873, 94, 4113, 1086,
	3874, 3871, 52, 1669, 3855, 3872, 2106, 3771, 2767, 1815,
	1816, 2262, 1540, 3767, 3852, 3686, 2767, 2767, 3677, 3687,
	95, 3369, 3678, 3364, 3363, 2767, 1234, 2767, 2767, 3314,
	3312, 3329, 1846, 3315, 3313, 239, 3304, 3302, 3273, 1818,
	3305, 2767, 2767, 3138, 3108, 3107, 2874, 3139, 2326, 2326,
	2767, 3338, 95, 2830, 2820, 1823, 2812, 2831, 2767, 2109,
	2262, 1236, 2109, 1237, 2766, 1871, 3323, 3324, 2767, 2325,
	4692, 4581, 4572, 2326, 1817, 2767, 1285, 1262, 4560, 4516,
	3329, 3139, 3852, 241, 2759, 4322, 4281, 2106, 3323, 3324,
	1285, 3341, 3342, 3343, 4244, 4082, 1261, 3678, 2974, 2889,
	2178, 2123, 2087, 2103, 3062, 3094, 2261, 2994, 2887, 1958,
	1526, 3956, 3742, 2581, 2582, 2583, 2600, 2601, 2602, 3261,
	3716, 1980, 2229, 3662, 1705, 2804, 2803, 2802, 2801, 2800,
	1238, 1235, 240, 2603, 1074, 1073, 1072, 1071, 1070, 3339,
	1069, 1068, 3663, 239, 1064, 233, 3329, 1063, 1062, 1061,
	1060, 1059, 1058, 1057, 234, 1119, 1138, 1056, 1055, 1054,
	1053, 1552, 3183, 3338, 1052, 1051, 1871, 2089, 99, 2089,
	1050, 1049, 1048, 2089, 1047, 2089, 1029, 1651, 2089, 1823,
	2829, 193, 969, 968, 1540, 2593, 53, 967, 3339, 2089,
	966, 241, 965, 964, 2589, 963, 962, 961, 960, 959,
	99, 56, 958, 957, 956, 955, 59, 954, 953, 952,
	951, 1546, 3345, 950, 1868, 949, 69, 948, 2662, 947,
	2106, 946, 58, 190, 102, 945, 944, 106, 1845, 1847,
	943, 54, 942, 941, 940, 162, 3329, 939, 1868, 938,
	240, 937, 936, 55, 3323, 3324, 935, 934, 923, 922,
	921, 917, 916, 239, 3339, 190, 102, 909, 3329, 106,
	908, 62, 4172, 1868, 3660, 907, 153, 1346, 1145, 1539,
	2594, 2595, 2596, 2597, 4129, 1285, 2106, 892, 891, 848,
	2588, 159, 847, 846, 239, 239, 845, 1838, 2404, 193,
	239, 836, 3340, 901, 835, 1145, 1145, 1145, 153, 834,
	39, 241, 833, 153, 799, 790, 789, 788, 770, 263,
	2630, 262, 3896, 1405, 2759, 261, 260, 1405, 259, 3338,
	258, 257, 256, 255, 1346, 254, 253, 157, 252, 1868,
	251, 250, 241, 241, 1673, 249, 248, 247, 241, 246,
	245, 3340, 194, 244, 3339, 243, 2109, 242, 2861, 1145,
	240, 1145, 2087, 1145, 2106, 2598, 2599, 2103, 1540, 157,
	1564, 3867, 1868, 233, 1901, 4797, 3339, 1285, 2451, 3688,
	3419, 1374, 234, 3284, 194, 1551, 1387, 1388, 1389, 1531,
	3267, 240, 240, 3258, 3163, 1510, 1346, 240, 2591, 3042,
	2835, 1731, 4336, 3367, 233, 233, 1505, 1263, 1941, 193,
	233, 2631, 3, 234, 234, 1940, 1564, 3340, 2809, 234,
	1983, 2794, 2152, 1564, 3329, 2108, 2660, 2006, 2646, 1868,
	2644, 1910, 1145, 1534, 1145, 1545, 3323, 3324, 1655, 1564,
	193, 193, 1944, 239, 4796, 3368, 193, 1145, 1814, 1145,
	1839, 1868, 3325, 3326, 3327, 3328, 3330, 3331, 3076, 1391,
	1540, 2333, 1318, 1321, 1607, 1610, 239, 1269, 4793, 4773,
	4752, 4652, 1366, 3323, 3324, 1331, 1819, 1820, 1821, 1822,
	1824, 1825, 1530, 1368, 4569, 4432, 4021, 1515, 4391, 4584,
	4343, 241, 1403, 2632, 4563, 2629, 1503, 1564, 3334, 3332,
	3333, 3325, 3326, 3327, 3328, 3330, 3331, 3340, 1870, 4321,
	1352, 1088, 1941, 4561, 241, 4184, 4152, 1145, 4151, 1940,
	1145, 4145, 4144, 4143, 4136, 4135, 4133, 829, 1398, 3340,
	1492, 1497, 3339, 1902, 4128, 1900, 1517, 4125, 4124, 4015,
	240, 3900, 3899, 1335, 1360, 3898, 1939, 2332, 1596, 3877,
	3843, 2592, 3842, 233, 3841, 3763, 3758, 3335, 3336, 3337,
	1529, 1528, 234, 240, 3334, 3332, 3333, 3325, 3326, 3327,
	3328, 3330, 3331, 3414, 3360, 3351, 233, 1908, 1674, 832,
	3322, 1638, 1640, 3319, 3318, 234, 3316, 182, 182, 3093,
	1246, 3311, 3310, 1498, 3309, 3306, 1509, 1335, 1603, 1827,
	1819, 1820, 1821, 1822, 1824, 1825, 3329, 1868, 3303, 1870,
	4338, 3283, 193, 1901, 3266, 3259, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 239, 3954, 1903, 2306, 3257, 3109,
	2795, 2617, 1636, 1814, 1813, 4979, 1374, 4919, 2269, 1374,
	239, 2267, 4918, 3329, 4022, 1815, 1816, 4882, 4833, 1145,
	4831, 2634, 1271, 3789, 4712, 1145, 3333, 3325, 3326, 3327,
	3328, 3330, 3331, 4644, 1500, 4628, 1335, 1335, 1629, 3335,
	3336, 3337, 241, 4625, 239, 1818, 3334, 3332, 3333, 3325,
	3326, 3327, 3328, 3330, 3331, 3340, 4624, 4623, 241, 1815,
	1816, 2578, 2579, 2580, 2604, 2590, 2584, 1792, 2586, 2587,
	2585, 2572, 2573, 2574, 2575, 2576, 2577, 4603, 3078, 4602,
	1817, 1086, 1846, 3365, 3339, 1679, 4600, 4583, 4582, 1818,
	1650, 240, 241, 4557, 4541, 4540, 2558, 4526, 4523, 4522,
	1747, 4517, 239, 4456, 233, 1668, 4427, 240, 4389, 1613,
	4372, 4022, 4371, 234, 4350, 1871, 4349, 4307, 4282, 4171,
	233, 239, 4150, 4083, 1817, 4075, 4072, 1786, 3942, 234,
	1145, 1145, 1145, 3941, 3924, 3923, 1145, 2628, 3921, 3858,
	193, 240, 3846, 1267, 2564, 1267, 3753, 1888, 3689, 3671,
	241, 1890, 3637, 3562, 233, 3520, 193, 1696, 3487, 1868,
	1405, 3442, 3288, 234, 3287, 3440, 3282, 239, 2844, 241,
	3248, 1145, 1732, 3055, 823, 1346, 1947, 1946, 1945, 1969,
	2048, 823, 1346, 2009, 1346, 1823, 1942, 1934, 1932, 1793,
	193, 1960, 1893, 2842, 2841, 2806, 1898, 4586, 2661, 240,
	2799, 2765, 3334, 3332, 3333, 3325, 3326, 3327, 3328, 3330,
	3331, 2642, 233, 1789, 2021, 241, 2027, 1797, 240, 1887,
	1066, 234, 1796, 2076, 2005, 2078, 1961, 1065, 1956, 1823,
	1955, 233, 1954, 4337, 1943, 1815, 1816, 3340, 1791, 1953,
	234, 1952, 1951, 1950, 1346, 2016, 1949, 1948, 193, 1929,
	1145, 1810, 1811, 1928, 1927, 1926, 1925, 1924, 1923, 1922,
	1921, 239, 1920, 1919, 240, 1818, 1918, 193, 1966, 1967,
	1917, 1916, 1915, 1914, 1145, 1903, 1889, 233, 1845, 1847,
	1886, 3077, 1405, 1881, 1990, 2111, 234, 1359, 2093, 1289,
	2168, 2095, 1280, 2115, 4585, 1935, 1936, 2100, 4310, 4180,
	1817, 2102, 2042, 1627, 4121, 3895, 2105, 1233, 3870, 241,
	3861, 2141, 2833, 193, 1086, 3270, 2797, 182, 1632, 2135,
	2134, 4410, 4182, 2143, 2145, 3894, 1265, 1902, 1265, 2007,
	2334, 3323, 3324, 239, 239, 3438, 1374, 1838, 3323, 3324,
	1884, 3666, 2001, 1386, 2114, 1991, 4916, 2014, 4246, 2015,
	4908, 2972, 4626, 3411, 829, 2150, 4518, 4509, 240, 4508,
	4341, 829, 2143, 4284, 4283, 1988, 2143, 4245, 4174, 1384,
	4088, 233, 4087, 4086, 1981, 4085, 4084, 3865, 2143, 4514,
	234, 241, 241, 3864, 3691, 3332, 3333, 3325, 3326, 3327,
	3328, 3330, 3331, 3690, 3673, 2022, 2659, 2226, 2645, 2091,
	2643, 3672, 2071, 1959, 4789, 1379, 832, 193, 1385, 4862,
	4860, 2212, 1868, 832, 2950, 1564, 1564, 2000, 1999, 1998,
	1996, 1995, 1985, 1994, 3523, 1405, 3327, 3328, 3330, 3331,
	240, 240, 1983, 3740, 1379, 1509, 4025, 4564, 2117, 1351,
	1086, 1941, 2138, 233, 233, 2028, 1379, 3968, 1940, 2999,
	2129, 2153, 234, 234, 4431, 1924, 4562, 1784, 1924, 3308,
	1695, 3307, 3230, 2932, 1382, 3939, 3554, 1045, 1262, 3620,
	1262, 3619, 3489, 1748, 1912, 1704, 3682, 4845, 2331, 193,
	193, 2045, 4505, 1509, 4819, 4800, 4785, 1261, 3603, 1261,
	1839, 3135, 2243, 1705, 2244, 2208, 2360, 2216, 4029, 4012,
	2221, 2010, 2113, 3970, 3965, 2254, 2259, 4393, 3329, 3276,
	3947, 3713, 1046, 3463, 2338, 3372, 3791, 2625, 4794, 2840,
	1537, 1957, 1544, 1937, 1550, 3916, 2630, 3611, 2300, 1606,
	1564, 1522, 1564, 1355, 1564, 2178, 1317, 2991, 4618, 2146,
	2136, 4809, 4806, 1909, 4451, 4423, 3656, 2988, 1870, 2986,
	4325, 1573, 1564, 1564, 4719, 4596, 3492, 3934, 2140, 1245,
	2307, 3116, 2980, 4231, 2211, 1564, 2929, 3090, 1631, 4898,
	3586, 4228, 4864, 2184, 4863, 4454, 4450, 1564, 4429, 1564,
	1564, 1564, 3734, 2246, 2247, 4795, 4478, 887, 4233, 3983,
	1581, 2875, 1683, 1649, 2263, 1654, 2139, 829, 1821, 1822,
	1824, 1825, 4974, 823, 1043, 1041, 1039, 4632, 1667, 1037,
	1672, 2893, 2418, 4471, 2206, 4462, 1524, 2631, 3467, 2248,
	1034, 4274, 2416, 2296, 2979, 1145, 2891, 4273, 2928, 3981,
	1529, 1528, 2893, 2118, 3980, 3972, 2301, 1828, 1826, 1827,
	1819, 1820, 1821, 1822, 1824, 1825, 3962, 2891, 3961, 832,
	1632, 3959, 3958, 2205, 2202, 3946, 2220, 3982, 3911, 1746,
	1145, 2313, 3910, 3592, 2336, 3591, 1369, 1025, 3432, 3281,
	2130, 4212, 3280, 3279, 3278, 1730, 2260, 1582, 3234, 2364,
	2997, 2906, 2996, 2993, 2982, 2966, 2965, 2960, 2959, 2958,
	2937, 1868, 2936, 888, 1145, 2897, 1145, 2359, 2821, 2632,
	1386, 2629, 2539, 1145, 2321, 4205, 2048, 2048, 1405, 1790,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1636, 1145, 1636, 1145,
	1145, 1145, 1145, 2323, 2281, 2450, 2282, 3439, 2310, 2299,
	4206, 3919, 1380, 2319, 2346, 1385, 4452, 4424, 1629, 2315,
	2318, 2178, 2318, 1681, 3469, 1145, 4899, 4227, 2468, 1145,
	1145, 2455, 1360, 829, 2327, 1380, 2328, 1145, 1263, 3162,
	1263, 1145, 4229, 1145, 1145, 1380, 2909, 3034, 2675, 2674,
	2496, 1405, 1619, 1727, 1618, 1386, 3087, 1145, 1145, 1145,
	1145, 3489, 2848, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1825, 2606, 2607, 2389, 1086, 2036, 1086, 2042, 2042,
	2351, 3552, 4370, 3522, 2244, 832, 2606, 2622, 2331, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 2368, 2379,
	2466, 1617, 1145, 1616, 2930, 4190, 2466, 2634, 2930, 1745,
	2443, 2280, 1577, 2670, 1267, 2825, 1303, 3714, 2369, 2934,
	1385, 1405, 2376, 2440, 2834, 2412, 1031, 2495, 2448, 2186,
	1267, 1376, 2716, 2716, 2730, 2356, 2606, 1782, 1084, 2751,
	2753, 1525, 2175, 2479, 1676, 2757, 1145, 1405, 1590, 2258,
	1631, 2882, 2190, 2214, 1376, 4611, 2352, 2147, 2148, 1726,
	2464, 3142, 2811, 2554, 1376, 4903, 2464, 3331, 4189, 3325,
	3326, 3327, 3328, 3330, 3331, 2428, 2171, 2625, 2454, 2467,
	2570, 2370, 2460, 2453, 2452, 2954, 2554, 1997, 1066, 2807,
	4247, 1066, 1066, 2621, 2563, 2483, 2947, 2948, 2484, 2485,
	2947, 2948, 2492, 2493, 2782, 2176, 2177, 1697, 1094, 2187,
	1893, 1744, 2947, 2948, 1381, 2431, 4201, 2430, 762, 1595,
	2637, 4202, 2442, 2628, 3178, 2920, 762, 4225, 2422, 1083,
	4863, 4207, 1757, 2672, 2377, 2172, 2410, 1381, 2673, 1693,
	3207, 2676, 3553, 2677, 2678, 890, 889, 1381, 2462, 2908,
	1346, 1346, 2562, 2774, 4230, 2373, 1971, 2045, 2045, 2560,
	2566, 3222, 1677, 4904, 2990, 2738, 4931, 2367, 2919, 1990,
	2429, 2320, 1377, 4204, 3931, 711, 1783, 1795, 4613, 2824,
	3723, 1378, 3722, 3180, 1233, 4487, 1705, 2634, 1705, 2001,
	4208, 2796, 2870, 1405, 2619, 1377, 2989, 1265, 2227, 3991,
	2828, 706, 3943, 1602, 1378, 1377, 2987, 2773, 2985, 2465,
	2864, 2856, 3780, 1265, 1378, 2465, 2808, 2860, 2191, 2781,
	3466, 2786, 1086, 2892, 2792, 2793, 2725, 2048, 2847, 2712,
	2755, 2871, 1086, 2836, 4272, 3245, 1086, 2763, 2764, 1975,
	182, 1085, 2896, 2550, 2742, 1374, 2779, 2780, 2872, 2775,
	1988, 2223, 1943, 4369, 1358, 1600, 3992, 3539, 3960, 1761,
	3957, 3189, 2867, 4912, 3243, 3903, 3890, 3598, 2159, 2203,
	1405, 932, 2548, 2160, 4906, 1035, 1035, 1035, 2222, 3590,
	1036, 1740, 2417, 2463, 2192, 2193, 1346, 1682, 1978, 2463,
	2933, 1035, 2415, 3929, 2439, 3221, 2907, 797, 2898, 3990,
	2449, 2866, 3550, 1973, 4791, 2992, 3531, 1145, 1145, 2188,
	1145, 2957, 2218, 2935, 3540, 2843, 4877, 1935, 1936, 4885,
	4203, 1976, 2855, 2896, 4884, 1086, 2858, 885, 2859, 884,
	1727, 2846, 1335, 4223, 823, 2178, 1346, 2873, 4934, 1262,
	2895, 2176, 2177, 2850, 2209, 2865, 761, 2983, 4226, 2042,
	3059, 2819, 2869, 2189, 761, 1262, 1379, 3538, 1261, 4213,
	4214, 4852, 2888, 3532, 1974, 4103, 2939, 1564, 4102, 2955,
	2634, 2219, 1743, 3192, 1261, 3717, 3101, 3777, 3599, 1379,
	2876, 1335, 1564, 3029, 1564, 2266, 2265, 2161, 2204, 1379,
	2536, 3130, 3653, 2441, 3186, 1724, 1576, 3037, 3387, 1275,
	1302, 1564, 3039, 1579, 2165, 2375, 3530, 3240, 4698, 795,
	3944, 3074, 1335, 1335, 1277, 2544, 2227, 2923, 2949, 2951,
	2952, 2953, 2964, 1082, 2901, 1346, 2998, 1346, 2911, 2914,
	2938, 3026, 3027, 4488, 3241, 3070, 1726, 2545, 3246, 4688,
	3030, 1272, 2546, 2956, 4962, 4486, 2551, 4612, 2088, 1145,
	2159, 4484, 3214, 3215, 4415, 2160, 763, 2970, 1725, 3778,
	4619, 4759, 3596, 4760, 763, 3654, 3164, 2973, 3165, 3565,
	4905, 2963, 3136, 2940, 2194, 2968, 2978, 2962, 2162, 2167,
	2863, 4792, 829, 3028, 1977, 1278, 2961, 924, 3025, 3140,
	2732, 2894, 4224, 3035, 3477, 3145, 3160, 3146, 4483, 2239,
	3115, 2159, 2036, 2036, 4639, 1498, 2160, 1758, 3191, 1975,
	3143, 3144, 1145, 925, 829, 1529, 3040, 4910, 1145, 1145,
	3236, 3150, 3151, 3152, 1602, 2198, 4485, 1032, 2045, 3133,
	3105, 2878, 3053, 2215, 832, 3132, 182, 1509, 3066, 3188,
	3468, 1755, 3166, 2553, 3063, 1678, 2810, 3653, 3103, 707,
	2195, 760, 2880, 1276, 1930, 3064, 2238, 4851, 1978, 3194,
	2534, 3196, 2163, 2537, 2405, 3096, 832, 4299, 3704, 2161,
	1706, 3106, 2411, 2776, 1145, 1145, 3504, 1523, 3117, 4005,
	1145, 3702, 2199, 1636, 1287, 4790, 2165, 3436, 4003, 2881,
	3695, 1976, 2181, 1145, 1145, 3137, 4366, 3386, 3104, 1145,
	1145, 2893, 1692, 1694, 2561, 1145, 4874, 3514, 2200, 3085,
	2879, 2169, 2213, 3930, 2533, 1756, 2912, 2634, 2213, 2372,
	2161, 910, 3035, 3157, 3242, 2197, 4911, 796, 4686, 3167,
	708, 2366, 2547, 3503, 3244, 2215, 2227, 2165, 2169, 3168,
	1794, 3170, 2549, 3172, 3190, 3174, 3175, 915, 1759, 2182,
	1145, 1145, 1145, 4826, 4099, 933, 1145, 4382, 3237, 1263,
	2162, 2167, 4913, 4827, 3512, 2210, 1145, 4007, 3184, 4742,
	2212, 4687, 3213, 4551, 3508, 1263, 798, 4730, 3269, 709,
	794, 710, 4257, 1145, 729, 2738, 1509, 1880, 3286, 3697,
	2778, 3597, 2180, 3204, 3264, 3265, 1971, 1335, 3202, 3268,
	2616, 3203, 4006, 3478, 3696, 3208, 4935, 3513, 2207, 2479,
	2791, 2162, 2167, 1085, 3223, 3793, 4922, 1357, 4314, 4309,
	4093, 4920, 4277, 3891, 1292, 4104, 4543, 3736, 3510, 1711,
	3205, 4646, 3832, 4735, 4665, 4365, 926, 927, 4315, 4544,
	2214, 4525, 1760, 4276, 2163, 2230, 1805, 4275, 4043, 1509,
	2237, 1509, 3641, 2818, 1977, 3159, 2288, 837, 2969, 3260,
	3705, 4850, 1968, 1290, 1283, 698, 2738, 2738, 4020, 3235,
	3169, 1273, 3171, 4545, 3173, 1145, 1145, 1145, 1145, 1975,
	1804, 4100, 2482, 844, 4449, 1145, 1145, 1145, 4300, 2157,
	1145, 2179, 3509, 2169, 2164, 2163, 1019, 2131, 3016, 4534,
	1145, 1267, 1405, 3424, 2128, 4595, 1145, 4963, 1145, 2535,
	3847, 2089, 3379, 3380, 4044, 4148, 3976, 1267, 4005, 3963,
	1079, 3915, 3197, 2211, 1274, 3199, 3484, 4003, 1978, 3642,
	3633, 3008, 3006, 3362, 3480, 1405, 3776, 4547, 3010, 3012,
	3002, 4940, 3883, 1973, 2169, 3075, 2155, 1267, 3069, 3381,
	1405, 3057, 3275, 1570, 2314, 1804, 1294, 2308, 2302, 2294,
	4546, 1976, 1346, 2274, 2231, 2273, 4703, 4647, 1799, 3737,
	911, 912, 2048, 2036, 4004, 4367, 1405, 2896, 4548, 3907,
	2126, 4668, 2423, 4046, 2124, 1803, 1346, 769, 2472, 2156,
	4330, 3417, 1346, 3054, 1086, 1305, 3884, 3472, 3404, 1557,
	4503, 4501, 4426, 3431, 1974, 3495, 4007, 3491, 3490, 4825,
	3228, 2941, 1020, 2913, 1145, 3206, 3703, 3698, 3699, 3700,
	3701, 2357, 3860, 3885, 2127, 3882, 3833, 3446, 1145, 3887,
	3384, 2168, 3383, 928, 929, 3834, 2349, 4011, 1346, 1734,
	1733, 4006, 2339, 2048, 1804, 4105, 3473, 3474, 2738, 2738,
	2738, 2738, 1644, 4312, 1805, 2271, 3389, 1728, 3391, 3418,
	1803, 1145, 2817, 2816, 2815, 2168, 2814, 3493, 1659, 2813,
	3497, 3378, 3061, 1083, 3413, 3453, 2164, 1346, 3455, 3456,
	3457, 3390, 1625, 3459, 1265, 3460, 3402, 3461, 3426, 3427,
	3428, 3429, 3405, 3406, 2042, 3464, 3373, 1623, 1374, 1346,
	1265, 1346, 3410, 931, 3407, 3486, 838, 839, 3422, 3470,
	3388, 3357, 3358, 3359, 3494, 3403, 2226, 3499, 4149, 3420,
	3501, 3004, 1880, 1405, 1977, 2226, 1687, 2164, 2473, 1805,
	1265, 4106, 3018, 4001, 1346, 3408, 4606, 3409, 1346, 3481,
	3443, 3444, 3568, 3445, 3570, 3441, 4498, 3574, 1611, 1803,
	3555, 3580, 4939, 3525, 3017, 3009, 3007, 3011, 3013, 3003,
	3005, 3019, 1612, 1564, 4291, 2042, 4648, 913, 914, 4438,
	2917, 3015, 3529, 3922, 3683, 1712, 1346, 1564, 3908, 1564,
	3548, 2312, 3606, 1405, 2234, 4871, 2942, 2943, 4643, 3454,
	823, 1564, 4347, 3458, 3451, 3912, 3043, 4413, 3033, 3046,
	3465, 3048, 1564, 3449, 3022, 1021, 3563, 3434, 4709, 3141,
	3038, 3616, 3036, 4004, 1346, 2343, 2243, 3600, 3437, 3471,
	1686, 3566, 4607, 4434, 4433, 4716, 1262, 3886, 4700, 4549,
	4155, 1267, 3543, 3849, 2641, 4550, 3425, 4875, 3649, 4421,
	3479, 2232, 1262, 3511, 3476, 1261, 1778, 3092, 2435, 3130,
	3092, 841, 840, 4737, 4876, 3521, 1564, 1564, 3130, 4873,
	1780, 1261, 1777, 1775, 3647, 4346, 3534, 3601, 2015, 3604,
	1509, 1509, 1262, 2045, 1752, 4439, 768, 3535, 3632, 3528,
	1564, 3536, 1564, 3537, 2233, 3527, 4422, 3640, 4811, 3485,
	4635, 1261, 4627, 3556, 4388, 4490, 4147, 4710, 4010, 3354,
	3564, 3542, 1750, 3544, 3752, 3711, 3658, 3541, 3588, 3583,
	3577, 4608, 3710, 1722, 2964, 842, 843, 3447, 2769, 3317,
	3625, 1720, 1718, 1716, 1624, 3247, 1714, 1022, 1708, 1405,
	3058, 1702, 1405, 1700, 3176, 1621, 3576, 2981, 3589, 1622,
	3582, 2931, 3575, 1509, 2045, 930, 3581, 2845, 3725, 2444,
	2939, 3643, 3420, 2772, 1023, 3650, 3608, 2008, 3913, 2004,
	3629, 1781, 1662, 2414, 3355, 1145, 2381, 3628, 2299, 3669,
	829, 1145, 1145, 3630, 2252, 1145, 1145, 1145, 3593, 1145,
	3706, 3708, 3732, 3731, 3023, 1799, 3182, 3655, 1145, 2048,
	3681, 3181, 3148, 3014, 2771, 2461, 3664, 1145, 1739, 2770,
	2384, 2293, 1145, 3685, 2272, 2077, 1913, 1024, 1405, 3715,
	1675, 3730, 3667, 3668, 1265, 1594, 3634, 1145, 182, 182,
	2640, 3657, 832, 3679, 4784, 1405, 4258, 4259, 4242, 2437,
	3967, 3966, 3567, 3729, 2436, 2048, 2048, 1145, 1145, 4699,
	1145, 1145, 1145, 4328, 1033, 3551, 1779, 4264, 1776, 1774,
	4255, 4194, 4042, 4033, 4323, 3979, 3964, 3937, 1145, 3935,
	1751, 3914, 1145, 3636, 2048, 2048, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145, 1145,
	1145, 1145, 1145, 1145, 1145, 1145, 3755, 1145, 1749, 1335,
	3726, 3738, 3805, 3709, 3806, 1145, 1145, 2048, 1503, 1721,
	3631, 1403, 1145, 3587, 3621, 3735, 3088, 1719, 1717, 1715,
	3080, 2042, 1713, 1145, 1707, 3765, 3766, 1701, 3719, 1699,
	3720, 1620, 3721, 3073, 1267, 1267, 4848, 3065, 1145, 1086,
	3051, 3050, 3031, 2862, 2857, 2270, 2268, 2245, 2228, 2196,
	2183, 2170, 2110, 2107, 2413, 3844, 1263, 2380, 2104, 2738,
	2738, 3762, 3760, 2101, 2096, 2251, 1262, 2042, 2042, 2094,
	1405, 2090, 1263, 3772, 2081, 3773, 3646, 3648, 4839, 1242,
	3879, 2020, 1808, 1346, 1346, 1261, 3226, 3769, 3788, 3578,
	4864, 3783, 4314, 3795, 2237, 2132, 2042, 2042, 1346, 1346,
	4605, 1346, 1263, 3200, 3785, 1243, 3803, 3779, 3781, 3782,
	3804, 1509, 4315, 3198, 3802, 1038, 1040, 1042, 2120, 2121,
	1145, 3866, 3810, 3836, 3888, 3889, 3024, 3851, 2036, 2042,
	4747, 4352, 4345, 2447, 4344, 4271, 3808, 4186, 1145, 3901,
	3902, 3131, 3904, 2151, 1575, 4536, 3845, 4054, 2918, 2738,
	2738, 2738, 2738, 2738, 2738, 2738, 2738, 2738, 2738, 2738,
	2738, 2738, 2738, 2738, 2738, 2738, 2738, 2738, 2738, 3837,
	2738, 1145, 1145, 3856, 3857, 2893, 3853, 3854, 3727, 2445,
	2893, 4529, 3227, 2178, 3905, 2371, 182, 3733, 3906, 2311,
	2891, 2492, 3796, 1809, 1326, 2915, 1772, 1773, 2408, 2036,
	2045, 1325, 2403, 4746, 2378, 4234, 1815, 1816, 3579, 4266,
	1698, 2921, 4571, 1145, 3948, 4436, 1244, 1265, 1265, 3869,
	2492, 3811, 3868, 4156, 4134, 2446, 3506, 3936, 2922, 3938,
	1815, 1816, 2944, 1812, 1353, 1293, 1818, 1564, 3975, 3878,
	4867, 2119, 1346, 2922, 4858, 264, 2045, 2045, 4820, 3049,
	4030, 3897, 2295, 3840, 1364, 2988, 3971, 2986, 2995, 2977,
	3974, 2975, 1680, 2924, 1019, 2926, 4708, 2048, 4693, 3952,
	4659, 1817, 2976, 4653, 1326, 2045, 2045, 4604, 2925, 3953,
	3955, 4520, 4496, 3969, 3918, 3977, 1326, 4414, 1079, 4040,
	4032, 4019, 695, 3876, 3635, 1817, 3095, 2756, 1564, 2116,
	3978, 2029, 3940, 2329, 1145, 4907, 4739, 3945, 2045, 4435,
	2967, 4740, 1267, 1145, 1521, 3993, 3995, 1520, 4056, 3435,
	4938, 2345, 2347, 1564, 1564, 1564, 3101, 4739, 4063, 2939,
	4655, 4879, 4740, 4047, 2350, 3323, 3324, 3989, 1815, 1816,
	1564, 1564, 1564, 3395, 2885, 2886, 2358, 1531, 2361, 2362,
	2363, 2883, 2884, 3130, 3999, 4026, 4013, 4008, 1685, 1262,
	1262, 1564, 4126, 3997, 1684, 3515, 3516, 1405, 3517, 3518,
	3519, 4048, 4051, 2636, 4009, 3893, 2885, 2883, 1261, 1261,
	1020, 4036, 2671, 4039, 3986, 1754, 1263, 4521, 1753, 2042,
	3998, 4472, 4268, 1405, 4263, 4262, 1145, 1145, 4079, 4122,
	3892, 3784, 1145, 1145, 2048, 3572, 3569, 1145, 1145, 4027,
	1145, 4050, 1907, 1906, 4031, 1145, 3557, 3558, 4924, 3559,
	3560, 3561, 4886, 4697, 4696, 4695, 1145, 4034, 4634, 4633,
	4588, 4499, 4466, 4411, 4408, 4406, 4058, 4302, 4288, 3396,
	4057, 4052, 1145, 4232, 3988, 4067, 4181, 4078, 4060, 4014,
	3987, 4091, 3933, 4120, 4068, 4069, 4049, 4089, 4073, 4062,
	3925, 3639, 4090, 4107, 4076, 4070, 4077, 3638, 3500, 4074,
	3452, 3187, 3179, 3156, 3155, 3154, 4108, 3153, 3079, 3052,
	2916, 2853, 2849, 2838, 2837, 2826, 2565, 1335, 2438, 3394,
	3401, 2409, 2402, 2401, 2400, 1265, 2399, 2398, 4101, 2309,
	2283, 4116, 2279, 1267, 2278, 2277, 2276, 1153, 2275, 2084,
	2083, 1267, 2082, 3485, 2080, 1405, 1405, 2019, 1405, 1771,
	1770, 1709, 1589, 3400, 2476, 1267, 2042, 1588, 1587, 1586,
	4161, 1585, 1584, 1583, 1578, 1574, 1564, 1564, 1572, 1571,
	1514, 1513, 1512, 1396, 1395, 2036, 1394, 1405, 1393, 1392,
	2299, 1356, 1312, 271, 271, 271, 1311, 701, 702, 1310,
	717, 701, 717, 727, 1309, 1308, 767, 1307, 2045, 3417,
	787, 1306, 1267, 1021, 1267, 793, 4187, 4188, 1304, 4146,
	1299, 1298, 271, 4096, 1297, 1296, 1295, 899, 8, 1225,
	2122, 2036, 2036, 1077, 1044, 1019, 4222, 1346, 4164, 4166,
	1030, 4235, 4221, 906, 4610, 4211, 4210, 1405, 4209, 1346,
	271, 2434, 1346, 4237, 4238, 93, 4218, 1580, 4218, 1079,
	2036, 2036, 861, 1405, 4160, 4158, 4159, 4153, 4163, 87,
	2235, 3397, 3398, 3399, 3932, 4814, 998, 1262, 4170, 4736,
	4638, 4191, 4157, 4173, 1555, 4267, 869, 4269, 4718, 4236,
	4162, 4028, 3502, 2036, 3000, 4179, 1261, 4169, 2383, 1710,
	2385, 1564, 1564, 4193, 3412, 1078, 2798, 182, 4185, 4685,
	2733, 4177, 4130, 3285, 4578, 4381, 2639, 1911, 3366, 1263,
	1263, 1346, 89, 4292, 1129, 1175, 1265, 4168, 4298, 4297,
	4195, 3917, 4256, 1405, 1265, 1022, 3120, 4295, 1564, 4270,
	4294, 2033, 2035, 1093, 4251, 2045, 4261, 1408, 1265, 4758,
	2133, 1020, 1135, 2149, 2142, 2839, 4183, 2715, 1152, 4286,
	1149, 2037, 1023, 1267, 2039, 1151, 1150, 2038, 1931, 1148,
	2032, 4289, 4038, 4331, 4317, 1564, 1564, 1564, 1564, 1564,
	3099, 701, 701, 3665, 1630, 4254, 1628, 4351, 1000, 271,
	1405, 4348, 4287, 2137, 4320, 1265, 2559, 1265, 4279, 4278,
	2623, 3274, 1145, 1145, 1145, 1904, 1109, 4218, 4280, 1131,
	2620, 4332, 1288, 1120, 4293, 1024, 4326, 4285, 4319, 1108,
	1405, 4308, 3392, 3371, 3652, 1145, 3875, 4335, 1145, 1145,
	2471, 879, 3320, 2626, 1279, 2739, 2731, 2727, 1145, 4241,
	3462, 2048, 3089, 1785, 4240, 4395, 1145, 1145, 4333, 1882,
	3100, 4250, 1390, 1113, 4253, 2557, 1895, 4249, 4340, 3252,
	4252, 2481, 3659, 1405, 3415, 1564, 4357, 2832, 1262, 4743,
	4373, 3792, 3185, 4355, 2287, 1241, 1262, 1240, 4354, 1286,
	1239, 4361, 4724, 4721, 4362, 2225, 4071, 1261, 3614, 1405,
	1262, 4368, 2125, 2877, 2569, 1261, 3622, 1145, 1125, 1508,
	2427, 3377, 3684, 1591, 792, 4443, 1137, 1867, 3021, 1261,
	1145, 3020, 4599, 1375, 1373, 1372, 1371, 4895, 4961, 1145,
	3928, 2299, 3927, 4316, 2048, 4378, 3926, 238, 3220, 1806,
	1798, 235, 237, 1145, 236, 4303, 1145, 1262, 4390, 1262,
	3880, 1335, 4401, 4402, 1021, 3421, 1265, 4818, 4417, 3950,
	1145, 4384, 3605, 2036, 23, 22, 1261, 1405, 1261, 1403,
	21, 116, 4446, 2042, 1346, 42, 20, 155, 133, 152,
	151, 125, 150, 149, 1564, 1564, 4418, 148, 147, 154,
	146, 145, 140, 4416, 144, 143, 4425, 142, 141, 4379,
	4404, 139, 4405, 137, 138, 132, 136, 1263, 135, 134,
	131, 130, 129, 128, 127, 4457, 4458, 126, 124, 4489,
	4477, 2738, 156, 3616, 123, 122, 121, 4465, 120, 1405,
	119, 118, 1564, 4468, 4511, 117, 780, 4502, 781, 61,
	60, 4463, 4379, 115, 113, 4473, 114, 4475, 19, 4476,
	1267, 1267, 40, 4467, 4474, 14, 2042, 65, 66, 4535,
	18, 13, 35, 92, 105, 104, 103, 4530, 2495, 4481,
	3149, 36, 1145, 1145, 4492, 4494, 1022, 4491, 4554, 4555,
	2738, 101, 4500, 100, 34, 17, 16, 4519, 15, 1145,
	2048, 98, 4515, 97, 4218, 4218, 4510, 96, 1262, 33,
	2036, 1076, 31, 1023, 4533, 4531, 4495, 11, 9, 37,
	1346, 1992, 4527, 1346, 12, 4567, 4568, 1261, 5, 4532,
	187, 186, 4538, 189, 4552, 4537, 4035, 4335, 1145, 185,
	1145, 188, 1145, 91, 184, 183, 2495, 90, 29, 10,
	179, 4512, 1267, 4024, 82, 181, 180, 178, 177, 4566,
	176, 4587, 2045, 83, 4589, 1145, 1024, 1267, 80, 4594,
	175, 86, 174, 4539, 81, 85, 84, 27, 6, 64,
	7, 4363, 3712, 4558, 108, 109, 4480, 38, 78, 77,
	4455, 76, 4479, 75, 26, 4622, 4218, 4576, 63, 25,
	173, 4590, 4593, 4570, 220, 219, 218, 217, 1263, 2168,
	216, 4218, 4092, 215, 214, 4621, 1263, 213, 208, 1145,
	1145, 207, 2042, 212, 4614, 4615, 210, 4642, 209, 1145,
	1263, 211, 206, 230, 1267, 229, 223, 1267, 222, 228,
	227, 1564, 226, 1265, 1265, 2045, 225, 224, 4629, 221,
	3210, 1564, 1564, 232, 205, 4631, 204, 203, 201, 197,
	196, 200, 4662, 202, 199, 4664, 198, 4630, 1564, 4636,
	195, 1281, 2738, 231, 72, 171, 172, 1263, 4218, 1263,
	71, 4218, 1145, 1145, 4676, 170, 4654, 169, 4649, 168,
	4657, 4656, 1145, 4661, 4681, 167, 4682, 166, 165, 164,
	4650, 4651, 4670, 70, 1301, 4515, 4469, 24, 4672, 4674,
	4675, 2, 1, 2738, 4669, 0, 271, 4673, 271, 271,
	0, 1330, 271, 1340, 4680, 4689, 4679, 0, 0, 0,
	0, 2733, 2733, 0, 1354, 1265, 1145, 1145, 2738, 1145,
	4690, 0, 787, 1346, 0, 787, 1346, 0, 4694, 1509,
	1265, 4711, 0, 0, 0, 0, 0, 0, 0, 4715,
	0, 4723, 4726, 0, 0, 4706, 4707, 0, 0, 271,
	4745, 271, 271, 1330, 4738, 271, 271, 4741, 4714, 4727,
	1340, 4713, 4731, 0, 4733, 1262, 1262, 4734, 0, 0,
	4763, 4732, 0, 0, 271, 0, 1533, 1145, 1145, 1145,
	0, 2045, 0, 4766, 1261, 1261, 0, 0, 4767, 0,
	0, 0, 1553, 4748, 0, 4761, 0, 1265, 4728, 1568,
	1265, 0, 4754, 0, 0, 0, 0, 4762, 1263, 0,
	1145, 0, 0, 0, 0, 4798, 0, 0, 1593, 0,
	0, 1340, 0, 0, 4799, 271, 271, 0, 1330, 4783,
	4782, 4803, 4780, 4781, 0, 0, 0, 1335, 0, 0,
	0, 4821, 0, 0, 0, 0, 0, 0, 0, 787,
	0, 271, 271, 0, 0, 0, 0, 1262, 0, 0,
	0, 4844, 4832, 1656, 4830, 0, 0, 1145, 4817, 0,
	4828, 0, 1262, 1663, 4843, 4801, 1261, 0, 906, 0,
	4829, 4849, 0, 0, 0, 4836, 0, 2036, 4842, 0,
	4837, 1261, 4838, 2733, 2733, 2733, 2733, 0, 0, 4865,
	4301, 0, 4813, 0, 4816, 4855, 4856, 0, 0, 4861,
	0, 4859, 4857, 4318, 0, 0, 0, 0, 0, 4870,
	2168, 0, 1267, 4723, 1267, 4869, 4726, 4868, 0, 4888,
	4745, 4872, 0, 0, 0, 4878, 4339, 4889, 4642, 1262,
	0, 0, 1262, 4902, 4883, 4887, 4900, 3704, 4896, 0,
	4890, 4897, 4892, 0, 4891, 0, 271, 0, 1261, 0,
	3702, 1261, 0, 0, 4915, 4901, 4218, 1346, 4218, 3695,
	2036, 0, 0, 4914, 4840, 4841, 4917, 0, 271, 0,
	4846, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4932, 4923, 4928, 0, 0, 1145, 1145,
	4930, 0, 0, 4925, 0, 4933, 0, 1145, 4921, 1145,
	1145, 4926, 4936, 0, 0, 0, 0, 0, 4942, 4946,
	0, 4952, 0, 0, 0, 4949, 4957, 0, 0, 4955,
	4950, 4956, 4954, 0, 0, 0, 4953, 3101, 4951, 0,
	0, 0, 0, 4965, 4960, 4964, 0, 0, 0, 4969,
	4973, 4967, 4943, 4944, 4970, 0, 4971, 0, 4966, 0,
	0, 0, 0, 4212, 4976, 0, 0, 0, 3697, 0,
	1145, 4981, 4978, 4983, 0, 4968, 0, 4973, 0, 4987,
	4984, 4980, 4986, 3696, 0, 1263, 1263, 0, 4977, 0,
	0, 4945, 0, 3249, 3250, 0, 0, 4205, 0, 0,
	0, 4198, 0, 0, 0, 1265, 0, 1265, 0, 0,
	0, 0, 0, 4982, 0, 0, 0, 0, 4196, 0,
	0, 0, 3584, 0, 0, 0, 2036, 4200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3609, 0, 4206, 0, 0, 0, 0, 0, 0, 0,
	0, 3626, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3693, 0, 1263, 0, 701,
	3323, 3324, 894, 3341, 3342, 3343, 0, 0, 0, 0,
	0, 0, 1263, 0, 4199, 0, 0, 0, 0, 0,
	271, 0, 271, 0, 0, 0, 271, 0, 0, 73,
	0, 897, 896, 0, 0, 3675, 3676, 0, 0, 1533,
	1330, 2012, 271, 0, 271, 2018, 74, 0, 0, 0,
	0, 271, 0, 717, 0, 0, 0, 0, 271, 3707,
	3323, 3324, 79, 3341, 3342, 3343, 0, 1262, 0, 1262,
	0, 0, 0, 2085, 0, 3338, 73, 0, 0, 1263,
	0, 0, 1263, 0, 0, 271, 1261, 0, 1261, 0,
	0, 0, 271, 74, 0, 3347, 3348, 3349, 3350, 0,
	0, 0, 88, 0, 0, 0, 0, 0, 0, 79,
	0, 0, 0, 0, 0, 3703, 3698, 3699, 3700, 3701,
	0, 0, 0, 0, 0, 787, 0, 0, 0, 1815,
	1816, 0, 0, 0, 0, 3338, 0, 0, 0, 0,
	0, 0, 0, 900, 0, 0, 0, 0, 0, 88,
	0, 0, 1846, 0, 0, 49, 0, 110, 0, 1818,
	0, 0, 94, 107, 0, 0, 0, 0, 0, 0,
	3329, 0, 0, 0, 0, 0, 0, 0, 4201, 0,
	273, 0, 0, 4202, 0, 1871, 0, 0, 0, 0,
	900, 0, 0, 4207, 1817, 0, 0, 4640, 0, 0,
	0, 0, 49, 0, 110, 0, 0, 0, 0, 94,
	107, 0, 3346, 0, 2733, 2733, 0, 0, 0, 0,
	0, 4660, 95, 0, 0, 0, 0, 0, 0, 0,
	3329, 0, 0, 0, 0, 4204, 3345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4208, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 3339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 271, 0, 3345, 0, 0, 1823,
	0, 0, 0, 0, 2733, 2733, 2733, 2733, 2733, 2733,
	2733, 2733, 2733, 2733, 2733, 2733, 2733, 2733, 2733, 2733,
	2733, 2733, 2733, 2733, 0, 2733, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3339, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 1847,
	0, 0, 0, 1868, 4749, 0, 0, 0, 271, 0,
	4751, 0, 271, 0, 0, 0, 0, 0, 271, 0,
	99, 0, 0, 0, 271, 1107, 0, 0, 0, 0,
	0, 0, 4203, 0, 0, 0, 0, 1263, 0, 1263,
	271, 0, 271, 0, 0, 0, 701, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	787, 0, 0, 1868, 906, 0, 0, 99, 0, 0,
	0, 4213, 4214, 0, 0, 190, 102, 0, 0, 106,
	0, 3340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 1330, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 239, 0, 0, 0, 0,
	787, 0, 0, 901, 0, 0, 0, 271, 153, 0,
	0, 0, 190, 102, 0, 2382, 106, 0, 0, 0,
	271, 271, 1868, 271, 0, 271, 0, 271, 0, 271,
	0, 3340, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 239, 241, 0, 0, 3984, 0, 0, 0,
	901, 0, 0, 0, 2419, 153, 0, 2420, 0, 2421,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 157,
	0, 271, 271, 271, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 0, 0, 0,
	241, 0, 240, 0, 0, 0, 0, 0, 767, 0,
	1839, 0, 787, 0, 0, 233, 0, 0, 0, 0,
	0, 3335, 3336, 3337, 234, 0, 157, 0, 3334, 3332,
	3333, 3325, 3326, 3327, 3328, 3330, 3331, 0, 0, 0,
	0, 194, 4064, 4065, 4066, 0, 3748, 3749, 0, 240,
	0, 895, 0, 0, 0, 0, 0, 0, 0, 2345,
	4080, 4081, 233, 0, 0, 0, 0, 0, 1870, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3335, 3336, 3337, 0, 0, 0, 0, 3334, 3332,
	3333, 3325, 3326, 3327, 3328, 3330, 3331, 0, 193, 0,
	0, 0, 0, 0, 0, 2571, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3812, 3813, 3814, 3815,
	3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825,
	3826, 3827, 3828, 3829, 3830, 3831, 0, 3835, 1826, 1827,
	1819, 1820, 1821, 1822, 1824, 1825, 1815, 1816, 0, 0,
	0, 0, 0, 73, 0, 0, 701, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	74, 271, 0, 1815, 1816, 0, 1818, 0, 0, 0,
	701, 0, 0, 0, 0, 0, 79, 271, 0, 701,
	0, 0, 0, 0, 0, 0, 1846, 0, 0, 0,
	0, 271, 1871, 1818, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 1340, 0, 0, 0, 88, 0, 0, 1871,
	0, 0, 0, 0, 0, 4175, 4176, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 900, 0, 0,
	271, 1340, 0, 0, 0, 717, 0, 0, 0, 2852,
	0, 110, 0, 0, 0, 271, 94, 107, 271, 0,
	0, 0, 271, 0, 271, 0, 0, 0, 0, 1330,
	0, 271, 271, 0, 1340, 1340, 2868, 0, 0, 0,
	0, 271, 4111, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1842, 1843, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2905, 0, 0,
	2345, 0, 0, 0, 0, 1845, 1847, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 3323, 3324, 0, 3341, 3342, 3343, 0, 0,
	0, 0, 1845, 1847, 271, 1107, 1107, 1107, 0, 0,
	0, 0, 0, 0, 4112, 787, 0, 0, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 1489, 1832, 1833,
	0, 0, 0, 0, 1838, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 4356, 0, 4358, 4359, 4360, 1815,
	1816, 0, 1848, 1849, 1850, 1859, 1860, 1861, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 3338, 0, 271,
	3041, 1852, 1846, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 1533, 0, 0, 271,
	0, 271, 0, 0, 99, 1871, 0, 0, 271, 1868,
	0, 0, 0, 0, 1817, 0, 0, 0, 3084, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 2905, 0,
	701, 0, 0, 1834, 4407, 0, 1868, 0, 0, 3113,
	906, 0, 2905, 2905, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 190,
	102, 0, 3329, 106, 271, 0, 2733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 271, 1330, 271, 0, 1839, 1257, 239,
	0, 1844, 0, 0, 1100, 1340, 271, 901, 0, 1330,
	0, 1330, 153, 1330, 0, 0, 0, 0, 0, 1840,
	1841, 1842, 1843, 0, 1839, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 2733, 0, 0, 3345, 0,
	0, 0, 0, 0, 266, 266, 697, 241, 0, 0,
	0, 0, 0, 4493, 0, 1870, 0, 271, 271, 271,
	271, 1330, 0, 0, 1330, 0, 271, 0, 1856, 271,
	0, 1866, 0, 157, 0, 0, 0, 0, 1845, 1847,
	3339, 0, 1870, 0, 0, 0, 0, 0, 194, 0,
	0, 0, 0, 0, 0, 1862, 240, 1863, 0, 0,
	271, 0, 0, 0, 1832, 1833, 0, 0, 271, 233,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 193, 0, 1819, 1820, 1821,
	1822, 1824, 1825, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 1831,
	0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825,
	0, 1815, 1816, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 1846, 0, 0, 0, 0, 0,
	0, 1818, 1868, 0, 0, 0, 0, 2733, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3340, 1533, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 2733, 0,
	0, 0, 0, 0, 0, 1834, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2733, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2345, 2345, 0, 0, 0, 0, 0, 1857, 0, 0,
	3751, 0, 0, 0, 0, 0, 0, 2345, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1842, 1843, 0, 0, 0, 1870, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 4387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3335, 3336, 3337, 0, 0, 271, 0,
	3334, 3332, 3333, 3325, 3326, 3327, 3328, 3330, 3331, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 701,
	1845, 1847, 0, 0, 701, 0, 0, 701, 0, 0,
	701, 701, 0, 0, 1107, 0, 701, 4428, 0, 0,
	1855, 0, 1489, 0, 271, 0, 1832, 1833, 0, 0,
	1829, 1830, 1836, 1858, 1835, 1831, 271, 1828, 1826, 1827,
	1819, 1820, 1821, 1822, 1824, 1825, 0, 0, 0, 0,
	4139, 0, 0, 0, 4138, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 1815, 1816, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 271,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 1846,
	0, 0, 0, 0, 0, 0, 1818, 0, 3323, 3324,
	0, 3341, 3342, 3343, 0, 0, 0, 0, 2905, 2905,
	271, 0, 2012, 0, 0, 0, 0, 0, 2905, 0,
	3757, 2018, 1871, 0, 0, 0, 0, 0, 0, 2905,
	2018, 1817, 2905, 2018, 1868, 0, 2018, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 271, 2012, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 3323, 3324, 1489, 3341, 3342, 3343, 0,
	0, 0, 0, 3338, 0, 2012, 0, 271, 0, 3547,
	3547, 0, 0, 0, 1330, 3756, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4575,
	0, 0, 0, 0, 2905, 0, 2905, 0, 3573, 2905,
	2012, 0, 1839, 2905, 2012, 0, 0, 787, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1842, 1843,
	0, 0, 0, 0, 0, 0, 1823, 0, 3338, 0,
	4598, 0, 1330, 0, 0, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4620, 0, 271, 3329, 3610,
	1870, 0, 3612, 2905, 0, 0, 271, 0, 0, 0,
	271, 0, 0, 1340, 0, 1845, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 3084, 0, 0, 1330, 0, 271, 0,
	0, 2905, 0, 701, 0, 0, 0, 0, 0, 0,
	2905, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3329, 3345, 0, 0, 0, 0, 0,
	0, 271, 3084, 0, 1838, 3084, 0, 1316, 0, 1316,
	1316, 0, 0, 0, 0, 0, 1835, 1831, 0, 1828,
	1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 3339, 0, 0, 0,
	0, 3718, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3345,
	1400, 3724, 0, 0, 1533, 0, 1507, 1330, 271, 0,
	271, 0, 0, 0, 1815, 1816, 1330, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1846, 73, 0,
	0, 3339, 0, 0, 1818, 0, 271, 0, 1489, 0,
	0, 1868, 0, 1815, 1816, 74, 1848, 1849, 1850, 1859,
	1860, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 79, 0, 0, 1844, 1852, 1846, 0, 0, 1817,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 1837,
	0, 0, 1865, 0, 0, 0, 0, 1839, 1834, 0,
	0, 0, 1645, 1646, 3790, 0, 0, 0, 0, 1871,
	0, 88, 0, 0, 0, 0, 1868, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 3340,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 900, 3746, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 49, 0, 110, 0, 0, 0,
	0, 94, 107, 0, 1840, 1841, 1842, 1843, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3340, 0, 0, 0, 0, 0,
	0, 271, 271, 0, 0, 0, 0, 1762, 0, 0,
	0, 1489, 0, 1840, 1841, 1842, 1843, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 701, 701, 0, 0,
	0, 95, 0, 1845, 1847, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 1828, 1826, 1827, 1819, 1820, 1821,
	1822, 1824, 1825, 0, 0, 0, 0, 0, 0, 1832,
	1833, 0, 1856, 0, 0, 1866, 0, 0, 0, 3335,
	3336, 3337, 1845, 1847, 0, 0, 3334, 3332, 3333, 3325,
	3326, 3327, 3328, 3330, 3331, 0, 0, 0, 0, 1862,
	0, 1863, 1838, 0, 0, 0, 0, 1851, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 3335, 3336, 3337, 0, 0, 0,
	787, 3334, 3332, 3333, 3325, 3326, 3327, 3328, 3330, 3331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 3547, 0, 0, 0, 1864, 0, 99,
	0, 0, 0, 1489, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 73, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 2012, 0,
	271, 74, 0, 0, 717, 717, 1340, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 79, 0, 271,
	0, 0, 0, 0, 190, 102, 0, 0, 106, 271,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 271,
	0, 0, 0, 0, 271, 0, 0, 2002, 0, 271,
	1489, 1844, 0, 0, 239, 0, 0, 88, 0, 0,
	0, 0, 901, 2013, 0, 1507, 0, 153, 2905, 271,
	0, 0, 0, 0, 1839, 0, 0, 0, 3113, 3113,
	0, 0, 0, 0, 906, 906, 2905, 0, 0, 0,
	3084, 3084, 0, 1870, 906, 2905, 0, 0, 900, 0,
	0, 1857, 241, 0, 0, 0, 1316, 0, 0, 0,
	49, 0, 110, 1507, 0, 0, 0, 94, 107, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 157, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 194, 1851, 0, 0, 0, 0, 0,
	0, 240, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 95, 0, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 0, 0, 0, 0, 4131, 0, 0,
	1641, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835, 1831,
	0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825,
	0, 0, 0, 0, 3298, 0, 0, 0, 3299, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 1533, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1340, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 2905, 2905,
	0, 3547, 2905, 0, 0, 99, 0, 0, 0, 4220,
	1851, 4220, 1533, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 1851, 2905, 0, 2018, 0, 0, 0, 1533,
	1533, 271, 2012, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2012, 0, 271, 2012, 0,
	271, 0, 3547, 0, 0, 0, 0, 0, 0, 2285,
	190, 102, 0, 2292, 106, 0, 0, 2905, 0, 2905,
	271, 0, 0, 0, 0, 2305, 0, 0, 0, 0,
	0, 1815, 1816, 0, 0, 0, 0, 1859, 1860, 1861,
	239, 2317, 0, 2317, 0, 0, 0, 1970, 901, 2324,
	0, 0, 0, 153, 1846, 2905, 0, 0, 0, 0,
	4305, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 271, 1851, 0, 0, 0, 0, 1851, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 1871, 241, 0,
	1851, 0, 0, 0, 2292, 1851, 1817, 2354, 0, 0,
	0, 0, 800, 0, 0, 0, 1837, 0, 0, 0,
	4220, 0, 0, 1533, 157, 1834, 0, 0, 2374, 0,
	0, 0, 0, 0, 0, 0, 0, 811, 0, 194,
	0, 0, 2390, 0, 2392, 0, 2394, 240, 2396, 0,
	2397, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	1851, 0, 0, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2424, 2425, 2426, 0, 1639, 0, 0, 0,
	0, 1840, 1841, 1842, 1843, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 0, 0, 0, 0,
	805, 0, 0, 0, 0, 0, 0, 817, 0, 0,
	0, 0, 2905, 0, 2018, 0, 0, 4420, 0, 0,
	1856, 810, 1092, 1866, 0, 1489, 271, 0, 0, 0,
	1845, 1847, 0, 0, 0, 0, 4444, 0, 4444, 0,
	1489, 0, 0, 0, 0, 0, 1815, 1816, 0, 1848,
	1849, 1850, 1859, 1860, 1861, 0, 1832, 1833, 0, 0,
	0, 0, 787, 0, 0, 0, 1489, 0, 1852, 1846,
	809, 0, 0, 3547, 1854, 1330, 1818, 1851, 1851, 1851,
	1851, 1851, 1851, 1851, 1851, 1865, 0, 762, 0, 1838,
	2012, 0, 271, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 1871, 0, 1107, 0, 0, 0, 0, 0,
	1851, 1817, 807, 0, 0, 0, 0, 4420, 1107, 0,
	0, 1837, 0, 0, 0, 2905, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4524, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1533, 2737, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 4220, 4220, 1851,
	0, 816, 0, 0, 0, 1851, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2805, 0, 0, 0, 1840, 1841, 1842, 1843,
	0, 3790, 0, 1489, 0, 0, 1823, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3547, 4592, 0, 0, 0, 0, 0, 0, 4420,
	0, 0, 1839, 0, 0, 0, 0, 802, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 1866, 4220,
	0, 0, 0, 0, 0, 1845, 1847, 0, 0, 1857,
	0, 0, 0, 1489, 4220, 0, 0, 0, 806, 0,
	0, 0, 1862, 0, 1863, 0, 2854, 0, 0, 1316,
	0, 1832, 1833, 1316, 0, 1316, 271, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 717, 1854,
	0, 0, 2305, 0, 0, 761, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 4305, 0, 0, 0, 0,
	812, 0, 0, 0, 0, 0, 804, 0, 0, 0,
	0, 4220, 0, 271, 4220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2018, 0, 0, 0, 2708, 2709,
	2710, 2711, 2704, 2705, 2706, 2707, 0, 0, 0, 0,
	1864, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 1533, 801, 0, 1858, 1835, 1831, 1853, 1828,
	1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 808, 0, 0, 0, 0, 0, 0, 4704, 1489,
	0, 0, 1489, 0, 0, 763, 0, 1507, 0, 0,
	0, 0, 0, 0, 4444, 0, 803, 271, 0, 0,
	2684, 2685, 2686, 2687, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 814,
	815, 0, 2905, 2696, 2697, 2698, 2699, 2692, 2693, 2694,
	2695, 2700, 2701, 2702, 2703, 0, 0, 1839, 0, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	2292, 0, 0, 0, 0, 0, 0, 0, 1489, 2305,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	3790, 0, 0, 0, 0, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1533, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 2680, 2681, 2682, 2683, 2688, 2689, 2690, 2691, 0,
	0, 0, 0, 0, 0, 3147, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3158, 0, 3161, 0, 0, 0,
	0, 0, 0, 0, 0, 1349, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4420, 0, 0, 0, 0, 1855, 0, 0,
	0, 1851, 1092, 1092, 1092, 0, 0, 1829, 1830, 1836,
	1858, 1835, 1831, 0, 1828, 1826, 1827, 1819, 1820, 1821,
	1822, 1824, 1825, 0, 0, 3255, 0, 1851, 3193, 1507,
	3195, 1507, 2905, 0, 0, 0, 0, 3201, 0, 4220,
	1489, 4220, 0, 0, 1533, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1535, 0, 1541, 0,
	1547, 0, 0, 0, 0, 1851, 0, 0, 0, 1851,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 3229,
	0, 0, 0, 1851, 0, 0, 0, 0, 0, 0,
	1533, 0, 1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851,
	1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851,
	1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851,
	1851, 1851, 1851, 1851, 1851, 1851, 1851, 1851, 0, 1647,
	3113, 1652, 0, 1851, 0, 1851, 1851, 1851, 1851, 2905,
	0, 0, 0, 0, 1665, 0, 1670, 2737, 2737, 0,
	0, 0, 0, 0, 0, 3113, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 731, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 1735, 0, 0, 1741, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 732, 0, 0, 0,
	0, 0, 0, 1851, 0, 0, 1851, 733, 0, 1851,
	0, 0, 1851, 0, 0, 0, 0, 0, 1851, 1851,
	1851, 1851, 1851, 1851, 1851, 0, 0, 0, 734, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	753, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 735, 0, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 0, 0, 0, 1851, 0, 0, 3344, 0, 2737,
	2737, 2737, 2737, 0, 736, 0, 1851, 1489, 1851, 0,
	0, 0, 0, 1851, 0, 0, 1892, 0, 0, 0,
	0, 0, 1905, 0, 0, 0, 0, 737, 0, 0,
	738, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 762, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 0, 0, 0, 0, 3430, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 1816, 0, 1848, 1849, 1850,
	1859, 1860, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1316, 1846, 0, 0,
	1507, 1507, 0, 0, 1818, 0, 0, 1964, 1964, 1964,
	0, 749, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 3475, 0, 0, 0, 1489, 1489, 0, 1489, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 3524, 3526, 0, 0, 2305, 0, 0, 0,
	0, 0, 759, 0, 740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 760, 0, 741, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1842, 1843, 0, 0,
	0, 0, 0, 1489, 1823, 0, 0, 0, 0, 0,
	0, 1092, 0, 0, 0, 761, 0, 0, 0, 0,
	0, 0, 0, 742, 0, 0, 0, 0, 757, 758,
	755, 0, 0, 0, 0, 0, 750, 0, 0, 743,
	0, 0, 0, 1856, 0, 0, 1866, 0, 0, 1851,
	1851, 0, 1851, 1845, 1847, 0, 0, 3623, 0, 0,
	0, 3627, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 1863, 1489, 0, 0, 0, 0, 0, 1832,
	1833, 744, 0, 751, 0, 0, 0, 0, 0, 0,
	0, 0, 745, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 746, 0, 0, 0,
	0, 754, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3680, 0, 0, 763, 0, 0, 0, 1141,
	1489, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	1489, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 270, 270, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 1868, 0, 3728,
	0, 1507, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1489, 830, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3741, 0, 1489,
	0, 0, 830, 0, 0, 0, 0, 1851, 1851, 0,
	2737, 2737, 1844, 0, 1851, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3344, 3344, 0, 0, 1851, 1851,
	0, 0, 0, 0, 0, 1839, 0, 0, 1851, 0,
	0, 0, 0, 0, 0, 0, 1107, 0, 0, 0,
	0, 0, 1851, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 1851, 0, 0, 1489, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
	2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737, 2737,
	0, 2737, 3344, 3344, 3344, 3344, 0, 0, 0, 1489,
	0, 0, 2406, 0, 0, 0, 0, 0, 0, 0,
	0, 1264, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 2432, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2470, 0, 2474, 0, 0, 0, 0, 0, 0,
	2488, 0, 0, 0, 0, 0, 0, 2497, 2498, 2499,
	2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509,
	2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 0, 2538, 0, 2540, 2541, 2542, 2543,
	0, 0, 1815, 1816, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 0, 2567, 0, 0, 1846, 1177, 0, 0, 0,
	0, 0, 1818, 0, 1892, 0, 0, 0, 2618, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1107,
	1107, 0, 0, 0, 2648, 2651, 2654, 2657, 1871, 0,
	2663, 2664, 2665, 2666, 2667, 2668, 2669, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 2729, 0,
	2741, 2743, 2748, 0, 0, 0, 0, 0, 0, 0,
	0, 2305, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2305, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4023, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3745, 0, 0, 0, 2305, 0, 0, 0, 0,
	4041, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1842, 1843, 0, 1107, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 1816, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 1847, 4094, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1846, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 0, 0, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1851,
	0, 0, 1851, 3344, 3344, 1851, 1871, 0, 1268, 1851,
	0, 0, 0, 0, 0, 1817, 1851, 0, 0, 0,
	1838, 0, 0, 0, 0, 1837, 0, 0, 0, 1851,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1851, 1851, 1851, 1851, 0, 0, 0,
	0, 0, 1851, 0, 1851, 0, 0, 3344, 3344, 3344,
	3344, 3344, 3344, 3344, 3344, 3344, 3344, 3344, 3344, 3344,
	3344, 3344, 3344, 3344, 3344, 3344, 3344, 0, 0, 3238,
	3344, 0, 0, 1851, 1851, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 0,
	1840, 1841, 1842, 1843, 1851, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	270, 270, 0, 0, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3044, 3045, 0, 3047, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 0, 0, 1845,
	1847, 0, 0, 1839, 0, 1851, 0, 0, 0, 0,
	0, 270, 0, 270, 270, 0, 0, 270, 270, 0,
	0, 0, 4239, 0, 0, 1832, 1833, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 830, 0, 2305, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 1870, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2305, 270, 270, 0, 3177, 0, 0, 0,
	0, 0, 4327, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 0, 1835, 1831, 0,
	1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1872, 1873, 0, 1844, 0,
	0, 0, 0, 0, 1851, 1851, 0, 0, 0, 1851,
	1851, 0, 0, 1851, 1851, 0, 0, 0, 1851, 0,
	0, 1839, 1851, 0, 0, 0, 0, 1851, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2737, 0, 0, 0, 0, 0, 0, 0,
	270, 3232, 3233, 0, 0, 0, 0, 3239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3253, 3254, 0, 1870,
	0, 0, 2618, 0, 0, 1130, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4430, 0, 0,
	0, 2737, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3277, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3289, 0, 0, 2305, 0, 1835, 1831, 0, 1828, 1826,
	1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 4565, 1507,
	0, 0, 2748, 2748, 2748, 0, 0, 0, 1067, 1851,
	1851, 1851, 1986, 0, 1264, 0, 0, 1964, 270, 1087,
	1851, 1851, 3344, 2737, 0, 3382, 0, 0, 0, 1851,
	0, 0, 1851, 0, 270, 1986, 270, 0, 0, 0,
	0, 0, 1268, 830, 0, 0, 0, 0, 0, 1268,
	830, 0, 0, 1815, 1816, 0, 1848, 1849, 1850, 1859,
	1860, 1861, 0, 3344, 2737, 1268, 0, 1251, 0, 0,
	0, 0, 0, 0, 0, 1852, 1846, 270, 0, 0,
	1851, 0, 0, 1818, 270, 0, 0, 0, 1851, 2737,
	0, 0, 1865, 0, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 1837, 0,
	0, 1092, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 1092, 0, 0, 0, 0,
	0, 0, 0, 0, 4663, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3505, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3344, 0, 0, 1840, 1841, 1842, 1843, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 3344, 0, 0, 1851, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4717, 0,
	0, 0, 0, 0, 0, 3344, 0, 0, 0, 0,
	0, 0, 1856, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 1845, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 830, 0, 0, 1862,
	0, 1863, 0, 1851, 4756, 0, 0, 0, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 270, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 0, 270, 0, 0, 0,
	0, 4822, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 270, 0, 270, 0, 0, 0, 0, 0,
	270, 0, 0, 0, 0, 1853, 0, 0, 0, 1268,
	0, 1268, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 1851, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 270, 2049, 1851, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 830, 270, 0, 270, 0, 270, 0, 270,
	0, 270, 2488, 0, 1839, 0, 0, 0, 3743, 3744,
	0, 0, 3747, 0, 0, 0, 3750, 0, 0, 0,
	0, 0, 0, 0, 0, 3754, 0, 0, 0, 0,
	0, 1857, 0, 0, 3761, 0, 0, 0, 0, 3382,
	0, 0, 0, 270, 270, 270, 270, 0, 0, 0,
	0, 0, 0, 0, 3774, 0, 0, 0, 1268, 0,
	0, 0, 1870, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3797, 3798, 0, 3799, 3800, 3801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 0, 0, 3807, 1851, 0, 0, 3809,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3838, 3839, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835, 1831,
	3850, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825,
	1815, 1816, 0, 0, 2614, 3859, 0, 0, 2615, 0,
	0, 0, 0, 0, 0, 1815, 1816, 0, 0, 0,
	0, 0, 0, 1846, 0, 112, 0, 112, 0, 112,
	1818, 1268, 1268, 0, 0, 0, 0, 0, 1846, 0,
	0, 1268, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 0, 0, 0, 1817, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 1837, 0, 0, 0, 0,
	1817, 1087, 112, 112, 1834, 0, 0, 3909, 0, 0,
	1837, 0, 0, 1264, 0, 0, 0, 0, 112, 1834,
	112, 0, 0, 0, 0, 3920, 0, 0, 0, 1264,
	0, 0, 0, 112, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3949,
	0, 0, 0, 270, 0, 0, 1268, 0, 1268, 0,
	1268, 0, 0, 0, 3231, 0, 0, 0, 0, 0,
	1840, 1841, 1842, 1843, 0, 0, 0, 0, 1268, 1268,
	1823, 0, 0, 0, 0, 1840, 1841, 1842, 1843, 0,
	112, 1268, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 270, 1268, 0, 1268, 1268, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	270, 0, 0, 0, 270, 0, 270, 0, 0, 1845,
	1847, 0, 0, 270, 270, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 1845, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1964, 0, 0, 0, 1067, 0, 0, 1838, 0,
	4059, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	270, 0, 0, 1838, 0, 0, 1885, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1891, 0, 270, 0, 1897, 0,
	0, 0, 2049, 2049, 1268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4109, 4110, 0, 0, 0, 1868, 4114,
	4115, 0, 0, 0, 4118, 4119, 0, 0, 0, 0,
	0, 830, 4123, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 4132,
	0, 270, 0, 830, 0, 0, 0, 1268, 0, 0,
	270, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 1984, 0,
	1987, 0, 112, 0, 1815, 1816, 1839, 1848, 1849, 1850,
	1859, 1860, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 1846, 0, 0,
	0, 0, 0, 0, 1818, 0, 270, 0, 0, 0,
	1268, 0, 0, 1865, 0, 0, 0, 1268, 0, 1870,
	0, 0, 0, 0, 0, 270, 1268, 270, 0, 0,
	1871, 0, 0, 0, 1870, 0, 0, 0, 270, 1817,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	270, 270, 270, 0, 0, 0, 0, 0, 270, 0,
	0, 270, 0, 0, 0, 1835, 1831, 0, 1828, 1826,
	1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 0, 0,
	1835, 1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822,
	1824, 1825, 270, 0, 1840, 1841, 1842, 1843, 0, 0,
	270, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 1866, 0, 0, 1268,
	0, 0, 0, 1845, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 1863, 0, 0, 850, 0, 0, 0, 1832,
	1833, 0, 0, 2049, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 852, 0, 1854, 0, 0,
	853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 4374,
	4375, 4376, 0, 0, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 854,
	0, 871, 2488, 0, 0, 4385, 4386, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 4394, 4397, 0, 855, 0, 0, 0,
	0, 856, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 880, 0, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 878, 1087, 0, 1087, 0, 0,
	0, 0, 0, 1268, 0, 0, 0, 4445, 0, 0,
	0, 0, 0, 0, 0, 0, 4453, 851, 1268, 0,
	1268, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	4461, 0, 0, 1092, 0, 0, 0, 1268, 0, 0,
	858, 0, 0, 859, 0, 1839, 0, 4470, 0, 0,
	1264, 0, 0, 0, 0, 882, 0, 0, 0, 0,
	762, 0, 0, 0, 0, 0, 1264, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 1986, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 876, 0, 0, 270, 0, 0,
	0, 270, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1067, 0, 0, 1067, 1067, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 0, 0, 0, 860, 0, 0, 4137,
	0, 0, 0, 0, 0, 4597, 0, 862, 0, 4601,
	0, 0, 2556, 270, 270, 0, 0, 270, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 1087, 0, 0, 0, 0, 0, 863, 270,
	0, 0, 1891, 0, 0, 0, 1891, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 761, 0,
	0, 0, 0, 0, 0, 0, 1092, 1092, 0, 0,
	0, 849, 0, 873, 0, 0, 4658, 0, 0, 0,
	0, 0, 864, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 1251,
	0, 0, 0, 0, 0, 0, 0, 870, 0, 830,
	0, 0, 0, 0, 0, 1987, 0, 0, 270, 0,
	0, 0, 270, 0, 865, 0, 0, 0, 866, 885,
	2488, 884, 0, 0, 0, 867, 0, 0, 0, 4397,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 868,
	1264, 0, 0, 0, 877, 112, 0, 0, 0, 0,
	886, 0, 883, 0, 0, 0, 0, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1268, 0, 0, 4779, 4779, 4779, 0, 0, 0,
	270, 0, 270, 1268, 0, 0, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4802, 2049, 0,
	0, 0, 1268, 0, 0, 730, 0, 0, 270, 0,
	731, 0, 0, 0, 0, 0, 0, 1815, 1816, 0,
	1848, 1849, 1850, 1859, 1860, 1861, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1852,
	1846, 0, 0, 0, 0, 0, 0, 1818, 0, 732,
	0, 0, 0, 0, 4779, 0, 1865, 0, 0, 0,
	733, 0, 0, 0, 0, 0, 0, 0, 0, 2049,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 0,
	0, 734, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 1154, 0, 0, 0, 0, 0,
	0, 1834, 0, 753, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 112, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 272, 272, 0, 0, 0, 0, 736, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 1264, 1264, 112, 0, 0, 0, 272,
	737, 112, 0, 738, 0, 0, 0, 1840, 1841, 1842,
	1843, 0, 0, 0, 0, 4779, 4937, 1823, 0, 1268,
	762, 0, 0, 0, 4941, 0, 0, 272, 0, 0,
	0, 0, 0, 1268, 0, 1268, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 752, 0, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 1856, 0, 1268, 1866,
	0, 0, 0, 0, 0, 0, 1845, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 1862, 0, 1863, 0, 1268, 0, 0,
	0, 0, 1832, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 749, 0, 0, 0, 0, 0,
	1854, 0, 1268, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 740, 270, 0,
	0, 0, 0, 0, 0, 1268, 0, 0, 1268, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 270, 0, 0, 0, 760, 0, 741, 0,
	0, 0, 0, 2556, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 1891, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 2049, 270, 0, 761, 0,
	0, 270, 0, 0, 0, 1844, 742, 0, 0, 0,
	0, 757, 758, 755, 1268, 0, 0, 0, 0, 750,
	0, 1264, 743, 0, 0, 0, 0, 0, 1839, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2049, 2049, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 744, 0, 751, 0, 0, 0,
	2049, 2049, 0, 0, 270, 745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1870, 0, 0, 746,
	0, 0, 0, 0, 754, 0, 0, 0, 0, 0,
	0, 0, 0, 2049, 0, 0, 0, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 748,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1268, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 1829, 1830,
	1836, 1858, 1835, 1831, 0, 1828, 1826, 1827, 1819, 1820,
	1821, 1822, 1824, 1825, 0, 0, 1251, 0, 0, 0,
	0, 0, 3759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1251, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1264, 0, 0, 0, 0, 0, 0, 0,
	1264, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1986, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1986, 0, 1986, 1815, 1816, 0, 1848, 1849, 1850,
	1859, 1860, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 0, 0, 1852, 1846, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 270,
	0, 0, 270, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	1871, 0, 270, 0, 0, 0, 0, 0, 0, 1817,
	112, 112, 0, 112, 112, 112, 0, 0, 0, 1837,
	0, 0, 0, 2049, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 270, 1268, 0, 0, 0, 0, 0,
	0, 112, 112, 270, 112, 112, 112, 0, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	1268, 1268, 0, 272, 0, 272, 272, 0, 0, 272,
	0, 0, 1986, 0, 0, 0, 1268, 1268, 1268, 0,
	0, 0, 0, 0, 1840, 1841, 1842, 1843, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 1268, 0, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 1409, 272, 272,
	0, 1409, 272, 272, 0, 0, 0, 0, 0, 1268,
	0, 0, 0, 1856, 0, 0, 1866, 0, 0, 0,
	2049, 272, 0, 1845, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1251, 0, 0, 1087,
	1862, 0, 1863, 0, 1409, 0, 0, 0, 0, 1832,
	1833, 0, 0, 112, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 276, 0, 0, 0, 0, 270, 0,
	1409, 0, 0, 0, 0, 0, 0, 1409, 272, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 1268, 1864, 0,
	0, 1268, 1268, 0, 1268, 0, 0, 0, 0, 0,
	0, 1268, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 1268, 1268, 270, 0, 0, 1868, 822, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 822, 0, 1268, 0,
	1268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 0, 272, 0, 0, 0, 1986,
	1986, 0, 0, 0, 0, 1839, 0, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1268, 1268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	0, 112, 0, 0, 1268, 0, 0, 0, 0, 0,
	0, 1986, 0, 0, 0, 0, 0, 0, 0, 1251,
	1251, 0, 0, 0, 0, 0, 1986, 0, 0, 1268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1268, 1268, 1268, 1268, 1268, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 1855, 1268, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 0, 0, 0, 1268, 0, 0, 3301,
	0, 0, 0, 1986, 0, 270, 1986, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2049, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1268,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 1268, 0, 0, 0, 272,
	272, 272, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 270,
	2049, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 0, 0, 272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1268, 0, 0, 1815, 1816, 0, 1848,
	1849, 1850, 1859, 1860, 1861, 270, 0, 0, 0, 0,
	1268, 1268, 0, 0, 0, 0, 0, 0, 1852, 1846,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 1409, 0, 0, 0,
	0, 0, 1871, 0, 0, 1268, 0, 0, 1268, 0,
	0, 1817, 0, 0, 0, 0, 0, 1251, 0, 0,
	0, 1837, 0, 0, 0, 0, 1268, 1268, 0, 0,
	1834, 0, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2049, 112, 0, 0,
	0, 0, 1146, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1842, 1843,
	0, 0, 0, 0, 0, 0, 1823, 0, 1268, 0,
	0, 1986, 0, 1986, 0, 0, 0, 272, 0, 1409,
	1409, 272, 0, 1268, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 1845, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 1863, 0, 0, 0, 0, 0,
	0, 1832, 1833, 0, 0, 272, 0, 0, 0, 272,
	1268, 0, 112, 1268, 0, 272, 0, 1268, 1251, 1854,
	0, 272, 0, 0, 0, 0, 1251, 1268, 1268, 0,
	0, 0, 0, 0, 1838, 0, 0, 272, 0, 272,
	0, 0, 0, 0, 1268, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 1409, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1409, 1409, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	272, 0, 0, 272, 0, 0, 0, 0, 1853, 0,
	0, 1409, 0, 1409, 1409, 1409, 1406, 0, 0, 1868,
	1406, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 272, 0,
	272, 0, 272, 0, 272, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	272, 272, 0, 0, 0, 112, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 1565,
	0, 0, 0, 0, 0, 0, 1565, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 0, 0, 0,
	0, 112, 1565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1870, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 1268, 0,
	1268, 0, 0, 0, 0, 1409, 0, 1829, 1830, 1836,
	1858, 1835, 1831, 0, 1828, 1826, 1827, 1819, 1820, 1821,
	1822, 1824, 1825, 0, 0, 0, 0, 0, 0, 0,
	0, 3300, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1409, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 1816, 0, 1848, 1849, 1850, 1859, 1860, 1861,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 1852, 1846, 0, 0, 0, 0, 0,
	0, 1818, 272, 0, 0, 272, 0, 2556, 0, 272,
	1865, 272, 0, 0, 0, 0, 0, 0, 272, 272,
	0, 0, 0, 0, 0, 0, 0, 1871, 272, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 822, 0, 0,
	0, 0, 0, 0, 822, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1842, 1843, 0, 0, 0, 0, 0,
	0, 1823, 0, 272, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	1856, 0, 0, 1866, 0, 1407, 112, 0, 0, 1407,
	1845, 1847, 0, 0, 0, 1406, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 1862, 272, 1863,
	0, 0, 0, 0, 0, 272, 1832, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 1854, 0, 0, 0, 0, 0,
	0, 1409, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 1409, 0, 1409, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 1409, 0, 0, 1566, 0,
	0, 0, 0, 0, 0, 1566, 0, 0, 0, 0,
	272, 0, 272, 0, 0, 1864, 0, 0, 0, 0,
	0, 1566, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 1868, 112, 0, 0, 1565, 1565,
	0, 0, 0, 0, 0, 0, 0, 0, 1406, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 272, 272, 272, 0, 1566,
	0, 0, 0, 272, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 1839, 0, 0, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 0, 1565, 0, 1565, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 1565, 1565, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1565, 0, 1565, 1565, 1565, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1830, 1836, 1858, 1835, 1831, 0, 1828,
	1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 3297, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 1816, 0, 1848, 1849, 1850,
	1859, 1860, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 1846, 0, 0,
	0, 1406, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 1407, 0, 0, 0, 0, 1815, 1816, 1817,
	1848, 1849, 1850, 1859, 1860, 1861, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 1409, 0, 1834, 1852,
	1846, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	0, 0, 0, 1871, 1406, 0, 0, 0, 0, 0,
	0, 0, 1817, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 1837, 272, 0, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	1409, 0, 0, 0, 1840, 1841, 1842, 1843, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 1407, 0, 272, 272, 0, 0,
	0, 0, 0, 0, 1406, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 1866, 272, 0, 0,
	1406, 0, 0, 1845, 1847, 0, 0, 1840, 1841, 1842,
	1843, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	1862, 0, 1863, 0, 0, 0, 0, 0, 0, 1832,
	1833, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	0, 0, 272, 0, 0, 0, 0, 1854, 0, 272,
	0, 0, 0, 0, 0, 0, 1856, 0, 0, 1866,
	0, 0, 1838, 0, 272, 0, 1845, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 1863, 0, 1409, 0, 0,
	0, 0, 1832, 1833, 0, 0, 0, 1566, 1566, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 1864, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 1853, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 1868, 0, 0,
	0, 1409, 0, 1409, 0, 0, 1406, 1409, 0, 0,
	0, 0, 0, 0, 272, 1409, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 1409, 272, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 0, 0, 1853,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1566, 0, 1566, 1839, 1566, 0, 0, 0,
	1409, 1409, 0, 1406, 0, 0, 0, 0, 272, 0,
	0, 0, 0, 0, 1566, 1566, 0, 0, 0, 0,
	0, 0, 1857, 0, 1409, 0, 1409, 1566, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 1566,
	0, 1566, 1566, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 822, 0, 0,
	0, 0, 0, 1409, 0, 272, 1409, 272, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1565, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 1565, 1870, 1565, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 1565, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 1409, 0, 0, 0, 0, 0, 0, 3296,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1409,
	1407, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1830,
	1836, 1858, 1835, 1831, 0, 1828, 1826, 1827, 1819, 1820,
	1821, 1822, 1824, 1825, 0, 0, 0, 0, 0, 0,
	0, 0, 3295, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 970, 0, 1019, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 993, 0, 976, 975, 0, 0, 0,
	0, 0, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 995, 0, 0,
	0, 0, 0, 977, 0, 0, 0, 0, 980, 1407,
	0, 0, 0, 1028, 0, 0, 0, 0, 0, 0,
	0, 0, 990, 991, 0, 0, 0, 0, 0, 0,
	0, 1008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1020,
	982, 0, 0, 0, 0, 0, 983, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 984, 0,
	0, 0, 0, 0, 0, 0, 0, 1017, 0, 0,
	0, 0, 0, 0, 1815, 1816, 0, 1848, 1849, 1850,
	1859, 1860, 1861, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1852, 1846, 1018, 0,
	0, 1409, 0, 0, 1818, 0, 0, 272, 0, 0,
	0, 0, 0, 1865, 986, 0, 0, 0, 0, 0,
	0, 0, 974, 0, 0, 0, 272, 0, 0, 0,
	1871, 0, 0, 0, 0, 1407, 272, 0, 0, 1817,
	0, 987, 988, 0, 0, 0, 272, 0, 0, 1837,
	0, 272, 0, 0, 0, 0, 272, 0, 1834, 0,
	996, 994, 1409, 0, 0, 1406, 0, 0, 989, 0,
	0, 0, 1005, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 1409, 1409,
	1025, 1016, 0, 0, 0, 0, 0, 0, 1406, 0,
	0, 0, 0, 0, 1409, 1409, 1409, 0, 0, 0,
	0, 0, 1407, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 1409, 0, 0, 0, 272,
	0, 1409, 0, 0, 1840, 1841, 1842, 1843, 0, 1406,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 981, 0, 0,
	1027, 0, 0, 1856, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 1845, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 979, 0, 0, 0, 1012, 1013, 1566,
	1862, 0, 1863, 0, 0, 0, 0, 0, 0, 1832,
	1833, 1015, 0, 0, 1566, 0, 1566, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 1566, 1022, 1010, 0, 0, 0, 0,
	0, 0, 1838, 1026, 1006, 0, 0, 999, 997, 0,
	1002, 0, 0, 0, 0, 0, 1003, 0, 0, 972,
	0, 1023, 0, 0, 0, 0, 0, 0, 0, 1409,
	1409, 0, 1409, 0, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 973, 0, 0, 0, 0, 1864, 0,
	1409, 1409, 0, 0, 0, 1014, 0, 1004, 0, 0,
	0, 1409, 0, 1001, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 1024, 0, 1565, 1868, 0, 0,
	0, 0, 1007, 0, 0, 0, 0, 0, 0, 0,
	1565, 985, 1565, 0, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 822, 1565, 1009, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 1565, 0, 0, 0, 0,
	0, 1409, 0, 0, 272, 0, 0, 272, 0, 0,
	1011, 0, 1844, 0, 0, 0, 0, 1409, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1565,
	1565, 0, 0, 0, 0, 1409, 1409, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1565, 0, 1565, 0, 0, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 272, 0,
	0, 0, 1409, 1870, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 1406, 0, 0, 0, 1409,
	1409, 1409, 1409, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 1409, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 2615,
	0, 1406, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1409, 1406, 1409,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1409, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1407, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 1816, 0, 1848, 1849, 1850,
	1859, 1860, 1861, 0, 0, 0, 0, 1407, 0, 0,
	0, 1409, 0, 0, 0, 0, 1852, 1846, 0, 272,
	0, 0, 1407, 0, 1818, 0, 0, 0, 1409, 1409,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1407, 0,
	1871, 0, 0, 1406, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 1409, 0, 0, 1409, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1842, 1843, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 0, 0, 1856, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 1845, 1847, 0, 0, 0, 0, 0,
	1565, 0, 0, 272, 0, 0, 0, 0, 0, 0,
	1862, 0, 1863, 0, 0, 1566, 0, 0, 0, 1832,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 1566, 0, 0, 0, 1407, 0, 1854, 0, 0,
	0, 0, 0, 1566, 0, 0, 0, 0, 0, 0,
	272, 0, 1838, 0, 1566, 1409, 0, 0, 0, 0,
	0, 1565, 0, 0, 0, 1409, 1409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1409, 0, 0, 0, 1565, 1565, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 1565, 1565, 1565, 0, 0, 1566, 1566,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 1565, 0, 0, 1868, 0, 0,
	1406, 0, 1566, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1406, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 1844, 0, 1407, 0, 0, 0, 0, 0,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1815, 1816, 0,
	1848, 1849, 1850, 1859, 1860, 1861, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 1852,
	1846, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	1407, 0, 0, 1870, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 1871, 0, 0, 0, 1407, 1406, 1406,
	0, 1406, 1817, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1837, 0, 0, 0, 0, 0, 0, 1565,
	1565, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 0, 0, 4705, 0, 0, 0, 0,
	1406, 0, 0, 0, 0, 0, 0, 1840, 1841, 1842,
	1843, 0, 0, 0, 0, 0, 1406, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1565, 1565, 1856, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 1845, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 1863, 1406, 0, 0, 0,
	0, 1565, 1832, 1833, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 1565, 1565,
	1565, 1565, 1565, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 1406, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 1566,
	0, 0, 0, 0, 0, 0, 1406, 0, 1565, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1406, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1566, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 1815, 1816, 0, 1848, 1849,
	1850, 1859, 1860, 1861, 0, 1566, 1566, 1566, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 1852, 1846, 0,
	1406, 0, 1566, 1566, 1566, 1818, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 1565, 1565, 0,
	0, 0, 0, 1566, 0, 0, 1870, 0, 0, 1407,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 1407, 0, 0, 0, 1834,
	0, 0, 1406, 0, 0, 1565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1830,
	1836, 1858, 1835, 1831, 0, 1828, 1826, 1827, 1819, 1820,
	1821, 1822, 1824, 1825, 0, 0, 0, 0, 4701, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1842, 1843, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1407, 1407, 0,
	1407, 0, 0, 0, 1856, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 1845, 1847, 0, 0, 1566, 1566,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 1862, 0, 1863, 0, 0, 0, 0, 0, 0,
	1832, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1565, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 1565, 1565, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	0, 1565, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 1566, 1566, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 0, 0, 0,
	1566, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1566, 1566, 1566,
	1566, 1566, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	0, 0, 1407, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1407, 0, 1566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1830, 1836, 1858,
	1835, 1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822,
	1824, 1825, 0, 0, 0, 0, 4616, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1566, 1566, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1407, 0, 0, 1566, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 1566, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1566, 1566, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 1410, 287, 288, 1411, 1412, 1413,
	1566, 1414, 643, 1415, 1416, 1417, 1418, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 1419, 648, 299, 300, 301, 302, 303,
	304, 1420, 1421, 0, 305, 649, 650, 651, 1422, 306,
	307, 652, 1423, 1490, 1424, 308, 309, 310, 311, 312,
	313, 314, 0, 1425, 316, 317, 318, 315, 319, 1426,
	320, 0, 321, 322, 323, 324, 325, 326, 1427, 327,
	328, 329, 1209, 330, 331, 332, 1428, 1429, 1431, 1430,
	1432, 1433, 1434, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 1435, 343, 339, 341, 1436, 344, 342,
	345, 1437, 346, 347, 348, 1438, 1439, 349, 350, 351,
	1440, 352, 353, 1441, 354, 355, 356, 1442, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 1443, 277, 1444, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1445,
	375, 376, 377, 1446, 1447, 1210, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1448, 390, 661, 1449, 662, 391, 1450, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1212, 397, 398, 1451,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1452, 1211, 407, 666, 667, 1453, 668,
	1454, 409, 410, 1213, 669, 1214, 411, 412, 413, 1215,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1455, 421, 423, 422, 1456, 424, 670, 1216, 425, 426,
	1217, 1457, 427, 428, 429, 430, 431, 432, 435, 1458,
	1459, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1218, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1219, 477, 465, 1460,
	279, 1220, 478, 479, 1461, 671, 480, 672, 482, 483,
	1462, 0, 484, 0, 1463, 1464, 486, 487, 488, 1465,
	1466, 489, 490, 673, 1221, 491, 1222, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1467, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 1468, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 1469, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 1470, 543, 544, 545,
	1223, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1471, 568, 569, 567, 570, 571, 572, 1472, 573,
	574, 556, 557, 575, 576, 1224, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1473, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1474, 600, 601, 0, 597, 588, 1475,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 1476,
	610, 684, 685, 686, 687, 1477, 619, 1478, 611, 612,
	613, 688, 614, 689, 1479, 615, 616, 617, 618, 0,
	620, 621, 1480, 1481, 622, 623, 624, 626, 627, 625,
	628, 1482, 629, 1483, 0, 630, 631, 632, 690, 691,
	692, 1484, 634, 633, 635, 693, 636, 637, 1485, 1486,
	1487, 1488, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1404, 0, 0,
	0, 0, 0, 0, 0, 2783, 0, 0, 0, 0,
	0, 0, 0, 2784, 280, 282, 281, 283, 284, 285,
	286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414, 643,
	1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	1419, 648, 299, 300, 301, 302, 303, 304, 1420, 1421,
	0, 305, 649, 650, 651, 1422, 306, 307, 652, 1423,
	1490, 1424, 308, 309, 310, 311, 312, 313, 314, 0,
	1425, 316, 317, 318, 315, 319, 1426, 320, 0, 321,
	322, 323, 324, 325, 326, 1427, 327, 328, 329, 1209,
	330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	1435, 343, 339, 341, 1436, 344, 342, 345, 1437, 346,
	347, 348, 1438, 1439, 349, 350, 351, 1440, 352, 353,
	1441, 354, 355, 356, 1442, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 1443, 277, 1444, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 1445, 375, 376, 377,
	1446, 1447, 1210, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1448, 390, 661,
	1449, 662, 391, 1450, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1212, 397, 398, 1451, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	1452, 1211, 407, 666, 667, 1453, 668, 1454, 409, 410,
	1213, 669, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 1455, 421, 423,
	422, 1456, 424, 670, 1216, 425, 426, 1217, 1457, 427,
	428, 429, 430, 431, 432, 435, 1458, 1459, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 1460, 279, 1220, 478,
	479, 1461, 671, 480, 672, 482, 483, 1462, 0, 484,
	0, 1463, 1464, 486, 487, 488, 1465, 1466, 489, 490,
	673, 1221, 491, 1222, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1467, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 1468, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	1469, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 1470, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 1471, 568,
	569, 567, 570, 571, 572, 1472, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 1473, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	1474, 600, 601, 0, 597, 588, 1475, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 1476, 610, 684, 685,
	686, 687, 1477, 619, 1478, 611, 612, 613, 688, 614,
	689, 1479, 615, 616, 617, 618, 0, 620, 621, 1480,
	1481, 622, 623, 624, 626, 627, 625, 628, 1482, 629,
	1483, 0, 630, 631, 632, 690, 691, 692, 1484, 634,
	633, 635, 693, 636, 637, 1485, 1486, 1487, 1488, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 0, 3768, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3770, 280,
	282, 281, 283, 284, 285, 286, 1410, 287, 288, 1411,
	1412, 1413, 0, 1414, 643, 1415, 1416, 1417, 1418, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 1419, 648, 299, 300, 301,
	302, 303, 304, 1420, 1421, 0, 305, 649, 650, 651,
	1422, 306, 307, 652, 1423, 1490, 1424, 308, 309, 310,
	311, 312, 313, 314, 0, 1425, 316, 317, 318, 315,
	319, 1426, 320, 0, 321, 322, 323, 324, 325, 326,
	1427, 327, 328, 329, 1209, 330, 331, 332, 1428, 1429,
	1431, 1430, 1432, 1433, 1434, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 1435, 343, 339, 341, 1436,
	344, 342, 345, 1437, 346, 347, 348, 1438, 1439, 349,
	350, 351, 1440, 352, 353, 1441, 354, 355, 356, 1442,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 1443, 277, 1444, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 1445, 375, 376, 377, 1446, 1447, 1210, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1448, 390, 661, 1449, 662, 391, 1450, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1212, 397,
	398, 1451, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1452, 1211, 407, 666, 667,
	1453, 668, 1454, 409, 410, 1213, 669, 1214, 411, 412,
	413, 1215, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1455, 421, 423, 422, 1456, 424, 670, 1216,
	425, 426, 1217, 1457, 427, 428, 429, 430, 431, 432,
	435, 1458, 1459, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1218, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1219, 477,
	465, 1460, 279, 1220, 478, 479, 1461, 671, 480, 672,
	482, 483, 1462, 0, 484, 0, 1463, 1464, 486, 487,
	488, 1465, 1466, 489, 490, 673, 1221, 491, 1222, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1467, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 1468, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 1469, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 1470, 543,
	544, 545, 1223, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 1471, 568, 569, 567, 570, 571, 572,
	1472, 573, 574, 556, 557, 575, 576, 1224, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 1473, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 1474, 600, 601, 0, 597,
	588, 1475, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 1476, 610, 684, 685, 686, 687, 1477, 619, 1478,
	611, 612, 613, 688, 614, 689, 1479, 615, 616, 617,
	618, 0, 620, 621, 1480, 1481, 622, 623, 624, 626,
	627, 625, 628, 1482, 629, 1483, 0, 630, 631, 632,
	690, 691, 692, 1484, 634, 633, 635, 693, 636, 637,
	1485, 1486, 1487, 1488, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1404, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4167, 280, 282,
	281, 283, 284, 285, 286, 1410, 287, 288, 1411, 1412,
	1413, 0, 1414, 643, 1415, 1416, 1417, 1418, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 1419, 648, 299, 300, 301, 302,
	303, 304, 1420, 1421, 0, 305, 649, 650, 651, 1422,
	306, 307, 652, 1423, 1490, 1424, 308, 309, 310, 311,
	312, 313, 314, 0, 1425, 316, 317, 318, 315, 319,
	1426, 320, 0, 321, 322, 323, 324, 325, 326, 1427,
	327, 328, 329, 1209, 330, 331, 332, 1428, 1429, 1431,
	1430, 1432, 1433, 1434, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 1435, 343, 339, 341, 1436, 344,
	342, 345, 1437, 346, 347, 348, 1438, 1439, 349, 350,
	351, 1440, 352, 353, 1441, 354, 355, 356, 1442, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 1443, 277, 1444, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	1445, 375, 376, 377, 1446, 1447, 1210, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1448, 390, 661, 1449, 662, 391, 1450, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1212, 397, 398,
	1451, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 1452, 1211, 407, 666, 667, 1453,
	668, 1454, 409, 410, 1213, 669, 1214, 411, 412, 413,
	1215, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 1455, 421, 423, 422, 1456, 424, 670, 1216, 425,
	426, 1217, 1457, 427, 428, 429, 430, 431, 432, 435,
	1458, 1459, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1218, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1219, 477, 465,
	1460, 279, 1220, 478, 479, 1461, 671, 480, 672, 482,
	483, 1462, 0, 484, 0, 1463, 1464, 486, 487, 488,
	1465, 1466, 489, 490, 673, 1221, 491, 1222, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1467, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 1468, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 1469, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 1470, 543, 544,
	545, 1223, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 1471, 568, 569, 567, 570, 571, 572, 1472,
	573, 574, 556, 557, 575, 576, 1224, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 1473, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 1474, 600, 601, 0, 597, 588,
	1475, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	1476, 610, 684, 685, 686, 687, 1477, 619, 1478, 611,
	612, 613, 688, 614, 689, 1479, 615, 616, 617, 618,
	0, 620, 621, 1480, 1481, 622, 623, 624, 626, 627,
	625, 628, 1482, 629, 1483, 0, 630, 631, 632, 690,
	691, 692, 1484, 634, 633, 635, 693, 636, 637, 1485,
	1486, 1487, 1488, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4165, 280, 282, 281,
	283, 284, 285, 286, 1410, 287, 288, 1411, 1412, 1413,
	0, 1414, 643, 1415, 1416, 1417, 1418, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 1419, 648, 299, 300, 301, 302, 303,
	304, 1420, 1421, 0, 305, 649, 650, 651, 1422, 306,
	307, 652, 1423, 1490, 1424, 308, 309, 310, 311, 312,
	313, 314, 0, 1425, 316, 317, 318, 315, 319, 1426,
	320, 0, 321, 322, 323, 324, 325, 326, 1427, 327,
	328, 329, 1209, 330, 331, 332, 1428, 1429, 1431, 1430,
	1432, 1433, 1434, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 1435, 343, 339, 341, 1436, 344, 342,
	345, 1437, 346, 347, 348, 1438, 1439, 349, 350, 351,
	1440, 352, 353, 1441, 354, 355, 356, 1442, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 1443, 277, 1444, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1445,
	375, 376, 377, 1446, 1447, 1210, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1448, 390, 661, 1449, 662, 391, 1450, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1212, 397, 398, 1451,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1452, 1211, 407, 666, 667, 1453, 668,
	1454, 409, 410, 1213, 669, 1214, 411, 412, 413, 1215,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1455, 421, 423, 422, 1456, 424, 670, 1216, 425, 426,
	1217, 1457, 427, 428, 429, 430, 431, 432, 435, 1458,
	1459, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1218, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1219, 477, 465, 1460,
	279, 1220, 478, 479, 1461, 671, 480, 672, 482, 483,
	1462, 0, 484, 0, 1463, 1464, 486, 487, 488, 1465,
	1466, 489, 490, 673, 1221, 491, 1222, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1467, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 1468, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 1469, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 1470, 543, 544, 545,
	1223, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1471, 568, 569, 567, 570, 571, 572, 1472, 573,
	574, 556, 557, 575, 576, 1224, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1473, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1474, 600, 601, 0, 597, 588, 1475,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 1476,
	610, 684, 685, 686, 687, 1477, 619, 1478, 611, 612,
	613, 688, 614, 689, 1479, 615, 616, 617, 618, 0,
	620, 621, 1480, 1481, 622, 623, 624, 626, 627, 625,
	628, 1482, 629, 1483, 0, 630, 631, 632, 690, 691,
	692, 1484, 634, 633, 635, 693, 636, 637, 1485, 1486,
	1487, 1488, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4380, 280, 282, 281, 283, 284, 285, 286, 1410, 287,
	288, 1411, 1412, 1413, 0, 1414, 643, 1415, 1416, 1417,
	1418, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 1419, 648, 299,
	300, 301, 302, 303, 304, 1420, 1421, 0, 305, 649,
	650, 651, 1422, 306, 307, 652, 1423, 1490, 1424, 308,
	309, 310, 311, 312, 313, 314, 0, 1425, 316, 317,
	318, 315, 319, 1426, 320, 0, 321, 322, 323, 324,
	325, 326, 1427, 327, 328, 329, 1209, 330, 331, 332,
	1428, 1429, 1431, 1430, 1432, 1433, 1434, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 1435, 343, 339,
	341, 1436, 344, 342, 345, 1437, 346, 347, 348, 1438,
	1439, 349, 350, 351, 1440, 352, 353, 1441, 354, 355,
	356, 1442, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 1443, 277,
	1444, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1445, 375, 376, 377, 1446, 1447, 1210,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1448, 390, 661, 1449, 662, 391,
	1450, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1212, 397, 398, 1451, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1452, 1211, 407,
	666, 667, 1453, 668, 1454, 409, 410, 1213, 669, 1214,
	411, 412, 413, 1215, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1455, 421, 423, 422, 1456, 424,
	670, 1216, 425, 426, 1217, 1457, 427, 428, 429, 430,
	431, 432, 435, 1458, 1459, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1218, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1219, 477, 465, 1460, 279, 1220, 478, 479, 1461, 671,
	480, 672, 482, 483, 1462, 0, 484, 0, 1463, 1464,
	486, 487, 488, 1465, 1466, 489, 490, 673, 1221, 491,
	1222, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1467, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	1468, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 1469, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	1470, 543, 544, 545, 1223, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1471, 568, 569, 567, 570,
	571, 572, 1472, 573, 574, 556, 557, 575, 576, 1224,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1473, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1474, 600, 601,
	0, 597, 588, 1475, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 1476, 610, 684, 685, 686, 687, 1477,
	619, 1478, 611, 612, 613, 688, 614, 689, 1479, 615,
	616, 617, 618, 0, 620, 621, 1480, 1481, 622, 623,
	624, 626, 627, 625, 628, 1482, 629, 1483, 0, 630,
	631, 632, 690, 691, 692, 1484, 634, 633, 635, 693,
	636, 637, 1485, 1486, 1487, 1488, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 1404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4248, 280, 282, 281, 283, 284,
	285, 286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414,
	643, 1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 1419, 648, 299, 300, 301, 302, 303, 304, 1420,
	1421, 0, 305, 649, 650, 651, 1422, 306, 307, 652,
	1423, 1490, 1424, 308, 309, 310, 311, 312, 313, 314,
	0, 1425, 316, 317, 318, 315, 319, 1426, 320, 0,
	321, 322, 323, 324, 325, 326, 1427, 327, 328, 329,
	1209, 330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433,
	1434, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 1435, 343, 339, 341, 1436, 344, 342, 345, 1437,
	346, 347, 348, 1438, 1439, 349, 350, 351, 1440, 352,
	353, 1441, 354, 355, 356, 1442, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 1443, 277, 1444, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 1445, 375, 376,
	377, 1446, 1447, 1210, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1448, 390,
	661, 1449, 662, 391, 1450, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1212, 397, 398, 1451, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1452, 1211, 407, 666, 667, 1453, 668, 1454, 409,
	410, 1213, 669, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1455, 421,
	423, 422, 1456, 424, 670, 1216, 425, 426, 1217, 1457,
	427, 428, 429, 430, 431, 432, 435, 1458, 1459, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1460, 279, 1220,
	478, 479, 1461, 671, 480, 672, 482, 483, 1462, 0,
	484, 0, 1463, 1464, 486, 487, 488, 1465, 1466, 489,
	490, 673, 1221, 491, 1222, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 1467, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 1468, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 1469, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 1470, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 1471,
	568, 569, 567, 570, 571, 572, 1472, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 1473, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 1474, 600, 601, 0, 597, 588, 1475, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 1476, 610, 684,
	685, 686, 687, 1477, 619, 1478, 611, 612, 613, 688,
	614, 689, 1479, 615, 616, 617, 618, 0, 620, 621,
	1480, 1481, 622, 623, 624, 626, 627, 625, 628, 1482,
	629, 1483, 0, 630, 631, 632, 690, 691, 692, 1484,
	634, 633, 635, 693, 636, 637, 1485, 1486, 1487, 1488,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 1404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4095, 280,
	282, 281, 283, 284, 285, 286, 1410, 287, 288, 1411,
	1412, 1413, 0, 1414, 643, 1415, 1416, 1417, 1418, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 1419, 648, 299, 300, 301,
	302, 303, 304, 1420, 1421, 0, 305, 649, 650, 651,
	1422, 306, 307, 652, 1423, 1490, 1424, 308, 309, 310,
	311, 312, 313, 314, 0, 1425, 316, 317, 318, 315,
	319, 1426, 320, 0, 321, 322, 323, 324, 325, 326,
	1427, 327, 328, 329, 1209, 330, 331, 332, 1428, 1429,
	1431, 1430, 1432, 1433, 1434, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 1435, 343, 339, 341, 1436,
	344, 342, 345, 1437, 346, 347, 348, 1438, 1439, 349,
	350, 351, 1440, 352, 353, 1441, 354, 355, 356, 1442,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 1443, 277, 1444, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 1445, 375, 376, 377, 1446, 1447, 1210, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1448, 390, 661, 1449, 662, 391, 1450, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1212, 397,
	398, 1451, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 1452, 1211, 407, 666, 667,
	1453, 668, 1454, 409, 410, 1213, 669, 1214, 411, 412,
	413, 1215, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 1455, 421, 423, 422, 1456, 424, 670, 1216,
	425, 426, 1217, 1457, 427, 428, 429, 430, 431, 432,
	435, 1458, 1459, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1218, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1219, 477,
	465, 1460, 279, 1220, 478, 479, 1461, 671, 480, 672,
	482, 483, 1462, 0, 484, 0, 1463, 1464, 486, 487,
	488, 1465, 1466, 489, 490, 673, 1221, 491, 1222, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1467, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 1468, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 1469, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 1470, 543,
	544, 545, 1223, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 1471, 568, 569, 567, 570, 571, 572,
	1472, 573, 574, 556, 557, 575, 576, 1224, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 1473, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 1474, 600, 601, 0, 597,
	588, 1475, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 1476, 610, 684, 685, 686, 687, 1477, 619, 1478,
	611, 612, 613, 688, 614, 689, 1479, 615, 616, 617,
	618, 0, 620, 621, 1480, 1481, 622, 623, 624, 626,
	627, 625, 628, 1482, 629, 1483, 0, 630, 631, 632,
	690, 691, 692, 1484, 634, 633, 635, 693, 636, 637,
	1485, 1486, 1487, 1488, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3786, 280, 282, 281, 283, 284, 285, 286,
	1410, 287, 288, 1411, 1412, 1413, 0, 1414, 643, 1415,
	1416, 1417, 1418, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 1419,
	648, 299, 300, 301, 302, 303, 304, 1420, 1421, 0,
	305, 649, 650, 651, 1422, 306, 307, 652, 1423, 1490,
	1424, 308, 309, 310, 311, 312, 313, 314, 0, 1425,
	316, 317, 318, 315, 319, 1426, 320, 0, 321, 322,
	323, 324, 325, 326, 1427, 327, 328, 329, 1209, 330,
	331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 1435,
	343, 339, 341, 1436, 344, 342, 345, 1437, 346, 347,
	348, 1438, 1439, 349, 350, 351, 1440, 352, 353, 1441,
	354, 355, 356, 1442, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	1443, 277, 1444, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1445, 375, 376, 377, 1446,
	1447, 1210, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1448, 390, 661, 1449,
	662, 391, 1450, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1212, 397, 398, 1451, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1452,
	1211, 407, 666, 667, 1453, 668, 1454, 409, 410, 1213,
	669, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1455, 421, 423, 422,
	1456, 424, 670, 1216, 425, 426, 1217, 1457, 427, 428,
	429, 430, 431, 432, 435, 1458, 1459, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 1460, 279, 1220, 478, 479,
	1461, 671, 480, 672, 482, 483, 1462, 0, 484, 0,
	1463, 1464, 486, 487, 488, 1465, 1466, 489, 490, 673,
	1221, 491, 1222, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 1467, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 1468, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 1469,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 1470, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1471, 568, 569,
	567, 570, 571, 572, 1472, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1473, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1474,
	600, 601, 0, 597, 588, 1475, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 1476, 610, 684, 685, 686,
	687, 1477, 619, 1478, 611, 612, 613, 688, 614, 689,
	1479, 615, 616, 617, 618, 0, 620, 621, 1480, 1481,
	622, 623, 624, 626, 627, 625, 628, 1482, 629, 1483,
	0, 630, 631, 632, 690, 691, 692, 1484, 634, 633,
	635, 693, 636, 637, 1485, 1486, 1487, 1488, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	1404, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3607, 280, 282, 281,
	283, 284, 285, 286, 1410, 287, 288, 1411, 1412, 1413,
	0, 1414, 643, 1415, 1416, 1417, 1418, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 1419, 648, 299, 300, 301, 302, 303,
	304, 1420, 1421, 0, 305, 649, 650, 651, 1422, 306,
	307, 652, 1423, 1490, 1424, 308, 309, 310, 311, 312,
	313, 314, 0, 1425, 316, 317, 318, 315, 319, 1426,
	320, 0, 321, 322, 323, 324, 325, 326, 1427, 327,
	328, 329, 1209, 330, 331, 332, 1428, 1429, 1431, 1430,
	1432, 1433, 1434, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 1435, 343, 339, 341, 1436, 344, 342,
	345, 1437, 346, 347, 348, 1438, 1439, 349, 350, 351,
	1440, 352, 353, 1441, 354, 355, 356, 1442, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 1443, 277, 1444, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 1445,
	375, 376, 377, 1446, 1447, 1210, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1448, 390, 661, 1449, 662, 391, 1450, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1212, 397, 398, 1451,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 1452, 1211, 407, 666, 667, 1453, 668,
	1454, 409, 410, 1213, 669, 1214, 411, 412, 413, 1215,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	1455, 421, 423, 422, 1456, 424, 670, 1216, 425, 426,
	1217, 1457, 427, 428, 429, 430, 431, 432, 435, 1458,
	1459, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1218, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1219, 477, 465, 1460,
	279, 1220, 478, 479, 1461, 671, 480, 672, 482, 483,
	1462, 0, 484, 0, 1463, 1464, 486, 487, 488, 1465,
	1466, 489, 490, 673, 1221, 491, 1222, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1467, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 1468, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 1469, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 1470, 543, 544, 545,
	1223, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 1471, 568, 569, 567, 570, 571, 572, 1472, 573,
	574, 556, 557, 575, 576, 1224, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 1473, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 1474, 600, 601, 0, 597, 588, 1475,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 1476,
	610, 684, 685, 686, 687, 1477, 619, 1478, 611, 612,
	613, 688, 614, 689, 1479, 615, 616, 617, 618, 0,
	620, 621, 1480, 1481, 622, 623, 624, 626, 627, 625,
	628, 1482, 629, 1483, 0, 630, 631, 632, 690, 691,
	692, 1484, 634, 633, 635, 693, 636, 637, 1485, 1486,
	1487, 1488, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 1404, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2638, 280, 282, 281, 283, 284, 285, 286, 1410, 287,
	288, 1411, 1412, 1413, 0, 1414, 643, 1415, 1416, 1417,
	1418, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 1419, 648, 299,
	300, 301, 302, 303, 304, 1420, 1421, 0, 305, 649,
	650, 651, 1422, 306, 307, 652, 1423, 1490, 1424, 308,
	309, 310, 311, 312, 313, 314, 0, 1425, 316, 317,
	318, 315, 319, 1426, 320, 0, 321, 322, 323, 324,
	325, 326, 1427, 327, 328, 329, 1209, 330, 331, 332,
	1428, 1429, 1431, 1430, 1432, 1433, 1434, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 1435, 343, 339,
	341, 1436, 344, 342, 345, 1437, 346, 347, 348, 1438,
	1439, 349, 350, 351, 1440, 352, 353, 1441, 354, 355,
	356, 1442, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 1443, 277,
	1444, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 1445, 375, 376, 377, 1446, 1447, 1210,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1448, 390, 661, 1449, 662, 391,
	1450, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1212, 397, 398, 1451, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 1452, 1211, 407,
	666, 667, 1453, 668, 1454, 409, 410, 1213, 669, 1214,
	411, 412, 413, 1215, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1455, 421, 423, 422, 1456, 424,
	670, 1216, 425, 426, 1217, 1457, 427, 428, 429, 430,
	431, 432, 435, 1458, 1459, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1218, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1219, 477, 465, 1460, 279, 1220, 478, 479, 1461, 671,
	480, 672, 482, 483, 1462, 0, 484, 0, 1463, 1464,
	486, 487, 488, 1465, 1466, 489, 490, 673, 1221, 491,
	1222, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1467, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	1468, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 1469, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	1470, 543, 544, 545, 1223, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 1471, 568, 569, 567, 570,
	571, 572, 1472, 573, 574, 556, 557, 575, 576, 1224,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	1473, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 1474, 600, 601,
	0, 597, 588, 1475, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 1476, 610, 684, 685, 686, 687, 1477,
	619, 1478, 611, 612, 613, 688, 614, 689, 1479, 615,
	616, 617, 618, 0, 620, 621, 1480, 1481, 622, 623,
	624, 626, 627, 625, 628, 1482, 629, 1483, 0, 630,
	631, 632, 690, 691, 692, 1484, 634, 633, 635, 693,
	636, 637, 1485, 1486, 1487, 1488, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 1501, 0, 1404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2264, 280, 282, 281, 283, 284,
	285, 286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414,
	643, 1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 1419, 648, 299, 300, 301, 302, 303, 304, 1420,
	1421, 0, 305, 649, 650, 651, 1422, 306, 307, 652,
	1423, 1490, 1424, 308, 309, 310, 311, 312, 313, 314,
	0, 1425, 316, 317, 318, 315, 319, 1426, 320, 0,
	321, 322, 323, 324, 325, 326, 1427, 327, 328, 329,
	1209, 330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433,
	1434, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 1435, 343, 339, 341, 1436, 344, 342, 345, 1437,
	346, 347, 348, 1438, 1439, 349, 350, 351, 1440, 352,
	353, 1441, 354, 355, 356, 1442, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 1443, 277, 1444, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 1445, 375, 376,
	377, 1446, 1447, 1210, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1448, 390,
	661, 1449, 662, 391, 1450, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1212, 397, 398, 1451, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1452, 1211, 407, 666, 667, 1453, 668, 1454, 409,
	410, 1213, 669, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1455, 421,
	423, 422, 1456, 424, 670, 1216, 425, 426, 1217, 1457,
	427, 428, 429, 430, 431, 432, 435, 1458, 1459, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1460, 279, 1220,
	478, 479, 1461, 671, 480, 672, 482, 483, 1462, 0,
	484, 0, 1463, 1464, 486, 487, 488, 1465, 1466, 489,
	490, 673, 1221, 491, 1222, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 1467, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 1468, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 1469, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 1470, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 1471,
	568, 569, 567, 570, 571, 572, 1472, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 1473, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 1474, 600, 601, 0, 597, 588, 1475, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 1476, 610, 684,
	685, 686, 687, 1477, 619, 1478, 611, 612, 613, 688,
	614, 689, 1479, 615, 616, 617, 618, 0, 620, 621,
	1480, 1481, 622, 623, 624, 626, 627, 625, 628, 1482,
	629, 1483, 0, 630, 631, 632, 690, 691, 692, 1484,
	634, 633, 635, 693, 636, 637, 1485, 1486, 1487, 1488,
	638, 639, 694, 640, 641, 642, 1401, 0, 1404, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 1410, 287, 288, 1411, 1412, 1413, 0, 1414,
	643, 1415, 1416, 1417, 1418, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 1419, 648, 299, 300, 301, 302, 303, 304, 1420,
	1421, 0, 305, 649, 650, 651, 1422, 306, 307, 652,
	1423, 1490, 1424, 308, 309, 310, 311, 312, 313, 314,
	0, 1425, 316, 317, 318, 315, 319, 1426, 320, 0,
	321, 322, 323, 324, 325, 326, 1427, 327, 328, 329,
	1209, 330, 331, 332, 1428, 1429, 1431, 1430, 1432, 1433,
	1434, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 1435, 343, 339, 341, 1436, 344, 342, 345, 1437,
	346, 347, 348, 1438, 1439, 349, 350, 351, 1440, 352,
	353, 1441, 354, 355, 356, 1442, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 1443, 277, 1444, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 1445, 375, 376,
	377, 1446, 1447, 1210, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1448, 390,
	661, 1449, 662, 391, 1450, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1212, 397, 398, 1451, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 1452, 1211, 407, 666, 667, 1453, 668, 1454, 409,
	410, 1213, 669, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 1455, 421,
	423, 422, 1456, 424, 670, 1216, 425, 426, 1217, 1457,
	427, 428, 429, 430, 431, 432, 435, 1458, 1459, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1460, 279, 1220,
	478, 479, 1461, 671, 480, 672, 482, 483, 1462, 0,
	484, 0, 1463, 1464, 486, 487, 488, 1465, 1466, 489,
	490, 673, 1221, 491, 1222, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 1467, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 1468, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 1469, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 1470, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 1471,
	568, 569, 567, 570, 571, 572, 1472, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 1473, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 1474, 600, 601, 0, 597, 588, 1475, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 1476, 610, 684,
	685, 686, 687, 1477, 619, 1478, 611, 612, 613, 688,
	614, 689, 1479, 615, 616, 617, 618, 0, 620, 621,
	1480, 1481, 622, 623, 624, 626, 627, 625, 628, 1482,
	629, 1483, 0, 630, 631, 632, 690, 691, 692, 1484,
	634, 633, 635, 693, 636, 637, 1485, 1486, 1487, 1488,
	638, 639, 694, 640, 641, 642, 1404, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	1410, 287, 288, 1411, 1412, 1413, 0, 1414, 643, 1415,
	1416, 1417, 1418, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 1419,
	648, 299, 300, 301, 302, 303, 304, 1420, 1421, 0,
	305, 649, 650, 651, 1422, 306, 307, 652, 1423, 1490,
	1424, 308, 309, 310, 311, 312, 313, 314, 0, 1425,
	316, 317, 318, 315, 319, 1426, 320, 0, 321, 322,
	323, 324, 325, 326, 1427, 327, 328, 329, 1209, 330,
	331, 332, 1428, 1429, 1431, 1430, 1432, 1433, 1434, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 1435,
	343, 339, 341, 1436, 344, 342, 345, 1437, 346, 347,
	348, 1438, 1439, 349, 350, 351, 1440, 352, 353, 1441,
	354, 355, 356, 1442, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	1443, 277, 1444, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 1445, 375, 376, 377, 1446,
	1447, 1210, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 1448, 390, 661, 1449,
	662, 391, 1450, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1212, 397, 398, 1451, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 1452,
	1211, 407, 666, 667, 1453, 668, 1454, 409, 410, 1213,
	669, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1455, 421, 423, 422,
	1456, 424, 670, 1216, 425, 426, 1217, 1457, 427, 428,
	429, 430, 431, 432, 435, 1458, 1459, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 1460, 279, 1220, 478, 479,
	1461, 671, 480, 672, 482, 483, 1462, 0, 484, 0,
	1463, 1464, 486, 487, 488, 1465, 1466, 489, 490, 673,
	1221, 491, 1222, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 1467, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 1468, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 1469,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 1470, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 1471, 568, 569,
	567, 570, 571, 572, 1472, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 1473, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 1474,
	600, 601, 0, 597, 588, 1475, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 1476, 610, 684, 685, 686,
	687, 1477, 619, 1478, 611, 612, 613, 688, 614, 689,
	1479, 615, 616, 617, 618, 0, 620, 621, 1480, 1481,
	622, 623, 624, 626, 627, 625, 628, 1482, 629, 1483,
	0, 630, 631, 632, 690, 691, 692, 1484, 634, 633,
	635, 693, 636, 637, 1485, 1486, 1487, 1488, 638, 639,
	694, 640, 641, 642, 2613, 0, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	2610, 287, 288, 0, 0, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 651, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 2611, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 481, 1212, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1211, 407, 1178, 1179, 0, 1139, 0, 409, 410, 1213,
	1171, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1207, 1216, 425, 426, 1217, 0, 427, 428,
	429, 430, 431, 432, 435, 1162, 1161, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 1101, 279, 1220, 478, 479,
	1124, 1172, 480, 1186, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1221, 491, 1222, 1201, 492, 493, 1111, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1202, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1182, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 1112, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1165, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 1180,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1227, 591, 592, 593, 594, 1203, 598, 599, 0,
	600, 601, 1098, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1192, 1193, 1194,
	1195, 0, 619, 0, 611, 612, 613, 1204, 614, 1205,
	1122, 615, 616, 617, 618, 0, 620, 621, 0, 1105,
	622, 623, 624, 626, 627, 625, 628, 1166, 629, 0,
	0, 630, 631, 632, 690, 1189, 1226, 2609, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1102, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 2612, 0, 0, 0,
	0, 0, 0, 1128, 2608, 0, 1088, 1126, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 651, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1211, 407, 1178, 1179, 0, 1139, 0, 409,
	410, 1213, 1171, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1207, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 1162, 1161, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1101, 279, 1220,
	478, 479, 1124, 1172, 480, 1186, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 1201, 492, 493, 1111, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1202,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1182, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 1112, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 239,
	568, 569, 567, 570, 571, 572, 1165, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 1180, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1227, 591, 592, 593, 594, 1203, 598,
	599, 0, 600, 601, 1098, 597, 588, 241, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1192,
	1193, 1194, 1195, 0, 619, 0, 611, 612, 613, 1204,
	614, 1205, 1122, 615, 616, 617, 618, 0, 620, 621,
	0, 1105, 622, 623, 624, 626, 627, 625, 628, 1166,
	629, 0, 0, 630, 631, 632, 1637, 1189, 1226, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 233,
	638, 639, 694, 640, 641, 642, 1102, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 1896, 1894, 0, 0, 1126,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 651, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1211, 407, 1178, 1179, 0, 1139, 0, 409,
	410, 1213, 1171, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1207, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 1162, 1161, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1101, 279, 1220,
	478, 479, 1124, 1172, 480, 1186, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 1201, 492, 493, 1111, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1202,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1182, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 1112, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 239,
	568, 569, 567, 570, 571, 572, 1165, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 1180, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1227, 591, 592, 593, 594, 1203, 598,
	599, 0, 600, 601, 1098, 597, 588, 241, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1192,
	1193, 1194, 1195, 0, 619, 0, 611, 612, 613, 1204,
	614, 1205, 1122, 615, 616, 617, 618, 0, 620, 621,
	0, 1105, 622, 623, 624, 626, 627, 625, 628, 1166,
	629, 0, 0, 630, 631, 632, 1637, 1189, 1226, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 233,
	638, 639, 694, 640, 641, 642, 1102, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 1896, 3251, 0, 0, 1126,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 651, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1211, 407, 1178, 1179, 0, 1139, 0, 409,
	410, 1213, 1171, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1207, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 1162, 1161, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1101, 279, 1220,
	478, 479, 1124, 1172, 480, 1186, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 1201, 492, 493, 1111, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1202,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1182, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 1112, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 239,
	568, 569, 567, 570, 571, 572, 1165, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 1180, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1227, 591, 592, 593, 594, 1203, 598,
	599, 0, 600, 601, 1098, 597, 588, 241, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1192,
	1193, 1194, 1195, 0, 619, 0, 611, 612, 613, 1204,
	614, 1205, 1122, 615, 616, 617, 618, 0, 620, 621,
	0, 1105, 622, 623, 624, 626, 627, 625, 628, 1166,
	629, 0, 0, 630, 631, 632, 1637, 1189, 1226, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 233,
	638, 639, 694, 640, 641, 642, 1102, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 1896, 1894, 0, 0, 1126,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 1181, 0, 297, 1188, 298,
	1187, 2744, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 651, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 2749, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1211, 407, 1178, 1179, 0, 1139, 0, 409,
	410, 1213, 1171, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 2745, 424, 1207, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 1162, 1161, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1101, 279, 1220,
	478, 479, 1124, 1172, 480, 1186, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 1201, 492, 493, 1111, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1202,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1182, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 1112, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1165, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 1180, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1227, 591, 592, 593, 594, 1203, 598,
	599, 0, 600, 601, 1098, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1192,
	1193, 1194, 1195, 0, 619, 2746, 611, 612, 613, 1204,
	614, 1205, 1122, 615, 616, 617, 618, 0, 620, 621,
	0, 1105, 622, 623, 624, 626, 627, 625, 628, 1166,
	629, 0, 0, 630, 631, 632, 690, 1189, 1226, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1102, 0, 0, 2658,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 644, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 481, 1212, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1211, 407, 1178, 1179, 0,
	1139, 0, 409, 410, 1213, 1171, 1214, 411, 412, 413,
	1215, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1207, 1216, 425,
	426, 1217, 0, 427, 428, 429, 430, 431, 432, 435,
	1162, 1161, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1218, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1219, 477, 465,
	1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1221, 491, 1222, 1201, 492,
	493, 1111, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1202, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1182, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1223, 546, 547, 548, 549, 550, 1112, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1165,
	573, 574, 556, 557, 575, 576, 1224, 577, 578, 579,
	580, 581, 582, 583, 1180, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1227, 591, 592, 593,
	594, 1203, 598, 599, 0, 600, 601, 1098, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1192, 1193, 1194, 1195, 0, 619, 0, 611,
	612, 613, 1204, 614, 1205, 1122, 615, 616, 617, 618,
	0, 620, 621, 0, 1105, 622, 623, 624, 626, 627,
	625, 628, 1166, 629, 0, 0, 630, 631, 632, 690,
	1189, 1226, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1102,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 0, 0, 0, 0, 0, 0, 0, 1128, 2656,
	0, 2655, 1126, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 644,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	651, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 481, 1212,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1211, 407, 1178,
	1179, 0, 1139, 0, 409, 410, 1213, 1171, 1214, 411,
	412, 413, 1215, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1207,
	1216, 425, 426, 1217, 0, 427, 428, 429, 430, 431,
	432, 435, 1162, 1161, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1218, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1219,
	477, 465, 1101, 279, 1220, 478, 479, 1124, 1172, 480,
	1186, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1221, 491, 1222,
	1201, 492, 493, 1111, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1202, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1182, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1223, 546, 547, 548, 549, 550, 1112,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1165, 573, 574, 556, 557, 575, 576, 1224, 577,
	578, 579, 580, 581, 582, 583, 1180, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1227, 591,
	592, 593, 594, 1203, 598, 599, 0, 600, 601, 1098,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1192, 1193, 1194, 1195, 0, 619,
	0, 611, 612, 613, 1204, 614, 1205, 1122, 615, 616,
	617, 618, 0, 620, 621, 0, 1105, 622, 623, 624,
	626, 627, 625, 628, 1166, 629, 0, 0, 630, 631,
	632, 690, 1189, 1226, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1102, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 0, 0, 0, 0, 0, 0, 0,
	1128, 2653, 0, 2652, 1126, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 644, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 651, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	481, 1212, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1211,
	407, 1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171,
	1214, 411, 412, 413, 1215, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1207, 1216, 425, 426, 1217, 0, 427, 428, 429,
	430, 431, 432, 435, 1162, 1161, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1218, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1219, 477, 465, 1101, 279, 1220, 478, 479, 1124,
	1172, 480, 1186, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1221,
	491, 1222, 1201, 492, 493, 1111, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1202, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1182, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1223, 546, 547, 548, 549,
	550, 1112, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1165, 573, 574, 556, 557, 575, 576,
	1224, 577, 578, 579, 580, 581, 582, 583, 1180, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1227, 591, 592, 593, 594, 1203, 598, 599, 0, 600,
	601, 1098, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1192, 1193, 1194, 1195,
	0, 619, 0, 611, 612, 613, 1204, 614, 1205, 1122,
	615, 616, 617, 618, 0, 620, 621, 0, 1105, 622,
	623, 624, 626, 627, 625, 628, 1166, 629, 0, 0,
	630, 631, 632, 690, 1189, 1226, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1102, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 0, 0, 0, 0, 0,
	0, 0, 1128, 2650, 0, 2649, 1126, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 644, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 651, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 481, 1212, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1211, 407, 1178, 1179, 0, 1139, 0, 409, 410,
	1213, 1171, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1207, 1216, 425, 426, 1217, 0, 427,
	428, 429, 430, 431, 432, 435, 1162, 1161, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 1101, 279, 1220, 478,
	479, 1124, 1172, 480, 1186, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1221, 491, 1222, 1201, 492, 493, 1111, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1202, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1182, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 1112, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1165, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	1180, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1227, 591, 592, 593, 594, 1203, 598, 599,
	0, 600, 601, 1098, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1192, 1193,
	1194, 1195, 0, 619, 0, 611, 612, 613, 1204, 614,
	1205, 1122, 615, 616, 617, 618, 0, 620, 621, 0,
	1105, 622, 623, 624, 626, 627, 625, 628, 1166, 629,
	0, 0, 630, 631, 632, 690, 1189, 1226, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 0, 0, 0,
	0, 0, 0, 0, 1128, 2647, 0, 1737, 1126, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 644, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 651, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 481, 1212, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1211, 407, 1178, 1179, 0, 1139, 0,
	409, 410, 1213, 1171, 1214, 411, 412, 413, 1215, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1207, 1216, 425, 426, 1217,
	0, 427, 428, 429, 430, 431, 432, 435, 1162, 1161,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1218,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1219, 477, 465, 1101, 279,
	1220, 478, 479, 1124, 1172, 480, 1186, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1221, 491, 1222, 1201, 492, 493, 1111,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1202, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1182, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1223,
	546, 547, 548, 549, 550, 1112, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1165, 573, 574,
	556, 557, 575, 576, 1224, 577, 578, 579, 580, 581,
	582, 583, 1180, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1227, 591, 592, 593, 594, 1203,
	598, 599, 0, 600, 601, 1098, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1192, 1193, 1194, 1195, 0, 619, 0, 611, 612, 613,
	1204, 614, 1205, 1122, 615, 616, 617, 618, 0, 620,
	621, 0, 1105, 622, 623, 624, 626, 627, 625, 628,
	1166, 629, 0, 0, 630, 631, 632, 690, 1189, 1226,
	0, 634, 633, 635, 693, 636, 637, 1736, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1102, 0, 0,
	1091, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 644, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 481, 1212, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1211, 407, 1178, 1179,
	0, 1139, 0, 409, 410, 1213, 1171, 1214, 411, 412,
	413, 1215, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1207, 1216,
	425, 426, 1217, 0, 427, 428, 429, 430, 431, 432,
	435, 1162, 1161, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1218, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1219, 477,
	465, 1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186,
	482, 483, 0, 0, 484, 0, 1106, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1221, 491, 1222, 1201,
	492, 493, 1111, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1202, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1182,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1223, 546, 547, 548, 549, 550, 1112, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1165, 573, 574, 556, 557, 575, 576, 1224, 577, 578,
	579, 580, 581, 582, 583, 1180, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1227, 591, 592,
	593, 594, 1203, 598, 599, 0, 600, 601, 1098, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1192, 1193, 1194, 1195, 0, 619, 0,
	611, 612, 613, 1204, 614, 1205, 1122, 615, 616, 617,
	618, 0, 620, 621, 0, 1105, 622, 623, 624, 626,
	627, 625, 628, 1166, 629, 0, 0, 630, 631, 632,
	690, 1189, 1226, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1102, 0, 0, 0, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 644, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 651, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 4729, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	481, 1212, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1211,
	407, 1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171,
	1214, 411, 412, 413, 1215, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1207, 1216, 425, 426, 1217, 0, 427, 428, 429,
	430, 431, 432, 435, 1162, 1161, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1218, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1219, 477, 465, 1101, 279, 1220, 478, 479, 1124,
	1172, 480, 1186, 482, 483, 0, 0, 484, 0, 1106,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1221,
	491, 1222, 1201, 492, 493, 1111, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1202, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1182, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1223, 546, 547, 548, 549,
	550, 1112, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1165, 573, 574, 556, 557, 575, 576,
	1224, 577, 578, 579, 580, 581, 582, 583, 1180, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1227, 591, 592, 593, 594, 1203, 598, 599, 0, 600,
	601, 1098, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1192, 1193, 1194, 1195,
	0, 619, 0, 611, 612, 613, 1204, 614, 1205, 1122,
	615, 616, 617, 618, 0, 620, 621, 0, 1105, 622,
	623, 624, 626, 627, 625, 628, 1166, 629, 0, 0,
	630, 631, 632, 690, 1189, 1226, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1102, 0, 0, 0, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 651, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 2490, 404, 405, 406,
	408, 0, 1211, 407, 1178, 1179, 0, 1139, 0, 409,
	410, 1213, 1171, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1207, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 1162, 1161, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1101, 279, 1220,
	478, 479, 1124, 1172, 480, 1186, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 1201, 492, 493, 1111, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1202,
	511, 678, 512, 513, 2489, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1182, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 1112, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1165, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 1180, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1227, 591, 592, 593, 594, 1203, 598,
	599, 0, 600, 601, 1098, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1192,
	1193, 1194, 1195, 0, 619, 0, 611, 612, 613, 1204,
	614, 1205, 1122, 615, 616, 617, 618, 0, 620, 621,
	0, 1105, 622, 623, 624, 626, 627, 625, 628, 1166,
	629, 0, 0, 630, 631, 632, 690, 1189, 1226, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1102, 0, 0, 0,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 644, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 481, 1212, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1211, 407, 1178, 1179, 0,
	1139, 0, 409, 410, 1213, 1171, 1214, 411, 412, 413,
	1215, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1207, 1216, 425,
	426, 1217, 0, 427, 428, 429, 430, 431, 432, 435,
	1162, 1161, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1218, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1219, 477, 465,
	1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186, 482,
	483, 0, 0, 484, 0, 1106, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1221, 491, 1222, 1201, 492,
	493, 1111, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1202, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1182, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1223, 546, 547, 548, 549, 550, 1112, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1165,
	573, 574, 556, 557, 575, 576, 1224, 577, 578, 579,
	580, 581, 582, 583, 1180, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1227, 591, 592, 593,
	594, 1203, 598, 599, 0, 600, 601, 1098, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1192, 1193, 1194, 1195, 0, 619, 0, 611,
	612, 613, 1204, 614, 1205, 1122, 615, 616, 617, 618,
	0, 620, 621, 0, 1105, 622, 623, 624, 626, 627,
	625, 628, 1166, 629, 0, 0, 630, 631, 632, 690,
	1189, 1226, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1102,
	0, 0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	644, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 651, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	4464, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 481,
	1212, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1211, 407,
	1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171, 1214,
	411, 412, 413, 1215, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1207, 1216, 425, 426, 1217, 0, 427, 428, 429, 430,
	431, 432, 435, 1162, 1161, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1218, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1219, 477, 465, 1101, 279, 1220, 478, 479, 1124, 1172,
	480, 1186, 482, 483, 0, 0, 484, 0, 1106, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1221, 491,
	1222, 1201, 492, 493, 1111, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1202, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1182, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1223, 546, 547, 548, 549, 550,
	1112, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1165, 573, 574, 556, 557, 575, 576, 1224,
	577, 578, 579, 580, 581, 582, 583, 1180, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1227,
	591, 592, 593, 594, 1203, 598, 599, 0, 600, 601,
	1098, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1192, 1193, 1194, 1195, 0,
	619, 0, 611, 612, 613, 1204, 614, 1205, 1122, 615,
	616, 617, 618, 0, 620, 621, 0, 1105, 622, 623,
	624, 626, 627, 625, 628, 1166, 629, 0, 0, 630,
	631, 632, 690, 1189, 1226, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1102, 0, 0, 0, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 644, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 651, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 481, 1212, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1211, 407, 1178, 1179, 0, 1139, 0, 409, 410,
	1213, 1171, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1207, 1216, 425, 426, 1217, 0, 427,
	428, 429, 430, 431, 432, 435, 1162, 1161, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 1101, 4053, 1220, 478,
	479, 1124, 1172, 480, 1186, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1221, 491, 1222, 1201, 492, 493, 1111, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1202, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1182, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 1112, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1165, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	1180, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1227, 591, 592, 593, 594, 1203, 598, 599,
	0, 600, 601, 1098, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1192, 1193,
	1194, 1195, 0, 619, 0, 611, 612, 613, 1204, 614,
	1205, 1122, 615, 616, 617, 618, 0, 620, 621, 0,
	1105, 622, 623, 624, 626, 627, 625, 628, 1166, 629,
	0, 0, 630, 631, 632, 690, 1189, 1226, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 1965, 0, 0,
	0, 0, 0, 0, 1128, 0, 0, 0, 1126, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 644, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 651, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 481, 1212, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1211, 407, 1178, 1179, 0, 1139, 0,
	409, 410, 1213, 1171, 1214, 411, 412, 413, 1215, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1207, 1216, 425, 426, 1217,
	0, 427, 428, 429, 430, 431, 432, 435, 1162, 1161,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1218,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1219, 477, 465, 1101, 279,
	1220, 478, 479, 1124, 1172, 480, 1186, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1221, 491, 1222, 1201, 492, 493, 1111,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1202, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1182, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1223,
	546, 547, 548, 549, 550, 1112, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1165, 573, 574,
	556, 557, 575, 576, 1224, 577, 578, 579, 580, 581,
	582, 583, 1180, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1227, 591, 592, 593, 594, 1203,
	598, 599, 0, 600, 601, 1098, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1192, 1193, 1194, 1195, 0, 619, 0, 611, 612, 613,
	1204, 614, 1205, 1122, 615, 616, 617, 618, 0, 620,
	621, 0, 1105, 622, 623, 624, 626, 627, 625, 628,
	1166, 629, 0, 0, 630, 631, 632, 690, 1189, 1226,
	3764, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1102, 0, 0,
	0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 644, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 481, 1212, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1211, 407, 1178, 1179,
	0, 1139, 0, 409, 410, 1213, 1171, 1214, 411, 412,
	413, 1215, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1207, 1216,
	425, 426, 1217, 0, 427, 428, 429, 430, 431, 432,
	435, 1162, 1161, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1218, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1219, 477,
	465, 1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1221, 491, 1222, 1201,
	492, 493, 1111, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1202, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1182,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1223, 546, 547, 548, 549, 550, 1112, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1165, 573, 574, 556, 557, 575, 576, 1224, 577, 578,
	579, 580, 581, 582, 583, 1180, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1227, 591, 592,
	593, 594, 1203, 598, 599, 0, 600, 601, 1098, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1192, 1193, 1194, 1195, 0, 619, 0,
	611, 612, 613, 1204, 614, 1205, 1122, 615, 616, 617,
	618, 0, 620, 621, 0, 1105, 622, 623, 624, 626,
	627, 625, 628, 1166, 629, 0, 0, 630, 631, 632,
	690, 1189, 1226, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 1965, 0, 0, 0, 0, 0, 0, 1128,
	0, 0, 0, 1126, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	644, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 651, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 2749, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 481,
	1212, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1211, 407,
	1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171, 1214,
	411, 412, 413, 1215, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1207, 1216, 425, 426, 1217, 0, 427, 428, 429, 430,
	431, 432, 435, 1162, 1161, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1218, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1219, 477, 465, 1101, 279, 1220, 478, 479, 1124, 1172,
	480, 1186, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1221, 491,
	1222, 1201, 492, 493, 1111, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1202, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1182, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1223, 546, 547, 548, 549, 550,
	1112, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1165, 573, 574, 556, 557, 575, 576, 1224,
	577, 578, 579, 580, 581, 582, 583, 1180, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1227,
	591, 592, 593, 594, 1203, 598, 599, 0, 600, 601,
	1098, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1192, 1193, 1194, 1195, 0,
	619, 0, 611, 612, 613, 1204, 614, 1205, 1122, 615,
	616, 617, 618, 0, 620, 621, 0, 1105, 622, 623,
	624, 626, 627, 625, 628, 1166, 629, 0, 0, 630,
	631, 632, 690, 1189, 1226, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1102, 0, 0, 0, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 644, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 651, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 481, 1212, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1211, 407, 1178, 1179, 0, 1139, 0, 409, 410,
	1213, 1171, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1207, 1216, 425, 426, 1217, 0, 427,
	428, 429, 430, 431, 432, 435, 1162, 1161, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 1101, 279, 1220, 478,
	479, 1124, 1172, 480, 1186, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1221, 491, 1222, 1201, 492, 493, 1111, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1202, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1182, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 1112, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1165, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	1180, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1227, 591, 592, 593, 594, 1203, 598, 599,
	0, 600, 601, 1098, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1192, 1193,
	1194, 1195, 0, 619, 0, 611, 612, 613, 1204, 614,
	1205, 1122, 615, 616, 617, 618, 0, 620, 621, 0,
	1105, 622, 623, 624, 626, 627, 625, 628, 1166, 629,
	0, 0, 630, 631, 632, 690, 1189, 1226, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 0, 0, 0,
	0, 0, 0, 0, 1128, 1894, 0, 2754, 1126, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 644, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 651, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 481, 1212, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1211, 407, 1178, 1179, 0, 1139, 0,
	409, 410, 1213, 1171, 1214, 411, 412, 413, 1215, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1207, 1216, 425, 426, 1217,
	0, 427, 428, 429, 430, 431, 432, 435, 1162, 1161,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1218,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1219, 477, 465, 1101, 279,
	1220, 478, 479, 1124, 1172, 480, 1186, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1221, 491, 1222, 1201, 492, 493, 1111,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1202, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1182, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1223,
	546, 547, 548, 549, 550, 1112, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1165, 573, 574,
	556, 557, 575, 576, 1224, 577, 578, 579, 580, 581,
	582, 583, 1180, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1227, 591, 592, 593, 594, 1203,
	598, 599, 0, 600, 601, 1098, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1192, 1193, 1194, 1195, 0, 619, 0, 611, 612, 613,
	1204, 614, 1205, 1122, 615, 616, 617, 618, 0, 620,
	621, 0, 1105, 622, 623, 624, 626, 627, 625, 628,
	1166, 629, 0, 0, 630, 631, 632, 690, 1189, 1226,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1102, 0, 0,
	2752, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 644, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 481, 1212, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1211, 407, 1178, 1179,
	0, 1139, 0, 409, 410, 1213, 1171, 1214, 411, 412,
	413, 1215, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1207, 1216,
	425, 426, 1217, 0, 427, 428, 429, 430, 431, 432,
	435, 1162, 1161, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1218, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1219, 477,
	465, 1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1221, 491, 1222, 1201,
	492, 493, 1111, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1202, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1182,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1223, 546, 547, 548, 549, 550, 1112, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1165, 573, 574, 556, 557, 575, 576, 1224, 577, 578,
	579, 580, 581, 582, 583, 1180, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1227, 591, 592,
	593, 594, 1203, 598, 599, 0, 600, 601, 1098, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1192, 1193, 1194, 1195, 0, 619, 0,
	611, 612, 613, 1204, 614, 1205, 1122, 615, 616, 617,
	618, 0, 620, 621, 0, 1105, 622, 623, 624, 626,
	627, 625, 628, 1166, 629, 0, 0, 630, 631, 632,
	690, 1189, 1226, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1102, 0, 0, 2740, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 644, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 651, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	481, 1212, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1211,
	407, 1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171,
	1214, 411, 412, 413, 1215, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1207, 1216, 425, 426, 1217, 0, 427, 428, 429,
	430, 431, 432, 435, 1162, 1161, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1218, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1219, 477, 465, 1101, 279, 1220, 478, 479, 1124,
	1172, 480, 1186, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1221,
	491, 1222, 1201, 492, 493, 1111, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1202, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1182, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1223, 546, 547, 548, 549,
	550, 1112, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1165, 573, 574, 556, 557, 575, 576,
	1224, 577, 578, 579, 580, 581, 582, 583, 1180, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1227, 591, 592, 593, 594, 1203, 598, 599, 0, 600,
	601, 1098, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1192, 1193, 1194, 1195,
	0, 619, 0, 611, 612, 613, 1204, 614, 1205, 1122,
	615, 616, 617, 618, 0, 620, 621, 0, 1105, 622,
	623, 624, 626, 627, 625, 628, 1166, 629, 0, 0,
	630, 631, 632, 690, 1189, 1226, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1102, 0, 0, 2728, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 651, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1211, 407, 1178, 1179, 0, 1139, 0, 409,
	410, 1213, 1171, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1207, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 1162, 1161, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1101, 279, 1220,
	478, 479, 1124, 1172, 480, 1186, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 1201, 492, 493, 1111, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1202,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1182, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 1112, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1165, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 1180, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1227, 591, 592, 593, 594, 1203, 598,
	599, 0, 600, 601, 1098, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1192,
	1193, 1194, 1195, 0, 619, 0, 611, 612, 613, 1204,
	614, 1205, 1122, 615, 616, 617, 618, 0, 620, 621,
	0, 1105, 622, 623, 624, 626, 627, 625, 628, 1166,
	629, 0, 0, 630, 631, 632, 690, 1189, 1226, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1102, 0, 0, 2726,
	0, 2717, 2724, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 644, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	2720, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 2721, 396, 1169, 1170, 1173, 481, 1212, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1211, 407, 1178, 1179, 0,
	1139, 0, 409, 410, 1213, 1171, 1214, 411, 412, 413,
	1215, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1207, 1216, 425,
	426, 1217, 0, 427, 428, 429, 430, 431, 432, 435,
	1162, 1161, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 2722, 445, 2719, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1218, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1219, 477, 465,
	1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1221, 491, 1222, 1201, 492,
	493, 1111, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1202, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1182, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1223, 546, 547, 548, 549, 550, 1112, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 2723, 0, 568, 569, 567, 570, 571, 572, 1165,
	573, 574, 556, 557, 575, 576, 1224, 577, 578, 579,
	580, 581, 582, 583, 1180, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1227, 591, 592, 593,
	594, 1203, 598, 599, 0, 600, 601, 1098, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1192, 1193, 1194, 1195, 0, 619, 0, 611,
	612, 613, 1204, 614, 1205, 1122, 615, 616, 617, 618,
	0, 620, 621, 0, 1105, 622, 623, 624, 626, 627,
	625, 628, 1166, 629, 0, 0, 630, 631, 632, 690,
	1189, 1226, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 2718, 642, 1102,
	0, 0, 2714, 0, 2717, 2724, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	644, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 651, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 2720, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 2721, 396, 1169, 1170, 1173, 481,
	1212, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1211, 407,
	1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171, 1214,
	411, 412, 413, 1215, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1207, 1216, 425, 426, 1217, 0, 427, 428, 429, 430,
	431, 432, 435, 1162, 1161, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 2722, 445, 2719, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1218, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1219, 477, 465, 1101, 279, 1220, 478, 479, 1124, 1172,
	480, 1186, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1221, 491,
	1222, 1201, 492, 493, 1111, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1202, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1182, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1223, 546, 547, 548, 549, 550,
	1112, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 2723, 0, 568, 569, 567, 570,
	571, 572, 1165, 573, 574, 556, 557, 575, 576, 1224,
	577, 578, 579, 580, 581, 582, 583, 1180, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1227,
	591, 592, 593, 594, 1203, 598, 599, 0, 600, 601,
	1098, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1192, 1193, 1194, 1195, 0,
	619, 0, 611, 612, 613, 1204, 614, 1205, 1122, 615,
	616, 617, 618, 0, 620, 621, 0, 1105, 622, 623,
	624, 626, 627, 625, 628, 1166, 629, 0, 0, 630,
	631, 632, 690, 1189, 1226, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	2718, 642, 1102, 0, 0, 0, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 644, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 651, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 481, 1212, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1211, 407, 1178, 1179, 0, 1139, 0, 409, 410,
	1213, 1171, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1207, 1216, 425, 426, 1217, 0, 427,
	428, 429, 430, 431, 432, 435, 1162, 1161, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 1101, 279, 1220, 478,
	479, 1124, 1172, 480, 1186, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1221, 491, 1222, 1201, 492, 493, 1111, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1202, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1182, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 1112, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1165, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	1180, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1227, 591, 592, 593, 594, 1203, 598, 599,
	0, 600, 601, 1098, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1192, 1193,
	1194, 1195, 0, 619, 0, 611, 612, 613, 1204, 614,
	1205, 1122, 615, 616, 617, 618, 0, 620, 621, 0,
	1105, 622, 623, 624, 626, 627, 625, 628, 1166, 629,
	0, 0, 630, 631, 632, 690, 1189, 1226, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 0, 0, 0,
	0, 0, 1902, 0, 1128, 0, 0, 0, 1126, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 2469, 287, 288, 0, 0, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 644, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 651, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 481, 1212, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1211, 407, 1178, 1179, 0, 1139, 0,
	409, 410, 1213, 1171, 1214, 411, 412, 413, 1215, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1207, 1216, 425, 426, 1217,
	0, 427, 428, 429, 430, 431, 432, 435, 1162, 1161,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1218,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1219, 477, 465, 1101, 279,
	1220, 478, 479, 1124, 1172, 480, 1186, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1221, 491, 1222, 1201, 492, 493, 1111,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1202, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1182, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1223,
	546, 547, 548, 549, 550, 1112, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1165, 573, 574,
	556, 557, 575, 576, 1224, 577, 578, 579, 580, 581,
	582, 583, 1180, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1227, 591, 592, 593, 594, 1203,
	598, 599, 0, 600, 601, 1098, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1192, 1193, 1194, 1195, 0, 619, 0, 611, 612, 613,
	1204, 614, 1205, 1122, 615, 616, 617, 618, 0, 620,
	621, 0, 1105, 622, 623, 624, 626, 627, 625, 628,
	1166, 629, 0, 0, 630, 631, 632, 690, 1189, 1226,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1102, 0, 0,
	2433, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 644, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 481, 1212, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1211, 407, 1178, 1179,
	0, 1139, 0, 409, 410, 1213, 1171, 1214, 411, 412,
	413, 1215, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1207, 1216,
	425, 426, 1217, 0, 427, 428, 429, 430, 431, 432,
	435, 1162, 1161, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1218, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1219, 477,
	465, 1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1221, 491, 1222, 1201,
	492, 493, 1111, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1202, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1182,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1223, 546, 547, 548, 549, 550, 1112, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1165, 573, 574, 556, 557, 575, 576, 1224, 577, 578,
	579, 580, 581, 582, 583, 1180, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1227, 591, 592,
	593, 594, 1203, 598, 599, 0, 600, 601, 1098, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1192, 1193, 1194, 1195, 0, 619, 0,
	611, 612, 613, 1204, 614, 1205, 1122, 615, 616, 617,
	618, 0, 620, 621, 0, 1105, 622, 623, 624, 626,
	627, 625, 628, 1166, 629, 0, 0, 630, 631, 632,
	690, 1189, 1226, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1102, 0, 0, 2407, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 644, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 651, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	481, 1212, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1211,
	407, 1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171,
	1214, 411, 412, 413, 1215, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1207, 1216, 425, 426, 1217, 0, 427, 428, 429,
	430, 431, 432, 435, 1162, 1161, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1218, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1219, 477, 465, 1101, 279, 1220, 478, 479, 1124,
	1172, 480, 1186, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1221,
	491, 1222, 1201, 492, 493, 1111, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1202, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1182, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1223, 546, 547, 548, 549,
	550, 1112, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1165, 573, 574, 556, 557, 575, 576,
	1224, 577, 578, 579, 580, 581, 582, 583, 1180, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1227, 591, 592, 593, 594, 1203, 598, 599, 0, 600,
	601, 1098, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1192, 1193, 1194, 1195,
	0, 619, 0, 611, 612, 613, 1204, 614, 1205, 1122,
	615, 616, 617, 618, 0, 620, 621, 0, 1105, 622,
	623, 624, 626, 627, 625, 628, 1166, 629, 0, 0,
	630, 631, 632, 690, 1189, 1226, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1102, 0, 0, 1742, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 651, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1211, 407, 1178, 1179, 0, 1139, 0, 409,
	410, 1213, 1171, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1207, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 1162, 1161, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1101, 279, 1220,
	478, 479, 1124, 1172, 480, 1186, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 1201, 492, 493, 1111, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1202,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1182, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 1112, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1165, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 1180, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1227, 591, 592, 593, 594, 1203, 598,
	599, 0, 600, 601, 1098, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1192,
	1193, 1194, 1195, 0, 619, 0, 611, 612, 613, 1204,
	614, 1205, 1122, 615, 616, 617, 618, 0, 620, 621,
	0, 1105, 622, 623, 624, 626, 627, 625, 628, 1166,
	629, 0, 0, 630, 631, 632, 690, 1189, 1226, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1102, 0, 0, 1671,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 644, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 481, 1212, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1211, 407, 1178, 1179, 0,
	1139, 0, 409, 410, 1213, 1171, 1214, 411, 412, 413,
	1215, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1207, 1216, 425,
	426, 1217, 0, 427, 428, 429, 430, 431, 432, 435,
	1162, 1161, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1218, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1219, 477, 465,
	1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1221, 491, 1222, 1201, 492,
	493, 1111, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1202, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1182, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1223, 546, 547, 548, 549, 550, 1112, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1165,
	573, 574, 556, 557, 575, 576, 1224, 577, 578, 579,
	580, 581, 582, 583, 1180, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1227, 591, 592, 593,
	594, 1203, 598, 599, 0, 600, 601, 1098, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1192, 1193, 1194, 1195, 0, 619, 0, 611,
	612, 613, 1204, 614, 1205, 1122, 615, 616, 617, 618,
	0, 620, 621, 0, 1105, 622, 623, 624, 626, 627,
	625, 628, 1166, 629, 0, 0, 630, 631, 632, 690,
	1189, 1226, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1102,
	0, 0, 1666, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	644, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 651, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 1133, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 481,
	1212, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1211, 407,
	1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171, 1214,
	411, 412, 413, 1215, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1207, 1216, 425, 426, 1217, 0, 427, 428, 429, 430,
	431, 432, 435, 1162, 1161, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1218, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1219, 477, 465, 1101, 279, 1220, 478, 479, 1124, 1172,
	480, 1186, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1221, 491,
	1222, 1201, 492, 493, 1111, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1202, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1182, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1223, 546, 547, 548, 549, 550,
	1112, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1165, 573, 574, 556, 557, 575, 576, 1224,
	577, 578, 579, 580, 581, 582, 583, 1180, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1227,
	591, 592, 593, 594, 1203, 598, 599, 0, 600, 601,
	1098, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1192, 1193, 1194, 1195, 0,
	619, 0, 611, 612, 613, 1204, 614, 1205, 1122, 615,
	616, 617, 618, 0, 620, 621, 0, 1105, 622, 623,
	624, 626, 627, 625, 628, 1166, 629, 0, 0, 630,
	631, 632, 690, 1189, 1226, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1102, 0, 0, 1653, 0, 1144, 1116, 1117,
	1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 644, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 651, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 481, 1212, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1211, 407, 1178, 1179, 0, 1139, 0, 409, 410,
	1213, 1171, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1207, 1216, 425, 426, 1217, 0, 427,
	428, 429, 430, 431, 432, 435, 1162, 1161, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 1101, 279, 1220, 478,
	479, 1124, 1172, 480, 1186, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1221, 491, 1222, 1201, 492, 493, 1111, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1202, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1182, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 1112, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1165, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	1180, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1227, 591, 592, 593, 594, 1203, 598, 599,
	0, 600, 601, 1098, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1192, 1193,
	1194, 1195, 0, 619, 0, 611, 612, 613, 1204, 614,
	1205, 1122, 615, 616, 617, 618, 0, 620, 621, 0,
	1105, 622, 623, 624, 626, 627, 625, 628, 1166, 629,
	0, 0, 630, 631, 632, 690, 1189, 1226, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1102, 0, 0, 1648, 0,
	1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 644, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 651, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 481, 1212, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1211, 407, 1178, 1179, 0, 1139,
	0, 409, 410, 1213, 1171, 1214, 411, 412, 413, 1215,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1207, 1216, 425, 426,
	1217, 0, 427, 428, 429, 430, 431, 432, 435, 1162,
	1161, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1218, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1219, 477, 465, 1101,
	279, 1220, 478, 479, 1124, 1172, 480, 1186, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1221, 491, 1222, 1201, 492, 493,
	1111, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1202, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1182, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1223, 546, 547, 548, 549, 550, 1112, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1165, 573,
	574, 556, 557, 575, 576, 1224, 577, 578, 579, 580,
	581, 582, 583, 1180, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1227, 591, 592, 593, 594,
	1203, 598, 599, 0, 600, 601, 1098, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1192, 1193, 1194, 1195, 0, 619, 0, 611, 612,
	613, 1204, 614, 1205, 1122, 615, 616, 617, 618, 0,
	620, 621, 0, 1105, 622, 623, 624, 626, 627, 625,
	628, 1166, 629, 0, 0, 630, 631, 632, 690, 1189,
	1226, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1102, 0,
	0, 1549, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	280, 282, 281, 283, 284, 285, 286, 1128, 287, 288,
	0, 1126, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 644,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	651, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1548, 1170, 1173, 481, 1212,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1211, 407, 1178,
	1179, 0, 1139, 0, 409, 410, 1213, 1171, 1214, 411,
	412, 413, 1215, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1207,
	1216, 425, 426, 1217, 0, 427, 428, 429, 430, 431,
	432, 435, 1162, 1161, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1218, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1219,
	477, 465, 1101, 279, 1220, 478, 479, 1124, 1172, 480,
	1186, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1221, 491, 1222,
	1201, 492, 493, 1111, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1202, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1182, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1223, 546, 547, 548, 549, 550, 1112,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1165, 573, 574, 556, 557, 575, 576, 1224, 577,
	578, 579, 580, 581, 582, 583, 1180, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1227, 591,
	592, 593, 594, 1203, 598, 599, 0, 600, 601, 1098,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1192, 1193, 1194, 1195, 0, 619,
	0, 611, 612, 613, 1204, 614, 1205, 1122, 615, 616,
	617, 618, 0, 620, 621, 0, 1105, 622, 623, 624,
	626, 627, 625, 628, 1166, 629, 0, 0, 630, 631,
	632, 690, 1189, 1226, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1102, 0, 0, 1543, 0, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 1097, 0, 0, 0, 0, 0,
	0, 1095, 1096, 280, 282, 281, 283, 284, 285, 286,
	1128, 287, 288, 0, 1126, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 1099,
	305, 1228, 1229, 651, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 1104,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1542, 1170,
	1173, 481, 1212, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1211, 407, 1178, 1179, 0, 1139, 0, 409, 410, 1213,
	1171, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1207, 1216, 425, 426, 1217, 0, 427, 428,
	429, 430, 431, 432, 435, 1162, 1161, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 1101, 279, 1220, 478, 479,
	1124, 1172, 480, 1186, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1221, 491, 1222, 1201, 492, 493, 1111, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1202, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1182, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 1112, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1165, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 1180,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1227, 591, 592, 593, 594, 1203, 598, 599, 0,
	600, 601, 1098, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1192, 1193, 1194,
	1195, 0, 619, 0, 611, 612, 613, 1204, 614, 1205,
	1122, 615, 616, 617, 618, 0, 620, 621, 0, 1105,
	622, 623, 624, 626, 627, 625, 628, 1166, 629, 0,
	0, 630, 631, 632, 690, 1189, 1226, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 1102, 0, 0, 1536, 0, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0,
	0, 0, 0, 0, 1095, 1096, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 644, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 1099, 305, 1228, 1229, 651, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 1104, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 481, 1212, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1211, 407, 1178, 1179, 0, 1139, 0,
	409, 410, 1213, 1171, 1214, 411, 412, 413, 1215, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1207, 1216, 425, 426, 1217,
	0, 427, 428, 429, 430, 431, 432, 435, 1162, 1161,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1218,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1219, 477, 465, 1101, 279,
	1220, 478, 479, 1124, 1172, 480, 1186, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1221, 491, 1222, 1201, 492, 493, 1111,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1202, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1182, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1223,
	546, 547, 548, 549, 550, 1112, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1165, 573, 574,
	556, 557, 575, 576, 1224, 577, 578, 579, 580, 581,
	582, 583, 1180, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1227, 591, 592, 593, 594, 1203,
	598, 599, 0, 600, 601, 1098, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1192, 1193, 1194, 1195, 0, 619, 0, 611, 612, 613,
	1204, 614, 1205, 1122, 615, 616, 617, 618, 0, 620,
	621, 0, 1105, 622, 623, 624, 626, 627, 625, 628,
	1166, 629, 0, 0, 630, 631, 632, 690, 1189, 1226,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1102, 0, 0,
	1350, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	1097, 0, 0, 0, 0, 0, 0, 1095, 1096, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 644, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 481, 1212, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1211, 407, 1178, 1179,
	0, 1139, 0, 409, 410, 1213, 1171, 1214, 411, 412,
	413, 1215, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1207, 1216,
	425, 426, 1217, 0, 427, 428, 429, 430, 431, 432,
	435, 1162, 1161, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1218, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1219, 477,
	465, 1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1221, 491, 1222, 1201,
	492, 493, 1111, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1202, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1182,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1223, 546, 547, 548, 549, 550, 1112, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1165, 573, 574, 556, 557, 575, 576, 1224, 577, 578,
	579, 580, 581, 582, 583, 1180, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1227, 591, 592,
	593, 594, 1203, 598, 599, 0, 600, 601, 1098, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1192, 1193, 1194, 1195, 0, 619, 0,
	611, 612, 613, 1204, 614, 1205, 1122, 615, 616, 617,
	618, 0, 620, 621, 0, 1105, 622, 623, 624, 626,
	627, 625, 628, 1166, 629, 0, 0, 630, 631, 632,
	690, 1189, 1226, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1102, 0, 0, 0, 0, 1144, 1116, 1117, 1118, 1114,
	1115, 1127, 0, 1097, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 1132, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 644, 1181, 0, 297, 1188, 298, 1187, 0, 1198,
	299, 300, 301, 302, 303, 304, 1134, 1167, 1099, 305,
	1228, 1229, 651, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 1191, 338, 340, 1185, 1184, 1104, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 1176, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1110, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 1123,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 1183,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 1196, 1197, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 1133,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	481, 1212, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1211,
	407, 1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171,
	1214, 411, 412, 413, 1215, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 1207, 1216, 425, 426, 1217, 0, 427, 428, 429,
	430, 431, 432, 435, 1162, 1161, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1218, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1219, 477, 465, 1101, 279, 1220, 478, 479, 1124,
	1172, 480, 1186, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1221,
	491, 1222, 1201, 492, 493, 1111, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1202, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1182, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1223, 546, 547, 548, 549,
	550, 1112, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1165, 573, 574, 556, 557, 575, 576,
	1224, 577, 578, 579, 580, 581, 582, 583, 1180, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	1227, 591, 592, 593, 594, 1203, 598, 599, 0, 600,
	601, 1098, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 1192, 1193, 1194, 1195,
	0, 619, 0, 611, 612, 613, 1204, 614, 1205, 1122,
	615, 616, 617, 618, 0, 620, 621, 0, 1105, 622,
	623, 624, 626, 627, 625, 628, 1166, 629, 0, 0,
	630, 631, 632, 690, 1189, 1226, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 1102, 0, 0, 0, 0, 1144, 1116,
	1117, 1118, 1114, 1115, 1127, 0, 1097, 0, 0, 0,
	0, 0, 0, 1095, 1096, 280, 282, 281, 283, 284,
	285, 286, 1128, 287, 288, 0, 1126, 0, 0, 0,
	1168, 1132, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 1181, 0, 297, 1188, 298,
	1187, 0, 1198, 299, 300, 301, 302, 303, 304, 1134,
	1167, 1099, 305, 1228, 1229, 651, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 4778, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 1191, 338, 340, 1185,
	1184, 1104, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 1176, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1110, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 1123, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 1183, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 1196, 1197, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 1133, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1211, 407, 1178, 1179, 0, 1139, 0, 409,
	410, 1213, 1171, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1207, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 1162, 1161, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 1101, 279, 1220,
	478, 479, 1124, 1172, 480, 1186, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 1201, 492, 493, 1111, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1202,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1182, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 1112, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1165, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 1180, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 1227, 591, 592, 593, 594, 1203, 598,
	599, 0, 600, 601, 1098, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 1192,
	1193, 1194, 1195, 0, 619, 0, 611, 612, 613, 1204,
	614, 1205, 1122, 615, 616, 617, 618, 0, 4777, 621,
	0, 1105, 622, 623, 624, 626, 627, 625, 628, 1166,
	629, 0, 0, 630, 631, 632, 690, 1189, 1226, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1102, 0, 0, 0,
	0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0, 1097,
	0, 0, 0, 0, 0, 0, 1095, 1096, 280, 282,
	281, 283, 284, 285, 286, 1128, 287, 288, 0, 1126,
	0, 0, 0, 1168, 1132, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 4776, 1181, 0,
	297, 1188, 298, 1187, 0, 1198, 299, 300, 301, 302,
	303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651, 0,
	306, 307, 1174, 0, 1155, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 4778, 1158, 1156, 1157,
	1164, 1160, 1159, 1163, 333, 334, 335, 336, 337, 1191,
	338, 340, 1185, 1184, 1104, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 1176,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1110, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 1199, 1200, 370, 1123, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 1183, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	1196, 1197, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1206, 0, 1133, 391, 0, 392, 393,
	394, 395, 396, 1169, 1170, 1173, 481, 1212, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 1211, 407, 1178, 1179, 0,
	1139, 0, 409, 410, 1213, 1171, 1214, 411, 412, 413,
	1215, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 1207, 1216, 425,
	426, 1217, 0, 427, 428, 429, 430, 431, 432, 435,
	1162, 1161, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1218, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1219, 477, 465,
	1101, 279, 1220, 478, 479, 1124, 1172, 480, 1186, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1221, 491, 1222, 1201, 492,
	493, 1111, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 1202, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1182, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1223, 546, 547, 548, 549, 550, 1112, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1165,
	573, 574, 556, 557, 575, 576, 1224, 577, 578, 579,
	580, 581, 582, 583, 1180, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 1227, 591, 592, 593,
	594, 1203, 598, 599, 0, 600, 601, 1098, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 1192, 1193, 1194, 1195, 0, 619, 0, 611,
	612, 613, 1204, 614, 1205, 1122, 615, 616, 617, 618,
	0, 4777, 621, 0, 1105, 622, 623, 624, 626, 627,
	625, 628, 1166, 629, 0, 0, 630, 631, 632, 690,
	1189, 1226, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1102,
	0, 0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115,
	1127, 0, 1097, 0, 0, 0, 0, 0, 0, 1095,
	1096, 280, 282, 281, 283, 284, 285, 286, 1128, 287,
	288, 0, 1126, 0, 0, 0, 1168, 1132, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	644, 1181, 0, 297, 1188, 298, 1187, 0, 1198, 299,
	300, 301, 302, 303, 304, 1134, 1167, 1099, 305, 1228,
	1229, 651, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 4399, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 1191, 338, 340, 1185, 1184, 1104, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 1176, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1110, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 1123, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 1183, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 1196, 1197, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 4400, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 481,
	1212, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1211, 407,
	1178, 1179, 0, 1139, 0, 409, 410, 1213, 1171, 1214,
	411, 412, 413, 1215, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	1207, 1216, 425, 426, 1217, 0, 427, 428, 429, 430,
	431, 432, 435, 1162, 1161, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1218, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1219, 477, 465, 1101, 279, 1220, 478, 479, 1124, 1172,
	480, 1186, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1221, 491,
	1222, 1201, 492, 493, 1111, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1202, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1182, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1223, 546, 547, 548, 4398, 550,
	1112, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1165, 573, 574, 556, 557, 575, 576, 1224,
	577, 578, 579, 580, 581, 582, 583, 1180, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 1227,
	591, 592, 593, 594, 1203, 598, 599, 0, 600, 601,
	1098, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 1192, 1193, 1194, 1195, 0,
	619, 0, 611, 612, 613, 1204, 614, 1205, 1122, 615,
	616, 617, 618, 0, 620, 621, 0, 1105, 622, 623,
	624, 626, 627, 625, 628, 1166, 629, 0, 0, 630,
	631, 632, 690, 1189, 1226, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1102, 0, 0, 0, 0, 1144, 1116, 1117,
	1118, 3218, 3219, 1127, 0, 1097, 0, 0, 0, 0,
	0, 0, 1095, 1096, 280, 282, 281, 283, 284, 285,
	286, 1128, 287, 288, 0, 1126, 0, 0, 0, 1168,
	1132, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 644, 1181, 0, 297, 1188, 298, 1187,
	0, 1198, 299, 300, 301, 302, 303, 304, 1134, 1167,
	1099, 305, 1228, 1229, 651, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 1191, 338, 340, 1185, 1184,
	1104, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1110, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 1123, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 1183, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 1196, 1197, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 1133, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 481, 1212, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1211, 407, 1178, 1179, 0, 1139, 0, 409, 410,
	1213, 1171, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1207, 1216, 425, 426, 1217, 0, 427,
	428, 429, 430, 431, 432, 435, 1162, 1161, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 1101, 279, 1220, 478,
	479, 1124, 1172, 480, 1186, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1221, 491, 1222, 1201, 492, 493, 1111, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1202, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1182, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 1112, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1165, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	1180, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 1227, 591, 592, 593, 594, 1203, 598, 599,
	0, 600, 601, 1098, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 1192, 1193,
	1194, 1195, 0, 619, 0, 611, 612, 613, 1204, 614,
	1205, 1122, 615, 616, 617, 618, 0, 620, 621, 0,
	1105, 622, 623, 624, 626, 627, 625, 628, 1166, 629,
	0, 0, 630, 631, 632, 690, 1189, 1226, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 1102, 0, 0, 0, 0,
	1144, 1116, 1117, 1118, 3216, 3217, 1127, 0, 1097, 0,
	0, 0, 0, 0, 0, 1095, 1096, 280, 282, 281,
	283, 284, 285, 286, 1128, 287, 288, 0, 1126, 0,
	0, 0, 1168, 1132, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 644, 1181, 0, 297,
	1188, 298, 1187, 0, 1198, 299, 300, 301, 302, 303,
	304, 1134, 1167, 1099, 305, 1228, 1229, 651, 0, 306,
	307, 1174, 0, 1155, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164,
	1160, 1159, 1163, 333, 334, 335, 336, 337, 1191, 338,
	340, 1185, 1184, 1104, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 1176, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1110, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 1199, 1200, 370, 1123, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 1183, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 1196,
	1197, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1206, 0, 1133, 391, 0, 392, 393, 394,
	395, 396, 1169, 1170, 1173, 481, 1212, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 1211, 407, 1178, 1179, 0, 1139,
	0, 409, 410, 1213, 1171, 1214, 411, 412, 413, 1215,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 1207, 1216, 425, 426,
	1217, 0, 427, 428, 429, 430, 431, 432, 435, 1162,
	1161, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1218, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1219, 477, 465, 1101,
	279, 1220, 478, 479, 1124, 1172, 480, 1186, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1221, 491, 1222, 1201, 492, 493,
	1111, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 1202, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1182, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1223, 546, 547, 548, 549, 550, 1112, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1165, 573,
	574, 556, 557, 575, 576, 1224, 577, 578, 579, 580,
	581, 582, 583, 1180, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 1227, 591, 592, 593, 594,
	1203, 598, 599, 0, 600, 601, 1098, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 1192, 1193, 1194, 1195, 0, 619, 0, 611, 612,
	613, 1204, 614, 1205, 1122, 615, 616, 617, 618, 0,
	620, 621, 0, 1105, 622, 623, 624, 626, 627, 625,
	628, 1166, 629, 0, 0, 630, 631, 632, 690, 1189,
	1226, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1102, 0,
	0, 0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127,
	0, 1097, 0, 0, 0, 0, 0, 0, 1095, 1096,
	280, 282, 281, 283, 284, 285, 286, 1128, 287, 288,
	0, 1126, 0, 0, 0, 1168, 1132, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 644,
	1181, 0, 297, 1188, 298, 1187, 0, 1198, 299, 300,
	301, 302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229,
	651, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 1191, 338, 340, 1185, 1184, 1104, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 1176, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1110, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 1123, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 1183, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 1196, 1197, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 1133, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 481, 1212,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1211, 407, 1178,
	1179, 0, 1139, 0, 409, 410, 1213, 1171, 1214, 411,
	412, 413, 1215, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 1207,
	1216, 425, 426, 1217, 0, 427, 428, 429, 430, 431,
	432, 435, 1162, 1161, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1218, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1219,
	477, 465, 1101, 279, 1220, 478, 479, 1124, 1172, 480,
	1186, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1221, 491, 1222,
	1201, 492, 493, 1111, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1202, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1182, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1223, 546, 547, 548, 549, 550, 1112,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1165, 573, 574, 556, 557, 575, 576, 1224, 577,
	578, 579, 580, 581, 582, 583, 1180, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 1227, 591,
	592, 593, 594, 1203, 598, 599, 0, 600, 601, 1098,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 1192, 1193, 1194, 1195, 0, 619,
	0, 611, 612, 613, 1204, 614, 1205, 1122, 615, 616,
	617, 618, 0, 620, 621, 0, 1105, 622, 623, 624,
	626, 627, 625, 628, 1166, 629, 0, 0, 630, 631,
	632, 690, 1189, 1226, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 1102, 0, 0, 0, 0, 1144, 1116, 1117, 1118,
	1114, 1115, 1127, 0, 1097, 0, 0, 0, 0, 0,
	0, 2477, 2478, 280, 282, 281, 283, 284, 285, 286,
	1128, 287, 288, 0, 1126, 0, 0, 0, 1168, 1132,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 1181, 0, 297, 1188, 298, 1187, 0,
	1198, 299, 300, 301, 302, 303, 304, 1134, 1167, 0,
	305, 1228, 1229, 651, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 1191, 338, 340, 1185, 1184, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 1176, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1110, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	1123, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	1183, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 1196, 1197, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	1133, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 481, 1212, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1211, 407, 1178, 1179, 0, 1139, 0, 409, 410, 1213,
	1171, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1207, 1216, 425, 426, 1217, 0, 427, 428,
	429, 430, 431, 432, 435, 1162, 1161, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 0, 279, 1220, 478, 479,
	1124, 1172, 480, 1186, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1221, 491, 1222, 1201, 492, 493, 1111, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1202, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1182, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 1112, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1165, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 1180,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 1227, 591, 592, 593, 594, 1203, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 1192, 1193, 1194,
	1195, 0, 619, 0, 611, 612, 613, 1204, 614, 1205,
	1122, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 1166, 629, 0,
	0, 630, 631, 632, 690, 1189, 1226, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 1144,
	1116, 1117, 1118, 1114, 1115, 1127, 0, 2736, 0, 0,
	0, 0, 0, 0, 2734, 2735, 280, 282, 281, 283,
	284, 285, 286, 1128, 287, 288, 0, 1126, 0, 0,
	0, 1168, 1132, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 644, 1181, 0, 297, 1188,
	298, 1187, 0, 1198, 299, 300, 301, 302, 303, 304,
	1134, 1167, 0, 305, 1228, 1229, 651, 0, 306, 307,
	1174, 0, 1155, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160,
	1159, 1163, 333, 334, 335, 336, 337, 1191, 338, 340,
	1185, 1184, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 1176, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1110,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	1199, 1200, 370, 1123, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 1183, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 1196, 1197,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1206, 0, 1133, 391, 0, 392, 393, 394, 395,
	396, 1169, 1170, 1173, 481, 1212, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 1211, 407, 1178, 1179, 0, 1139, 0,
	409, 410, 1213, 1171, 1214, 411, 412, 413, 1215, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 1207, 1216, 425, 426, 1217,
	0, 427, 428, 429, 430, 431, 432, 435, 1162, 1161,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1218,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1219, 477, 465, 0, 279,
	1220, 478, 479, 1124, 1172, 480, 1186, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1221, 491, 1222, 1201, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	1202, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1182, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1223,
	546, 547, 548, 549, 550, 3211, 3212, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 1165, 573, 574,
	556, 557, 575, 576, 1224, 577, 578, 579, 580, 581,
	582, 583, 1180, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 1227, 591, 592, 593, 594, 1203,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	1192, 1193, 1194, 1195, 0, 619, 0, 611, 612, 613,
	1204, 614, 1205, 1122, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	1166, 629, 0, 0, 630, 631, 632, 690, 1189, 1226,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 1144, 1116, 1117, 1118, 1114, 1115, 1127, 0,
	0, 0, 0, 0, 0, 0, 0, 2147, 2148, 280,
	282, 281, 283, 284, 285, 286, 1128, 287, 288, 0,
	1126, 0, 0, 0, 1168, 1132, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 0, 1181,
	0, 297, 1188, 298, 1187, 0, 1198, 299, 300, 301,
	302, 303, 304, 1134, 1167, 1099, 305, 1228, 1229, 651,
	0, 306, 307, 1174, 0, 1155, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 4778, 1158, 1156,
	1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336, 337,
	1191, 338, 340, 1185, 1184, 1104, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	1176, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1110, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 1199, 1200, 370, 1123, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 1183, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 1196, 1197, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1206, 0, 1133, 391, 0, 392,
	393, 394, 395, 396, 1169, 1170, 1173, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 1211, 407, 1178, 1179,
	0, 1139, 0, 409, 410, 0, 1171, 0, 411, 412,
	413, 1215, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 1207, 1216,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 1162, 1161, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1218, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1219, 477,
	465, 1101, 279, 0, 478, 479, 1124, 1172, 480, 1186,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1221, 491, 1222, 1201,
	492, 493, 1111, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 1202, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1182,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1223, 546, 547, 548, 549, 550, 1112, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1165, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 1180, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 1227, 591, 592,
	593, 594, 1203, 598, 599, 0, 600, 601, 1098, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 1192, 1193, 1194, 1195, 0, 619, 0,
	611, 612, 613, 1204, 614, 1205, 1122, 615, 616, 617,
	618, 0, 4777, 621, 0, 1105, 622, 623, 624, 626,
	627, 625, 628, 1166, 629, 0, 0, 630, 631, 632,
	690, 1189, 1226, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 1088, 0, 1266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1095, 1096, 280, 282, 281, 283, 284, 285, 286, 1128,
	287, 288, 0, 1126, 0, 0, 0, 1168, 0, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 1167, 0, 305,
	649, 650, 651, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	481, 1212, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1211,
	407, 666, 667, 0, 668, 0, 409, 410, 1213, 1171,
	1214, 411, 412, 413, 1215, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1252, 421, 423, 422, 0,
	424, 1207, 1216, 425, 426, 1217, 0, 427, 428, 429,
	430, 431, 432, 435, 1162, 1161, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1218, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1219, 477, 465, 0, 279, 1220, 478, 479, 0,
	1172, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	1258, 486, 487, 488, 0, 0, 489, 490, 673, 1221,
	491, 1222, 1201, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1202, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1223, 546, 547, 548, 549,
	550, 680, 1260, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 239, 568, 569, 567,
	570, 571, 572, 1165, 573, 574, 556, 557, 575, 576,
	1224, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 1203, 598, 599, 0, 600,
	601, 0, 597, 588, 241, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 1204, 614, 1205, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 1166, 629, 0, 0,
	630, 631, 632, 1637, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 233, 638, 639, 694,
	640, 641, 642, 1266, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	1256, 0, 1989, 0, 0, 1168, 0, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 1167, 0, 305, 649, 650,
	651, 0, 306, 307, 1174, 0, 1155, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 1158,
	1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 1199, 1200, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1206, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1169, 1170, 1173, 481, 1212,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 1211, 407, 666,
	667, 0, 668, 0, 409, 410, 1213, 1171, 1214, 411,
	412, 413, 1215, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 1252, 421, 423, 422, 0, 424, 1207,
	1216, 425, 426, 1217, 0, 427, 428, 429, 430, 431,
	432, 435, 1162, 1161, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1218, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1219,
	477, 465, 0, 279, 1220, 478, 479, 0, 1172, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 1258, 486,
	487, 488, 0, 0, 489, 490, 673, 1221, 491, 1222,
	1201, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 1202, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1223, 546, 547, 548, 549, 550, 680,
	1260, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 239, 568, 569, 567, 570, 571,
	572, 1165, 573, 574, 556, 557, 575, 576, 1224, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 1203, 598, 599, 0, 600, 601, 0,
	597, 588, 241, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 1204, 614, 1205, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 1166, 629, 0, 0, 630, 631,
	632, 1637, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 233, 638, 639, 694, 640, 641,
	642, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 3375, 0, 1266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1256, 0,
	1989, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 1168, 0, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 1167, 0, 305, 649,
	650, 651, 0, 306, 307, 1174, 0, 1155, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 1199, 1200, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1206, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1169, 1170, 1173, 481,
	1212, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 1211, 407,
	666, 667, 0, 668, 0, 409, 410, 1213, 1171, 1214,
	411, 412, 413, 1215, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 1252, 421, 423, 422, 0, 424,
	1207, 1216, 425, 426, 1217, 0, 427, 428, 429, 430,
	431, 432, 435, 1162, 1161, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1218, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1219, 477, 465, 0, 279, 1220, 478, 479, 0, 1172,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 1258,
	486, 487, 488, 0, 0, 489, 490, 673, 1221, 491,
	1222, 1201, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 1202, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1223, 546, 547, 548, 549, 550,
	680, 1260, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1165, 573, 574, 556, 557, 575, 576, 1224,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 1203, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 1204, 614, 1205, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 1166, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 1248, 0, 1266, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 1168, 0, 1256,
	0, 1254, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 1167, 0, 305,
	649, 650, 651, 0, 306, 307, 1174, 0, 1155, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 1199, 1200, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1206, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 1169, 1170, 1173,
	481, 1212, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 1211,
	407, 666, 667, 0, 668, 0, 409, 410, 1213, 1171,
	1214, 411, 412, 413, 1215, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 1252, 421, 423, 422, 0,
	424, 1207, 1216, 425, 426, 1217, 0, 427, 428, 429,
	430, 431, 432, 435, 1162, 1161, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1218, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1219, 477, 465, 0, 279, 1220, 478, 479, 0,
	1172, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	1258, 486, 487, 488, 0, 0, 489, 490, 673, 1221,
	491, 1222, 1201, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 1202, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1223, 546, 547, 548, 549,
	550, 680, 1260, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1165, 573, 574, 556, 557, 575, 576,
	1224, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 1203, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 1204, 614, 1205, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 1166, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 1266, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1168, 0,
	1256, 0, 1254, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 1167, 0,
	305, 649, 650, 651, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 481, 1212, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1211, 407, 666, 667, 0, 668, 0, 409, 410, 1213,
	1171, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 1252, 421, 423, 422,
	0, 424, 1207, 1216, 425, 426, 1217, 0, 427, 428,
	429, 430, 431, 432, 435, 1162, 1161, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 0, 279, 1220, 478, 479,
	0, 1172, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 1258, 486, 487, 488, 0, 0, 489, 490, 673,
	1221, 491, 1222, 1201, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1202, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 680, 1260, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1165, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 1203, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 1204, 614, 1205,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 1166, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 1266, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 1168,
	0, 1256, 0, 1254, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 1167,
	0, 305, 649, 650, 651, 0, 306, 307, 1174, 0,
	1155, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 1199, 1200,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1206,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 1169,
	1170, 1173, 481, 1212, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 1211, 407, 666, 667, 0, 668, 0, 409, 410,
	1213, 1171, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 1207, 1216, 425, 426, 1217, 0, 427,
	428, 429, 430, 431, 432, 435, 1162, 1161, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 0, 279, 1220, 478,
	479, 0, 1172, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1221, 491, 1222, 1201, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 1202, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 1165, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 1203, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 1204, 614,
	1205, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 1166, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 1266, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	1168, 0, 0, 0, 4219, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	1167, 0, 305, 649, 650, 651, 0, 306, 307, 1174,
	0, 1155, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 1158, 1156, 1157, 1164, 1160, 1159,
	1163, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 1199,
	1200, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1206, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1169, 1170, 1173, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 1211, 407, 666, 667, 0, 668, 0, 409,
	410, 1213, 1171, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 1207, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 1162, 1161, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 0, 279, 1220,
	478, 479, 0, 1172, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 1201, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 1202,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 680, 1260, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 1165, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 1203, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 1204,
	614, 1205, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 1166,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 274, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 2581, 2582, 2583, 2600,
	2601, 2602, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 2603, 0, 643, 0,
	0, 0, 0, 289, 290, 1886, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 1871,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 2593, 0,
	316, 317, 318, 315, 319, 0, 320, 2589, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 2594, 2595, 2596, 2597, 371, 372, 373,
	658, 0, 0, 2588, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 2598, 2599,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 2591, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 2592, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 1870, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 1088, 0, 1563, 2578, 2579, 2580, 2604, 2590, 2584,
	0, 2586, 2587, 2585, 2572, 2573, 2574, 2575, 2576, 2577,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 1208, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 1490, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 1209, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1210, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 1212,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 1211, 407, 666,
	667, 0, 668, 0, 409, 410, 1213, 669, 1214, 411,
	412, 413, 1215, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	1216, 425, 426, 1217, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 1218, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 1219,
	477, 465, 0, 0, 1220, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 1221, 491, 1222,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 1223, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 239, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 1224, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 241, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 1637, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 233, 638, 639, 694, 640, 641,
	642, 0, 0, 234, 1634, 0, 1563, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	193, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 1490,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1212, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1211, 407, 666, 667, 0, 668, 0, 409, 410, 1213,
	669, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 1216, 425, 426, 1217, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 0, 0, 1220, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1221, 491, 1222, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 239, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 241, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 1637, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 233, 638, 639,
	694, 640, 641, 642, 1563, 1562, 234, 0, 0, 0,
	1560, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 193, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 1208, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 1490, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 1209, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1210,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	1212, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 1211, 407,
	666, 667, 0, 668, 0, 409, 410, 1213, 669, 1214,
	411, 412, 413, 1215, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 1216, 425, 426, 1217, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 1218, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	1219, 477, 465, 0, 0, 1220, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 1221, 491,
	1222, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 1223, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 1224,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 1563, 1562, 0, 0, 0, 0, 1560, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 1661, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 1208, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 1490, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 1209, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1210, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 1212, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 1211, 407, 666, 667,
	0, 668, 0, 409, 410, 1213, 669, 1214, 411, 412,
	413, 1215, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 1216,
	425, 426, 1217, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 1218, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 1219, 477,
	465, 0, 0, 1220, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 1221, 491, 1222, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 1223, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 1224, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	1563, 1562, 0, 0, 0, 0, 1560, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 3674,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 1208,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 1490, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 1209, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1210, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 1212, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 1211, 407, 666, 667, 0, 668,
	0, 409, 410, 1213, 669, 1214, 411, 412, 413, 1215,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 1216, 425, 426,
	1217, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	1218, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 1219, 477, 465, 0,
	0, 1220, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 1221, 491, 1222, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 2348,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	1223, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 1224, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 1563, 2256,
	0, 0, 0, 0, 2257, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 1661, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 1208, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 1490, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	1209, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1210, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 1212, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 1211, 407, 666, 667, 0, 668, 0, 409,
	410, 1213, 669, 1214, 411, 412, 413, 1215, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 2255,
	423, 422, 0, 424, 670, 1216, 425, 426, 1217, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 1218, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 1219, 477, 465, 0, 0, 1220,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 1221, 491, 1222, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 1223, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 1224, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 1563, 1562, 0, 0,
	0, 0, 1560, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 1661, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 1490,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1212, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1211, 407, 666, 667, 0, 668, 0, 409, 410, 1213,
	669, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 1216, 425, 426, 1217, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 0, 0, 1220, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1221, 491, 1222, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 1088, 0, 274, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 1643, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 239, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 241, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 1637, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 274, 0, 0, 233, 638,
	639, 694, 640, 641, 642, 0, 0, 234, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 193, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 1266, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 1168, 0,
	0, 0, 2003, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 1167, 0,
	305, 649, 650, 651, 0, 306, 307, 1174, 0, 1155,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 1158, 1156, 1157, 1164, 1160, 1159, 1163, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 1199, 1200, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1206, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 1169, 1170,
	1173, 481, 1212, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	1211, 407, 666, 667, 0, 668, 0, 409, 410, 1213,
	1171, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 1207, 1216, 425, 426, 1217, 0, 427, 428,
	429, 430, 431, 432, 435, 1162, 1161, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 0, 279, 1220, 478, 479,
	0, 1172, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1221, 491, 1222, 1201, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 1202, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 1165, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 1203, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 1204, 614, 1205,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 1166, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 274, 3114, 0, 0, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 274, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 4947, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	0, 274, 0, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 3624, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	274, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 1631, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 274, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 3102, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 274, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 3789, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 0, 634, 633,
	635, 693, 636, 637, 0, 920, 0, 821, 638, 639,
	694, 640, 641, 642, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 2335, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 828, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 918, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 826, 602, 603, 604,
	605, 606, 827, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 821, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 2074, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 831, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 828, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 2073, 563, 564, 565, 566, 0,
	2075, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 826, 602, 603,
	604, 605, 606, 827, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 2072, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 821,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 2025, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 831, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 828, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 2024, 563, 564, 565, 566,
	0, 2026, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 826, 602,
	603, 604, 605, 606, 827, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 2023, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 819, 0, 821,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 831,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 828, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 826, 602,
	603, 604, 605, 606, 827, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 2047, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 831,
	0, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 0, 2053, 0, 297, 2043, 298, 2059,
	0, 2066, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 2069, 2070, 0, 0, 306, 307, 0, 0,
	1490, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 1191, 338, 340, 2057, 2056,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 1176, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 0, 0,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 2055, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 2064, 2065, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 0,
	0, 0, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 481, 1212, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1211, 407, 2050, 2051, 0, 2046, 0, 409, 410,
	1213, 0, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 0, 1216, 425, 426, 1217, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 0, 0, 1220, 478,
	479, 0, 0, 480, 2058, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	0, 1221, 491, 1222, 0, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	2040, 505, 506, 507, 2041, 508, 509, 510, 0, 511,
	0, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 2054, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 0, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	2052, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 2068, 591, 592, 593, 594, 0, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 2060, 2061,
	2062, 2063, 0, 619, 0, 611, 612, 613, 0, 614,
	0, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 0, 2044, 2067, 0, 634,
	633, 635, 0, 636, 637, 0, 0, 0, 0, 638,
	639, 0, 640, 641, 642, 821, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 2034, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 828, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 826, 602, 603, 604, 605, 606,
	827, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 821, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 831, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 828, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 278, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 279, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 2386, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 2387, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 826, 602, 603, 604, 605,
	606, 827, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 2388, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 831, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 1563, 1562, 0, 0, 0, 0, 1560, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 831, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	1208, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 1490, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 1209, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1210, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 1212, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 1211, 407, 666, 667, 0,
	668, 0, 409, 410, 1213, 669, 1214, 411, 412, 413,
	1215, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 1216, 425,
	426, 1217, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 1218, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 1219, 477, 465,
	0, 0, 1220, 478, 479, 3985, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 1221, 491, 1222, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 1223, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 1224, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 1563,
	1562, 0, 0, 0, 0, 1560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1490, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1212, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1211, 407, 666, 667, 0, 668, 0,
	409, 410, 1213, 669, 1214, 411, 412, 413, 1215, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1216, 425, 426, 1217,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1218,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1219, 477, 465, 0, 0,
	1220, 478, 479, 3585, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1221, 491, 1222, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1223,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1224, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1691, 0, 1563,
	1562, 0, 0, 0, 0, 1560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1490, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	1690, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 1212, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1211, 407, 666, 667, 0, 668, 0,
	409, 410, 1213, 669, 1214, 411, 412, 413, 1215, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1216, 425, 426, 1217,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1218,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1219, 477, 465, 0, 0,
	1220, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1221, 491, 1222, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 1689, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1223,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 1688, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1224, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1556, 0, 1563,
	1562, 0, 0, 0, 0, 1560, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 1208, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 1490, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 1209, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1210, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 1558, 664, 665, 481, 1212, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 1211, 407, 666, 667, 0, 668, 0,
	409, 410, 1213, 669, 1214, 411, 412, 413, 1215, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 1216, 425, 426, 1217,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 1218,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 1219, 477, 465, 0, 0,
	1220, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 1221, 491, 1222, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 1223,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 1224, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	0, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 1563, 1562, 0,
	0, 0, 0, 1560, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 1208, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	1490, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 1209,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1210, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 1212, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 1211, 407, 666, 667, 0, 668, 0, 409, 410,
	1213, 669, 1214, 411, 412, 413, 1215, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 1216, 425, 426, 1217, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 1218, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 1219, 477, 465, 0, 0, 1220, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 1221, 491, 1222, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 1223, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 1224, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 0, 634,
	633, 635, 693, 636, 637, 1563, 1562, 0, 0, 638,
	639, 694, 640, 641, 642, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 1208, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 1490, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 1209, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1210, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 1212, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 1211,
	407, 666, 667, 0, 668, 0, 409, 410, 1213, 669,
	1214, 411, 412, 413, 1215, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 1216, 425, 426, 1217, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 1218, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 1219, 477, 465, 0, 0, 1220, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 1221,
	491, 1222, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 1223, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	1224, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 1563, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 1208, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 1490,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 1209, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 277, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1210, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 1212, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	1211, 407, 666, 667, 0, 668, 0, 409, 410, 1213,
	669, 1214, 411, 412, 413, 1215, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 1216, 425, 426, 1217, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 1218, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 1219, 477, 465, 0, 0, 1220, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	1221, 491, 1222, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 1223, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 1224, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 2906, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 2903, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 2910, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 3127, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	2909, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 3124, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 3126,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 3123, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 2908, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	3125, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 2906, 306, 307, 652,
	0, 0, 2900, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 2903, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 2910, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 2909, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	2899, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 2908, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 2907, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1768, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 1767, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 1766, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 1769, 555, 562, 563, 564, 565, 566, 0,
	1765, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 1763, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	1764, 633, 635, 693, 636, 637, 1494, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1496, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 1258, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1491, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1493, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 1258, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 1397, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1399, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 1258, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 726, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 725,
	285, 286, 715, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 718, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 719, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 720,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 0,
	634, 633, 635, 693, 636, 637, 714, 0, 274, 0,
	638, 639, 694, 640, 641, 642, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 280, 282, 281, 283, 284,
	285, 286, 715, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 718, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 719, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 720,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 715, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 718, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 719,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	720, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 715, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 718, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	3996, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 720, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 1258, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 3533, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	3072, 0, 274, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 3071, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	2355, 0, 274, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 2291, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 2298, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 2297, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 2284, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 277, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 2286, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 278, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 279, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 2249, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 1258,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1609, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1608, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1511, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1504, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1506, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1333, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1332, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1323, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1322, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1320, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1319, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 1315, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 1314, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 696, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 0, 634, 633, 635, 693,
	636, 637, 265, 0, 274, 0, 638, 639, 694, 640,
	641, 642, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 277,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 278, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 279, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	277, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 278, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 279, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 718, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 719, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 720, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 2395, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 277, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 278, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 279, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 2393, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 277, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 278, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 279, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 2391, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 277, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 278, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 279,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 277, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 2304, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 278, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	279, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 277, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 2098, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 278,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 279, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 277, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 2092, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	278, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 279, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 0, 634, 633, 635, 693, 636, 637,
	905, 0, 274, 0, 638, 639, 694, 640, 641, 642,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 904, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 903, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 3127, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 4296,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1361, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 1364, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	1362, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 786, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 785, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 784,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 1365,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 782, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1361, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 1364, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	1362, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 786, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 785, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 784,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 1365,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 782, 685, 686, 687, 0, 619,
	0, 611, 1363, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 705, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 704, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 703, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 274, 3114, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 0, 634, 633, 635, 693, 636, 637, 274,
	4306, 0, 0, 638, 639, 694, 640, 641, 642, 0,
	0, 0, 0, 0, 0, 0, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 4591, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 4192, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 3951, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 2789, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 274, 3114, 0, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 663, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 3111,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 663, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 2215, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 785, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 784, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 782, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 2365, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 2353, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1664, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1657, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 776, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 772, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	777, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 786, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 785, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 784,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 1642,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 782, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1615, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1614, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1599, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1597, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1592, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1569, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1567, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1554, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1516, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1499, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1367, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 663, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 785, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 784,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 782, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1338, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1337, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 0, 634, 633, 635, 693, 636,
	637, 1329, 0, 274, 0, 638, 639, 694, 640, 641,
	642, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 1328, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 1282, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 663, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 791,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 776, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 772, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 771, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 777, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 786, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 785, 547, 548, 549,
	550, 773, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 784, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 774, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 782, 685, 686, 687,
	0, 619, 0, 611, 778, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 765, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 766, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 728, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 722, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 0, 634, 633, 635,
	693, 636, 637, 700, 0, 274, 0, 638, 639, 694,
	640, 641, 642, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 663, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 559, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 0, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 3644,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 573, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	663, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 785,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 784, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 782,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 3571, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 391, 0, 392, 393, 394,
	395, 396, 3549, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 274, 634, 633, 635, 693, 636, 637, 0, 0,
	0, 0, 638, 639, 694, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 643, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 644, 645, 0,
	297, 646, 298, 647, 0, 648, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 649, 650, 651, 0,
	306, 307, 652, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 0, 333, 334, 335, 336, 337, 0,
	338, 340, 653, 654, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 655, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 656, 657, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 658, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	659, 660, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 661, 0, 662, 391, 0, 392, 393,
	394, 395, 396, 3546, 664, 665, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 666, 667, 0,
	668, 0, 409, 410, 0, 669, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 670, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 671, 480, 672, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 673, 0, 491, 0, 674, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 675, 505, 506, 507, 676, 508,
	509, 510, 677, 511, 678, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 679, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 680, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 0,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 681, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 682, 591, 592, 593,
	594, 683, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 684, 685, 686, 687, 0, 619, 0, 611,
	612, 613, 688, 614, 689, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 690,
	691, 692, 274, 634, 633, 635, 693, 636, 637, 0,
	0, 0, 0, 638, 639, 694, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 643, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 644, 645,
	0, 297, 646, 298, 647, 0, 648, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 649, 650, 651,
	0, 306, 307, 652, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 0, 333, 334, 335, 336, 337,
	0, 338, 340, 653, 654, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 655, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 656, 657, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 658, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 659, 660, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 661, 0, 662, 391, 0, 392,
	393, 394, 395, 396, 3498, 664, 665, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 666, 667,
	0, 668, 0, 409, 410, 0, 669, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 670, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 671, 480, 672,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 673, 0, 491, 0, 674,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 675, 505, 506, 507, 676,
	508, 509, 510, 677, 511, 678, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 679,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 680, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	0, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 681, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 682, 591, 592,
	593, 594, 683, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 684, 685, 686, 687, 0, 619, 0,
	611, 612, 613, 688, 614, 689, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	690, 691, 692, 274, 634, 633, 635, 693, 636, 637,
	0, 0, 0, 0, 638, 639, 694, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 643, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 644,
	645, 0, 297, 646, 298, 647, 0, 648, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 649, 650,
	651, 0, 306, 307, 652, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 0, 333, 334, 335, 336,
	337, 0, 338, 340, 653, 654, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 655, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 656, 657, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 658, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 659, 660, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 661, 0, 662, 391, 0,
	392, 393, 394, 395, 396, 3496, 664, 665, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 666,
	667, 0, 668, 0, 409, 410, 0, 669, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 670,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 671, 480,
	672, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 673, 0, 491, 0,
	674, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 675, 505, 506, 507,
	676, 508, 509, 510, 677, 511, 678, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	679, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 680,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 0, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 681, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 682, 591,
	592, 593, 594, 683, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 684, 685, 686, 687, 0, 619,
	0, 611, 612, 613, 688, 614, 689, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 690, 691, 692, 274, 634, 633, 635, 693, 636,
	637, 0, 0, 0, 0, 638, 639, 694, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 643, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	644, 645, 0, 297, 646, 298, 647, 0, 648, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 649,
	650, 651, 0, 306, 307, 652, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 0, 333, 334, 335,
	336, 337, 0, 338, 340, 653, 654, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 655, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 656, 657, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 658, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 659, 660, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 661, 0, 662, 391,
	0, 392, 393, 394, 395, 396, 3482, 664, 665, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	666, 667, 0, 668, 0, 409, 410, 0, 669, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	670, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 671,
	480, 672, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 673, 0, 491,
	0, 674, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 675, 505, 506,
	507, 676, 508, 509, 510, 677, 511, 678, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 679, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	680, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 0, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 681, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 682,
	591, 592, 593, 594, 683, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 684, 685, 686, 687, 0,
	619, 0, 611, 612, 613, 688, 614, 689, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 690, 691, 692, 274, 634, 633, 635, 693,
	636, 637, 0, 0, 0, 0, 638, 639, 694, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 643, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 644, 645, 0, 297, 646, 298, 647, 0, 648,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	649, 650, 651, 0, 306, 307, 652, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 0, 333, 334,
	335, 336, 337, 0, 338, 340, 653, 654, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 655, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 656, 657, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 658,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 659, 660, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 661, 0, 662,
	391, 0, 392, 393, 394, 395, 396, 3082, 664, 665,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 666, 667, 0, 668, 0, 409, 410, 0, 669,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 670, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	671, 480, 672, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 673, 0,
	491, 0, 674, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 675, 505,
	506, 507, 676, 508, 509, 510, 677, 511, 678, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 679, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 680, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 0, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 681, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	682, 591, 592, 593, 594, 683, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 684, 685, 686, 687,
	0, 619, 0, 611, 612, 613, 688, 614, 689, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 690, 691, 692, 274, 634, 633, 635,
	693, 636, 637, 0, 0, 0, 0, 638, 639, 694,
	640, 641, 642, 280, 282, 281, 283, 284, 285, 286,
	0, 287, 288, 0, 0, 0, 0, 0, 643, 0,
	0, 0, 0, 289, 290, 0, 291, 292, 293, 294,
	295, 296, 644, 645, 0, 297, 646, 298, 647, 0,
	648, 299, 300, 301, 302, 303, 304, 0, 0, 0,
	305, 649, 650, 651, 0, 306, 307, 652, 0, 0,
	0, 308, 309, 310, 311, 312, 313, 314, 0, 0,
	316, 317, 318, 315, 319, 0, 320, 0, 321, 322,
	323, 324, 325, 326, 0, 327, 328, 329, 0, 330,
	331, 332, 0, 0, 0, 0, 0, 0, 0, 333,
	334, 335, 336, 337, 0, 338, 340, 653, 654, 0,
	343, 339, 341, 0, 344, 342, 345, 0, 346, 347,
	348, 0, 0, 349, 350, 351, 0, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 655, 359, 360, 361,
	363, 365, 362, 366, 367, 368, 369, 656, 657, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	658, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 659, 660, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 661, 0,
	662, 391, 0, 392, 393, 394, 395, 396, 663, 664,
	665, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 408, 0,
	0, 407, 666, 667, 0, 668, 0, 409, 410, 0,
	669, 0, 411, 412, 413, 0, 414, 0, 0, 0,
	415, 416, 417, 418, 419, 420, 0, 421, 423, 422,
	0, 424, 670, 0, 425, 426, 0, 0, 427, 428,
	429, 430, 431, 432, 435, 0, 0, 433, 434, 436,
	437, 0, 438, 439, 441, 444, 440, 442, 443, 445,
	458, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 460, 0, 459, 0, 461, 462, 463,
	464, 471, 473, 474, 469, 470, 472, 475, 476, 466,
	467, 468, 0, 477, 465, 0, 0, 0, 478, 479,
	0, 671, 480, 672, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 673,
	0, 491, 0, 674, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 675,
	505, 506, 507, 676, 508, 509, 510, 677, 511, 678,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 679, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 0, 534, 535, 536, 537, 533, 538, 539, 540,
	541, 542, 0, 543, 544, 545, 0, 546, 547, 548,
	549, 550, 680, 551, 0, 552, 553, 766, 560, 561,
	554, 555, 562, 563, 564, 565, 566, 0, 568, 569,
	567, 570, 571, 572, 0, 573, 574, 556, 557, 575,
	576, 0, 577, 578, 579, 580, 581, 582, 583, 681,
	0, 584, 0, 585, 586, 587, 589, 558, 590, 595,
	596, 682, 591, 592, 593, 594, 683, 598, 599, 0,
	600, 601, 0, 597, 588, 0, 602, 603, 604, 605,
	606, 607, 608, 364, 609, 0, 610, 684, 685, 686,
	687, 0, 619, 0, 611, 612, 613, 688, 614, 689,
	0, 615, 616, 617, 618, 0, 620, 621, 0, 0,
	622, 623, 624, 626, 627, 625, 628, 0, 629, 0,
	0, 630, 631, 632, 690, 691, 692, 274, 634, 633,
	635, 693, 636, 637, 0, 0, 0, 0, 638, 639,
	694, 640, 641, 642, 280, 282, 281, 283, 284, 285,
	286, 0, 287, 288, 0, 0, 0, 0, 0, 643,
	0, 2322, 0, 0, 289, 290, 0, 291, 292, 293,
	294, 295, 296, 644, 645, 0, 297, 646, 298, 647,
	0, 648, 299, 300, 301, 302, 303, 304, 0, 0,
	0, 305, 649, 650, 651, 0, 306, 307, 652, 0,
	0, 0, 308, 309, 310, 311, 312, 313, 314, 0,
	0, 316, 317, 318, 315, 319, 0, 320, 0, 321,
	322, 323, 324, 325, 326, 0, 327, 328, 329, 0,
	330, 331, 332, 0, 0, 0, 0, 0, 0, 0,
	333, 334, 335, 336, 337, 0, 338, 340, 653, 654,
	0, 343, 339, 341, 0, 344, 342, 345, 0, 346,
	347, 348, 0, 0, 349, 350, 351, 0, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 655, 359, 360,
	361, 363, 365, 362, 366, 367, 368, 369, 656, 657,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 658, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 659, 660, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 661,
	0, 662, 391, 0, 392, 393, 394, 395, 396, 663,
	664, 665, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 408,
	0, 0, 407, 666, 667, 0, 668, 0, 409, 410,
	0, 669, 0, 411, 412, 413, 0, 414, 0, 0,
	0, 415, 416, 417, 418, 419, 420, 0, 421, 423,
	422, 0, 424, 670, 0, 425, 426, 0, 0, 427,
	428, 429, 430, 431, 432, 435, 0, 0, 433, 434,
	436, 437, 0, 438, 439, 441, 444, 440, 442, 443,
	445, 458, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 460, 0, 459, 0, 461, 462,
	463, 464, 471, 473, 474, 469, 470, 472, 475, 476,
	466, 467, 468, 0, 477, 465, 0, 0, 0, 478,
	479, 0, 671, 480, 672, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	673, 0, 491, 0, 674, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	675, 505, 506, 507, 676, 508, 509, 510, 677, 511,
	678, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 679, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 0, 534, 535, 536, 537, 533, 538, 539,
	540, 541, 542, 0, 543, 544, 545, 0, 546, 547,
	548, 549, 550, 680, 551, 0, 552, 553, 559, 560,
	561, 554, 555, 562, 563, 564, 565, 566, 0, 568,
	569, 567, 570, 571, 572, 0, 0, 574, 556, 557,
	575, 576, 0, 577, 578, 579, 580, 581, 582, 583,
	681, 0, 584, 0, 585, 586, 587, 589, 558, 590,
	595, 596, 682, 591, 592, 593, 594, 683, 598, 599,
	0, 600, 601, 0, 597, 588, 0, 602, 603, 604,
	605, 606, 607, 608, 364, 609, 0, 610, 684, 685,
	686, 687, 0, 619, 0, 611, 612, 613, 688, 614,
	689, 0, 615, 616, 617, 618, 0, 620, 621, 0,
	0, 622, 623, 624, 626, 627, 625, 628, 0, 629,
	0, 0, 630, 631, 632, 690, 691, 692, 274, 634,
	633, 635, 693, 636, 637, 0, 0, 0, 0, 638,
	639, 694, 640, 641, 642, 280, 282, 281, 283, 284,
	285, 286, 0, 287, 288, 0, 0, 0, 0, 0,
	643, 0, 0, 0, 0, 289, 290, 0, 291, 292,
	293, 294, 295, 296, 644, 645, 0, 297, 646, 298,
	647, 0, 648, 299, 300, 301, 302, 303, 304, 0,
	0, 0, 305, 649, 650, 651, 0, 306, 307, 652,
	0, 0, 0, 308, 309, 310, 311, 312, 313, 314,
	0, 0, 316, 317, 318, 315, 319, 0, 320, 0,
	321, 322, 323, 324, 325, 326, 0, 327, 328, 329,
	0, 330, 331, 332, 0, 0, 0, 0, 0, 0,
	0, 333, 334, 335, 336, 337, 0, 338, 340, 653,
	654, 0, 343, 339, 341, 0, 344, 342, 345, 0,
	346, 347, 348, 0, 0, 349, 350, 351, 0, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 655, 359,
	360, 361, 363, 365, 362, 366, 367, 368, 369, 656,
	657, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 658, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 659, 660, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	661, 0, 662, 391, 0, 392, 393, 394, 395, 396,
	1300, 664, 665, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	408, 0, 0, 407, 666, 667, 0, 668, 0, 409,
	410, 0, 669, 0, 411, 412, 413, 0, 414, 0,
	0, 0, 415, 416, 417, 418, 419, 420, 0, 421,
	423, 422, 0, 424, 670, 0, 425, 426, 0, 0,
	427, 428, 429, 430, 431, 432, 435, 0, 0, 433,
	434, 436, 437, 0, 438, 439, 441, 444, 440, 442,
	443, 445, 458, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 460, 0, 459, 0, 461,
	462, 463, 464, 471, 473, 474, 469, 470, 472, 475,
	476, 466, 467, 468, 0, 477, 465, 0, 0, 0,
	478, 479, 0, 671, 480, 672, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 673, 0, 491, 0, 674, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 675, 505, 506, 507, 676, 508, 509, 510, 677,
	511, 678, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 679, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 0, 534, 535, 536, 537, 533, 538,
	539, 540, 541, 542, 0, 543, 544, 545, 0, 546,
	547, 548, 549, 550, 680, 551, 0, 552, 553, 559,
	560, 561, 554, 555, 562, 563, 564, 565, 566, 0,
	568, 569, 567, 570, 571, 572, 0, 573, 574, 556,
	557, 575, 576, 0, 577, 578, 579, 580, 581, 582,
	583, 681, 0, 584, 0, 585, 586, 587, 589, 558,
	590, 595, 596, 682, 591, 592, 593, 594, 683, 598,
	599, 0, 600, 601, 0, 597, 588, 0, 602, 603,
	604, 605, 606, 607, 608, 364, 609, 0, 610, 684,
	685, 686, 687, 0, 619, 0, 611, 612, 613, 688,
	614, 689, 0, 615, 616, 617, 618, 0, 620, 621,
	0, 0, 622, 623, 624, 626, 627, 625, 628, 0,
	629, 0, 0, 630, 631, 632, 690, 691, 692, 274,
	634, 633, 635, 693, 636, 637, 0, 0, 0, 0,
	638, 639, 694, 640, 641, 642, 280, 282, 281, 283,
	284, 285, 286, 0, 287, 288, 0, 0, 0, 0,
	0, 643, 0, 0, 0, 0, 289, 290, 0, 291,
	292, 293, 294, 295, 296, 644, 645, 0, 297, 646,
	298, 647, 0, 648, 299, 300, 301, 302, 303, 304,
	0, 0, 0, 305, 649, 650, 651, 0, 306, 307,
	652, 0, 0, 0, 308, 309, 310, 311, 312, 313,
	314, 0, 0, 316, 317, 318, 315, 319, 0, 320,
	0, 321, 322, 323, 324, 325, 326, 0, 327, 328,
	329, 0, 330, 331, 332, 0, 0, 0, 0, 0,
	0, 0, 333, 334, 335, 336, 337, 0, 338, 340,
	653, 654, 0, 343, 339, 341, 0, 344, 342, 345,
	0, 346, 347, 348, 0, 0, 349, 350, 351, 0,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 655,
	359, 360, 361, 363, 365, 362, 366, 367, 368, 369,
	656, 657, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 658, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 659, 660,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 661, 0, 662, 391, 0, 392, 393, 394, 395,
	396, 663, 664, 665, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 408, 0, 0, 407, 666, 667, 0, 668, 0,
	409, 410, 0, 669, 0, 411, 412, 413, 0, 414,
	0, 0, 0, 415, 416, 417, 418, 419, 420, 0,
	421, 423, 422, 0, 424, 670, 0, 425, 426, 0,
	0, 427, 428, 429, 430, 431, 432, 435, 0, 0,
	433, 434, 436, 437, 0, 438, 439, 441, 444, 440,
	442, 443, 445, 458, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 460, 0, 459, 0,
	461, 462, 463, 464, 471, 473, 474, 469, 470, 472,
	475, 476, 466, 467, 468, 0, 477, 465, 0, 0,
	0, 478, 479, 0, 671, 480, 672, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 673, 0, 491, 0, 674, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 675, 505, 506, 507, 676, 508, 509, 510,
	677, 511, 678, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 679, 523, 524, 1231,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 0, 534, 535, 536, 537, 533,
	538, 539, 540, 541, 542, 0, 543, 544, 545, 0,
	546, 547, 548, 549, 550, 680, 551, 0, 552, 553,
	559, 560, 561, 554, 555, 562, 563, 564, 565, 566,
	0, 568, 569, 567, 570, 571, 572, 0, 573, 574,
	556, 557, 575, 576, 0, 577, 578, 579, 580, 581,
	582, 583, 681, 0, 584, 0, 585, 586, 587, 589,
	558, 590, 595, 596, 682, 591, 592, 593, 594, 683,
	598, 599, 0, 600, 601, 0, 597, 588, 0, 602,
	603, 604, 605, 606, 607, 608, 364, 609, 0, 610,
	684, 685, 686, 687, 0, 619, 0, 611, 612, 613,
	688, 614, 689, 0, 615, 616, 617, 618, 0, 620,
	621, 0, 0, 622, 623, 624, 626, 627, 625, 628,
	0, 629, 0, 0, 630, 631, 632, 690, 691, 692,
	274, 634, 633, 635, 693, 636, 637, 0, 0, 0,
	0, 638, 639, 694, 640, 641, 642, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 643, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 644, 645, 0, 297,
	646, 298, 647, 0, 648, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 649, 650, 651, 0, 306,
	307, 652, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 0, 333, 334, 335, 336, 337, 0, 338,
	340, 653, 654, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	655, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 656, 657, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 658, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 659,
	660, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 661, 0, 662, 0, 0, 392, 393, 394,
	395, 396, 663, 664, 665, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 666, 667, 0, 668,
	0, 409, 410, 0, 669, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 670, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 671, 480, 672, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 673, 0, 491, 0, 674, 492, 493,
	485, 494, 495, 0, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 675, 505, 506, 507, 676, 508, 509,
	510, 677, 511, 678, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 0, 521, 522, 679, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 680, 0, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 0, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 681, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 682, 591, 592, 593, 594,
	683, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 684, 685, 686, 687, 0, 619, 0, 611, 612,
	613, 688, 614, 689, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 690, 691,
	692, 0, 634, 633, 635, 693, 636, 637, 1605, 0,
	1345, 0, 638, 639, 694, 640, 641, 642, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 282, 281,
	283, 284, 285, 286, 0, 287, 288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 289, 290, 0,
	291, 292, 293, 294, 295, 296, 0, 0, 0, 297,
	0, 298, 0, 0, 0, 299, 300, 301, 302, 303,
	304, 0, 0, 0, 305, 0, 0, 0, 0, 306,
	307, 0, 0, 0, 0, 308, 309, 310, 311, 312,
	313, 314, 0, 0, 316, 317, 318, 315, 319, 0,
	320, 0, 321, 322, 323, 324, 325, 326, 0, 327,
	328, 329, 0, 330, 331, 332, 0, 0, 0, 0,
	0, 0, 1347, 333, 334, 335, 336, 337, 0, 338,
	340, 0, 0, 0, 343, 339, 341, 0, 344, 342,
	345, 0, 346, 347, 348, 0, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	0, 359, 360, 361, 363, 365, 362, 366, 367, 368,
	369, 0, 0, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 0, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 0,
	0, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 0, 0, 0, 391, 0, 392, 393, 394,
	395, 396, 1604, 0, 0, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 408, 0, 0, 407, 0, 0, 0, 0,
	0, 409, 410, 0, 0, 0, 411, 412, 413, 0,
	414, 0, 0, 0, 415, 416, 417, 418, 419, 420,
	0, 421, 423, 422, 0, 424, 0, 0, 425, 426,
	0, 0, 427, 428, 429, 430, 431, 432, 435, 0,
	0, 433, 434, 436, 437, 0, 438, 439, 441, 444,
	440, 442, 443, 445, 458, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 460, 0, 459,
	0, 461, 462, 463, 464, 471, 473, 474, 469, 470,
	472, 475, 476, 466, 467, 468, 0, 477, 465, 0,
	0, 0, 478, 479, 0, 0, 480, 0, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 0, 0, 491, 0, 0, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 0, 508, 509,
	510, 0, 511, 0, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 0, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 0, 534, 535, 536, 537,
	533, 538, 539, 540, 541, 542, 0, 543, 544, 545,
	0, 546, 547, 548, 549, 550, 0, 551, 0, 552,
	553, 559, 560, 561, 554, 555, 562, 563, 564, 565,
	566, 0, 568, 569, 567, 570, 571, 572, 1348, 573,
	574, 556, 557, 575, 576, 0, 577, 578, 579, 580,
	581, 582, 583, 0, 0, 584, 0, 585, 586, 587,
	589, 558, 590, 595, 596, 0, 591, 592, 593, 594,
	0, 598, 599, 0, 600, 601, 0, 597, 588, 0,
	602, 603, 604, 605, 606, 607, 608, 364, 609, 0,
	610, 0, 0, 0, 0, 0, 619, 0, 611, 612,
	613, 0, 614, 0, 0, 615, 616, 617, 618, 0,
	620, 621, 0, 0, 622, 623, 624, 626, 627, 625,
	628, 0, 629, 0, 0, 630, 631, 632, 0, 1519,
	0, 1345, 634, 633, 635, 0, 636, 637, 0, 0,
	0, 0, 638, 639, 0, 640, 641, 642, 280, 282,
	281, 283, 284, 285, 286, 0, 287, 288, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 289, 290,
	0, 291, 292, 293, 294, 295, 296, 0, 0, 0,
	297, 0, 298, 0, 0, 0, 299, 300, 301, 302,
	303, 304, 0, 0, 0, 305, 0, 0, 0, 0,
	306, 307, 0, 0, 0, 0, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 316, 317, 318, 315, 319,
	0, 320, 0, 321, 322, 323, 324, 325, 326, 0,
	327, 328, 329, 0, 330, 331, 332, 0, 0, 0,
	0, 0, 0, 1347, 333, 334, 335, 336, 337, 0,
	338, 340, 0, 0, 0, 343, 339, 341, 0, 344,
	342, 345, 0, 346, 347, 348, 0, 0, 349, 350,
	351, 0, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 366, 367,
	368, 369, 0, 0, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 0, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	0, 0, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 0, 0, 0, 391, 0, 392, 393,
	394, 395, 396, 1518, 0, 0, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 408, 0, 0, 407, 0, 0, 0,
	0, 0, 409, 410, 0, 0, 0, 411, 412, 413,
	0, 414, 0, 0, 0, 415, 416, 417, 418, 419,
	420, 0, 421, 423, 422, 0, 424, 0, 0, 425,
	426, 0, 0, 427, 428, 429, 430, 431, 432, 435,
	0, 0, 433, 434, 436, 437, 0, 438, 439, 441,
	444, 440, 442, 443, 445, 458, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 460, 0,
	459, 0, 461, 462, 463, 464, 471, 473, 474, 469,
	470, 472, 475, 476, 466, 467, 468, 0, 477, 465,
	0, 0, 0, 478, 479, 0, 0, 480, 0, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 0, 0, 491, 0, 0, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 0, 508,
	509, 510, 0, 511, 0, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 0, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 0, 534, 535, 536,
	537, 533, 538, 539, 540, 541, 542, 0, 543, 544,
	545, 0, 546, 547, 548, 549, 550, 0, 551, 0,
	552, 553, 559, 560, 561, 554, 555, 562, 563, 564,
	565, 566, 0, 568, 569, 567, 570, 571, 572, 1348,
	573, 574, 556, 557, 575, 576, 0, 577, 578, 579,
	580, 581, 582, 583, 0, 0, 584, 0, 585, 586,
	587, 589, 558, 590, 595, 596, 0, 591, 592, 593,
	594, 0, 598, 599, 0, 600, 601, 0, 597, 588,
	0, 602, 603, 604, 605, 606, 607, 608, 364, 609,
	0, 610, 0, 0, 0, 0, 0, 619, 0, 611,
	612, 613, 0, 614, 0, 0, 615, 616, 617, 618,
	0, 620, 621, 0, 0, 622, 623, 624, 626, 627,
	625, 628, 0, 629, 0, 0, 630, 631, 632, 0,
	1343, 0, 1345, 634, 633, 635, 0, 636, 637, 0,
	0, 0, 0, 638, 639, 0, 640, 641, 642, 280,
	282, 281, 283, 284, 285, 286, 0, 287, 288, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 289,
	290, 0, 291, 292, 293, 294, 295, 296, 0, 0,
	0, 297, 0, 298, 0, 0, 0, 299, 300, 301,
	302, 303, 304, 0, 0, 0, 305, 0, 0, 0,
	0, 306, 307, 0, 0, 0, 0, 308, 309, 310,
	311, 312, 313, 314, 0, 0, 316, 317, 318, 315,
	319, 0, 320, 0, 321, 322, 323, 324, 325, 326,
	0, 327, 328, 329, 0, 330, 331, 332, 0, 0,
	0, 0, 0, 0, 1347, 333, 334, 335, 336, 337,
	0, 338, 340, 0, 0, 0, 343, 339, 341, 0,
	344, 342, 345, 0, 346, 347, 348, 0, 0, 349,
	350, 351, 0, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 0, 359, 360, 361, 363, 365, 362, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1342, 0, 0, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 408, 0, 0, 407, 0, 0,
	0, 0, 0, 409, 410, 0, 0, 0, 411, 412,
	413, 0, 414, 0, 0, 0, 415, 416, 417, 418,
	419, 420, 0, 421, 423, 422, 0, 424, 0, 0,
	425, 426, 0, 0, 427, 428, 429, 430, 431, 432,
	435, 0, 0, 433, 434, 436, 437, 0, 438, 439,
	441, 444, 440, 442, 443, 445, 458, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 460,
	0, 459, 0, 461, 462, 463, 464, 471, 473, 474,
	469, 470, 472, 475, 476, 466, 467, 468, 0, 477,
	465, 0, 0, 0, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 0, 534, 535,
	536, 537, 533, 538, 539, 540, 541, 542, 0, 543,
	544, 545, 0, 546, 547, 548, 549, 550, 0, 551,
	0, 552, 553, 559, 560, 561, 554, 555, 562, 563,
	564, 565, 566, 0, 568, 569, 567, 570, 571, 572,
	1348, 573, 574, 556, 557, 575, 576, 0, 577, 578,
	579, 580, 581, 582, 583, 0, 0, 584, 0, 585,
	586, 587, 589, 558, 590, 595, 596, 0, 591, 592,
	593, 594, 0, 598, 599, 0, 600, 601, 0, 597,
	588, 0, 602, 603, 604, 605, 606, 607, 608, 364,
	609, 0, 610, 0, 0, 0, 0, 0, 619, 0,
	611, 612, 613, 0, 614, 0, 0, 615, 616, 617,
	618, 0, 620, 621, 0, 0, 622, 623, 624, 626,
	627, 625, 628, 0, 629, 0, 0, 630, 631, 632,
	0, 2112, 0, 1345, 634, 633, 635, 0, 636, 637,
	0, 0, 0, 0, 638, 639, 0, 640, 641, 642,
	280, 282, 281, 283, 284, 285, 286, 0, 287, 288,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	289, 290, 0, 291, 292, 293, 294, 295, 296, 0,
	0, 0, 297, 0, 298, 0, 0, 0, 299, 300,
	301, 302, 303, 304, 0, 0, 0, 305, 0, 0,
	0, 0, 306, 307, 0, 0, 0, 0, 308, 309,
	310, 311, 312, 313, 314, 0, 0, 316, 317, 318,
	315, 319, 0, 320, 0, 321, 322, 323, 324, 325,
	326, 0, 327, 328, 329, 0, 330, 331, 332, 0,
	0, 0, 0, 0, 0, 1347, 333, 334, 335, 336,
	337, 0, 338, 340, 0, 0, 0, 343, 339, 341,
	0, 344, 342, 345, 0, 346, 347, 348, 0, 0,
	349, 350, 351, 0, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 0, 359, 360, 361, 363, 365, 362,
	366, 367, 368, 369, 0, 0, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 0, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 0, 0, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 0, 0, 0, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 408, 0, 0, 407, 0,
	0, 0, 0, 0, 409, 410, 0, 0, 0, 411,
	412, 413, 0, 414, 0, 0, 0, 415, 416, 417,
	418, 419, 420, 0, 421, 423, 422, 0, 424, 0,
	0, 425, 426, 0, 0, 427, 428, 429, 430, 431,
	432, 435, 0, 0, 433, 434, 436, 437, 0, 438,
	439, 441, 444, 440, 442, 443, 445, 458, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	460, 0, 459, 0, 461, 462, 463, 464, 471, 473,
	474, 469, 470, 472, 475, 476, 466, 467, 468, 0,
	477, 465, 0, 0, 0, 478, 479, 0, 0, 480,
	0, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 0, 0, 491, 0,
	0, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	0, 508, 509, 510, 0, 511, 0, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	0, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 0, 534,
	535, 536, 537, 533, 538, 539, 540, 541, 542, 0,
	543, 544, 545, 0, 546, 547, 548, 549, 550, 0,
	551, 0, 552, 553, 559, 560, 561, 554, 555, 562,
	563, 564, 565, 566, 0, 568, 569, 567, 570, 571,
	572, 1348, 573, 574, 556, 557, 575, 576, 0, 577,
	578, 579, 580, 581, 582, 583, 0, 0, 584, 0,
	585, 586, 587, 589, 558, 590, 595, 596, 0, 591,
	592, 593, 594, 0, 598, 599, 0, 600, 601, 0,
	597, 588, 0, 602, 603, 604, 605, 606, 607, 608,
	364, 609, 0, 610, 0, 0, 0, 0, 0, 619,
	0, 611, 612, 613, 0, 614, 0, 0, 615, 616,
	617, 618, 0, 620, 621, 0, 0, 622, 623, 624,
	626, 627, 625, 628, 0, 629, 0, 0, 630, 631,
	632, 0, 2079, 0, 1345, 634, 633, 635, 0, 636,
	637, 0, 0, 0, 0, 638, 639, 0, 640, 641,
	642, 280, 282, 281, 283, 284, 285, 286, 0, 287,
	288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 289, 290, 0, 291, 292, 293, 294, 295, 296,
	0, 0, 0, 297, 0, 298, 0, 0, 0, 299,
	300, 301, 302, 303, 304, 0, 0, 0, 305, 0,
	0, 0, 0, 306, 307, 0, 0, 0, 0, 308,
	309, 310, 311, 312, 313, 314, 0, 0, 316, 317,
	318, 315, 319, 0, 320, 0, 321, 322, 323, 324,
	325, 326, 0, 327, 328, 329, 0, 330, 331, 332,
	0, 0, 0, 0, 0, 0, 1347, 333, 334, 335,
	336, 337, 0, 338, 340, 0, 0, 0, 343, 339,
	341, 0, 344, 342, 345, 0, 346, 347, 348, 0,
	0, 349, 350, 351, 0, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 366, 367, 368, 369, 0, 0, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 0, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 0, 0, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 0, 0, 0, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 408, 0, 0, 407,
	0, 0, 0, 0, 0, 409, 410, 0, 0, 0,
	411, 412, 413, 0, 414, 0, 0, 0, 415, 416,
	417, 418, 419, 420, 0, 421, 423, 422, 0, 424,
	0, 0, 425, 426, 0, 0, 427, 428, 429, 430,
	431, 432, 435, 0, 0, 433, 434, 436, 437, 0,
	438, 439, 441, 444, 440, 442, 443, 445, 458, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 460, 0, 459, 0, 461, 462, 463, 464, 471,
	473, 474, 469, 470, 472, 475, 476, 466, 467, 468,
	0, 477, 465, 0, 0, 0, 478, 479, 0, 0,
	480, 0, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 0, 0, 491,
	0, 0, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 0, 508, 509, 510, 0, 511, 0, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 0, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 0,
	534, 535, 536, 537, 533, 538, 539, 540, 541, 542,
	0, 543, 544, 545, 0, 546, 547, 548, 549, 550,
	0, 551, 0, 552, 553, 559, 560, 561, 554, 555,
	562, 563, 564, 565, 566, 0, 568, 569, 567, 570,
	571, 572, 1348, 573, 574, 556, 557, 575, 576, 0,
	577, 578, 579, 580, 581, 582, 583, 0, 0, 584,
	0, 585, 586, 587, 589, 558, 590, 595, 596, 0,
	591, 592, 593, 594, 0, 598, 599, 0, 600, 601,
	0, 597, 588, 0, 602, 603, 604, 605, 606, 607,
	608, 364, 609, 0, 610, 0, 0, 0, 0, 0,
	619, 0, 611, 612, 613, 0, 614, 0, 0, 615,
	616, 617, 618, 0, 620, 621, 0, 0, 622, 623,
	624, 626, 627, 625, 628, 0, 629, 0, 0, 630,
	631, 632, 0, 0, 0, 1345, 634, 633, 635, 0,
	636, 637, 0, 0, 0, 0, 638, 639, 0, 640,
	641, 642, 280, 282, 281, 283, 284, 285, 286, 0,
	287, 288, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 289, 290, 0, 291, 292, 293, 294, 295,
	296, 0, 0, 0, 297, 0, 298, 0, 0, 0,
	299, 300, 301, 302, 303, 304, 0, 0, 0, 305,
	0, 0, 0, 0, 306, 307, 0, 0, 0, 0,
	308, 309, 310, 311, 312, 313, 314, 0, 0, 316,
	317, 318, 315, 319, 0, 320, 0, 321, 322, 323,
	324, 325, 326, 0, 327, 328, 329, 0, 330, 331,
	332, 0, 0, 0, 0, 0, 0, 1347, 333, 334,
	335, 336, 337, 0, 338, 340, 0, 0, 0, 343,
	339, 341, 0, 344, 342, 345, 0, 346, 347, 348,
	0, 0, 349, 350, 351, 0, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 366, 367, 368, 369, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 0,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 0, 0, 0,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 408, 0, 0,
	407, 0, 0, 0, 0, 0, 409, 410, 0, 0,
	0, 411, 412, 413, 0, 414, 0, 0, 0, 415,
	416, 417, 418, 419, 420, 0, 421, 423, 422, 0,
	424, 0, 0, 425, 426, 0, 0, 427, 428, 429,
	430, 431, 432, 435, 0, 0, 433, 434, 436, 437,
	0, 438, 439, 441, 444, 440, 442, 443, 445, 458,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 460, 0, 459, 0, 461, 462, 463, 464,
	471, 473, 474, 469, 470, 472, 475, 476, 466, 467,
	468, 0, 477, 465, 0, 0, 0, 478, 479, 0,
	0, 480, 0, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 0, 0,
	491, 0, 0, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 0, 508, 509, 510, 0, 511, 0, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 0, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	0, 534, 535, 536, 537, 533, 538, 539, 540, 541,
	542, 0, 543, 544, 545, 0, 546, 547, 548, 549,
	550, 0, 551, 0, 552, 553, 559, 560, 561, 554,
	555, 562, 563, 564, 565, 566, 0, 568, 569, 567,
	570, 571, 572, 1348, 573, 574, 556, 557, 575, 576,
	0, 577, 578, 579, 580, 581, 582, 583, 0, 0,
	584, 0, 585, 586, 587, 589, 558, 590, 595, 596,
	0, 591, 592, 593, 594, 0, 598, 599, 0, 600,
	601, 0, 597, 588, 0, 602, 603, 604, 605, 606,
	607, 608, 364, 609, 0, 610, 0, 0, 0, 0,
	0, 619, 0, 611, 612, 613, 0, 614, 0, 0,
	615, 616, 617, 618, 0, 620, 621, 0, 0, 622,
	623, 624, 626, 627, 625, 628, 0, 629, 0, 0,
	630, 631, 632, 0, 0, 0, 0, 634, 633, 635,
	0, 636, 637, 0, 0, 0, 0, 638, 639, 0,
	640, 641, 642, 1815, 1816, 0, 1848, 1849, 1850, 1859,
	1860, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1852, 1846, 0, 0, 0,
	0, 0, 0, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 1815, 1816, 0, 1848, 1849, 1850,
	1859, 1860, 1861, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 0, 0, 0, 1852, 1846, 1817, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 1837, 0,
	0, 0, 0, 1865, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1842, 1843, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1842, 1843, 0, 0,
	0, 0, 1856, 0, 1823, 1866, 0, 0, 0, 0,
	0, 0, 1845, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 1863, 0, 0, 0, 0, 0, 0, 1832, 1833,
	0, 0, 0, 1856, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 1845, 1847, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 1838, 1863, 0, 0, 0, 0, 0, 0, 1832,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	1815, 1816, 0, 1848, 1849, 1850, 1859, 1860, 1861, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 1857, 1852, 1846, 0, 0, 0, 0, 0, 0,
	1818, 0, 0, 0, 0, 1839, 0, 0, 0, 1865,
	0, 1815, 1816, 0, 1848, 1849, 1850, 1859, 1860, 1861,
	0, 0, 1870, 0, 0, 0, 1871, 0, 0, 0,
	0, 0, 1857, 1852, 1846, 1817, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 1837, 0, 0, 0, 0,
	1865, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 1870, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 1855, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835, 1831,
	0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825,
	0, 0, 0, 0, 4574, 0, 0, 0, 0, 0,
	1840, 1841, 1842, 1843, 0, 1855, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 0, 0, 4573, 0, 0, 0, 0,
	0, 1840, 1841, 1842, 1843, 0, 0, 0, 0, 1856,
	0, 1823, 1866, 0, 0, 0, 0, 0, 0, 1845,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 1863, 0,
	0, 0, 0, 0, 0, 1832, 1833, 0, 0, 0,
	1856, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	1845, 1847, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 1838, 1863,
	0, 0, 0, 0, 0, 0, 1832, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 1815, 1816, 0,
	1848, 1849, 1850, 1859, 1860, 1861, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 1852,
	1846, 0, 0, 0, 0, 0, 0, 1818, 0, 0,
	0, 0, 1839, 0, 0, 0, 1865, 0, 1815, 1816,
	0, 1848, 1849, 1850, 1859, 1860, 1861, 0, 0, 1870,
	0, 0, 0, 1871, 0, 0, 0, 0, 0, 1857,
	1852, 1846, 1817, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 1837, 0, 0, 0, 0, 1865, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 1817, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 1855, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1830, 1836, 1858, 1835, 1831, 0, 1828, 1826,
	1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 0, 0,
	0, 4383, 0, 0, 0, 0, 0, 1840, 1841, 1842,
	1843, 0, 1855, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 1829, 1830, 1836, 1858, 1835, 1831, 0, 1828,
	1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 0,
	0, 0, 4215, 0, 0, 0, 0, 0, 1840, 1841,
	1842, 1843, 0, 0, 0, 0, 1856, 0, 1823, 1866,
	0, 0, 0, 0, 0, 0, 1845, 1847, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 1863, 0, 0, 0, 0,
	0, 0, 1832, 1833, 0, 0, 0, 1856, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 1845, 1847, 0,
	1854, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 1838, 1863, 0, 0, 0,
	0, 0, 0, 1832, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1853,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 1815, 1816, 0, 1848, 1849, 1850,
	1859, 1860, 1861, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 1852, 1846, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 1839,
	0, 0, 0, 1865, 0, 1815, 1816, 0, 1848, 1849,
	1850, 1859, 1860, 1861, 0, 0, 1870, 0, 0, 0,
	1871, 0, 0, 0, 0, 0, 1857, 1852, 1846, 1817,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 1837,
	0, 0, 0, 0, 1865, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 1870, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 1855, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 1830,
	1836, 1858, 1835, 1831, 0, 1828, 1826, 1827, 1819, 1820,
	1821, 1822, 1824, 1825, 0, 0, 0, 0, 4142, 0,
	0, 0, 0, 0, 1840, 1841, 1842, 1843, 0, 1855,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 1829,
	1830, 1836, 1858, 1835, 1831, 0, 1828, 1826, 1827, 1819,
	1820, 1821, 1822, 1824, 1825, 0, 0, 0, 0, 4141,
	0, 0, 0, 0, 0, 1840, 1841, 1842, 1843, 0,
	0, 0, 0, 1856, 0, 1823, 1866, 0, 0, 0,
	0, 0, 0, 1845, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 1863, 0, 0, 0, 0, 0, 0, 1832,
	1833, 0, 0, 0, 1856, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 1845, 1847, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 1838, 1863, 0, 0, 0, 0, 0, 0,
	1832, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 1815, 1816, 0, 1848, 1849, 1850, 1859, 1860, 1861,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 1852, 1846, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 1839, 0, 0, 0,
	1865, 0, 1815, 1816, 0, 1848, 1849, 1850, 1859, 1860,
	1861, 0, 0, 1870, 0, 0, 0, 1871, 0, 0,
	0, 0, 0, 1857, 1852, 1846, 1817, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 1837, 0, 0, 0,
	0, 1865, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 1870, 0, 0, 0, 1871, 0,
	0, 0, 0, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 1855, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 0, 0, 4140, 0, 0, 0, 0,
	0, 1840, 1841, 1842, 1843, 0, 1855, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 1829, 1830, 1836, 1858,
	1835, 1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822,
	1824, 1825, 0, 0, 0, 0, 3794, 0, 0, 0,
	0, 0, 1840, 1841, 1842, 1843, 0, 0, 0, 0,
	1856, 0, 1823, 1866, 0, 0, 0, 0, 0, 0,
	1845, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 1863,
	0, 0, 0, 0, 0, 0, 1832, 1833, 0, 0,
	0, 1856, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 1845, 1847, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 1838,
	1863, 0, 0, 0, 0, 0, 0, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 1815, 1816,
	0, 1848, 1849, 1850, 1859, 1860, 1861, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 1857,
	1852, 1846, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 1839, 0, 0, 0, 1865, 0, 1815,
	1816, 0, 1848, 1849, 1850, 1859, 1860, 1861, 0, 0,
	1870, 0, 0, 0, 1871, 0, 0, 0, 0, 0,
	1857, 1852, 1846, 1817, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 1837, 0, 0, 0, 0, 1865, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 1870, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 1855, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1830, 1836, 1858, 1835, 1831, 0, 1828,
	1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 0,
	0, 0, 3293, 0, 0, 0, 0, 0, 1840, 1841,
	1842, 1843, 0, 1855, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 1829, 1830, 1836, 1858, 1835, 1831, 0,
	1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0,
	0, 0, 0, 3292, 0, 0, 0, 0, 0, 1840,
	1841, 1842, 1843, 0, 0, 0, 0, 1856, 0, 1823,
	1866, 0, 0, 0, 0, 0, 0, 1845, 1847, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 1863, 0, 0, 0,
	0, 0, 0, 1832, 1833, 0, 0, 0, 1856, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 1845, 1847,
	0, 1854, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 1838, 1863, 0, 0,
	0, 0, 0, 0, 1832, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1853, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1853, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 1815, 1816, 0, 1848, 1849,
	1850, 1859, 1860, 1861, 0, 0, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 1857, 1852, 1846, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	1839, 0, 0, 0, 1865, 0, 1815, 1816, 0, 1848,
	1849, 1850, 1859, 1860, 1861, 0, 0, 1870, 0, 0,
	0, 1871, 0, 0, 0, 0, 0, 1857, 1852, 1846,
	1817, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	1837, 0, 0, 0, 0, 1865, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 1871, 0, 0, 0, 0, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 0, 1855,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	1830, 1836, 1858, 1835, 1831, 0, 1828, 1826, 1827, 1819,
	1820, 1821, 1822, 1824, 1825, 0, 0, 0, 0, 3291,
	0, 0, 0, 0, 0, 1840, 1841, 1842, 1843, 0,
	1855, 0, 0, 0, 0, 1823, 4854, 0, 0, 0,
	1829, 1830, 1836, 1858, 1835, 1831, 0, 1828, 1826, 1827,
	1819, 1820, 1821, 1822, 1824, 1825, 0, 0, 0, 0,
	3290, 0, 0, 0, 0, 0, 1840, 1841, 1842, 1843,
	0, 0, 0, 0, 1856, 0, 1823, 1866, 3355, 0,
	0, 0, 0, 3354, 1845, 1847, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 1863, 0, 0, 0, 0, 0, 0,
	1832, 1833, 0, 0, 0, 1856, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 1845, 1847, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 1838, 1863, 0, 0, 0, 0, 0,
	0, 1832, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1854,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4853, 0, 0, 0, 0, 0, 0, 0, 1853, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1815, 1816, 1839, 1848, 1849, 1850,
	1859, 1860, 1861, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1844, 0, 1852, 1846, 0, 0,
	0, 0, 3226, 1857, 1818, 0, 0, 0, 2762, 0,
	0, 0, 0, 1865, 0, 1815, 1816, 1839, 1848, 1849,
	1850, 1859, 1860, 1861, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 1870, 0, 0, 1852, 1846, 1817,
	0, 0, 2761, 0, 1857, 1818, 0, 0, 0, 1837,
	0, 0, 0, 0, 1865, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1871, 0, 0, 0, 1870, 0, 0, 0, 0,
	1817, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 3227, 1834,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1830, 1836, 1858,
	1835, 1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822,
	1824, 1825, 0, 0, 1840, 1841, 1842, 1843, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 1830, 1836,
	1858, 1835, 1831, 0, 1828, 1826, 1827, 1819, 1820, 1821,
	1822, 1824, 1825, 0, 0, 1840, 1841, 1842, 1843, 0,
	0, 0, 0, 1856, 0, 1823, 1866, 0, 0, 0,
	0, 0, 0, 1845, 1847, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 1863, 0, 0, 0, 0, 0, 0, 1832,
	1833, 0, 0, 0, 1856, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 1845, 1847, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 1838, 1863, 0, 0, 0, 0, 0, 0,
	1832, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1854, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1853, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1815, 1816, 1839, 1848, 1849, 1850, 1859,
	1860, 1861, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1844, 0, 1852, 1846, 0, 0, 0,
	0, 0, 1857, 1818, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 1815, 1816, 1839, 1848, 1849, 1850,
	1859, 1860, 1861, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 1870, 0, 0, 1852, 1846, 1817, 0,
	0, 0, 0, 1857, 1818, 0, 0, 0, 1837, 0,
	0, 0, 0, 1865, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1871, 0, 0, 0, 1870, 0, 0, 0, 0, 1817,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 1840, 1841, 1842, 1843, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 1830, 1836, 1858,
	1835, 1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822,
	1824, 1825, 0, 0, 1840, 1841, 1842, 1843, 0, 0,
	0, 0, 1856, 0, 1823, 1866, 0, 0, 0, 0,
	0, 0, 1845, 1847, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 1863, 0, 0, 0, 0, 0, 0, 1832, 1833,
	0, 0, 0, 1856, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 1845, 1847, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 1838, 1863, 0, 0, 0, 0, 0, 0, 1832,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1854, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 1085, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1853, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1815, 1816, 1839, 1848, 1849, 1850, 1859, 1860,
	1861, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1844, 0, 1852, 1846, 0, 0, 0, 0,
	0, 1857, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 1815, 1816, 1839, 1848, 1849, 1850, 1859,
	1860, 1861, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 1870, 0, 0, 1852, 1846, 1817, 0, 0,
	3356, 0, 1857, 1818, 0, 0, 0, 1837, 0, 0,
	0, 0, 1865, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1871,
	0, 0, 0, 1870, 0, 0, 0, 0, 1817, 0,
	0, 0, 0, 0, 0, 0, 3775, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835, 1831,
	0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825,
	0, 0, 1840, 1841, 1842, 1843, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 1855, 0, 0, 0, 3361,
	0, 0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835,
	1831, 0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824,
	1825, 0, 0, 1840, 1841, 1842, 1843, 0, 0, 0,
	0, 1856, 0, 1823, 1866, 0, 0, 0, 0, 0,
	0, 1845, 1847, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	1863, 0, 0, 0, 0, 0, 0, 1832, 1833, 0,
	0, 0, 1856, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 1845, 1847, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	1838, 1863, 0, 0, 0, 0, 0, 0, 1832, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1854, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1853, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1815, 1816, 1839, 1848, 1849, 1850, 1859, 1860, 1861,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1844, 0, 1852, 1846, 0, 0, 0, 0, 0,
	1857, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 1815, 1816, 1839, 1848, 1849, 1850, 1859, 1860,
	1861, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 1870, 0, 0, 1852, 1846, 1817, 0, 0, 3294,
	0, 1857, 1818, 0, 0, 0, 1837, 0, 0, 0,
	0, 1865, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1871, 0,
	0, 0, 1870, 0, 0, 0, 0, 1817, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 1836, 1858, 1835, 1831, 0,
	1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0,
	0, 1840, 1841, 1842, 1843, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 1830, 1836, 1858, 1835, 1831,
	0, 1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825,
	0, 0, 1840, 1841, 1842, 1843, 0, 0, 0, 0,
	1856, 0, 1823, 1866, 0, 0, 0, 0, 0, 0,
	1845, 1847, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 1863,
	0, 0, 0, 0, 0, 0, 1832, 1833, 0, 0,
	0, 1856, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 1845, 1847, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 1838,
	1863, 0, 0, 0, 0, 0, 0, 1832, 1833, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1854, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3321, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1815, 1816, 1839, 1848, 1849, 1850, 1859, 1860, 1861, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1844, 0, 1852, 1846, 0, 0, 0, 0, 0, 1857,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 1815, 1816, 1839, 1848, 1849, 1850, 1859, 1860, 1861,
	0, 0, 0, 0, 0, 0, 1871, 0, 0, 0,
	1870, 0, 0, 1852, 1846, 1817, 0, 0, 0, 0,
	1857, 1818, 0, 0, 0, 1837, 0, 0, 0, 0,
	1865, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1871, 0, 0,
	0, 1870, 0, 0, 0, 0, 1817, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 0, 0, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1830, 1836, 1858, 1835, 1831, 0, 1828,
	1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 0,
	1840, 1841, 1842, 1843, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 1830, 1836, 1858, 1835, 1831, 0,
	1828, 1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0,
	0, 1840, 1841, 1842, 1843, 0, 0, 0, 0, 1856,
	0, 1823, 1866, 0, 0, 0, 0, 0, 0, 1845,
	1847, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 1863, 0,
	0, 0, 0, 0, 0, 1832, 1833, 0, 0, 0,
	1856, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	1845, 1847, 0, 1854, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 1838, 1863,
	0, 0, 0, 0, 0, 0, 1832, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1854, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1853, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1853, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1815,
	1816, 1839, 1848, 1849, 1850, 1859, 1860, 1861, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1844,
	0, 1852, 1846, 0, 0, 0, 0, 0, 1857, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 1870,
	0, 0, 0, 0, 1817, 0, 0, 0, 0, 1857,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1870, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2337, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 1830, 1836, 1858, 1835, 1831, 0, 1828, 1826,
	1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 0, 1840,
	1841, 1842, 1843, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 1830, 1836, 1858, 1835, 1831, 0, 1828,
	1826, 1827, 1819, 1820, 1821, 1822, 1824, 1825, 0, 1815,
	1816, 0, 1848, 1849, 1850, 1859, 1860, 1861, 1856, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 1845, 1847,
	0, 0, 1846, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 1862, 0, 1863, 1865, 0,
	0, 0, 0, 0, 1832, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1871, 0, 0, 0, 0,
	0, 0, 1854, 0, 1817, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 1838, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1842, 1843, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 1856, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 1845, 1847,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 1854, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1830, 1836, 1858, 1835, 1831, 0, 1828, 1826, 1827,
	1819, 1820, 1821, 1822, 1824, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1870, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 1830, 1836, 1858, 1835, 1831, 0, 1828, 1826, 1827,
	1819, 1820, 1821, 1822, 1824, 1825,
}

var sqlPact = [...]int{
	288, -1000, -1000, -1000, -1000, 233, -1000, -1000, 231, 229,
	226, 225, 223, 222, 221, 217, 216, 214, 212, -1000,
	-1000, -1000, -1000, -1000, -1000, 211, -1000, -1000, 209, -1000,
	208, 207, 206, -1000, -1000, 204, -1000, 202, -1000, -1000,
	-1000, -1000, 201, 197, 195, 91550, 90990, 92101, 2377, 115471,
	98749, 2133, 80964, 114911, 80404, 114351, 2282, 8820, 113791, 2845,
	194, -1000, 113231, 193, 192, 191, -1000, 112671, -1000, 2137,
	-1000, 190, -1000, 7920, 70315, 188, 185, 180, 177, 2715,
	172, -1000, 169, 168, -1000, -1000, 165, -1000, 11933, 1564,
	-1000, 164, 163, -1000, 5090, 96518, 151, 146, 143, 2579,
	138, 137, 68653, 136, 135, 134, 2445, 2961, -1000, -1000,
	2163, -1000, -1000, 133, 132, 128, 127, 125, 123, 120,
	119, 118, 116, 112, 111, 107, -1000, 105, 103, 101,
	99, 96, -1000, 95, 94, 93, -1000, 91, -1000, 90,
	89, 88, 85, 84, 83, 82, 81, 79, 78, 76,
	73, 69, 68, 16079, -1000, -1000, 62, 1984, 1728, 1717,
	1714, 1713, 1712, 1054, 60, 58, 57, 56, 51, 50,
	46, 45, 44, 43, 39, 38, 37, 36, 35, 34,
	33, 30, 178, 27, 26, 24, 23, 22, 21, 20,
	3941, -1000, 1847, 989, 32658, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 123185, 116022, 17, -53, 16, -1000, 3427,
	1068, 56831, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	344, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 531, 2281, 801,
	-1000, -1000, -1000, 112120, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2376, -40, -1000, 2152, -1000, -1000, -1000, -1000,
	-1000, 798, -1000, 2375, 251, 2333, -1000, -1000, -1000, 3525,
	2521, 3934, 3933, 3932, 3929, 3928, 122634, 1857, 3926, 2593,
	3919, 3915, 3913, 3912, 3907, 3904, 3900, -1000, 90430, 1090,
	89870, 89310, 3549, 111569, 88750, 111009, 125398, 48818, 988, 3524,
	-1000, -1000, -1000, -1000, -1000, -1000, 116022, -1000, 1087, -1000,
	-1000, 3899, 2212, 796, 98189, -1000, -1000, 110449, 1774, -1000,
	-1000, -1000, 1003, 1291, 34377, 34377, 34377, 336, -1000, -1000,
	-1000, -1000, -1000, -1000, 3897, 3896, 3894, 3892, 3891, -1000,
	-1000, 79844, 25594, 79284, 78724, 109889, 25024, 88190, 87630, 3890,
	3889, 3888, 109329, 124847, 3639, 3636, 1085, 2145, 1482, -1000,
	-1000, -1000, -1000, -1000, -1000, -6, 72543, 3689, 116022, -1000,
	310, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 48245, 757,
	47672, 699, 47099, 649, 108769, -1000, -1000, -1000, -1000, 74825,
	-1000, 108209, 2518, 3887, 3886, 1135, 3883, 3396, 1853, 3882,
	1941, 1257, 3881, 3880, 3879, 3877, 3876, 3875, 3870, 1505,
	107649, 3092, 1592, 107089, 1759, 124296, 1083, 87070, 92101, 2776,
	106529, 1455, 1406, -1000, -1000, -1000, -1000, 3193, 2955, 2940,
	1411, -1000, -1000, -1000, -1000, 60222, 7405, 7049, -1000, -1000,
	12573, 105969, 63062, 92101, 92101, -1000, -1000, -1000, -1000, -1000,
	-1000, 46526, 665, 45953, 916, 105409, -1000, -1000, 60790, 3034,
	-1000, -1000, -1000, -1000, -1000, 104849, 45380, 491, 44807, 822,
	116022, -1000, 3087, 2002, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3610, 1700, 3706, 2857, 74255, 2097, 1496, 3486,
	3191, 3189, 1583, 2138, 3186, 3869, 2687, 3184, 3181, 3180,
	3179, 3171, 1894, 2665, 319, 2648, 32085, 3075, 1792, 44234,
	1810, 1581, 3160, 3132, 3733, 2104, 2090, 2217, 78164, 3868,
	3867, 3458, 3121, 3120, 2903, 3118, -1000, 3033, 1494, -1000,
	-1000, -1000, -1000, -1000, 1565, -1000, -1000, -1000, -1000, -1000,
	82617, -1000, -1000, 1764, -1000, -1000, 1764, -1000, -1000, -1000,
	-1000, -1000, 1300, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1847, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2752, -1000, 2135, -1000,
	-1000, 2645, 3404, 3404, 3404, 3523, 512, 511, -1000, 178,
	-1000, -1000, 132420, -1000, -1000, 49391, 49391, 49391, 49391, 49391,
	49391, 49391, 49391, 2287, -1000, 792, -1000, -1000, 851, -1000,
	789, 728, 656, -1000, -1000, -1000, -1000, -1000, -1000, 785,
	-1000, -1000, -1000, -1000, -1000, -1000, 3689, -1000, 28514, -1000,
	-1000, -1000, 414, 784, 49391, -1000, -1000, 3758, 3757, 1052,
	-1000, 308, 1018, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3083, 782, 781, -1000, 780,
	779, 775, 772, 771, -1000, 769, -1000, 768, 767, 766,
	765, 764, 763, 762, 758, -1000, 2127, -1000, -1000, -1000,
	-1000, -1000, -1000, 697, 696, 696, 696, -1000, 1076, -1000,
	-1000, -1000, 425, 695, 321, 687, 686, 685, -1000, 756,
	755, 752, 751, 750, 748, 741, 739, 737, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1074, -1000, -1000, -1000, -1000,
	-7, 116022, -1000, 531, -7, -1000, -1000, 735, -1000, 36698,
	36698, 36698, -1000, -1000, 2374, 49391, -1000, 2550, -1000, 6,
	6, 968, 58514, -1000, 55689, 968, 325, 858, 64181, -1000,
	3031, -1000, -1000, 733, 304, -1000, -1000, -1000, -1000, 26162,
	3029, 116022, 116022, 116022, 92101, 92101, 92101, 116022, 3865, 3293,
	49391, -1000, -1000, 69755, 127051, 92652, -1000, -1000, 3613, 70873,
	69204, 127051, 3082, 126500, 3862, -1000, -1000, -1000, -1000, -1000,
	3270, 3860, 3858, 3857, -1000, 116022, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 236, 3267, -1000, -1000, 95958, 236, 3265,
	-1000, 236, 3260, -1000, 95407, -1000, -1000, 2344, 3259, -1000,
	-1000, 241, 3254, -1000, -1000, -1000, 238, 3249, -1000, -1000,
	302, -54, 3248, -1000, -1000, -1000, -1000, -1000, -1000, 132420,
	-1000, -1000, -1000, 125949, -1000, 3457, -1000, 116022, -1000, 49391,
	-1000, -1000, 3611, 1741, 3464, 3561, -1000, -1000, -15, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2571, 2552, 1211, 2415,
	-1000, 3314, 1425, 34377, 3384, -1000, -1000, -1000, -1000, -1000,
	299, 26162, -1000, -1000, -1000, -1000, -1000, -1000, 2386, 3247,
	1555, -1000, 2409, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2189, 3246, -1000, 1951, 3245, 2122, -1000, -1000,
	2205, -1000, 3443, -1000, -1000, 1791, 3244, 7, -1000, -1000,
	2681, -1000, -1000, -1000, -1000, 2096, -1000, 1379, 3243, -1000,
	2853, 2853, 86510, 3232, 62494, 60790, 72543, -10, -1000, -1000,
	-1000, -1000, -159, -1000, 24450, 132420, -1000, -1000, -1000, -1000,
	1897, 132420, 967, -1000, -1000, 3242, -1000, 132420, 964, -1000,
	-1000, 3241, -1000, 2663, -1000, 3081, -1000, -1000, 2492, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2490, -1000, -1000,
	3856, -1000, -1000, 3854, -1000, 3853, 3852, 3850, -1000, 1781,
	2118, 3848, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	85959, 2368, -1000, -1000, 84839, 3078, -1000, 2486, 3559, -1000,
	85399, 1082, -1000, 1039, 2485, -1000, 94856, 1069, 2484, -1000,
	3847, 3537, 2809, 1039, 2481, -1000, -1000, -1000, -1000, -1000,
	1079, -1000, 66417, -1000, 66417, -1000, 1668, -1000, 122083, 6,
	92101, 3689, -1000, -43, -1000, -1000, -1000, 1068, -1000, 59649,
	-1000, 59649, 97629, 75393, 1023, 839, 68092, 132379, -1000, 1059,
	-1000, -1000, 132420, -1000, -1000, -1000, 2650, -1000, -277, 2852,
	-1000, 75393, 61926, 2644, -1000, 132420, -1000, -1000, -1000, -1000,
	132420, -1000, -1000, -1000, 75393, 84839, -1000, 104289, 84288, -1000,
	-1000, 1492, 2627, -1000, -1000, -1000, 75393, 1383, 75393, 75393,
	75393, -1000, 103729, -1000, -1000, 2125, 1517, 3446, 2113, 92101,
	-1000, 1862, -1000, -1000, -1000, 3474, 3224, 116022, -1000, -1000,
	3077, -1000, 71992, 94305, -1000, 93754, -1000, 93203, -1000, 92101,
	-1000, 92101, -1000, 3845, 3844, 3842, -1000, -1000, 3841, -1000,
	3840, 3467, -1000, 776, 43661, 132420, 3463, -1000, 3839, 2050,
	3075, 132420, -1000, 3221, 1730, 1720, 116022, -1000, -1000, 116022,
	-1000, 116022, -1000, -1000, -1000, 1604, -1000, -1000, 2569, -1000,
	-1000, -1000, -1000, 92101, 92101, 92101, 92101, 1626, -1000, 43088,
	-1000, -1000, 3106, 3836, 1751, -1000, 1850, -1000, 3021, 3455,
	-1000, 1485, 1814, -1000, -1000, 252, -1000, -1000, -15, -1000,
	121532, -1000, 2645, -1000, 116022, -1000, 2570, 3062, 3072, 1708,
	2362, 2734, -1000, 42515, 2671, 52829, 2400, 178, -1000, -1000,
	178, 178, 33804, -1000, -1000, 70873, 70873, 26162, 1395, 49391,
	49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391,
	49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391,
	49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391,
	49391, 49391, 49391, 49391, 49391, 2300, 49391, 1293, 49391, 49391,
	49391, 49391, 2064, -1000, -1000, 2006, 605, 2084, 728, -1000,
	-1000, -1000, 3677, 3677, 3677, 364, 364, 364, 9063, 9063,
	653, 3834, 851, -1000, 49391, -1000, 70, 59072, 49391, 26732,
	-1000, 511, 10652, 2622, -1000, 509, 27334, -1000, -1000, -1000,
	28514, 656, 41913, 49391, 1065, 132420, -1000, -1000, 1513, 3715,
	23876, 3104, 2887, 720, 908, 906, 31483, 30881, 30279, 29677,
	904, 706, 49391, 49391, 49391, 49391, 49391, 49391, 49391, 49391,
	-1000, -1000, 3724, -1000, 3715, -1000, -1000, -1000, -1000, 3715,
	1394, 1393, 3715, -1000, 3715, 3715, 8204, 8204, 41340, 40767,
	40194, 53402, 39621, 49391, 29104, 39048, 38475, -1000, 116022, -7,
	3609, 49391, 198, -1000, 130704, -1000, 198, 198, 710, -48,
	132420, 2967, 2967, 57392, 2280, 2292, 2292, 2292, -1000, 968,
	18676, 968, 102069, 2315, 968, 968, 298, 326, 508, 55121,
	2550, 102069, 826, 709, 15, 14, 13, -1000, -1000, 12,
	11, -1000, -1000, 92101, 704, 26732, 26162, 295, 2020, -56,
	2682, 2679, -1000, 2677, 2676, -1000, 2675, 2365, -1000, -1000,
	1870, -58, 1289, 92101, 116022, 1471, 3833, -234, -1000, 320,
	-59, -1000, 1385, 277, 3715, -1000, -1000, -1000, -1000, -1000,
	3832, 3831, -1000, 1072, 703, 702, 677, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 697, 696, 696, 696, -1000,
	425, 695, 321, 687, 686, 685, -1000, -1000, -1000, -1000,
	-1000, 3019, 92101, 116022, 1418, 3830, -54, 92652, -57, -1000,
	-1000, 116022, -1000, -1000, -1000, 3829, -1000, 92101, -1000, -1000,
	92101, 236, 3240, -1000, 92101, -1000, 92101, 232, 3239, -1000,
	-1000, 116022, -1000, 92101, 92101, -1000, 116022, 116022, 116022, 127051,
	127051, 230, -1000, 92101, 934, -66, 1178, -15, -1000, -1000,
	-1000, -1000, 1764, -1000, 2091, -1000, -1000, -1000, -1000, -1000,
	-1000, 1512, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1052, -1000, -1000, -1000, -1000, -1000, -1000, 3693, 3686, -8,
	-1000, -1000, 26162, -1000, -17, 1664, 2001, 1286, -1000, 77604,
	2483, 3452, 3828, 2796, 3405, 1665, -1000, 1601, -1000, 3533,
	82617, 3572, 3587, 1407, -1000, 3013, -1000, -1000, 1002, 1747,
	1823, 1283, 1281, 82617, 1951, -1000, 70873, -1000, 2753, 3522,
	1468, 1464, 1468, 1468, 1480, -1000, 82617, 1821, 1280, 1279,
	1278, -1000, -1000, 2036, 2027, -1000, -1000, 103178, -1000, 1277,
	1276, 3632, 2752, 2290, 877, 2017, -1000, -18, 3570, 3581,
	1403, -1000, 3009, 1275, -1000, -1000, -1000, 3518, 92101, 26162,
	1617, 1615, 1605, 1815, 1274, -9, -1000, 3566, 1273, 1271,
	-1000, 1096, 2695, 3356, -1000, 127051, 1096, 1096, 1980, 3238,
	2835, 1879, -1000, 2849, 940, 2847, -1000, -1000, -1000, 940,
	-10, 72543, 116022, 276, -1000, 70, 49391, 49391, 70, 49391,
	70, -1000, 3553, 3237, 3236, -1000, -1000, -1000, -1000, -1000,
	3827, 2080, 2591, -1000, -1000, 682, 2478, 3002, 116022, 2688,
	-12, 92101, -1000, 71441, 3233, 127051, 1951, 2475, -1000, -1000,
	83728, -1000, 3229, 531, 2472, -1000, 790, 3826, 3216, -1000,
	120981, -1000, 3457, 1409, 3212, 1130, 468, 3608, -1000, 468,
	66976, -1000, 116022, -1000, 6, 5137, 76502, -67, -68, 507,
	-1000, 102627, 116022, 1124, 77053, 116022, 3372, 2093, 2087, -1000,
	1036, 60790, -1000, 60790, -69, -1000, -277, 2846, 1534, -1000,
	1023, 1023, 940, -1000, 940, -1000, 92101, 3069, -1000, -1000,
	75393, 1023, 1023, 1023, -1000, -1000, -1000, -1000, 3825, 3823,
	3822, 3821, -1000, -1000, 1038, 92101, 116022, 92101, -1000, -1000,
	1871, -1000, 271, -1000, 127051, -1000, 127051, 116022, 92101, -1000,
	1038, 116022, 1038, 116022, 1038, 116022, 1038, 1038, -1000, -1000,
	-1000, -1000, -1000, 70, -1000, -1000, 132420, -1000, 49391, -1000,
	-1000, 1600, 3820, 1683, -1000, 3068, -1000, 3063, -1000, 49,
	-1000, -1000, 1924, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3819, 132420, -1000, 2101, -1000, -1000, -1000, -1000, 92101,
	92101, 92101, 92101, 116022, 3343, -1000, 116022, 3332, 92101, -1000,
	-1000, 82617, -1000, 2570, 3062, -1000, -1000, -1000, -1000, -1000,
	-1000, 1702, 2341, -1000, 2617, -1000, 1633, -1000, -1000, -1000,
	132420, 53975, -1000, -1000, 132420, 1972, -1000, 52256, 51683, -1000,
	-1000, 1784, 92101, 2691, -1000, 2691, -122, -1000, 130663, 2612,
	92101, -1000, -1000, -1000, -1000, -1000, 1001, 1114, 1114, 1334,
	1334, 1334, 1334, 3545, 488, 5795, 5208, 7840, 7840, 6695,
	6695, 6695, 6695, 6695, 7840, 1158, 364, 364, 1158, 1158,
	1158, 1158, 1158, 364, 364, 364, 7840, 7840, 7840, 364,
	9063, 132808, 11254, 49391, 49391, 1269, 1983, 605, 9929, 49391,
	11239, 11239, 11239, 11239, -1000, 2056, -1000, -1000, -1000, -1000,
	2997, 679, 53402, 53402, -1000, -1000, -1000, -1000, 27924, 49391,
	-1000, -1000, -1000, -1000, 37873, -1000, -1000, 8075, -316, 506,
	-1000, 270, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 493, -100, 3, -1000, 49391,
	49391, 49391, 492, -1000, 267, 49391, 116022, -1000, 16233, 825,
	-179, -1000, -74, 1475, -1000, 49391, -1000, -1000, 1265, -1000,
	1264, 1263, 1260, -1000, 675, 489, -1000, 260, -1000, 2289,
	673, 671, 49391, -1000, -1000, -1000, -1000, -1000, 129838, -1000,
	-1000, 129797, -1000, -1000, 129401, -1000, -1000, 129360, -1000, -1000,
	-1000, -1000, -1000, 131991, 15416, 15353, 14730, 7082, 14015, 13283,
	-75, 486, -76, 473, 1000, 998, 472, 470, 469, -82,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -83, 464, -1000, 2991, -100, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 462, -1000, 461, -1000, 131950,
	-100, 458, 5079, -1000, 53402, 53402, 53402, 53402, -1000, 453,
	-1000, 130275, -1000, 131562, 37300, 37300, 37300, 452, 131521, 49391,
	-100, -88, -1000, -89, -1000, -1000, 592, -91, 1062, 36698,
	56270, 26162, -1000, 1062, 1062, 49391, -1000, 49391, 2639, -1000,
	-1000, -1000, -1000, 2637, 2010, 2967, 57392, -1000, -1000, -1000,
	-1000, 102069, -1000, 3689, 3654, -1000, 102069, -1000, -1000, 116022,
	531, -1000, 102069, 102069, 26162, 968, -1000, 968, 102069, 861,
	-1000, -1000, -1000, -1000, -1000, 451, 64742, 3, 257, 26162,
	1039, -1000, -1000, 2758, 2758, 2758, 2758, 2758, 92101, -1000,
	-1000, 127051, 1259, -13, -110, 2844, -1000, 3644, -1000, 2172,
	-1000, 70873, -1000, 846, 1267, 26162, -1000, -1000, -1000, 670,
	-1000, 3715, 3715, -1000, 3715, 127051, 2989, 160, 2840, -1000,
	159, 127051, 3818, -1000, -1000, 236, -1000, 92101, 236, 236,
	-1000, 92101, 92101, 2344, -1000, 241, -1000, 238, -1000, -1000,
	-54, -1000, 1058, 34377, -1000, 1764, -1000, -1000, 1645, -1000,
	2100, -1000, 1369, -1000, -1000, -1000, -1000, 34377, -1000, 2437,
	116022, 116022, 92101, -1000, 116022, -1000, 2252, 127051, -1000, 2461,
	120430, 2453, 70873, 116022, -1000, -1000, 667, 1015, 2610, 2609,
	1119, 116022, 116022, 2607, 119879, 119328, -1000, 3816, 116022, 2193,
	49391, 3516, 2354, 2204, 70, 70, -1000, 70, 70, 70,
	-1000, 664, 1396, 92101, 92101, 116022, 127051, 92101, 1903, -1000,
	-1000, -1000, -1000, -1000, 83168, -1000, -1000, 3719, 3718, -1000,
	1468, -1000, -1000, -1000, 1468, 1951, 1854, 116022, 127051, 92101,
	127051, 118777, 118226, -1000, -1000, 1812, 116022, -1000, -1000, -1000,
	-1000, 1531, -1000, 877, 2229, 70, 70, -1000, 70, 70,
	70, 662, 26162, 2009, -1000, 3076, 116022, 3751, 117675, 3750,
	116022, 116022, 116022, 127051, 3415, 116022, 116022, 127051, -1000, 117124,
	2695, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 73685, 1137, 116022, 1379, -1000, -1000, 1789, 1256,
	1254, 82617, 2218, 1777, 1902, 127051, 60790, 1033, 60790, 2814,
	-1000, -1000, 23302, -1000, 132420, 132420, -1000, 132420, -1000, 71441,
	75393, 116022, -1000, 1081, 116022, 77053, 1014, 3210, 65858, -159,
	1023, 75393, 92101, -12, 2688, 116022, -1000, -1000, 1951, 3206,
	531, 2457, -1000, 127051, 3606, 3169, 661, 3815, 3809, -1000,
	92101, 2364, 2456, -1000, -1000, 116573, 3281, 877, 116022, 1062,
	57392, 2077, -1000, 63623, 1104, 116022, 1922, 148, -1000, -1000,
	-1000, 29, 116022, -1000, 857, -1000, -1000, 5137, 5137, 1023,
	-242, 658, -1000, 927, 920, 61358, 75393, -94, -1000, -1000,
	-1000, -1000, 2453, 92101, 116022, 1354, 2802, 116022, -97, -1000,
	256, 657, 919, 910, -1000, 4733, -1000, -277, -1000, 75393,
	1036, 60790, 2984, 2977, -1000, -1000, 1056, -1000, 1474, 1023,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 5, 1899, 116022, -54, -54, -29, -13, -1000, 1038,
	-1000, 1038, -1000, 1038, -1000, -1000, -1000, 132420, -1000, -1000,
	-1000, 1682, 1680, 116022, -1000, -1000, 116022, -1000, 26162, 116022,
	92101, 26162, 92101, 3060, 3059, -1000, -1000, -1000, 116022, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1151, -1000, 1972, 2338,
	-1000, 656, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2544, -1000, -14, 33804, 970, -1000, -1000, 92101, -3,
	49391, 49391, 9721, 7043, 49391, 53402, 53402, -1000, 49391, 6410,
	-1000, -1000, -1000, -1000, -1000, 2976, 655, 49391, 70873, 6792,
	6727, -1000, 434, 12596, 1158, -1000, 49391, -1000, 589, -1000,
	433, 36125, -1000, 131092, -41, -99, -1000, 19263, -100, -105,
	-1000, -1000, 838, -1000, 3278, -1000, 49391, 131133, 2498, 2123,
	1876, 1693, 3715, 3746, 22728, -1000, 67534, 1063, 2321, 128964,
	-1000, -1000, -1000, -1000, 70873, 70873, 49391, 49391, -1000, 49391,
	49391, 49391, -1000, -1000, -1000, 3715, 984, -1000, -1000, -1000,
	984, -1000, -1000, 1468, -1000, 1468, -1000, 49391, -1000, -1000,
	2971, 49391, -1000, 70873, 70873, 53402, 53402, 53402, 53402, 53402,
	53402, 53402, 53402, 53402, 53402, 53402, 53402, 53402, 53402, 53402,
	53402, 53402, 53402, 53402, 53402, 2553, 53402, 3674, 3674, 3674,
	1437, -1000, 3041, 2971, 49391, 49391, 70873, 432, 430, 428,
	-1000, 49391, -100, -1000, -1000, 5784, 651, -1000, 2479, -1000,
	2886, -1000, 49391, -1000, -102, -1000, 2550, -1000, -1000, 2886,
	2886, -108, 132420, 57392, 57392, -1000, 648, 49391, 2629, -1000,
	-1000, 820, -317, -1000, 909, -1000, -1000, -1000, -1000, -1000,
	-1000, 903, -1000, 531, -1000, -1000, -1000, 248, 102069, 102069,
	818, -1000, -111, -1000, -1000, -116, -1000, 3605, 427, 26162,
	-1000, 1062, 2749, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2642, -54, 127051, 127051, 1776, 2332, 3745, -1000, 3717, 836,
	815, 199, 3715, 423, 420, 419, -54, 127051, 127051, 1775,
	127051, -1000, -1000, -1000, 236, -1000, -1000, -1000, 232, -1000,
	-1000, -1000, -1000, 2720, -1000, -15, -1000, -1000, -1000, 49391,
	-1000, -1000, 3447, 1253, 1249, -1000, -1000, -1000, 2995, -1000,
	3167, -1000, 2448, -1000, 1086, -1000, 1719, 49391, 647, 2801,
	644, 643, 3808, 2110, 3800, 1120, 3165, 2344, 3163, 2344,
	-1000, -1000, -1000, 1006, -1000, 132420, 2354, -1000, 642, 637,
	-1000, -17, 1643, 1920, 1246, 1055, -1000, -1000, -1000, -1000,
	49391, 49391, 101518, -1000, 500, 3443, -4, -1000, -1000, -1000,
	1770, 1243, 1242, -1000, -1000, -1000, -1000, 1951, 1768, 1239,
	1237, -1000, -1000, -1000, -1000, -1000, 2446, -1000, -1000, 3162,
	1049, -1000, 3124, 3123, 986, 116022, -1000, 1048, -1000, -1000,
	-1000, -1000, 49391, -1000, -18, 1226, 3562, 2443, 92101, -1000,
	2344, 3161, 1225, -1000, 1220, -1000, -1000, -1000, 3565, 3563,
	1236, -1000, -1000, -1000, -1000, -1000, 73117, -1000, -1000, 1096,
	116022, 127051, 92101, 1796, -1000, -1000, 81515, 82066, 116022, 2835,
	-54, 940, -1000, 2641, 940, 1033, 2970, -1000, 2653, -1000,
	1044, 92101, 3797, 417, -121, -19, 70873, 3603, -1000, 2382,
	620, 92101, 981, -1000, 3689, -1000, -1000, -1000, 1043, -1000,
	3557, 92101, 3602, 3159, 1039, 70, 92101, 3728, -1000, -1000,
	3601, 92101, 3158, 2360, 2441, 2576, 877, 75951, 1039, 2319,
	-34, -1000, 1922, 35523, 3406, -126, -1000, -1000, -1000, 1062,
	66976, 57392, 49391, 3796, -128, -1000, -1000, -1000, -1000, -1000,
	99307, 99307, 75393, 75393, 75393, 1023, 116022, 116022, 77053, -1000,
	-1000, 635, 116022, 116022, 634, -1000, 116022, 116022, 3795, 75393,
	75393, 75393, -21, 632, -1000, 902, 901, 899, -1000, -1000,
	-1000, -1000, -1000, -1000, 898, 896, 1036, -1000, -1000, -277,
	60790, 70, -1000, 2328, 92101, -1000, 22154, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1038, -159, -1000, -1000, 2247, 2399,
	2247, 1888, 1885, -1000, -1000, 2336, -1000, -1000, -1000, -1000,
	2728, 3397, 26162, 3569, 11239, 49391, 49391, 5822, 6031, 455,
	11239, 49391, 49391, 70873, 133008, -134, 49391, 49391, -1000, 49391,
	814, 132420, -1000, 3744, 49391, 416, 415, -1000, -1000, -1000,
	3704, -1000, -1000, -1000, 132420, 49391, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 412, -1000, 161, -1000, -1000, -1000, 123736,
	-1000, 49391, 404, 3514, -1000, 403, 402, 11683, 6088, 128923,
	128527, 128486, 401, -1000, -1000, 400, 399, 132420, 3041, 132420,
	-1000, -1000, 942, 942, 1430, 1430, 1430, 1430, 3674, 545,
	340, 905, 723, 723, 723, 389, 1437, 1437, 723, 723,
	723, 1437, 2968, 2636, 631, 5139, -1000, -1000, 132420, 132420,
	396, -1000, -1000, -1000, -100, 394, 5784, -1000, 2880, 3513,
	132420, -1000, 57392, 2880, 2880, -1000, -1000, 2010, 116022, 132420,
	57392, -1000, 3654, -1000, 20427, 19848, -1000, 26162, -1000, -1000,
	-1000, -1000, 3689, -1000, 64742, -1000, 628, -1000, 149, -1000,
	2749, -1000, 894, -1000, -1000, 75393, 75393, 2758, -54, -235,
	116022, -1000, -1000, 809, 3794, 833, 26162, 393, -1000, -1000,
	-1000, -54, -54, 116022, -54, -1000, -1000, -1000, 3368, 132420,
	116022, 116022, 1525, 100967, 116022, 3157, -1000, 4935, -1000, 1119,
	128090, 57953, -1000, 57953, 116022, -1000, -1000, -1000, -1000, 1960,
	1554, 3791, 1167, -1000, 3476, 116022, -1000, 116022, -1000, -1000,
	-1000, 116022, 116022, 92101, 116022, -1000, 127051, 3127, -141, 132420,
	-22, -1000, 893, -1000, 1456, -1000, 21580, 116022, 127051, 92101,
	116022, 127051, 92101, 3156, 116022, 2277, -1000, -1000, 3119, -1000,
	3126, -142, 26162, -1000, 3740, 3739, 3153, 3483, -1000, 116022,
	3737, 116022, 92101, 3366, -1000, -1000, -1000, -1000, -1000, -1000,
	1744, 1218, 1212, 2359, -26, 2355, 2331, -29, 2218, 1033,
	-30, 627, -1000, 890, -1000, -1000, 889, -1000, 1033, -1000,
	75393, 60790, 3786, 531, -1000, 2790, -1000, 97069, 2358, 70,
	-1000, 3785, 99865, 626, -1000, 2327, -1000, 808, -1000, 2561,
	127051, 1951, 70, 92101, -1000, -1000, 531, 387, -31, -1000,
	3166, 1113, 26162, 92101, 3149, 2584, 877, 75951, -1000, 1409,
	2734, -1000, -32, -1000, 742, 70, 2319, -1000, -34, 132420,
	-1000, 886, -1000, -147, -1000, -1000, 368, -1000, 3365, 3363,
	-1000, 2899, 57953, 625, 623, 116022, 3362, -1000, -1000, -148,
	-1000, -1000, 2404, 2404, 75393, 60790, 75393, 75393, 75393, -1000,
	1036, 940, -1000, 2463, -1000, -1000, -1000, -1000, -1000, 26162,
	1710, -1000, 621, 619, -1000, -1000, -1000, -1000, 3397, 11239,
	11239, 49391, 49391, 49391, 11239, 133008, -149, -1000, 11239, 11239,
	-100, -1000, -1000, 131092, -1000, -1000, -1000, 132420, -1000, 21006,
	2250, -1000, 128049, -1000, 33804, -1000, -1000, 49391, 49391, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 53402, 2966, 617,
	70873, -1000, -1000, 366, 1053, 49391, 51110, 2550, 1053, 1053,
	-1000, -150, -1000, -1000, -1000, 3689, -1000, 3689, 149, -1000,
	-1000, 3783, 26162, -1000, 75393, -1000, -1000, -1000, 3782, -157,
	832, -1000, 3781, -1000, -1000, 104, -1000, -1000, -1000, 2834,
	3599, -1000, 2004, -1000, 116022, -1000, 116022, -1000, 26162, 116022,
	2930, 1317, -1000, 1015, 2604, 615, 53402, 1147, 92101, 963,
	2869, 2868, -1000, 3629, 3505, 2898, -158, -1000, 116022, 49391,
	116022, -160, -165, 2406, -1000, -1000, 1145, 1316, 49391, 1144,
	-1000, -1000, -1000, 70873, 612, 2344, 2344, -168, -170, -1000,
	-1000, -1000, 49391, 1206, 116022, 34950, -1000, 3780, 3443, -1000,
	-1000, -1000, -1000, -1000, -1000, 116022, -1000, 116022, -1000, 49391,
	1204, -1000, -1000, -1000, 3736, 2344, 26162, 2344, -1000, 2344,
	3483, 1165, 116022, 127051, 92101, 1954, 1954, 2972, -1000, -1000,
	-1000, 2402, 2402, 75393, 60790, -1000, -35, 1033, -1000, 3594,
	2770, 3779, -1000, -1000, -1000, -1000, 2603, -1000, -1000, 116022,
	2602, 1027, -1000, -173, -1000, 885, 883, 77053, 1014, 969,
	-1000, -37, 610, -1000, 882, -1000, -1000, -1000, -1000, 531,
	3593, -1000, 3732, 608, 607, 116022, 2353, 606, 26162, 3439,
	877, 75951, -1000, 3281, 1922, -1000, 2425, 116022, 3402, -1000,
	2734, 605, -1000, 1023, 604, 603, 2605, 2605, -178, 57953,
	57953, -190, 602, 1023, -1000, -191, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -38, -1000, 965, 946, -1000, -1000, 92101,
	92101, 49391, 49391, -1000, 11239, 11239, 11239, -1000, 362, -1000,
	-1000, 2319, 3502, -1000, -44, 127653, 127612, 567, 53402, 70873,
	-192, -1000, -1000, 116022, 132420, -45, -1000, 132420, 597, 596,
	505, -1000, -1000, -1000, 804, 707, -1000, -1000, -1000, 127051,
	3778, -1000, 127051, 100416, 116022, -1000, -1000, 1743, -1000, -1000,
	-1000, 116022, 2432, -1000, -1000, -1000, 1118, 49391, 5139, 53402,
	595, 49391, -1000, 588, 586, 3589, 3323, -1000, 2759, 2950,
	1914, 57953, -1000, 3397, -1000, 17804, -1000, 1101, 2013, -1000,
	-1000, -1000, -1000, 132420, 53402, 3483, 57953, -1000, -1000, 566,
	565, 132420, 552, 878, 2964, -1000, -1000, -1000, -1000, -1000,
	132420, 544, 3562, -1000, -1000, -1000, -1000, 2344, 92101, -1000,
	-1000, -1000, 1198, -1000, -1000, -1000, -1000, 3777, 3776, 2962,
	81515, -1000, -198, -1000, -1000, 2059, 70, 2231, 2825, -1000,
	2358, 542, -1000, -1000, 2343, 2708, -1000, 99865, 34377, 34377,
	349, 3585, 969, -1000, 3671, -1000, 3325, 3325, 49391, 3582,
	70, -1000, 3728, 57953, -1000, 92101, 57953, 2346, 2103, 2566,
	75951, -1000, 2576, -1000, -1000, -199, 116022, 1922, -1000, -1000,
	75393, 75393, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1101, -200, -207, -1000, 75393, -1000, -1000,
	2463, -1000, 116022, -1000, 116022, -1000, -1000, -208, -209, -1000,
	2190, 49391, 33804, -1000, -1000, 567, -210, -1000, -46, -1000,
	3580, 51110, 3773, 3772, 3771, -1000, -1000, -54, -1000, -54,
	-1000, 1958, -1000, -1000, -1000, 3145, 2877, 17366, 5139, 2536,
	116022, 16923, 1951, 1951, -1000, 3578, 2936, -1000, -1000, 2770,
	533, -1000, -1000, -1000, -1000, 970, 116022, 2770, 2874, 92101,
	5139, 1117, -215, 2247, 2247, 49391, 33231, 2272, 49391, -1000,
	-1000, 3483, 127051, -1000, -1000, 127051, 2345, -1000, 2924, 3672,
	-1000, 1014, -1000, 2264, 116022, -1000, 3471, -1000, 3361, -1000,
	-1000, -1000, 2790, 70, -1000, -1000, -1000, -217, 132420, 70,
	-1000, 348, -222, 1113, -223, 92101, 2011, -1000, 877, -1000,
	2584, 1062, -1000, -1000, -228, -229, 1914, 1101, 2229, -237,
	-1000, -239, -246, -1000, -1000, 347, 50537, 50537, 50537, -100,
	-122, -1000, 116022, 532, -1000, -1000, -1000, -1000, -1000, 3115,
	1031, -1000, 933, 2075, 346, 1136, 322, 253, -1000, -1000,
	-1000, 2229, 116022, -1000, -1000, -1000, 1030, 531, -1000, 49391,
	1101, -247, -1000, 1100, -248, -1000, 1099, -260, -1000, 2960,
	-1000, -261, 2344, -253, 230, 1954, 1029, 3552, -1000, -1000,
	-1000, 2343, 92101, -263, -1000, -1000, 2480, -1000, 2770, 1027,
	-1000, -1000, -1000, 1101, 529, 1914, 527, 1518, 877, -1000,
	-1000, 1468, 3439, 3288, 1023, 1023, 2770, 1914, 1022, -1000,
	1023, -1000, -1000, -1000, 3234, -1000, 54548, 2335, 1881, 130234,
	3234, 3234, -1000, -1000, 116022, 3539, -1000, 939, 938, 1549,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2898, -274,
	3535, 2536, 132420, 2770, -1000, 2247, 2822, -1000, 2247, 2931,
	-1000, 2201, -1000, -1000, -1000, 2893, -1000, 2926, -1000, 1828,
	3651, 2555, 526, -1000, 116022, 1843, 1838, 3770, 2231, 2343,
	1914, 57953, 2770, 57953, 2199, -1000, 116022, -1000, 2103, 1345,
	-1000, -1000, 2229, 2770, 1062, 523, -1000, -1000, 1916, 3622,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 876, -1000,
	3307, -1000, 1143, 2159, 2159, 1062, -1000, 872, 933, -1000,
	-1000, 521, -1000, 516, -1000, 2330, 127051, 2324, -1000, -1000,
	-1000, -1000, 116022, -1000, -1000, 3766, -1000, 1014, -1000, 2770,
	-279, 2229, -280, -1000, -1000, -1000, -159, 2011, -1000, 1663,
	1022, 2229, -1000, 1858, -1000, -1000, 2310, 49964, 49391, -1000,
	3647, -1000, -1000, 2674, -1000, -1000, 49391, 2898, 49391, 49391,
	-1000, 230, 65300, -288, -1000, 2343, 2229, 1101, 1022, 1914,
	1518, 66976, 1062, 1022, -1000, -1000, -1000, 132420, -1000, -1000,
	-1000, 132420, -1000, -291, -296, -1000, -242, 99307, 2340, 2555,
	1022, 1914, 1062, 2770, 2199, -266, -1000, 1062, 2229, 1193,
	-298, -1000, -1000, -1000, -1000, 1062, 2770, -1000, 2229, -1000,
	-1000, -1000, -1000, -1000, 514, -1000, -1000, 2229, 1022, 49391,
	1022, 1062, -303, 1062, -1000, 2229, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4602, 4601, 4597, 4593, 4589, 4588, 4587, 4585, 4579,
	4577, 4575, 4570, 144, 4566, 4565, 4564, 4563, 4560, 4556,
	4554, 4553, 4551, 4550, 4549, 4548, 4547, 4546, 4544, 4543,
	4539, 4537, 4536, 4532, 4530, 4529, 4528, 4526, 4525, 4523,
	4522, 4521, 4518, 4516, 4513, 4511, 4508, 4507, 4504, 4503,
	4500, 4497, 4496, 4495, 4494, 4490, 4489, 4488, 4484, 4483,
	4481, 4479, 4478, 4477, 4475, 4474, 4472, 4471, 53, 4470,
	4469, 4468, 4467, 4466, 4465, 4464, 4462, 4461, 4460, 4458,
	4453, 4450, 4448, 4447, 4446, 4445, 4444, 4443, 4441, 63,
	4440, 276, 4439, 4438, 4437, 4435, 4434, 4433, 4431, 4429,
	4423, 4421, 4420, 4418, 274, 4414, 130, 164, 4411, 4409,
	3937, 4408, 4407, 273, 4402, 4399, 4397, 4393, 4391, 287,
	4388, 4386, 4385, 4384, 4383, 4381, 4371, 4366, 4365, 4364,
	4363, 4362, 90, 211, 4361, 4360, 790, 4358, 4357, 4355,
	4352, 4348, 4346, 4344, 4343, 4340, 4339, 4338, 249, 174,
	4336, 272, 4335, 4331, 4330, 4328, 4326, 4325, 4324, 4322,
	4318, 4317, 4314, 4313, 4312, 4311, 4310, 4309, 4308, 4306,
	4305, 4304, 4303, 4301, 4298, 4297, 4295, 4294, 4292, 4291,
	4290, 4289, 4288, 4287, 4283, 4282, 4281, 4280, 4279, 4278,
	4277, 261, 222, 133, 4276, 4275, 271, 270, 4271, 4270,
	4265, 4264, 4262, 138, 6, 119, 4259, 4257, 118, 95,
	91, 100, 105, 99, 4255, 112, 4250, 127, 70, 4245,
	25, 2, 295, 247, 10435, 240, 4244, 4242, 4241, 250,
	198, 4240, 243, 4239, 4238, 4237, 4236, 4232, 4230, 71,
	55, 189, 179, 178, 176, 79, 4228, 160, 108, 85,
	59, 46, 12, 77, 223, 22, 4, 263, 4227, 262,
	11, 143, 5, 39, 4226, 4225, 4224, 4223, 3857, 135,
	4222, 269, 253, 168, 4221, 4218, 4217, 645, 4216, 4215,
	49, 4214, 338, 83, 125, 15, 128, 4213, 151, 172,
	37, 4212, 185, 61, 4211, 161, 101, 87, 9369, 6238,
	4210, 4209, 132, 66, 94, 268, 232, 180, 200, 209,
	154, 167, 114, 214, 213, 181, 183, 4208, 248, 4206,
	3595, 78, 190, 152, 6244, 4204, 4203, 4202, 88, 203,
	107, 4198, 4196, 76, 9, 31, 3, 1, 145, 26,
	19, 13, 4195, 27, 117, 50, 23, 4193, 32, 4192,
	4190, 4189, 4187, 4185, 67, 153, 4184, 4182, 282, 4181,
	111, 57, 28, 4179, 21, 225, 4177, 230, 124, 4174,
	4172, 259, 212, 191, 4171, 43, 251, 4169, 4166, 4165,
	4163, 4162, 137, 7, 129, 4160, 4159, 146, 4155, 56,
	245, 207, 4153, 69, 4152, 4150, 187, 52, 141, 277,
	208, 229, 116, 234, 194, 236, 4147, 4146, 4145, 226,
	4144, 4143, 228, 177, 4142, 4141, 256, 288, 92, 48,
	86, 238, 84, 193, 156, 4140, 205, 4136, 4134, 286,
	184, 217, 20, 16, 98, 136, 4133, 8, 237, 155,
	233, 115, 4132, 7867, 2450, 2068, 4129, 4123, 165, 120,
	80, 121, 150, 267, 97, 4122, 4120, 173, 4119, 4116,
	4115, 4111, 188, 4110, 4106, 4103, 163, 159, 199, 4098,
	126, 72, 51, 29, 139, 257, 279, 113, 220, 206,
	258, 4096, 4094, 4093, 196, 4090, 82, 102, 162, 204,
	254, 60, 4082, 246, 4080, 148, 646, 65, 149, 4079,
	219, 4078, 4077, 4076, 4075, 4074, 4071, 4070, 301, 241,
	4068, 4067, 4065, 38, 197, 4064, 266, 158, 186, 134,
	81, 4063, 96, 169, 4062, 122, 216, 73, 202, 41,
	4060, 2009, 58, 4059, 0, 14152, 9756, 12684, 13573, 4057,
	5270, 4053, 4052, 4051, 224, 147, 4050, 4047, 4046, 106,
	4041, 89, 4040, 4039, 74, 4038, 35, 17, 18, 33,
	30, 344, 325, 4035, 4034, 44, 157, 170, 4032, 281,
	231, 4028, 4027, 4026, 4025, 93, 4024, 47, 4023, 45,
	4022, 4019, 54, 14, 34, 4016, 4014, 221, 4010, 218,
	264, 4009, 166, 4008, 68, 142, 4004, 4002, 4001, 64,
	62, 260, 104, 3998, 284, 3996, 201, 3994, 3990, 24,
	3989, 3986, 244, 110, 109, 3985, 252, 140, 42, 215,
	182, 227, 3984, 3980, 175, 3979, 3972, 3967, 285, 3965,
	3961, 40, 3958, 3956, 3955, 10, 3954, 3950, 210, 3304,
	3944, 3940, 36, 3939, 192,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	601, 601, 619, 619, 23, 23, 45, 45, 24, 46,
	17, 602, 602, 602, 602, 36, 25, 47, 29, 29,
	29, 29, 29, 206, 206, 206, 206, 22, 22, 41,
	41, 242, 242, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	241, 241, 241, 241, 241, 241, 241, 241, 241, 241,
	597, 597, 244, 244, 243, 236, 236, 237, 237, 238,
	238, 603, 603, 245, 245, 245, 247, 247, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 497, 497,
	497, 528, 528, 528, 528, 529, 529, 623, 623, 624,
	624, 624, 624, 624, 135, 135, 395, 395, 395, 56,
	56, 56, 56, 56, 592, 592, 208, 208, 208, 210,
	210, 209, 209, 209, 209, 209, 80, 80, 609, 609,
	608, 607, 607, 607, 610, 610, 610, 207, 207, 207,
	131, 131, 131, 131, 131, 131, 132, 132, 133, 133,
	211, 211, 211, 213, 213, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 217, 16, 16, 16,
	114, 114, 114, 114, 114, 114, 114, 114, 114, 109,
	109, 531, 531, 532, 532, 202, 202, 203, 203, 203,
	203, 204, 204, 205, 205, 205, 71, 71, 214, 214,
	216, 216, 215, 215, 215, 215, 215, 58, 58, 58,
	58, 58, 58, 58, 58, 58, 59, 59, 59, 59,
	59, 60, 60, 60, 60, 60, 60, 61, 61, 61,
	61, 61, 61, 62, 62, 69, 69, 69, 69, 69,
	69, 69, 193, 193, 72, 72, 72, 72, 72, 72,
	72, 72, 72, 72, 72, 72, 72, 77, 77, 77,
	77, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	626, 626, 627, 627, 628, 628, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 75, 75, 75, 75, 75,
	75, 75, 75, 75, 75, 75, 75, 75, 75, 75,
	75, 75, 86, 86, 356, 356, 319, 319, 87, 87,
	87, 88, 88, 89, 89, 73, 73, 590, 590, 372,
	372, 488, 488, 74, 598, 598, 598, 600, 600, 599,
	599, 91, 91, 394, 394, 92, 92, 92, 92, 92,
	92, 93, 93, 93, 93, 93, 93, 93, 94, 94,
	94, 94, 94, 94, 94, 94, 94, 94, 94, 94,
	94, 94, 101, 101, 101, 101, 101, 102, 102, 102,
	99, 99, 99, 96, 96, 96, 95, 95, 95, 100,
	100, 100, 589, 308, 308, 98, 98, 98, 97, 97,
	97, 373, 373, 103, 103, 103, 103, 320, 104, 104,
	104, 104, 104, 104, 104, 104, 107, 107, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 490, 490, 105, 105, 105, 455, 455, 110, 110,
	110, 410, 410, 111, 111, 111, 111, 111, 112, 112,
	112, 112, 112, 112, 112, 112, 112, 134, 134, 134,
	134, 134, 134, 134, 134, 594, 594, 365, 365, 271,
	271, 271, 271, 123, 123, 123, 123, 124, 124, 124,
	125, 125, 198, 198, 141, 141, 141, 141, 140, 140,
	140, 140, 140, 140, 140, 140, 63, 63, 63, 64,
	64, 65, 65, 66, 66, 67, 67, 68, 68, 68,
	68, 68, 144, 144, 620, 620, 146, 143, 143, 143,
	143, 143, 142, 142, 145, 145, 145, 145, 147, 149,
	149, 149, 149, 149, 148, 148, 148, 148, 148, 150,
	150, 522, 522, 381, 381, 520, 520, 541, 541, 521,
	521, 326, 326, 326, 326, 326, 327, 327, 327, 530,
	530, 530, 530, 530, 530, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 151, 151,
	151, 151, 151, 151, 151, 151, 151, 151, 199, 199,
	200, 201, 201, 201, 201, 201, 176, 176, 176, 192,
	192, 192, 192, 192, 192, 192, 192, 179, 179, 179,
	163, 163, 152, 152, 152, 152, 152, 152, 152, 157,
	157, 157, 157, 157, 157, 157, 157, 153, 153, 165,
	165, 165, 165, 165, 158, 158, 159, 159, 159, 160,
	160, 160, 160, 186, 186, 162, 162, 164, 164, 164,
	164, 164, 164, 164, 164, 164, 154, 154, 154, 154,
	167, 167, 167, 167, 417, 417, 417, 191, 191, 166,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 166,
	166, 166, 166, 166, 166, 189, 189, 189, 189, 189,
	189, 611, 611, 612, 612, 612, 183, 183, 183, 183,
	183, 183, 469, 469, 177, 177, 177, 177, 182, 182,
	182, 182, 185, 185, 185, 185, 400, 400, 174, 174,
	174, 175, 175, 175, 180, 180, 181, 357, 357, 178,
	178, 184, 184, 184, 184, 155, 155, 155, 155, 155,
	155, 155, 155, 156, 156, 156, 156, 187, 187, 173,
	173, 188, 188, 188, 188, 188, 188, 188, 188, 188,
	188, 188, 630, 630, 169, 169, 169, 168, 168, 168,
	168, 171, 171, 172, 172, 172, 172, 172, 172, 170,
	161, 190, 591, 591, 587, 587, 587, 587, 587, 587,
	587, 587, 588, 588, 588, 588, 593, 593, 115, 115,
	115, 115, 115, 115, 115, 126, 126, 126, 126, 126,
	126, 126, 129, 129, 116, 116, 116, 116, 116, 116,
	116, 119, 119, 117, 117, 117, 117, 118, 118, 81,
	81, 81, 81, 81, 15, 15, 15, 82, 82, 262,
	262, 220, 220, 220, 345, 345, 221, 221, 334, 334,
	334, 334, 218, 218, 219, 219, 83, 83, 631, 631,
	631, 604, 604, 604, 605, 605, 605, 605, 605, 605,
	328, 328, 329, 329, 435, 435, 435, 435, 435, 332,
	332, 332, 333, 333, 333, 333, 333, 333, 333, 333,
	333, 335, 335, 246, 246, 246, 343, 344, 344, 336,
	336, 342, 341, 341, 340, 340, 339, 339, 337, 338,
	338, 338, 347, 347, 346, 349, 349, 348, 434, 550,
	550, 552, 552, 552, 552, 552, 552, 552, 554, 554,
	554, 554, 554, 554, 554, 554, 554, 554, 554, 554,
	554, 554, 554, 554, 554, 418, 418, 632, 632, 633,
	634, 548, 548, 548, 549, 544, 544, 545, 545, 545,
	545, 545, 330, 330, 331, 331, 331, 331, 546, 547,
	363, 363, 473, 551, 551, 553, 553, 555, 635, 635,
	635, 635, 635, 635, 636, 636, 636, 433, 433, 432,
	432, 354, 354, 556, 556, 556, 556, 557, 557, 557,
	557, 557, 560, 559, 558, 558, 558, 558, 558, 85,
	85, 85, 397, 397, 396, 396, 398, 398, 398, 398,
	398, 398, 398, 398, 398, 398, 398, 398, 398, 398,
	398, 195, 195, 274, 274, 79, 79, 79, 12, 12,
	12, 12, 12, 12, 12, 289, 289, 13, 13, 13,
	606, 606, 606, 84, 84, 84, 84, 84, 84, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 273,
	273, 273, 273, 273, 273, 273, 273, 273, 273, 596,
	596, 595, 595, 275, 275, 638, 638, 90, 90, 90,
	90, 90, 90, 90, 90, 491, 491, 492, 492, 78,
	78, 78, 78, 78, 419, 419, 416, 416, 415, 415,
	362, 362, 471, 471, 471, 472, 279, 279, 280, 280,
	239, 239, 239, 31, 30, 21, 21, 26, 26, 27,
	27, 261, 261, 261, 261, 261, 261, 261, 261, 261,
	28, 28, 49, 49, 49, 49, 50, 50, 50, 50,
	53, 53, 54, 54, 48, 48, 48, 48, 51, 51,
	44, 44, 55, 55, 55, 55, 55, 613, 615, 615,
	614, 614, 618, 618, 618, 618, 618, 618, 616, 616,
	617, 617, 621, 621, 622, 622, 122, 122, 127, 127,
	127, 127, 127, 128, 128, 128, 128, 130, 130, 130,
	130, 139, 139, 194, 194, 194, 194, 194, 194, 194,
	57, 57, 57, 57, 70, 70, 70, 70, 137, 640,
	640, 640, 138, 138, 138, 639, 639, 272, 272, 429,
	429, 430, 430, 641, 641, 431, 431, 431, 431, 431,
	265, 264, 266, 266, 267, 267, 76, 76, 76, 255,
	255, 254, 256, 256, 257, 257, 252, 252, 533, 533,
	259, 259, 259, 260, 260, 248, 248, 249, 249, 250,
	250, 251, 251, 263, 263, 642, 642, 113, 113, 113,
	197, 197, 318, 318, 318, 426, 426, 426, 355, 355,
	286, 286, 428, 428, 428, 428, 393, 393, 393, 196,
	196, 370, 370, 383, 383, 384, 384, 485, 485, 385,
	120, 120, 121, 121, 136, 136, 224, 224, 222, 222,
	222, 222, 222, 222, 222, 222, 229, 229, 230, 230,
	231, 231, 232, 233, 233, 233, 233, 374, 374, 234,
	234, 234, 223, 223, 223, 225, 225, 225, 225, 225,
	225, 225, 228, 228, 228, 228, 235, 235, 235, 227,
	227, 567, 567, 567, 569, 569, 571, 571, 570, 570,
	566, 566, 568, 568, 637, 637, 399, 399, 399, 352,
	353, 350, 350, 351, 351, 360, 360, 358, 359, 359,
	361, 361, 470, 470, 470, 240, 240, 240, 390, 390,
	390, 390, 391, 391, 422, 422, 420, 420, 420, 420,
	421, 421, 423, 423, 423, 424, 424, 425, 425, 387,
	387, 388, 388, 389, 389, 389, 389, 451, 451, 226,
	226, 226, 367, 367, 367, 368, 368, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 442, 442,
	440, 440, 440, 440, 474, 474, 474, 474, 474, 474,
	474, 474, 474, 475, 476, 476, 369, 369, 477, 427,
	427, 585, 585, 585, 586, 586, 468, 468, 478, 478,
	478, 478, 478, 478, 466, 466, 467, 467, 486, 487,
	487, 403, 403, 403, 403, 401, 401, 404, 404, 404,
	404, 404, 402, 402, 479, 479, 479, 479, 392, 392,
	480, 480, 480, 480, 481, 482, 482, 483, 483, 436,
	437, 437, 493, 493, 493, 493, 495, 366, 366, 366,
	366, 366, 543, 542, 542, 494, 494, 494, 494, 494,
	494, 494, 494, 494, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 509, 509, 509, 509,
	509, 509, 509, 509, 509, 509, 510, 510, 510, 510,
	510, 510, 510, 496, 496, 496, 496, 496, 500, 500,
	500, 499, 499, 499, 499, 499, 499, 499, 499, 499,
	499, 499, 501, 501, 506, 506, 507, 507, 507, 502,
	503, 508, 508, 508, 508, 643, 643, 512, 512, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 498, 498,
	498, 505, 505, 505, 412, 412, 412, 412, 412, 412,
	412, 412, 412, 412, 412, 412, 412, 411, 411, 413,
	413, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 445, 445, 445, 445, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 446, 446, 446, 446, 446, 446, 446, 446, 446,
	446, 561, 561, 561, 561, 561, 561, 561, 561, 447,
	447, 564, 564, 565, 565, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 572, 572, 573, 573,
	575, 575, 576, 576, 577, 578, 578, 578, 579, 580,
	580, 574, 574, 581, 581, 581, 581, 582, 582, 583,
	583, 583, 583, 583, 584, 584, 584, 584, 584, 457,
	457, 458, 458, 464, 464, 464, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 323, 323, 323, 323, 323, 323, 323, 323, 323,
	323, 325, 325, 324, 276, 276, 276, 276, 276, 276,
	379, 379, 377, 377, 377, 380, 380, 378, 378, 376,
	376, 375, 375, 454, 454, 452, 452, 456, 456, 405,
	405, 511, 511, 511, 511, 511, 511, 511, 511, 406,
	406, 406, 414, 407, 407, 408, 408, 408, 408, 408,
	448, 449, 409, 409, 409, 450, 450, 459, 463, 463,
	462, 461, 461, 460, 460, 438, 438, 439, 439, 386,
	386, 644, 644, 382, 382, 484, 484, 484, 484, 322,
	322, 371, 371, 321, 321, 313, 313, 314, 314, 314,
	314, 364, 364, 465, 465, 513, 513, 514, 514, 515,
	515, 516, 516, 517, 518, 519, 453, 453, 297, 296,
	283, 284, 295, 294, 293, 282, 285, 290, 291, 292,
	287, 288, 304, 303, 302, 253, 258, 309, 310, 310,
	312, 312, 311, 311, 299, 300, 301, 489, 281, 315,
	315, 316, 316, 316, 317, 317, 317, 317, 277, 277,
	278, 278, 305, 305, 306, 307, 307, 298, 298, 298,
	268, 268, 268, 269, 269, 270, 270, 527, 527, 524,
	524, 524, 525, 525, 525, 526, 526, 526, 526, 523,
	523, 523, 523, 523, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 535,
	535, 536, 536, 536, 536, 536, 536, 536, 536, 536,
	536, 536, 536, 536, 536, 536, 536, 536, 536, 537,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	540, 540,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 1, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 12, 12, 9, 2, 7,
	2, 1, 1, 1, 3, 3, 0, 3, 1, 3,
	1, 1, 3, 2, 5, 0, 7, 5, 2, 0,
	1, 2, 3, 1, 1, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 2, 3, 3, 3, 3,
	3, 3, 5, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 4, 3, 6, 6, 6, 6, 6,
	8, 4, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 2, 6, 3, 8,
	3, 4, 3, 3, 4, 3, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 3,
	2, 0, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 3, 5, 3, 3,
	3, 3, 3, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 1, 2, 1, 2,
	1, 2, 7, 3, 2, 0, 1, 3, 3, 1,
	0, 1, 2, 2, 1, 6, 5, 1, 2, 1,
	3, 2, 0, 7, 2, 5, 0, 1, 3, 3,
	1, 9, 3, 2, 0, 2, 2, 2, 2, 2,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 1, 1, 3, 4, 6, 3, 3, 5,
	3, 1, 3, 2, 2, 2, 2, 1, 2, 2,
	5, 3, 3, 6, 6, 3, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 3, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 6, 4,
	7, 7, 7, 9, 10, 5, 2, 6, 4, 7,
	7, 7, 10, 5, 2, 2, 1, 1, 3, 1,
	1, 1, 1, 1, 2, 1, 2, 2, 3, 2,
	4, 3, 2, 2, 1, 2, 1, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 3, 2,
	2, 6, 3, 3, 3, 3, 4, 4, 3, 1,
	3, 3, 2, 2, 1, 3, 3, 3, 1, 2,
	1, 1, 2, 2, 3, 1, 1, 1, 1, 1,
	3, 2, 2, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 1, 1, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 3, 2, 3, 3, 1,
	1, 1, 1, 1, 1, 2, 2, 5, 7, 3,
	3, 3, 4, 4, 6, 5, 5, 5, 3, 4,
	4, 3, 4, 4, 3, 4, 4, 5, 3, 5,
	5, 5, 7, 3, 3, 3, 4, 6, 4, 2,
	6, 4, 3, 2, 3, 4, 3, 5, 3, 6,
	5, 6, 3, 5, 6, 3, 5, 3, 5, 3,
	3, 4, 4, 5, 0, 1, 1, 1, 1, 3,
	2, 3, 4, 3, 4, 3, 5, 3, 4, 4,
	3, 4, 5, 3, 4, 3, 4, 4, 5, 3,
	3, 1, 1, 0, 2, 3, 5, 4, 6, 4,
	6, 4, 1, 0, 3, 4, 4, 5, 7, 5,
	3, 3, 3, 4, 4, 5, 2, 0, 4, 2,
	3, 4, 2, 3, 3, 3, 5, 2, 0, 3,
	3, 4, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 3, 4, 5, 4, 4, 2, 3, 2,
	3, 6, 6, 7, 9, 7, 9, 4, 3, 4,
	4, 5, 1, 1, 10, 10, 3, 5, 5, 5,
	3, 5, 6, 4, 4, 5, 5, 2, 3, 2,
	5, 4, 2, 0, 1, 1, 1, 1, 3, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 13, 16, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 3, 3, 1, 3, 10, 13, 0, 2,
	3, 1, 1, 0, 1, 2, 2, 2, 2, 1,
	1, 0, 1, 3, 1, 1, 1, 2, 3, 3,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 8, 0, 1, 1, 0, 2, 1, 0, 1,
	0, 1, 1, 0, 1, 4, 1, 0, 3, 7,
	7, 1, 1, 3, 7, 1, 3, 11, 3, 2,
	0, 3, 1, 2, 2, 3, 2, 6, 2, 1,
	2, 2, 2, 8, 4, 2, 3, 5, 5, 5,
	2, 5, 5, 2, 2, 2, 0, 1, 1, 3,
	4, 11, 12, 9, 5, 3, 1, 5, 10, 7,
	11, 3, 3, 0, 2, 4, 3, 3, 1, 5,
	1, 3, 1, 2, 0, 1, 2, 2, 0, 1,
	3, 3, 2, 2, 1, 1, 1, 4, 0, 6,
	0, 3, 0, 2, 2, 2, 0, 1, 1, 2,
	2, 0, 3, 3, 2, 1, 1, 2, 2, 5,
	8, 4, 1, 0, 1, 2, 2, 1, 2, 3,
	3, 2, 2, 3, 2, 2, 2, 2, 2, 3,
	1, 4, 2, 2, 2, 4, 7, 3, 4, 6,
	5, 7, 5, 5, 3, 3, 0, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 7, 10, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 0, 3, 3, 0, 1, 8, 11, 3,
	6, 6, 5, 3, 4, 1, 0, 1, 3, 17,
	20, 16, 19, 4, 2, 0, 1, 0, 1, 0,
	1, 3, 2, 4, 2, 3, 1, 0, 2, 0,
	1, 1, 0, 9, 6, 6, 8, 6, 8, 5,
	7, 2, 6, 7, 4, 4, 5, 2, 4, 6,
	6, 8, 6, 7, 8, 9, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 7, 8, 9, 6, 8,
	6, 8, 6, 6, 8, 8, 4, 7, 3, 0,
	7, 10, 1, 1, 1, 1, 2, 2, 3, 0,
	3, 0, 1, 0, 2, 0, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 2, 1, 2, 1, 2, 1, 2, 1,
	3, 2, 3, 2, 2, 2, 2, 2, 2, 1,
	1, 0, 2, 4, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 13, 16, 3, 1,
	0, 4, 1, 0, 2, 2, 3, 0, 1, 1,
	4, 4, 5, 1, 0, 3, 0, 3, 0, 3,
	0, 3, 0, 4, 0, 1, 0, 6, 7, 3,
	6, 3, 1, 3, 1, 1, 4, 2, 1, 3,
	1, 3, 4, 8, 11, 5, 2, 2, 0, 10,
	3, 2, 0, 1, 3, 1, 1, 3, 3, 5,
	6, 4, 5, 4, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 1, 0, 3, 3, 5,
	1, 3, 3, 4, 5, 2, 2, 0, 2, 2,
	1, 1, 1, 0, 1, 0, 2, 2, 5, 4,
	2, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 3, 1, 3, 3, 3, 2, 0, 4,
	2, 5, 3, 2, 0, 1, 3, 3, 5, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 0,
	3, 0, 2, 3, 1, 3, 2, 0, 3, 5,
	6, 4, 6, 4, 3, 2, 1, 0, 5, 1,
	0, 2, 2, 2, 1, 1, 0, 1, 1, 1,
	1, 0, 4, 2, 1, 2, 2, 4, 1, 3,
	1, 2, 3, 2, 4, 1, 0, 1, 0, 2,
	1, 0, 2, 5, 7, 2, 1, 2, 4, 3,
	5, 0, 1, 3, 5, 1, 2, 1, 1, 1,
	1, 1, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	4, 6, 6, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 1, 1, 1, 2, 2, 2, 2,
	2, 1, 3, 0, 5, 4, 1, 2, 1, 4,
	1, 1, 2, 1, 1, 1, 1, 1, 0, 1,
	2, 5, 1, 4, 2, 5, 1, 4, 3, 3,
	0, 1, 2, 4, 1, 1, 1, 1, 1, 1,
	3, 3, 3, 3, 3, 3, 3, 1, 0, 1,
	4, 1, 3, 3, 3, 5, 2, 2, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 5, 6,
	6, 7, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 6, 1, 1, 1, 1, 1, 1, 2, 1,
	5, 5, 6, 3, 1, 1, 1, 2, 2, 2,
	4, 3, 5, 6, 8, 6, 5, 4, 3, 2,
	2, 4, 1, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 6, 6, 8,
	8, 6, 4, 6, 6, 6, 4, 1, 3, 3,
	3, 3, 3, 4, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 3,
	4, 3, 4, 3, 4, 4, 3, 6, 5, 5,
	5, 4, 4, 3, 4, 3, 5, 0, 5, 0,
	2, 0, 1, 3, 3, 2, 2, 0, 6, 1,
	0, 3, 0, 3, 3, 3, 0, 1, 4, 2,
	2, 2, 2, 2, 3, 2, 2, 3, 0, 4,
	1, 1, 5, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 4, 1, 1, 1, 2, 1, 2,
	2, 3, 1, 2, 3, 2, 3, 2, 3, 1,
	0, 1, 3, 1, 3, 3, 3, 1, 3, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 1, 2, 3, 0, 3, 3, 2, 2, 1,
	2, 2, 3, 2, 1, 1, 1, 5, 1, 2,
	4, 2, 0, 1, 0, 3, 5, 1, 0, 1,
	2, 1, 0, 1, 3, 3, 2, 1, 1, 1,
	3, 1, 3, 3, 1, 1, 1, 1, 5, 3,
	1, 1, 3, 1, 1, 1, 1, 2, 2, 1,
	1, 2, 2, 1, 1, 1, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 3, 5, 7, 1, 7, 5, 3, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 0, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 604, -106, -103, -71, -69, -110, -111,
	-92, -112, -105, -134, -139, -120, -121, -122, -135, -141,
	-194, -199, -200, -201, -3, -56, -58, -72, -91, -93,
	-104, -114, -113, -115, -123, -131, -126, -109, -63, -136,
	-140, -151, -195, -196, -197, 32, 31, 100, 80, 155,
	129, 138, 204, 388, 433, 445, 403, 143, 424, 408,
	-145, -146, 463, -57, -70, -138, -137, 73, 130, 418,
	-4, -12, -16, 29, 46, -59, -60, -61, -62, 62,
	-79, -75, -86, -80, -73, -74, -77, -625, 102, -568,
	-94, -97, -130, -629, 162, 222, -116, -117, -118, 370,
	-124, -125, 426, -127, -128, -129, 429, 163, -65, -64,
	157, -222, -224, -143, -142, -144, -198, -152, -153, -154,
	-155, -156, -157, -158, -160, -186, -161, -162, -163, -164,
	-165, -166, -170, -189, -167, -168, -169, -172, -171, -173,
	-178, -174, -175, -176, -177, -179, -180, -182, -183, -184,
	-185, -187, -188, 468, -181, -190, -159, 529, 49, 483,
	82, 147, 437, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -55, -76, -78, -81, -82, -83, -90,
	-84, -85, -567, -95, -96, -99, -101, -102, -98, -100,
	425, -225, -223, 601, 544, -18, -23, -24, -19, -20,
	-22, -25, -21, -26, -27, -28, -40, -45, -46, -42,
	-43, -41, -44, -47, -48, -49, -50, -51, -52, -53,
	-54, -30, -36, -37, -31, -32, -33, -34, -35, -38,
	-39, -17, -29, 565, 574, -228, -226, -227, -235, 455,
	552, 503, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, -320, 2, -299, -305, -306, -307,
	-298, -268, -537, -540, 4, -534, -538, 169, 232, 334,
	21, 23, 22, 24, 25, 26, 27, 29, 30, 41,
	42, 44, 45, 46, 47, 48, 49, 53, 55, 59,
	60, 61, 62, 63, 64, 68, 73, 74, 79, 80,
	81, 82, 83, 84, 85, 91, 88, 89, 90, 92,
	94, 96, 97, 98, 99, 100, 101, 103, 104, 105,
	107, 108, 109, 117, 118, 119, 120, 121, 123, 129,
	124, 130, 133, 128, 132, 134, 136, 137, 138, 141,
	142, 143, 145, 146, 148, 149, 150, 152, 153, 155,
	156, 157, 160, 158, 511, 159, 161, 162, 163, 164,
	167, 175, 176, 177, 182, 184, 185, 186, 190, 191,
	192, 195, 196, 197, 198, 199, 200, 201, 202, 203,
	205, 209, 211, 212, 213, 214, 215, 221, 222, 224,
	225, 226, 227, 228, 233, 234, 235, 239, 236, 245,
	246, 250, 251, 252, 254, 258, 259, 260, 261, 262,
	263, 265, 267, 266, 269, 272, 273, 276, 277, 278,
	279, 280, 281, 285, 286, 282, 287, 288, 290, 291,
	294, 292, 295, 296, 293, 297, 299, 300, 301, 302,
	303, 304, 305, 306, 307, 308, 309, 310, 298, 313,
	311, 315, 316, 317, 318, 332, 327, 328, 329, 322,
	323, 319, 324, 320, 321, 325, 326, 331, 336, 337,
	340, 219, 342, 343, 346, 364, 350, 351, 352, 355,
	356, 359, 362, 363, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 375, 376, 378, 379, 380, 382, 383,
	384, 386, 388, 389, 391, 392, 394, 395, 396, 397,
	398, 399, 400, 402, 403, 405, 404, 406, 408, 410,
	411, 412, 418, 424, 420, 421, 422, 423, 425, 426,
	427, 428, 429, 431, 432, 433, 435, 436, 437, 438,
	439, 441, 443, 444, 448, 449, 465, 466, 485, 445,
	446, 447, 450, 451, 452, 453, 454, 458, 456, 457,
	459, 460, 461, 463, 464, 467, 468, 470, 471, 472,
	473, 474, 475, 476, 479, 481, 482, 483, 502, 484,
	486, 490, 491, 492, 493, 487, 488, 501, 495, 496,
	498, 499, 504, 505, 506, 507, 508, 509, 510, 512,
	514, 522, 523, 524, 526, 529, 530, 531, 532, 520,
	534, 535, 538, 539, 540, 543, 541, 542, 544, 546,
	549, 550, 551, 557, 556, 558, 560, 561, 566, 567,
	569, 570, 571, 36, 50, 51, 54, 56, 58, 69,
	70, 71, 75, 125, 126, 154, 165, 166, 178, 193,
	194, 206, 208, 216, 217, 218, 240, 241, 243, 248,
	270, 339, 341, 357, 361, 377, 381, 385, 387, 401,
	440, 477, 489, 494, 515, 516, 517, 518, 525, 527,
	552, 553, 554, 559, 568, -320, 2, -299, 348, -292,
	2, -268, -268, 388, 28, 2, 28, 376, 457, 506,
	508, 2, -594, -365, 2, 28, -271, -268, 102, 204,
	455, -292, 2, -594, -365, 25, 2, -268, 2, 362,
	22, 27, 66, 77, 98, 141, 164, 187, 190, -628,
	364, 395, 443, 459, 501, 512, 526, 2, 556, 291,
	456, 503, 232, 120, 531, 450, -606, 448, 449, 362,
	393, 435, 207, 545, -272, 2, 445, -268, 291, 2,
	604, 94, 74, 440, 460, -148, 2, 281, 523, -149,
	-150, -147, 515, -522, 450, 435, 313, -268, 604, 604,
	604, 28, -281, -268, 503, 232, 450, 120, 499, 604,
	2, 503, 367, 556, 456, 120, 398, 232, 531, 190,
	141, 27, 450, -606, 579, 580, 291, 127, -592, 2,
	-587, 4, -538, -534, -314, -313, 503, 509, 120, -307,
	-298, 594, -306, 604, 604, 604, 604, 2, 251, 252,
	397, 396, 460, 461, 28, 604, 604, 604, 604, 448,
	2, 164, 22, 27, 66, 93, 98, 127, 187, 190,
	353, -626, 364, 395, 459, 501, 505, 512, 526, -605,
	484, 68, 423, 450, -604, -606, 291, 531, 141, -415,
	120, 281, 202, 539, 508, 506, 537, 133, 239, 542,
	541, 604, 604, -107, 2, 601, 32, 31, -106, -110,
	143, 463, -217, 503, 244, 2, -268, 604, 604, 604,
	2, 251, 252, 448, 449, 28, 604, 604, 188, -587,
	2, 604, 604, 604, 2, 28, 251, 252, 448, 449,
	244, 2, 68, 452, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	2, -192, 460, 484, 213, 47, 46, 74, 28, 394,
	79, 368, 121, 127, 149, 532, 205, 232, 233, 259,
	93, 94, -417, 44, 252, 68, 251, 449, -611, 448,
	-469, 504, 451, 457, 498, 263, 445, 523, 102, 546,
	436, 571, 398, 399, 496, 412, 282, 158, 189, 4,
	120, 313, 435, 462, 515, 281, 444, 371, 84, 604,
	-637, 2, 503, -639, 2, 523, 523, 2, -639, 2,
	-639, 2, -639, 2, -640, 523, 568, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, -223, -225, -224, 604, 604,
	604, 604, 604, 604, 604, -192, 460, 2, 74, 28,
	-358, -360, 536, 242, 151, 354, -222, -224, 2, -567,
	-520, 2, -443, -541, -445, 592, 593, 585, 500, 67,
	-324, 333, 572, -457, 127, 537, 348, -540, -446, -459,
	154, 364, 440, -380, 8, 9, 5, 6, 7, -277,
	-447, -453, 528, 168, 338, -317, 605, 10, 601, -564,
	-224, -458, 37, 208, 65, -524, -316, -278, -496, 243,
	-315, -298, -561, -562, 4, -534, -535, -525, -499, -507,
	-503, -504, -510, -268, -537, 77, 111, 112, 110, 115,
	114, 284, 283, 116, 113, 462, 545, 66, 36, 216,
	217, 248, 339, 218, 75, -563, 142, -536, 240, 241,
	477, 51, 401, 178, 126, 125, 341, 56, 54, 553,
	-508, 122, 515, 516, 517, 518, 193, 194, 58, 165,
	166, 361, 385, 494, 525, 527, 206, 270, 43, 106,
	189, 238, 220, 247, 249, 253, 271, 274, 314, 330,
	335, 358, 360, 434, 469, -643, 554, 489, 69, 70,
	-569, 404, -570, -292, -569, 604, 604, 606, 604, -350,
	-352, -353, 2, 28, 139, 601, 2, -474, 2, -475,
	-479, -224, 264, -478, 601, -476, 599, -299, 349, -565,
	441, -561, -562, -277, -298, -316, 4, -534, -536, 603,
	-354, 601, 120, 450, 503, 78, 232, 93, 164, -410,
	601, -268, 28, 348, 519, 606, -351, 392, -455, 601,
	348, 188, 351, 60, 295, 2, 2, 2, 2, 2,
	216, -268, 503, 119, 2, 262, 2, 2, 2, 2,
	2, 2, 2, -373, 216, 2, -299, 556, -373, 216,
	2, -373, 216, 2, -416, 2, 87, -282, 216, 2,
	-268, -308, 216, 2, -303, -305, -312, 216, 2, -310,
	-268, -529, 216, 2, -528, 4, -534, 116, 462, -443,
	2, -136, 2, 60, -268, 556, 2, 465, 2, 601,
	-148, 2, 71, 523, 43, 460, -149, 2, -430, 2,
	-431, -264, -265, -266, -486, -267, 250, 391, 400, 575,
	131, 333, 571, -620, 188, 584, 519, -520, -520, -520,
	-381, 603, 2, 2, 2, 2, 2, 2, -479, 216,
	-299, 2, -296, -523, 4, -534, -538, -535, -539, -537,
	28, 31, 32, 33, 35, 37, 38, 39, 40, 57,
	65, 66, 72, 76, 78, 87, 93, 102, 110, 111,
	113, 112, 114, 115, 116, 127, 131, 135, 139, 140,
	144, 147, 151, 168, 170, 183, 187, 188, 204, 207,
	210, 223, 237, 242, 244, 264, 268, 275, 283, 284,
	333, 338, 344, 348, 349, 353, 354, 374, 390, 407,
	430, 455, 462, 480, 497, 503, 513, 519, 521, 528,
	536, 537, 545, 547, 555, 562, 563, 564, 565, -540,
	77, 2, -479, 216, 2, -302, 216, -479, -305, 2,
	-282, 2, -295, -523, 2, -321, 216, -299, -301, -305,
	-303, 2, 2, 2, 2, -310, 2, -528, 216, 2,
	28, 28, 556, 392, 244, 519, 606, -371, -313, -314,
	-519, 8, -364, -268, 603, -443, 2, -136, -119, 2,
	183, -443, 216, 2, -136, 216, 2, -443, 216, 2,
	-136, 216, 2, -268, 2, -607, 2, -531, 216, -527,
	10, -526, 5, 4, -534, -538, -535, 216, -268, 2,
	295, 2, 2, 526, 2, 98, 503, 119, 2, 422,
	-627, 443, 530, 2, 2, 2, 2, 2, 2, 2,
	503, -287, 2, -268, 183, 487, -310, 216, -311, 2,
	456, -638, 404, -528, 216, 2, 556, -303, 216, 2,
	-303, 232, 246, -282, 216, 2, 508, 506, 508, 506,
	188, 2, 244, 2, 244, 2, -480, 2, -481, -475,
	-482, 599, 349, -490, 2, -489, -526, 552, -107, 601,
	-107, 601, 460, 601, -531, -299, -299, -443, 2, -136,
	-119, 2, -443, 2, -136, 2, -268, 2, -133, -531,
	-132, 601, 188, -268, 2, -443, 2, -136, -119, 2,
	-443, 2, -136, 2, -217, 183, 2, 120, 503, -192,
	2, 183, 547, 2, 8, 2, 223, -531, 451, 399,
	175, 2, 465, 2, 466, 74, -417, 571, 74, 188,
	2, 188, 2, -400, 2, 565, 392, 188, 2, 2,
	-591, 2, 348, 188, 2, 188, 2, 188, 2, 188,
	2, 188, 2, -191, 461, 524, 502, 396, 252, 2,
	-136, 562, -119, 252, 251, -443, 562, 2, -612, 183,
	449, -443, 2, 522, 261, 159, 188, -400, 2, 188,
	2, 188, 2, 5, 2, 397, 485, 2, 250, 391,
	485, 2, -299, 503, 556, 456, 120, 28, 2, 448,
	2, 2, 88, 89, 188, 2, 188, 2, 203, 188,
	2, 188, 503, 571, 2, -392, -479, -429, -430, -429,
	519, -358, -360, -192, 465, 2, -229, -390, -231, 183,
	-420, -421, -232, 275, 170, 344, -233, -399, 28, 139,
	-399, -399, 60, 602, 602, 11, 12, 76, 41, 592,
	593, 594, 595, 181, 596, 597, 590, 591, 589, 582,
	583, 587, 256, 257, 95, 586, 584, 86, 289, 442,
	171, 172, 173, 174, 419, 230, 34, 231, 14, 15,
	16, -324, 33, 353, 274, 572, 220, 469, 585, 17,
	18, 19, 247, 249, 335, 50, 223, -276, 364, -323,
	500, 67, -443, -443, -443, -443, -443, -443, -443, -443,
	360, 601, -386, -438, 599, -224, 601, 601, 601, 601,
	-519, -224, -443, -457, 602, -378, 601, -224, -457, -452,
	601, 440, 599, 601, -460, -443, 5, 5, 5, 601,
	603, -572, 566, 183, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	387, -501, 601, -500, 601, -500, -500, 557, -498, 601,
	574, 567, 601, -498, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 557, 606, -569,
	-354, 601, -382, -484, -443, 594, -382, -382, 348, -375,
	-443, 106, -403, 253, 314, 189, 271, 434, 238, -440,
	605, -440, -468, 574, -224, -476, -298, -224, -478, 601,
	-474, -468, -108, -519, -91, -104, -113, -136, -151, -196,
	-197, 594, -299, 601, 188, 601, 603, -523, 188, -364,
	-282, -309, -268, -299, -315, -316, -321, -293, -268, 2,
	138, -375, -587, 531, 450, 28, 456, -529, -271, 38,
	-454, -493, -494, -543, 605, -542, -496, -506, -502, -505,
	377, 381, -525, 54, 553, -508, 243, 4, -534, -536,
	240, 241, 477, 51, 401, 178, 126, 125, 341, 56,
	515, 516, 517, 518, 193, 194, 58, 554, 489, 69,
	70, -587, 531, 450, 28, 456, -529, 183, -529, 2,
	2, 154, 2, 2, 2, -268, -245, 606, 64, 427,
	154, -373, 216, -245, 154, -245, 154, -322, 216, -321,
	-245, 154, -245, 606, 154, -245, 606, 154, 603, 606,
	154, -529, 2, -416, -522, -375, 38, -430, 2, 127,
	4, 5, -641, 606, 273, -327, 288, 332, 212, 349,
	569, 342, 131, -530, 5, 4, -453, -465, 127, 281,
	243, -513, -515, 8, -514, 9, -516, 592, 593, -521,
	-520, 109, 603, -523, -242, 420, 463, 363, -241, 24,
	29, 143, 234, 318, 550, 160, -340, 235, -337, 367,
	154, 481, 540, -601, -602, 447, 510, 511, 90, 342,
	463, 363, 420, 154, -396, -398, 38, 118, 318, 362,
	61, 227, 293, 294, 483, 559, 154, 463, 363, 420,
	363, -13, -257, 24, 143, -259, -254, 463, -602, 99,
	420, 578, 425, 373, 495, 390, -602, -244, 481, 540,
	-601, -602, 447, 420, -243, -342, -337, 367, 154, 605,
	24, 143, 420, 463, 363, -623, -624, 29, 420, 363,
	-595, -289, -566, 223, 565, 154, -289, -289, -479, 216,
	-616, 183, 2, -609, -132, 265, 5, 10, -531, -132,
	-371, 606, 606, -523, 594, 449, 448, 154, 154, 154,
	154, 252, 183, 333, 333, 2, 2, 2, 2, 2,
	190, -604, -628, 2, 2, -299, 216, -356, 348, -590,
	-372, 503, -299, 183, 333, 43, -302, 216, 2, -305,
	556, -595, 333, -304, 216, -299, 38, 601, 333, 2,
	-416, 2, 232, -566, 333, -480, -318, -299, -475, -318,
	463, -292, 38, -440, -299, 602, 606, -490, -490, -531,
	-205, 565, 188, 102, 601, 601, -217, 565, 565, 252,
	-487, 606, -486, 223, -532, -531, -133, -531, 423, 252,
	-531, -590, -282, 2, -299, 2, 503, 254, -531, -205,
	223, -531, -531, -531, -522, 28, 466, 2, -191, 461,
	524, 89, 466, 2, -299, 503, 120, 232, 80, -616,
	183, 2, -268, -593, 183, -588, 435, 450, 531, -587,
	-299, 120, -299, 120, -299, 120, -299, -299, 2, 2,
	2, 2, 2, 85, 2, -136, -443, 2, 85, 2,
	46, 482, -612, 183, 2, 522, 2, 522, 2, -268,
	-268, -268, 484, 273, -299, -299, -299, -300, -305, 504,
	451, 449, -443, 2, -630, 2, 188, 183, 2, 503,
	232, 503, 232, 120, 188, 74, 120, 28, 503, 446,
	-245, 606, -272, -229, -390, -522, -391, -390, -230, -229,
	-232, 183, 400, 541, 318, 467, 258, -421, -420, 28,
	-443, -425, 177, 317, -443, -423, -445, 592, 593, -514,
	-516, -374, 342, -223, -223, -223, -361, -470, -443, 390,
	232, -495, -493, -493, -297, -523, 515, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, 274, 220, 469, 50, 223, -443, 519,
	-443, -443, -443, -443, 311, 333, 338, 528, 168, 538,
	139, 342, -644, 497, 40, -450, -224, -379, 601, -464,
	35, 480, 28, -457, 601, 2, -438, -443, -439, -325,
	-323, -268, 592, 593, 594, 595, 596, 597, 582, 583,
	584, 14, 15, 16, 587, 591, 589, 590, 181, 95,
	586, 289, 442, 86, 171, 172, 173, 174, 256, 257,
	17, 18, 19, 34, 585, -376, -375, -375, 602, 555,
	28, 139, 594, 2, 602, 606, 38, 602, -443, -376,
	-456, -452, -375, -463, -462, 562, -411, -412, 570, 298,
	123, 214, 296, -413, 454, -517, 8, -523, 594, -573,
	176, 207, 601, 602, 2, 602, 2, 602, -443, 2,
	602, -443, 2, 602, -443, 2, 602, -443, 2, 602,
	2, 602, 2, -443, -443, -443, -443, -443, -443, -443,
	-375, 8, -517, -517, 515, 515, -517, -517, -517, -509,
	377, 378, 379, 380, 276, 277, 278, 279, 381, 382,
	383, 384, 303, 304, 305, 306, 299, 300, 301, 302,
	307, 308, 309, 310, 198, 199, 200, 201, 194, 195,
	196, 197, -509, -405, 2, -511, -375, 4, 570, 298,
	123, 214, 296, 454, 5, -405, 2, -406, 2, -443,
	-375, -407, -444, -445, 592, 593, 585, -324, -457, -408,
	2, -443, -376, -443, 57, 268, 521, -409, -443, 188,
	-375, -375, 2, -375, 2, -570, 38, -375, -367, 606,
	188, 38, 4, -367, -367, 601, 602, 606, -404, 211,
	292, 287, 246, -404, -474, -403, 253, -401, 358, -401,
	-401, -468, -283, 599, 607, -523, -468, -467, -466, 38,
	-292, 355, -468, -468, 603, 602, -467, 600, -585, 601,
	604, 604, 604, 604, 604, -299, 601, -375, -523, 603,
	486, 2, 602, 247, 247, 247, 247, 247, 348, 441,
	602, 519, -589, -308, -312, 504, 2, 565, -106, 350,
	602, 606, -366, 37, 599, 603, -517, 2, 2, -512,
	557, 601, 601, -412, 601, 188, -589, -312, 504, 2,
	-365, 519, -268, 2, -299, -373, -245, 154, -373, -373,
	-245, 606, 154, -282, -303, -308, -310, -312, -268, -528,
	-529, -245, -304, -620, 602, 523, -431, -326, 400, 479,
	421, 458, 499, 8, 9, 8, 9, 606, -523, 606,
	-621, 93, 519, 78, 450, -261, 282, 519, -434, 216,
	78, -544, -285, 93, -545, -268, 72, 537, 390, 187,
	152, -621, 93, 390, -621, 93, 2, 234, 93, 463,
	484, 28, 60, -479, 41, 41, 28, -619, 331, 269,
	561, 188, 571, 503, 232, 450, 519, 519, -479, -398,
	-493, 118, 293, 294, 60, -518, -513, 592, 593, -518,
	60, -518, -518, -518, 565, -302, -479, 450, 519, 519,
	519, 410, 410, -254, -149, 519, 519, 28, -192, 428,
	127, -642, 584, 410, 606, 41, 41, 28, -619, 331,
	269, 188, 519, -321, -283, 551, 42, 551, 42, 551,
	519, 42, 450, 519, 606, 42, 519, 519, -13, 463,
	-596, -273, 105, 324, 286, 325, 97, 321, 96, 320,
	103, 322, 104, 323, 558, 336, 63, 319, 297, 326,
	-274, -275, 369, 549, 120, -528, -13, -13, 463, 363,
	420, 154, -617, 223, 28, -606, 223, -487, 223, -487,
	-313, -268, 603, -136, -443, -443, -136, -443, -136, 46,
	154, 154, 2, -638, 262, 601, -330, 333, 188, -364,
	-488, 244, 606, -372, -587, 154, -528, -397, -396, 333,
	-304, 216, 2, 154, -354, 333, 148, 601, 398, 2,
	154, -284, 216, -269, -268, -416, -248, 507, 154, -394,
	547, -426, -136, 601, 127, 38, -426, -383, -384, -485,
	-385, -285, 601, -292, -440, -107, -489, 602, 602, 602,
	-204, 352, -203, -268, 5, -217, 547, -329, -435, -434,
	-548, -549, -544, 274, 232, 537, 246, 169, -355, -286,
	-285, 119, 402, 402, -211, 565, -132, -133, 602, 606,
	-487, 223, 487, -205, -205, -487, -487, -299, 183, -531,
	-205, -205, -205, 2, 2, 2, 2, -400, -299, -282,
	-321, -299, 28, 603, -529, -529, -312, -308, -400, -282,
	-400, -282, -400, -282, -400, -400, -136, -443, 484, 2,
	460, 183, 183, 603, -400, -357, 430, 2, 398, 120,
	503, 367, 232, -299, -321, -299, -321, -282, 120, -282,
	121, -299, -479, -391, -230, 349, 258, 467, -423, -424,
	-445, 440, 441, -424, 440, 441, 8, 9, 8, 9,
	-234, 471, 337, -373, 606, -239, 39, 135, 258, -299,
	571, 150, -443, -443, 519, -644, 497, -450, 150, -443,
	311, 338, 528, 168, 538, 139, 342, 188, 601, -444,
	-444, 602, -377, -443, -443, 600, 609, 602, 603, 602,
	-360, 606, -358, -443, -375, -375, 602, 603, -375, -364,
	600, 600, 606, 602, -461, -462, 144, -443, 519, 519,
	519, 519, 601, 602, 603, -578, 359, 601, 601, -443,
	602, 602, 602, 602, 38, 606, 606, 606, 602, 606,
	606, 606, 602, 602, 602, 606, 602, 571, 571, 602,
	602, 602, 602, 606, 602, 606, 602, 188, 602, 602,
	-414, 374, 602, 11, 12, 592, 593, 594, 595, 181,
	596, 597, 590, 591, 589, 582, 583, 584, 86, 289,
	442, 14, 15, 16, -324, 247, 223, -444, -444, -444,
	-444, 602, -448, -449, 188, 183, 38, -409, -409, -409,
	602, 188, -375, 602, 602, 601, -571, 291, 333, 602,
	-437, -436, 563, -484, -368, 2, -474, -294, -523, -437,
	-437, -375, -443, 253, 253, -402, 547, 348, -404, -474,
	-467, -519, -442, -441, 185, 39, 135, 327, 328, 329,
	219, 186, -467, -292, -354, -467, -467, -523, -468, -468,
	-466, 602, -586, -519, 602, -369, -477, -565, -360, 603,
	-523, -214, -566, -193, 5, 338, -193, -193, -193, -193,
	-299, -529, 519, 519, 223, 25, 375, -493, 599, 600,
	8, -523, 601, -517, -517, -517, -529, 188, 188, 223,
	188, -528, 2, -245, -373, -245, -245, -321, -322, -245,
	-245, -245, -395, 565, -520, -430, 535, 83, 400, 515,
	-520, -241, 420, -285, -285, -299, -309, 202, 411, -528,
	333, -434, 216, -247, 333, -493, -293, 601, -418, 567,
	258, 258, 547, -285, -293, 258, 216, -285, 216, -293,
	2, -293, -597, 400, 343, -443, 60, -338, 280, 398,
	334, -242, 420, 463, 363, -136, -136, -136, -136, -136,
	601, -620, 547, 138, -299, -321, -299, -309, -528, -304,
	463, 363, 420, 330, -315, -518, -518, -396, 463, 363,
	420, -309, -528, -302, -528, -253, 216, -268, -253, 216,
	450, -282, 410, 571, 45, -642, -243, -136, -136, -136,
	-136, -136, 601, -283, -244, 420, 5, 216, -285, 5,
	-285, 216, 5, -268, -285, -309, -528, -624, 24, 143,
	-285, -309, -528, -273, -531, 338, 543, -282, -595, -289,
	450, 519, 519, -479, -613, -614, 204, 433, 450, 436,
	-529, -132, -208, 565, -132, -202, 228, 594, -592, -531,
	-268, 556, -268, -328, -331, -329, -285, -220, -221, 567,
	565, 154, -319, -299, 599, -205, -531, -299, -488, -310,
	-311, 154, -354, 333, -528, 38, 154, 601, 2, 2,
	-303, 348, 333, -284, 216, -249, 145, -642, -282, -437,
	-368, -393, -428, 430, 348, -355, 552, -292, -393, -370,
	606, 188, 584, 603, -355, -483, 594, -107, -107, -205,
	606, 601, 584, 584, 601, -531, -531, 602, 606, -247,
	-299, -284, 232, 232, -291, -269, 602, 606, 603, 601,
	584, 584, -213, 352, -212, 146, 260, 245, 473, 474,
	475, 476, 137, 472, 124, 316, -487, -531, -211, -133,
	188, 188, -66, 565, 503, -205, 605, 436, -268, -400,
	-400, -400, 460, 460, -268, -364, -295, -282, -299, -296,
	-321, 183, 183, -282, 541, -424, 349, 285, -470, -240,
	573, -299, 605, -443, -443, 150, 150, -443, -444, -444,
	-443, 150, 188, 601, -443, -454, 33, 33, 602, 606,
	-439, -443, -323, 602, 555, -360, -360, 602, 594, -523,
	605, 602, -452, 147, -443, 513, 298, 214, 296, -413,
	296, -413, -413, -517, 5, -523, 594, -579, -288, 601,
	-268, 563, -359, 354, 602, -495, -493, -443, -443, -443,
	-443, -443, -517, -498, -498, -513, -513, -443, -448, -443,
	-495, -493, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, 139, 333, 342, -444, -449, -448, -443, -443,
	-493, 602, 602, 602, -375, -106, 601, 291, -387, 207,
	-443, -487, 606, -387, -387, 602, -474, -474, 601, -443,
	253, 600, 606, 608, 584, 584, -354, 603, -466, -467,
	600, 602, 606, 602, 606, -427, 38, 602, -523, -437,
	-216, -215, 136, 53, 107, 134, 338, 247, -529, -529,
	450, 351, 5, 8, 599, 600, 603, -517, 602, 602,
	602, -529, -529, 450, -529, -245, -245, 119, 318, -443,
	519, 519, 60, 223, 154, 333, 549, -550, -545, 152,
	-443, 601, 232, 601, 601, 2, -236, -237, -238, 143,
	463, 24, -622, 2, 547, 154, -245, 154, -245, 569,
	-338, 601, 601, 519, 450, -261, 519, 565, -375, -443,
	-206, 127, -522, -602, 605, -602, 605, 450, 519, 519,
	450, 519, 519, 333, 154, 565, 167, 167, 571, -253,
	565, -375, 519, -497, 48, 26, 333, -303, -245, 154,
	519, 519, 531, 463, -531, 338, -13, -309, -528, -304,
	463, 363, 420, -594, -365, -594, 204, -312, -617, -487,
	-210, 352, -209, 146, 432, 137, 260, 225, -487, -208,
	188, 244, 565, -304, 2, 602, 602, 606, -551, 38,
	346, 346, 601, -299, -87, 565, -486, -519, -598, 565,
	43, -302, 38, 154, -595, -136, -304, -491, -492, 5,
	38, -299, 154, 348, 333, -250, 267, -642, -527, -566,
	-360, -393, -382, 334, 91, 602, -437, -384, -368, -443,
	2, 602, -203, -204, -531, -531, -531, -205, -217, -217,
	-435, -332, 601, -284, -269, 601, -217, -286, 2, -532,
	-531, -531, 606, 601, 584, 584, 584, 584, 584, -211,
	-487, -132, -136, 352, -299, 594, -400, -344, -343, 367,
	342, -344, 440, 440, 349, 177, 263, -239, -283, -443,
	-443, 150, 33, 33, -443, -443, -454, 602, -443, -443,
	-375, 600, 5, -443, 602, 602, 8, -443, 602, 603,
	-580, -268, -443, 602, 60, 602, 602, 606, 606, 602,
	602, 602, 602, 602, 602, 602, -449, 188, 139, 342,
	601, 602, 602, -106, -451, 210, 60, -474, -451, -451,
	-402, -364, -474, -441, -283, 599, -283, 599, -523, -519,
	-477, 601, 603, -215, 584, -531, -531, -193, 565, -312,
	600, 2, 599, -523, 602, -312, 119, -285, -285, 503,
	440, -253, 390, -434, 154, -552, 93, -554, 76, 169,
	102, 333, 338, 537, 390, 72, 127, 348, 407, -632,
	-633, -634, 38, 576, 577, 602, -362, -471, -565, 601,
	-268, -362, -364, 333, 492, 127, 348, 333, 127, 348,
	560, 119, 2, 531, 79, -285, -293, -364, -364, -299,
	-309, -528, 161, 602, 606, 584, 2, 594, 594, -309,
	-528, -304, -309, -528, -302, 154, -253, 365, 167, 161,
	602, -283, 5, 5, 154, -280, 76, -285, 5, -285,
	-303, 119, 450, 519, 519, 348, 348, 351, -613, -614,
	-208, 606, 601, 584, 584, -208, -532, -132, 2, -354,
	-345, 234, -285, -549, -546, -547, 390, -553, -555, 169,
	390, -136, 2, -219, -218, -268, 5, 601, -330, 352,
	600, -600, 352, -599, 117, 137, -528, -397, -136, -304,
	-354, 602, 606, 148, -419, 547, -283, -299, 154, -251,
	266, -642, -527, -248, -422, -420, 140, 601, 348, -136,
	-360, 584, 602, 602, 119, 119, 226, 153, -362, 601,
	601, -364, 119, 602, -212, -213, -531, -132, -531, -531,
	-531, -211, -487, -67, -68, 232, 93, 372, -296, 503,
	232, 601, 601, -239, -443, -443, -443, 602, -360, -523,
	594, -574, 367, 602, -470, -443, -443, -444, 188, 601,
	-454, 602, -575, 564, -443, -388, -389, -443, 438, 108,
	208, -575, -575, 602, -519, -519, 2, -531, 2, 519,
	599, 2, 188, 223, 38, 410, -434, -293, -297, -290,
	-268, 169, 216, 338, 560, -418, 258, 601, -444, 541,
	-299, 601, 2, 215, 215, 30, 60, -635, 131, 237,
	602, 606, -472, -279, -268, -443, -472, 602, 602, 338,
	541, 338, 560, -443, 541, -493, 601, -245, -245, 602,
	602, -443, 519, -522, 100, -520, 2, -602, -253, -282,
	-443, 519, 5, -245, -297, -245, -245, -280, 531, -309,
	-528, -304, -618, 504, 457, 532, 451, 191, 439, -618,
	183, -209, -210, -531, -132, -208, 38, -335, 236, 2,
	-551, 258, -290, 258, -631, 565, 602, 606, 584, 584,
	-328, -220, -88, -89, 520, -486, 606, 601, 584, -354,
	38, 5, 601, 601, -268, 348, 601, -283, -263, 92,
	-642, -527, -249, -393, 334, -364, 93, -422, -450, -205,
	601, 601, -333, 81, 94, 128, 215, 192, 233, 484,
	490, 28, -333, 602, -362, -362, 602, 601, -205, 602,
	606, 28, 601, 28, 601, -299, -321, -375, -375, 602,
	-360, 60, 606, 602, 602, -444, -454, 602, -576, -577,
	-288, 606, 601, 601, 464, 600, 600, -529, 2, -529,
	-253, 390, -268, -554, -290, 333, 547, -443, -444, -270,
	601, -443, 601, 601, 38, 127, 237, 132, 221, -433,
	-636, 101, 493, 224, -471, -239, 602, -432, 547, 407,
	-444, -280, -362, 601, 601, 601, 584, 188, 601, -497,
	-245, -303, 519, 2, 2, 188, -594, 602, -608, 405,
	-136, -339, -340, 223, 601, -334, 348, 119, 318, -218,
	-520, -520, 602, 38, -89, 9, -599, -600, -443, 38,
	-136, -491, -362, -299, -362, 348, -255, -254, 275, -527,
	-250, 602, -293, -393, -532, -532, -432, 602, 602, -532,
	-68, -364, -364, 602, 602, -581, 398, 441, 209, -375,
	-361, 602, 606, 38, -389, 2, 2, 2, 410, 154,
	211, 602, -556, 290, -268, 602, -397, -397, 38, 132,
	221, -335, 601, -240, -472, -335, 211, -299, -603, 547,
	602, -347, -346, -343, -349, -348, -343, -375, -520, 100,
	365, -375, -280, -529, -529, 348, -610, 189, -609, 5,
	10, -220, 365, -363, -473, -285, 82, 119, -345, -136,
	602, -136, 602, 602, -419, 602, -299, -252, -533, 410,
	412, -642, -251, -437, 602, 602, -433, -432, -341, -337,
	602, 602, 602, 602, -582, -583, 50, 534, 109, -443,
	-582, -582, -577, -579, 169, 565, -557, -560, -559, 581,
	470, 189, 366, 602, 492, 559, 602, 602, -341, -364,
	565, -354, -443, -432, 602, 606, 552, 602, 606, 552,
	602, 188, 602, -245, -615, 565, -245, -618, -207, 565,
	46, -334, -299, 602, 606, 389, 133, 143, -335, -631,
	-432, 601, -433, 601, -260, -259, -642, -513, -263, 140,
	-205, -205, -335, -433, -221, 565, -205, -584, 152, -583,
	386, 182, 440, 386, 182, -584, -584, -290, 55, -559,
	581, -560, 581, 541, 133, -635, 602, 55, -556, -335,
	-346, 223, -348, 188, 365, 204, 188, 448, -609, 30,
	-262, -261, 601, -473, 441, 441, 2, -339, -334, -433,
	-362, -335, -362, -256, -257, -258, -364, -255, 334, 541,
	-341, -335, -437, 109, 207, 514, 318, 33, 584, -558,
	318, 427, 64, 463, -558, -437, 584, -557, 601, 601,
	351, -529, 352, -364, 2, -220, -335, 602, -341, 602,
	-252, 463, -221, -341, 440, 356, -583, -443, 23, 338,
	127, -443, -635, -375, -375, -245, -204, 601, 602, -334,
	-341, -432, -221, -433, -260, -383, -437, -221, 602, 602,
	-204, -246, 64, 427, -262, -221, -433, -437, -335, -256,
	-437, -437, -336, -337, 519, 602, -437, -335, -341, 601,
	-341, -221, -375, -221, -437, 602, -437, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 558, 559, 561, 562, 563, 565,
	566, 568, 570, 572, 573, 574, 576, 577, 579, 580,
	581, 582, 583, 585, 587, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	654, 656, 0, 1423, 1425, 1427, 1429, 0, 810, 0,
	36, 37, 39, 0, -2, 337, 339, 341, 343, 0,
	374, 376, 377, 379, 381, 382, 383, 385, -2, 0,
	491, 492, 494, 496, -2, 0, 1018, 1020, 1022, 0,
	643, 645, 0, 1025, 1027, 1029, 0, 0, 666, 667,
	0, 1534, -2, 658, 660, 662, 664, 735, 737, 739,
	741, 743, 745, 747, 749, 751, 753, 754, 756, 758,
	760, 762, 764, 765, 767, 769, 771, 772, 774, 775,
	777, 779, 781, 783, 785, 787, 789, 791, 793, 795,
	797, 799, 801, -2, 804, 805, 806, -2, -2, 0,
	-2, -2, -2, 1441, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 435, 437, 439, 441, 443, 446,
	448, 450, 1592, 498, 500, 502, 504, 506, 508, 510,
	0, -2, 1606, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 109, 110, 111, 112,
	113, 114, 115, 116, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 73, 0, 0, 1565, 1567, 1569, 1571, -2,
	0, 0, 5, 9, 11, 13, 15, 17, 19, 21,
	23, 25, 27, 29, 560, 564, 567, 569, 571, 575,
	578, 584, 586, 588, 543, 544, 547, 2304, 2322, 2323,
	2324, 2327, 2328, 2329, 2330, 2331, 2332, 2789, 2870, 2871,
	2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363,
	2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373,
	2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383,
	2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393,
	2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403,
	2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413,
	2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423,
	2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433,
	2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443,
	2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453,
	2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463,
	2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473,
	2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483,
	2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493,
	2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503,
	2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
	2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523,
	2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533,
	2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543,
	2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553,
	2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563,
	2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573,
	2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583,
	2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593,
	2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603,
	2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613,
	2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623,
	2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633,
	2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643,
	2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653,
	2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663,
	2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673,
	2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683,
	2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693,
	2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703,
	2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713,
	2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723,
	2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753,
	2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763,
	2764, 2765, 2766, 2767, 2768, 545, 546, 1212, 0, 612,
	610, 2289, 613, 2586, 615, 617, 485, 486, 487, 488,
	489, 490, 0, 636, 626, 1604, 637, 639, 640, 641,
	642, 607, 605, 0, 636, 2358, 634, 1421, 1422, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 497, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	414, 1270, 1271, 1272, 1406, 1407, 2633, 1448, 0, 235,
	655, -2, -2, 2754, -2, 689, 690, -2, -2, 704,
	708, 699, 2758, 0, 2636, 2620, -2, 711, 1424, 1426,
	1428, 808, 809, 2308, 0, 0, 0, 0, 0, 38,
	40, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	245, -2, -2, -2, -2, 0, 0, 2681, 2410, 2257,
	2324, 2260, 2255, 338, 340, 342, 344, 345, 0, 0,
	0, 0, 0, 0, 0, 375, 378, 380, 384, -2,
	386, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, -2, -2, 0, 0, 0, 0, 0,
	0, 0, 0, 1089, 1081, 1082, 1328, 0, 0, 0,
	-2, 493, 495, 548, 549, 0, 1593, 1593, 556, 557,
	-2, 0, 0, 0, 0, 308, 296, 1019, 1021, 1023,
	1024, 0, 0, 0, 0, 0, 644, 646, 0, 0,
	275, 1026, 1028, 1030, 1031, 0, 0, 0, 0, 0,
	0, 310, 0, 0, 659, 661, 663, 665, 736, 738,
	740, 742, 744, 746, 748, 750, 752, 755, 757, 759,
	761, 763, 766, 768, 770, 773, 776, 778, 780, 782,
	784, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	803, 816, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 913, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 999, 0, 0, 819,
	821, 822, 823, 824, 0, 886, 911, 912, 922, 807,
	0, 1252, 1594, 1450, 1431, 1445, 1450, 1433, 1434, 1435,
	1436, 1437, 1442, 1444, 1438, 1439, 1440, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 60, 436, 438, 440,
	442, 444, 447, 449, 451, -2, 1563, 1564, 499, 501,
	503, 505, 507, 509, 511, 647, 0, 649, 0, 820,
	-2, 0, 1598, 1598, 1598, 0, 0, 1564, 1562, 0,
	652, 653, 715, 716, 1871, 0, 0, 0, 0, 0,
	0, 0, 0, 2131, 1959, 0, 717, -2, 1992, 1994,
	2729, 2559, 2754, 2130, 1996, 1997, 1998, 1999, 2000, 0,
	2002, 2003, 2004, 2005, 2006, 2007, 0, 2009, 0, 2014,
	2015, 2016, 0, 2736, 2234, 2318, -2, 0, 0, 2742,
	2314, 0, 2097, 2032, -2, -2, 2341, 2320, 1803, 1804,
	1805, 1806, 1807, -2, -2, 2772, 2036, 2037, 2038, 2039,
	2040, 2041, 2042, 2043, 2044, 2045, 2046, 0, 2717, 2737,
	2738, 2743, 2745, 2739, 2726, 2057, 2424, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1830, 1839, -2, -2, -2, -2, -2, -2, -2, 2730,
	2731, 2748, 2751, 2757, 2762, 2763, 2735, 2744, 2771, 2773,
	2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783,
	2784, 2785, 2786, 2787, 2788, 1831, -2, -2, -2, -2,
	1581, 2600, 1584, 1212, 1582, 1566, 1568, 0, 1570, 0,
	0, 0, 1575, 1601, 1599, 0, 1650, 1579, 1580, 1673,
	1673, 1697, 0, 1678, 0, 1697, 1593, 1724, 0, 1684,
	2625, 2033, 2034, 0, 2324, 2319, -2, -2, 2769, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 608,
	0, 614, 616, 0, 0, 0, 635, 1603, 0, 0,
	0, 0, 0, 0, 0, 417, 418, 419, 420, 421,
	2737, 0, 0, 0, 426, 0, 428, 429, 430, 431,
	432, 433, 434, 205, 2737, 516, 541, 0, 205, 2737,
	519, 205, 2737, 522, 0, 525, 1326, 205, 2737, 528,
	2285, 205, 2737, 531, 533, 2293, 205, 2737, 537, 2300,
	2298, 538, 0, 540, 225, 221, 222, 223, 224, 1417,
	1418, 1419, 1420, 0, 1447, 1327, 657, 0, 683, 0,
	687, 688, 2725, -2, 0, 2645, 692, 693, -2, 695,
	1451, 1455, 1456, 1457, 1458, 1459, 0, 0, 0, 0,
	1464, 0, 0, 0, 0, 684, 685, 702, 703, 709,
	712, 0, 811, 812, 813, 814, 815, 72, 0, 2737,
	1724, 74, 0, 2279, 2349, 2350, 2351, 2352, 2353, 2770,
	2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799,
	2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809,
	2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819,
	2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829,
	2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839,
	2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849,
	2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859,
	2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869,
	2772, 78, 0, 2737, 83, 0, 2737, 0, -2, 96,
	0, 108, 0, 2282, 117, 0, 2737, 0, 2254, -2,
	0, 217, 297, 298, 299, 0, 1056, -2, 0, 1264,
	1266, 1266, 0, -2, 0, 0, 0, 1009, 2251, 2256,
	1010, 2275, 1011, 2261, 0, 346, 347, 348, 349, 350,
	0, 351, 2737, 353, 354, 0, 356, 357, 2737, 359,
	360, 0, 362, 0, 364, 0, 257, 261, 2737, 311,
	312, 2337, 2338, 2345, 2346, 2347, 2348, 2737, 388, 390,
	0, 392, 393, 0, 395, 0, 0, 0, 399, -2,
	415, 0, 412, 402, 403, 405, 406, 407, 408, 409,
	0, 455, 453, 2290, 0, 0, -2, 2737, 0, 1053,
	0, 0, 1306, -2, 0, 1257, 0, 1313, 2737, 1309,
	0, -2, 0, 1591, 2737, 1468, 1085, 1086, 1087, 1088,
	1736, 482, 0, 1499, 0, 1501, 0, 1520, 1730, 1673,
	0, 0, 1735, 0, -2, 601, 2307, -2, 551, 0,
	552, 0, -2, 0, 325, 0, 0, 1034, 1036, 1037,
	1039, 1040, 1043, 1044, 1045, 1046, 0, 1048, 1710, 276,
	278, 0, 0, 0, 1033, 1408, 1409, 1410, 1411, 1412,
	1413, 1414, 1415, 1416, 0, 0, 668, 0, 0, 817,
	818, 0, 0, 829, 830, 831, 0, 325, 2637, 2595,
	2445, 838, 0, 841, 844, -2, 0, 0, 0, 0,
	848, 0, 853, 854, 855, 0, -2, 0, 862, 864,
	1017, 866, 0, 0, 868, 0, 872, 0, 875, 0,
	877, 0, 879, -2, -2, -2, 887, 888, -2, 893,
	-2, 0, 897, -2, 0, 900, 0, 903, -2, 0,
	913, 909, 910, 0, 0, 0, 0, 930, 931, 0,
	940, 0, 943, 944, 945, 0, 949, 950, 0, 952,
	953, 954, 955, 0, 2708, 2642, 2410, 0, 962, -2,
	968, 970, 0, -2, 0, 986, 0, 990, 0, 0,
	998, 0, 0, 825, 826, 205, 1728, 1430, -2, 1432,
	0, -2, 0, 648, 0, 651, 1623, 1549, 1546, 0,
	1620, 1621, 1550, 0, 0, 0, 1557, 0, 1596, 1597,
	0, 0, 0, 1536, 1537, 0, 0, 0, 0, 2136,
	2137, 2138, 2139, 2152, 2140, 2141, 2151, 2149, 2150, 2142,
	2143, 2148, 2162, 2163, 2153, 2154, 2144, 2157, 2155, 2156,
	2158, 2159, 2160, 2161, 0, 0, 2167, 0, 2145, 2146,
	2147, 2175, 0, 0, 2176, 0, 2178, 0, 2168, 2164,
	2165, 2166, 0, 1938, 1940, 2242, 0, 0, 0, 2174,
	2169, 2170, 1876, 1877, 1878, 1879, 1880, 1913, 1917, 1918,
	0, 0, 1993, 2239, 2238, 1995, 0, 0, 2190, 0,
	2008, -2, 0, 2131, 2185, 0, 0, 2017, 2018, 2019,
	0, 0, 2190, 0, 0, 2233, 2029, 2030, 1868, 0,
	0, 2099, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1817, 1816, 0, 1818, 0, 1819, 1820, 1827, 1840, 0,
	0, 0, 0, 1844, 0, 0, 0, 0, 0, 0,
	0, 2214, -2, 0, 0, 0, 0, 1832, 0, 1583,
	0, 0, 1654, 2243, 2247, 2248, 1654, 1654, 0, 0,
	2191, 1721, 1721, 0, 0, 1716, 1716, 1716, 1714, 1697,
	0, 1697, 1707, 0, 1697, 1697, 0, -2, 1678, 0,
	0, 1707, 0, 1691, 589, 591, 593, 595, 596, 597,
	599, 1725, 1726, 0, 0, 0, 0, 2325, 0, 0,
	0, 0, 2297, 0, 0, 2310, 0, 0, 2284, 371,
	0, 0, 0, 2691, 2636, 0, -2, 619, 638, 1593,
	0, 2193, 1751, 1755, 0, 1757, 1758, 1759, 1760, 1761,
	0, 0, 1752, -2, 1828, 1830, 1851, 2342, 2343, 2344,
	1811, 1812, 1813, 1814, 1815, 1823, 1810, 1810, 1810, 1821,
	1850, 1842, 1850, 1846, 1796, 1797, 1798, 1833, 1834, 1835,
	1836, 0, 2691, 2636, 0, -2, 628, 0, 0, 1531,
	416, 0, 423, 424, 425, 0, 512, 0, 203, 204,
	0, 205, 2737, 517, 0, 520, 0, 205, 2737, 2249,
	526, 0, 529, 0, 0, 535, 0, 0, 0, 0,
	0, 205, 1533, 0, 0, 0, 0, -2, 697, 705,
	706, 707, 0, 1453, 0, 1460, 726, 727, 728, 1462,
	1463, 0, 1465, 700, 729, 730, 731, 732, 733, 734,
	0, 2263, 2264, 2265, 2266, 2269, 2270, 0, 0, 698,
	719, 701, 0, 713, 118, 1403, 0, 0, 161, 0,
	1403, 1403, 0, 0, 0, 0, 188, 0, 1124, 0,
	0, 0, 0, 133, 146, 157, 130, 131, 0, 0,
	0, 0, 0, 0, 84, 1234, 0, 1237, 0, 0,
	0, 0, 0, 0, 0, 1250, 0, 0, 0, 0,
	0, 98, 99, 0, 0, 104, 105, 0, 145, 0,
	0, 0, 0, 0, 1496, 0, 140, 120, 0, 0,
	133, 147, 159, 0, 192, 194, 1121, 0, 0, 0,
	0, 0, 0, 0, 0, 216, 227, 0, 0, 0,
	1258, 0, 0, 0, 1590, 0, 0, 0, 0, 2737,
	1401, 0, 1386, 0, 1710, 2495, -2, -2, 276, 1710,
	1008, 0, 0, 2325, 2259, 0, 0, 0, 0, 0,
	0, 363, 0, 0, 0, 391, 394, 396, 397, 398,
	0, 1305, 0, 404, 445, 1183, 2737, 0, 0, 472,
	467, 0, 469, 0, 0, 0, 1233, 2737, 1231, 2294,
	0, 1255, 0, 1212, 2737, 2292, 0, 0, 0, 1314,
	2334, 1323, 1327, 1486, 0, 484, 0, 1502, 1504, 0,
	0, 1731, 0, 1733, 1673, 1593, 0, 0, 0, 0,
	301, 0, 0, 0, 0, 0, 0, 0, 0, 1047,
	282, 0, 1709, 0, 0, 313, 1710, 276, 2611, 1032,
	325, 325, 1710, 670, 1710, 672, 0, 0, 832, 833,
	0, 325, 325, 325, 839, 840, 842, 843, -2, -2,
	-2, -2, 845, 846, 937, 0, 0, 0, 936, 856,
	0, 858, 861, 865, 0, 1002, 2620, 2636, 2691, 1015,
	937, 2410, 937, 2410, 937, 2410, 937, 937, 881, 925,
	933, 892, 899, 0, 894, 898, 901, 904, 0, 906,
	914, 0, -2, 0, 917, 0, 919, 0, 921, 937,
	938, 941, 948, 951, 956, 957, 958, 959, 2305, 960,
	961, -2, 965, 966, 0, 977, 982, 983, 979, 0,
	0, 0, 0, 0, 0, 993, 994, 0, 0, 1001,
	1251, 0, 1443, 1623, 1549, 650, 1540, 1622, 1541, 1548,
	1551, 0, 0, 1553, 0, 1555, 0, 1618, 1619, 1626,
	1627, 0, 1637, 1638, 1630, 0, -2, 0, 0, 1633,
	1634, 1559, 0, 1576, 1577, 1578, 1607, 1610, 1342, 0,
	2870, 1872, 1746, 1873, 1874, 2278, 0, 1881, 1882, 1883,
	1884, 1885, 1886, 1887, 1888, 1889, 1890, -2, -2, -2,
	-2, -2, -2, -2, -2, 1899, 1900, 1901, 1902, 1903,
	1904, 1905, 1906, 1907, 1908, 1909, -2, -2, -2, 1914,
	1915, 1916, -2, 2177, 2179, 0, 2242, 0, -2, 0,
	-2, -2, -2, -2, 1935, 0, 1937, 1942, 1944, 1946,
	0, 0, 0, 0, 2241, 1956, 2225, 2226, 0, 0,
	2133, 2134, 2135, 1941, 0, 1960, 2240, 2237, 0, 0,
	2171, 0, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143,
	2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153,
	2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163,
	2164, 2165, 2166, 2167, 2168, 0, 2189, 1606, 2021, 0,
	0, 0, 0, 2028, 2013, 2187, 0, 2186, 0, 0,
	0, 2197, 0, 2232, 2228, 0, 2276, 1867, 1854, 1855,
	1856, 1857, 1858, 1859, 1869, 0, 2273, 2311, 2317, 2107,
	0, 0, 0, 2058, 2059, 2060, 2061, 2062, 0, 2064,
	2065, 0, 2067, 2068, 0, 2070, 2071, 0, 2073, 2074,
	2075, 2076, 2077, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773,
	1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783,
	1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793,
	1794, 1795, 0, 0, 2079, 0, 2200, -2, -2, -2,
	-2, -2, -2, -2, -2, 0, 2081, 0, 2083, 2191,
	2211, 0, 0, 1961, 0, 0, 0, 0, 2131, 0,
	2086, 2191, 2219, 0, 0, 0, 0, 0, 2191, 0,
	2224, 0, 2093, 0, 2095, 1585, 0, 0, 1741, 0,
	0, 0, 2246, 1741, 1741, 0, 1649, 0, 0, 1717,
	1718, 1719, 1720, 0, 0, 1721, 0, 1711, 1715, 1712,
	1713, 1707, 1670, 0, 0, 2280, 1707, 1676, 1706, 0,
	1212, 1696, 1707, 1707, 0, -2, 1680, 1697, 0, 0,
	590, 592, 594, 598, 600, 0, 0, 1606, -2, 0,
	-2, 327, 1211, 0, 0, 0, 0, 0, 0, 609,
	611, 0, 0, 532, 0, 0, 625, 0, 603, 0,
	606, 0, 1742, 1745, 0, 0, 1756, 1762, 1763, 0,
	-2, 0, 0, 1852, 0, 0, 0, 0, 0, 633,
	0, 0, 0, 427, 542, 205, 514, 0, 205, 205,
	523, 0, 0, 205, 534, 205, 2301, 205, 2299, 226,
	539, 1532, 238, 0, 686, 0, 1452, 1461, 0, 723,
	0, 725, 0, 2267, 2271, 2268, 2272, 0, 714, 0,
	0, 0, 0, 1402, 0, 1349, 0, 0, 165, 2737,
	0, 207, 0, 0, 1176, 2286, 0, 1166, 0, 0,
	2431, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 1235,
	1236, 1238, 1245, 1247, 0, 1241, 2274, 0, 0, 1242,
	0, 1244, 1246, 1248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 1267, 0, 0, 1268, 1269, 1474,
	1475, 0, 1495, 1496, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 2253, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1260, 0,
	1301, 1299, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
	1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 0, 0, 0, -2, 1262, 1263, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 0, 316,
	2252, 2262, 0, 1041, 1042, 352, 355, 358, 361, 244,
	0, 0, 400, 0, 0, 1091, 1066, 0, 0, 454,
	325, 0, 0, 468, 472, 2303, 1051, 1229, 1232, 0,
	1212, 2737, 1278, 0, 0, 0, 0, 0, 0, 1312,
	0, 0, 2737, 2281, 2333, 2334, 1488, 1496, 0, 1741,
	0, 1518, 1505, 0, 0, 0, 1518, 1522, 1523, 1525,
	1526, 0, 0, 1732, 1738, 550, 602, 1593, 1593, 325,
	323, 2562, 321, 318, 320, 0, 0, 0, 1092, 1094,
	1095, 1096, 207, 0, 2334, 1166, 2484, 2334, 0, 1508,
	1510, 0, 0, 0, 270, 0, 279, 1710, 277, 0,
	282, 0, 0, 0, 466, 669, 674, 827, 0, 325,
	835, 836, 837, 883, 927, 935, 981, 847, 849, 850,
	851, 0, 0, 0, 1016, 1012, 1013, 1014, 867, 937,
	870, 937, 873, 937, 876, 878, 896, 902, 915, 908,
	916, 0, 0, 0, 929, 946, 0, 964, 0, 0,
	0, 0, 0, 0, 0, 987, 988, 989, 991, 996,
	995, 1000, 1729, 1544, 1545, 1547, 0, 1556, 0, 0,
	1632, -2, -2, 1631, 1635, 1636, -2, -2, -2, -2,
	1552, 0, 1561, 1558, 0, 1617, 1340, 1341, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1957, 0, -2,
	1936, 1939, 1943, 1945, 1947, 0, 0, 0, 0, 0,
	0, 2180, 0, 2182, 1958, 2235, 2238, 2173, 0, 2129,
	0, 0, 1605, 1606, 1606, 0, 2027, 0, 2188, 0,
	2195, 2196, 0, 2020, 0, 2229, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2031, 0, 0, 0, 0,
	2063, 2066, 2069, 2072, 0, 0, 0, 0, 2052, 0,
	0, 0, 2056, 1822, 1808, 0, 1850, 1848, 1849, 1843,
	1850, 1847, 1800, 0, 1799, 0, 2078, 0, 2080, 2082,
	0, 0, 2084, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1964, 1965, 1966,
	1986, 2085, 2217, 2218, 0, 0, 0, 0, 0, 0,
	2091, 0, 2223, 2092, 2094, 1593, 0, 1586, 0, 1651,
	1640, 1740, 0, 2244, 1710, 1653, 1655, 2245, 2283, 1640,
	1640, 0, 2192, 0, 0, 1701, 0, 0, 0, 1703,
	1674, 0, 0, 1668, 0, 1659, 1660, 1661, 1662, 1663,
	1664, 1665, 1675, 1212, 1705, 1677, 1681, 2311, 0, 1707,
	0, 1692, 0, 1694, 1727, 0, 1686, 1689, 0, 0,
	2326, 1741, 0, 365, 372, 373, 366, 367, 368, 369,
	0, 618, 0, 0, 0, 0, 0, 2194, 0, 1747,
	0, 1753, 0, 0, 0, 0, 627, 0, 0, 0,
	0, 1530, 422, 513, 205, 518, 521, 2250, 205, 527,
	530, 536, 234, 0, 682, -2, 721, 722, 724, 0,
	720, 162, 1403, 0, 0, 1345, 1347, 1351, 1357, 1360,
	0, 167, 2737, 179, 0, 1140, 0, 0, 0, 0,
	0, 0, 0, 1405, 0, 0, 2737, 205, 2737, 205,
	182, 184, 187, 0, 191, 189, 0, 1128, 0, 0,
	1131, 119, 1403, 0, 0, 122, 126, 134, 135, 138,
	0, 0, 0, 144, 0, 0, 0, 1362, 1366, 1374,
	0, 0, 0, 1239, 1240, 1243, 1249, 85, 0, 0,
	0, 1370, 1372, 1378, 97, 100, 2737, 2295, 102, 2737,
	0, 1344, 0, 0, 0, 0, 193, 124, 128, 136,
	137, 139, 0, 1380, 121, 0, 220, 0, 0, 210,
	205, 2737, 0, 212, 0, 213, 214, 228, 0, 0,
	0, 1054, 1055, 1300, 1253, 1254, 0, 1265, 1259, 0,
	0, 0, 0, 0, 1382, 1383, 0, 0, 0, 1401,
	1398, 1710, 240, 0, 1710, 248, 0, 2258, 0, 262,
	387, 0, 0, 0, 0, 1090, 1194, 0, 1061, 0,
	0, 0, 460, 456, 0, 465, 471, 470, 476, -2,
	0, 0, 0, 0, -2, 0, 0, 1316, 1310, 1311,
	0, 0, 0, 0, 2737, 1490, 1496, 0, 1591, 1606,
	483, 1497, 1518, 0, 0, 0, 1507, 1503, 1500, 1741,
	0, 0, 0, 0, 0, 1734, 1737, 553, 554, 300,
	0, 0, 0, 0, 0, 325, 0, 0, 0, 1097,
	1101, 0, 2334, 2334, 0, 2288, 0, 0, 0, 0,
	0, 0, 280, 0, 283, 0, 0, 0, 288, 289,
	290, 291, 292, 293, 0, 0, 282, 314, 272, 1710,
	0, 0, 671, 0, 0, 834, 0, 857, 860, 869,
	871, 874, 918, 920, 937, 947, 971, 972, 1118, 0,
	1118, 0, 0, 992, 1554, 0, 1629, 1560, 1611, 1612,
	0, 1342, 0, 1875, 1920, 0, 0, -2, 0, 0,
	1924, 0, 0, 0, -2, 0, 0, 0, 2181, 2183,
	0, 2237, 2172, 2022, 0, 0, 0, 2026, 2010, 2011,
	0, 2132, 2198, 2227, 2231, 0, 1860, 1861, 1862, 1863,
	1864, 1865, 1866, 0, 2277, 2312, 2316, 2105, 2106, 2110,
	2291, 0, 0, 0, 2035, 0, 0, 0, 0, 0,
	0, 0, 0, 1841, 1845, 0, 0, 2199, 2210, 2212,
	1962, 1963, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974,
	1975, 1976, -2, -2, -2, 1980, 1981, 1982, -2, -2,
	-2, 1987, 0, 0, 0, 2213, 2215, 2216, 2220, 2221,
	0, 2088, 2089, 2090, 2222, 0, 1593, 1587, 1648, 0,
	1739, 1652, 0, 1648, 1648, 1600, 1699, 0, 0, 1723,
	0, 1671, 0, 1672, 0, 0, 1704, 0, 1679, 1682,
	1683, 1693, 0, 1685, 0, 1688, 0, 2022, -2, 326,
	328, 330, 0, 333, 334, 0, 0, 0, 621, 622,
	0, 620, 604, 0, 0, 1749, 0, 0, 1825, 1829,
	1853, 630, 631, 0, 629, 515, 524, 236, 0, 1708,
	0, 0, 0, 0, 0, 0, 206, 1138, 1175, 0,
	0, 0, 1165, 0, 0, 1181, 169, 170, 171, 0,
	0, 0, 0, 180, 0, 0, 177, 0, 186, 190,
	1125, 0, 0, 0, 0, 1350, 0, 0, 0, 141,
	142, 143, 0, 148, 0, 149, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1480, 1481, 0, 1471,
	0, 0, 0, 208, 0, 0, 0, 1339, 230, 0,
	0, 0, 0, 0, 1303, 1304, 1261, 1363, 1367, 1375,
	0, 0, 0, 0, 636, 0, 641, 1400, 0, 248,
	246, 0, 249, 0, 252, 253, 0, 255, 248, 242,
	0, 0, 0, 1212, 401, 1064, 1182, 0, 1184, 0,
	1062, 0, 0, 1183, 452, 0, 459, 0, 473, 0,
	0, 1233, 0, 0, 1256, 1276, 1212, 0, 1315, 1317,
	0, 1325, 0, 0, 0, 1492, 1496, 0, 1485, 1486,
	1625, 1498, 1516, -2, 0, 0, 1606, 1524, 1521, 1527,
	1528, 0, 322, 0, 317, 319, 0, 303, 0, 0,
	1093, 1098, 0, 0, 0, 0, 0, 1509, 1511, 0,
	1035, 1038, 0, 0, 0, 0, 0, 0, 0, 271,
	282, 1710, 309, 0, 828, 852, 928, 973, 1117, 0,
	0, 975, 0, 0, 1628, 1615, 1616, 1613, 1342, 1922,
	1926, 0, 0, 0, 1928, -2, 0, 1950, -2, -2,
	2184, 2236, 2001, 1606, 2023, 2025, 2012, 2230, 1870, 0,
	2112, 2109, 0, 2096, 0, 2047, 2048, 0, 0, 2051,
	2053, 2054, 2055, 1809, 1802, 1801, 2209, 0, 0, 0,
	0, 2087, 1588, 0, 2101, 0, 0, 1656, 2101, 2101,
	1700, 0, 1702, 1669, 1657, 0, 1666, 0, 2312, 1695,
	1687, 0, 0, 331, 0, 335, 336, 370, 0, 0,
	1743, 1748, 0, 1754, 1824, 0, 237, 163, 164, 1354,
	1358, 1355, 0, 166, 0, 1139, 0, 1142, 0, 0,
	0, 0, 1149, 1166, 0, 0, 0, 0, 0, 0,
	1168, 0, 1167, 0, 0, 1198, 0, 1330, 1337, 0,
	-2, 0, 0, 0, 173, 196, 0, 0, 0, 0,
	199, 1404, 175, 0, 0, 205, 205, 0, 0, 1346,
	1348, 1361, 0, 0, 0, 0, 151, 0, 0, 1364,
	1368, 1376, 1371, 1373, 1379, 0, 103, 0, 1482, 0,
	0, 1381, 218, 219, 0, 205, 0, 205, 211, 205,
	1339, 0, 0, 0, 0, 0, 0, 0, 1384, 1385,
	239, 0, 0, 0, 0, 241, 315, 248, 389, 0,
	1112, 0, 1194, 1186, 1187, 1188, 0, 1193, 1195, 0,
	0, 1078, 1063, 0, 1074, 0, 0, 1091, 1066, 0,
	457, 474, 0, 477, 0, 480, 1052, 1230, 1273, 1212,
	0, 1307, 0, 0, 0, 0, 0, 0, 0, 1494,
	1496, 0, 1487, 1488, 1518, 1624, 0, 0, 0, 1506,
	1625, 0, 324, 325, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 325, 284, 0, 285, 286, 287, 294,
	295, 273, 274, 673, 675, 0, 0, 681, 1116, 0,
	0, 0, 0, 1614, 1930, -2, -2, 1951, 0, 2313,
	2315, 1606, 0, 2098, 1608, 0, 0, -2, 0, 0,
	0, 1589, 1572, 0, 1647, 1639, 1641, 1643, 2623, 2405,
	2736, 1573, 1574, 1722, 0, 0, 1690, 332, 623, 0,
	0, 1750, 0, 0, 0, 1356, 168, 0, 1143, 1144,
	2287, 1146, 0, 1148, 1150, 1151, 1152, 0, 1155, 0,
	2336, 0, 1160, 1163, 1164, 0, 0, 1177, 1199, 0,
	1208, 0, 1332, 1342, 1336, 0, 1334, 1210, 0, 172,
	198, 174, 200, 195, 0, 1339, 0, 176, 185, 0,
	0, 123, 0, 0, 2399, 154, 152, 150, 101, 1343,
	125, 0, 220, 229, 1338, 231, 215, 205, 0, 1365,
	1369, 1377, 0, 1392, 1393, 1394, 1395, 0, 0, 0,
	0, 250, 0, 251, 254, 0, 0, 1127, 0, 1065,
	1185, 0, 1196, 1197, 1068, 0, 1067, 0, 0, 0,
	0, 0, 458, 461, 0, 464, 0, 0, 0, 0,
	0, 1318, 1316, 0, 1324, 0, 0, 0, 1470, 0,
	0, 1489, 1490, 481, 1512, 0, 0, 1518, 1529, 302,
	0, 0, 1099, 1102, 1103, 1104, 1105, 1106, 1107, 1108,
	1109, 1110, 1100, 1210, 0, 0, 1174, 0, 307, 281,
	0, 677, 0, 679, 0, 974, 976, 0, 0, 2024,
	2116, 0, 0, 2049, 2050, -2, 0, 1990, 2100, 2102,
	0, 0, 0, 0, 0, 1658, 1667, 624, 1744, 632,
	1352, 0, 1359, 1141, 1145, 0, 0, 0, 1156, 1216,
	0, 0, 1233, 1233, 1169, 0, 0, 1202, 1203, 1112,
	0, 1204, 1205, 1206, 1331, 1617, 1337, 1112, 0, 0,
	197, 202, 0, 0, 0, 0, 0, 0, 0, 209,
	232, 1339, 0, 1396, 1397, 0, 0, 247, 266, 0,
	1274, 1066, 1126, 0, 0, 1076, 0, 1079, 0, 1075,
	1072, 1073, 1064, 0, 462, 463, 478, 0, 479, 0,
	1277, 0, 0, 1325, 0, 0, 1477, 1469, 1496, 1491,
	1492, 1741, 1515, 1519, 0, 0, 1208, 1210, 1123, 0,
	676, 0, 0, 984, 985, 0, 0, 0, 0, 2111,
	1609, 1991, 0, 0, 1642, 1644, 1645, 1646, 1353, 0,
	0, 1154, 1221, 0, 0, 0, 0, 0, 1170, 1200,
	1201, 1123, 0, 1335, 1333, 1179, 0, 1212, 178, 0,
	1210, 0, 1132, 0, 0, 1135, 0, 0, 155, 2399,
	153, 0, 205, 1389, 205, 0, 269, 0, 260, 258,
	259, 1068, 0, 0, 1190, 1192, 0, 1080, 1112, 1078,
	475, 1275, 1308, 1210, 0, 1208, 0, 1484, 1496, 1478,
	1479, 0, 1494, 0, 325, 325, 1112, 1208, 1066, 1122,
	325, 678, 680, 2108, 2128, 2117, -2, 2694, 2406, 0,
	2128, 2128, 2103, 2104, 0, 0, 1157, 1217, 1218, 0,
	1213, 1214, 1215, 2335, 1158, 1159, 1161, 1162, 1198, 0,
	0, 1216, 201, 1112, 1129, 0, 0, 1130, 0, 0,
	158, 0, 160, 233, 1387, 0, 1390, 0, 256, 0,
	0, 1060, 0, 1189, 0, 0, 0, 0, 1127, 1068,
	1208, 0, 1112, 0, 1473, 1483, 0, 1493, 1470, 0,
	304, 305, 1123, 1112, 1741, 0, 306, 2113, 0, 0,
	2119, 2120, 2121, 2122, 2123, 2114, 2115, 1147, 0, 1219,
	0, 1220, 0, 0, 0, 1741, 1207, 0, 1221, 183,
	1133, 0, 1136, 0, 156, 0, 0, 0, 264, 265,
	1057, 1059, 0, 1191, 1069, 0, 1071, 1066, 1077, 1112,
	0, 1123, 0, 1466, 1472, 1476, 2296, 1477, 1513, 0,
	1066, 1123, 1173, 0, 2125, 2126, 0, 0, 0, 1222,
	0, 1225, 1226, 0, 1223, 1178, 0, 1198, 0, 0,
	1388, 205, 0, 0, 1070, 1068, 1123, 1210, 1066, 1208,
	1484, 0, 1741, 1066, 2124, 2127, 2118, 1153, 1224, 1227,
	1228, 1209, 1180, 0, 0, 1391, 267, 0, 1115, 1060,
	1066, 1208, 1741, 1112, 1473, 1741, 1171, 1741, 1120, 0,
	0, 1111, 1113, 1114, 1058, 1741, 1112, 1321, 1123, 1467,
	1514, 1172, 1134, 1119, 0, 268, 1319, 1123, 1066, 0,
	1066, 1741, 0, 1741, 1322, 1120, 1320, 1137,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 590, 3, 596, 591, 3,
	601, 602, 594, 592, 606, 593, 603, 595, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 609, 3,
	582, 584, 583, 587, 605, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 599, 3, 600, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 607, 589, 608, 585,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 586,
	57925, 588, 57926, 598, 57927, 604, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1481
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1508
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1591
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1631
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1649
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1691
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1698
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1727
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1794
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1826
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1834
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1844
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1859
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1870
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1874
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1880
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1888
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1898
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1902
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1911
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1912
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1916
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1925
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1937
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1942
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1949
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1961
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1968
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1976
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1981
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1985
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1990
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1996
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2004
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2015
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2025
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2035
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2044
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2055
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2061
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2069
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2073
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2077
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2081
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2087
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2092
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2107
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2124
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2129
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2134
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2149
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2154
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2159
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2164
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2183
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2197
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2226
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2229
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2235
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2242
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2257
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2275
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2280
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2295
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2300
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2310
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2348
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2373
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2377
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2443
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2461
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2470
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2474
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2477
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2488
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2495
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2501
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2508
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2529
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2554
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2561
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2565
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2569
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2615
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2625
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2636
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2645
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2649
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2653
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2661
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2665
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2669
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2689
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2693
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2697
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2705
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2798
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2807
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2817
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2823
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2827
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2831
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2840
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2844
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2848
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2854
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2858
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 269:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2862
		{
			sqlVAL.union.val = nil
		}
	case 270:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2905
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2924
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2941
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2955
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 281:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2985
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2998
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3002
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3006
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3010
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3014
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3018
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3026
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3046
		{
			return unimplemented(sqllex, "alter function")
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3054
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3091
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3100
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3106
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3111
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3116
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3121
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3126
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3130
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3149
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3157
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3169
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3175
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3179
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3185
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3189
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 319:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3193
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3203
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3207
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3221
		{
			sqlVAL.union.val = nil
		}
	case 326:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3233
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3247
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3257
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3263
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3267
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3275
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3279
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3283
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3287
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3300
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3301
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3303
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3321
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3323
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3330
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3357
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3363
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3366
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3385
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3393
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3395
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3410
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3413
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3417
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3421
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3425
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3429
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3447
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3454
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3459
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3471
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3473
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3474
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3478
		{
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "CREATE")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3486
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3492
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3496
		{
			return unimplemented(sqllex, "create access method")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3497
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3498
		{
			return unimplemented(sqllex, "create cast")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3500
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3501
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3502
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3503
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3504
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3505
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3506
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3507
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3508
		{
			return unimplemented(sqllex, "create publication")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3509
		{
			return unimplemented(sqllex, "create rule")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3510
		{
			return unimplemented(sqllex, "create server")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3511
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3512
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3513
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3514
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
		}
	case 411:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3518
		{
		}
	case 412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3521
		{
		}
	case 413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3522
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3525
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3526
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3531
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3532
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3533
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3534
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3535
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 423:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3536
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3537
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3538
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3540
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3541
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3542
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3543
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3544
		{
			return unimplemented(sqllex, "drop server")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3545
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3546
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3551
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3554
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3557
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3559
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3569
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3595
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3604
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3611
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3617
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3650
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3665
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3673
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3693
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3704
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 472:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3708
		{

			sqlVAL.union.val = nil
		}
	case 473:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3725
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 476:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3751
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3755
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3764
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3768
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3791
		{
			return helpWith(sqllex, "DELETE")
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3794
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3795
		{
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3803
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3806
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3807
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3808
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3809
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3819
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3821
		{
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DROP")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3827
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3828
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3829
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3830
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3831
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3856
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3864
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3872
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3876
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3887
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3891
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3894
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3902
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3919
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3927
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3942
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3949
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3974
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 535:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3987
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3995
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4010
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4017
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4021
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4026
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4039
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4044
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4051
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4055
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4087
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4095
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4103
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 553:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4111
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4119
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4138
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4141
		{
			return helpWith(sqllex, "DELETE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4143
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4144
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4145
		{
			return helpWith(sqllex, "INSERT")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4148
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4153
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4158
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4159
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4160
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4165
		{
			return helpWith(sqllex, "DELETE")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4166
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "INSERT")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4173
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 603:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4200
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4212
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4216
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4226
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4233
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4241
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4245
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4249
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4259
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4274
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4297
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4309
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4313
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4323
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4327
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4338
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			return helpWith(sqllex, "GRANT")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4364
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4368
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4372
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4401
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4404
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4409
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4413
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4423
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4427
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4441
		{
			return helpWith(sqllex, "RESET")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4442
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4450
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4457
		{
			return helpWith(sqllex, "RESET")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4468
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4482
		{
			return helpWith(sqllex, "USE")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4486
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4487
		{
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4488
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4492
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4494
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "USE")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4511
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4529
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4547
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4559
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4563
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4573
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 677:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4591
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4595
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4619
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4635
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4638
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 690:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4643
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4646
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4660
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4665
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4685
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4690
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4694
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4713
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4717
		{
			return unimplemented(sqllex, "set from current")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4721
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4726
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4740
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4756
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4761
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4768
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4772
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4789
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4810
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4828
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4836
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4842
		{
			sqlVAL.union.val = tree.Low
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4846
		{
			sqlVAL.union.val = tree.Normal
		}
	case 728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{
			sqlVAL.union.val = tree.High
		}
	case 729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4865
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4869
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4894
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4895
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4899
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4900
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4901
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4904
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4905
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4906
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4907
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4910
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4911
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4915
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4916
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4917
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4918
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4920
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4922
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4923
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4924
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4925
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4926
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4927
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4928
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4929
		{
			return helpWith(sqllex, "SHOW")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4932
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4937
		{
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4938
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4941
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 811:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4945
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4950
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4960
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4965
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4977
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4988
		{
			sqlVAL.str = "client_encoding"
		}
	case 825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4992
		{
			sqlVAL.str = "timezone"
		}
	case 826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5007
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5011
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5026
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5042
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5048
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5056
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5074
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5083
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5101
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5108
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5110
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5113
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5122
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5130
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5133
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5145
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5149
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5156
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5164
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5167
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5183
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5190
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5204
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5223
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5236
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5252
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 873:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5277
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5285
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5290
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5293
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5301
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5304
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5306
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5309
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = true
		}
	case 885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5315
		{
			sqlVAL.union.val = true
		}
	case 886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5317
		{
			sqlVAL.union.val = false
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5334
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5342
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5345
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5346
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5347
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5353
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 899:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5407
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5409
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5415
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5417
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5423
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5427
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5431
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 913:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5441
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5445
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5456
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5459
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5464
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5466
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5470
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = true
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5474
		{
			sqlVAL.union.val = false
		}
	case 924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5485
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5490
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 928:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5498
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5508
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5518
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5528
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5531
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5533
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5536
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 936:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5539
		{
			sqlVAL.union.val = true
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = false
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5565
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5568
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5575
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5579
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5583
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5590
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5594
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5608
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5616
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5621
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5641
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5645
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5650
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5655
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5660
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5665
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5672
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5685
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5690
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5698
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5701
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5709
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5712
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 971:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5722
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5726
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5730
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5738
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5746
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5753
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5759
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5764
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5769
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5773
		{
		}
	case 984:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5782
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5790
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5796
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 987:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5805
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5817
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5826
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5830
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5846
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5852
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5876
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5880
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5886
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5893
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5899
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6032
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6071
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6075
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6084
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6092
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6101
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6105
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6133
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6134
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6135
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6136
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6146
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6147
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6149
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6157
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6160
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6179
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6188
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6194
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6198
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6201
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6206
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6225
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6233
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6235
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6241
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6249
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6252
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6274
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6281
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6288
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6355
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6371
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6389
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{

			sqlVAL.union.val = nil
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6406
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.str = ""
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6416
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = nil
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6426
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6431
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6439
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6443
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6449
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6453
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6459
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6469
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6483
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6499
		{
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6500
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6518
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6526
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6528
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6533
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6549
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6555
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6581
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6595
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6596
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6599
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6600
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6605
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6614
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6626
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6637
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6644
		{
			sqlVAL.str = ""
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6651
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6665
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6677
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6712
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6719
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6745
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6769
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6794
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6798
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6810
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6814
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6836
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6840
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6844
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6850
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6854
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6873
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6883
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6896
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6902
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6908
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6912
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6918
		{

			sqlVAL.union.val = true
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6923
		{
			sqlVAL.union.val = false
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6928
		{
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6932
		{
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6935
		{
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6939
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6992
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6997
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7023
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7035
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7046
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7057
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7063
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7073
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7084
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7088
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7138
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7142
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7153
		{
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7154
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7155
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7156
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7157
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7158
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7176
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7180
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7198
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7202
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7222
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7255
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7271
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7283
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7287
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7314
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7323
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7331
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7335
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7339
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7342
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7347
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7357
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7361
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7363
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7366
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7368
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7369
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7371
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7381
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7384
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7392
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7409
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7420
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7424
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7428
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7436
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7440
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7443
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.str = ""
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7461
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7465
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7473
		{
			sqlVAL.union.val = true
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7477
		{

			sqlVAL.union.val = true
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = false
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7492
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7506
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7518
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7530
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7540
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7550
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7554
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7562
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7566
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7570
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7574
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7578
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7582
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7586
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7614
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7618
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7635
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7641
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7645
		{
			sqlVAL.union.val = nil
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7651
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7655
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7660
		{
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7661
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7686
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7688
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7690
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7692
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7694
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7696
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7714
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7734
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7752
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7771
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7788
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7805
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7809
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = false
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = true
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7834
		{
			sqlVAL.union.val = false
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7840
		{
			sqlVAL.union.val = true
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7844
		{
			sqlVAL.union.val = false
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7863
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7869
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7875
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7883
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.str = ""
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.str = ""
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7924
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7930
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7936
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7942
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7948
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7970
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7978
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7994
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8013
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8020
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8026
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8032
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8055
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8065
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8071
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8087
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8099
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8108
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8127
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8145
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8173
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8179
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8191
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8197
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8211
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8217
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8225
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8229
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8241
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8250
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8276
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8280
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = true
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = false
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8301
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8328
		{
			sqlVAL.union.val = tree.Types
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8332
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8336
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8340
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8349
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8355
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8364
		{
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8365
		{
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8368
		{
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8369
		{
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8380
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8398
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8404
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8407
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8420
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8428
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8436
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8449
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8457
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8465
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8476
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8480
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8481
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8482
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8501
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8506
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8516
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8519
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8521
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8524
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8528
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8533
		{
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8534
		{
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8535
		{
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8545
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8552
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8555
		{
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8556
		{
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8564
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8574
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8584
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8597
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8599
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8603
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8612
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8616
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8626
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8677
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8692
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.str = ""
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8715
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8720
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8727
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8731
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8737
		{

		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8744
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8752
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.str = ""
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8781
		{
			sqlVAL.str = ""
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8787
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8791
		{
			sqlVAL.str = ""
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8797
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8801
		{
			sqlVAL.str = ""
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8807
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8815
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8820
		{
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8821
		{
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8836
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8850
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8861
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8868
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8881
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8886
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8892
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8900
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8906
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8930
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8934
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8949
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8957
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8961
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8966
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8987
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8999
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9005
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9011
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9015
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9031
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9052
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9067
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9108
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9141
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9145
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9149
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9161
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9166
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9167
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9171
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9175
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9185
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9194
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9195
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9196
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9200
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9204
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9206
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9246
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9248
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9270
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9309
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9313
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9353
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9374
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9380
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9384
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = true
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9394
		{
			sqlVAL.union.val = false
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9410
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9422
		{
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9423
		{
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = nil
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9436
		{
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9437
		{
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9441
		{
			sqlVAL.union.val = true
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = false
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9449
		{
			sqlVAL.union.val = false
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = true
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9461
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9466
		{
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9467
		{
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9470
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9471
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9485
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9512
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9524
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9529
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9541
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9575
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9588
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9602
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9606
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9621
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9643
		{
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9644
		{
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9647
		{
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9648
		{
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9665
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9669
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9675
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9681
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9683
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9684
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9692
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9711
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9714
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9716
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9731
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9739
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9753
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9758
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9763
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9774
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9784
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9795
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9800
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9812
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9823
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9831
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9839
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9873
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9883
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9918
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9929
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9959
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9970
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9974
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9980
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9986
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9992
		{
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9994
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = nil
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9998
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10003
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = true
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = false
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10037
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10041
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10063
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10074
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.str = tree.AstFull
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10101
		{
			sqlVAL.str = tree.AstRight
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.str = tree.AstInner
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10111
		{
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10112
		{
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.str = tree.AstHash
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10140
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10144
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10152
		{
			sqlVAL.str = ""
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10174
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10176
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10181
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10186
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10200
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10204
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10210
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10216
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10226
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10236
		{
			sqlVAL.union.val = true
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10240
		{
			sqlVAL.union.val = false
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = true
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10250
		{
			sqlVAL.union.val = false
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10275
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10288
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10296
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10297
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10315
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10317
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10325
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10338
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10345
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10354
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10394
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10399
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10406
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10407
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10410
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10411
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10414
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10416
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10418
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10419
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10421
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10423
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10424
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10425
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10427
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10428
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10432
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10435
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10437
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10438
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10439
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10440
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10444
		{
			sqlVAL.union.val = types.Geography
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10446
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10452
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10456
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10464
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10490
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10498
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = nil
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = types.Int2
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = types.Int
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = types.Float4
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = types.Float
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10541
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10549
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10557
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = types.Bool
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10584
		{
			sqlVAL.union.val = types.Float
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10590
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10596
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10608
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10612
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10618
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10630
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10636
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10640
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10644
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10648
		{
			sqlVAL.union.val = types.String
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = true
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10658
		{
			sqlVAL.union.val = false
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10663
		{
			sqlVAL.union.val = types.Date
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10667
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10675
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10689
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10698
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10706
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10719
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10723
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10733
		{
			sqlVAL.union.val = true
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = false
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10735
		{
			sqlVAL.union.val = false
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10739
		{
			sqlVAL.union.val = types.Interval
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10743
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10747
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10782
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10790
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10798
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10831
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10846
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10862
		{
			sqlVAL.union.val = nil
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10876
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10936
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10997
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11001
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11005
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11085
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11208
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11212
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11216
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11220
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11228
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11232
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11236
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11240
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11244
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11256
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11260
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11272
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11294
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11310
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11314
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11318
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11322
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11330
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11402
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11410
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11420
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11424
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11428
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11432
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11490
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11494
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11498
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11502
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11506
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11511
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11513
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11517
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11525
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11529
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11537
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11546
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11557
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11561
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11572
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11580
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11588
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11591
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11599
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11602
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11603
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11605
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11618
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11627
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11693
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11720
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11734
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11754
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11768
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11772
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11800
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11815
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11818
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11823
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11825
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11829
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11832
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11834
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11843
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11850
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11859
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11864
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11866
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11869
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11871
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11874
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11879
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11884
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11886
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11894
		{
			return unimplemented(sqllex, "treat")
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11912
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11915
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11920
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11936
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11940
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11947
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11951
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11957
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11967
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11975
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11979
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11983
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.str = ""
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12016
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12026
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12056
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12069
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12125
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12129
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12133
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12137
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12155
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12159
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12166
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12178
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12203
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12205
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12206
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12207
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12209
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12211
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12212
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12213
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12215
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12216
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12217
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12220
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12222
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12226
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12229
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12232
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12233
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12236
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12242
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12258
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12265
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12266
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12268
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12309
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12324
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12381
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12387
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12391
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12456
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12460
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12478
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12484
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12498
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12504
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12523
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12527
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12533
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12539
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12543
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12582
		{
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12583
		{
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12610
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12614
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12622
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12626
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12636
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12655
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12663
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12686
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12695
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12699
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12703
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12713
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12732
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12736
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12752
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12761
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12772
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12781
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12789
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12806
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12891
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12899
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12903
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12909
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12913
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12921
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12948
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12955
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12963
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12985
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12998
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13007
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13025
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13038
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13045
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13070
		{
			sqlVAL.str = ""
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13076
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13080
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
