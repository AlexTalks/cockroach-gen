// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:868
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13548

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1565,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 404,
	-2, 0,
	-1, 74,
	242, 241,
	515, 241,
	-2, 0,
	-1, 87,
	230, 1301,
	244, 1301,
	260, 400,
	389, 400,
	400, 1057,
	439, 400,
	452, 1057,
	499, 1057,
	526, 400,
	552, 1057,
	-2, 0,
	-1, 93,
	132, 1565,
	237, 1565,
	537, 1565,
	538, 1565,
	-2, 0,
	-1, 109,
	150, 1536,
	169, 1536,
	182, 1536,
	240, 1536,
	273, 1536,
	340, 1536,
	350, 1536,
	532, 1536,
	-2, 1507,
	-1, 149,
	158, 906,
	259, 906,
	392, 868,
	457, 868,
	498, 868,
	518, 906,
	520, 868,
	-2, 0,
	-1, 153,
	4, 1567,
	21, 1567,
	22, 1567,
	23, 1567,
	24, 1567,
	25, 1567,
	26, 1567,
	27, 1567,
	29, 1567,
	30, 1567,
	36, 1567,
	41, 1567,
	42, 1567,
	44, 1567,
	45, 1567,
	46, 1567,
	47, 1567,
	48, 1567,
	49, 1567,
	50, 1567,
	51, 1567,
	53, 1567,
	54, 1567,
	55, 1567,
	56, 1567,
	58, 1567,
	59, 1567,
	60, 1567,
	61, 1567,
	62, 1567,
	63, 1567,
	64, 1567,
	68, 1567,
	69, 1567,
	70, 1567,
	71, 1567,
	73, 1567,
	74, 1567,
	75, 1567,
	79, 1567,
	80, 1567,
	81, 1567,
	82, 1567,
	83, 1567,
	84, 1567,
	85, 1567,
	88, 1567,
	89, 1567,
	90, 1567,
	91, 1567,
	92, 1567,
	94, 1567,
	96, 1567,
	97, 1567,
	98, 1567,
	99, 1567,
	100, 1567,
	101, 1567,
	103, 1567,
	104, 1567,
	105, 1567,
	107, 1567,
	108, 1567,
	109, 1567,
	117, 1567,
	118, 1567,
	119, 1567,
	120, 1567,
	121, 1567,
	123, 1567,
	124, 1567,
	125, 1567,
	127, 1567,
	128, 1567,
	129, 1567,
	131, 1567,
	132, 1567,
	133, 1567,
	135, 1567,
	136, 1567,
	137, 1567,
	140, 1567,
	141, 1567,
	142, 1567,
	144, 1567,
	145, 1567,
	147, 1567,
	148, 1567,
	149, 1567,
	151, 1567,
	152, 1567,
	153, 1567,
	154, 1567,
	155, 1567,
	156, 1567,
	157, 1567,
	158, 1567,
	159, 1567,
	160, 1567,
	161, 1567,
	162, 1567,
	163, 1567,
	164, 1567,
	165, 1567,
	166, 1567,
	168, 1567,
	174, 1567,
	175, 1567,
	176, 1567,
	177, 1567,
	181, 1567,
	183, 1567,
	184, 1567,
	188, 1567,
	189, 1567,
	190, 1567,
	191, 1567,
	192, 1567,
	193, 1567,
	194, 1567,
	195, 1567,
	196, 1567,
	197, 1567,
	198, 1567,
	199, 1567,
	200, 1567,
	201, 1567,
	203, 1567,
	204, 1567,
	206, 1567,
	207, 1567,
	209, 1567,
	210, 1567,
	211, 1567,
	212, 1567,
	213, 1567,
	214, 1567,
	215, 1567,
	216, 1567,
	217, 1567,
	219, 1567,
	220, 1567,
	222, 1567,
	223, 1567,
	224, 1567,
	225, 1567,
	226, 1567,
	230, 1567,
	231, 1567,
	232, 1567,
	233, 1567,
	234, 1567,
	237, 1567,
	238, 1567,
	239, 1567,
	241, 1567,
	243, 1567,
	244, 1567,
	246, 1567,
	248, 1567,
	249, 1567,
	250, 1567,
	252, 1567,
	256, 1567,
	257, 1567,
	258, 1567,
	259, 1567,
	260, 1567,
	261, 1567,
	263, 1567,
	264, 1567,
	265, 1567,
	267, 1567,
	268, 1567,
	270, 1567,
	271, 1567,
	274, 1567,
	278, 1567,
	279, 1567,
	280, 1567,
	283, 1567,
	284, 1567,
	285, 1567,
	286, 1567,
	288, 1567,
	289, 1567,
	290, 1567,
	291, 1567,
	292, 1567,
	293, 1567,
	294, 1567,
	295, 1567,
	296, 1567,
	297, 1567,
	298, 1567,
	299, 1567,
	300, 1567,
	301, 1567,
	302, 1567,
	303, 1567,
	304, 1567,
	305, 1567,
	306, 1567,
	307, 1567,
	308, 1567,
	309, 1567,
	311, 1567,
	313, 1567,
	314, 1567,
	315, 1567,
	316, 1567,
	317, 1567,
	318, 1567,
	319, 1567,
	320, 1567,
	321, 1567,
	322, 1567,
	323, 1567,
	324, 1567,
	325, 1567,
	327, 1567,
	328, 1567,
	330, 1567,
	332, 1567,
	333, 1567,
	335, 1567,
	336, 1567,
	337, 1567,
	338, 1567,
	339, 1567,
	342, 1567,
	345, 1567,
	346, 1567,
	347, 1567,
	348, 1567,
	351, 1567,
	352, 1567,
	353, 1567,
	355, 1567,
	357, 1567,
	358, 1567,
	359, 1567,
	360, 1567,
	361, 1567,
	362, 1567,
	363, 1567,
	364, 1567,
	365, 1567,
	366, 1567,
	367, 1567,
	368, 1567,
	369, 1567,
	371, 1567,
	372, 1567,
	373, 1567,
	374, 1567,
	375, 1567,
	376, 1567,
	377, 1567,
	378, 1567,
	379, 1567,
	380, 1567,
	381, 1567,
	382, 1567,
	383, 1567,
	384, 1567,
	385, 1567,
	387, 1567,
	388, 1567,
	390, 1567,
	391, 1567,
	392, 1567,
	393, 1567,
	394, 1567,
	395, 1567,
	396, 1567,
	397, 1567,
	398, 1567,
	399, 1567,
	400, 1567,
	401, 1567,
	402, 1567,
	404, 1567,
	406, 1567,
	407, 1567,
	408, 1567,
	414, 1567,
	416, 1567,
	417, 1567,
	418, 1567,
	419, 1567,
	420, 1567,
	421, 1567,
	422, 1567,
	423, 1567,
	424, 1567,
	425, 1567,
	427, 1567,
	428, 1567,
	429, 1567,
	431, 1567,
	432, 1567,
	433, 1567,
	434, 1567,
	435, 1567,
	436, 1567,
	437, 1567,
	439, 1567,
	440, 1567,
	441, 1567,
	442, 1567,
	443, 1567,
	444, 1567,
	445, 1567,
	446, 1567,
	447, 1567,
	448, 1567,
	449, 1567,
	450, 1567,
	452, 1567,
	453, 1567,
	454, 1567,
	455, 1567,
	456, 1567,
	457, 1567,
	459, 1567,
	460, 1567,
	461, 1567,
	462, 1567,
	463, 1567,
	464, 1567,
	466, 1567,
	467, 1567,
	468, 1567,
	469, 1567,
	470, 1567,
	471, 1567,
	472, 1567,
	473, 1567,
	475, 1567,
	477, 1567,
	478, 1567,
	479, 1567,
	480, 1567,
	481, 1567,
	482, 1567,
	483, 1567,
	484, 1567,
	485, 1567,
	486, 1567,
	487, 1567,
	488, 1567,
	489, 1567,
	490, 1567,
	491, 1567,
	492, 1567,
	494, 1567,
	495, 1567,
	497, 1567,
	498, 1567,
	500, 1567,
	501, 1567,
	502, 1567,
	503, 1567,
	504, 1567,
	505, 1567,
	506, 1567,
	507, 1567,
	508, 1567,
	510, 1567,
	511, 1567,
	512, 1567,
	513, 1567,
	514, 1567,
	516, 1567,
	518, 1567,
	519, 1567,
	520, 1567,
	521, 1567,
	522, 1567,
	523, 1567,
	525, 1567,
	526, 1567,
	527, 1567,
	528, 1567,
	530, 1567,
	531, 1567,
	534, 1567,
	535, 1567,
	536, 1567,
	537, 1567,
	538, 1567,
	539, 1567,
	540, 1567,
	542, 1567,
	545, 1567,
	546, 1567,
	547, 1567,
	548, 1567,
	549, 1567,
	550, 1567,
	552, 1567,
	553, 1567,
	554, 1567,
	555, 1567,
	557, 1567,
	562, 1567,
	563, 1567,
	564, 1567,
	565, 1567,
	566, 1567,
	567, 1567,
	-2, 0,
	-1, 154,
	1, 1418,
	130, 1418,
	248, 1418,
	329, 1418,
	387, 1418,
	396, 1418,
	571, 1418,
	600, 1418,
	-2, 0,
	-1, 156,
	1, 1418,
	600, 1418,
	-2, 0,
	-1, 157,
	1, 1418,
	600, 1418,
	-2, 0,
	-1, 158,
	1, 1418,
	515, 1418,
	600, 1418,
	-2, 0,
	-1, 187,
	150, 1535,
	169, 1535,
	182, 1535,
	240, 1535,
	273, 1535,
	340, 1535,
	350, 1535,
	532, 1535,
	-2, 1510,
	-1, 234,
	4, 1574,
	5, 1574,
	6, 1574,
	7, 1574,
	8, 1574,
	9, 1574,
	10, 1574,
	21, 1574,
	22, 1574,
	23, 1574,
	24, 1574,
	25, 1574,
	26, 1574,
	27, 1574,
	29, 1574,
	30, 1574,
	36, 1574,
	37, 1574,
	41, 1574,
	42, 1574,
	43, 1574,
	44, 1574,
	45, 1574,
	46, 1574,
	47, 1574,
	48, 1574,
	49, 1574,
	50, 1574,
	51, 1574,
	53, 1574,
	54, 1574,
	55, 1574,
	56, 1574,
	58, 1574,
	59, 1574,
	60, 1574,
	61, 1574,
	62, 1574,
	63, 1574,
	64, 1574,
	65, 1574,
	66, 1574,
	67, 1574,
	68, 1574,
	69, 1574,
	70, 1574,
	71, 1574,
	73, 1574,
	74, 1574,
	75, 1574,
	77, 1574,
	79, 1574,
	80, 1574,
	81, 1574,
	82, 1574,
	83, 1574,
	84, 1574,
	85, 1574,
	88, 1574,
	89, 1574,
	90, 1574,
	91, 1574,
	92, 1574,
	94, 1574,
	96, 1574,
	97, 1574,
	98, 1574,
	99, 1574,
	100, 1574,
	101, 1574,
	103, 1574,
	104, 1574,
	105, 1574,
	106, 1574,
	107, 1574,
	108, 1574,
	109, 1574,
	110, 1574,
	111, 1574,
	112, 1574,
	113, 1574,
	114, 1574,
	115, 1574,
	116, 1574,
	117, 1574,
	118, 1574,
	119, 1574,
	120, 1574,
	121, 1574,
	122, 1574,
	123, 1574,
	124, 1574,
	125, 1574,
	126, 1574,
	127, 1574,
	128, 1574,
	129, 1574,
	131, 1574,
	132, 1574,
	133, 1574,
	135, 1574,
	136, 1574,
	137, 1574,
	140, 1574,
	141, 1574,
	142, 1574,
	144, 1574,
	145, 1574,
	147, 1574,
	148, 1574,
	149, 1574,
	151, 1574,
	152, 1574,
	153, 1574,
	154, 1574,
	155, 1574,
	156, 1574,
	157, 1574,
	158, 1574,
	159, 1574,
	160, 1574,
	161, 1574,
	162, 1574,
	163, 1574,
	164, 1574,
	165, 1574,
	166, 1574,
	167, 1574,
	168, 1574,
	174, 1574,
	175, 1574,
	176, 1574,
	177, 1574,
	181, 1574,
	183, 1574,
	184, 1574,
	187, 1574,
	188, 1574,
	189, 1574,
	190, 1574,
	191, 1574,
	192, 1574,
	193, 1574,
	194, 1574,
	195, 1574,
	196, 1574,
	197, 1574,
	198, 1574,
	199, 1574,
	200, 1574,
	201, 1574,
	203, 1574,
	204, 1574,
	206, 1574,
	207, 1574,
	209, 1574,
	210, 1574,
	211, 1574,
	212, 1574,
	213, 1574,
	214, 1574,
	215, 1574,
	216, 1574,
	217, 1574,
	218, 1574,
	219, 1574,
	220, 1574,
	222, 1574,
	223, 1574,
	224, 1574,
	225, 1574,
	226, 1574,
	230, 1574,
	231, 1574,
	232, 1574,
	233, 1574,
	234, 1574,
	236, 1574,
	237, 1574,
	238, 1574,
	239, 1574,
	241, 1574,
	243, 1574,
	244, 1574,
	245, 1574,
	246, 1574,
	247, 1574,
	248, 1574,
	249, 1574,
	250, 1574,
	251, 1574,
	252, 1574,
	256, 1574,
	257, 1574,
	258, 1574,
	259, 1574,
	260, 1574,
	261, 1574,
	263, 1574,
	264, 1574,
	265, 1574,
	267, 1574,
	268, 1574,
	269, 1574,
	270, 1574,
	271, 1574,
	272, 1574,
	274, 1574,
	278, 1574,
	279, 1574,
	280, 1574,
	281, 1574,
	282, 1574,
	283, 1574,
	284, 1574,
	285, 1574,
	286, 1574,
	288, 1574,
	289, 1574,
	290, 1574,
	291, 1574,
	292, 1574,
	293, 1574,
	294, 1574,
	295, 1574,
	296, 1574,
	297, 1574,
	298, 1574,
	299, 1574,
	300, 1574,
	301, 1574,
	302, 1574,
	303, 1574,
	304, 1574,
	305, 1574,
	306, 1574,
	307, 1574,
	308, 1574,
	309, 1574,
	311, 1574,
	312, 1574,
	313, 1574,
	314, 1574,
	315, 1574,
	316, 1574,
	317, 1574,
	318, 1574,
	319, 1574,
	320, 1574,
	321, 1574,
	322, 1574,
	323, 1574,
	324, 1574,
	325, 1574,
	326, 1574,
	327, 1574,
	328, 1574,
	329, 1574,
	330, 1574,
	331, 1574,
	332, 1574,
	333, 1574,
	334, 1574,
	335, 1574,
	336, 1574,
	337, 1574,
	338, 1574,
	339, 1574,
	342, 1574,
	346, 1574,
	347, 1574,
	348, 1574,
	351, 1574,
	352, 1574,
	353, 1574,
	354, 1574,
	355, 1574,
	356, 1574,
	357, 1574,
	358, 1574,
	359, 1574,
	360, 1574,
	361, 1574,
	362, 1574,
	363, 1574,
	364, 1574,
	365, 1574,
	366, 1574,
	367, 1574,
	368, 1574,
	369, 1574,
	371, 1574,
	372, 1574,
	373, 1574,
	374, 1574,
	375, 1574,
	376, 1574,
	377, 1574,
	378, 1574,
	379, 1574,
	380, 1574,
	381, 1574,
	382, 1574,
	383, 1574,
	384, 1574,
	385, 1574,
	387, 1574,
	388, 1574,
	390, 1574,
	391, 1574,
	392, 1574,
	393, 1574,
	394, 1574,
	395, 1574,
	396, 1574,
	397, 1574,
	398, 1574,
	399, 1574,
	400, 1574,
	401, 1574,
	402, 1574,
	404, 1574,
	406, 1574,
	407, 1574,
	408, 1574,
	414, 1574,
	416, 1574,
	417, 1574,
	418, 1574,
	419, 1574,
	420, 1574,
	421, 1574,
	422, 1574,
	423, 1574,
	424, 1574,
	425, 1574,
	427, 1574,
	428, 1574,
	429, 1574,
	430, 1574,
	431, 1574,
	432, 1574,
	433, 1574,
	434, 1574,
	435, 1574,
	436, 1574,
	437, 1574,
	439, 1574,
	440, 1574,
	441, 1574,
	442, 1574,
	443, 1574,
	444, 1574,
	445, 1574,
	446, 1574,
	447, 1574,
	448, 1574,
	449, 1574,
	450, 1574,
	452, 1574,
	453, 1574,
	454, 1574,
	455, 1574,
	456, 1574,
	457, 1574,
	458, 1574,
	459, 1574,
	460, 1574,
	461, 1574,
	462, 1574,
	463, 1574,
	464, 1574,
	465, 1574,
	466, 1574,
	467, 1574,
	468, 1574,
	469, 1574,
	470, 1574,
	471, 1574,
	472, 1574,
	473, 1574,
	475, 1574,
	477, 1574,
	478, 1574,
	479, 1574,
	480, 1574,
	481, 1574,
	482, 1574,
	483, 1574,
	484, 1574,
	485, 1574,
	486, 1574,
	487, 1574,
	488, 1574,
	489, 1574,
	490, 1574,
	491, 1574,
	492, 1574,
	494, 1574,
	495, 1574,
	496, 1574,
	497, 1574,
	498, 1574,
	500, 1574,
	501, 1574,
	502, 1574,
	503, 1574,
	504, 1574,
	505, 1574,
	506, 1574,
	507, 1574,
	508, 1574,
	510, 1574,
	511, 1574,
	512, 1574,
	513, 1574,
	514, 1574,
	516, 1574,
	518, 1574,
	519, 1574,
	520, 1574,
	521, 1574,
	522, 1574,
	523, 1574,
	524, 1574,
	525, 1574,
	526, 1574,
	527, 1574,
	528, 1574,
	530, 1574,
	531, 1574,
	533, 1574,
	534, 1574,
	535, 1574,
	536, 1574,
	537, 1574,
	538, 1574,
	539, 1574,
	540, 1574,
	541, 1574,
	542, 1574,
	545, 1574,
	546, 1574,
	547, 1574,
	548, 1574,
	549, 1574,
	550, 1574,
	552, 1574,
	553, 1574,
	554, 1574,
	555, 1574,
	557, 1574,
	562, 1574,
	563, 1574,
	564, 1574,
	565, 1574,
	566, 1574,
	567, 1574,
	568, 1574,
	581, 1574,
	588, 1574,
	589, 1574,
	590, 1574,
	597, 1574,
	601, 1574,
	-2, 0,
	-1, 739,
	4, 1299,
	21, 1299,
	22, 1299,
	23, 1299,
	24, 1299,
	25, 1299,
	26, 1299,
	27, 1299,
	29, 1299,
	30, 1299,
	36, 1299,
	41, 1299,
	42, 1299,
	44, 1299,
	45, 1299,
	46, 1299,
	47, 1299,
	48, 1299,
	49, 1299,
	50, 1299,
	51, 1299,
	53, 1299,
	54, 1299,
	55, 1299,
	56, 1299,
	58, 1299,
	59, 1299,
	60, 1299,
	61, 1299,
	62, 1299,
	63, 1299,
	64, 1299,
	68, 1299,
	69, 1299,
	70, 1299,
	71, 1299,
	73, 1299,
	74, 1299,
	75, 1299,
	79, 1299,
	80, 1299,
	81, 1299,
	82, 1299,
	83, 1299,
	84, 1299,
	85, 1299,
	88, 1299,
	89, 1299,
	90, 1299,
	91, 1299,
	92, 1299,
	94, 1299,
	96, 1299,
	97, 1299,
	98, 1299,
	99, 1299,
	100, 1299,
	101, 1299,
	103, 1299,
	104, 1299,
	105, 1299,
	107, 1299,
	108, 1299,
	109, 1299,
	117, 1299,
	118, 1299,
	119, 1299,
	120, 1299,
	121, 1299,
	123, 1299,
	124, 1299,
	125, 1299,
	127, 1299,
	128, 1299,
	129, 1299,
	131, 1299,
	132, 1299,
	133, 1299,
	135, 1299,
	136, 1299,
	137, 1299,
	140, 1299,
	141, 1299,
	142, 1299,
	144, 1299,
	145, 1299,
	147, 1299,
	148, 1299,
	149, 1299,
	151, 1299,
	152, 1299,
	153, 1299,
	154, 1299,
	155, 1299,
	156, 1299,
	157, 1299,
	158, 1299,
	159, 1299,
	160, 1299,
	161, 1299,
	162, 1299,
	163, 1299,
	164, 1299,
	165, 1299,
	166, 1299,
	168, 1299,
	174, 1299,
	175, 1299,
	176, 1299,
	177, 1299,
	181, 1299,
	183, 1299,
	184, 1299,
	188, 1299,
	189, 1299,
	190, 1299,
	191, 1299,
	192, 1299,
	193, 1299,
	194, 1299,
	195, 1299,
	196, 1299,
	197, 1299,
	198, 1299,
	199, 1299,
	200, 1299,
	201, 1299,
	203, 1299,
	204, 1299,
	206, 1299,
	207, 1299,
	209, 1299,
	210, 1299,
	211, 1299,
	212, 1299,
	213, 1299,
	214, 1299,
	215, 1299,
	216, 1299,
	217, 1299,
	219, 1299,
	220, 1299,
	222, 1299,
	223, 1299,
	224, 1299,
	225, 1299,
	226, 1299,
	230, 1299,
	231, 1299,
	232, 1299,
	233, 1299,
	234, 1299,
	237, 1299,
	238, 1299,
	239, 1299,
	241, 1299,
	243, 1299,
	244, 1299,
	246, 1299,
	248, 1299,
	249, 1299,
	250, 1299,
	252, 1299,
	256, 1299,
	257, 1299,
	258, 1299,
	259, 1299,
	260, 1299,
	261, 1299,
	263, 1299,
	264, 1299,
	265, 1299,
	267, 1299,
	268, 1299,
	270, 1299,
	271, 1299,
	274, 1299,
	278, 1299,
	279, 1299,
	280, 1299,
	283, 1299,
	284, 1299,
	285, 1299,
	286, 1299,
	288, 1299,
	289, 1299,
	290, 1299,
	291, 1299,
	292, 1299,
	293, 1299,
	294, 1299,
	295, 1299,
	296, 1299,
	297, 1299,
	298, 1299,
	299, 1299,
	300, 1299,
	301, 1299,
	302, 1299,
	303, 1299,
	304, 1299,
	305, 1299,
	306, 1299,
	307, 1299,
	308, 1299,
	309, 1299,
	311, 1299,
	313, 1299,
	314, 1299,
	315, 1299,
	316, 1299,
	317, 1299,
	318, 1299,
	319, 1299,
	320, 1299,
	321, 1299,
	322, 1299,
	323, 1299,
	324, 1299,
	325, 1299,
	327, 1299,
	328, 1299,
	330, 1299,
	332, 1299,
	333, 1299,
	335, 1299,
	336, 1299,
	337, 1299,
	338, 1299,
	339, 1299,
	342, 1299,
	346, 1299,
	347, 1299,
	348, 1299,
	351, 1299,
	352, 1299,
	353, 1299,
	355, 1299,
	357, 1299,
	358, 1299,
	359, 1299,
	360, 1299,
	361, 1299,
	362, 1299,
	363, 1299,
	364, 1299,
	365, 1299,
	366, 1299,
	367, 1299,
	368, 1299,
	369, 1299,
	371, 1299,
	372, 1299,
	373, 1299,
	374, 1299,
	375, 1299,
	376, 1299,
	377, 1299,
	378, 1299,
	379, 1299,
	380, 1299,
	381, 1299,
	382, 1299,
	383, 1299,
	384, 1299,
	385, 1299,
	387, 1299,
	388, 1299,
	390, 1299,
	391, 1299,
	392, 1299,
	393, 1299,
	394, 1299,
	395, 1299,
	396, 1299,
	397, 1299,
	398, 1299,
	399, 1299,
	400, 1299,
	401, 1299,
	402, 1299,
	404, 1299,
	406, 1299,
	407, 1299,
	408, 1299,
	414, 1299,
	416, 1299,
	417, 1299,
	418, 1299,
	419, 1299,
	420, 1299,
	421, 1299,
	422, 1299,
	423, 1299,
	424, 1299,
	425, 1299,
	427, 1299,
	428, 1299,
	429, 1299,
	431, 1299,
	432, 1299,
	433, 1299,
	434, 1299,
	435, 1299,
	436, 1299,
	437, 1299,
	439, 1299,
	440, 1299,
	441, 1299,
	442, 1299,
	443, 1299,
	444, 1299,
	445, 1299,
	446, 1299,
	447, 1299,
	448, 1299,
	449, 1299,
	450, 1299,
	452, 1299,
	453, 1299,
	454, 1299,
	455, 1299,
	456, 1299,
	457, 1299,
	459, 1299,
	460, 1299,
	461, 1299,
	462, 1299,
	463, 1299,
	464, 1299,
	466, 1299,
	467, 1299,
	468, 1299,
	469, 1299,
	470, 1299,
	471, 1299,
	472, 1299,
	473, 1299,
	475, 1299,
	477, 1299,
	478, 1299,
	479, 1299,
	480, 1299,
	481, 1299,
	482, 1299,
	483, 1299,
	484, 1299,
	485, 1299,
	486, 1299,
	487, 1299,
	488, 1299,
	489, 1299,
	490, 1299,
	491, 1299,
	492, 1299,
	494, 1299,
	495, 1299,
	497, 1299,
	498, 1299,
	500, 1299,
	501, 1299,
	502, 1299,
	503, 1299,
	504, 1299,
	505, 1299,
	506, 1299,
	507, 1299,
	508, 1299,
	510, 1299,
	511, 1299,
	512, 1299,
	513, 1299,
	514, 1299,
	516, 1299,
	518, 1299,
	519, 1299,
	520, 1299,
	521, 1299,
	522, 1299,
	523, 1299,
	525, 1299,
	526, 1299,
	527, 1299,
	528, 1299,
	530, 1299,
	531, 1299,
	534, 1299,
	535, 1299,
	536, 1299,
	537, 1299,
	538, 1299,
	539, 1299,
	540, 1299,
	542, 1299,
	545, 1299,
	546, 1299,
	547, 1299,
	548, 1299,
	549, 1299,
	550, 1299,
	552, 1299,
	553, 1299,
	554, 1299,
	555, 1299,
	557, 1299,
	562, 1299,
	563, 1299,
	564, 1299,
	565, 1299,
	566, 1299,
	567, 1299,
	-2, 0,
	-1, 758,
	186, 2362,
	515, 2362,
	580, 2362,
	599, 2362,
	-2, 0,
	-1, 759,
	186, 2469,
	515, 2469,
	580, 2469,
	599, 2469,
	-2, 0,
	-1, 760,
	186, 2349,
	515, 2349,
	580, 2349,
	599, 2349,
	-2, 0,
	-1, 762,
	186, 2606,
	515, 2606,
	580, 2606,
	599, 2606,
	-2, 0,
	-1, 764,
	186, 2647,
	515, 2647,
	580, 2647,
	599, 2647,
	-2, 0,
	-1, 773,
	186, 2496,
	515, 2496,
	580, 2496,
	599, 2496,
	-2, 694,
	-1, 808,
	599, 2298,
	602, 2298,
	-2, 986,
	-1, 809,
	599, 2300,
	602, 2300,
	-2, 987,
	-1, 810,
	599, 2299,
	602, 2299,
	-2, 988,
	-1, 811,
	602, 2224,
	-2, 989,
	-1, 834,
	182, 256,
	-2, 0,
	-1, 858,
	43, 2271,
	-2, 0,
	-1, 859,
	552, 1277,
	-2, 1058,
	-1, 875,
	4, 1704,
	21, 1704,
	22, 1704,
	23, 1704,
	24, 1704,
	25, 1704,
	26, 1704,
	27, 1704,
	29, 1704,
	30, 1704,
	36, 1704,
	41, 1704,
	42, 1704,
	44, 1704,
	45, 1704,
	46, 1704,
	47, 1704,
	48, 1704,
	49, 1704,
	50, 1704,
	51, 1704,
	53, 1704,
	54, 1704,
	55, 1704,
	56, 1704,
	58, 1704,
	59, 1704,
	60, 1704,
	61, 1704,
	62, 1704,
	63, 1704,
	64, 1704,
	68, 1704,
	69, 1704,
	70, 1704,
	71, 1704,
	73, 1704,
	74, 1704,
	75, 1704,
	79, 1704,
	80, 1704,
	81, 1704,
	82, 1704,
	83, 1704,
	84, 1704,
	85, 1704,
	88, 1704,
	89, 1704,
	90, 1704,
	91, 1704,
	92, 1704,
	94, 1704,
	96, 1704,
	97, 1704,
	98, 1704,
	99, 1704,
	100, 1704,
	101, 1704,
	103, 1704,
	104, 1704,
	105, 1704,
	107, 1704,
	108, 1704,
	109, 1704,
	117, 1704,
	118, 1704,
	119, 1704,
	120, 1704,
	121, 1704,
	123, 1704,
	124, 1704,
	125, 1704,
	127, 1704,
	128, 1704,
	129, 1704,
	131, 1704,
	132, 1704,
	133, 1704,
	135, 1704,
	136, 1704,
	137, 1704,
	140, 1704,
	141, 1704,
	142, 1704,
	144, 1704,
	145, 1704,
	147, 1704,
	148, 1704,
	149, 1704,
	151, 1704,
	152, 1704,
	153, 1704,
	154, 1704,
	155, 1704,
	156, 1704,
	157, 1704,
	158, 1704,
	159, 1704,
	160, 1704,
	161, 1704,
	162, 1704,
	163, 1704,
	164, 1704,
	165, 1704,
	166, 1704,
	168, 1704,
	174, 1704,
	175, 1704,
	176, 1704,
	177, 1704,
	181, 1704,
	183, 1704,
	184, 1704,
	188, 1704,
	189, 1704,
	190, 1704,
	191, 1704,
	192, 1704,
	193, 1704,
	194, 1704,
	195, 1704,
	196, 1704,
	197, 1704,
	198, 1704,
	199, 1704,
	200, 1704,
	201, 1704,
	203, 1704,
	204, 1704,
	206, 1704,
	207, 1704,
	209, 1704,
	210, 1704,
	211, 1704,
	212, 1704,
	213, 1704,
	214, 1704,
	215, 1704,
	216, 1704,
	217, 1704,
	219, 1704,
	220, 1704,
	222, 1704,
	223, 1704,
	224, 1704,
	225, 1704,
	226, 1704,
	230, 1704,
	231, 1704,
	232, 1704,
	233, 1704,
	234, 1704,
	237, 1704,
	238, 1704,
	239, 1704,
	241, 1704,
	243, 1704,
	244, 1704,
	246, 1704,
	248, 1704,
	249, 1704,
	250, 1704,
	252, 1704,
	256, 1704,
	257, 1704,
	258, 1704,
	259, 1704,
	260, 1704,
	261, 1704,
	263, 1704,
	264, 1704,
	265, 1704,
	267, 1704,
	268, 1704,
	270, 1704,
	271, 1704,
	274, 1704,
	278, 1704,
	279, 1704,
	280, 1704,
	283, 1704,
	284, 1704,
	285, 1704,
	286, 1704,
	288, 1704,
	289, 1704,
	290, 1704,
	291, 1704,
	292, 1704,
	293, 1704,
	294, 1704,
	295, 1704,
	296, 1704,
	297, 1704,
	298, 1704,
	299, 1704,
	300, 1704,
	301, 1704,
	302, 1704,
	303, 1704,
	304, 1704,
	305, 1704,
	306, 1704,
	307, 1704,
	308, 1704,
	309, 1704,
	311, 1704,
	313, 1704,
	314, 1704,
	315, 1704,
	316, 1704,
	317, 1704,
	318, 1704,
	319, 1704,
	320, 1704,
	321, 1704,
	322, 1704,
	323, 1704,
	324, 1704,
	325, 1704,
	327, 1704,
	328, 1704,
	330, 1704,
	332, 1704,
	333, 1704,
	335, 1704,
	336, 1704,
	337, 1704,
	338, 1704,
	339, 1704,
	342, 1704,
	346, 1704,
	347, 1704,
	348, 1704,
	351, 1704,
	352, 1704,
	353, 1704,
	355, 1704,
	357, 1704,
	358, 1704,
	359, 1704,
	360, 1704,
	361, 1704,
	362, 1704,
	363, 1704,
	364, 1704,
	365, 1704,
	366, 1704,
	367, 1704,
	368, 1704,
	369, 1704,
	371, 1704,
	372, 1704,
	373, 1704,
	374, 1704,
	375, 1704,
	376, 1704,
	377, 1704,
	378, 1704,
	379, 1704,
	380, 1704,
	381, 1704,
	382, 1704,
	383, 1704,
	384, 1704,
	385, 1704,
	387, 1704,
	388, 1704,
	390, 1704,
	391, 1704,
	392, 1704,
	393, 1704,
	394, 1704,
	395, 1704,
	396, 1704,
	397, 1704,
	398, 1704,
	399, 1704,
	400, 1704,
	401, 1704,
	402, 1704,
	404, 1704,
	406, 1704,
	407, 1704,
	408, 1704,
	414, 1704,
	416, 1704,
	417, 1704,
	418, 1704,
	419, 1704,
	420, 1704,
	421, 1704,
	422, 1704,
	423, 1704,
	424, 1704,
	425, 1704,
	427, 1704,
	428, 1704,
	429, 1704,
	431, 1704,
	432, 1704,
	433, 1704,
	434, 1704,
	435, 1704,
	436, 1704,
	437, 1704,
	439, 1704,
	440, 1704,
	441, 1704,
	442, 1704,
	443, 1704,
	444, 1704,
	445, 1704,
	446, 1704,
	447, 1704,
	448, 1704,
	449, 1704,
	450, 1704,
	452, 1704,
	453, 1704,
	454, 1704,
	455, 1704,
	456, 1704,
	457, 1704,
	459, 1704,
	460, 1704,
	461, 1704,
	462, 1704,
	463, 1704,
	464, 1704,
	466, 1704,
	467, 1704,
	468, 1704,
	469, 1704,
	470, 1704,
	471, 1704,
	472, 1704,
	473, 1704,
	475, 1704,
	477, 1704,
	478, 1704,
	479, 1704,
	480, 1704,
	481, 1704,
	482, 1704,
	483, 1704,
	484, 1704,
	485, 1704,
	486, 1704,
	487, 1704,
	488, 1704,
	489, 1704,
	490, 1704,
	491, 1704,
	492, 1704,
	494, 1704,
	495, 1704,
	497, 1704,
	498, 1704,
	500, 1704,
	501, 1704,
	502, 1704,
	503, 1704,
	504, 1704,
	505, 1704,
	506, 1704,
	507, 1704,
	508, 1704,
	510, 1704,
	511, 1704,
	512, 1704,
	513, 1704,
	514, 1704,
	516, 1704,
	518, 1704,
	519, 1704,
	520, 1704,
	521, 1704,
	522, 1704,
	523, 1704,
	525, 1704,
	526, 1704,
	527, 1704,
	528, 1704,
	530, 1704,
	531, 1704,
	534, 1704,
	535, 1704,
	536, 1704,
	537, 1704,
	538, 1704,
	539, 1704,
	540, 1704,
	542, 1704,
	545, 1704,
	546, 1704,
	547, 1704,
	548, 1704,
	549, 1704,
	550, 1704,
	552, 1704,
	553, 1704,
	554, 1704,
	555, 1704,
	557, 1704,
	562, 1704,
	563, 1704,
	564, 1704,
	565, 1704,
	566, 1704,
	567, 1704,
	-2, 0,
	-1, 885,
	260, 404,
	-2, 0,
	-1, 957,
	392, 869,
	457, 869,
	498, 869,
	520, 869,
	-2, 0,
	-1, 958,
	392, 868,
	457, 868,
	498, 868,
	520, 868,
	-2, 804,
	-1, 962,
	1, 920,
	596, 920,
	598, 920,
	600, 920,
	-2, 0,
	-1, 964,
	1, 843,
	596, 843,
	598, 843,
	600, 843,
	-2, 0,
	-1, 965,
	1, 847,
	596, 847,
	598, 847,
	600, 847,
	-2, 0,
	-1, 966,
	1, 985,
	182, 985,
	596, 985,
	598, 985,
	600, 985,
	-2, 0,
	-1, 974,
	1, 874,
	596, 874,
	598, 874,
	600, 874,
	-2, 0,
	-1, 981,
	1, 920,
	596, 920,
	598, 920,
	600, 920,
	-2, 0,
	-1, 982,
	1, 922,
	596, 922,
	598, 922,
	600, 922,
	-2, 0,
	-1, 983,
	1, 925,
	596, 925,
	598, 925,
	600, 925,
	-2, 0,
	-1, 989,
	1, 949,
	596, 949,
	598, 949,
	600, 949,
	-2, 0,
	-1, 990,
	1, 951,
	596, 951,
	598, 951,
	600, 951,
	-2, 0,
	-1, 995,
	1, 979,
	596, 979,
	598, 979,
	600, 979,
	-2, 0,
	-1, 1045,
	169, 1578,
	182, 1578,
	273, 1578,
	340, 1578,
	-2, 1514,
	-1, 1060,
	169, 1577,
	182, 1577,
	273, 1577,
	340, 1577,
	-2, 1511,
	-1, 1087,
	599, 2297,
	-2, 702,
	-1, 1116,
	5, 2289,
	597, 2287,
	-2, 2278,
	-1, 1124,
	5, 2310,
	597, 2307,
	-2, 2298,
	-1, 1125,
	5, 2311,
	597, 2308,
	-2, 2299,
	-1, 1133,
	599, 2295,
	-2, 2277,
	-1, 1134,
	597, 2730,
	-2, 2296,
	-1, 1157,
	597, 2729,
	-2, 2312,
	-1, 1158,
	5, 1779,
	-2, 2700,
	-1, 1159,
	5, 1780,
	-2, 2701,
	-1, 1160,
	5, 1781,
	-2, 2715,
	-1, 1161,
	5, 1782,
	-2, 2679,
	-1, 1162,
	5, 1783,
	-2, 2713,
	-1, 1163,
	5, 1791,
	-2, 2692,
	-1, 1164,
	5, 1778,
	-2, 2688,
	-1, 1165,
	5, 1778,
	-2, 2687,
	-1, 1166,
	5, 1778,
	-2, 2706,
	-1, 1167,
	5, 1789,
	-2, 2681,
	-1, 1168,
	5, 1794,
	-2, 2680,
	-1, 1169,
	5, 1796,
	-2, 2725,
	-1, 1172,
	5, 1818,
	-2, 2718,
	-1, 1173,
	5, 1810,
	-2, 2719,
	-1, 1174,
	5, 1818,
	-2, 2720,
	-1, 1175,
	5, 1814,
	-2, 2721,
	-1, 1176,
	5, 1764,
	-2, 2693,
	-1, 1177,
	5, 1765,
	-2, 2694,
	-1, 1178,
	5, 1766,
	-2, 2682,
	-1, 1206,
	5, 1801,
	-2, 2726,
	-1, 1207,
	5, 1802,
	-2, 2716,
	-1, 1208,
	5, 1803,
	553, 1803,
	-2, 2683,
	-1, 1209,
	5, 1804,
	553, 1804,
	-2, 2684,
	-1, 1246,
	597, 2307,
	-2, 2298,
	-1, 1247,
	597, 2308,
	-2, 2299,
	-1, 1348,
	186, 2647,
	515, 2647,
	580, 2647,
	599, 2647,
	-2, 0,
	-1, 1351,
	1, 678,
	600, 678,
	-2, 1426,
	-1, 1480,
	359, 2272,
	416, 2272,
	459, 2272,
	590, 2272,
	-2, 2262,
	-1, 1491,
	601, 2272,
	-2, 2274,
	-1, 1499,
	1, 1274,
	421, 1238,
	459, 1238,
	574, 1238,
	596, 1274,
	598, 1274,
	600, 1274,
	-2, 1563,
	-1, 1505,
	202, 1371,
	221, 1371,
	429, 1371,
	-2, 0,
	-1, 1550,
	400, 1057,
	552, 1057,
	-2, 399,
	-1, 1567,
	43, 2270,
	-2, 1023,
	-1, 1574,
	1, 1274,
	596, 1274,
	598, 1274,
	600, 1274,
	-2, 1563,
	-1, 1582,
	4, 1299,
	21, 1299,
	22, 1299,
	23, 1299,
	24, 1299,
	25, 1299,
	26, 1299,
	27, 1299,
	29, 1299,
	30, 1299,
	36, 1299,
	41, 1299,
	42, 1299,
	44, 1299,
	45, 1299,
	46, 1299,
	47, 1299,
	48, 1299,
	49, 1299,
	50, 1299,
	51, 1299,
	53, 1299,
	54, 1299,
	55, 1299,
	56, 1299,
	58, 1299,
	59, 1299,
	60, 1299,
	61, 1299,
	62, 1299,
	63, 1299,
	64, 1299,
	68, 1299,
	69, 1299,
	70, 1299,
	71, 1299,
	73, 1299,
	74, 1299,
	75, 1299,
	79, 1299,
	80, 1299,
	81, 1299,
	82, 1299,
	83, 1299,
	84, 1299,
	85, 1299,
	88, 1299,
	89, 1299,
	90, 1299,
	91, 1299,
	92, 1299,
	94, 1299,
	96, 1299,
	97, 1299,
	98, 1299,
	99, 1299,
	100, 1299,
	101, 1299,
	103, 1299,
	104, 1299,
	105, 1299,
	107, 1299,
	108, 1299,
	109, 1299,
	117, 1299,
	118, 1299,
	119, 1299,
	120, 1299,
	121, 1299,
	123, 1299,
	124, 1299,
	125, 1299,
	127, 1299,
	128, 1299,
	129, 1299,
	131, 1299,
	132, 1299,
	133, 1299,
	135, 1299,
	136, 1299,
	137, 1299,
	140, 1299,
	141, 1299,
	142, 1299,
	144, 1299,
	145, 1299,
	147, 1299,
	148, 1299,
	149, 1299,
	151, 1299,
	152, 1299,
	153, 1299,
	154, 1299,
	155, 1299,
	156, 1299,
	157, 1299,
	158, 1299,
	159, 1299,
	160, 1299,
	161, 1299,
	162, 1299,
	163, 1299,
	164, 1299,
	165, 1299,
	166, 1299,
	174, 1299,
	175, 1299,
	176, 1299,
	177, 1299,
	181, 1299,
	183, 1299,
	184, 1299,
	188, 1299,
	189, 1299,
	190, 1299,
	191, 1299,
	192, 1299,
	193, 1299,
	194, 1299,
	195, 1299,
	196, 1299,
	197, 1299,
	198, 1299,
	199, 1299,
	200, 1299,
	201, 1299,
	203, 1299,
	204, 1299,
	206, 1299,
	207, 1299,
	209, 1299,
	210, 1299,
	211, 1299,
	212, 1299,
	213, 1299,
	214, 1299,
	215, 1299,
	216, 1299,
	217, 1299,
	219, 1299,
	220, 1299,
	222, 1299,
	223, 1299,
	224, 1299,
	225, 1299,
	226, 1299,
	231, 1299,
	232, 1299,
	233, 1299,
	234, 1299,
	237, 1299,
	238, 1299,
	239, 1299,
	241, 1299,
	243, 1299,
	244, 1299,
	246, 1299,
	248, 1299,
	249, 1299,
	250, 1299,
	252, 1299,
	256, 1299,
	257, 1299,
	258, 1299,
	259, 1299,
	260, 1299,
	261, 1299,
	263, 1299,
	264, 1299,
	265, 1299,
	267, 1299,
	268, 1299,
	270, 1299,
	271, 1299,
	274, 1299,
	278, 1299,
	279, 1299,
	280, 1299,
	283, 1299,
	284, 1299,
	285, 1299,
	286, 1299,
	288, 1299,
	289, 1299,
	290, 1299,
	291, 1299,
	292, 1299,
	293, 1299,
	294, 1299,
	295, 1299,
	296, 1299,
	297, 1299,
	298, 1299,
	299, 1299,
	300, 1299,
	301, 1299,
	302, 1299,
	303, 1299,
	304, 1299,
	305, 1299,
	306, 1299,
	307, 1299,
	308, 1299,
	309, 1299,
	311, 1299,
	313, 1299,
	314, 1299,
	315, 1299,
	316, 1299,
	317, 1299,
	318, 1299,
	319, 1299,
	320, 1299,
	321, 1299,
	322, 1299,
	323, 1299,
	324, 1299,
	325, 1299,
	327, 1299,
	328, 1299,
	332, 1299,
	333, 1299,
	335, 1299,
	336, 1299,
	337, 1299,
	338, 1299,
	339, 1299,
	342, 1299,
	344, 1299,
	346, 1299,
	347, 1299,
	348, 1299,
	351, 1299,
	352, 1299,
	353, 1299,
	355, 1299,
	357, 1299,
	358, 1299,
	359, 1299,
	360, 1299,
	361, 1299,
	362, 1299,
	363, 1299,
	364, 1299,
	365, 1299,
	366, 1299,
	367, 1299,
	368, 1299,
	369, 1299,
	371, 1299,
	372, 1299,
	373, 1299,
	374, 1299,
	375, 1299,
	376, 1299,
	377, 1299,
	378, 1299,
	379, 1299,
	380, 1299,
	381, 1299,
	382, 1299,
	383, 1299,
	384, 1299,
	385, 1299,
	387, 1299,
	388, 1299,
	390, 1299,
	391, 1299,
	392, 1299,
	393, 1299,
	394, 1299,
	395, 1299,
	396, 1299,
	397, 1299,
	398, 1299,
	399, 1299,
	400, 1299,
	401, 1299,
	402, 1299,
	404, 1299,
	406, 1299,
	407, 1299,
	408, 1299,
	414, 1299,
	416, 1299,
	417, 1299,
	418, 1299,
	419, 1299,
	420, 1299,
	421, 1299,
	422, 1299,
	423, 1299,
	424, 1299,
	425, 1299,
	427, 1299,
	428, 1299,
	429, 1299,
	431, 1299,
	432, 1299,
	433, 1299,
	434, 1299,
	435, 1299,
	436, 1299,
	437, 1299,
	439, 1299,
	440, 1299,
	441, 1299,
	442, 1299,
	443, 1299,
	444, 1299,
	445, 1299,
	446, 1299,
	447, 1299,
	448, 1299,
	449, 1299,
	450, 1299,
	452, 1299,
	453, 1299,
	454, 1299,
	455, 1299,
	456, 1299,
	457, 1299,
	459, 1299,
	460, 1299,
	461, 1299,
	462, 1299,
	463, 1299,
	464, 1299,
	466, 1299,
	467, 1299,
	468, 1299,
	469, 1299,
	470, 1299,
	471, 1299,
	472, 1299,
	473, 1299,
	475, 1299,
	477, 1299,
	478, 1299,
	479, 1299,
	480, 1299,
	481, 1299,
	482, 1299,
	483, 1299,
	484, 1299,
	485, 1299,
	486, 1299,
	487, 1299,
	488, 1299,
	489, 1299,
	490, 1299,
	491, 1299,
	492, 1299,
	494, 1299,
	495, 1299,
	497, 1299,
	498, 1299,
	500, 1299,
	501, 1299,
	502, 1299,
	503, 1299,
	504, 1299,
	505, 1299,
	506, 1299,
	507, 1299,
	508, 1299,
	510, 1299,
	511, 1299,
	512, 1299,
	513, 1299,
	514, 1299,
	516, 1299,
	518, 1299,
	519, 1299,
	520, 1299,
	521, 1299,
	522, 1299,
	523, 1299,
	525, 1299,
	526, 1299,
	527, 1299,
	528, 1299,
	530, 1299,
	531, 1299,
	534, 1299,
	535, 1299,
	536, 1299,
	537, 1299,
	538, 1299,
	539, 1299,
	540, 1299,
	542, 1299,
	545, 1299,
	546, 1299,
	547, 1299,
	548, 1299,
	549, 1299,
	550, 1299,
	552, 1299,
	553, 1299,
	554, 1299,
	555, 1299,
	557, 1299,
	562, 1299,
	563, 1299,
	564, 1299,
	565, 1299,
	566, 1299,
	567, 1299,
	-2, 0,
	-1, 1605,
	1, 544,
	596, 544,
	598, 544,
	600, 544,
	-2, 1534,
	-1, 1608,
	4, 2724,
	11, 2724,
	12, 2724,
	14, 2724,
	15, 2724,
	16, 2724,
	17, 2724,
	18, 2724,
	19, 2724,
	21, 2724,
	22, 2724,
	23, 2724,
	24, 2724,
	25, 2724,
	26, 2724,
	27, 2724,
	29, 2724,
	30, 2724,
	33, 2724,
	34, 2724,
	36, 2724,
	38, 2724,
	41, 2724,
	42, 2724,
	44, 2724,
	45, 2724,
	46, 2724,
	47, 2724,
	48, 2724,
	49, 2724,
	50, 2724,
	51, 2724,
	53, 2724,
	54, 2724,
	55, 2724,
	56, 2724,
	58, 2724,
	59, 2724,
	60, 2724,
	61, 2724,
	62, 2724,
	63, 2724,
	64, 2724,
	67, 2724,
	68, 2724,
	69, 2724,
	70, 2724,
	71, 2724,
	73, 2724,
	74, 2724,
	75, 2724,
	76, 2724,
	79, 2724,
	80, 2724,
	81, 2724,
	82, 2724,
	83, 2724,
	84, 2724,
	85, 2724,
	86, 2724,
	88, 2724,
	89, 2724,
	90, 2724,
	91, 2724,
	92, 2724,
	94, 2724,
	95, 2724,
	96, 2724,
	97, 2724,
	98, 2724,
	99, 2724,
	100, 2724,
	101, 2724,
	103, 2724,
	104, 2724,
	105, 2724,
	106, 2724,
	107, 2724,
	108, 2724,
	109, 2724,
	117, 2724,
	118, 2724,
	119, 2724,
	120, 2724,
	121, 2724,
	123, 2724,
	124, 2724,
	125, 2724,
	127, 2724,
	128, 2724,
	129, 2724,
	131, 2724,
	132, 2724,
	133, 2724,
	135, 2724,
	136, 2724,
	137, 2724,
	140, 2724,
	141, 2724,
	142, 2724,
	144, 2724,
	145, 2724,
	147, 2724,
	148, 2724,
	149, 2724,
	151, 2724,
	152, 2724,
	153, 2724,
	154, 2724,
	155, 2724,
	156, 2724,
	157, 2724,
	158, 2724,
	159, 2724,
	160, 2724,
	161, 2724,
	162, 2724,
	163, 2724,
	164, 2724,
	165, 2724,
	166, 2724,
	170, 2724,
	171, 2724,
	172, 2724,
	173, 2724,
	174, 2724,
	175, 2724,
	176, 2724,
	177, 2724,
	180, 2724,
	181, 2724,
	183, 2724,
	184, 2724,
	187, 2724,
	188, 2724,
	189, 2724,
	190, 2724,
	191, 2724,
	192, 2724,
	193, 2724,
	194, 2724,
	195, 2724,
	196, 2724,
	197, 2724,
	198, 2724,
	199, 2724,
	200, 2724,
	201, 2724,
	203, 2724,
	204, 2724,
	206, 2724,
	207, 2724,
	209, 2724,
	210, 2724,
	211, 2724,
	212, 2724,
	213, 2724,
	214, 2724,
	215, 2724,
	216, 2724,
	217, 2724,
	218, 2724,
	219, 2724,
	220, 2724,
	221, 2724,
	222, 2724,
	223, 2724,
	224, 2724,
	225, 2724,
	226, 2724,
	228, 2724,
	229, 2724,
	231, 2724,
	232, 2724,
	233, 2724,
	234, 2724,
	236, 2724,
	237, 2724,
	238, 2724,
	239, 2724,
	241, 2724,
	243, 2724,
	244, 2724,
	245, 2724,
	246, 2724,
	247, 2724,
	248, 2724,
	249, 2724,
	250, 2724,
	251, 2724,
	252, 2724,
	254, 2724,
	255, 2724,
	256, 2724,
	257, 2724,
	258, 2724,
	259, 2724,
	260, 2724,
	261, 2724,
	263, 2724,
	264, 2724,
	265, 2724,
	267, 2724,
	268, 2724,
	269, 2724,
	270, 2724,
	271, 2724,
	272, 2724,
	274, 2724,
	278, 2724,
	279, 2724,
	280, 2724,
	283, 2724,
	284, 2724,
	285, 2724,
	286, 2724,
	287, 2724,
	288, 2724,
	289, 2724,
	290, 2724,
	291, 2724,
	292, 2724,
	293, 2724,
	294, 2724,
	295, 2724,
	296, 2724,
	297, 2724,
	298, 2724,
	299, 2724,
	300, 2724,
	301, 2724,
	302, 2724,
	303, 2724,
	304, 2724,
	305, 2724,
	306, 2724,
	307, 2724,
	308, 2724,
	309, 2724,
	311, 2724,
	312, 2724,
	313, 2724,
	314, 2724,
	315, 2724,
	316, 2724,
	317, 2724,
	318, 2724,
	319, 2724,
	320, 2724,
	321, 2724,
	322, 2724,
	323, 2724,
	324, 2724,
	325, 2724,
	327, 2724,
	328, 2724,
	331, 2724,
	332, 2724,
	333, 2724,
	335, 2724,
	336, 2724,
	337, 2724,
	338, 2724,
	339, 2724,
	342, 2724,
	346, 2724,
	347, 2724,
	348, 2724,
	349, 2724,
	351, 2724,
	352, 2724,
	353, 2724,
	355, 2724,
	357, 2724,
	358, 2724,
	359, 2724,
	360, 2724,
	361, 2724,
	362, 2724,
	363, 2724,
	364, 2724,
	365, 2724,
	366, 2724,
	367, 2724,
	368, 2724,
	369, 2724,
	371, 2724,
	372, 2724,
	373, 2724,
	374, 2724,
	375, 2724,
	376, 2724,
	377, 2724,
	378, 2724,
	379, 2724,
	380, 2724,
	381, 2724,
	382, 2724,
	383, 2724,
	384, 2724,
	385, 2724,
	387, 2724,
	388, 2724,
	390, 2724,
	391, 2724,
	392, 2724,
	393, 2724,
	394, 2724,
	395, 2724,
	396, 2724,
	397, 2724,
	398, 2724,
	399, 2724,
	400, 2724,
	401, 2724,
	402, 2724,
	404, 2724,
	406, 2724,
	407, 2724,
	408, 2724,
	414, 2724,
	415, 2724,
	416, 2724,
	417, 2724,
	418, 2724,
	419, 2724,
	420, 2724,
	421, 2724,
	422, 2724,
	423, 2724,
	424, 2724,
	425, 2724,
	427, 2724,
	428, 2724,
	429, 2724,
	430, 2724,
	431, 2724,
	432, 2724,
	433, 2724,
	434, 2724,
	435, 2724,
	436, 2724,
	437, 2724,
	438, 2724,
	439, 2724,
	440, 2724,
	441, 2724,
	442, 2724,
	443, 2724,
	444, 2724,
	445, 2724,
	446, 2724,
	447, 2724,
	448, 2724,
	449, 2724,
	450, 2724,
	452, 2724,
	453, 2724,
	454, 2724,
	455, 2724,
	456, 2724,
	457, 2724,
	459, 2724,
	460, 2724,
	461, 2724,
	462, 2724,
	463, 2724,
	464, 2724,
	465, 2724,
	466, 2724,
	467, 2724,
	468, 2724,
	469, 2724,
	470, 2724,
	471, 2724,
	472, 2724,
	473, 2724,
	475, 2724,
	477, 2724,
	478, 2724,
	479, 2724,
	480, 2724,
	481, 2724,
	482, 2724,
	483, 2724,
	484, 2724,
	485, 2724,
	486, 2724,
	487, 2724,
	488, 2724,
	489, 2724,
	490, 2724,
	491, 2724,
	492, 2724,
	494, 2724,
	495, 2724,
	496, 2724,
	497, 2724,
	498, 2724,
	500, 2724,
	501, 2724,
	502, 2724,
	503, 2724,
	504, 2724,
	505, 2724,
	506, 2724,
	507, 2724,
	508, 2724,
	510, 2724,
	511, 2724,
	512, 2724,
	513, 2724,
	514, 2724,
	516, 2724,
	518, 2724,
	519, 2724,
	520, 2724,
	521, 2724,
	522, 2724,
	523, 2724,
	525, 2724,
	526, 2724,
	527, 2724,
	528, 2724,
	530, 2724,
	531, 2724,
	534, 2724,
	535, 2724,
	536, 2724,
	537, 2724,
	538, 2724,
	539, 2724,
	540, 2724,
	542, 2724,
	545, 2724,
	546, 2724,
	547, 2724,
	548, 2724,
	549, 2724,
	550, 2724,
	552, 2724,
	553, 2724,
	554, 2724,
	555, 2724,
	557, 2724,
	562, 2724,
	563, 2724,
	564, 2724,
	565, 2724,
	566, 2724,
	567, 2724,
	568, 2724,
	570, 2724,
	578, 2724,
	579, 2724,
	580, 2724,
	581, 2724,
	582, 2724,
	583, 2724,
	585, 2724,
	586, 2724,
	587, 2724,
	588, 2724,
	589, 2724,
	590, 2724,
	591, 2724,
	592, 2724,
	593, 2724,
	595, 2724,
	598, 2724,
	599, 2724,
	601, 2724,
	602, 2724,
	-2, 0,
	-1, 1613,
	186, 2606,
	515, 2606,
	580, 2606,
	599, 2606,
	-2, 0,
	-1, 1662,
	392, 869,
	457, 869,
	498, 869,
	520, 869,
	-2, 0,
	-1, 1673,
	1, 1371,
	596, 1371,
	598, 1371,
	600, 1371,
	-2, 0,
	-1, 1690,
	1, 864,
	596, 864,
	598, 864,
	600, 864,
	-2, 0,
	-1, 1691,
	1, 907,
	596, 907,
	598, 907,
	600, 907,
	-2, 0,
	-1, 1692,
	1, 915,
	596, 915,
	598, 915,
	600, 915,
	-2, 0,
	-1, 1695,
	1, 873,
	596, 873,
	598, 873,
	600, 873,
	-2, 0,
	-1, 1697,
	1, 879,
	596, 879,
	598, 879,
	600, 879,
	-2, 0,
	-1, 1700,
	1, 875,
	596, 875,
	598, 875,
	600, 875,
	-2, 0,
	-1, 1705,
	1, 889,
	596, 889,
	598, 889,
	600, 889,
	-2, 0,
	-1, 1736,
	1, 2589,
	596, 2589,
	598, 2589,
	599, 2589,
	600, 2589,
	-2, 0,
	-1, 1740,
	1, 960,
	596, 960,
	598, 960,
	600, 960,
	-2, 0,
	-1, 1755,
	1, 1421,
	600, 1421,
	-2, 1426,
	-1, 1758,
	169, 1577,
	182, 1577,
	273, 1577,
	340, 1577,
	-2, 1515,
	-1, 1858,
	150, 1536,
	169, 1536,
	182, 1536,
	240, 1536,
	273, 1536,
	340, 1536,
	350, 1536,
	532, 1536,
	-2, 1983,
	-1, 1919,
	598, 2158,
	-2, 0,
	-1, 1954,
	150, 1536,
	169, 1536,
	182, 1536,
	240, 1536,
	273, 1536,
	340, 1536,
	350, 1536,
	532, 1536,
	-2, 1665,
	-1, 1991,
	515, 2603,
	599, 2603,
	602, 2603,
	-2, 0,
	-1, 2008,
	597, 1806,
	-2, 1794,
	-1, 2040,
	186, 2603,
	599, 2603,
	602, 2603,
	-2, 0,
	-1, 2082,
	1, 680,
	600, 680,
	-2, 1426,
	-1, 2217,
	221, 257,
	-2, 2306,
	-1, 2218,
	221, 258,
	-2, 306,
	-1, 2324,
	1, 866,
	596, 866,
	598, 866,
	600, 866,
	-2, 0,
	-1, 2325,
	1, 909,
	596, 909,
	598, 909,
	600, 909,
	-2, 0,
	-1, 2326,
	1, 917,
	596, 917,
	598, 917,
	600, 917,
	-2, 0,
	-1, 2327,
	1, 962,
	596, 962,
	598, 962,
	600, 962,
	-2, 0,
	-1, 2367,
	1, 891,
	596, 891,
	598, 891,
	600, 891,
	-2, 0,
	-1, 2385,
	1, 945,
	596, 945,
	598, 945,
	600, 945,
	-2, 0,
	-1, 2430,
	436, 1604,
	437, 1604,
	-2, 1839,
	-1, 2461,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1859,
	-1, 2462,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1860,
	-1, 2463,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1861,
	-1, 2464,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1862,
	-1, 2465,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1863,
	-1, 2466,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1864,
	-1, 2467,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1865,
	-1, 2468,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1866,
	-1, 2480,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1878,
	-1, 2481,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1879,
	-1, 2482,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1880,
	-1, 2486,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1887,
	-1, 2492,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1891,
	-1, 2494,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1899,
	-1, 2495,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1900,
	-1, 2496,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1901,
	-1, 2497,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1902,
	-1, 2671,
	5, 2310,
	186, 2169,
	597, 2307,
	-2, 2298,
	-1, 2672,
	186, 2170,
	-2, 2675,
	-1, 2673,
	186, 2171,
	-2, 2495,
	-1, 2674,
	186, 2172,
	-2, 2380,
	-1, 2675,
	186, 2173,
	-2, 2435,
	-1, 2676,
	186, 2174,
	-2, 2480,
	-1, 2677,
	186, 2175,
	-2, 2601,
	-1, 2678,
	186, 2176,
	-2, 1966,
	-1, 2749,
	1, 1666,
	2, 1666,
	106, 1666,
	150, 1666,
	169, 1666,
	182, 1666,
	187, 1666,
	205, 1666,
	208, 1666,
	236, 1666,
	240, 1666,
	251, 1666,
	269, 1666,
	273, 1666,
	312, 1666,
	340, 1666,
	344, 1666,
	350, 1666,
	426, 1666,
	430, 1666,
	532, 1666,
	543, 1666,
	559, 1666,
	560, 1666,
	561, 1666,
	571, 1666,
	596, 1666,
	598, 1666,
	600, 1666,
	602, 1666,
	-2, 1665,
	-1, 2762,
	597, 2279,
	-2, 2293,
	-1, 2764,
	1, 323,
	559, 323,
	-2, 1563,
	-1, 2793,
	597, 1805,
	-2, 1795,
	-1, 2977,
	1, 1274,
	421, 1238,
	459, 1238,
	574, 1238,
	596, 1274,
	598, 1274,
	600, 1274,
	-2, 1563,
	-1, 3161,
	345, 1607,
	-2, 2714,
	-1, 3162,
	345, 1608,
	-2, 2586,
	-1, 3166,
	436, 2235,
	437, 2235,
	-2, 1964,
	-1, 3167,
	436, 2239,
	437, 2239,
	-2, 1965,
	-1, 3168,
	436, 2236,
	437, 2236,
	-2, 1964,
	-1, 3169,
	436, 2240,
	437, 2240,
	-2, 1965,
	-1, 3182,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1889,
	-1, 3183,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1893,
	-1, 3189,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1895,
	-1, 3412,
	1, 677,
	596, 677,
	598, 677,
	600, 677,
	-2, 1426,
	-1, 3581,
	43, 2270,
	-2, 1024,
	-1, 3586,
	1, 1274,
	596, 1274,
	598, 1274,
	600, 1274,
	-2, 1563,
	-1, 3696,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1897,
	-1, 3703,
	245, 0,
	247, 0,
	331, 0,
	-2, 1916,
	-1, 3771,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1945,
	-1, 3772,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1946,
	-1, 3773,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1947,
	-1, 3777,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1951,
	-1, 3778,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1952,
	-1, 3779,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1953,
	-1, 3826,
	597, 2280,
	-2, 2294,
	-1, 4000,
	599, 2832,
	-2, 1489,
	-1, 4060,
	245, 0,
	247, 0,
	331, 0,
	-2, 1917,
	-1, 4063,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1920,
	-1, 4064,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1922,
	-1, 4162,
	599, 2295,
	-2, 1309,
	-1, 4315,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1921,
	-1, 4316,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1923,
	-1, 4327,
	245, 0,
	-2, 1956,
	-1, 4514,
	245, 0,
	-2, 1957,
	-1, 4710,
	50, 0,
	218, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 2678,
}

const sqlPrivate = 57344

const sqlLast = 131258

var sqlAct = [...]int{
	270, 4904, 4825, 4553, 3570, 4766, 4812, 3320, 4691, 4703,
	4702, 3064, 3051, 4581, 4376, 4709, 2855, 4720, 4841, 2132,
	4577, 4602, 3569, 4545, 4043, 4678, 2214, 1239, 4659, 4638,
	4656, 4721, 4158, 4467, 4722, 4779, 4436, 2899, 4358, 4443,
	4421, 1250, 2704, 3736, 4708, 4518, 4266, 3688, 2921, 4232,
	4271, 1320, 4381, 4336, 2440, 4304, 1116, 3433, 3603, 4207,
	4253, 3984, 3992, 4452, 4255, 1070, 3920, 1313, 1324, 4246,
	699, 1995, 3175, 2064, 4139, 810, 2300, 2509, 4159, 1767,
	4481, 4276, 3597, 3565, 1061, 3949, 3947, 3965, 2934, 3495,
	1385, 2448, 770, 3436, 2441, 3646, 1629, 3088, 3040, 4332,
	3644, 810, 3021, 3007, 1306, 2140, 3555, 3075, 3548, 1315,
	1960, 1978, 3073, 3364, 3547, 3829, 1477, 3343, 4099, 883,
	4, 3335, 3035, 887, 3326, 710, 4042, 3303, 3083, 3037,
	3072, 3324, 3066, 2262, 3052, 2203, 2298, 2201, 2151, 2948,
	1929, 3455, 4813, 2742, 3797, 2984, 2857, 2445, 3302, 1905,
	4519, 2589, 1866, 1836, 2522, 1318, 3159, 1069, 178, 3430,
	3082, 1484, 2741, 878, 2744, 805, 2587, 1569, 2202, 1230,
	951, 2953, 3011, 765, 2197, 2185, 1366, 1514, 2178, 1292,
	2120, 264, 3022, 2124, 2506, 2898, 1755, 2062, 1949, 2722,
	1120, 1125, 2578, 1670, 2701, 2110, 2429, 1930, 3371, 743,
	2412, 1627, 2410, 2776, 3567, 1606, 3045, 2249, 263, 1996,
	1572, 4603, 811, 812, 686, 2880, 4826, 3941, 708, 108,
	807, 1353, 1946, 2843, 2775, 2581, 1900, 3076, 2731, 1233,
	1212, 2633, 1939, 2712, 2559, 1850, 1768, 1247, 2667, 1769,
	751, 187, 2411, 2413, 1705, 1690, 188, 1604, 763, 2275,
	1229, 178, 2211, 2289, 1303, 1597, 816, 1509, 2248, 2139,
	2434, 4767, 1101, 703, 3018, 2051, 44, 43, 41, 32,
	700, 1774, 711, 800, 859, 30, 28, 1235, 1754, 726,
	1210, 3212, 816, 819, 1520, 972, 3811, 860, 3812, 4351,
	3206, 159, 2053, 1245, 1513, 3322, 4917, 4348, 4747, 73,
	2721, 46, 45, 4907, 3613, 2053, 4891, 3622, 2053, 819,
	2721, 4890, 1782, 1783, 2053, 2721, 74, 2053, 4880, 154,
	2053, 902, 2223, 4861, 4859, 4798, 4755, 4380, 4380, 2223,
	4756, 3397, 78, 4744, 1065, 1813, 4742, 2721, 3612, 2223,
	2721, 4739, 1785, 67, 4736, 4740, 3395, 4706, 4737, 4120,
	48, 2223, 156, 1696, 1636, 1065, 3380, 1055, 3622, 3273,
	3274, 1227, 3291, 3292, 3293, 4705, 2223, 4704, 1838, 2223,
	47, 2074, 87, 2714, 4699, 4698, 4689, 1784, 2074, 2074,
	4380, 4058, 4687, 1270, 2071, 4684, 4380, 3273, 3274, 4455,
	2223, 4654, 4627, 1213, 1213, 4380, 2784, 4620, 50, 68,
	4619, 2721, 3221, 3174, 2721, 3273, 3274, 51, 3222, 1066,
	4614, 4613, 57, 4607, 4380, 4380, 157, 2223, 2721, 1216,
	1046, 1217, 1782, 1783, 49, 1045, 107, 4628, 1826, 1827,
	1828, 93, 104, 4573, 3288, 2804, 4520, 4223, 4516, 3273,
	3274, 4511, 2784, 2071, 4498, 1813, 4495, 93, 4029, 4492,
	2223, 3017, 1785, 4380, 4445, 4399, 4398, 4499, 4446, 2223,
	2223, 1832, 4387, 4386, 4379, 4343, 2223, 4380, 4380, 2223,
	1060, 4317, 52, 4295, 1127, 2784, 4284, 2074, 1838, 4202,
	3622, 1790, 4185, 2721, 4062, 1362, 2721, 1784, 2784, 1362,
	94, 2535, 2536, 2537, 2554, 2555, 2556, 1804, 4008, 4002,
	3963, 3821, 3639, 3639, 3964, 3822, 1801, 4455, 3819, 3804,
	1214, 2557, 3820, 2721, 3720, 3716, 2299, 3638, 2223, 2721,
	3801, 3639, 2223, 3629, 2074, 1263, 1622, 3630, 3279, 1812,
	1814, 3319, 3314, 1522, 1522, 2721, 2721, 3313, 3264, 3262,
	3801, 2721, 3265, 3263, 1838, 3254, 3252, 3223, 3092, 3255,
	2721, 2721, 2074, 2780, 2713, 3062, 3279, 1782, 1783, 2285,
	3061, 2827, 2783, 2547, 2285, 2721, 2784, 2773, 4264, 2766,
	4223, 2721, 2543, 2223, 3279, 2720, 2284, 2071, 234, 2721,
	2285, 1807, 1808, 1809, 1810, 1264, 2721, 1785, 1805, 4186,
	4029, 1790, 3630, 3295, 2223, 2924, 2144, 2842, 2089, 1534,
	2052, 2068, 1521, 3013, 2222, 2944, 2840, 3211, 3279, 1925,
	3273, 3274, 1264, 3291, 3292, 3293, 1508, 3903, 3691, 3665,
	1947, 2190, 1784, 3614, 1672, 2758, 236, 2757, 2756, 1823,
	2755, 2754, 1833, 1218, 1215, 3289, 97, 1054, 1053, 1812,
	1814, 234, 3615, 4115, 2584, 1052, 1051, 2548, 2549, 2550,
	2551, 2054, 1050, 1049, 53, 1048, 1044, 2542, 1043, 3273,
	3274, 1835, 3133, 3289, 2054, 1799, 1800, 2054, 1042, 56,
	1041, 1040, 1039, 2054, 59, 235, 2054, 1038, 1037, 2054,
	1036, 3289, 1035, 1821, 69, 3288, 1034, 1033, 228, 236,
	58, 186, 100, 1032, 1031, 103, 1030, 229, 1805, 54,
	3273, 3274, 1029, 158, 1028, 2071, 1522, 1027, 1835, 1009,
	949, 55, 948, 947, 946, 3289, 945, 944, 1782, 1783,
	3612, 234, 943, 942, 189, 941, 1790, 1513, 940, 62,
	939, 2552, 2553, 2585, 149, 938, 1835, 234, 235, 1806,
	937, 936, 935, 934, 1329, 1125, 933, 1264, 1785, 155,
	149, 932, 931, 930, 1835, 929, 928, 927, 926, 925,
	2616, 924, 2071, 923, 2545, 922, 921, 920, 919, 236,
	918, 1835, 1125, 1125, 1125, 3288, 917, 916, 915, 3279,
	905, 3048, 1522, 1784, 904, 236, 3290, 189, 1835, 2713,
	1388, 900, 899, 1123, 1388, 153, 893, 1837, 892, 1264,
	877, 1329, 234, 234, 876, 833, 832, 831, 830, 822,
	190, 1533, 821, 820, 3290, 2586, 1122, 2583, 235, 786,
	3296, 777, 776, 775, 757, 1125, 1811, 1125, 3279, 1125,
	2223, 228, 3290, 258, 235, 1329, 257, 1370, 1371, 1372,
	229, 1357, 256, 2814, 3295, 255, 2052, 228, 254, 1806,
	236, 236, 2071, 4727, 253, 2068, 229, 252, 2405, 251,
	250, 1329, 249, 1492, 248, 1170, 3290, 189, 1487, 3279,
	3, 247, 246, 245, 1528, 244, 1824, 243, 242, 241,
	240, 1329, 239, 189, 2360, 238, 3289, 1790, 1329, 1786,
	1787, 1788, 1789, 1791, 1792, 237, 1125, 1482, 1125, 235,
	235, 4074, 1329, 3843, 3815, 3640, 1835, 1837, 1125, 1698,
	1125, 4278, 228, 228, 1640, 2546, 3367, 1297, 1300, 3234,
	3217, 229, 229, 3208, 3116, 1512, 3285, 3286, 3287, 3030,
	1578, 1581, 2994, 3284, 3282, 3283, 3275, 3276, 3277, 3278,
	3280, 3281, 2788, 2763, 1950, 1310, 2748, 2614, 189, 189,
	2292, 1351, 1626, 2118, 2600, 1497, 2598, 1329, 1381, 1835,
	1474, 1479, 3282, 3283, 3275, 3276, 3277, 3278, 3280, 3281,
	1584, 2588, 1781, 1837, 2073, 234, 3289, 1125, 1337, 1822,
	1125, 3283, 3275, 3276, 3277, 3278, 3280, 3281, 3273, 3274,
	1068, 1973, 1825, 1802, 1798, 816, 1795, 1793, 1794, 1786,
	1787, 1788, 1789, 1791, 1792, 1877, 1516, 3317, 1835, 1374,
	1868, 1346, 1249, 4707, 1567, 4686, 3275, 3276, 3277, 3278,
	3280, 3281, 819, 236, 1118, 4588, 1511, 1510, 4523, 4508,
	1242, 4502, 4500, 4331, 2291, 1641, 4285, 3290, 4371, 178,
	178, 4263, 4126, 4097, 4096, 1609, 1611, 3318, 234, 1835,
	4090, 234, 4089, 1241, 1908, 2532, 2533, 2534, 2558, 2544,
	2538, 1907, 2540, 2541, 2539, 2526, 2527, 2528, 2529, 2530,
	2531, 4088, 235, 4081, 4080, 1875, 1125, 1125, 1125, 1125,
	1125, 1125, 1125, 1125, 4078, 228, 1527, 2582, 1911, 3968,
	1357, 4073, 4070, 1357, 229, 4069, 236, 3962, 3847, 236,
	1066, 3846, 879, 3845, 1868, 3825, 234, 3901, 3792, 1125,
	1908, 3791, 3790, 3712, 3707, 1125, 4280, 1907, 2797, 1226,
	3362, 189, 2265, 1646, 3310, 1326, 1600, 3290, 3301, 73,
	1759, 882, 881, 3272, 1786, 1787, 1788, 1789, 1791, 1792,
	3269, 3268, 3266, 3261, 1906, 235, 74, 3260, 235, 3259,
	3273, 3274, 3256, 1099, 236, 3253, 3233, 3279, 228, 3216,
	3209, 228, 78, 3207, 3063, 1870, 2230, 229, 2749, 1869,
	229, 1867, 2228, 2571, 1781, 1714, 3032, 3285, 3286, 3287,
	1753, 1621, 1780, 4911, 3284, 3282, 3283, 3275, 3276, 3277,
	3278, 3280, 3281, 1635, 189, 4851, 2786, 189, 4850, 3969,
	4814, 4765, 87, 235, 4763, 1251, 3738, 4646, 4580, 4564,
	4561, 4560, 4559, 4538, 4522, 4521, 228, 1857, 4496, 4480,
	1125, 1125, 1125, 4479, 2512, 229, 1125, 1760, 4465, 4462,
	4461, 4456, 4395, 1247, 4366, 1247, 3275, 3276, 3277, 3278,
	3280, 3281, 885, 4329, 1663, 1603, 4312, 4311, 4292, 4291,
	1388, 4249, 3047, 4224, 49, 1927, 107, 4114, 4095, 1699,
	1125, 93, 104, 810, 4030, 2518, 4022, 4019, 1936, 2013,
	810, 3889, 3888, 3871, 3284, 3282, 3283, 3275, 3276, 3277,
	3278, 3280, 3281, 3870, 3868, 3807, 3387, 3795, 3702, 1245,
	1855, 1245, 3641, 3623, 3589, 1756, 3512, 1788, 1789, 1791,
	1792, 3468, 1986, 3435, 1764, 1763, 3389, 3238, 3237, 3232,
	3198, 1046, 1982, 3006, 1914, 3315, 1045, 3359, 1913, 3279,
	94, 1782, 1783, 234, 1910, 1912, 1909, 1758, 1066, 1901,
	1983, 1899, 2795, 234, 2794, 1777, 1778, 2760, 2753, 2719,
	2596, 1854, 1972, 1928, 3969, 1923, 1125, 1922, 1921, 1920,
	1329, 1785, 1919, 1918, 1917, 39, 2615, 1977, 1916, 1957,
	1915, 1933, 1934, 234, 1896, 1895, 1894, 1125, 1893, 4279,
	1892, 236, 1891, 1890, 1889, 1388, 1213, 1888, 1887, 3031,
	1886, 236, 1885, 1884, 1883, 1882, 1784, 1881, 2080, 1870,
	1243, 2134, 1902, 1903, 178, 1856, 1853, 1848, 1345, 1268,
	1259, 234, 1598, 2107, 4524, 4252, 4122, 4066, 3842, 3273,
	3274, 236, 3291, 3292, 3293, 3818, 3810, 3220, 2751, 4349,
	235, 4124, 3841, 1869, 1958, 1357, 3289, 234, 3385, 1976,
	235, 4057, 2116, 228, 1851, 4188, 2079, 3618, 4848, 234,
	1968, 1992, 229, 228, 816, 2293, 1981, 4840, 2041, 236,
	2043, 816, 229, 1948, 1066, 3273, 3274, 1367, 2101, 2100,
	235, 3471, 2109, 2111, 1955, 2109, 97, 2109, 1369, 189,
	2922, 819, 4562, 228, 2109, 236, 2056, 4457, 819, 189,
	4723, 4448, 229, 1987, 3288, 4447, 4283, 236, 4226, 4225,
	2036, 4187, 1926, 4117, 4033, 1602, 4032, 2187, 235, 1835,
	4031, 3813, 3643, 1967, 1966, 1965, 1963, 1329, 1329, 189,
	1952, 228, 1962, 1961, 3642, 3625, 2076, 1388, 3624, 2903,
	229, 186, 100, 4794, 235, 103, 4792, 4453, 1993, 3972,
	1362, 1950, 2584, 1368, 1908, 2082, 235, 228, 3689, 1362,
	1751, 1907, 3915, 2613, 3504, 2951, 229, 189, 1662, 228,
	2599, 234, 2597, 3258, 3257, 2095, 3180, 2885, 229, 886,
	1365, 3886, 1025, 2058, 149, 3437, 2060, 3277, 3278, 3280,
	3281, 1715, 2065, 189, 3634, 2204, 2067, 3290, 3279, 1879,
	2104, 2070, 1362, 2949, 3572, 189, 3571, 2316, 2172, 4777,
	2177, 1671, 2290, 2182, 2144, 2078, 4444, 3322, 4751, 236,
	4503, 4501, 4732, 2215, 2220, 4719, 3556, 1026, 3089, 1672,
	1891, 1329, 2205, 1329, 2085, 1329, 1891, 3976, 3959, 3917,
	3912, 2585, 3894, 3662, 3410, 153, 2112, 2297, 2102, 4333,
	4173, 1329, 1329, 4370, 3740, 2579, 2793, 4170, 1924, 1904,
	190, 3226, 1329, 3295, 2930, 3563, 2882, 2259, 235, 4728,
	4390, 4362, 2941, 1577, 1329, 1504, 1329, 1329, 1329, 1340,
	2150, 228, 1296, 4741, 4738, 2938, 3608, 1876, 3863, 4554,
	229, 2207, 2208, 2936, 2209, 4267, 4653, 4534, 3440, 3881,
	810, 2266, 2302, 1650, 3070, 3289, 3044, 3539, 2255, 4795,
	816, 4393, 2152, 4796, 2171, 2106, 4417, 880, 2950, 4389,
	3115, 4368, 1125, 2586, 2929, 2583, 2881, 3683, 4175, 3930,
	3195, 3414, 2260, 1544, 1225, 2156, 4729, 819, 4830, 1023,
	2272, 1511, 1510, 1021, 3284, 3282, 3283, 3275, 3276, 3277,
	3278, 3280, 3281, 2105, 1019, 2828, 1506, 1125, 4906, 3193,
	1712, 2295, 1017, 2007, 2170, 1603, 4568, 2181, 1552, 2308,
	4410, 787, 2320, 1005, 2787, 1713, 2373, 4401, 1835, 2371,
	1014, 2986, 4216, 1064, 2280, 3041, 2221, 2846, 4215, 3928,
	3927, 1125, 2153, 1125, 3919, 2096, 798, 3929, 3909, 3908,
	1125, 3906, 2844, 2013, 2013, 1388, 1369, 1125, 1125, 1125,
	1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125,
	1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125,
	1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125,
	1125, 1125, 1125, 2282, 1125, 2240, 1125, 1125, 1125, 1125,
	1066, 2241, 1066, 2303, 2846, 1553, 3290, 2269, 872, 1369,
	4169, 1711, 1600, 3905, 2277, 2278, 2277, 2274, 2422, 2844,
	3893, 1368, 1125, 1063, 2409, 4171, 1125, 1125, 2286, 2588,
	2287, 816, 1346, 1648, 1125, 3858, 3857, 3470, 1125, 792,
	1125, 1125, 4391, 4363, 3386, 804, 3545, 749, 1388, 2157,
	3544, 3190, 3379, 3231, 1125, 1125, 1125, 1125, 819, 797,
	1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 2560, 2561,
	2345, 2307, 3230, 1792, 1368, 3502, 3191, 3437, 2315, 2324,
	3196, 2420, 2560, 2576, 3229, 2205, 1125, 1125, 1125, 1125,
	1125, 1125, 1125, 1125, 1125, 4831, 2335, 2290, 3228, 1125,
	3184, 2947, 1363, 2946, 2883, 2943, 2883, 796, 749, 2624,
	2420, 1247, 2083, 873, 2144, 2158, 2159, 2141, 1388, 2932,
	2920, 2919, 2367, 2913, 749, 2912, 4426, 1247, 2670, 2670,
	2684, 2911, 2560, 1065, 1352, 2705, 2707, 2890, 2433, 2154,
	2418, 2711, 3416, 1125, 1388, 2582, 3285, 3286, 3287, 794,
	2859, 2137, 2889, 3284, 3282, 3283, 3275, 3276, 3277, 3278,
	3280, 3281, 2446, 2447, 2850, 1602, 2774, 1245, 2406, 2418,
	2493, 1757, 2408, 2407, 2421, 2414, 1607, 2629, 2524, 1507,
	2142, 2143, 2155, 1245, 1694, 2761, 1046, 2628, 2404, 1046,
	1046, 2437, 2575, 4189, 2438, 2439, 1242, 2907, 1242, 2450,
	2801, 1590, 1694, 1589, 2397, 2778, 2736, 3281, 803, 4310,
	2138, 1664, 2113, 2114, 1643, 2900, 2901, 2900, 2901, 1241,
	1359, 1241, 2385, 2626, 2900, 2901, 2579, 2887, 2627, 3866,
	4132, 2630, 2239, 2631, 2632, 2728, 3503, 4172, 2835, 1588,
	1363, 1587, 2394, 1066, 3663, 1329, 1329, 1548, 2402, 2325,
	2416, 1957, 1282, 1066, 1011, 2520, 2332, 1066, 2175, 2312,
	1213, 1749, 1363, 2862, 1968, 1561, 3192, 1691, 4795, 2777,
	1710, 1336, 698, 748, 2573, 1750, 3194, 2384, 3095, 2508,
	2508, 2765, 789, 4547, 2781, 1566, 2873, 4167, 2419, 1388,
	1693, 2750, 1724, 4131, 1728, 2940, 2377, 2823, 693, 2727,
	1672, 1364, 3157, 2160, 2010, 2735, 2817, 2740, 1693, 4725,
	2746, 2747, 2326, 793, 2396, 1062, 2666, 2419, 2800, 4835,
	1672, 2789, 178, 2013, 2696, 2679, 2709, 2939, 1660, 3413,
	1692, 4863, 1644, 4844, 748, 1357, 2872, 2717, 2718, 999,
	2937, 2816, 2733, 2734, 2729, 2279, 1066, 1910, 2935, 3172,
	748, 1519, 2820, 1526, 2329, 1532, 1955, 3672, 1359, 1360,
	2323, 1388, 2417, 1059, 3878, 799, 2333, 3671, 1361, 1762,
	1344, 791, 4427, 2504, 3890, 4214, 3139, 1329, 2516, 2161,
	1359, 3130, 2825, 750, 4425, 2514, 1573, 2188, 2588, 2849,
	4423, 2417, 3907, 3938, 1649, 3904, 2831, 2819, 1125, 1125,
	906, 1125, 2502, 3850, 4549, 2808, 1015, 2796, 2851, 2811,
	1015, 2812, 3837, 875, 874, 4836, 3551, 2833, 788, 1902,
	1903, 1015, 1620, 810, 1625, 1329, 2826, 2007, 2007, 1016,
	2803, 913, 2799, 2933, 1634, 2848, 1639, 4422, 1571, 1364,
	2184, 2845, 2372, 2818, 750, 2370, 795, 1015, 3543, 2908,
	3939, 3487, 3729, 3479, 2834, 1000, 1329, 4154, 784, 2892,
	750, 1364, 1255, 2001, 2861, 4424, 3055, 2183, 3654, 4154,
	1329, 790, 1329, 2849, 3028, 2832, 2876, 3647, 4309, 3726,
	2829, 3084, 3876, 3171, 4726, 2490, 3142, 1329, 3500, 2891,
	4165, 4147, 2809, 3937, 801, 802, 2886, 1360, 2813, 2942,
	1697, 2179, 2909, 4147, 1252, 4168, 1361, 4140, 3488, 2910,
	3480, 2393, 2824, 2902, 2904, 2905, 2906, 2978, 2979, 1360,
	2864, 2867, 2989, 2854, 4138, 4838, 2888, 2991, 1361, 2981,
	2142, 2143, 2893, 4142, 2164, 1125, 2686, 2147, 1707, 1647,
	1725, 999, 4809, 1362, 2498, 4148, 870, 1257, 869, 2915,
	2403, 3486, 1938, 3478, 2914, 3891, 1243, 4148, 1243, 823,
	2180, 3727, 4817, 3024, 2499, 1059, 3090, 2928, 782, 2500,
	2227, 2226, 4816, 2505, 816, 3649, 2772, 3113, 3164, 3165,
	4866, 4784, 2987, 2395, 4842, 3069, 2982, 2125, 4724, 4048,
	3648, 2165, 2126, 894, 2148, 3010, 1125, 3666, 4047, 4141,
	3552, 819, 1125, 1125, 816, 1511, 2992, 3112, 2588, 3549,
	3093, 2860, 178, 3605, 1256, 3098, 3057, 3099, 3059, 3141,
	3606, 3004, 3122, 3119, 3124, 4624, 3126, 1547, 3014, 2980,
	3136, 819, 1281, 1942, 2163, 2331, 1550, 2146, 3144, 2847,
	3146, 2200, 694, 3015, 1942, 2086, 1001, 907, 908, 4166,
	3138, 4894, 4693, 2488, 4694, 3050, 2491, 1000, 1125, 1125,
	2188, 3060, 3494, 4634, 1125, 2191, 3424, 4354, 3071, 2053,
	2198, 4548, 3147, 3091, 2923, 3149, 3058, 1125, 1125, 1726,
	2125, 1362, 1945, 1125, 1125, 2126, 2918, 2917, 3117, 1125,
	3118, 4555, 4843, 1945, 3110, 4575, 3039, 1940, 2199, 1573,
	3087, 3086, 3605, 1362, 3415, 2127, 2987, 2487, 2730, 1722,
	3121, 1645, 3123, 3515, 3125, 1943, 3456, 2588, 3120, 3452,
	4837, 1673, 2131, 695, 4241, 747, 1943, 1505, 4845, 1266,
	3096, 3097, 3186, 2507, 1125, 1125, 1125, 2846, 3134, 3187,
	1125, 3103, 3104, 3105, 1897, 3152, 2176, 4783, 4143, 3383,
	1125, 1012, 2865, 4144, 4758, 3140, 3163, 4306, 1941, 2501,
	4143, 2764, 1964, 4149, 4759, 4144, 1002, 1125, 3458, 2503,
	2916, 1723, 696, 1727, 697, 4149, 3451, 3214, 3215, 3154,
	3153, 4806, 3218, 2192, 783, 3952, 3173, 1659, 1661, 2188,
	3337, 2433, 3158, 1003, 3950, 2128, 2133, 2007, 2127, 3877,
	3655, 3650, 3651, 3652, 3653, 4146, 824, 825, 2916, 4676,
	2135, 914, 4622, 4044, 2328, 2131, 3210, 4146, 2010, 2010,
	2322, 1057, 4150, 999, 4322, 2176, 2515, 716, 1761, 1343,
	1253, 1938, 3457, 785, 4150, 4664, 3550, 781, 4199, 2570,
	895, 896, 909, 910, 1847, 3185, 1004, 1059, 1001, 1083,
	3236, 2732, 4867, 2745, 1065, 4623, 4256, 3742, 4854, 1125,
	1125, 1125, 1125, 4251, 4038, 4852, 4219, 3838, 1271, 1125,
	1125, 1125, 3954, 3425, 1125, 4257, 1944, 4049, 2129, 3685,
	3155, 1678, 4582, 1254, 1125, 1247, 1388, 1944, 2128, 2133,
	1125, 4669, 1125, 1058, 4305, 3329, 3330, 4601, 4464, 4218,
	2489, 1247, 1066, 4217, 1242, 3990, 1607, 3953, 1607, 3593,
	3967, 2247, 1942, 1935, 1269, 1262, 3312, 685, 3219, 1388,
	1242, 3952, 1772, 1771, 4045, 4533, 2135, 1241, 2436, 2094,
	3950, 1247, 3331, 2145, 1388, 1771, 1766, 2097, 3372, 1000,
	3225, 1245, 4242, 1241, 3781, 4388, 4872, 4093, 4782, 827,
	826, 4473, 4145, 3991, 3923, 2013, 3352, 1245, 3365, 1388,
	3493, 1945, 3910, 3862, 4145, 3431, 3594, 3585, 1002, 3427,
	4583, 2129, 3029, 3023, 3008, 1329, 1940, 2001, 2001, 3419,
	2273, 2267, 2261, 2253, 2233, 3854, 3725, 1245, 2426, 3336,
	1541, 4155, 4156, 1273, 1943, 1003, 3796, 1125, 4639, 756,
	2195, 3686, 2849, 4155, 4156, 2092, 4604, 4757, 3954, 2378,
	4895, 1125, 2090, 828, 829, 3462, 3366, 3993, 3341, 2135,
	4272, 1329, 2134, 1771, 3005, 3339, 2013, 1770, 2054, 1284,
	3420, 3421, 4307, 4442, 3361, 897, 898, 1941, 2894, 1770,
	4440, 2313, 4365, 3953, 1125, 2866, 3443, 2093, 1004, 4050,
	3439, 3441, 3438, 3178, 3445, 3345, 2134, 2193, 3404, 3156,
	1329, 3809, 3411, 3307, 3308, 3309, 3358, 2723, 3340, 3334,
	3370, 1695, 3460, 3350, 3333, 1357, 3417, 3951, 3351, 3353,
	3354, 3323, 1329, 2771, 1329, 2219, 1596, 4254, 2770, 3338,
	1701, 1700, 2769, 3442, 1772, 3831, 3447, 2768, 2767, 3449,
	2194, 3958, 2726, 1388, 2187, 3012, 1772, 1063, 3356, 2130,
	3357, 4377, 4542, 2187, 1329, 3461, 3390, 3391, 1329, 3392,
	1594, 4490, 3378, 3518, 1982, 3520, 2427, 1770, 3524, 3423,
	1001, 3473, 3530, 3948, 4051, 3782, 3428, 3374, 3375, 3376,
	3377, 4437, 3505, 2725, 3783, 1329, 3393, 4094, 2724, 3832,
	3346, 912, 3869, 1582, 4871, 1944, 4233, 1847, 2870, 1329,
	3401, 1329, 3635, 2168, 3384, 1388, 4584, 1583, 2271, 3559,
	3475, 4803, 810, 3405, 4482, 3833, 4579, 3830, 3498, 4352,
	3654, 3855, 3859, 1329, 2985, 3412, 3396, 4483, 2010, 3647,
	4289, 3513, 3489, 3568, 3477, 3501, 3418, 3381, 1329, 3491,
	3344, 2125, 2130, 3094, 2990, 2988, 2126, 2301, 2204, 1653,
	4643, 2895, 2896, 3951, 4373, 1247, 4378, 4543, 3516, 4372,
	4484, 3601, 4360, 1679, 3525, 4100, 2361, 3459, 3531, 2144,
	4650, 4636, 3469, 3349, 3084, 3432, 3584, 3798, 2173, 2595,
	1329, 1329, 4807, 3084, 3400, 4671, 1745, 3402, 3403, 1747,
	1002, 3540, 3406, 4808, 3407, 3554, 3408, 3557, 3482, 3483,
	3599, 3485, 4288, 3484, 1243, 1329, 4805, 3373, 4361, 4743,
	3506, 1245, 3592, 4571, 4563, 1056, 4328, 1003, 4092, 3610,
	1243, 2169, 3514, 4486, 3957, 3541, 755, 3649, 3304, 3527,
	1744, 3701, 3535, 3533, 3536, 3660, 1742, 1719, 4644, 2389,
	3659, 3394, 3648, 3267, 2594, 4544, 4485, 1717, 4429, 1388,
	1689, 1687, 1388, 1685, 3197, 1683, 3542, 3600, 1681, 2127,
	3009, 2931, 1675, 3546, 4487, 1669, 1595, 2884, 2798, 2398,
	1004, 2892, 3595, 1667, 1592, 3553, 2131, 3561, 1975, 1971,
	3347, 3348, 3581, 3860, 1748, 1125, 3602, 2001, 1631, 2369,
	2337, 1125, 1125, 816, 3582, 1125, 1125, 1125, 3580, 1125,
	1593, 3657, 2213, 3305, 3681, 3680, 1766, 3132, 1125, 2013,
	3131, 3633, 3101, 2415, 1706, 2340, 3834, 1125, 3607, 2252,
	819, 3637, 1125, 2232, 3609, 2042, 3679, 3616, 1388, 178,
	178, 911, 3645, 1880, 1642, 3619, 3620, 1125, 3656, 1565,
	4718, 4200, 3678, 3914, 3913, 1388, 3631, 4635, 4201, 2128,
	2133, 4184, 4270, 1013, 3676, 2013, 2013, 1125, 1125, 4206,
	1125, 1125, 1125, 3682, 4197, 4136, 3398, 3517, 3989, 2007,
	3980, 3926, 3911, 1746, 3884, 3577, 3882, 1066, 1125, 3687,
	3704, 4771, 1125, 3861, 2013, 2013, 1125, 1125, 1125, 1125,
	1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125, 1125,
	1125, 1125, 1125, 1125, 1125, 1125, 3658, 1125, 3714, 3715,
	3675, 3754, 3426, 3755, 1743, 1125, 1125, 2013, 3588, 2391,
	1741, 1718, 1125, 2390, 3674, 3684, 3668, 3621, 3669, 3583,
	3670, 1716, 2129, 1125, 1688, 1686, 3573, 1684, 2166, 1682,
	2007, 3722, 1680, 3042, 1247, 1247, 1674, 3034, 1125, 1668,
	3027, 3476, 3655, 3650, 3651, 3652, 3653, 1666, 1591, 3016,
	3002, 2983, 2815, 2810, 3793, 2176, 3664, 2231, 2229, 2368,
	2336, 3709, 3711, 3490, 2739, 3492, 2123, 2206, 1388, 2189,
	2135, 2162, 2212, 2149, 2136, 3721, 2075, 3827, 2072, 2069,
	2086, 2066, 2061, 2059, 3732, 2174, 2055, 3737, 2046, 4780,
	1245, 1245, 3744, 3814, 4265, 3526, 3728, 3730, 3731, 3532,
	1018, 1020, 1022, 4488, 3598, 1775, 3752, 3751, 1222, 4489,
	3753, 1607, 4256, 1985, 3176, 3528, 4796, 1125, 2098, 3757,
	2198, 3759, 4541, 2121, 3150, 1074, 2401, 3148, 2167, 2976,
	3785, 4257, 4681, 4294, 1223, 3794, 1125, 4287, 4286, 4213,
	4128, 3085, 2117, 1546, 4475, 2871, 4468, 2846, 2846, 4001,
	2144, 1133, 3786, 2327, 2446, 3745, 1739, 1740, 3805, 3806,
	2175, 3800, 2844, 2868, 2270, 1304, 2122, 1305, 2364, 1125,
	1125, 2359, 2399, 178, 3802, 3803, 4680, 2334, 4176, 4208,
	2874, 1665, 4510, 2446, 3760, 4375, 1782, 1783, 4101, 4079,
	3454, 1782, 1783, 2875, 2897, 1779, 1338, 266, 266, 266,
	3816, 688, 689, 1272, 704, 688, 704, 714, 1242, 3177,
	754, 3895, 2875, 1125, 774, 1776, 3789, 3922, 2400, 780,
	3817, 1785, 4799, 4790, 1242, 4752, 266, 259, 3001, 2366,
	3977, 1241, 2254, 3529, 2925, 1349, 2938, 2936, 2945, 3921,
	1329, 3844, 2877, 4642, 1224, 1329, 891, 1241, 2927, 1305,
	1305, 1784, 266, 2130, 1242, 3918, 1784, 3835, 3836, 4629,
	4595, 2926, 4589, 3899, 4540, 4459, 4435, 4353, 2879, 2013,
	3987, 3979, 3848, 3849, 682, 3851, 3966, 1241, 3900, 3902,
	3865, 2878, 2995, 3824, 3587, 2998, 3924, 3000, 3049, 2710,
	2081, 1994, 4839, 4673, 4374, 3916, 3887, 3534, 4674, 1503,
	1329, 1502, 3382, 4870, 3892, 1513, 1125, 3273, 3274, 1782,
	1783, 4673, 2838, 2839, 1247, 1125, 4674, 4591, 4811, 4003,
	3940, 3942, 2836, 2837, 2892, 1329, 1329, 1329, 4071, 3055,
	1652, 3046, 2590, 3840, 3046, 4010, 1651, 2838, 2836, 2625,
	3986, 4460, 1329, 1329, 1329, 1721, 4411, 3994, 1720, 4210,
	2010, 3973, 4205, 4204, 4067, 3934, 3084, 3839, 3733, 1323,
	1329, 3944, 3522, 3998, 3519, 3956, 1388, 3852, 3995, 1874,
	1245, 3853, 1873, 2007, 4856, 4818, 4633, 4632, 4631, 3936,
	688, 688, 3933, 4570, 4569, 4526, 3997, 3974, 266, 4438,
	4405, 3946, 1388, 4026, 3955, 1125, 1125, 3960, 3945, 4350,
	3978, 1125, 1125, 2013, 4347, 4345, 1125, 1125, 4244, 1125,
	4230, 3883, 4174, 3885, 1125, 3127, 1499, 4123, 4025, 2007,
	2007, 2010, 3983, 4007, 3981, 1125, 3961, 3880, 3872, 3591,
	3590, 3448, 3399, 3137, 3129, 3109, 3996, 3108, 3107, 3106,
	3033, 1125, 3003, 2869, 2806, 4005, 3999, 4004, 2007, 2007,
	1537, 4065, 4015, 4016, 4034, 4009, 4036, 4020, 2802, 2791,
	2790, 4017, 4023, 4052, 2779, 4021, 2519, 2392, 4024, 2365,
	2358, 2357, 2356, 2355, 4061, 2354, 1574, 2268, 3432, 2242,
	4053, 2007, 2238, 2237, 2236, 2235, 3925, 2234, 1860, 2049,
	2048, 2047, 1865, 2045, 1984, 4035, 1738, 1737, 1676, 1560,
	1559, 1558, 1247, 1615, 1557, 1556, 4046, 1555, 1554, 2001,
	1247, 1549, 1545, 1543, 1388, 1542, 1388, 1628, 1496, 1495,
	1494, 1379, 1378, 1247, 1377, 1376, 1375, 1342, 1341, 1291,
	1290, 1289, 1288, 1287, 1329, 1329, 1286, 1285, 1242, 1283,
	1278, 1277, 1276, 1275, 1388, 1274, 884, 8, 1205, 2088,
	3365, 1024, 1010, 4546, 4153, 4152, 4151, 2388, 1245, 92,
	1551, 1241, 846, 86, 2196, 3879, 1245, 4041, 1243, 1247,
	4746, 1247, 1654, 978, 4129, 4130, 4670, 1535, 4574, 1245,
	2001, 4014, 854, 4652, 1243, 4091, 3975, 3450, 2952, 2339,
	1677, 2341, 3360, 2752, 1329, 4621, 4160, 4075, 4160, 4177,
	3235, 4517, 4109, 4163, 1388, 4321, 1329, 2593, 1878, 1329,
	3316, 88, 1109, 1155, 1243, 4098, 4240, 4239, 4137, 3864,
	1388, 4103, 4104, 3074, 4237, 1245, 4102, 1245, 4105, 4108,
	2086, 4112, 4236, 1998, 4107, 2000, 4113, 1073, 1391, 4692,
	2099, 1115, 4178, 4209, 4116, 4211, 2115, 4121, 2108, 2792,
	4133, 2669, 1132, 178, 1129, 2002, 2004, 1131, 1329, 1329,
	4127, 1130, 2003, 1898, 1128, 1997, 3985, 3053, 3617, 1601,
	1599, 980, 2103, 2513, 4135, 2577, 2086, 3224, 1329, 1871,
	1089, 4234, 1111, 2574, 1267, 4106, 1100, 1088, 3342, 3321,
	1388, 3604, 3823, 2425, 864, 1329, 3935, 4212, 3270, 2580,
	1258, 4198, 4231, 4182, 2693, 2685, 2681, 3409, 4203, 4228,
	3043, 1752, 4335, 1849, 3054, 2086, 4191, 1373, 1093, 4194,
	1247, 2511, 1862, 3202, 2435, 4262, 4196, 3611, 3363, 2785,
	4677, 3741, 1329, 1329, 1329, 3135, 2246, 2086, 1221, 2086,
	4193, 1220, 4273, 2007, 1265, 1388, 1219, 4160, 4658, 4164,
	4655, 2186, 4290, 4222, 4221, 4229, 4018, 1125, 1125, 1125,
	4220, 3566, 4227, 4274, 2010, 2091, 4179, 4180, 2830, 2086,
	2523, 3574, 4235, 2086, 4250, 1388, 1245, 4277, 4268, 1105,
	1125, 4259, 1490, 1125, 1125, 2382, 3327, 3636, 4282, 1562,
	779, 4382, 1117, 1125, 1834, 4275, 2013, 2973, 2972, 4537,
	1358, 1125, 1125, 1356, 1355, 1354, 4827, 4893, 3875, 3874,
	2010, 2010, 3873, 233, 4261, 3170, 1388, 1773, 1329, 1765,
	230, 232, 231, 4245, 3828, 4296, 4313, 1242, 1242, 4299,
	3369, 4297, 4750, 4301, 3897, 4308, 3558, 23, 22, 2010,
	2010, 1388, 1260, 21, 112, 42, 20, 151, 129, 1125,
	1241, 1241, 148, 4318, 1386, 147, 121, 146, 1485, 145,
	144, 143, 1125, 150, 142, 141, 136, 4330, 140, 139,
	138, 1125, 2010, 4302, 4324, 1280, 2013, 2007, 137, 135,
	133, 134, 128, 132, 131, 1125, 130, 266, 1125, 266,
	266, 127, 1309, 266, 1319, 126, 4356, 125, 1243, 124,
	4293, 123, 1125, 4341, 4342, 1339, 122, 120, 152, 1388,
	119, 268, 118, 117, 774, 4385, 1329, 116, 115, 114,
	113, 4344, 766, 2001, 768, 61, 1329, 1329, 60, 111,
	110, 19, 4357, 3463, 3464, 40, 3465, 3466, 3467, 4364,
	266, 14, 266, 266, 1309, 65, 266, 266, 66, 4355,
	18, 1319, 13, 4404, 35, 91, 102, 101, 36, 4428,
	99, 98, 34, 17, 16, 266, 3568, 1515, 15, 2001,
	2001, 1388, 4416, 4450, 1329, 96, 95, 33, 31, 4402,
	4441, 3507, 3508, 262, 3509, 3510, 3511, 4407, 1539, 11,
	9, 37, 1247, 1247, 1959, 12, 4406, 5, 2001, 2001,
	4413, 183, 182, 4458, 4408, 185, 181, 1564, 184, 4430,
	1319, 4431, 1125, 1125, 266, 266, 90, 1309, 180, 4160,
	4160, 4469, 4439, 4433, 4493, 4494, 4418, 179, 4454, 1125,
	2013, 2001, 89, 4449, 29, 4472, 4434, 10, 774, 175,
	266, 266, 4470, 4451, 3971, 4183, 81, 177, 1245, 1245,
	4420, 176, 174, 173, 4506, 4507, 172, 4192, 4471, 4466,
	4195, 4477, 4277, 891, 4476, 82, 79, 1125, 171, 1125,
	4491, 1125, 85, 170, 80, 84, 83, 27, 6, 64,
	7, 1247, 4303, 3661, 4505, 4394, 105, 106, 38, 77,
	76, 75, 26, 63, 1125, 25, 1247, 169, 216, 4532,
	215, 4515, 1087, 214, 213, 212, 4509, 1242, 4160, 211,
	210, 209, 204, 203, 208, 206, 205, 207, 202, 225,
	219, 218, 224, 4160, 223, 222, 221, 220, 4558, 4258,
	1241, 4531, 217, 227, 2010, 201, 200, 1245, 199, 197,
	266, 193, 4528, 4396, 4397, 192, 2134, 196, 1125, 1125,
	198, 195, 1245, 194, 4557, 4551, 4578, 4474, 1125, 4550,
	191, 226, 266, 1247, 72, 167, 1247, 168, 71, 166,
	1329, 165, 164, 4412, 163, 4414, 162, 4415, 4565, 161,
	1329, 1329, 160, 70, 24, 4567, 2, 1243, 1243, 1,
	4160, 0, 0, 4160, 0, 4598, 4612, 1329, 4600, 0,
	4572, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1125, 1125, 4586, 4587, 4590, 4585, 4593, 0, 1245,
	4592, 1125, 1245, 4597, 0, 0, 4525, 2517, 4454, 4527,
	2288, 4610, 4611, 4608, 4606, 4609, 0, 0, 4605, 4478,
	0, 0, 0, 1860, 0, 0, 1323, 2304, 4615, 4497,
	0, 0, 0, 4625, 0, 4616, 0, 2306, 0, 0,
	0, 0, 1125, 1125, 0, 1125, 4626, 0, 2010, 2314,
	2007, 2317, 2318, 2319, 4630, 0, 0, 0, 0, 0,
	0, 0, 4645, 0, 4657, 4660, 0, 0, 0, 0,
	4649, 0, 0, 2001, 0, 1242, 0, 4679, 2692, 4647,
	4675, 0, 4672, 1242, 4661, 4648, 0, 4665, 0, 0,
	0, 0, 0, 0, 1974, 4697, 1242, 4701, 1241, 0,
	0, 0, 0, 1125, 1125, 1125, 1241, 4666, 4662, 0,
	0, 0, 0, 0, 0, 0, 4700, 0, 4682, 1241,
	0, 0, 0, 0, 0, 0, 4688, 0, 0, 0,
	2007, 0, 0, 4695, 1125, 0, 4730, 4696, 4735, 0,
	0, 0, 1242, 688, 1242, 0, 0, 4419, 4714, 4715,
	2086, 0, 0, 4717, 4716, 0, 0, 0, 0, 4617,
	0, 4618, 4566, 0, 266, 1241, 266, 1241, 0, 4753,
	266, 4762, 0, 4733, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 1309, 1979, 266, 4776, 266, 0,
	4749, 1125, 0, 4764, 266, 1515, 704, 0, 0, 4760,
	0, 266, 1515, 4761, 1515, 4775, 4781, 2001, 0, 0,
	4770, 0, 0, 4769, 0, 0, 2050, 4774, 0, 2119,
	0, 4768, 0, 0, 0, 4797, 4667, 0, 266, 4668,
	4787, 4788, 0, 0, 4793, 266, 4791, 4789, 0, 0,
	0, 0, 4657, 4800, 1247, 4660, 1247, 1243, 4802, 4804,
	2134, 0, 4801, 4679, 0, 4820, 0, 0, 0, 4810,
	4578, 4819, 4815, 0, 4834, 4832, 4821, 0, 0, 0,
	1515, 4160, 4829, 4160, 0, 774, 4822, 0, 4824, 0,
	0, 4823, 0, 0, 2007, 4847, 0, 0, 0, 0,
	0, 0, 4833, 1242, 0, 4846, 0, 0, 4849, 0,
	1245, 0, 1245, 0, 4731, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4860, 0, 1241, 4864, 4862, 0,
	1125, 1125, 4857, 0, 4865, 0, 0, 0, 0, 1125,
	0, 1125, 1125, 0, 0, 4868, 0, 0, 4858, 0,
	0, 0, 0, 4883, 4874, 4884, 4878, 0, 4886, 4882,
	4889, 4881, 4888, 3199, 3200, 0, 4887, 0, 0, 0,
	3055, 2224, 0, 0, 0, 4885, 0, 4897, 4896, 4901,
	0, 4892, 4899, 4875, 4876, 4902, 0, 4903, 0, 0,
	4905, 0, 0, 0, 0, 4908, 0, 4898, 0, 0,
	0, 4910, 1125, 0, 0, 4913, 0, 4915, 0, 4919,
	4912, 4916, 4900, 4918, 0, 0, 0, 4905, 0, 0,
	0, 0, 4745, 0, 4748, 4909, 0, 0, 0, 0,
	0, 0, 0, 3982, 0, 0, 4828, 0, 0, 0,
	0, 0, 4772, 4773, 4914, 1243, 266, 0, 4778, 0,
	266, 2010, 0, 1243, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1243, 0, 0, 0,
	0, 0, 0, 1087, 1087, 1087, 4853, 0, 0, 0,
	2822, 1323, 4855, 0, 0, 0, 0, 73, 0, 0,
	0, 1472, 0, 0, 0, 1472, 0, 0, 0, 0,
	0, 0, 0, 266, 74, 0, 4037, 266, 0, 2086,
	0, 0, 1243, 266, 1243, 1314, 0, 0, 0, 266,
	78, 2086, 0, 0, 2086, 0, 0, 0, 0, 0,
	0, 2010, 0, 0, 0, 266, 0, 266, 0, 0,
	0, 688, 0, 266, 0, 3297, 3298, 3299, 3300, 0,
	0, 0, 0, 0, 0, 774, 0, 0, 0, 891,
	87, 0, 0, 2968, 0, 1480, 0, 0, 1491, 1314,
	0, 0, 0, 0, 0, 1242, 1242, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 1309, 266, 0, 0,
	0, 0, 0, 2086, 0, 2692, 2960, 2958, 1241, 1241,
	885, 774, 0, 2962, 2964, 2954, 0, 0, 266, 4877,
	2001, 0, 2977, 0, 107, 0, 2338, 0, 0, 93,
	104, 266, 266, 0, 266, 0, 266, 0, 266, 0,
	266, 0, 0, 0, 0, 0, 1314, 1314, 0, 2449,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2374, 0, 0, 2375, 0,
	2376, 0, 0, 1243, 1242, 0, 0, 0, 0, 0,
	0, 0, 266, 266, 266, 266, 2692, 2692, 94, 1242,
	0, 0, 0, 0, 0, 2010, 0, 1241, 2430, 0,
	2001, 0, 0, 0, 0, 0, 0, 0, 0, 754,
	0, 0, 1241, 774, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2591, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1242, 0, 0, 1242,
	0, 3273, 3274, 0, 3291, 3292, 3293, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1241,
	0, 0, 1241, 3706, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2956, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2970, 2525, 0, 0, 0,
	0, 0, 0, 0, 2782, 0, 0, 0, 0, 0,
	0, 0, 4243, 0, 0, 0, 2969, 2961, 2959, 2963,
	2965, 2955, 2957, 2971, 97, 4260, 3288, 0, 2762, 0,
	0, 2086, 2967, 0, 2687, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2001, 0, 0, 0, 4281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2692, 2692,
	2692, 2692, 0, 0, 0, 2974, 0, 688, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 186,
	100, 0, 266, 103, 0, 0, 0, 0, 0, 0,
	0, 688, 0, 0, 0, 0, 0, 0, 266, 0,
	688, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 266, 0, 0, 0, 0, 886, 0, 0,
	3279, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	266, 1319, 0, 0, 0, 1243, 1243, 0, 0, 0,
	0, 3273, 3274, 0, 3291, 3292, 3293, 0, 0, 0,
	0, 1472, 0, 0, 0, 0, 0, 236, 0, 0,
	0, 0, 0, 3705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2841, 0, 0, 0, 0, 0, 266,
	1319, 0, 0, 153, 704, 3295, 0, 0, 2805, 0,
	0, 0, 0, 0, 266, 0, 0, 266, 190, 0,
	0, 266, 0, 266, 0, 0, 235, 0, 1309, 0,
	266, 266, 0, 1319, 1319, 2821, 3288, 0, 0, 228,
	266, 0, 0, 0, 1243, 0, 0, 3289, 229, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 0, 1243,
	0, 0, 3697, 3698, 0, 2975, 0, 1242, 0, 1242,
	0, 0, 0, 0, 2966, 189, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2858, 1087, 0,
	1241, 0, 1241, 0, 0, 0, 1472, 1491, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 0, 266, 0, 1243, 0, 0, 1243,
	3279, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 3761, 3762, 3763, 3764, 3765, 3766, 3767, 3768,
	3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 3778,
	3779, 3780, 0, 3784, 1782, 1783, 0, 1815, 1816, 1817,
	1826, 1827, 1828, 0, 266, 2993, 0, 0, 0, 0,
	0, 1080, 0, 0, 0, 3295, 1819, 1813, 3290, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 1515,
	0, 0, 266, 1832, 266, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 3038, 0, 0, 0, 0, 0, 3289, 1472, 1784,
	0, 2858, 0, 688, 0, 0, 0, 0, 0, 1804,
	0, 0, 3067, 891, 0, 2858, 2858, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 1309, 266, 0, 0, 0, 0,
	0, 4576, 1515, 0, 1515, 1319, 266, 0, 0, 1309,
	1835, 1309, 0, 1309, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4596, 0, 0, 0, 0,
	0, 0, 0, 1807, 1808, 1809, 1810, 0, 3285, 3286,
	3287, 0, 0, 1790, 0, 3284, 3282, 3283, 3275, 3276,
	3277, 3278, 3280, 3281, 0, 266, 266, 266, 266, 1309,
	0, 3160, 1309, 0, 266, 2258, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 2692, 2692, 0, 0, 0,
	0, 1823, 0, 0, 1833, 0, 0, 0, 3290, 0,
	0, 1812, 1814, 0, 0, 0, 0, 0, 266, 0,
	3537, 0, 0, 0, 0, 0, 266, 0, 1829, 0,
	1830, 0, 0, 0, 0, 0, 0, 1799, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 1243, 0, 1243,
	0, 0, 0, 0, 0, 1821, 0, 0, 3578, 0,
	0, 0, 2687, 2687, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 3586, 0, 4683, 0, 0, 0, 0,
	0, 4685, 0, 0, 0, 2692, 2692, 2692, 2692, 2692,
	2692, 2692, 2692, 2692, 2692, 2692, 2692, 2692, 2692, 2692,
	2692, 2692, 2692, 2692, 2692, 0, 2692, 0, 0, 0,
	0, 0, 0, 0, 1831, 3627, 3628, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1472, 0, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 2383, 3285, 3286,
	3287, 0, 1515, 0, 0, 3284, 3282, 3283, 3275, 3276,
	3277, 3278, 3280, 3281, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3328, 0, 0, 0, 0, 0, 0, 0, 0, 1472,
	0, 1806, 0, 0, 0, 3273, 3274, 0, 3291, 3292,
	3293, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3355, 2687, 2687, 2687, 2687, 1824, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3368, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 3388, 0, 0, 0, 0, 0, 1472,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	3288, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 1472, 0, 688, 0, 0,
	0, 0, 688, 0, 0, 688, 0, 0, 688, 688,
	0, 0, 0, 0, 688, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 1796, 1797, 1803, 1825, 1802, 1798, 0, 1795, 1793,
	1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 0,
	1515, 4084, 0, 0, 0, 4083, 0, 0, 0, 0,
	0, 0, 266, 0, 3279, 0, 266, 266, 0, 0,
	0, 0, 1314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2858, 2858, 266, 0, 1979,
	0, 0, 0, 0, 0, 2858, 0, 0, 3434, 0,
	0, 0, 0, 0, 0, 0, 2858, 3434, 0, 2858,
	3434, 1314, 0, 3434, 0, 0, 0, 0, 0, 3295,
	1472, 0, 0, 0, 0, 0, 0, 0, 266, 266,
	1979, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1314, 1314, 0, 0, 0, 0, 0, 3368,
	0, 0, 1979, 0, 266, 0, 0, 0, 0, 3497,
	3497, 3289, 1309, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2858, 0,
	2858, 0, 3523, 2858, 1979, 0, 0, 2858, 1979, 73,
	0, 774, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 74, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1309, 0,
	0, 0, 78, 0, 0, 266, 0, 0, 0, 1515,
	0, 0, 0, 0, 1835, 0, 1480, 0, 0, 0,
	0, 0, 0, 266, 3562, 3931, 0, 3564, 2858, 4327,
	0, 266, 0, 0, 0, 266, 0, 0, 1319, 0,
	0, 0, 87, 1491, 0, 0, 0, 0, 0, 0,
	0, 1782, 1783, 0, 0, 0, 266, 0, 0, 0,
	0, 3038, 0, 0, 1309, 0, 266, 0, 0, 2858,
	0, 688, 0, 1485, 1813, 0, 1386, 0, 2858, 0,
	0, 1785, 885, 0, 0, 4367, 0, 0, 0, 0,
	0, 0, 3290, 0, 49, 0, 107, 0, 0, 266,
	3038, 93, 104, 3038, 0, 0, 0, 1838, 0, 0,
	4011, 4012, 4013, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1323, 4027, 4028,
	0, 0, 0, 0, 0, 0, 0, 0, 3667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3718, 1782, 1783, 3673, 0, 0, 1515, 0,
	94, 1309, 266, 0, 266, 0, 0, 0, 0, 3734,
	1309, 0, 0, 0, 0, 0, 1813, 0, 0, 0,
	0, 2687, 2687, 1785, 0, 0, 0, 1491, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1314, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 0, 0, 1784, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	0, 0, 3285, 3286, 3287, 0, 0, 1801, 0, 3284,
	3282, 3283, 3275, 3276, 3277, 3278, 3280, 3281, 1491, 0,
	1491, 0, 0, 0, 0, 0, 0, 0, 3739, 0,
	0, 0, 0, 0, 0, 4514, 0, 0, 1812, 1814,
	0, 2687, 2687, 2687, 2687, 2687, 2687, 2687, 2687, 2687,
	2687, 2687, 2687, 2687, 2687, 2687, 2687, 2687, 2687, 2687,
	2687, 4056, 2687, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3826, 0, 0, 4536, 97, 0, 0, 0,
	0, 0, 1807, 1808, 1809, 1810, 0, 0, 0, 4118,
	4119, 0, 1790, 0, 1818, 0, 0, 1805, 0, 0,
	4556, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2692, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 266, 0, 0, 0,
	0, 186, 100, 0, 0, 103, 0, 0, 0, 0,
	1812, 1814, 0, 0, 0, 0, 0, 0, 688, 688,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 1799, 1800, 2692, 886,
	1835, 1515, 1515, 0, 149, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1515, 1515, 0, 1515,
	0, 73, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 74, 236,
	0, 0, 0, 1323, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 78, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	190, 0, 0, 0, 0, 0, 0, 0, 235, 0,
	0, 0, 774, 0, 87, 0, 0, 1472, 0, 0,
	0, 228, 1835, 1782, 1783, 0, 0, 0, 0, 0,
	229, 0, 0, 0, 0, 0, 0, 4298, 0, 4300,
	0, 0, 0, 0, 0, 0, 1813, 3497, 0, 0,
	1472, 0, 0, 1785, 885, 0, 1837, 189, 0, 0,
	266, 0, 0, 0, 0, 1472, 49, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 1811, 0, 1838,
	0, 0, 0, 0, 0, 1979, 0, 266, 1784, 0,
	1472, 704, 704, 1319, 0, 0, 0, 0, 2692, 0,
	1806, 0, 0, 0, 0, 266, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 0, 0, 4346, 0, 266, 0, 0, 1087, 0,
	266, 0, 94, 0, 0, 266, 0, 0, 2692, 0,
	0, 0, 1087, 0, 1782, 1783, 1793, 1794, 1786, 1787,
	1788, 1789, 1791, 1792, 2858, 266, 0, 0, 1837, 0,
	0, 0, 0, 2692, 3067, 3067, 0, 1813, 0, 0,
	891, 891, 2858, 0, 1785, 0, 3038, 3038, 0, 0,
	891, 2858, 0, 0, 0, 0, 0, 0, 1491, 1491,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 266, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 4432, 0, 0, 1472, 0, 0, 0, 0, 0,
	1812, 1814, 0, 0, 1802, 1798, 0, 1795, 1793, 1794,
	1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 0, 0,
	0, 1491, 0, 0, 0, 0, 0, 0, 0, 0,
	4111, 0, 0, 0, 0, 0, 0, 0, 97, 0,
	4076, 0, 3700, 0, 0, 0, 2258, 0, 0, 1818,
	0, 0, 0, 0, 0, 1818, 1472, 0, 4125, 1805,
	0, 1818, 0, 1807, 1808, 1809, 1810, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 186, 100, 0, 0, 103, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 1515,
	0, 266, 3273, 3274, 0, 3291, 3292, 3293, 0, 0,
	0, 1812, 1814, 234, 266, 0, 0, 0, 0, 0,
	0, 886, 1835, 0, 0, 0, 149, 0, 0, 1319,
	0, 0, 0, 0, 0, 0, 0, 1799, 1800, 0,
	1818, 0, 1319, 0, 0, 1818, 0, 0, 0, 2858,
	2858, 0, 3497, 2858, 1818, 0, 0, 0, 1314, 1818,
	4162, 236, 4162, 1515, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 0, 2858, 0, 3434, 3288, 0, 0,
	1515, 1515, 266, 1979, 0, 0, 0, 153, 0, 0,
	1472, 0, 0, 1472, 0, 0, 1979, 0, 266, 1979,
	1806, 266, 190, 3497, 0, 0, 0, 0, 0, 0,
	235, 0, 0, 0, 0, 0, 0, 0, 2858, 0,
	2858, 266, 0, 228, 1818, 0, 0, 1782, 1783, 0,
	1818, 0, 229, 0, 0, 1323, 1323, 0, 0, 0,
	1782, 1783, 0, 1835, 0, 0, 0, 0, 0, 1386,
	1813, 0, 1323, 0, 0, 0, 2858, 1785, 1837, 1612,
	0, 4247, 0, 1813, 1937, 0, 1491, 0, 0, 1472,
	1785, 3279, 266, 0, 0, 0, 0, 0, 0, 4319,
	0, 0, 266, 1838, 0, 0, 1472, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 1838, 0, 1811, 0,
	0, 0, 1804, 0, 0, 1784, 0, 0, 0, 0,
	0, 4162, 0, 0, 1515, 0, 0, 0, 0, 0,
	4319, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2449, 0, 1795, 1793, 1794,
	1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 2687, 0,
	0, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3289, 1837,
	0, 1818, 0, 0, 0, 0, 1807, 1808, 1809, 1810,
	0, 0, 0, 0, 1818, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 2449, 2687, 0, 0, 0, 0, 1472,
	0, 0, 0, 0, 0, 0, 0, 0, 2858, 0,
	3434, 0, 0, 4359, 0, 0, 0, 0, 0, 0,
	2691, 0, 266, 0, 1812, 1814, 0, 0, 0, 0,
	0, 1835, 4383, 1818, 4383, 1072, 0, 1812, 1814, 1818,
	0, 0, 0, 0, 0, 1802, 1798, 0, 1795, 1793,
	1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 774, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3497,
	0, 1309, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 0, 0, 1979, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3290,
	0, 0, 0, 4359, 0, 0, 0, 0, 0, 0,
	0, 2858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4463,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1515, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 0, 0, 4162, 4162, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 2687, 0, 0, 0, 0, 0,
	0, 266, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3739, 0, 0, 0, 0,
	0, 1811, 0, 0, 2687, 0, 0, 0, 0, 0,
	1515, 0, 1314, 1515, 3497, 4530, 0, 0, 0, 0,
	0, 0, 4359, 0, 1806, 0, 0, 0, 0, 2687,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 3285,
	3286, 3287, 4162, 0, 0, 0, 3284, 3282, 3283, 3275,
	3276, 3277, 3278, 3280, 3281, 0, 0, 4162, 0, 0,
	0, 0, 0, 1782, 1783, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2258, 0, 266,
	0, 0, 1837, 0, 0, 0, 1813, 1472, 0, 0,
	0, 704, 0, 1785, 0, 1837, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4247, 0,
	0, 0, 0, 1472, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 4162, 0, 266, 4162, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 3434, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1515, 0, 1515, 0, 0, 0, 0,
	0, 1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792,
	0, 0, 0, 0, 0, 0, 1794, 1786, 1787, 1788,
	1789, 1791, 1792, 0, 0, 0, 0, 0, 0, 0,
	4640, 3695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4383, 0, 0, 266, 0, 0,
	0, 0, 1807, 1808, 1809, 1810, 0, 0, 0, 0,
	1515, 0, 1790, 1515, 0, 1472, 0, 1472, 0, 0,
	0, 0, 2858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 1472, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	1812, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	3739, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 1800, 1515, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 0,
	1818, 0, 0, 0, 0, 1472, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 0, 0, 0, 266, 1805,
	0, 1472, 0, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1818, 1334,
	4359, 0, 0, 0, 1818, 0, 1818, 1818, 1818, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 2691, 2691,
	0, 0, 0, 2258, 0, 0, 1072, 1072, 1072, 0,
	0, 1472, 1835, 1818, 0, 0, 0, 0, 2858, 0,
	0, 0, 0, 1314, 0, 4162, 0, 4162, 0, 0,
	1515, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1517,
	0, 1523, 0, 1529, 1818, 0, 1472, 1811, 0, 0,
	1515, 0, 0, 0, 0, 0, 1515, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 1818, 0, 1472, 1818, 0, 0,
	1818, 0, 0, 1818, 0, 0, 0, 0, 0, 1818,
	1818, 1818, 1818, 1818, 1818, 1818, 3067, 0, 0, 0,
	0, 0, 0, 0, 0, 2858, 0, 0, 0, 0,
	1618, 0, 1623, 0, 0, 0, 0, 1472, 0, 0,
	0, 3067, 1632, 0, 1637, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1472, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 3294, 0,
	2691, 2691, 2691, 2691, 0, 0, 0, 1818, 0, 1818,
	0, 0, 0, 0, 1818, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1087,
	0, 1702, 0, 0, 1708, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1472, 0, 0, 0, 1802, 1798, 0, 1795, 1793, 1794,
	1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1782, 1783, 0, 1815,
	1816, 1817, 1826, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1813,
	0, 0, 1472, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 1782, 1783, 0, 1832, 0, 0, 0, 0,
	1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 0, 0,
	0, 0, 1838, 0, 0, 1813, 0, 0, 0, 0,
	0, 1784, 1785, 0, 0, 0, 1782, 1783, 0, 0,
	0, 1804, 0, 1859, 0, 0, 0, 0, 0, 1872,
	1801, 0, 0, 0, 0, 0, 0, 0, 1838, 1813,
	0, 0, 0, 0, 0, 0, 1785, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	0, 0, 0, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 1784, 0, 0, 1491, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 1807, 1808, 1809, 1810, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	3694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1931, 1931, 1931, 0, 0, 0,
	0, 1807, 1808, 1809, 1810, 0, 0, 0, 0, 1087,
	1087, 1790, 0, 1823, 3188, 0, 1833, 0, 0, 0,
	0, 0, 0, 1812, 1814, 0, 0, 0, 1818, 1818,
	0, 1818, 0, 0, 0, 1807, 1808, 1809, 1810, 0,
	1829, 0, 1830, 0, 0, 1790, 0, 0, 0, 1799,
	1800, 1314, 0, 0, 0, 0, 0, 0, 0, 1812,
	1814, 0, 0, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 1799, 1800, 0, 0, 0,
	0, 0, 0, 1812, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 1799,
	1800, 0, 0, 0, 1087, 0, 1831, 0, 1782, 1783,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1072, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 1813, 1805, 0, 0, 1835, 0, 0, 1785, 0,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 1835, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 0, 0,
	1811, 0, 1801, 0, 1818, 1818, 0, 2691, 2691, 0,
	0, 1818, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 3294, 3294, 1806, 0, 1818, 1818, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 1811, 0, 0, 0,
	0, 0, 0, 0, 1157, 0, 0, 0, 0, 1818,
	1824, 0, 0, 0, 0, 0, 3181, 0, 0, 1806,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 1807, 1808, 1809,
	1810, 1837, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 2691, 2691, 2691,
	2691, 2691, 2691, 2691, 2691, 2691, 2691, 2691, 2691, 2691,
	2691, 2691, 2691, 2691, 2691, 2691, 2691, 1837, 2691, 3294,
	3294, 3294, 3294, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1812, 1814, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 1822, 1818, 0, 0, 0, 0, 0,
	0, 1799, 1800, 1796, 1797, 1803, 1825, 1802, 1798, 0,
	1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792, 0,
	0, 0, 0, 3248, 0, 0, 0, 3249, 0, 0,
	0, 0, 0, 0, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 1798, 0, 1795, 1793, 1794, 1786,
	1787, 1788, 1789, 1791, 1792, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 1798, 0,
	1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2362, 1835, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 1248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2386, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2424, 0, 2428, 0, 0,
	0, 0, 0, 0, 2442, 1806, 0, 0, 0, 0,
	0, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459,
	2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469,
	2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479,
	2480, 2481, 2482, 2483, 2484, 2485, 2486, 0, 2492, 0,
	2494, 2495, 2496, 2497, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2521, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1859, 0,
	0, 0, 2572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2602, 2605,
	2608, 2611, 0, 0, 2617, 2618, 2619, 2620, 2621, 2622,
	2623, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2683, 0, 2695, 2697, 2702, 0, 0, 1802,
	1798, 0, 1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791,
	1792, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1818, 1818, 0, 0, 1818, 3294,
	3294, 1818, 0, 0, 0, 1818, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 2662,
	2663, 2664, 2665, 2658, 2659, 2660, 2661, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 1818,
	1818, 1818, 1818, 0, 0, 0, 0, 0, 1818, 0,
	1818, 0, 0, 3294, 3294, 3294, 3294, 3294, 3294, 3294,
	3294, 3294, 3294, 3294, 3294, 3294, 3294, 3294, 3294, 3294,
	3294, 3294, 3294, 0, 0, 0, 3294, 0, 0, 1818,
	1818, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 0, 0, 0, 0, 0, 0, 0, 0,
	1818, 2638, 2639, 2640, 2641, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2650, 2651, 2652, 2653, 2646, 2647,
	2648, 2649, 2654, 2655, 2656, 2657, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2634, 2635, 2636, 2637, 2642, 2643, 2644, 2645, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1782, 1783, 0,
	1815, 1816, 1817, 1826, 1827, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1819,
	1813, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 1248, 0,
	0, 0, 2996, 2997, 0, 2999, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 1784, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1804, 0, 0, 0, 0, 0, 1818, 0,
	0, 1801, 0, 0, 1248, 0, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 1818, 0, 1248,
	0, 1818, 1818, 0, 0, 1818, 1818, 0, 0, 0,
	1818, 0, 0, 0, 1818, 0, 0, 0, 0, 1818,
	0, 0, 0, 0, 0, 1248, 1807, 1808, 1809, 1810,
	0, 0, 0, 0, 2691, 0, 1790, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 3128,
	0, 0, 1248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 1812, 1814, 0, 0, 0, 0,
	2691, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1829, 0, 1830, 0, 0, 0, 0, 0, 0,
	1799, 1800, 0, 0, 0, 0, 1839, 1840, 0, 0,
	0, 1248, 0, 0, 0, 0, 0, 73, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 74, 0, 1782, 1783, 0, 1815,
	1816, 1817, 1826, 1827, 1828, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 0, 0, 0, 0, 1819, 1813,
	0, 0, 3182, 3183, 0, 0, 1785, 0, 3189, 0,
	0, 0, 0, 0, 0, 1832, 0, 1831, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3203, 3204, 0,
	87, 0, 1838, 2572, 0, 1820, 0, 0, 0, 0,
	0, 1784, 0, 0, 0, 0, 1835, 0, 0, 0,
	0, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	885, 0, 0, 0, 0, 0, 0, 0, 3213, 0,
	0, 0, 49, 0, 107, 0, 1818, 1818, 1818, 93,
	104, 0, 0, 0, 3227, 0, 0, 1818, 1818, 3294,
	2691, 1811, 0, 0, 0, 0, 1818, 0, 0, 1818,
	0, 3239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1808, 1809, 1810, 3294,
	2691, 0, 0, 0, 0, 1790, 0, 0, 94, 0,
	0, 1824, 0, 0, 0, 0, 1818, 0, 0, 0,
	0, 0, 0, 0, 1818, 2691, 0, 0, 0, 0,
	0, 0, 1818, 0, 0, 0, 0, 0, 0, 0,
	0, 1818, 1837, 1823, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 1812, 1814, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 1830, 2702, 2702, 2702, 0, 0, 0, 1799,
	1800, 0, 0, 0, 0, 0, 0, 1248, 1931, 1248,
	0, 0, 0, 0, 0, 0, 3332, 1821, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 1796, 1797, 1803, 1825, 1802, 1798,
	0, 1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792,
	0, 0, 0, 0, 2568, 0, 3294, 0, 2569, 0,
	0, 0, 0, 0, 97, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1818, 3294, 0,
	0, 1818, 0, 0, 1820, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 3294, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1072, 0, 0, 1248, 0, 0, 0, 0, 186,
	100, 0, 0, 103, 0, 1072, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1818, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	1811, 0, 0, 0, 0, 0, 0, 886, 3453, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 236, 0, 0,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 190, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	0, 0, 0, 0, 0, 1818, 0, 0, 0, 228,
	0, 0, 0, 0, 0, 0, 0, 0, 229, 0,
	0, 1248, 1248, 0, 0, 0, 1818, 0, 0, 0,
	0, 1248, 0, 0, 1121, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1610, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 1797, 1803, 1825, 1802, 1798, 0,
	1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792, 0,
	265, 265, 265, 0, 0, 0, 0, 4082, 0, 0,
	0, 0, 0, 0, 1782, 1783, 0, 1815, 1816, 1817,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 817,
	0, 0, 0, 0, 0, 0, 1819, 1813, 0, 0,
	0, 0, 0, 0, 1785, 1248, 0, 1248, 0, 1248,
	0, 0, 0, 1832, 0, 817, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 1248, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 1248, 0, 0, 1784,
	0, 1818, 0, 0, 0, 1818, 0, 0, 1248, 1804,
	1248, 1248, 1248, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2442,
	0, 0, 0, 0, 0, 3692, 3693, 0, 0, 3696,
	0, 0, 0, 3699, 0, 0, 0, 0, 0, 0,
	0, 0, 3703, 0, 0, 0, 0, 0, 0, 0,
	0, 3710, 0, 0, 0, 0, 3332, 0, 0, 0,
	0, 0, 0, 1807, 1808, 1809, 1810, 0, 0, 0,
	0, 3723, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3746, 3747, 0, 3748, 3749, 3750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2014, 2014, 1248,
	0, 1823, 3756, 0, 1833, 0, 3758, 0, 0, 0,
	0, 1812, 1814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	1830, 0, 0, 1782, 1783, 0, 0, 1799, 1800, 3787,
	3788, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 1813, 3799, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	1805, 0, 3808, 0, 1782, 1783, 0, 1815, 1816, 1817,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 1248, 0, 0, 0, 1819, 1813, 1784, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 1804, 0,
	0, 0, 0, 1832, 1831, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 1820, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 1804,
	0, 3856, 0, 0, 0, 1248, 0, 0, 1801, 0,
	0, 0, 1248, 0, 0, 0, 0, 0, 0, 0,
	3867, 1248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 1807, 1808, 1809, 1810, 0, 0, 1811, 0,
	0, 0, 1790, 0, 3896, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 1808, 1809, 1810, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 1824, 0,
	1812, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1799, 1800, 0, 1837,
	0, 1823, 0, 73, 1833, 0, 0, 0, 0, 1248,
	1248, 1812, 1814, 0, 0, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 0, 0, 0, 1829, 1805,
	1830, 0, 0, 0, 0, 0, 78, 1799, 1800, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1248, 0, 1821, 0, 0, 0, 0,
	1931, 0, 0, 0, 0, 0, 0, 0, 0, 4006,
	1805, 1822, 0, 0, 0, 0, 87, 0, 0, 0,
	0, 1796, 1797, 1803, 1825, 1802, 1798, 2014, 1795, 1793,
	1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 0,
	0, 0, 1835, 0, 0, 3708, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 885, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	107, 0, 1820, 0, 0, 93, 104, 0, 0, 0,
	0, 1248, 0, 1835, 0, 0, 0, 0, 0, 4054,
	4055, 0, 0, 0, 0, 4059, 4060, 1811, 0, 0,
	4063, 4064, 0, 0, 0, 0, 0, 0, 4068, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4072,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	265, 0, 265, 265, 94, 4077, 265, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1248, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 1248, 0, 1837, 0,
	0, 0, 0, 265, 0, 265, 265, 0, 1824, 265,
	265, 1248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 817, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 265, 0,
	0, 0, 0, 0, 1802, 1798, 0, 1795, 1793, 1794,
	1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 0, 0,
	97, 0, 0, 265, 265, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 1797, 1803, 1825, 1802, 1798, 734, 1795, 1793,
	1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 0,
	0, 0, 0, 0, 0, 3251, 0, 717, 0, 0,
	0, 0, 718, 0, 0, 186, 100, 0, 0, 103,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1783, 0, 1815, 1816, 1817,
	1826, 1827, 1828, 0, 0, 234, 0, 0, 0, 0,
	0, 719, 0, 886, 0, 0, 0, 1813, 149, 0,
	0, 0, 720, 265, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 721, 0, 265, 0, 0, 0, 0,
	1838, 0, 0, 236, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 740, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 153,
	0, 0, 0, 0, 0, 722, 0, 0, 0, 0,
	0, 4314, 4315, 4316, 190, 0, 0, 0, 0, 0,
	0, 0, 235, 0, 0, 0, 0, 0, 723, 0,
	0, 0, 0, 0, 2442, 228, 0, 4325, 4326, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	724, 0, 0, 725, 0, 4334, 4337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	749, 189, 0, 1807, 1808, 1809, 1810, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 739, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4384, 0, 0, 0,
	0, 1823, 0, 0, 1833, 4392, 0, 0, 0, 0,
	0, 1812, 1814, 0, 0, 0, 0, 0, 0, 4400,
	0, 0, 1072, 0, 0, 0, 0, 0, 0, 1248,
	1248, 0, 0, 0, 736, 0, 4409, 1799, 1800, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 0, 1248, 0, 0, 0, 1953, 0, 1244,
	1805, 0, 0, 265, 0, 1248, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	1953, 265, 0, 0, 0, 0, 0, 817, 0, 2014,
	0, 0, 0, 1248, 817, 727, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 747, 0, 728, 0, 265, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	2014, 0, 0, 0, 0, 0, 748, 0, 0, 0,
	0, 0, 0, 0, 729, 0, 0, 0, 0, 744,
	745, 742, 0, 0, 0, 0, 0, 737, 1811, 0,
	730, 4535, 0, 0, 1248, 4539, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 0, 0, 1248, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 731, 0, 738, 0, 0, 1248, 1824, 0,
	0, 0, 0, 732, 0, 0, 0, 0, 1248, 0,
	0, 0, 1248, 0, 0, 0, 0, 733, 0, 0,
	0, 0, 741, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 1072, 1072, 0, 0, 750, 0, 0, 1248,
	0, 0, 4594, 0, 0, 0, 0, 735, 0, 0,
	0, 0, 0, 1248, 0, 1248, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 1248, 817, 0, 0, 2442, 0, 0, 0,
	0, 1822, 0, 0, 0, 4337, 0, 0, 0, 1248,
	0, 1796, 1797, 1803, 1825, 1802, 1798, 0, 1795, 1793,
	1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 0,
	0, 0, 0, 0, 1248, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 1072, 0, 0,
	265, 0, 0, 0, 0, 0, 265, 0, 0, 1248,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	265, 0, 0, 0, 0, 0, 265, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1248, 0, 0, 1248, 4713, 4713, 4713,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 0, 0, 0, 265, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 4734, 0,
	0, 0, 0, 717, 0, 0, 0, 0, 718, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2014, 817, 265, 0, 265, 0, 265,
	0, 265, 0, 265, 0, 0, 0, 0, 1237, 0,
	0, 0, 1248, 835, 0, 0, 0, 719, 0, 0,
	0, 0, 0, 0, 0, 4713, 0, 0, 720, 1248,
	0, 0, 0, 837, 0, 0, 0, 0, 838, 2014,
	2014, 0, 0, 0, 0, 265, 265, 265, 265, 721,
	0, 0, 0, 0, 261, 261, 684, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2014, 2014,
	0, 740, 0, 0, 0, 0, 0, 839, 0, 856,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 722, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2014, 0, 0, 840, 0, 0, 0, 0, 841,
	0, 0, 1134, 0, 723, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 1248,
	0, 865, 0, 0, 0, 0, 724, 842, 0, 725,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 863, 0, 0, 4713, 4869, 749, 0, 267, 267,
	267, 0, 1248, 4873, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 836, 0, 0, 0, 0, 0,
	0, 739, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 843, 0, 0, 844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 867, 0, 267, 0, 0, 749, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	736, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1244, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	861, 0, 0, 265, 0, 0, 0, 0, 0, 746,
	0, 727, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 1248,
	747, 0, 728, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	845, 0, 0, 2014, 0, 0, 0, 265, 0, 0,
	265, 847, 0, 0, 265, 0, 265, 0, 0, 0,
	0, 0, 748, 265, 265, 0, 0, 0, 0, 0,
	729, 0, 0, 265, 1248, 744, 745, 742, 0, 0,
	0, 0, 848, 737, 0, 0, 730, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	1248, 1248, 0, 0, 0, 0, 0, 0, 0, 0,
	857, 0, 0, 0, 0, 0, 1248, 1248, 1248, 0,
	0, 0, 748, 0, 0, 0, 0, 0, 731, 0,
	738, 265, 0, 0, 1248, 834, 0, 858, 0, 732,
	1248, 0, 0, 0, 265, 0, 849, 0, 0, 0,
	0, 0, 0, 733, 0, 0, 0, 265, 741, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 0,
	0, 855, 750, 0, 0, 0, 0, 2014, 0, 0,
	0, 0, 0, 735, 265, 0, 0, 0, 850, 0,
	0, 0, 851, 870, 0, 869, 0, 0, 0, 852,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 853, 0, 0, 0, 817, 862, 0,
	0, 0, 0, 0, 871, 0, 868, 0, 0, 0,
	0, 0, 750, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 817, 0, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 1248, 0,
	1248, 0, 0, 0, 0, 0, 0, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 1248, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 265, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 1248, 0, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	1248, 0, 0, 1248, 0, 0, 0, 0, 265, 265,
	265, 265, 0, 0, 1248, 0, 0, 265, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1295, 0, 1295, 1295, 0, 0,
	0, 265, 1248, 1248, 0, 0, 0, 0, 0, 265,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1248, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 1383, 0, 0,
	0, 0, 0, 1489, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 1248, 1248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	267, 267, 0, 0, 267, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 0, 0, 0, 0, 0, 0, 1616, 1617, 0,
	0, 267, 1332, 267, 267, 0, 1332, 267, 267, 0,
	1248, 0, 1248, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2014, 0, 0, 1332, 0, 267, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 1729, 0, 0,
	1332, 267, 267, 1248, 0, 0, 0, 0, 0, 0,
	1248, 0, 0, 0, 1332, 0, 0, 0, 0, 0,
	1248, 1248, 0, 0, 0, 0, 0, 0, 0, 1244,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 1248, 1332,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1248, 1248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 2014, 265, 0, 0, 0, 265,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1110, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 265, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 1953, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 265, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 0, 0, 0, 0, 0, 1969, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1248, 0, 0,
	1248, 0, 0, 1980, 1248, 1489, 0, 0, 0, 0,
	0, 0, 0, 0, 1248, 1248, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1248, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 1295, 0, 0, 0, 0,
	0, 0, 1489, 0, 0, 0, 817, 0, 0, 0,
	0, 0, 0, 0, 265, 0, 1047, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 1067, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 265,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 1244,
	0, 0, 1332, 0, 0, 0, 0, 267, 267, 267,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 267, 0, 1231, 0, 0, 0, 0, 0,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 265, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1248, 0,
	1248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2244, 0, 0, 0, 2251, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2264, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2276, 0, 2276, 0, 0, 0, 0, 0,
	2283, 0, 0, 0, 0, 0, 0, 267, 0, 1332,
	1332, 267, 0, 0, 0, 0, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 1244,
	0, 2251, 0, 0, 2310, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 2330, 0, 0, 267, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 2346,
	267, 2348, 0, 2350, 0, 2352, 0, 2353, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 267, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 1332, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2379,
	2380, 2381, 0, 1332, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 267, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 1332, 1332,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 267, 0, 267, 0, 267, 0, 267,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 267, 267, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 109, 0, 0, 0, 1332, 265, 0,
	0, 0, 0, 265, 0, 0, 0, 0, 265, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 809, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 809,
	0, 0, 0, 109, 0, 109, 0, 109, 265, 2759,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1067, 109,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 109, 0,
	1332, 2807, 0, 0, 1295, 0, 0, 0, 1295, 0,
	1295, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 1332, 2264, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 0, 0, 0,
	0, 0, 109, 0, 1244, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1953, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 267, 0,
	0, 0, 267, 0, 267, 0, 0, 0, 0, 0,
	0, 267, 267, 1953, 0, 1953, 0, 1332, 1332, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 1489, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1047, 0, 0,
	0, 265, 0, 0, 265, 0, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 0, 0, 1852, 0,
	0, 0, 0, 0, 265, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 1858, 0, 0, 2251,
	1864, 0, 267, 0, 0, 0, 0, 0, 2264, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 267, 1332, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	0, 3100, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1953, 267, 0, 0, 0, 0,
	3111, 0, 3114, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 267, 0, 1332, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	1951, 0, 1954, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 0,
	0, 0, 3143, 1489, 3145, 1489, 0, 0, 0, 0,
	0, 3151, 1332, 0, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 1295, 267, 0, 0, 0,
	0, 0, 0, 3179, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 267, 267, 267,
	0, 0, 0, 0, 0, 267, 0, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1953, 1953, 0, 0,
	0, 0, 1330, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 265, 265, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1389, 0,
	0, 0, 1389, 0, 0, 0, 0, 0, 0, 1330,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1953, 0, 0, 0, 0,
	0, 0, 0, 1330, 0, 0, 0, 0, 0, 0,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 0, 265, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	0, 0, 0, 0, 0, 0, 1330, 0, 1067, 0,
	1067, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 0, 0, 0, 0, 0, 0, 1953, 0, 265,
	1953, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1295,
	0, 0, 0, 1489, 1489, 1330, 0, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1126, 0, 109, 0,
	0, 0, 0, 0, 3422, 0, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	265, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3472, 3474, 0, 0, 2264,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 265, 1332, 0, 0,
	0, 0, 1047, 267, 0, 1047, 1047, 267, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 265, 0, 0, 0, 0, 0, 0, 0, 267,
	267, 1067, 1332, 267, 0, 0, 0, 0, 0, 0,
	267, 1858, 0, 0, 0, 1858, 0, 0, 3575, 0,
	0, 0, 3579, 0, 1332, 267, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1953, 0,
	1953, 0, 0, 0, 0, 0, 3632, 1332, 1231, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 1332, 0, 1332, 1954, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 1389, 0,
	0, 0, 267, 0, 0, 1332, 267, 0, 0, 0,
	0, 809, 0, 0, 0, 0, 0, 0, 809, 0,
	1332, 0, 109, 0, 0, 0, 0, 267, 0, 3677,
	0, 1489, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 1332, 0, 0, 0, 3690, 0, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1389, 0, 0, 0, 0, 0, 0,
	0, 1332, 0, 267, 1332, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1783, 0, 1815, 1816, 1817, 1826,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 1819, 1813, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 1332, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 109, 1330, 1330, 109, 1784, 109,
	0, 0, 0, 0, 0, 1389, 0, 0, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 109, 0, 0, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 1808, 1809, 1810, 0, 0, 0, 1330,
	1332, 1330, 1790, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1330,
	1330, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 1330, 1833, 1330, 1330, 1330, 0, 0, 0,
	1812, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1829, 809, 1830,
	0, 0, 0, 0, 2264, 0, 1799, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2264, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 3970, 0, 0, 0, 0, 0, 0, 1805,
	1331, 0, 0, 0, 0, 0, 0, 2264, 0, 0,
	0, 0, 3988, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 1831, 0, 0, 1390, 0, 0, 2510,
	1390, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 1820, 1332, 1389, 0, 0, 0, 1332, 267, 0,
	1858, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4039, 0, 0, 0, 267, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 267, 0, 0, 0,
	0, 267, 0, 0, 0, 0, 267, 1331, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 1332, 1332, 1332,
	1806, 0, 0, 0, 0, 0, 1389, 0, 1331, 0,
	0, 0, 0, 0, 1332, 1332, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 1332, 0, 0, 0, 267, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 1331, 1332, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1231, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 1231, 0,
	1796, 1797, 1803, 1825, 1802, 1798, 0, 1795, 1793, 1794,
	1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 0, 4181,
	0, 0, 0, 0, 3250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2264, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 1330, 0, 1332, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1783, 0, 1815, 1816, 1817, 1826, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 1389, 0, 2264,
	0, 0, 0, 1819, 1813, 0, 0, 0, 0, 4269,
	0, 1785, 0, 267, 0, 0, 1332, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 1332, 0, 1332, 267,
	0, 1332, 267, 0, 0, 109, 109, 1838, 109, 109,
	109, 0, 1332, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 1804, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 1389,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 1332, 0, 109, 109, 1330, 109, 109, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 267, 0, 0, 1390, 0, 0, 0,
	0, 0, 1332, 267, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 809, 0, 1330, 0, 0, 0, 0, 0, 0,
	1807, 1808, 1809, 1810, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 1332, 1332, 1332, 0, 0, 0,
	0, 0, 0, 0, 1330, 0, 0, 1332, 0, 4369,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	1330, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 1833, 0, 0, 0, 1330, 0, 1332, 1812, 1814,
	0, 0, 1231, 0, 0, 1067, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 1830, 0, 109,
	109, 0, 0, 0, 1799, 1800, 0, 0, 0, 0,
	0, 1390, 0, 0, 0, 2264, 0, 0, 1332, 0,
	1332, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 4504, 1489,
	1835, 1332, 0, 0, 0, 0, 0, 0, 1332, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 1332,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 1390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 267, 0, 1824, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1331, 0, 1331,
	0, 1331, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4599, 0, 0, 0, 1331, 1331, 0,
	0, 1231, 1231, 0, 0, 0, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 1331, 1331, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	267, 0, 0, 0, 0, 0, 0, 0, 1796, 1797,
	1803, 1825, 1802, 1798, 0, 1795, 1793, 1794, 1786, 1787,
	1788, 1789, 1791, 1792, 0, 0, 0, 0, 0, 0,
	0, 0, 3247, 0, 4651, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 1332, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 1332, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1332,
	4690, 0, 0, 0, 0, 0, 0, 1389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 1389, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1389, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 267, 0,
	0, 0, 0, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4754, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 1330,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 109, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	0, 1231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 0, 1330, 0, 0, 0, 0, 0, 0, 267,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 1389, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 1330, 0, 0, 0, 1330, 0, 0, 0,
	1390, 0, 0, 1782, 1783, 0, 1815, 1816, 1817, 1826,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 0, 1819, 1813, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 1330, 0, 1330,
	0, 0, 1832, 1389, 0, 0, 0, 0, 0, 0,
	809, 0, 0, 0, 0, 0, 0, 0, 0, 1838,
	0, 1330, 0, 0, 0, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 1330, 0, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 1330,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 1231,
	0, 0, 0, 0, 0, 0, 0, 1231, 0, 0,
	0, 0, 0, 1330, 0, 1390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 1808, 1809, 1810, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1389, 0, 0,
	1389, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 1833, 0, 0, 0, 1390, 0, 0,
	1812, 1814, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 0, 0, 1829, 0, 1830,
	0, 0, 0, 0, 0, 0, 1799, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 1389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 1331, 0, 1389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 1331, 0, 1331, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 1389, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 1782, 1783, 0, 1815, 1816, 1817, 1826, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1813, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	1796, 1797, 1803, 1825, 1802, 1798, 1801, 1795, 1793, 1794,
	1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 1330, 0,
	0, 0, 0, 1330, 3246, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2510, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	0, 1807, 1808, 1809, 1810, 0, 0, 0, 0, 0,
	0, 1790, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1330, 1330, 1330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1330, 1330, 1330, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 1833, 0, 0, 0, 0, 0, 1330, 1812,
	1814, 0, 0, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 1830, 0,
	0, 0, 0, 0, 0, 1799, 1800, 0, 0, 0,
	1389, 0, 1390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 1390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 109, 0, 0,
	1390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 1390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1389, 0, 1389, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1331, 0, 0,
	0, 0, 1330, 1330, 0, 0, 0, 0, 0, 0,
	0, 0, 1389, 0, 0, 0, 1811, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 109, 0, 1806,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	1331, 0, 1330, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 1389, 0, 1330, 0, 0, 1330, 0, 1390,
	0, 0, 0, 0, 0, 0, 0, 0, 1389, 0,
	1331, 0, 0, 0, 1331, 0, 0, 1837, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 1330, 1330, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 1331, 0, 0,
	0, 1390, 0, 0, 0, 0, 1330, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1389, 1331,
	0, 0, 0, 1330, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 1796,
	1797, 1803, 1825, 1802, 1798, 0, 1795, 1793, 1794, 1786,
	1787, 1788, 1789, 1791, 1792, 0, 0, 0, 0, 0,
	1330, 1330, 1330, 3245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1389, 0, 0, 1331, 1331, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 1389, 0, 0, 0, 0, 1782, 1783,
	0, 1815, 1816, 1817, 1826, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1813, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 1389, 1390, 1330, 1832, 1390, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 1389,
	0, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 0, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1389, 0, 0,
	0, 1390, 0, 0, 1330, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1330, 1330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 1808, 1809,
	1810, 0, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1389,
	0, 0, 1330, 0, 0, 0, 1782, 1783, 0, 1815,
	1816, 1817, 1826, 1827, 1828, 1823, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 1812, 1814, 0, 1819, 1813,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 1829, 0, 1830, 1832, 0, 0, 0, 0,
	0, 1799, 1800, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 1821,
	0, 1784, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 1805, 0, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 1807, 1808, 1809, 1810, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1330, 1330,
	0, 0, 1811, 1823, 0, 0, 1833, 0, 0, 0,
	0, 0, 0, 1812, 1814, 1330, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	1829, 0, 1830, 0, 0, 0, 1331, 0, 0, 1799,
	1800, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 1331, 1331, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 0, 1331, 1331,
	1331, 0, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 1331, 0, 0, 0,
	0, 0, 1390, 0, 0, 1796, 1797, 1803, 1825, 1802,
	1798, 0, 1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791,
	1792, 0, 0, 0, 0, 0, 0, 0, 1390, 2569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 0, 1815, 1816, 1817, 1826, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 0, 1819, 1813, 0, 0, 0, 0,
	0, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	1390, 0, 1390, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 1331, 0, 0, 0, 0, 0, 0, 0, 0,
	1390, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 1797, 1803, 1825, 1802, 1798, 0,
	1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792, 0,
	0, 0, 0, 4641, 0, 0, 0, 950, 0, 999,
	1331, 1807, 1808, 1809, 1810, 0, 0, 0, 0, 0,
	1390, 1790, 1331, 0, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 958, 0, 0, 1390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 973,
	0, 956, 955, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 1812,
	1814, 0, 0, 975, 1331, 1331, 0, 0, 0, 957,
	0, 0, 0, 0, 960, 0, 1829, 0, 1830, 1008,
	0, 0, 0, 0, 1331, 1799, 1800, 0, 970, 971,
	0, 0, 0, 0, 0, 0, 1390, 988, 0, 0,
	0, 1331, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1000, 962, 0, 1805, 0,
	0, 963, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 1331,
	1331, 0, 0, 964, 0, 0, 0, 0, 0, 0,
	0, 1390, 997, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 1390, 998, 0, 0, 0, 0, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 0, 0, 966, 0,
	0, 0, 0, 0, 0, 0, 954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 0, 1331, 967, 968, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 976, 974, 1811, 1390, 0, 0,
	0, 0, 969, 0, 0, 0, 985, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 1005, 996, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1001, 0, 0, 0,
	0, 0, 0, 0, 0, 1390, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 1837, 0, 0,
	0, 0, 1331, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 961,
	0, 0, 1007, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1390, 0, 0,
	1331, 0, 0, 0, 0, 959, 0, 0, 0, 992,
	993, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 0, 0, 995, 0, 0, 0, 0, 0, 1796,
	1797, 1803, 1825, 1802, 1798, 0, 1795, 1793, 1794, 1786,
	1787, 1788, 1789, 1791, 1792, 0, 1002, 990, 0, 4637,
	0, 0, 0, 0, 0, 1006, 986, 0, 0, 979,
	977, 0, 982, 0, 0, 0, 0, 0, 983, 0,
	0, 952, 0, 1003, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 953, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 994, 0, 984,
	0, 0, 0, 0, 0, 981, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1004, 0, 0, 0,
	0, 0, 0, 0, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 965, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 989, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 991, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1387, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 1331, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 1392, 282, 283,
	1393, 1394, 1395, 1331, 1396, 630, 1397, 1398, 1399, 1400,
	284, 285, 1188, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 1401, 635, 294, 295,
	296, 297, 298, 299, 1402, 1403, 0, 300, 636, 637,
	638, 1404, 301, 302, 639, 1405, 1333, 1406, 303, 304,
	305, 306, 307, 308, 309, 0, 1407, 311, 312, 313,
	310, 314, 1408, 315, 0, 316, 317, 318, 319, 320,
	321, 1409, 322, 323, 324, 1189, 325, 326, 327, 1410,
	1411, 1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 1417, 337, 334, 335, 1418,
	338, 336, 339, 1419, 340, 341, 342, 1420, 1421, 343,
	344, 345, 1422, 346, 347, 1423, 348, 349, 350, 1424,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 1425, 272, 1426, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 1427, 369, 370, 1428, 1429, 1190, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 1430, 383, 648, 1431, 649, 384, 1432, 385, 386,
	387, 388, 389, 650, 651, 652, 469, 1192, 390, 391,
	1433, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 1434, 1191, 400, 653, 654, 1435,
	655, 1436, 402, 403, 1193, 656, 1194, 404, 405, 406,
	1195, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 1437, 414, 416, 415, 1438, 417, 657, 1196, 418,
	419, 1197, 1439, 420, 0, 0, 0, 421, 422, 425,
	1440, 1441, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1198, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1199, 465, 454, 1442, 274,
	1200, 466, 467, 1443, 658, 468, 659, 470, 471, 1444,
	0, 472, 0, 1445, 1446, 474, 475, 476, 1447, 1448,
	477, 478, 660, 1201, 479, 1202, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 1449,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 1450, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 1451, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 1452, 531, 532, 533, 1203,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	1453, 556, 557, 555, 558, 559, 560, 1454, 561, 562,
	544, 545, 563, 564, 1204, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 1455, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 1456, 588, 589, 0, 585, 576, 1457, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 1458, 598,
	671, 672, 673, 674, 1459, 607, 1460, 599, 600, 601,
	675, 602, 676, 1461, 603, 604, 605, 606, 0, 608,
	609, 1462, 1463, 610, 611, 612, 614, 615, 613, 616,
	1464, 617, 1465, 0, 618, 619, 620, 677, 678, 679,
	1466, 622, 621, 623, 680, 1467, 624, 1468, 1469, 1470,
	1471, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1387, 0, 0, 0,
	0, 0, 0, 0, 2737, 0, 0, 0, 0, 0,
	0, 0, 2738, 275, 277, 276, 278, 279, 280, 281,
	1392, 282, 283, 1393, 1394, 1395, 0, 1396, 630, 1397,
	1398, 1399, 1400, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 1401,
	635, 294, 295, 296, 297, 298, 299, 1402, 1403, 0,
	300, 636, 637, 638, 1404, 301, 302, 639, 1405, 1333,
	1406, 303, 304, 305, 306, 307, 308, 309, 0, 1407,
	311, 312, 313, 310, 314, 1408, 315, 0, 316, 317,
	318, 319, 320, 321, 1409, 322, 323, 324, 1189, 325,
	326, 327, 1410, 1411, 1413, 1412, 1414, 1415, 1416, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 1417, 337,
	334, 335, 1418, 338, 336, 339, 1419, 340, 341, 342,
	1420, 1421, 343, 344, 345, 1422, 346, 347, 1423, 348,
	349, 350, 1424, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 1425,
	272, 1426, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 1427, 369, 370, 1428, 1429, 1190,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 1430, 383, 648, 1431, 649, 384,
	1432, 385, 386, 387, 388, 389, 650, 651, 652, 469,
	1192, 390, 391, 1433, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 1434, 1191, 400,
	653, 654, 1435, 655, 1436, 402, 403, 1193, 656, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1437, 414, 416, 415, 1438, 417,
	657, 1196, 418, 419, 1197, 1439, 420, 0, 0, 0,
	421, 422, 425, 1440, 1441, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 1442, 274, 1200, 466, 467, 1443, 658, 468, 659,
	470, 471, 1444, 0, 472, 0, 1445, 1446, 474, 475,
	476, 1447, 1448, 477, 478, 660, 1201, 479, 1202, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 1449, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 1450, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 1451, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 1452, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 1453, 556, 557, 555, 558, 559, 560,
	1454, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 1455, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 1456, 588, 589, 0, 585,
	576, 1457, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 1458, 598, 671, 672, 673, 674, 1459, 607, 1460,
	599, 600, 601, 675, 602, 676, 1461, 603, 604, 605,
	606, 0, 608, 609, 1462, 1463, 610, 611, 612, 614,
	615, 613, 616, 1464, 617, 1465, 0, 618, 619, 620,
	677, 678, 679, 1466, 622, 621, 623, 680, 1467, 624,
	1468, 1469, 1470, 1471, 625, 626, 681, 627, 628, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1387, 0, 0,
	0, 0, 3717, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3719, 275, 277, 276, 278, 279, 280,
	281, 1392, 282, 283, 1393, 1394, 1395, 0, 1396, 630,
	1397, 1398, 1399, 1400, 284, 285, 1188, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	1401, 635, 294, 295, 296, 297, 298, 299, 1402, 1403,
	0, 300, 636, 637, 638, 1404, 301, 302, 639, 1405,
	1333, 1406, 303, 304, 305, 306, 307, 308, 309, 0,
	1407, 311, 312, 313, 310, 314, 1408, 315, 0, 316,
	317, 318, 319, 320, 321, 1409, 322, 323, 324, 1189,
	325, 326, 327, 1410, 1411, 1413, 1412, 1414, 1415, 1416,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 1417,
	337, 334, 335, 1418, 338, 336, 339, 1419, 340, 341,
	342, 1420, 1421, 343, 344, 345, 1422, 346, 347, 1423,
	348, 349, 350, 1424, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	1425, 272, 1426, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 1427, 369, 370, 1428, 1429,
	1190, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 1430, 383, 648, 1431, 649,
	384, 1432, 385, 386, 387, 388, 389, 650, 651, 652,
	469, 1192, 390, 391, 1433, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 1434, 1191,
	400, 653, 654, 1435, 655, 1436, 402, 403, 1193, 656,
	1194, 404, 405, 406, 1195, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 1437, 414, 416, 415, 1438,
	417, 657, 1196, 418, 419, 1197, 1439, 420, 0, 0,
	0, 421, 422, 425, 1440, 1441, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1198, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1199,
	465, 454, 1442, 274, 1200, 466, 467, 1443, 658, 468,
	659, 470, 471, 1444, 0, 472, 0, 1445, 1446, 474,
	475, 476, 1447, 1448, 477, 478, 660, 1201, 479, 1202,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 1449, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 1450,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 1451, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 1452,
	531, 532, 533, 1203, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 1453, 556, 557, 555, 558, 559,
	560, 1454, 561, 562, 544, 545, 563, 564, 1204, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 1455,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 1456, 588, 589, 0,
	585, 576, 1457, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 1458, 598, 671, 672, 673, 674, 1459, 607,
	1460, 599, 600, 601, 675, 602, 676, 1461, 603, 604,
	605, 606, 0, 608, 609, 1462, 1463, 610, 611, 612,
	614, 615, 613, 616, 1464, 617, 1465, 0, 618, 619,
	620, 677, 678, 679, 1466, 622, 621, 623, 680, 1467,
	624, 1468, 1469, 1470, 1471, 625, 626, 681, 627, 628,
	629, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4110, 275,
	277, 276, 278, 279, 280, 281, 1392, 282, 283, 1393,
	1394, 1395, 0, 1396, 630, 1397, 1398, 1399, 1400, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 1401, 635, 294, 295, 296,
	297, 298, 299, 1402, 1403, 0, 300, 636, 637, 638,
	1404, 301, 302, 639, 1405, 1333, 1406, 303, 304, 305,
	306, 307, 308, 309, 0, 1407, 311, 312, 313, 310,
	314, 1408, 315, 0, 316, 317, 318, 319, 320, 321,
	1409, 322, 323, 324, 1189, 325, 326, 327, 1410, 1411,
	1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 1417, 337, 334, 335, 1418, 338,
	336, 339, 1419, 340, 341, 342, 1420, 1421, 343, 344,
	345, 1422, 346, 347, 1423, 348, 349, 350, 1424, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 1425, 272, 1426, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	1427, 369, 370, 1428, 1429, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1430, 383, 648, 1431, 649, 384, 1432, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 1433,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1434, 1191, 400, 653, 654, 1435, 655,
	1436, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1437, 414, 416, 415, 1438, 417, 657, 1196, 418, 419,
	1197, 1439, 420, 0, 0, 0, 421, 422, 425, 1440,
	1441, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1442, 274, 1200,
	466, 467, 1443, 658, 468, 659, 470, 471, 1444, 0,
	472, 0, 1445, 1446, 474, 475, 476, 1447, 1448, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1449, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 1450, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 1451, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 1452, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 1453,
	556, 557, 555, 558, 559, 560, 1454, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 1455, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 1456, 588, 589, 0, 585, 576, 1457, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 1458, 598, 671,
	672, 673, 674, 1459, 607, 1460, 599, 600, 601, 675,
	602, 676, 1461, 603, 604, 605, 606, 0, 608, 609,
	1462, 1463, 610, 611, 612, 614, 615, 613, 616, 1464,
	617, 1465, 0, 618, 619, 620, 677, 678, 679, 1466,
	622, 621, 623, 680, 1467, 624, 1468, 1469, 1470, 1471,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4320, 275,
	277, 276, 278, 279, 280, 281, 1392, 282, 283, 1393,
	1394, 1395, 0, 1396, 630, 1397, 1398, 1399, 1400, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 1401, 635, 294, 295, 296,
	297, 298, 299, 1402, 1403, 0, 300, 636, 637, 638,
	1404, 301, 302, 639, 1405, 1333, 1406, 303, 304, 305,
	306, 307, 308, 309, 0, 1407, 311, 312, 313, 310,
	314, 1408, 315, 0, 316, 317, 318, 319, 320, 321,
	1409, 322, 323, 324, 1189, 325, 326, 327, 1410, 1411,
	1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 1417, 337, 334, 335, 1418, 338,
	336, 339, 1419, 340, 341, 342, 1420, 1421, 343, 344,
	345, 1422, 346, 347, 1423, 348, 349, 350, 1424, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 1425, 272, 1426, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	1427, 369, 370, 1428, 1429, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1430, 383, 648, 1431, 649, 384, 1432, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 1433,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1434, 1191, 400, 653, 654, 1435, 655,
	1436, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1437, 414, 416, 415, 1438, 417, 657, 1196, 418, 419,
	1197, 1439, 420, 0, 0, 0, 421, 422, 425, 1440,
	1441, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1442, 274, 1200,
	466, 467, 1443, 658, 468, 659, 470, 471, 1444, 0,
	472, 0, 1445, 1446, 474, 475, 476, 1447, 1448, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1449, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 1450, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 1451, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 1452, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 1453,
	556, 557, 555, 558, 559, 560, 1454, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 1455, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 1456, 588, 589, 0, 585, 576, 1457, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 1458, 598, 671,
	672, 673, 674, 1459, 607, 1460, 599, 600, 601, 675,
	602, 676, 1461, 603, 604, 605, 606, 0, 608, 609,
	1462, 1463, 610, 611, 612, 614, 615, 613, 616, 1464,
	617, 1465, 0, 618, 619, 620, 677, 678, 679, 1466,
	622, 621, 623, 680, 1467, 624, 1468, 1469, 1470, 1471,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4190, 275,
	277, 276, 278, 279, 280, 281, 1392, 282, 283, 1393,
	1394, 1395, 0, 1396, 630, 1397, 1398, 1399, 1400, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 1401, 635, 294, 295, 296,
	297, 298, 299, 1402, 1403, 0, 300, 636, 637, 638,
	1404, 301, 302, 639, 1405, 1333, 1406, 303, 304, 305,
	306, 307, 308, 309, 0, 1407, 311, 312, 313, 310,
	314, 1408, 315, 0, 316, 317, 318, 319, 320, 321,
	1409, 322, 323, 324, 1189, 325, 326, 327, 1410, 1411,
	1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 1417, 337, 334, 335, 1418, 338,
	336, 339, 1419, 340, 341, 342, 1420, 1421, 343, 344,
	345, 1422, 346, 347, 1423, 348, 349, 350, 1424, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 1425, 272, 1426, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	1427, 369, 370, 1428, 1429, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1430, 383, 648, 1431, 649, 384, 1432, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 1433,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1434, 1191, 400, 653, 654, 1435, 655,
	1436, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1437, 414, 416, 415, 1438, 417, 657, 1196, 418, 419,
	1197, 1439, 420, 0, 0, 0, 421, 422, 425, 1440,
	1441, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1442, 274, 1200,
	466, 467, 1443, 658, 468, 659, 470, 471, 1444, 0,
	472, 0, 1445, 1446, 474, 475, 476, 1447, 1448, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1449, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 1450, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 1451, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 1452, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 1453,
	556, 557, 555, 558, 559, 560, 1454, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 1455, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 1456, 588, 589, 0, 585, 576, 1457, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 1458, 598, 671,
	672, 673, 674, 1459, 607, 1460, 599, 600, 601, 675,
	602, 676, 1461, 603, 604, 605, 606, 0, 608, 609,
	1462, 1463, 610, 611, 612, 614, 615, 613, 616, 1464,
	617, 1465, 0, 618, 619, 620, 677, 678, 679, 1466,
	622, 621, 623, 680, 1467, 624, 1468, 1469, 1470, 1471,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4040, 275,
	277, 276, 278, 279, 280, 281, 1392, 282, 283, 1393,
	1394, 1395, 0, 1396, 630, 1397, 1398, 1399, 1400, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 1401, 635, 294, 295, 296,
	297, 298, 299, 1402, 1403, 0, 300, 636, 637, 638,
	1404, 301, 302, 639, 1405, 1333, 1406, 303, 304, 305,
	306, 307, 308, 309, 0, 1407, 311, 312, 313, 310,
	314, 1408, 315, 0, 316, 317, 318, 319, 320, 321,
	1409, 322, 323, 324, 1189, 325, 326, 327, 1410, 1411,
	1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 1417, 337, 334, 335, 1418, 338,
	336, 339, 1419, 340, 341, 342, 1420, 1421, 343, 344,
	345, 1422, 346, 347, 1423, 348, 349, 350, 1424, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 1425, 272, 1426, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	1427, 369, 370, 1428, 1429, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1430, 383, 648, 1431, 649, 384, 1432, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 1433,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1434, 1191, 400, 653, 654, 1435, 655,
	1436, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1437, 414, 416, 415, 1438, 417, 657, 1196, 418, 419,
	1197, 1439, 420, 0, 0, 0, 421, 422, 425, 1440,
	1441, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1442, 274, 1200,
	466, 467, 1443, 658, 468, 659, 470, 471, 1444, 0,
	472, 0, 1445, 1446, 474, 475, 476, 1447, 1448, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1449, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 1450, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 1451, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 1452, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 1453,
	556, 557, 555, 558, 559, 560, 1454, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 1455, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 1456, 588, 589, 0, 585, 576, 1457, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 1458, 598, 671,
	672, 673, 674, 1459, 607, 1460, 599, 600, 601, 675,
	602, 676, 1461, 603, 604, 605, 606, 0, 608, 609,
	1462, 1463, 610, 611, 612, 614, 615, 613, 616, 1464,
	617, 1465, 0, 618, 619, 620, 677, 678, 679, 1466,
	622, 621, 623, 680, 1467, 624, 1468, 1469, 1470, 1471,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3735, 275,
	277, 276, 278, 279, 280, 281, 1392, 282, 283, 1393,
	1394, 1395, 0, 1396, 630, 1397, 1398, 1399, 1400, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 1401, 635, 294, 295, 296,
	297, 298, 299, 1402, 1403, 0, 300, 636, 637, 638,
	1404, 301, 302, 639, 1405, 1333, 1406, 303, 304, 305,
	306, 307, 308, 309, 0, 1407, 311, 312, 313, 310,
	314, 1408, 315, 0, 316, 317, 318, 319, 320, 321,
	1409, 322, 323, 324, 1189, 325, 326, 327, 1410, 1411,
	1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 1417, 337, 334, 335, 1418, 338,
	336, 339, 1419, 340, 341, 342, 1420, 1421, 343, 344,
	345, 1422, 346, 347, 1423, 348, 349, 350, 1424, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 1425, 272, 1426, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	1427, 369, 370, 1428, 1429, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1430, 383, 648, 1431, 649, 384, 1432, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 1433,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1434, 1191, 400, 653, 654, 1435, 655,
	1436, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1437, 414, 416, 415, 1438, 417, 657, 1196, 418, 419,
	1197, 1439, 420, 0, 0, 0, 421, 422, 425, 1440,
	1441, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1442, 274, 1200,
	466, 467, 1443, 658, 468, 659, 470, 471, 1444, 0,
	472, 0, 1445, 1446, 474, 475, 476, 1447, 1448, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1449, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 1450, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 1451, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 1452, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 1453,
	556, 557, 555, 558, 559, 560, 1454, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 1455, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 1456, 588, 589, 0, 585, 576, 1457, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 1458, 598, 671,
	672, 673, 674, 1459, 607, 1460, 599, 600, 601, 675,
	602, 676, 1461, 603, 604, 605, 606, 0, 608, 609,
	1462, 1463, 610, 611, 612, 614, 615, 613, 616, 1464,
	617, 1465, 0, 618, 619, 620, 677, 678, 679, 1466,
	622, 621, 623, 680, 1467, 624, 1468, 1469, 1470, 1471,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3560, 275,
	277, 276, 278, 279, 280, 281, 1392, 282, 283, 1393,
	1394, 1395, 0, 1396, 630, 1397, 1398, 1399, 1400, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 1401, 635, 294, 295, 296,
	297, 298, 299, 1402, 1403, 0, 300, 636, 637, 638,
	1404, 301, 302, 639, 1405, 1333, 1406, 303, 304, 305,
	306, 307, 308, 309, 0, 1407, 311, 312, 313, 310,
	314, 1408, 315, 0, 316, 317, 318, 319, 320, 321,
	1409, 322, 323, 324, 1189, 325, 326, 327, 1410, 1411,
	1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 1417, 337, 334, 335, 1418, 338,
	336, 339, 1419, 340, 341, 342, 1420, 1421, 343, 344,
	345, 1422, 346, 347, 1423, 348, 349, 350, 1424, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 1425, 272, 1426, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	1427, 369, 370, 1428, 1429, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1430, 383, 648, 1431, 649, 384, 1432, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 1433,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1434, 1191, 400, 653, 654, 1435, 655,
	1436, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1437, 414, 416, 415, 1438, 417, 657, 1196, 418, 419,
	1197, 1439, 420, 0, 0, 0, 421, 422, 425, 1440,
	1441, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1442, 274, 1200,
	466, 467, 1443, 658, 468, 659, 470, 471, 1444, 0,
	472, 0, 1445, 1446, 474, 475, 476, 1447, 1448, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1449, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 1450, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 1451, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 1452, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 1453,
	556, 557, 555, 558, 559, 560, 1454, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 1455, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 1456, 588, 589, 0, 585, 576, 1457, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 1458, 598, 671,
	672, 673, 674, 1459, 607, 1460, 599, 600, 601, 675,
	602, 676, 1461, 603, 604, 605, 606, 0, 608, 609,
	1462, 1463, 610, 611, 612, 614, 615, 613, 616, 1464,
	617, 1465, 0, 618, 619, 620, 677, 678, 679, 1466,
	622, 621, 623, 680, 1467, 624, 1468, 1469, 1470, 1471,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2592, 275,
	277, 276, 278, 279, 280, 281, 1392, 282, 283, 1393,
	1394, 1395, 0, 1396, 630, 1397, 1398, 1399, 1400, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 1401, 635, 294, 295, 296,
	297, 298, 299, 1402, 1403, 0, 300, 636, 637, 638,
	1404, 301, 302, 639, 1405, 1333, 1406, 303, 304, 305,
	306, 307, 308, 309, 0, 1407, 311, 312, 313, 310,
	314, 1408, 315, 0, 316, 317, 318, 319, 320, 321,
	1409, 322, 323, 324, 1189, 325, 326, 327, 1410, 1411,
	1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 1417, 337, 334, 335, 1418, 338,
	336, 339, 1419, 340, 341, 342, 1420, 1421, 343, 344,
	345, 1422, 346, 347, 1423, 348, 349, 350, 1424, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 1425, 272, 1426, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	1427, 369, 370, 1428, 1429, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1430, 383, 648, 1431, 649, 384, 1432, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 1433,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1434, 1191, 400, 653, 654, 1435, 655,
	1436, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1437, 414, 416, 415, 1438, 417, 657, 1196, 418, 419,
	1197, 1439, 420, 0, 0, 0, 421, 422, 425, 1440,
	1441, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1442, 274, 1200,
	466, 467, 1443, 658, 468, 659, 470, 471, 1444, 0,
	472, 0, 1445, 1446, 474, 475, 476, 1447, 1448, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1449, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 1450, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 1451, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 1452, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 1453,
	556, 557, 555, 558, 559, 560, 1454, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 1455, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 1456, 588, 589, 0, 585, 576, 1457, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 1458, 598, 671,
	672, 673, 674, 1459, 607, 1460, 599, 600, 601, 675,
	602, 676, 1461, 603, 604, 605, 606, 0, 608, 609,
	1462, 1463, 610, 611, 612, 614, 615, 613, 616, 1464,
	617, 1465, 0, 618, 619, 620, 677, 678, 679, 1466,
	622, 621, 623, 680, 1467, 624, 1468, 1469, 1470, 1471,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	1483, 0, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2225, 275,
	277, 276, 278, 279, 280, 281, 1392, 282, 283, 1393,
	1394, 1395, 0, 1396, 630, 1397, 1398, 1399, 1400, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 1401, 635, 294, 295, 296,
	297, 298, 299, 1402, 1403, 0, 300, 636, 637, 638,
	1404, 301, 302, 639, 1405, 1333, 1406, 303, 304, 305,
	306, 307, 308, 309, 0, 1407, 311, 312, 313, 310,
	314, 1408, 315, 0, 316, 317, 318, 319, 320, 321,
	1409, 322, 323, 324, 1189, 325, 326, 327, 1410, 1411,
	1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 1417, 337, 334, 335, 1418, 338,
	336, 339, 1419, 340, 341, 342, 1420, 1421, 343, 344,
	345, 1422, 346, 347, 1423, 348, 349, 350, 1424, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 1425, 272, 1426, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	1427, 369, 370, 1428, 1429, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1430, 383, 648, 1431, 649, 384, 1432, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 1433,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1434, 1191, 400, 653, 654, 1435, 655,
	1436, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1437, 414, 416, 415, 1438, 417, 657, 1196, 418, 419,
	1197, 1439, 420, 0, 0, 0, 421, 422, 425, 1440,
	1441, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1442, 274, 1200,
	466, 467, 1443, 658, 468, 659, 470, 471, 1444, 0,
	472, 0, 1445, 1446, 474, 475, 476, 1447, 1448, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1449, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 1450, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 1451, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 1452, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 1453,
	556, 557, 555, 558, 559, 560, 1454, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 1455, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 1456, 588, 589, 0, 585, 576, 1457, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 1458, 598, 671,
	672, 673, 674, 1459, 607, 1460, 599, 600, 601, 675,
	602, 676, 1461, 603, 604, 605, 606, 0, 608, 609,
	1462, 1463, 610, 611, 612, 614, 615, 613, 616, 1464,
	617, 1465, 0, 618, 619, 620, 677, 678, 679, 1466,
	622, 621, 623, 680, 1467, 624, 1468, 1469, 1470, 1471,
	625, 626, 681, 627, 628, 629, 1384, 0, 1387, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 1392, 282, 283, 1393, 1394, 1395, 0, 1396,
	630, 1397, 1398, 1399, 1400, 284, 285, 1188, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 1401, 635, 294, 295, 296, 297, 298, 299, 1402,
	1403, 0, 300, 636, 637, 638, 1404, 301, 302, 639,
	1405, 1333, 1406, 303, 304, 305, 306, 307, 308, 309,
	0, 1407, 311, 312, 313, 310, 314, 1408, 315, 0,
	316, 317, 318, 319, 320, 321, 1409, 322, 323, 324,
	1189, 325, 326, 327, 1410, 1411, 1413, 1412, 1414, 1415,
	1416, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	1417, 337, 334, 335, 1418, 338, 336, 339, 1419, 340,
	341, 342, 1420, 1421, 343, 344, 345, 1422, 346, 347,
	1423, 348, 349, 350, 1424, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 1425, 272, 1426, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 1427, 369, 370, 1428,
	1429, 1190, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 1430, 383, 648, 1431,
	649, 384, 1432, 385, 386, 387, 388, 389, 650, 651,
	652, 469, 1192, 390, 391, 1433, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 1434,
	1191, 400, 653, 654, 1435, 655, 1436, 402, 403, 1193,
	656, 1194, 404, 405, 406, 1195, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 1437, 414, 416, 415,
	1438, 417, 657, 1196, 418, 419, 1197, 1439, 420, 0,
	0, 0, 421, 422, 425, 1440, 1441, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1198, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1199, 465, 454, 1442, 274, 1200, 466, 467, 1443, 658,
	468, 659, 470, 471, 1444, 0, 472, 0, 1445, 1446,
	474, 475, 476, 1447, 1448, 477, 478, 660, 1201, 479,
	1202, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 1449, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	1450, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 1451, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	1452, 531, 532, 533, 1203, 534, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 1453, 556, 557, 555, 558,
	559, 560, 1454, 561, 562, 544, 545, 563, 564, 1204,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	1455, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 1456, 588, 589,
	0, 585, 576, 1457, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 1458, 598, 671, 672, 673, 674, 1459,
	607, 1460, 599, 600, 601, 675, 602, 676, 1461, 603,
	604, 605, 606, 0, 608, 609, 1462, 1463, 610, 611,
	612, 614, 615, 613, 616, 1464, 617, 1465, 0, 618,
	619, 620, 677, 678, 679, 1466, 622, 621, 623, 680,
	1467, 624, 1468, 1469, 1470, 1471, 625, 626, 681, 627,
	628, 629, 1387, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 1392, 282, 283, 1393,
	1394, 1395, 0, 1396, 630, 1397, 1398, 1399, 1400, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 1401, 635, 294, 295, 296,
	297, 298, 299, 1402, 1403, 0, 300, 636, 637, 638,
	1404, 301, 302, 639, 1405, 1333, 1406, 303, 304, 305,
	306, 307, 308, 309, 0, 1407, 311, 312, 313, 310,
	314, 1408, 315, 0, 316, 317, 318, 319, 320, 321,
	1409, 322, 323, 324, 1189, 325, 326, 327, 1410, 1411,
	1413, 1412, 1414, 1415, 1416, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 1417, 337, 334, 335, 1418, 338,
	336, 339, 1419, 340, 341, 342, 1420, 1421, 343, 344,
	345, 1422, 346, 347, 1423, 348, 349, 350, 1424, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 1425, 272, 1426, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	1427, 369, 370, 1428, 1429, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	1430, 383, 648, 1431, 649, 384, 1432, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 1433,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 1434, 1191, 400, 653, 654, 1435, 655,
	1436, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1437, 414, 416, 415, 1438, 417, 657, 1196, 418, 419,
	1197, 1439, 420, 0, 0, 0, 421, 422, 425, 1440,
	1441, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1442, 274, 1200,
	466, 467, 1443, 658, 468, 659, 470, 471, 1444, 0,
	472, 0, 1445, 1446, 474, 475, 476, 1447, 1448, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 1449, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 1450, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 1451, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 1452, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 1453,
	556, 557, 555, 558, 559, 560, 1454, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 1455, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 1456, 588, 589, 0, 585, 576, 1457, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 1458, 598, 671,
	672, 673, 674, 1459, 607, 1460, 599, 600, 601, 675,
	602, 676, 1461, 603, 604, 605, 606, 0, 608, 609,
	1462, 1463, 610, 611, 612, 614, 615, 613, 616, 1464,
	617, 1465, 0, 618, 619, 620, 677, 678, 679, 1466,
	622, 621, 623, 680, 1467, 624, 1468, 1469, 1470, 1471,
	625, 626, 681, 627, 628, 629, 2567, 0, 1124, 1096,
	1097, 1098, 1094, 1095, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 2564, 282, 283, 0, 0, 0, 0, 0,
	1148, 1112, 0, 0, 0, 284, 285, 1188, 286, 287,
	288, 289, 290, 291, 631, 1161, 0, 292, 1168, 293,
	1167, 0, 1178, 294, 295, 296, 297, 298, 299, 1114,
	1147, 1079, 300, 1208, 1209, 638, 0, 301, 302, 1154,
	0, 1135, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1189, 325, 326, 327, 1138, 1136, 1137, 1144, 1140, 1139,
	1143, 328, 329, 330, 331, 332, 1171, 333, 1165, 1164,
	1084, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 2565, 0, 343, 1156, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1090, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1179, 1180,
	364, 1103, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1163, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1190, 371, 372, 373, 1176, 1177, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1186, 0,
	1113, 384, 0, 385, 386, 387, 388, 389, 1149, 1150,
	1153, 469, 1192, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1191, 400, 1158, 1159, 0, 1119, 0, 402, 403, 1193,
	1151, 1194, 404, 405, 406, 1195, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1187, 1196, 418, 419, 1197, 0, 420, 0,
	0, 0, 421, 422, 425, 1142, 1141, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1198, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1199, 465, 454, 1081, 274, 1200, 466, 467, 1104, 1152,
	468, 1166, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 1201, 479,
	1202, 1181, 480, 481, 1091, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 1182, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1162, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 1203, 534, 535, 536, 537, 538,
	1092, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 1145, 561, 562, 544, 545, 563, 564, 1204,
	565, 566, 567, 568, 569, 570, 571, 1160, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 1207,
	579, 580, 581, 582, 1183, 586, 587, 0, 588, 589,
	1078, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 1172, 1173, 1174, 1175, 0,
	607, 0, 599, 600, 601, 1184, 602, 1185, 1102, 603,
	604, 605, 606, 0, 608, 609, 0, 1085, 610, 611,
	612, 614, 615, 613, 616, 1146, 617, 0, 0, 618,
	619, 620, 677, 1169, 1206, 2563, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 1082, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1077, 0, 0, 0, 0,
	0, 0, 1075, 1076, 2566, 0, 0, 0, 0, 0,
	0, 1108, 2562, 0, 1068, 1106, 1124, 1096, 1097, 1098,
	1094, 1095, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1148, 1112,
	0, 0, 0, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 1161, 0, 292, 1168, 293, 1167, 0,
	1178, 294, 295, 296, 297, 298, 299, 1114, 1147, 1079,
	300, 1208, 1209, 638, 0, 301, 302, 1154, 0, 1135,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328,
	329, 330, 331, 332, 1171, 333, 1165, 1164, 1084, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1156, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1090, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1179, 1180, 364, 1103,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1163,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 1176, 1177, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1186, 0, 1113, 384,
	0, 385, 386, 387, 388, 389, 1149, 1150, 1153, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1191, 400,
	1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1187, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 1142, 1141, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 1081, 274, 1200, 466, 467, 1104, 1152, 468, 1166,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 1181,
	480, 481, 1091, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 1182, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1162,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 1092, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 234, 556, 557, 555, 558, 559, 560,
	1145, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 1160, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 1207, 579, 580,
	581, 582, 1183, 586, 587, 0, 588, 589, 1078, 585,
	576, 236, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 1172, 1173, 1174, 1175, 0, 607, 0,
	599, 600, 601, 1184, 602, 1185, 1102, 603, 604, 605,
	606, 0, 608, 609, 0, 1085, 610, 611, 612, 614,
	615, 613, 616, 1146, 617, 0, 0, 618, 619, 620,
	1608, 1169, 1206, 0, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 228, 625, 626, 681, 627, 628, 629,
	1082, 0, 229, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1077, 0, 0, 0, 0, 0, 0,
	1075, 1076, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 1863,
	1861, 0, 0, 1106, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 1148, 1112, 0, 0, 0, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 1161,
	0, 292, 1168, 293, 1167, 0, 1178, 294, 295, 296,
	297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638,
	0, 301, 302, 1154, 0, 1135, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1189, 325, 326, 327, 1138, 1136,
	1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331, 332,
	1171, 333, 1165, 1164, 1084, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1156,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1090, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1179, 1180, 364, 1103, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1163, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1190, 371, 372, 373, 1176,
	1177, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1186, 0, 1113, 384, 0, 385, 386, 387,
	388, 389, 1149, 1150, 1153, 469, 1192, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1191, 400, 1158, 1159, 0, 1119,
	0, 402, 403, 1193, 1151, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1187, 1196, 418, 419,
	1197, 0, 420, 0, 0, 0, 421, 422, 425, 1142,
	1141, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1081, 274, 1200,
	466, 467, 1104, 1152, 468, 1166, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 1201, 479, 1202, 1181, 480, 481, 1091, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 1182,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1162, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 1092, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 234,
	556, 557, 555, 558, 559, 560, 1145, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 1160, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 1207, 579, 580, 581, 582, 1183, 586,
	587, 0, 588, 589, 1078, 585, 576, 236, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 1172,
	1173, 1174, 1175, 0, 607, 0, 599, 600, 601, 1184,
	602, 1185, 1102, 603, 604, 605, 606, 0, 608, 609,
	0, 1085, 610, 611, 612, 614, 615, 613, 616, 1146,
	617, 0, 0, 618, 619, 620, 1608, 1169, 1206, 0,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 228,
	625, 626, 681, 627, 628, 629, 1082, 0, 229, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1077,
	0, 0, 0, 0, 0, 0, 1075, 1076, 1124, 1096,
	1097, 1098, 1094, 1095, 1107, 1863, 3201, 0, 0, 1106,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	1148, 1112, 0, 0, 0, 284, 285, 1188, 286, 287,
	288, 289, 290, 291, 631, 1161, 0, 292, 1168, 293,
	1167, 0, 1178, 294, 295, 296, 297, 298, 299, 1114,
	1147, 1079, 300, 1208, 1209, 638, 0, 301, 302, 1154,
	0, 1135, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1189, 325, 326, 327, 1138, 1136, 1137, 1144, 1140, 1139,
	1143, 328, 329, 330, 331, 332, 1171, 333, 1165, 1164,
	1084, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1156, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1090, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1179, 1180,
	364, 1103, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1163, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1190, 371, 372, 373, 1176, 1177, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1186, 0,
	1113, 384, 0, 385, 386, 387, 388, 389, 1149, 1150,
	1153, 469, 1192, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1191, 400, 1158, 1159, 0, 1119, 0, 402, 403, 1193,
	1151, 1194, 404, 405, 406, 1195, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1187, 1196, 418, 419, 1197, 0, 420, 0,
	0, 0, 421, 422, 425, 1142, 1141, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1198, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1199, 465, 454, 1081, 274, 1200, 466, 467, 1104, 1152,
	468, 1166, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 1201, 479,
	1202, 1181, 480, 481, 1091, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 1182, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1162, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 1203, 534, 535, 536, 537, 538,
	1092, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 234, 556, 557, 555, 558,
	559, 560, 1145, 561, 562, 544, 545, 563, 564, 1204,
	565, 566, 567, 568, 569, 570, 571, 1160, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 1207,
	579, 580, 581, 582, 1183, 586, 587, 0, 588, 589,
	1078, 585, 576, 236, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 1172, 1173, 1174, 1175, 0,
	607, 0, 599, 600, 601, 1184, 602, 1185, 1102, 603,
	604, 605, 606, 0, 608, 609, 0, 1085, 610, 611,
	612, 614, 615, 613, 616, 1146, 617, 0, 0, 618,
	619, 620, 1608, 1169, 1206, 0, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 228, 625, 626, 681, 627,
	628, 629, 1082, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1077, 0, 0, 0, 0,
	0, 0, 1075, 1076, 1124, 1096, 1097, 1098, 1094, 1095,
	1107, 1863, 1861, 0, 0, 1106, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 1148, 1112, 0, 0,
	0, 284, 285, 1188, 286, 287, 288, 289, 290, 291,
	631, 1161, 0, 292, 1168, 293, 1167, 2698, 1178, 294,
	295, 296, 297, 298, 299, 1114, 1147, 1079, 300, 1208,
	1209, 638, 0, 301, 302, 1154, 0, 1135, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1189, 325, 326, 327,
	1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330,
	331, 332, 1171, 333, 1165, 1164, 1084, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1156, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1090, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1179, 1180, 364, 1103, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1163, 0, 0,
	0, 368, 0, 369, 370, 0, 2703, 1190, 371, 372,
	373, 1176, 1177, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1186, 0, 1113, 384, 0, 385,
	386, 387, 388, 389, 1149, 1150, 1153, 469, 1192, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1191, 400, 1158, 1159,
	0, 1119, 0, 402, 403, 1193, 1151, 1194, 404, 405,
	406, 1195, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 2699, 417, 1187, 1196,
	418, 419, 1197, 0, 420, 0, 0, 0, 421, 422,
	425, 1142, 1141, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1198, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1199, 465, 454, 1081,
	274, 1200, 466, 467, 1104, 1152, 468, 1166, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 1201, 479, 1202, 1181, 480, 481,
	1091, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 1182, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1162, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	1203, 534, 535, 536, 537, 538, 1092, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 1145, 561,
	562, 544, 545, 563, 564, 1204, 565, 566, 567, 568,
	569, 570, 571, 1160, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 1207, 579, 580, 581, 582,
	1183, 586, 587, 0, 588, 589, 1078, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 1172, 1173, 1174, 1175, 0, 607, 2700, 599, 600,
	601, 1184, 602, 1185, 1102, 603, 604, 605, 606, 0,
	608, 609, 0, 1085, 610, 611, 612, 614, 615, 613,
	616, 1146, 617, 0, 0, 618, 619, 620, 677, 1169,
	1206, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 1082, 0,
	0, 2612, 0, 1124, 1096, 1097, 1098, 1094, 1095, 1107,
	0, 1077, 0, 0, 0, 0, 0, 0, 1075, 1076,
	275, 277, 276, 278, 279, 280, 281, 1108, 282, 283,
	0, 1106, 0, 0, 0, 1148, 1112, 0, 0, 0,
	284, 285, 1188, 286, 287, 288, 289, 290, 291, 631,
	1161, 0, 292, 1168, 293, 1167, 0, 1178, 294, 295,
	296, 297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209,
	638, 0, 301, 302, 1154, 0, 1135, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1189, 325, 326, 327, 1138,
	1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331,
	332, 1171, 333, 1165, 1164, 1084, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1156, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1090, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1179, 1180, 364, 1103, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1163, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1190, 371, 372, 373,
	1176, 1177, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1186, 0, 1113, 384, 0, 385, 386,
	387, 388, 389, 1149, 1150, 1153, 469, 1192, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1191, 400, 1158, 1159, 0,
	1119, 0, 402, 403, 1193, 1151, 1194, 404, 405, 406,
	1195, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1187, 1196, 418,
	419, 1197, 0, 420, 0, 0, 0, 421, 422, 425,
	1142, 1141, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1198, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1199, 465, 454, 1081, 274,
	1200, 466, 467, 1104, 1152, 468, 1166, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 1201, 479, 1202, 1181, 480, 481, 1091,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	1182, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1162, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 1203,
	534, 535, 536, 537, 538, 1092, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 1145, 561, 562,
	544, 545, 563, 564, 1204, 565, 566, 567, 568, 569,
	570, 571, 1160, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 1207, 579, 580, 581, 582, 1183,
	586, 587, 0, 588, 589, 1078, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	1172, 1173, 1174, 1175, 0, 607, 0, 599, 600, 601,
	1184, 602, 1185, 1102, 603, 604, 605, 606, 0, 608,
	609, 0, 1085, 610, 611, 612, 614, 615, 613, 616,
	1146, 617, 0, 0, 618, 619, 620, 677, 1169, 1206,
	0, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1077, 0, 0, 0, 0, 0, 0, 1075, 1076, 0,
	0, 0, 0, 0, 0, 0, 1108, 2610, 0, 2609,
	1106, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1148, 1112, 0, 0, 0, 284, 285,
	1188, 286, 287, 288, 289, 290, 291, 631, 1161, 0,
	292, 1168, 293, 1167, 0, 1178, 294, 295, 296, 297,
	298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638, 0,
	301, 302, 1154, 0, 1135, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1189, 325, 326, 327, 1138, 1136, 1137,
	1144, 1140, 1139, 1143, 328, 329, 330, 331, 332, 1171,
	333, 1165, 1164, 1084, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1156, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1090, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1179, 1180, 364, 1103, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1163, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1190, 371, 372, 373, 1176, 1177,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1186, 0, 1113, 384, 0, 385, 386, 387, 388,
	389, 1149, 1150, 1153, 469, 1192, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1191, 400, 1158, 1159, 0, 1119, 0,
	402, 403, 1193, 1151, 1194, 404, 405, 406, 1195, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1187, 1196, 418, 419, 1197,
	0, 420, 0, 0, 0, 421, 422, 425, 1142, 1141,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1198,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1199, 465, 454, 1081, 274, 1200, 466,
	467, 1104, 1152, 468, 1166, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 1201, 479, 1202, 1181, 480, 481, 1091, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 1182, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1162, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 1203, 534, 535,
	536, 537, 538, 1092, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 1145, 561, 562, 544, 545,
	563, 564, 1204, 565, 566, 567, 568, 569, 570, 571,
	1160, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 1207, 579, 580, 581, 582, 1183, 586, 587,
	0, 588, 589, 1078, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 1172, 1173,
	1174, 1175, 0, 607, 0, 599, 600, 601, 1184, 602,
	1185, 1102, 603, 604, 605, 606, 0, 608, 609, 0,
	1085, 610, 611, 612, 614, 615, 613, 616, 1146, 617,
	0, 0, 618, 619, 620, 677, 1169, 1206, 0, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 1082, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1077, 0,
	0, 0, 0, 0, 0, 1075, 1076, 0, 0, 0,
	0, 0, 0, 0, 1108, 2607, 0, 2606, 1106, 1124,
	1096, 1097, 1098, 1094, 1095, 1107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1148, 1112, 0, 0, 0, 284, 285, 1188, 286,
	287, 288, 289, 290, 291, 631, 1161, 0, 292, 1168,
	293, 1167, 0, 1178, 294, 295, 296, 297, 298, 299,
	1114, 1147, 1079, 300, 1208, 1209, 638, 0, 301, 302,
	1154, 0, 1135, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1189, 325, 326, 327, 1138, 1136, 1137, 1144, 1140,
	1139, 1143, 328, 329, 330, 331, 332, 1171, 333, 1165,
	1164, 1084, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1156, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1090, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1179,
	1180, 364, 1103, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1163, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1190, 371, 372, 373, 1176, 1177, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1186,
	0, 1113, 384, 0, 385, 386, 387, 388, 389, 1149,
	1150, 1153, 469, 1192, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1191, 400, 1158, 1159, 0, 1119, 0, 402, 403,
	1193, 1151, 1194, 404, 405, 406, 1195, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1187, 1196, 418, 419, 1197, 0, 420,
	0, 0, 0, 421, 422, 425, 1142, 1141, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1198, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1199, 465, 454, 1081, 274, 1200, 466, 467, 1104,
	1152, 468, 1166, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 1201,
	479, 1202, 1181, 480, 481, 1091, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 1182, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1162, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 1203, 534, 535, 536, 537,
	538, 1092, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 1145, 561, 562, 544, 545, 563, 564,
	1204, 565, 566, 567, 568, 569, 570, 571, 1160, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	1207, 579, 580, 581, 582, 1183, 586, 587, 0, 588,
	589, 1078, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 1172, 1173, 1174, 1175,
	0, 607, 0, 599, 600, 601, 1184, 602, 1185, 1102,
	603, 604, 605, 606, 0, 608, 609, 0, 1085, 610,
	611, 612, 614, 615, 613, 616, 1146, 617, 0, 0,
	618, 619, 620, 677, 1169, 1206, 0, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1077, 0, 0, 0,
	0, 0, 0, 1075, 1076, 0, 0, 0, 0, 0,
	0, 0, 1108, 2604, 0, 2603, 1106, 1124, 1096, 1097,
	1098, 1094, 1095, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1148,
	1112, 0, 0, 0, 284, 285, 1188, 286, 287, 288,
	289, 290, 291, 631, 1161, 0, 292, 1168, 293, 1167,
	0, 1178, 294, 295, 296, 297, 298, 299, 1114, 1147,
	1079, 300, 1208, 1209, 638, 0, 301, 302, 1154, 0,
	1135, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1189,
	325, 326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143,
	328, 329, 330, 331, 332, 1171, 333, 1165, 1164, 1084,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1156, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1090, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1179, 1180, 364,
	1103, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1163, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1190, 371, 372, 373, 1176, 1177, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1186, 0, 1113,
	384, 0, 385, 386, 387, 388, 389, 1149, 1150, 1153,
	469, 1192, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1191,
	400, 1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151,
	1194, 404, 405, 406, 1195, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1187, 1196, 418, 419, 1197, 0, 420, 0, 0,
	0, 421, 422, 425, 1142, 1141, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1198, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1199,
	465, 454, 1081, 274, 1200, 466, 467, 1104, 1152, 468,
	1166, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 1201, 479, 1202,
	1181, 480, 481, 1091, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 1182, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1162, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 1203, 534, 535, 536, 537, 538, 1092,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 1145, 561, 562, 544, 545, 563, 564, 1204, 565,
	566, 567, 568, 569, 570, 571, 1160, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 1207, 579,
	580, 581, 582, 1183, 586, 587, 0, 588, 589, 1078,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 1172, 1173, 1174, 1175, 0, 607,
	0, 599, 600, 601, 1184, 602, 1185, 1102, 603, 604,
	605, 606, 0, 608, 609, 0, 1085, 610, 611, 612,
	614, 615, 613, 616, 1146, 617, 0, 0, 618, 619,
	620, 677, 1169, 1206, 0, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 1082, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1077, 0, 0, 0, 0, 0,
	0, 1075, 1076, 0, 0, 0, 0, 0, 0, 0,
	1108, 2601, 0, 1704, 1106, 1124, 1096, 1097, 1098, 1094,
	1095, 1107, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 1148, 1112, 0,
	0, 0, 284, 285, 1188, 286, 287, 288, 289, 290,
	291, 631, 1161, 0, 292, 1168, 293, 1167, 0, 1178,
	294, 295, 296, 297, 298, 299, 1114, 1147, 1079, 300,
	1208, 1209, 638, 0, 301, 302, 1154, 0, 1135, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1189, 325, 326,
	327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329,
	330, 331, 332, 1171, 333, 1165, 1164, 1084, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1156, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1090, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1179, 1180, 364, 1103, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1163, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1190, 371,
	372, 373, 1176, 1177, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1186, 0, 1113, 384, 0,
	385, 386, 387, 388, 389, 1149, 1150, 1153, 469, 1192,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1191, 400, 1158,
	1159, 0, 1119, 0, 402, 403, 1193, 1151, 1194, 404,
	405, 406, 1195, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1187,
	1196, 418, 419, 1197, 0, 420, 0, 0, 0, 421,
	422, 425, 1142, 1141, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1198, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1199, 465, 454,
	1081, 274, 1200, 466, 467, 1104, 1152, 468, 1166, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 1201, 479, 1202, 1181, 480,
	481, 1091, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 1182, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1162, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 1203, 534, 535, 536, 537, 538, 1092, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 1145,
	561, 562, 544, 545, 563, 564, 1204, 565, 566, 567,
	568, 569, 570, 571, 1160, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 1207, 579, 580, 581,
	582, 1183, 586, 587, 0, 588, 589, 1078, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 1172, 1173, 1174, 1175, 0, 607, 0, 599,
	600, 601, 1184, 602, 1185, 1102, 603, 604, 605, 606,
	0, 608, 609, 0, 1085, 610, 611, 612, 614, 615,
	613, 616, 1146, 617, 0, 0, 618, 619, 620, 677,
	1169, 1206, 0, 622, 621, 623, 680, 0, 624, 1703,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 1082,
	0, 0, 1071, 0, 1124, 1096, 1097, 1098, 1094, 1095,
	1107, 0, 1077, 0, 0, 0, 0, 0, 0, 1075,
	1076, 275, 277, 276, 278, 279, 280, 281, 1108, 282,
	283, 0, 1106, 0, 0, 0, 1148, 1112, 0, 0,
	0, 284, 285, 1188, 286, 287, 288, 289, 290, 291,
	631, 1161, 0, 292, 1168, 293, 1167, 0, 1178, 294,
	295, 296, 297, 298, 299, 1114, 1147, 1079, 300, 1208,
	1209, 638, 0, 301, 302, 1154, 0, 1135, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1189, 325, 326, 327,
	1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330,
	331, 332, 1171, 333, 1165, 1164, 1084, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1156, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1090, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1179, 1180, 364, 1103, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1163, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1190, 371, 372,
	373, 1176, 1177, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1186, 0, 1113, 384, 0, 385,
	386, 387, 388, 389, 1149, 1150, 1153, 469, 1192, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1191, 400, 1158, 1159,
	0, 1119, 0, 402, 403, 1193, 1151, 1194, 404, 405,
	406, 1195, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1187, 1196,
	418, 419, 1197, 0, 420, 0, 0, 0, 421, 422,
	425, 1142, 1141, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1198, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1199, 465, 454, 1081,
	274, 1200, 466, 467, 1104, 1152, 468, 1166, 470, 471,
	0, 0, 472, 0, 1086, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 1201, 479, 1202, 1181, 480, 481,
	1091, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 1182, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1162, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	1203, 534, 535, 536, 537, 538, 1092, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 1145, 561,
	562, 544, 545, 563, 564, 1204, 565, 566, 567, 568,
	569, 570, 571, 1160, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 1207, 579, 580, 581, 582,
	1183, 586, 587, 0, 588, 589, 1078, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 1172, 1173, 1174, 1175, 0, 607, 0, 599, 600,
	601, 1184, 602, 1185, 1102, 603, 604, 605, 606, 0,
	608, 609, 0, 1085, 610, 611, 612, 614, 615, 613,
	616, 1146, 617, 0, 0, 618, 619, 620, 677, 1169,
	1206, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 1082, 0,
	0, 0, 0, 1124, 1096, 1097, 1098, 1094, 1095, 1107,
	0, 1077, 0, 0, 0, 0, 0, 0, 1075, 1076,
	275, 277, 276, 278, 279, 280, 281, 1108, 282, 283,
	0, 1106, 0, 0, 0, 1148, 1112, 0, 0, 0,
	284, 285, 1188, 286, 287, 288, 289, 290, 291, 631,
	1161, 0, 292, 1168, 293, 1167, 0, 1178, 294, 295,
	296, 297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209,
	638, 0, 301, 302, 1154, 0, 1135, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 4663,
	321, 0, 322, 323, 324, 1189, 325, 326, 327, 1138,
	1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331,
	332, 1171, 333, 1165, 1164, 1084, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1156, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1090, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1179, 1180, 364, 1103, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1163, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1190, 371, 372, 373,
	1176, 1177, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1186, 0, 1113, 384, 0, 385, 386,
	387, 388, 389, 1149, 1150, 1153, 469, 1192, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1191, 400, 1158, 1159, 0,
	1119, 0, 402, 403, 1193, 1151, 1194, 404, 405, 406,
	1195, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1187, 1196, 418,
	419, 1197, 0, 420, 0, 0, 0, 421, 422, 425,
	1142, 1141, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1198, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1199, 465, 454, 1081, 274,
	1200, 466, 467, 1104, 1152, 468, 1166, 470, 471, 0,
	0, 472, 0, 1086, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 1201, 479, 1202, 1181, 480, 481, 1091,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	1182, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1162, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 1203,
	534, 535, 536, 537, 538, 1092, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 1145, 561, 562,
	544, 545, 563, 564, 1204, 565, 566, 567, 568, 569,
	570, 571, 1160, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 1207, 579, 580, 581, 582, 1183,
	586, 587, 0, 588, 589, 1078, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	1172, 1173, 1174, 1175, 0, 607, 0, 599, 600, 601,
	1184, 602, 1185, 1102, 603, 604, 605, 606, 0, 608,
	609, 0, 1085, 610, 611, 612, 614, 615, 613, 616,
	1146, 617, 0, 0, 618, 619, 620, 677, 1169, 1206,
	0, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 1082, 0, 0,
	0, 0, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 0,
	1077, 0, 0, 0, 0, 0, 0, 1075, 1076, 275,
	277, 276, 278, 279, 280, 281, 1108, 282, 283, 0,
	1106, 0, 0, 0, 1148, 1112, 0, 0, 0, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 1161,
	0, 292, 1168, 293, 1167, 0, 1178, 294, 295, 296,
	297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638,
	0, 301, 302, 1154, 0, 1135, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1189, 325, 326, 327, 1138, 1136,
	1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331, 332,
	1171, 333, 1165, 1164, 1084, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1156,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1090, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1179, 1180, 364, 1103, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1163, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1190, 371, 372, 373, 1176,
	1177, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1186, 0, 1113, 384, 0, 385, 386, 387,
	388, 389, 1149, 1150, 1153, 469, 1192, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 2444, 397,
	398, 399, 401, 0, 1191, 400, 1158, 1159, 0, 1119,
	0, 402, 403, 1193, 1151, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1187, 1196, 418, 419,
	1197, 0, 420, 0, 0, 0, 421, 422, 425, 1142,
	1141, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1081, 274, 1200,
	466, 467, 1104, 1152, 468, 1166, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 1201, 479, 1202, 1181, 480, 481, 1091, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 1182,
	499, 665, 500, 501, 2443, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1162, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 1092, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 1145, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 1160, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 1207, 579, 580, 581, 582, 1183, 586,
	587, 0, 588, 589, 1078, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 1172,
	1173, 1174, 1175, 0, 607, 0, 599, 600, 601, 1184,
	602, 1185, 1102, 603, 604, 605, 606, 0, 608, 609,
	0, 1085, 610, 611, 612, 614, 615, 613, 616, 1146,
	617, 0, 0, 618, 619, 620, 677, 1169, 1206, 0,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 1082, 0, 0, 0,
	0, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 0, 1077,
	0, 0, 0, 0, 0, 0, 1075, 1076, 275, 277,
	276, 278, 279, 280, 281, 1108, 282, 283, 0, 1106,
	0, 0, 0, 1148, 1112, 0, 0, 0, 284, 285,
	1188, 286, 287, 288, 289, 290, 291, 631, 1161, 0,
	292, 1168, 293, 1167, 0, 1178, 294, 295, 296, 297,
	298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638, 0,
	301, 302, 1154, 0, 1135, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1189, 325, 326, 327, 1138, 1136, 1137,
	1144, 1140, 1139, 1143, 328, 329, 330, 331, 332, 1171,
	333, 1165, 1164, 1084, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1156, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1090, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1179, 1180, 364, 1103, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1163, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1190, 371, 372, 373, 1176, 1177,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1186, 0, 1113, 384, 0, 385, 386, 387, 388,
	389, 1149, 1150, 1153, 469, 1192, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1191, 400, 1158, 1159, 0, 1119, 0,
	402, 403, 1193, 1151, 1194, 404, 405, 406, 1195, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1187, 1196, 418, 419, 1197,
	0, 420, 0, 0, 0, 421, 422, 425, 1142, 1141,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1198,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1199, 465, 454, 1081, 274, 1200, 466,
	467, 1104, 1152, 468, 1166, 470, 471, 0, 0, 472,
	0, 1086, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 1201, 479, 1202, 1181, 480, 481, 1091, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 1182, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1162, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 1203, 534, 535,
	536, 537, 538, 1092, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 1145, 561, 562, 544, 545,
	563, 564, 1204, 565, 566, 567, 568, 569, 570, 571,
	1160, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 1207, 579, 580, 581, 582, 1183, 586, 587,
	0, 588, 589, 1078, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 1172, 1173,
	1174, 1175, 0, 607, 0, 599, 600, 601, 1184, 602,
	1185, 1102, 603, 604, 605, 606, 0, 608, 609, 0,
	1085, 610, 611, 612, 614, 615, 613, 616, 1146, 617,
	0, 0, 618, 619, 620, 677, 1169, 1206, 0, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 1082, 0, 0, 0, 0,
	1124, 1096, 1097, 1098, 1094, 1095, 1107, 0, 1077, 0,
	0, 0, 0, 0, 0, 1075, 1076, 275, 277, 276,
	278, 279, 280, 281, 1108, 282, 283, 0, 1106, 0,
	0, 0, 1148, 1112, 0, 0, 0, 284, 285, 1188,
	286, 287, 288, 289, 290, 291, 631, 1161, 0, 292,
	1168, 293, 1167, 0, 1178, 294, 295, 296, 297, 298,
	299, 1114, 1147, 1079, 300, 1208, 1209, 638, 0, 301,
	302, 1154, 0, 1135, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 4403, 321, 0, 322,
	323, 324, 1189, 325, 326, 327, 1138, 1136, 1137, 1144,
	1140, 1139, 1143, 328, 329, 330, 331, 332, 1171, 333,
	1165, 1164, 1084, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1156, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1090,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1179, 1180, 364, 1103, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1163, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1190, 371, 372, 373, 1176, 1177, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1186, 0, 1113, 384, 0, 385, 386, 387, 388, 389,
	1149, 1150, 1153, 469, 1192, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1191, 400, 1158, 1159, 0, 1119, 0, 402,
	403, 1193, 1151, 1194, 404, 405, 406, 1195, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1187, 1196, 418, 419, 1197, 0,
	420, 0, 0, 0, 421, 422, 425, 1142, 1141, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1198, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1199, 465, 454, 1081, 274, 1200, 466, 467,
	1104, 1152, 468, 1166, 470, 471, 0, 0, 472, 0,
	1086, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	1201, 479, 1202, 1181, 480, 481, 1091, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 1182, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1162, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 1203, 534, 535, 536,
	537, 538, 1092, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 1145, 561, 562, 544, 545, 563,
	564, 1204, 565, 566, 567, 568, 569, 570, 571, 1160,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 1207, 579, 580, 581, 582, 1183, 586, 587, 0,
	588, 589, 1078, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 1172, 1173, 1174,
	1175, 0, 607, 0, 599, 600, 601, 1184, 602, 1185,
	1102, 603, 604, 605, 606, 0, 608, 609, 0, 1085,
	610, 611, 612, 614, 615, 613, 616, 1146, 617, 0,
	0, 618, 619, 620, 677, 1169, 1206, 0, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 1082, 0, 0, 0, 0, 1124,
	1096, 1097, 1098, 1094, 1095, 1107, 0, 1077, 0, 0,
	0, 0, 0, 0, 1075, 1076, 275, 277, 276, 278,
	279, 280, 281, 1108, 282, 283, 0, 1106, 0, 0,
	0, 1148, 1112, 0, 0, 0, 284, 285, 1188, 286,
	287, 288, 289, 290, 291, 631, 1161, 0, 292, 1168,
	293, 1167, 0, 1178, 294, 295, 296, 297, 298, 299,
	1114, 1147, 1079, 300, 1208, 1209, 638, 0, 301, 302,
	1154, 0, 1135, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1189, 325, 326, 327, 1138, 1136, 1137, 1144, 1140,
	1139, 1143, 328, 329, 330, 331, 332, 1171, 333, 1165,
	1164, 1084, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1156, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1090, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1179,
	1180, 364, 1103, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1163, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1190, 371, 372, 373, 1176, 1177, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1186,
	0, 1113, 384, 0, 385, 386, 387, 388, 389, 1149,
	1150, 1153, 469, 1192, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1191, 400, 1158, 1159, 0, 1119, 0, 402, 403,
	1193, 1151, 1194, 404, 405, 406, 1195, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1187, 1196, 418, 419, 1197, 0, 420,
	0, 0, 0, 421, 422, 425, 1142, 1141, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1198, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1199, 465, 454, 1081, 4000, 1200, 466, 467, 1104,
	1152, 468, 1166, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 1201,
	479, 1202, 1181, 480, 481, 1091, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 1182, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1162, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 1203, 534, 535, 536, 537,
	538, 1092, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 1145, 561, 562, 544, 545, 563, 564,
	1204, 565, 566, 567, 568, 569, 570, 571, 1160, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	1207, 579, 580, 581, 582, 1183, 586, 587, 0, 588,
	589, 1078, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 1172, 1173, 1174, 1175,
	0, 607, 0, 599, 600, 601, 1184, 602, 1185, 1102,
	603, 604, 605, 606, 0, 608, 609, 0, 1085, 610,
	611, 612, 614, 615, 613, 616, 1146, 617, 0, 0,
	618, 619, 620, 677, 1169, 1206, 0, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 1082, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1077, 0, 0, 0,
	0, 0, 0, 1075, 1076, 1932, 0, 0, 0, 0,
	0, 0, 1108, 0, 0, 0, 1106, 1124, 1096, 1097,
	1098, 1094, 1095, 1107, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 1148,
	1112, 0, 0, 0, 284, 285, 1188, 286, 287, 288,
	289, 290, 291, 631, 1161, 0, 292, 1168, 293, 1167,
	0, 1178, 294, 295, 296, 297, 298, 299, 1114, 1147,
	1079, 300, 1208, 1209, 638, 0, 301, 302, 1154, 0,
	1135, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1189,
	325, 326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143,
	328, 329, 330, 331, 332, 1171, 333, 1165, 1164, 1084,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1156, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1090, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1179, 1180, 364,
	1103, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1163, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1190, 371, 372, 373, 1176, 1177, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1186, 0, 1113,
	384, 0, 385, 386, 387, 388, 389, 1149, 1150, 1153,
	469, 1192, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1191,
	400, 1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151,
	1194, 404, 405, 406, 1195, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1187, 1196, 418, 419, 1197, 0, 420, 0, 0,
	0, 421, 422, 425, 1142, 1141, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1198, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1199,
	465, 454, 1081, 274, 1200, 466, 467, 1104, 1152, 468,
	1166, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 1201, 479, 1202,
	1181, 480, 481, 1091, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 1182, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1162, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 1203, 534, 535, 536, 537, 538, 1092,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 1145, 561, 562, 544, 545, 563, 564, 1204, 565,
	566, 567, 568, 569, 570, 571, 1160, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 1207, 579,
	580, 581, 582, 1183, 586, 587, 0, 588, 589, 1078,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 1172, 1173, 1174, 1175, 0, 607,
	0, 599, 600, 601, 1184, 602, 1185, 1102, 603, 604,
	605, 606, 0, 608, 609, 0, 1085, 610, 611, 612,
	614, 615, 613, 616, 1146, 617, 0, 0, 618, 619,
	620, 677, 1169, 1206, 3713, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 1082, 0, 0, 0, 0, 1124, 1096, 1097, 1098,
	1094, 1095, 1107, 0, 1077, 0, 0, 0, 0, 0,
	0, 1075, 1076, 275, 277, 276, 278, 279, 280, 281,
	1108, 282, 283, 0, 1106, 0, 0, 0, 1148, 1112,
	0, 0, 0, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 1161, 0, 292, 1168, 293, 1167, 0,
	1178, 294, 295, 296, 297, 298, 299, 1114, 1147, 1079,
	300, 1208, 1209, 638, 0, 301, 302, 1154, 0, 1135,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328,
	329, 330, 331, 332, 1171, 333, 1165, 1164, 1084, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1156, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1090, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1179, 1180, 364, 1103,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1163,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 1176, 1177, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1186, 0, 1113, 384,
	0, 385, 386, 387, 388, 389, 1149, 1150, 1153, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1191, 400,
	1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1187, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 1142, 1141, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 1081, 274, 1200, 466, 467, 1104, 1152, 468, 1166,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 1181,
	480, 481, 1091, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 1182, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1162,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 1092, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	1145, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 1160, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 1207, 579, 580,
	581, 582, 1183, 586, 587, 0, 588, 589, 1078, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 1172, 1173, 1174, 1175, 0, 607, 0,
	599, 600, 601, 1184, 602, 1185, 1102, 603, 604, 605,
	606, 0, 608, 609, 0, 1085, 610, 611, 612, 614,
	615, 613, 616, 1146, 617, 0, 0, 618, 619, 620,
	677, 1169, 1206, 0, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	1082, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1077, 0, 0, 0, 0, 0, 0,
	1075, 1076, 1932, 0, 0, 0, 0, 0, 0, 1108,
	0, 0, 0, 1106, 1124, 1096, 1097, 1098, 1094, 1095,
	1107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 1148, 1112, 0, 0,
	0, 284, 285, 1188, 286, 287, 288, 289, 290, 291,
	631, 1161, 0, 292, 1168, 293, 1167, 0, 1178, 294,
	295, 296, 297, 298, 299, 1114, 1147, 1079, 300, 1208,
	1209, 638, 0, 301, 302, 1154, 0, 1135, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1189, 325, 326, 327,
	1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330,
	331, 332, 1171, 333, 1165, 1164, 1084, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1156, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1090, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1179, 1180, 364, 1103, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1163, 0, 0,
	0, 368, 0, 369, 370, 0, 2703, 1190, 371, 372,
	373, 1176, 1177, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1186, 0, 1113, 384, 0, 385,
	386, 387, 388, 389, 1149, 1150, 1153, 469, 1192, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1191, 400, 1158, 1159,
	0, 1119, 0, 402, 403, 1193, 1151, 1194, 404, 405,
	406, 1195, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1187, 1196,
	418, 419, 1197, 0, 420, 0, 0, 0, 421, 422,
	425, 1142, 1141, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1198, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1199, 465, 454, 1081,
	274, 1200, 466, 467, 1104, 1152, 468, 1166, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 1201, 479, 1202, 1181, 480, 481,
	1091, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 1182, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1162, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	1203, 534, 535, 536, 537, 538, 1092, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 1145, 561,
	562, 544, 545, 563, 564, 1204, 565, 566, 567, 568,
	569, 570, 571, 1160, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 1207, 579, 580, 581, 582,
	1183, 586, 587, 0, 588, 589, 1078, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 1172, 1173, 1174, 1175, 0, 607, 0, 599, 600,
	601, 1184, 602, 1185, 1102, 603, 604, 605, 606, 0,
	608, 609, 0, 1085, 610, 611, 612, 614, 615, 613,
	616, 1146, 617, 0, 0, 618, 619, 620, 677, 1169,
	1206, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 1082, 0,
	0, 0, 0, 1124, 1096, 1097, 1098, 1094, 1095, 1107,
	0, 1077, 0, 0, 0, 0, 0, 0, 1075, 1076,
	275, 277, 276, 278, 279, 280, 281, 1108, 282, 283,
	0, 1106, 0, 0, 0, 1148, 1112, 0, 0, 0,
	284, 285, 1188, 286, 287, 288, 289, 290, 291, 631,
	1161, 0, 292, 1168, 293, 1167, 0, 1178, 294, 295,
	296, 297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209,
	638, 0, 301, 302, 1154, 0, 1135, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1189, 325, 326, 327, 1138,
	1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331,
	332, 1171, 333, 1165, 1164, 1084, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1156, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1090, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1179, 1180, 364, 1103, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1163, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1190, 371, 372, 373,
	1176, 1177, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1186, 0, 1113, 384, 0, 385, 386,
	387, 388, 389, 1149, 1150, 1153, 469, 1192, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1191, 400, 1158, 1159, 0,
	1119, 0, 402, 403, 1193, 1151, 1194, 404, 405, 406,
	1195, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1187, 1196, 418,
	419, 1197, 0, 420, 0, 0, 0, 421, 422, 425,
	1142, 1141, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1198, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1199, 465, 454, 1081, 274,
	1200, 466, 467, 1104, 1152, 468, 1166, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 1201, 479, 1202, 1181, 480, 481, 1091,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	1182, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1162, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 1203,
	534, 535, 536, 537, 538, 1092, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 1145, 561, 562,
	544, 545, 563, 564, 1204, 565, 566, 567, 568, 569,
	570, 571, 1160, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 1207, 579, 580, 581, 582, 1183,
	586, 587, 0, 588, 589, 1078, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	1172, 1173, 1174, 1175, 0, 607, 0, 599, 600, 601,
	1184, 602, 1185, 1102, 603, 604, 605, 606, 0, 608,
	609, 0, 1085, 610, 611, 612, 614, 615, 613, 616,
	1146, 617, 0, 0, 618, 619, 620, 677, 1169, 1206,
	0, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 1082, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1077, 0, 0, 0, 0, 0, 0, 1075, 1076, 0,
	0, 0, 0, 0, 0, 0, 1108, 1861, 0, 2708,
	1106, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1148, 1112, 0, 0, 0, 284, 285,
	1188, 286, 287, 288, 289, 290, 291, 631, 1161, 0,
	292, 1168, 293, 1167, 0, 1178, 294, 295, 296, 297,
	298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638, 0,
	301, 302, 1154, 0, 1135, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1189, 325, 326, 327, 1138, 1136, 1137,
	1144, 1140, 1139, 1143, 328, 329, 330, 331, 332, 1171,
	333, 1165, 1164, 1084, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1156, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1090, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1179, 1180, 364, 1103, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1163, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1190, 371, 372, 373, 1176, 1177,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1186, 0, 1113, 384, 0, 385, 386, 387, 388,
	389, 1149, 1150, 1153, 469, 1192, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1191, 400, 1158, 1159, 0, 1119, 0,
	402, 403, 1193, 1151, 1194, 404, 405, 406, 1195, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1187, 1196, 418, 419, 1197,
	0, 420, 0, 0, 0, 421, 422, 425, 1142, 1141,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1198,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1199, 465, 454, 1081, 274, 1200, 466,
	467, 1104, 1152, 468, 1166, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 1201, 479, 1202, 1181, 480, 481, 1091, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 1182, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1162, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 1203, 534, 535,
	536, 537, 538, 1092, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 1145, 561, 562, 544, 545,
	563, 564, 1204, 565, 566, 567, 568, 569, 570, 571,
	1160, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 1207, 579, 580, 581, 582, 1183, 586, 587,
	0, 588, 589, 1078, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 1172, 1173,
	1174, 1175, 0, 607, 0, 599, 600, 601, 1184, 602,
	1185, 1102, 603, 604, 605, 606, 0, 608, 609, 0,
	1085, 610, 611, 612, 614, 615, 613, 616, 1146, 617,
	0, 0, 618, 619, 620, 677, 1169, 1206, 0, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 1082, 0, 0, 2706, 0,
	1124, 1096, 1097, 1098, 1094, 1095, 1107, 0, 1077, 0,
	0, 0, 0, 0, 0, 1075, 1076, 275, 277, 276,
	278, 279, 280, 281, 1108, 282, 283, 0, 1106, 0,
	0, 0, 1148, 1112, 0, 0, 0, 284, 285, 1188,
	286, 287, 288, 289, 290, 291, 631, 1161, 0, 292,
	1168, 293, 1167, 0, 1178, 294, 295, 296, 297, 298,
	299, 1114, 1147, 1079, 300, 1208, 1209, 638, 0, 301,
	302, 1154, 0, 1135, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1189, 325, 326, 327, 1138, 1136, 1137, 1144,
	1140, 1139, 1143, 328, 329, 330, 331, 332, 1171, 333,
	1165, 1164, 1084, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1156, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1090,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1179, 1180, 364, 1103, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1163, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1190, 371, 372, 373, 1176, 1177, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1186, 0, 1113, 384, 0, 385, 386, 387, 388, 389,
	1149, 1150, 1153, 469, 1192, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1191, 400, 1158, 1159, 0, 1119, 0, 402,
	403, 1193, 1151, 1194, 404, 405, 406, 1195, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1187, 1196, 418, 419, 1197, 0,
	420, 0, 0, 0, 421, 422, 425, 1142, 1141, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1198, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1199, 465, 454, 1081, 274, 1200, 466, 467,
	1104, 1152, 468, 1166, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	1201, 479, 1202, 1181, 480, 481, 1091, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 1182, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1162, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 1203, 534, 535, 536,
	537, 538, 1092, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 1145, 561, 562, 544, 545, 563,
	564, 1204, 565, 566, 567, 568, 569, 570, 571, 1160,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 1207, 579, 580, 581, 582, 1183, 586, 587, 0,
	588, 589, 1078, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 1172, 1173, 1174,
	1175, 0, 607, 0, 599, 600, 601, 1184, 602, 1185,
	1102, 603, 604, 605, 606, 0, 608, 609, 0, 1085,
	610, 611, 612, 614, 615, 613, 616, 1146, 617, 0,
	0, 618, 619, 620, 677, 1169, 1206, 0, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 1082, 0, 0, 2694, 0, 1124,
	1096, 1097, 1098, 1094, 1095, 1107, 0, 1077, 0, 0,
	0, 0, 0, 0, 1075, 1076, 275, 277, 276, 278,
	279, 280, 281, 1108, 282, 283, 0, 1106, 0, 0,
	0, 1148, 1112, 0, 0, 0, 284, 285, 1188, 286,
	287, 288, 289, 290, 291, 631, 1161, 0, 292, 1168,
	293, 1167, 0, 1178, 294, 295, 296, 297, 298, 299,
	1114, 1147, 1079, 300, 1208, 1209, 638, 0, 301, 302,
	1154, 0, 1135, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1189, 325, 326, 327, 1138, 1136, 1137, 1144, 1140,
	1139, 1143, 328, 329, 330, 331, 332, 1171, 333, 1165,
	1164, 1084, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1156, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1090, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1179,
	1180, 364, 1103, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1163, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1190, 371, 372, 373, 1176, 1177, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1186,
	0, 1113, 384, 0, 385, 386, 387, 388, 389, 1149,
	1150, 1153, 469, 1192, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1191, 400, 1158, 1159, 0, 1119, 0, 402, 403,
	1193, 1151, 1194, 404, 405, 406, 1195, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1187, 1196, 418, 419, 1197, 0, 420,
	0, 0, 0, 421, 422, 425, 1142, 1141, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1198, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1199, 465, 454, 1081, 274, 1200, 466, 467, 1104,
	1152, 468, 1166, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 1201,
	479, 1202, 1181, 480, 481, 1091, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 1182, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1162, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 1203, 534, 535, 536, 537,
	538, 1092, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 1145, 561, 562, 544, 545, 563, 564,
	1204, 565, 566, 567, 568, 569, 570, 571, 1160, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	1207, 579, 580, 581, 582, 1183, 586, 587, 0, 588,
	589, 1078, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 1172, 1173, 1174, 1175,
	0, 607, 0, 599, 600, 601, 1184, 602, 1185, 1102,
	603, 604, 605, 606, 0, 608, 609, 0, 1085, 610,
	611, 612, 614, 615, 613, 616, 1146, 617, 0, 0,
	618, 619, 620, 677, 1169, 1206, 0, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 1082, 0, 0, 2682, 0, 1124, 1096,
	1097, 1098, 1094, 1095, 1107, 0, 1077, 0, 0, 0,
	0, 0, 0, 1075, 1076, 275, 277, 276, 278, 279,
	280, 281, 1108, 282, 283, 0, 1106, 0, 0, 0,
	1148, 1112, 0, 0, 0, 284, 285, 1188, 286, 287,
	288, 289, 290, 291, 631, 1161, 0, 292, 1168, 293,
	1167, 0, 1178, 294, 295, 296, 297, 298, 299, 1114,
	1147, 1079, 300, 1208, 1209, 638, 0, 301, 302, 1154,
	0, 1135, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1189, 325, 326, 327, 1138, 1136, 1137, 1144, 1140, 1139,
	1143, 328, 329, 330, 331, 332, 1171, 333, 1165, 1164,
	1084, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1156, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1090, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1179, 1180,
	364, 1103, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1163, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1190, 371, 372, 373, 1176, 1177, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1186, 0,
	1113, 384, 0, 385, 386, 387, 388, 389, 1149, 1150,
	1153, 469, 1192, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1191, 400, 1158, 1159, 0, 1119, 0, 402, 403, 1193,
	1151, 1194, 404, 405, 406, 1195, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1187, 1196, 418, 419, 1197, 0, 420, 0,
	0, 0, 421, 422, 425, 1142, 1141, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1198, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1199, 465, 454, 1081, 274, 1200, 466, 467, 1104, 1152,
	468, 1166, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 1201, 479,
	1202, 1181, 480, 481, 1091, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 1182, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1162, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 1203, 534, 535, 536, 537, 538,
	1092, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 1145, 561, 562, 544, 545, 563, 564, 1204,
	565, 566, 567, 568, 569, 570, 571, 1160, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 1207,
	579, 580, 581, 582, 1183, 586, 587, 0, 588, 589,
	1078, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 1172, 1173, 1174, 1175, 0,
	607, 0, 599, 600, 601, 1184, 602, 1185, 1102, 603,
	604, 605, 606, 0, 608, 609, 0, 1085, 610, 611,
	612, 614, 615, 613, 616, 1146, 617, 0, 0, 618,
	619, 620, 677, 1169, 1206, 0, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 1082, 0, 0, 2680, 0, 2671, 2678, 1097,
	1098, 1094, 1095, 1107, 0, 1077, 0, 0, 0, 0,
	0, 0, 1075, 1076, 275, 277, 276, 278, 279, 280,
	281, 1108, 282, 283, 0, 1106, 0, 0, 0, 1148,
	1112, 0, 0, 0, 284, 285, 1188, 286, 287, 288,
	289, 290, 291, 631, 1161, 0, 292, 1168, 293, 1167,
	0, 1178, 294, 295, 296, 297, 298, 299, 1114, 1147,
	1079, 300, 1208, 1209, 638, 0, 301, 302, 1154, 0,
	1135, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1189,
	325, 326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143,
	328, 329, 330, 331, 332, 1171, 2674, 1165, 1164, 1084,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1156, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1090, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1179, 1180, 364,
	1103, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1163, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1190, 371, 372, 373, 1176, 1177, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1186, 0, 1113,
	384, 0, 385, 386, 387, 2675, 389, 1149, 1150, 1153,
	469, 1192, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1191,
	400, 1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151,
	1194, 404, 405, 406, 1195, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1187, 1196, 418, 419, 1197, 0, 420, 0, 0,
	0, 421, 422, 425, 1142, 1141, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 2676, 435, 2673,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1198, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1199,
	465, 454, 1081, 274, 1200, 466, 467, 1104, 1152, 468,
	1166, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 1201, 479, 1202,
	1181, 480, 481, 1091, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 1182, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1162, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 1203, 534, 535, 536, 537, 538, 1092,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 2677, 0, 556, 557, 555, 558, 559,
	560, 1145, 561, 562, 544, 545, 563, 564, 1204, 565,
	566, 567, 568, 569, 570, 571, 1160, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 1207, 579,
	580, 581, 582, 1183, 586, 587, 0, 588, 589, 1078,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 1172, 1173, 1174, 1175, 0, 607,
	0, 599, 600, 601, 1184, 602, 1185, 1102, 603, 604,
	605, 606, 0, 608, 609, 0, 1085, 610, 611, 612,
	614, 615, 613, 616, 1146, 617, 0, 0, 618, 619,
	620, 677, 1169, 1206, 0, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 2672,
	629, 1082, 0, 0, 2668, 0, 2671, 2678, 1097, 1098,
	1094, 1095, 1107, 0, 1077, 0, 0, 0, 0, 0,
	0, 1075, 1076, 275, 277, 276, 278, 279, 280, 281,
	1108, 282, 283, 0, 1106, 0, 0, 0, 1148, 1112,
	0, 0, 0, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 1161, 0, 292, 1168, 293, 1167, 0,
	1178, 294, 295, 296, 297, 298, 299, 1114, 1147, 1079,
	300, 1208, 1209, 638, 0, 301, 302, 1154, 0, 1135,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328,
	329, 330, 331, 332, 1171, 2674, 1165, 1164, 1084, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1156, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1090, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1179, 1180, 364, 1103,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1163,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 1176, 1177, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1186, 0, 1113, 384,
	0, 385, 386, 387, 2675, 389, 1149, 1150, 1153, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1191, 400,
	1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1187, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 1142, 1141, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 2676, 435, 2673, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 1081, 274, 1200, 466, 467, 1104, 1152, 468, 1166,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 1181,
	480, 481, 1091, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 1182, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1162,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 1092, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 2677, 0, 556, 557, 555, 558, 559, 560,
	1145, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 1160, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 1207, 579, 580,
	581, 582, 1183, 586, 587, 0, 588, 589, 1078, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 1172, 1173, 1174, 1175, 0, 607, 0,
	599, 600, 601, 1184, 602, 1185, 1102, 603, 604, 605,
	606, 0, 608, 609, 0, 1085, 610, 611, 612, 614,
	615, 613, 616, 1146, 617, 0, 0, 618, 619, 620,
	677, 1169, 1206, 0, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 2672, 629,
	1082, 0, 0, 0, 0, 1124, 1096, 1097, 1098, 1094,
	1095, 1107, 0, 1077, 0, 0, 0, 0, 0, 0,
	1075, 1076, 275, 277, 276, 278, 279, 280, 281, 1108,
	282, 283, 0, 1106, 0, 0, 0, 1148, 1112, 0,
	0, 0, 284, 285, 1188, 286, 287, 288, 289, 290,
	291, 631, 1161, 0, 292, 1168, 293, 1167, 0, 1178,
	294, 295, 296, 297, 298, 299, 1114, 1147, 1079, 300,
	1208, 1209, 638, 0, 301, 302, 1154, 0, 1135, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1189, 325, 326,
	327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329,
	330, 331, 332, 1171, 333, 1165, 1164, 1084, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1156, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1090, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1179, 1180, 364, 1103, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1163, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1190, 371,
	372, 373, 1176, 1177, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1186, 0, 1113, 384, 0,
	385, 386, 387, 388, 389, 1149, 1150, 1153, 469, 1192,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1191, 400, 1158,
	1159, 0, 1119, 0, 402, 403, 1193, 1151, 1194, 404,
	405, 406, 1195, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1187,
	1196, 418, 419, 1197, 0, 420, 0, 0, 0, 421,
	422, 425, 1142, 1141, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1198, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1199, 465, 454,
	1081, 274, 1200, 466, 467, 1104, 1152, 468, 1166, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 1201, 479, 1202, 1181, 480,
	481, 1091, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 1182, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1162, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 1203, 534, 535, 536, 537, 538, 1092, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 1145,
	561, 562, 544, 545, 563, 564, 1204, 565, 566, 567,
	568, 569, 570, 571, 1160, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 1207, 579, 580, 581,
	582, 1183, 586, 587, 0, 588, 589, 1078, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 1172, 1173, 1174, 1175, 0, 607, 0, 599,
	600, 601, 1184, 602, 1185, 1102, 603, 604, 605, 606,
	0, 608, 609, 0, 1085, 610, 611, 612, 614, 615,
	613, 616, 1146, 617, 0, 0, 618, 619, 620, 677,
	1169, 1206, 0, 622, 621, 623, 680, 0, 624, 0,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 1082,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1077, 0, 0, 0, 0, 0, 0, 1075,
	1076, 0, 0, 0, 0, 0, 1869, 0, 1108, 0,
	0, 0, 1106, 1124, 1096, 1097, 1098, 1094, 1095, 1107,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 2423, 282, 283,
	0, 0, 0, 0, 0, 1148, 1112, 0, 0, 0,
	284, 285, 1188, 286, 287, 288, 289, 290, 291, 631,
	1161, 0, 292, 1168, 293, 1167, 0, 1178, 294, 295,
	296, 297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209,
	638, 0, 301, 302, 1154, 0, 1135, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1189, 325, 326, 327, 1138,
	1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331,
	332, 1171, 333, 1165, 1164, 1084, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1156, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1090, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1179, 1180, 364, 1103, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1163, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1190, 371, 372, 373,
	1176, 1177, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1186, 0, 1113, 384, 0, 385, 386,
	387, 388, 389, 1149, 1150, 1153, 469, 1192, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1191, 400, 1158, 1159, 0,
	1119, 0, 402, 403, 1193, 1151, 1194, 404, 405, 406,
	1195, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1187, 1196, 418,
	419, 1197, 0, 420, 0, 0, 0, 421, 422, 425,
	1142, 1141, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1198, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1199, 465, 454, 1081, 274,
	1200, 466, 467, 1104, 1152, 468, 1166, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 1201, 479, 1202, 1181, 480, 481, 1091,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	1182, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1162, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 1203,
	534, 535, 536, 537, 538, 1092, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 1145, 561, 562,
	544, 545, 563, 564, 1204, 565, 566, 567, 568, 569,
	570, 571, 1160, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 1207, 579, 580, 581, 582, 1183,
	586, 587, 0, 588, 589, 1078, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	1172, 1173, 1174, 1175, 0, 607, 0, 599, 600, 601,
	1184, 602, 1185, 1102, 603, 604, 605, 606, 0, 608,
	609, 0, 1085, 610, 611, 612, 614, 615, 613, 616,
	1146, 617, 0, 0, 618, 619, 620, 677, 1169, 1206,
	0, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 1082, 0, 0,
	2387, 0, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 0,
	1077, 0, 0, 0, 0, 0, 0, 1075, 1076, 275,
	277, 276, 278, 279, 280, 281, 1108, 282, 283, 0,
	1106, 0, 0, 0, 1148, 1112, 0, 0, 0, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 1161,
	0, 292, 1168, 293, 1167, 0, 1178, 294, 295, 296,
	297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638,
	0, 301, 302, 1154, 0, 1135, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1189, 325, 326, 327, 1138, 1136,
	1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331, 332,
	1171, 333, 1165, 1164, 1084, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1156,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1090, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1179, 1180, 364, 1103, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1163, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1190, 371, 372, 373, 1176,
	1177, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1186, 0, 1113, 384, 0, 385, 386, 387,
	388, 389, 1149, 1150, 1153, 469, 1192, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1191, 400, 1158, 1159, 0, 1119,
	0, 402, 403, 1193, 1151, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1187, 1196, 418, 419,
	1197, 0, 420, 0, 0, 0, 421, 422, 425, 1142,
	1141, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1081, 274, 1200,
	466, 467, 1104, 1152, 468, 1166, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 1201, 479, 1202, 1181, 480, 481, 1091, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 1182,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1162, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 1092, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 1145, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 1160, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 1207, 579, 580, 581, 582, 1183, 586,
	587, 0, 588, 589, 1078, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 1172,
	1173, 1174, 1175, 0, 607, 0, 599, 600, 601, 1184,
	602, 1185, 1102, 603, 604, 605, 606, 0, 608, 609,
	0, 1085, 610, 611, 612, 614, 615, 613, 616, 1146,
	617, 0, 0, 618, 619, 620, 677, 1169, 1206, 0,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 1082, 0, 0, 2363,
	0, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 0, 1077,
	0, 0, 0, 0, 0, 0, 1075, 1076, 275, 277,
	276, 278, 279, 280, 281, 1108, 282, 283, 0, 1106,
	0, 0, 0, 1148, 1112, 0, 0, 0, 284, 285,
	1188, 286, 287, 288, 289, 290, 291, 631, 1161, 0,
	292, 1168, 293, 1167, 0, 1178, 294, 295, 296, 297,
	298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638, 0,
	301, 302, 1154, 0, 1135, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1189, 325, 326, 327, 1138, 1136, 1137,
	1144, 1140, 1139, 1143, 328, 329, 330, 331, 332, 1171,
	333, 1165, 1164, 1084, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1156, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1090, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1179, 1180, 364, 1103, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1163, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1190, 371, 372, 373, 1176, 1177,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1186, 0, 1113, 384, 0, 385, 386, 387, 388,
	389, 1149, 1150, 1153, 469, 1192, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1191, 400, 1158, 1159, 0, 1119, 0,
	402, 403, 1193, 1151, 1194, 404, 405, 406, 1195, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1187, 1196, 418, 419, 1197,
	0, 420, 0, 0, 0, 421, 422, 425, 1142, 1141,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1198,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1199, 465, 454, 1081, 274, 1200, 466,
	467, 1104, 1152, 468, 1166, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 1201, 479, 1202, 1181, 480, 481, 1091, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 1182, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1162, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 1203, 534, 535,
	536, 537, 538, 1092, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 1145, 561, 562, 544, 545,
	563, 564, 1204, 565, 566, 567, 568, 569, 570, 571,
	1160, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 1207, 579, 580, 581, 582, 1183, 586, 587,
	0, 588, 589, 1078, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 1172, 1173,
	1174, 1175, 0, 607, 0, 599, 600, 601, 1184, 602,
	1185, 1102, 603, 604, 605, 606, 0, 608, 609, 0,
	1085, 610, 611, 612, 614, 615, 613, 616, 1146, 617,
	0, 0, 618, 619, 620, 677, 1169, 1206, 0, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 1082, 0, 0, 1709, 0,
	1124, 1096, 1097, 1098, 1094, 1095, 1107, 0, 1077, 0,
	0, 0, 0, 0, 0, 1075, 1076, 275, 277, 276,
	278, 279, 280, 281, 1108, 282, 283, 0, 1106, 0,
	0, 0, 1148, 1112, 0, 0, 0, 284, 285, 1188,
	286, 287, 288, 289, 290, 291, 631, 1161, 0, 292,
	1168, 293, 1167, 0, 1178, 294, 295, 296, 297, 298,
	299, 1114, 1147, 1079, 300, 1208, 1209, 638, 0, 301,
	302, 1154, 0, 1135, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1189, 325, 326, 327, 1138, 1136, 1137, 1144,
	1140, 1139, 1143, 328, 329, 330, 331, 332, 1171, 333,
	1165, 1164, 1084, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1156, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1090,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1179, 1180, 364, 1103, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1163, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1190, 371, 372, 373, 1176, 1177, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1186, 0, 1113, 384, 0, 385, 386, 387, 388, 389,
	1149, 1150, 1153, 469, 1192, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1191, 400, 1158, 1159, 0, 1119, 0, 402,
	403, 1193, 1151, 1194, 404, 405, 406, 1195, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1187, 1196, 418, 419, 1197, 0,
	420, 0, 0, 0, 421, 422, 425, 1142, 1141, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1198, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1199, 465, 454, 1081, 274, 1200, 466, 467,
	1104, 1152, 468, 1166, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	1201, 479, 1202, 1181, 480, 481, 1091, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 1182, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1162, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 1203, 534, 535, 536,
	537, 538, 1092, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 1145, 561, 562, 544, 545, 563,
	564, 1204, 565, 566, 567, 568, 569, 570, 571, 1160,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 1207, 579, 580, 581, 582, 1183, 586, 587, 0,
	588, 589, 1078, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 1172, 1173, 1174,
	1175, 0, 607, 0, 599, 600, 601, 1184, 602, 1185,
	1102, 603, 604, 605, 606, 0, 608, 609, 0, 1085,
	610, 611, 612, 614, 615, 613, 616, 1146, 617, 0,
	0, 618, 619, 620, 677, 1169, 1206, 0, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 1082, 0, 0, 1638, 0, 1124,
	1096, 1097, 1098, 1094, 1095, 1107, 0, 1077, 0, 0,
	0, 0, 0, 0, 1075, 1076, 275, 277, 276, 278,
	279, 280, 281, 1108, 282, 283, 0, 1106, 0, 0,
	0, 1148, 1112, 0, 0, 0, 284, 285, 1188, 286,
	287, 288, 289, 290, 291, 631, 1161, 0, 292, 1168,
	293, 1167, 0, 1178, 294, 295, 296, 297, 298, 299,
	1114, 1147, 1079, 300, 1208, 1209, 638, 0, 301, 302,
	1154, 0, 1135, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1189, 325, 326, 327, 1138, 1136, 1137, 1144, 1140,
	1139, 1143, 328, 329, 330, 331, 332, 1171, 333, 1165,
	1164, 1084, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1156, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1090, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1179,
	1180, 364, 1103, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1163, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1190, 371, 372, 373, 1176, 1177, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1186,
	0, 1113, 384, 0, 385, 386, 387, 388, 389, 1149,
	1150, 1153, 469, 1192, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1191, 400, 1158, 1159, 0, 1119, 0, 402, 403,
	1193, 1151, 1194, 404, 405, 406, 1195, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1187, 1196, 418, 419, 1197, 0, 420,
	0, 0, 0, 421, 422, 425, 1142, 1141, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1198, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1199, 465, 454, 1081, 274, 1200, 466, 467, 1104,
	1152, 468, 1166, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 1201,
	479, 1202, 1181, 480, 481, 1091, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 1182, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1162, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 1203, 534, 535, 536, 537,
	538, 1092, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 1145, 561, 562, 544, 545, 563, 564,
	1204, 565, 566, 567, 568, 569, 570, 571, 1160, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	1207, 579, 580, 581, 582, 1183, 586, 587, 0, 588,
	589, 1078, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 1172, 1173, 1174, 1175,
	0, 607, 0, 599, 600, 601, 1184, 602, 1185, 1102,
	603, 604, 605, 606, 0, 608, 609, 0, 1085, 610,
	611, 612, 614, 615, 613, 616, 1146, 617, 0, 0,
	618, 619, 620, 677, 1169, 1206, 0, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 1082, 0, 0, 1633, 0, 1124, 1096,
	1097, 1098, 1094, 1095, 1107, 0, 1077, 0, 0, 0,
	0, 0, 0, 1075, 1076, 275, 277, 276, 278, 279,
	280, 281, 1108, 282, 283, 0, 1106, 0, 0, 0,
	1148, 1112, 0, 0, 0, 284, 285, 1188, 286, 287,
	288, 289, 290, 291, 631, 1161, 0, 292, 1168, 293,
	1167, 0, 1178, 294, 295, 296, 297, 298, 299, 1114,
	1147, 1079, 300, 1208, 1209, 638, 0, 301, 302, 1154,
	0, 1135, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1189, 325, 326, 327, 1138, 1136, 1137, 1144, 1140, 1139,
	1143, 328, 329, 330, 331, 332, 1171, 333, 1165, 1164,
	1084, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1156, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1090, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1179, 1180,
	364, 1103, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1163, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1190, 371, 372, 373, 1176, 1177, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1186, 0,
	1113, 384, 0, 385, 386, 387, 388, 389, 1149, 1150,
	1153, 469, 1192, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1191, 400, 1158, 1159, 0, 1119, 0, 402, 403, 1193,
	1151, 1194, 404, 405, 406, 1195, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1187, 1196, 418, 419, 1197, 0, 420, 0,
	0, 0, 421, 422, 425, 1142, 1141, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1198, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1199, 465, 454, 1081, 274, 1200, 466, 467, 1104, 1152,
	468, 1166, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 1201, 479,
	1202, 1181, 480, 481, 1091, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 1182, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1162, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 1203, 534, 535, 536, 537, 538,
	1092, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 1145, 561, 562, 544, 545, 563, 564, 1204,
	565, 566, 567, 568, 569, 570, 571, 1160, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 1207,
	579, 580, 581, 582, 1183, 586, 587, 0, 588, 589,
	1078, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 1172, 1173, 1174, 1175, 0,
	607, 0, 599, 600, 601, 1184, 602, 1185, 1102, 603,
	604, 605, 606, 0, 608, 609, 0, 1085, 610, 611,
	612, 614, 615, 613, 616, 1146, 617, 0, 0, 618,
	619, 620, 677, 1169, 1206, 0, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 1082, 0, 0, 1624, 0, 1124, 1096, 1097,
	1098, 1094, 1095, 1107, 0, 1077, 0, 0, 0, 0,
	0, 0, 1075, 1076, 275, 277, 276, 278, 279, 280,
	281, 1108, 282, 283, 0, 1106, 0, 0, 0, 1148,
	1112, 0, 0, 0, 284, 285, 1188, 286, 287, 288,
	289, 290, 291, 631, 1161, 0, 292, 1168, 293, 1167,
	0, 1178, 294, 295, 296, 297, 298, 299, 1114, 1147,
	1079, 300, 1208, 1209, 638, 0, 301, 302, 1154, 0,
	1135, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1189,
	325, 326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143,
	328, 329, 330, 331, 332, 1171, 333, 1165, 1164, 1084,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1156, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1090, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1179, 1180, 364,
	1103, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1163, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1190, 371, 372, 373, 1176, 1177, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1186, 0, 1113,
	384, 0, 385, 386, 387, 388, 389, 1149, 1150, 1153,
	469, 1192, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1191,
	400, 1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151,
	1194, 404, 405, 406, 1195, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1187, 1196, 418, 419, 1197, 0, 420, 0, 0,
	0, 421, 422, 425, 1142, 1141, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1198, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1199,
	465, 454, 1081, 274, 1200, 466, 467, 1104, 1152, 468,
	1166, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 1201, 479, 1202,
	1181, 480, 481, 1091, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 1182, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1162, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 1203, 534, 535, 536, 537, 538, 1092,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 1145, 561, 562, 544, 545, 563, 564, 1204, 565,
	566, 567, 568, 569, 570, 571, 1160, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 1207, 579,
	580, 581, 582, 1183, 586, 587, 0, 588, 589, 1078,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 1172, 1173, 1174, 1175, 0, 607,
	0, 599, 600, 601, 1184, 602, 1185, 1102, 603, 604,
	605, 606, 0, 608, 609, 0, 1085, 610, 611, 612,
	614, 615, 613, 616, 1146, 617, 0, 0, 618, 619,
	620, 677, 1169, 1206, 0, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 1082, 0, 0, 1619, 0, 1124, 1096, 1097, 1098,
	1094, 1095, 1107, 0, 1077, 0, 0, 0, 0, 0,
	0, 1075, 1076, 275, 277, 276, 278, 279, 280, 281,
	1108, 282, 283, 0, 1106, 0, 0, 0, 1148, 1112,
	0, 0, 0, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 1161, 0, 292, 1168, 293, 1167, 0,
	1178, 294, 295, 296, 297, 298, 299, 1114, 1147, 1079,
	300, 1208, 1209, 638, 0, 301, 302, 1154, 0, 1135,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328,
	329, 330, 331, 332, 1171, 333, 1165, 1164, 1084, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1156, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1090, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1179, 1180, 364, 1103,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1163,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 1176, 1177, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1186, 0, 1113, 384,
	0, 385, 386, 387, 388, 389, 1149, 1150, 1153, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1191, 400,
	1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1187, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 1142, 1141, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 1081, 274, 1200, 466, 467, 1104, 1152, 468, 1166,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 1181,
	480, 481, 1091, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 1182, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1162,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 1092, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	1145, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 1160, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 1207, 579, 580,
	581, 582, 1183, 586, 587, 0, 588, 589, 1078, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 1172, 1173, 1174, 1175, 0, 607, 0,
	599, 600, 601, 1184, 602, 1185, 1102, 603, 604, 605,
	606, 0, 608, 609, 0, 1085, 610, 611, 612, 614,
	615, 613, 616, 1146, 617, 0, 0, 618, 619, 620,
	677, 1169, 1206, 0, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	1082, 0, 0, 1531, 0, 1124, 1096, 1097, 1098, 1094,
	1095, 1107, 0, 1077, 0, 0, 0, 0, 0, 0,
	1075, 1076, 275, 277, 276, 278, 279, 280, 281, 1108,
	282, 283, 0, 1106, 0, 0, 0, 1148, 1112, 0,
	0, 0, 284, 285, 1188, 286, 287, 288, 289, 290,
	291, 631, 1161, 0, 292, 1168, 293, 1167, 0, 1178,
	294, 295, 296, 297, 298, 299, 1114, 1147, 1079, 300,
	1208, 1209, 638, 0, 301, 302, 1154, 0, 1135, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1189, 325, 326,
	327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329,
	330, 331, 332, 1171, 333, 1165, 1164, 1084, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1156, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1090, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1179, 1180, 364, 1103, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1163, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1190, 371,
	372, 373, 1176, 1177, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1186, 0, 1113, 384, 0,
	385, 386, 387, 388, 389, 1530, 1150, 1153, 469, 1192,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1191, 400, 1158,
	1159, 0, 1119, 0, 402, 403, 1193, 1151, 1194, 404,
	405, 406, 1195, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1187,
	1196, 418, 419, 1197, 0, 420, 0, 0, 0, 421,
	422, 425, 1142, 1141, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1198, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1199, 465, 454,
	1081, 274, 1200, 466, 467, 1104, 1152, 468, 1166, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 1201, 479, 1202, 1181, 480,
	481, 1091, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 1182, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1162, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 1203, 534, 535, 536, 537, 538, 1092, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 1145,
	561, 562, 544, 545, 563, 564, 1204, 565, 566, 567,
	568, 569, 570, 571, 1160, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 1207, 579, 580, 581,
	582, 1183, 586, 587, 0, 588, 589, 1078, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 1172, 1173, 1174, 1175, 0, 607, 0, 599,
	600, 601, 1184, 602, 1185, 1102, 603, 604, 605, 606,
	0, 608, 609, 0, 1085, 610, 611, 612, 614, 615,
	613, 616, 1146, 617, 0, 0, 618, 619, 620, 677,
	1169, 1206, 0, 622, 621, 623, 680, 0, 624, 0,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 1082,
	0, 0, 1525, 0, 1124, 1096, 1097, 1098, 1094, 1095,
	1107, 0, 1077, 0, 0, 0, 0, 0, 0, 1075,
	1076, 275, 277, 276, 278, 279, 280, 281, 1108, 282,
	283, 0, 1106, 0, 0, 0, 1148, 1112, 0, 0,
	0, 284, 285, 1188, 286, 287, 288, 289, 290, 291,
	631, 1161, 0, 292, 1168, 293, 1167, 0, 1178, 294,
	295, 296, 297, 298, 299, 1114, 1147, 1079, 300, 1208,
	1209, 638, 0, 301, 302, 1154, 0, 1135, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1189, 325, 326, 327,
	1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330,
	331, 332, 1171, 333, 1165, 1164, 1084, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1156, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1090, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1179, 1180, 364, 1103, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1163, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1190, 371, 372,
	373, 1176, 1177, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1186, 0, 1113, 384, 0, 385,
	386, 387, 388, 389, 1524, 1150, 1153, 469, 1192, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1191, 400, 1158, 1159,
	0, 1119, 0, 402, 403, 1193, 1151, 1194, 404, 405,
	406, 1195, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1187, 1196,
	418, 419, 1197, 0, 420, 0, 0, 0, 421, 422,
	425, 1142, 1141, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1198, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1199, 465, 454, 1081,
	274, 1200, 466, 467, 1104, 1152, 468, 1166, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 1201, 479, 1202, 1181, 480, 481,
	1091, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 1182, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1162, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	1203, 534, 535, 536, 537, 538, 1092, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 1145, 561,
	562, 544, 545, 563, 564, 1204, 565, 566, 567, 568,
	569, 570, 571, 1160, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 1207, 579, 580, 581, 582,
	1183, 586, 587, 0, 588, 589, 1078, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 1172, 1173, 1174, 1175, 0, 607, 0, 599, 600,
	601, 1184, 602, 1185, 1102, 603, 604, 605, 606, 0,
	608, 609, 0, 1085, 610, 611, 612, 614, 615, 613,
	616, 1146, 617, 0, 0, 618, 619, 620, 677, 1169,
	1206, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 1082, 0,
	0, 1518, 0, 1124, 1096, 1097, 1098, 1094, 1095, 1107,
	0, 1077, 0, 0, 0, 0, 0, 0, 1075, 1076,
	275, 277, 276, 278, 279, 280, 281, 1108, 282, 283,
	0, 1106, 0, 0, 0, 1148, 1112, 0, 0, 0,
	284, 285, 1188, 286, 287, 288, 289, 290, 291, 631,
	1161, 0, 292, 1168, 293, 1167, 0, 1178, 294, 295,
	296, 297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209,
	638, 0, 301, 302, 1154, 0, 1135, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1189, 325, 326, 327, 1138,
	1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331,
	332, 1171, 333, 1165, 1164, 1084, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1156, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1090, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1179, 1180, 364, 1103, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1163, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1190, 371, 372, 373,
	1176, 1177, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1186, 0, 1113, 384, 0, 385, 386,
	387, 388, 389, 1149, 1150, 1153, 469, 1192, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1191, 400, 1158, 1159, 0,
	1119, 0, 402, 403, 1193, 1151, 1194, 404, 405, 406,
	1195, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1187, 1196, 418,
	419, 1197, 0, 420, 0, 0, 0, 421, 422, 425,
	1142, 1141, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1198, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1199, 465, 454, 1081, 274,
	1200, 466, 467, 1104, 1152, 468, 1166, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 1201, 479, 1202, 1181, 480, 481, 1091,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	1182, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1162, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 1203,
	534, 535, 536, 537, 538, 1092, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 1145, 561, 562,
	544, 545, 563, 564, 1204, 565, 566, 567, 568, 569,
	570, 571, 1160, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 1207, 579, 580, 581, 582, 1183,
	586, 587, 0, 588, 589, 1078, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	1172, 1173, 1174, 1175, 0, 607, 0, 599, 600, 601,
	1184, 602, 1185, 1102, 603, 604, 605, 606, 0, 608,
	609, 0, 1085, 610, 611, 612, 614, 615, 613, 616,
	1146, 617, 0, 0, 618, 619, 620, 677, 1169, 1206,
	0, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 1082, 0, 0,
	1335, 0, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 0,
	1077, 0, 0, 0, 0, 0, 0, 1075, 1076, 275,
	277, 276, 278, 279, 280, 281, 1108, 282, 283, 0,
	1106, 0, 0, 0, 1148, 1112, 0, 0, 0, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 1161,
	0, 292, 1168, 293, 1167, 0, 1178, 294, 295, 296,
	297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638,
	0, 301, 302, 1154, 0, 1135, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1189, 325, 326, 327, 1138, 1136,
	1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331, 332,
	1171, 333, 1165, 1164, 1084, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1156,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1090, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1179, 1180, 364, 1103, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1163, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1190, 371, 372, 373, 1176,
	1177, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1186, 0, 1113, 384, 0, 385, 386, 387,
	388, 389, 1149, 1150, 1153, 469, 1192, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1191, 400, 1158, 1159, 0, 1119,
	0, 402, 403, 1193, 1151, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1187, 1196, 418, 419,
	1197, 0, 420, 0, 0, 0, 421, 422, 425, 1142,
	1141, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1081, 274, 1200,
	466, 467, 1104, 1152, 468, 1166, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 1201, 479, 1202, 1181, 480, 481, 1091, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 1182,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1162, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 1092, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 1145, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 1160, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 1207, 579, 580, 581, 582, 1183, 586,
	587, 0, 588, 589, 1078, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 1172,
	1173, 1174, 1175, 0, 607, 0, 599, 600, 601, 1184,
	602, 1185, 1102, 603, 604, 605, 606, 0, 608, 609,
	0, 1085, 610, 611, 612, 614, 615, 613, 616, 1146,
	617, 0, 0, 618, 619, 620, 677, 1169, 1206, 0,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 1082, 0, 0, 0,
	0, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 0, 1077,
	0, 0, 0, 0, 0, 0, 1075, 1076, 275, 277,
	276, 278, 279, 280, 281, 1108, 282, 283, 0, 1106,
	0, 0, 0, 1148, 1112, 0, 0, 0, 284, 285,
	1188, 286, 287, 288, 289, 290, 291, 631, 1161, 0,
	292, 1168, 293, 1167, 0, 1178, 294, 295, 296, 297,
	298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638, 0,
	301, 302, 1154, 0, 1135, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1189, 325, 326, 327, 1138, 1136, 1137,
	1144, 1140, 1139, 1143, 328, 329, 330, 331, 332, 1171,
	333, 1165, 1164, 1084, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 1156, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	1090, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1179, 1180, 364, 1103, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 1163, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1190, 371, 372, 373, 1176, 1177,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1186, 0, 1113, 384, 0, 385, 386, 387, 388,
	389, 1149, 1150, 1153, 469, 1192, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1191, 400, 1158, 1159, 0, 1119, 0,
	402, 403, 1193, 1151, 1194, 404, 405, 406, 1195, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1187, 1196, 418, 419, 1197,
	0, 420, 0, 0, 0, 421, 422, 425, 1142, 1141,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1198,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1199, 465, 454, 1081, 274, 1200, 466,
	467, 1104, 1152, 468, 1166, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 1201, 479, 1202, 1181, 480, 481, 1091, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 1182, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 1162, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 1203, 534, 535,
	536, 537, 538, 1092, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 1145, 561, 562, 544, 545,
	563, 564, 1204, 565, 566, 567, 568, 569, 570, 571,
	1160, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 1207, 579, 580, 581, 582, 1183, 586, 587,
	0, 588, 589, 1078, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 1172, 1173,
	1174, 1175, 0, 607, 0, 599, 600, 601, 1184, 602,
	1185, 1102, 603, 604, 605, 606, 0, 608, 609, 0,
	1085, 610, 611, 612, 614, 615, 613, 616, 1146, 617,
	0, 0, 618, 619, 620, 677, 1169, 1206, 0, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 1082, 0, 0, 0, 0,
	1124, 1096, 1097, 1098, 1094, 1095, 1107, 0, 1077, 0,
	0, 0, 0, 0, 0, 1075, 1076, 275, 277, 276,
	278, 279, 280, 281, 1108, 282, 283, 0, 1106, 0,
	0, 0, 1148, 1112, 0, 0, 0, 284, 285, 1188,
	286, 287, 288, 289, 290, 291, 631, 1161, 0, 292,
	1168, 293, 1167, 0, 1178, 294, 295, 296, 297, 298,
	299, 1114, 1147, 1079, 300, 1208, 1209, 638, 0, 301,
	302, 1154, 0, 1135, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1189, 325, 326, 4712, 1138, 1136, 1137, 1144,
	1140, 1139, 1143, 328, 329, 330, 331, 332, 1171, 333,
	1165, 1164, 1084, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 1156, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 1090,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1179, 1180, 364, 1103, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 1163, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1190, 371, 372, 373, 1176, 1177, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1186, 0, 1113, 384, 0, 385, 386, 387, 388, 389,
	1149, 1150, 1153, 469, 1192, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1191, 400, 1158, 1159, 0, 1119, 0, 402,
	403, 1193, 1151, 1194, 404, 405, 406, 1195, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1187, 1196, 418, 419, 1197, 0,
	420, 0, 0, 0, 421, 422, 425, 1142, 1141, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1198, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1199, 465, 454, 1081, 274, 1200, 466, 467,
	1104, 1152, 468, 1166, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	1201, 479, 1202, 1181, 480, 481, 1091, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 1182, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 1162, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 1203, 534, 535, 536,
	537, 538, 1092, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 1145, 561, 562, 544, 545, 563,
	564, 1204, 565, 566, 567, 568, 569, 570, 571, 1160,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 1207, 579, 580, 581, 582, 1183, 586, 587, 0,
	588, 589, 1078, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 1172, 1173, 1174,
	1175, 0, 607, 0, 599, 600, 601, 1184, 602, 1185,
	1102, 603, 604, 605, 606, 0, 4711, 609, 0, 1085,
	610, 611, 612, 614, 615, 613, 616, 1146, 617, 0,
	0, 618, 619, 620, 677, 1169, 1206, 0, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 1082, 0, 0, 0, 0, 1124,
	1096, 1097, 1098, 1094, 1095, 1107, 0, 1077, 0, 0,
	0, 0, 0, 0, 1075, 1076, 275, 277, 276, 278,
	279, 280, 281, 1108, 282, 283, 0, 1106, 0, 0,
	0, 1148, 1112, 0, 0, 0, 284, 285, 1188, 286,
	287, 288, 289, 290, 291, 4710, 1161, 0, 292, 1168,
	293, 1167, 0, 1178, 294, 295, 296, 297, 298, 299,
	1114, 1147, 1079, 300, 1208, 1209, 638, 0, 301, 302,
	1154, 0, 1135, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1189, 325, 326, 4712, 1138, 1136, 1137, 1144, 1140,
	1139, 1143, 328, 329, 330, 331, 332, 1171, 333, 1165,
	1164, 1084, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 1156, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 1090, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1179,
	1180, 364, 1103, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 1163, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1190, 371, 372, 373, 1176, 1177, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1186,
	0, 1113, 384, 0, 385, 386, 387, 388, 389, 1149,
	1150, 1153, 469, 1192, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1191, 400, 1158, 1159, 0, 1119, 0, 402, 403,
	1193, 1151, 1194, 404, 405, 406, 1195, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 1187, 1196, 418, 419, 1197, 0, 420,
	0, 0, 0, 421, 422, 425, 1142, 1141, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1198, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1199, 465, 454, 1081, 274, 1200, 466, 467, 1104,
	1152, 468, 1166, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 1201,
	479, 1202, 1181, 480, 481, 1091, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 1182, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 1162, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 1203, 534, 535, 536, 537,
	538, 1092, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 1145, 561, 562, 544, 545, 563, 564,
	1204, 565, 566, 567, 568, 569, 570, 571, 1160, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	1207, 579, 580, 581, 582, 1183, 586, 587, 0, 588,
	589, 1078, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 1172, 1173, 1174, 1175,
	0, 607, 0, 599, 600, 601, 1184, 602, 1185, 1102,
	603, 604, 605, 606, 0, 4711, 609, 0, 1085, 610,
	611, 612, 614, 615, 613, 616, 1146, 617, 0, 0,
	618, 619, 620, 677, 1169, 1206, 0, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 1082, 0, 0, 0, 0, 1124, 1096,
	1097, 1098, 1094, 1095, 1107, 0, 1077, 0, 0, 0,
	0, 0, 0, 1075, 1076, 275, 277, 276, 278, 279,
	280, 281, 1108, 282, 283, 0, 1106, 0, 0, 0,
	1148, 1112, 0, 0, 0, 284, 285, 1188, 286, 287,
	288, 289, 290, 291, 631, 1161, 0, 292, 1168, 293,
	1167, 0, 1178, 294, 295, 296, 297, 298, 299, 1114,
	1147, 1079, 300, 1208, 1209, 638, 0, 301, 302, 1154,
	0, 1135, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1189, 325, 4339, 327, 1138, 1136, 1137, 1144, 1140, 1139,
	1143, 328, 329, 330, 331, 332, 1171, 333, 1165, 1164,
	1084, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 1156, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 1090, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 1179, 1180,
	364, 1103, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 1163, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1190, 371, 372, 373, 1176, 1177, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 1186, 0,
	4340, 384, 0, 385, 386, 387, 388, 389, 1149, 1150,
	1153, 469, 1192, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	1191, 400, 1158, 1159, 0, 1119, 0, 402, 403, 1193,
	1151, 1194, 404, 405, 406, 1195, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 1187, 1196, 418, 419, 1197, 0, 420, 0,
	0, 0, 421, 422, 425, 1142, 1141, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1198, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1199, 465, 454, 1081, 274, 1200, 466, 467, 1104, 1152,
	468, 1166, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 1201, 479,
	1202, 1181, 480, 481, 1091, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 1182, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 1162, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 1203, 534, 535, 536, 4338, 538,
	1092, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 1145, 561, 562, 544, 545, 563, 564, 1204,
	565, 566, 567, 568, 569, 570, 571, 1160, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 1207,
	579, 580, 581, 582, 1183, 586, 587, 0, 588, 589,
	1078, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 1172, 1173, 1174, 1175, 0,
	607, 0, 599, 600, 601, 1184, 602, 1185, 1102, 603,
	604, 605, 606, 0, 608, 609, 0, 1085, 610, 611,
	612, 614, 615, 613, 616, 1146, 617, 0, 0, 618,
	619, 620, 677, 1169, 1206, 0, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 1082, 0, 0, 0, 0, 1124, 1096, 1097,
	1098, 3168, 3169, 1107, 0, 1077, 0, 0, 0, 0,
	0, 0, 1075, 1076, 275, 277, 276, 278, 279, 280,
	281, 1108, 282, 283, 0, 1106, 0, 0, 0, 1148,
	1112, 0, 0, 0, 284, 285, 1188, 286, 287, 288,
	289, 290, 291, 631, 1161, 0, 292, 1168, 293, 1167,
	0, 1178, 294, 295, 296, 297, 298, 299, 1114, 1147,
	1079, 300, 1208, 1209, 638, 0, 301, 302, 1154, 0,
	1135, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1189,
	325, 326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143,
	328, 329, 330, 331, 332, 1171, 333, 1165, 1164, 1084,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1156, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 1090, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 1179, 1180, 364,
	1103, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	1163, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1190, 371, 372, 373, 1176, 1177, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 1186, 0, 1113,
	384, 0, 385, 386, 387, 388, 389, 1149, 1150, 1153,
	469, 1192, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 1191,
	400, 1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151,
	1194, 404, 405, 406, 1195, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 1187, 1196, 418, 419, 1197, 0, 420, 0, 0,
	0, 421, 422, 425, 1142, 1141, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1198, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1199,
	465, 454, 1081, 274, 1200, 466, 467, 1104, 1152, 468,
	1166, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 1201, 479, 1202,
	1181, 480, 481, 1091, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 1182, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	1162, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 1203, 534, 535, 536, 537, 538, 1092,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 1145, 561, 562, 544, 545, 563, 564, 1204, 565,
	566, 567, 568, 569, 570, 571, 1160, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 1207, 579,
	580, 581, 582, 1183, 586, 587, 0, 588, 589, 1078,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 1172, 1173, 1174, 1175, 0, 607,
	0, 599, 600, 601, 1184, 602, 1185, 1102, 603, 604,
	605, 606, 0, 608, 609, 0, 1085, 610, 611, 612,
	614, 615, 613, 616, 1146, 617, 0, 0, 618, 619,
	620, 677, 1169, 1206, 0, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 1082, 0, 0, 0, 0, 1124, 1096, 1097, 1098,
	3166, 3167, 1107, 0, 1077, 0, 0, 0, 0, 0,
	0, 1075, 1076, 275, 277, 276, 278, 279, 280, 281,
	1108, 282, 283, 0, 1106, 0, 0, 0, 1148, 1112,
	0, 0, 0, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 1161, 0, 292, 1168, 293, 1167, 0,
	1178, 294, 295, 296, 297, 298, 299, 1114, 1147, 1079,
	300, 1208, 1209, 638, 0, 301, 302, 1154, 0, 1135,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328,
	329, 330, 331, 332, 1171, 333, 1165, 1164, 1084, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 1156, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 1090, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1179, 1180, 364, 1103,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 1163,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 1176, 1177, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1186, 0, 1113, 384,
	0, 385, 386, 387, 388, 389, 1149, 1150, 1153, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1191, 400,
	1158, 1159, 0, 1119, 0, 402, 403, 1193, 1151, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	1187, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 1142, 1141, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 1081, 274, 1200, 466, 467, 1104, 1152, 468, 1166,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 1181,
	480, 481, 1091, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 1182, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 1162,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 1092, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	1145, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 1160, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 1207, 579, 580,
	581, 582, 1183, 586, 587, 0, 588, 589, 1078, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 1172, 1173, 1174, 1175, 0, 607, 0,
	599, 600, 601, 1184, 602, 1185, 1102, 603, 604, 605,
	606, 0, 608, 609, 0, 1085, 610, 611, 612, 614,
	615, 613, 616, 1146, 617, 0, 0, 618, 619, 620,
	677, 1169, 1206, 0, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	1082, 0, 0, 0, 0, 1124, 1096, 1097, 1098, 1094,
	1095, 1107, 0, 1077, 0, 0, 0, 0, 0, 0,
	1075, 1076, 275, 277, 276, 278, 279, 280, 281, 1108,
	282, 283, 0, 1106, 0, 0, 0, 1148, 1112, 0,
	0, 0, 284, 285, 1188, 286, 287, 288, 289, 290,
	291, 631, 1161, 0, 292, 1168, 293, 1167, 0, 1178,
	294, 295, 296, 297, 298, 299, 1114, 1147, 1079, 300,
	1208, 1209, 638, 0, 301, 302, 1154, 0, 1135, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1189, 325, 326,
	327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329,
	330, 331, 332, 1171, 333, 1165, 1164, 1084, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 1156, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 1090, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1179, 1180, 364, 1103, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 1163, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1190, 371,
	372, 373, 1176, 1177, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1186, 0, 1113, 384, 0,
	385, 386, 387, 388, 389, 1149, 1150, 1153, 469, 1192,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1191, 400, 1158,
	1159, 0, 1119, 0, 402, 403, 1193, 1151, 1194, 404,
	405, 406, 1195, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 1187,
	1196, 418, 419, 1197, 0, 420, 0, 0, 0, 421,
	422, 425, 1142, 1141, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1198, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1199, 465, 454,
	1081, 274, 1200, 466, 467, 1104, 1152, 468, 1166, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 1201, 479, 1202, 1181, 480,
	481, 1091, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 1182, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 1162, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 1203, 534, 535, 536, 537, 538, 1092, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 1145,
	561, 562, 544, 545, 563, 564, 1204, 565, 566, 567,
	568, 569, 570, 571, 1160, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 1207, 579, 580, 581,
	582, 1183, 586, 587, 0, 588, 589, 1078, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 1172, 1173, 1174, 1175, 0, 607, 0, 599,
	600, 601, 1184, 602, 1185, 1102, 603, 604, 605, 606,
	0, 608, 609, 0, 1085, 610, 611, 612, 614, 615,
	613, 616, 1146, 617, 0, 0, 618, 619, 620, 677,
	1169, 1206, 0, 622, 621, 623, 680, 0, 624, 0,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 1082,
	0, 0, 0, 0, 1124, 1096, 1097, 1098, 1094, 1095,
	1107, 0, 1077, 0, 0, 0, 0, 0, 0, 2431,
	2432, 275, 277, 276, 278, 279, 280, 281, 1108, 282,
	283, 0, 1106, 0, 0, 0, 1148, 1112, 0, 0,
	0, 284, 285, 1188, 286, 287, 288, 289, 290, 291,
	631, 1161, 0, 292, 1168, 293, 1167, 0, 1178, 294,
	295, 296, 297, 298, 299, 1114, 1147, 0, 300, 1208,
	1209, 638, 0, 301, 302, 1154, 0, 1135, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1189, 325, 326, 327,
	1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330,
	331, 332, 1171, 333, 1165, 1164, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 1156, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 1090, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 1179, 1180, 364, 1103, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 1163, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1190, 371, 372,
	373, 1176, 1177, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 1186, 0, 1113, 384, 0, 385,
	386, 387, 388, 389, 1149, 1150, 1153, 469, 1192, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 1191, 400, 1158, 1159,
	0, 1119, 0, 402, 403, 1193, 1151, 1194, 404, 405,
	406, 1195, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 1187, 1196,
	418, 419, 1197, 0, 420, 0, 0, 0, 421, 422,
	425, 1142, 1141, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1198, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1199, 465, 454, 0,
	274, 1200, 466, 467, 1104, 1152, 468, 1166, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 1201, 479, 1202, 1181, 480, 481,
	1091, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 1182, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 1162, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	1203, 534, 535, 536, 537, 538, 1092, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 1145, 561,
	562, 544, 545, 563, 564, 1204, 565, 566, 567, 568,
	569, 570, 571, 1160, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 1207, 579, 580, 581, 582,
	1183, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 1172, 1173, 1174, 1175, 0, 607, 0, 599, 600,
	601, 1184, 602, 1185, 1102, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 1146, 617, 0, 0, 618, 619, 620, 677, 1169,
	1206, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 0, 0,
	0, 0, 0, 1124, 1096, 1097, 1098, 1094, 1095, 1107,
	0, 2690, 0, 0, 0, 0, 0, 0, 2688, 2689,
	275, 277, 276, 278, 279, 280, 281, 1108, 282, 283,
	0, 1106, 0, 0, 0, 1148, 1112, 0, 0, 0,
	284, 285, 1188, 286, 287, 288, 289, 290, 291, 631,
	1161, 0, 292, 1168, 293, 1167, 0, 1178, 294, 295,
	296, 297, 298, 299, 1114, 1147, 0, 300, 1208, 1209,
	638, 0, 301, 302, 1154, 0, 1135, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1189, 325, 326, 327, 1138,
	1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331,
	332, 1171, 333, 1165, 1164, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	1156, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 1090, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1179, 1180, 364, 1103, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 1163, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1190, 371, 372, 373,
	1176, 1177, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1186, 0, 1113, 384, 0, 385, 386,
	387, 388, 389, 1149, 1150, 1153, 469, 1192, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1191, 400, 1158, 1159, 0,
	1119, 0, 402, 403, 1193, 1151, 1194, 404, 405, 406,
	1195, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1187, 1196, 418,
	419, 1197, 0, 420, 0, 0, 0, 421, 422, 425,
	1142, 1141, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1198, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1199, 465, 454, 0, 274,
	1200, 466, 467, 1104, 1152, 468, 1166, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 1201, 479, 1202, 1181, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	1182, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 1162, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 1203,
	534, 535, 536, 537, 538, 3161, 3162, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 1145, 561, 562,
	544, 545, 563, 564, 1204, 565, 566, 567, 568, 569,
	570, 571, 1160, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 1207, 579, 580, 581, 582, 1183,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	1172, 1173, 1174, 1175, 0, 607, 0, 599, 600, 601,
	1184, 602, 1185, 1102, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	1146, 617, 0, 0, 618, 619, 620, 677, 1169, 1206,
	0, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 1124, 1096, 1097, 1098, 1094, 1095, 1107, 0,
	0, 0, 0, 0, 0, 0, 0, 2113, 2114, 275,
	277, 276, 278, 279, 280, 281, 1108, 282, 283, 0,
	1106, 0, 0, 0, 1148, 1112, 0, 0, 0, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 0, 1161,
	0, 292, 1168, 293, 1167, 0, 1178, 294, 295, 296,
	297, 298, 299, 1114, 1147, 1079, 300, 1208, 1209, 638,
	0, 301, 302, 1154, 0, 1135, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1189, 325, 326, 4712, 1138, 1136,
	1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331, 332,
	1171, 333, 1165, 1164, 1084, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 1156,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 1090, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1179, 1180, 364, 1103, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 1163, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1190, 371, 372, 373, 1176,
	1177, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1186, 0, 1113, 384, 0, 385, 386, 387,
	388, 389, 1149, 1150, 1153, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1191, 400, 1158, 1159, 0, 1119,
	0, 402, 403, 0, 1151, 0, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 1187, 1196, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 1142,
	1141, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 1081, 274, 0,
	466, 467, 1104, 1152, 468, 1166, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 1201, 479, 1202, 1181, 480, 481, 1091, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 1182,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 1162, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 1092, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 1145, 561, 562, 544,
	545, 563, 564, 0, 565, 566, 567, 568, 569, 570,
	571, 1160, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 1207, 579, 580, 581, 582, 1183, 586,
	587, 0, 588, 589, 1078, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 1172,
	1173, 1174, 1175, 0, 607, 0, 599, 600, 601, 1184,
	602, 1185, 1102, 603, 604, 605, 606, 0, 4711, 609,
	0, 1085, 610, 611, 612, 614, 615, 613, 616, 1146,
	617, 0, 0, 618, 619, 620, 677, 1169, 1206, 0,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 1068,
	0, 1246, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1075, 1076, 275, 277,
	276, 278, 279, 280, 281, 1108, 282, 283, 0, 1106,
	0, 0, 0, 1148, 0, 0, 0, 0, 284, 285,
	1188, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 1147, 0, 300, 636, 637, 638, 0,
	301, 302, 1154, 0, 1135, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1189, 325, 326, 327, 1138, 1136, 1137,
	1144, 1140, 1139, 1143, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1179, 1180, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1190, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1186, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 1149, 1150, 1153, 469, 1192, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1191, 400, 653, 654, 0, 655, 0,
	402, 403, 1193, 1151, 1194, 404, 405, 406, 1195, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 1232,
	414, 416, 415, 0, 417, 1187, 1196, 418, 419, 1197,
	0, 420, 0, 0, 0, 421, 422, 425, 1142, 1141,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1198,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1199, 465, 454, 0, 274, 1200, 466,
	467, 0, 1152, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 1238, 474, 475, 476, 0, 0, 477, 478,
	660, 1201, 479, 1202, 1181, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 1182, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 1203, 534, 535,
	536, 537, 538, 667, 1240, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 234, 556,
	557, 555, 558, 559, 560, 1145, 561, 562, 544, 545,
	563, 564, 1204, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 1183, 586, 587,
	0, 588, 589, 0, 585, 576, 236, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 1184, 602,
	1185, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 1146, 617,
	0, 0, 618, 619, 620, 1608, 678, 679, 0, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 228, 625,
	626, 681, 627, 628, 629, 1246, 0, 229, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 1236, 0, 1956, 0, 0, 1148, 0, 0,
	0, 0, 284, 285, 1188, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 1147, 0, 300,
	636, 637, 638, 0, 301, 302, 1154, 0, 1135, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 1189, 325, 326,
	327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 1179, 1180, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 1190, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 1186, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 1149, 1150, 1153, 469, 1192,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 1191, 400, 653,
	654, 0, 655, 0, 402, 403, 1193, 1151, 1194, 404,
	405, 406, 1195, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 1232, 414, 416, 415, 0, 417, 1187,
	1196, 418, 419, 1197, 0, 420, 0, 0, 0, 421,
	422, 425, 1142, 1141, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 1198, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 1199, 465, 454,
	0, 274, 1200, 466, 467, 0, 1152, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 1238, 474, 475, 476,
	0, 0, 477, 478, 660, 1201, 479, 1202, 1181, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 1182, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 1203, 534, 535, 536, 537, 538, 667, 1240, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 234, 556, 557, 555, 558, 559, 560, 1145,
	561, 562, 544, 545, 563, 564, 1204, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 1183, 586, 587, 0, 588, 589, 0, 585, 576,
	236, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 1184, 602, 1185, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 1146, 617, 0, 0, 618, 619, 620, 1608,
	678, 679, 0, 622, 621, 623, 680, 0, 624, 0,
	0, 0, 228, 625, 626, 681, 627, 628, 629, 0,
	0, 229, 0, 0, 0, 0, 0, 0, 0, 0,
	3325, 0, 1246, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1236, 0, 1956, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 1148, 0, 0, 0, 0, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 1147, 0, 300, 636, 637, 638,
	0, 301, 302, 1154, 0, 1135, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1189, 325, 326, 327, 1138, 1136,
	1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 1179, 1180, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 1186, 0, 649, 384, 0, 385, 386, 387,
	388, 389, 1149, 1150, 1153, 469, 1192, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 1191, 400, 653, 654, 0, 655,
	0, 402, 403, 1193, 1151, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	1232, 414, 416, 415, 0, 417, 1187, 1196, 418, 419,
	1197, 0, 420, 0, 0, 0, 421, 422, 425, 1142,
	1141, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 0, 274, 1200,
	466, 467, 0, 1152, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 1238, 474, 475, 476, 0, 0, 477,
	478, 660, 1201, 479, 1202, 1181, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 1182,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 1240, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 1145, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 1183, 586,
	587, 0, 588, 589, 0, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 1184,
	602, 1185, 0, 603, 604, 605, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 1146,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 0,
	622, 621, 623, 680, 0, 624, 0, 1228, 0, 1246,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 1148, 0, 1236, 0, 1234, 284, 285, 1188, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 1147, 0, 300, 636, 637, 638, 0, 301, 302,
	1154, 0, 1135, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 1189, 325, 326, 327, 1138, 1136, 1137, 1144, 1140,
	1139, 1143, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 1179,
	1180, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 1190, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 1186,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 1149,
	1150, 1153, 469, 1192, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 1191, 400, 653, 654, 0, 655, 0, 402, 403,
	1193, 1151, 1194, 404, 405, 406, 1195, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 1232, 414, 416,
	415, 0, 417, 1187, 1196, 418, 419, 1197, 0, 420,
	0, 0, 0, 421, 422, 425, 1142, 1141, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 1198, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 1199, 465, 454, 0, 274, 1200, 466, 467, 0,
	1152, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	1238, 474, 475, 476, 0, 0, 477, 478, 660, 1201,
	479, 1202, 1181, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 1182, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 1203, 534, 535, 536, 537,
	538, 667, 1240, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 1145, 561, 562, 544, 545, 563, 564,
	1204, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 1183, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 1184, 602, 1185, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 1146, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 0, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 1246, 625, 626, 681,
	627, 628, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 1148, 0,
	1236, 0, 1234, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 1147, 0,
	300, 636, 637, 638, 0, 301, 302, 1154, 0, 1135,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 1138, 1136, 1137, 1144, 1140, 1139, 1143, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 1179, 1180, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 1186, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 1149, 1150, 1153, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 1191, 400,
	653, 654, 0, 655, 0, 402, 403, 1193, 1151, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 1232, 414, 416, 415, 0, 417,
	1187, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 1142, 1141, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 0, 274, 1200, 466, 467, 0, 1152, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 1238, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 1181,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 1182, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 667, 1240,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	1145, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 1183, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 1184, 602, 1185, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 1146, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 0, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 1246, 625, 626, 681, 627, 628, 629,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 1148, 0, 1236, 0, 1234,
	284, 285, 1188, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 1147, 0, 300, 636, 637,
	638, 0, 301, 302, 1154, 0, 1135, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 1189, 325, 326, 327, 1138,
	1136, 1137, 1144, 1140, 1139, 1143, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 1179, 1180, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 1190, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 1186, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 1149, 1150, 1153, 469, 1192, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 1191, 400, 653, 654, 0,
	655, 0, 402, 403, 1193, 1151, 1194, 404, 405, 406,
	1195, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 1187, 1196, 418,
	419, 1197, 0, 420, 0, 0, 0, 421, 422, 425,
	1142, 1141, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 1198, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 1199, 465, 454, 0, 274,
	1200, 466, 467, 0, 1152, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 1201, 479, 1202, 1181, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	1182, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 1203,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 1145, 561, 562,
	544, 545, 563, 564, 1204, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 1183,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	1184, 602, 1185, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	1146, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	0, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	1246, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 1148, 0, 0, 0, 4161, 284, 285, 1188,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 1147, 0, 300, 636, 637, 638, 0, 301,
	302, 1154, 0, 1135, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1189, 325, 326, 327, 1138, 1136, 1137, 1144,
	1140, 1139, 1143, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	1179, 1180, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1190, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	1186, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	1149, 1150, 1153, 469, 1192, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 1191, 400, 653, 654, 0, 655, 0, 402,
	403, 1193, 1151, 1194, 404, 405, 406, 1195, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 1187, 1196, 418, 419, 1197, 0,
	420, 0, 0, 0, 421, 422, 425, 1142, 1141, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1198, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1199, 465, 454, 0, 274, 1200, 466, 467,
	0, 1152, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	1201, 479, 1202, 1181, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 1182, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 1203, 534, 535, 536,
	537, 538, 667, 1240, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 1145, 561, 562, 544, 545, 563,
	564, 1204, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 1183, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 1184, 602, 1185,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 1146, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 0, 622, 621,
	623, 680, 0, 624, 269, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 2535, 2536, 2537, 2554, 2555, 2556,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 2557, 0, 630, 0, 0, 0,
	0, 284, 285, 1853, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 1838, 300, 636,
	637, 638, 0, 301, 302, 639, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 2547, 0, 311, 312,
	313, 310, 314, 0, 315, 2543, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 0, 0,
	2548, 2549, 2550, 2551, 365, 366, 367, 645, 0, 0,
	2542, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 653, 654,
	0, 655, 0, 402, 403, 0, 656, 0, 404, 405,
	406, 0, 407, 0, 2552, 2553, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 2545, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 0, 479, 0, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	0, 534, 535, 536, 537, 538, 667, 539, 2546, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 0, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 1837, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 0, 0,
	0, 0, 0, 0, 0, 1068, 0, 1328, 2532, 2533,
	2534, 2558, 2544, 2538, 0, 2540, 2541, 2539, 2526, 2527,
	2528, 2529, 2530, 2531, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 1188, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	1333, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1189,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1190, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 650, 651, 652,
	469, 1192, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1191,
	400, 653, 654, 0, 655, 0, 402, 403, 1193, 656,
	1194, 404, 405, 406, 1195, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 1196, 418, 419, 1197, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1198, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1199,
	465, 454, 0, 0, 1200, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 1201, 479, 1202,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 1203, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 234, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 1204, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 236, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 1608, 678, 679, 0, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 228, 625, 626, 681, 627, 628,
	629, 0, 0, 229, 1605, 0, 1328, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	189, 282, 283, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 1333,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 650, 651, 652, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1191, 400,
	653, 654, 0, 655, 0, 402, 403, 1193, 656, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 0, 0, 1200, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 234, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 236, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	1608, 678, 679, 0, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 228, 625, 626, 681, 627, 628, 629,
	1328, 1327, 229, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 189,
	0, 0, 630, 0, 0, 0, 0, 284, 285, 1188,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 638, 0, 301,
	302, 639, 0, 1333, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1189, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1190, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	650, 651, 652, 469, 1192, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1191, 400, 653, 654, 0, 655, 0, 402,
	403, 1193, 656, 1194, 404, 405, 406, 1195, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 1196, 418, 419, 1197, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1198, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1199, 465, 454, 0, 0, 1200, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	1201, 479, 1202, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 1203, 534, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 0, 561, 562, 544, 545, 563,
	564, 1204, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 0, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 1328, 1327, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 1630, 0, 0, 630, 0, 0, 0,
	0, 284, 285, 1188, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 638, 0, 301, 302, 639, 0, 1333, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1189, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1190, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 1192, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1191, 400, 653, 654,
	0, 655, 0, 402, 403, 1193, 656, 1194, 404, 405,
	406, 1195, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 1196,
	418, 419, 1197, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1198, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1199, 465, 454, 0,
	0, 1200, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 1201, 479, 1202, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	1203, 534, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 1204, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 1328, 1327,
	0, 0, 0, 0, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 3626, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 1188, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 1333, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1189, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1190, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 650, 651,
	652, 469, 1192, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1191, 400, 653, 654, 0, 655, 0, 402, 403, 1193,
	656, 1194, 404, 405, 406, 1195, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 1196, 418, 419, 1197, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1198, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1199, 465, 454, 0, 0, 1200, 466, 467, 0, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 1201, 479,
	1202, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 2305, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 1203, 534, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 1204,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 671, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 605, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 0, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 1328, 2217, 0, 0, 0, 0, 2218, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 1630, 0, 0, 630, 0, 0, 0, 0, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 636, 637, 638,
	0, 301, 302, 639, 0, 1333, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1189, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 648, 0, 649, 384, 0, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1191, 400, 653, 654, 0, 655,
	0, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 2216, 416, 415, 0, 417, 657, 1196, 418, 419,
	1197, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 0, 0, 1200,
	466, 467, 0, 658, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 0, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 0, 588, 589, 0, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 675,
	602, 676, 0, 603, 604, 605, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 0,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 0,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 1328, 1327, 0, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 1630, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 1333,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 650, 651, 652, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1191, 400,
	653, 654, 0, 655, 0, 402, 403, 1193, 656, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 0, 0, 1200, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 0, 622, 621, 623, 680, 1068, 624,
	269, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 284, 285, 1614,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 638, 0, 301,
	302, 639, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	650, 651, 652, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 653, 654, 0, 655, 0, 402,
	403, 0, 656, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	0, 479, 0, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 0, 534, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 234, 556, 557,
	555, 558, 559, 560, 0, 561, 562, 544, 545, 563,
	564, 0, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 236, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 1608, 678, 679, 0, 622, 621,
	623, 680, 0, 624, 269, 0, 0, 228, 625, 626,
	681, 627, 628, 629, 0, 0, 229, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 284, 285, 189, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 638, 0, 301, 302, 639, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 653, 654,
	0, 655, 0, 402, 403, 0, 656, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 0, 479, 0, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	0, 534, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 0, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 1246, 625, 626, 681, 627, 628, 629, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 1148, 0, 0, 0, 1970, 284, 285,
	1188, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 1147, 0, 300, 636, 637, 638, 0,
	301, 302, 1154, 0, 1135, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 1189, 325, 326, 327, 1138, 1136, 1137,
	1144, 1140, 1139, 1143, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 1179, 1180, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 1190, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 1186, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 1149, 1150, 1153, 469, 1192, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 1191, 400, 653, 654, 0, 655, 0,
	402, 403, 1193, 1151, 1194, 404, 405, 406, 1195, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 1187, 1196, 418, 419, 1197,
	0, 420, 0, 0, 0, 421, 422, 425, 1142, 1141,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 1198,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 1199, 465, 454, 0, 274, 1200, 466,
	467, 0, 1152, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 1201, 479, 1202, 1181, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 1182, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 1203, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 1145, 561, 562, 544, 545,
	563, 564, 1204, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 1183, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 1184, 602,
	1185, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 1146, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 0, 624, 269, 3068, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 0, 624, 269,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 4879, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 650,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 0, 622, 621, 623,
	680, 269, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	3576, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 269, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 1602, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 650, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	0, 622, 621, 623, 680, 0, 624, 269, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 3056, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 650, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 0, 622, 621, 623, 680, 0,
	624, 269, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	3738, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 903, 624, 808, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 2294, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 815, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 901, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	813, 590, 591, 592, 593, 594, 814, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 808, 622, 621, 623, 680, 0, 624, 0,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 275,
	277, 276, 278, 279, 280, 281, 2039, 282, 283, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 284,
	285, 818, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 636, 637, 638,
	0, 301, 302, 639, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 815, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 648, 0, 649, 384, 0, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 653, 654, 0, 655,
	0, 402, 403, 0, 656, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 657, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 658, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 0, 479, 0, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 0, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 2038, 551, 552, 553, 554, 0,
	2040, 557, 555, 558, 559, 560, 0, 561, 562, 544,
	545, 563, 564, 0, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 0, 588, 589, 0, 585, 576, 813, 590, 591,
	592, 593, 594, 814, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 675,
	602, 676, 0, 603, 604, 2037, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 0,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 808,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 275, 277, 276, 278,
	279, 280, 281, 1990, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 818, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 815, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 650,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 1989, 551, 552, 553, 554, 0, 1991, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 813, 590, 591, 592, 593, 594,
	814, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 1988, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 0, 622, 621, 623,
	680, 0, 624, 806, 0, 808, 0, 625, 626, 681,
	627, 628, 629, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 818, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 815, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	813, 590, 591, 592, 593, 594, 814, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 2012, 624, 0,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 0,
	0, 818, 0, 0, 284, 285, 1188, 286, 287, 288,
	289, 290, 291, 0, 2018, 0, 292, 2008, 293, 2024,
	0, 2031, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 2034, 2035, 0, 0, 301, 302, 0, 0,
	1333, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1189,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 1171, 333, 2022, 2021, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 1156, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 0, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 0, 0, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	2020, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1190, 371, 372, 373, 2029, 2030, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 0, 0, 0,
	384, 0, 385, 386, 387, 388, 389, 0, 0, 0,
	469, 1192, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1191,
	400, 2015, 2016, 0, 2011, 0, 402, 403, 1193, 0,
	1194, 404, 405, 406, 1195, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 0, 1196, 418, 419, 1197, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1198, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1199,
	465, 454, 0, 0, 1200, 466, 467, 0, 0, 468,
	2023, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 0, 1201, 479, 1202,
	0, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 2005, 493, 494, 495,
	2006, 496, 497, 498, 0, 499, 0, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	2019, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 1203, 534, 535, 536, 537, 538, 0,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 1204, 565,
	566, 567, 568, 569, 570, 571, 2017, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 2033, 579,
	580, 581, 582, 0, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 2025, 2026, 2027, 2028, 0, 607,
	0, 599, 600, 601, 0, 602, 0, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 0, 2009, 2032, 0, 622, 621, 623, 0, 0,
	624, 0, 0, 0, 0, 625, 626, 0, 627, 628,
	629, 808, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 1999, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 815, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 813, 590, 591, 592,
	593, 594, 814, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 808, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 818, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 815, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 650, 651,
	652, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 653, 654, 0, 655, 0, 402, 403, 0,
	656, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 0, 479,
	0, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 0, 2342, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	2343, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 0,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 813, 590, 591, 592, 593, 594, 814,
	596, 358, 597, 0, 598, 671, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 2344, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 269, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 818, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 0, 624, 0,
	1328, 2087, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 818, 630, 0, 0, 0, 0, 284, 285, 1188,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 638, 0, 301,
	302, 639, 0, 1333, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1189, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 3019, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1190, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	650, 651, 652, 469, 1192, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1191, 400, 653, 654, 0, 655, 0, 402,
	403, 1193, 656, 1194, 404, 405, 406, 1195, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 1196, 418, 419, 1197, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1198, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1199, 465, 454, 0, 0, 1200, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	1201, 479, 1202, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 1203, 534, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 3020, 561, 562, 544, 545, 563,
	564, 1204, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 0, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 1328, 1327, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 284, 285, 1188, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 638, 0, 301, 302, 639, 0, 1333, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1189, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1190, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 1192, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1191, 400, 653, 654,
	0, 655, 0, 402, 403, 1193, 656, 1194, 404, 405,
	406, 1195, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 1196,
	418, 419, 1197, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1198, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1199, 465, 454, 0,
	0, 1200, 466, 467, 3932, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 1201, 479, 1202, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	1203, 534, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 1204, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 1328, 1327,
	0, 0, 0, 0, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 1188, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 1333, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1189, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1190, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 650, 651,
	652, 469, 1192, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1191, 400, 653, 654, 0, 655, 0, 402, 403, 1193,
	656, 1194, 404, 405, 406, 1195, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 1196, 418, 419, 1197, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1198, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1199, 465, 454, 0, 0, 1200, 466, 467, 3538, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 1201, 479,
	1202, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 1203, 534, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 1204,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 671, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 605, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 0, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 1658, 0, 1328, 1327, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 284, 285, 1188, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 638, 0, 301, 302, 639, 0, 1333, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 1189, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 272, 0,
	0, 0, 0, 0, 1657, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 1190, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 1192, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 1191, 400, 653, 654,
	0, 655, 0, 402, 403, 1193, 656, 1194, 404, 405,
	406, 1195, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 1196,
	418, 419, 1197, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 1198, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 1199, 465, 454, 0,
	0, 1200, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 1201, 479, 1202, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 1656, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	1203, 534, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 1655, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 1204, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 0, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 1576, 0,
	1328, 1327, 0, 0, 0, 0, 1325, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 284, 285, 1188,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 638, 0, 301,
	302, 639, 0, 1333, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1189, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1190, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	1575, 651, 652, 469, 1192, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1191, 400, 653, 654, 0, 655, 0, 402,
	403, 1193, 656, 1194, 404, 405, 406, 1195, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 1196, 418, 419, 1197, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1198, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1199, 465, 454, 0, 0, 1200, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	1201, 479, 1202, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 1203, 534, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 0, 561, 562, 544, 545, 563,
	564, 1204, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 0, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 1536, 0, 1328, 1327, 0, 0,
	0, 0, 1325, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 1333,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 650, 651, 652, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1191, 400,
	653, 654, 0, 655, 0, 402, 403, 1193, 656, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 0, 0, 1200, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 0, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	1501, 0, 1328, 1327, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 636, 637, 638,
	0, 301, 302, 639, 0, 1333, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1189, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 648, 0, 649, 384, 0, 385, 386, 387,
	388, 389, 1500, 651, 652, 469, 1192, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1191, 400, 653, 654, 0, 655,
	0, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 657, 1196, 418, 419,
	1197, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 0, 0, 1200,
	466, 467, 0, 658, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 0, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 0, 588, 589, 0, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 675,
	602, 676, 0, 603, 604, 605, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 0,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 0,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 1322, 0, 1328, 1327,
	0, 0, 0, 0, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 1188, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 1333, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	1189, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 1190, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 1321, 651,
	652, 469, 1192, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	1191, 400, 653, 654, 0, 655, 0, 402, 403, 1193,
	656, 1194, 404, 405, 406, 1195, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 1196, 418, 419, 1197, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 1198, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	1199, 465, 454, 0, 0, 1200, 466, 467, 0, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 1201, 479,
	1202, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 1203, 534, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 1204,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 671, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 605, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 0, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 1328, 1327, 0, 0, 0, 0, 1325, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 284,
	285, 1188, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 636, 637, 638,
	0, 301, 302, 639, 0, 1333, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 1189, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 1190, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 648, 0, 649, 384, 0, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 1192, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 1191, 400, 653, 654, 0, 655,
	0, 402, 403, 1193, 656, 1194, 404, 405, 406, 1195,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 657, 1196, 418, 419,
	1197, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	1198, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 1199, 465, 454, 0, 0, 1200,
	466, 467, 0, 658, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 1201, 479, 1202, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 1203, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 0, 561, 562, 544,
	545, 563, 564, 1204, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 0, 588, 589, 0, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 675,
	602, 676, 0, 603, 604, 605, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 0,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 0,
	622, 621, 623, 680, 0, 624, 1328, 2087, 0, 0,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 1188, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 1333,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 1189, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 2084, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 1190,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 650, 651, 652, 469,
	1192, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 1191, 400,
	653, 654, 0, 655, 0, 402, 403, 1193, 656, 1194,
	404, 405, 406, 1195, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 1196, 418, 419, 1197, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 1198, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 1199, 465,
	454, 0, 0, 1200, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 1201, 479, 1202, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 1203, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 1204, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 0, 622, 621, 623, 680, 0, 624,
	1328, 1327, 0, 0, 625, 626, 681, 627, 628, 629,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 284, 285, 1188,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 638, 0, 301,
	302, 639, 0, 1333, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 1189, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 1190, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	650, 651, 652, 469, 1192, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 1191, 400, 653, 654, 0, 655, 0, 402,
	403, 1193, 656, 1194, 404, 405, 406, 1195, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 1196, 418, 419, 1197, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 1198, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 1199, 465, 454, 0, 0, 1200, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	1201, 479, 1202, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 1203, 534, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 0, 561, 562, 544, 545, 563,
	564, 1204, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 1328, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 1188, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	1333, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 1189,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	1190, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 650, 651, 652,
	469, 1192, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 1191,
	400, 653, 654, 0, 655, 0, 402, 403, 1193, 656,
	1194, 404, 405, 406, 1195, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 1196, 418, 419, 1197, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 1198, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 1199,
	465, 454, 0, 0, 1200, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 1201, 479, 1202,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 1203, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 1204, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 269, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 638, 2859, 301, 302, 639, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 2856, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 2863, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 3081, 0,
	0, 0, 0, 0, 365, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 2862, 0, 0, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	3078, 397, 398, 399, 401, 0, 0, 400, 653, 654,
	0, 655, 0, 402, 3080, 0, 656, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 0,
	418, 419, 3077, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 0, 479, 0, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 2861, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	0, 534, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 0, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 3079, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 269, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 2859,
	301, 302, 639, 0, 0, 2853, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	2856, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 2863, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 2862, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 2852, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 2861, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	2860, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 1735, 624, 269, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 1734,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 1733, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 1736, 543, 550, 551, 552,
	553, 554, 0, 1732, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	1730, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 1731, 621, 623, 680, 1476, 624, 269,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 1478,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	1238, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 0, 622, 621, 623,
	680, 1473, 624, 269, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 1475, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 1238, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	0, 622, 621, 623, 680, 1380, 624, 269, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 1382, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 1238, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 0, 622, 621, 623, 680, 713,
	624, 269, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 712, 280, 281, 702, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 705,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 706,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 707, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 701, 624, 269, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 702,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 705, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 706, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 707, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 269, 622, 621, 623, 680, 0, 624, 0,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 275,
	277, 276, 278, 279, 280, 281, 702, 282, 283, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 636, 637, 638,
	0, 301, 302, 639, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	705, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	706, 383, 648, 0, 649, 384, 0, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 653, 654, 0, 655,
	0, 402, 403, 0, 656, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 657, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 658, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 0, 479, 0, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 0, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 707,
	556, 557, 555, 558, 559, 560, 0, 561, 562, 544,
	545, 563, 564, 0, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 0, 588, 589, 0, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 675,
	602, 676, 0, 603, 604, 605, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 0,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 269,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 275, 277, 276, 278,
	279, 280, 281, 702, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 705, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 3943, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 650,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 707, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 269, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 650, 651, 652, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	653, 654, 0, 655, 0, 402, 403, 0, 656, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 1238, 474, 475,
	476, 0, 0, 477, 478, 660, 0, 479, 0, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 0, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 0, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 269, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 650, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 3481, 465, 454, 0, 274,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	0, 622, 621, 623, 680, 3026, 624, 269, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 3025, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 0, 622, 621, 623, 680, 2311,
	624, 269, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 269, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 650, 651,
	652, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 653, 654, 0, 655, 0, 402, 403, 0,
	656, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 0, 479,
	0, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 0, 534, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 0,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 2250, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 671, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 605, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 0, 622, 621, 623, 680,
	2257, 624, 269, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 636, 637, 638,
	0, 301, 302, 639, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 0, 272, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 648, 0, 649, 384, 0, 385, 386, 387,
	388, 389, 2256, 651, 652, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 273, 397,
	398, 399, 401, 0, 0, 400, 653, 654, 0, 655,
	0, 402, 403, 0, 656, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 657, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 274, 0,
	466, 467, 0, 658, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 0, 479, 0, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 0, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 0, 561, 562, 544,
	545, 563, 564, 0, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 0, 588, 589, 0, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 675,
	602, 676, 0, 603, 604, 605, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 0,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 0,
	622, 621, 623, 680, 2243, 624, 269, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 2245, 651, 652, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	653, 654, 0, 655, 0, 402, 403, 0, 656, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 0, 479, 0, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 0, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 0, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 269, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 2210, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 1238, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	0, 622, 621, 623, 680, 1580, 624, 269, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 1579, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 0, 622, 621, 623, 680, 1493,
	624, 269, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 1486, 624, 269, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 1488, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 1312, 624, 269,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 1311,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 0, 622, 621, 623,
	680, 1302, 624, 269, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 272, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 1301, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 273,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 274,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	0, 622, 621, 623, 680, 1299, 624, 269, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 1298, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 0, 622, 621, 623, 680, 1294,
	624, 269, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 1293, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 683, 624, 269, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 260, 624, 269,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 272, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 650,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 273, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 274, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 269, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	272, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 650, 651, 652, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 273, 397, 398, 399, 401, 0, 0, 400,
	653, 654, 0, 655, 0, 402, 403, 0, 656, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 274, 0, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 0, 479, 0, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 0, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 0, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 269, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 705, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 706, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 650, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	707, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	269, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 638, 0, 301,
	302, 639, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 2351, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 272, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	650, 651, 652, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 273, 397, 398, 399,
	401, 0, 0, 400, 653, 654, 0, 655, 0, 402,
	403, 0, 656, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 274, 0, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	0, 479, 0, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 0, 534, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 0, 561, 562, 544, 545, 563,
	564, 0, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 269, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 2349, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 272, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 650, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 273, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 274, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 269, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 638, 0, 301, 302, 639, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	2347, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 272, 0,
	0, 0, 0, 0, 365, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	273, 397, 398, 399, 401, 0, 0, 400, 653, 654,
	0, 655, 0, 402, 403, 0, 656, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	274, 0, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 0, 479, 0, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	0, 534, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 0, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 269, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 272, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 2263, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 273, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 274, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 269, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 272, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 2063, 651,
	652, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 273, 397, 398, 399, 401, 0,
	0, 400, 653, 654, 0, 655, 0, 402, 403, 0,
	656, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 274, 0, 466, 467, 0, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 0, 479,
	0, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 0, 534, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 0,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 671, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 605, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 269, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 272,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 2057, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 273, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 274, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 890, 624, 269,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 650,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 889, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 888, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 269, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	3081, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 650, 651, 652, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	653, 654, 0, 655, 0, 402, 403, 0, 656, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 0, 479, 0, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 4238, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 0, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 0, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 0, 622, 621, 623, 680, 767, 624,
	269, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	0, 0, 0, 0, 0, 0, 0, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 284, 285, 1349,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 1347, 0, 301,
	302, 639, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	650, 651, 652, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 653, 654, 0, 655, 0, 402,
	403, 0, 656, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 773, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	0, 479, 0, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 0, 772, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 771, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 1350, 560, 0, 561, 562, 544, 545, 563,
	564, 0, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 769, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 0, 622, 621,
	623, 680, 767, 624, 269, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 0, 0, 0, 0, 0, 0,
	0, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 284, 285, 1349, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 1347, 0, 301, 302, 639, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 653, 654,
	0, 655, 0, 402, 403, 0, 656, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 773, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 0, 479, 0, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	0, 772, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 771, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 1350, 560, 0, 561,
	562, 544, 545, 563, 564, 0, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 769, 672, 673, 674, 0, 607, 0, 599, 1348,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 0, 622, 621, 623, 680, 692, 624, 269, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 691, 282, 283, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 650, 651,
	652, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 653, 654, 0, 655, 0, 402, 403, 0,
	656, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 0, 479,
	0, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 690, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 0, 534, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 0,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 671, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 605, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 0, 622, 621, 623, 680,
	0, 624, 269, 3068, 0, 0, 625, 626, 681, 627,
	628, 629, 0, 0, 0, 0, 0, 0, 0, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 636, 637, 638,
	0, 301, 302, 639, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 648, 0, 649, 384, 0, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 653, 654, 0, 655,
	0, 402, 403, 0, 656, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 657, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 658, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 0, 479, 0, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 0, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 0, 561, 562, 544,
	545, 563, 564, 0, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 0, 588, 589, 0, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 675,
	602, 676, 0, 603, 604, 605, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 0,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 0,
	622, 621, 623, 680, 0, 624, 269, 4248, 0, 0,
	625, 626, 681, 627, 628, 629, 0, 0, 0, 0,
	0, 0, 0, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 650, 651, 652, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	653, 654, 0, 655, 0, 402, 403, 0, 656, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 0, 479, 0, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 0, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 0, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 269, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 650, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 4529, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	269, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 638, 0, 301,
	302, 639, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	650, 651, 652, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 653, 654, 0, 655, 0, 402,
	403, 0, 656, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	0, 479, 0, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 4134, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 0, 534, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 0, 561, 562, 544, 545, 563,
	564, 0, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 269, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 3898,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 650, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 269, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 630, 0, 2743, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 638, 0, 301, 302, 639, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 653, 654,
	0, 655, 0, 402, 403, 0, 656, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 0, 479, 0, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	0, 534, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 0, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 0, 622, 621, 623, 680, 0, 624, 269, 3068,
	0, 0, 625, 626, 681, 627, 628, 629, 0, 0,
	0, 0, 0, 0, 0, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 650, 651,
	652, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 653, 654, 0, 655, 0, 402, 403, 0,
	656, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 3065, 0, 0, 477, 478, 660, 0, 479,
	0, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 0, 534, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 0,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 671, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 605, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 269, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 275, 277, 276, 278, 279, 280, 281, 2321,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 2309, 624, 269,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 650,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 0, 622, 621, 623,
	680, 2077, 624, 269, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 650, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	0, 622, 621, 623, 680, 2044, 624, 269, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 650, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 0, 622, 621, 623, 680, 767,
	624, 269, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 760, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 773, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 772, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 771, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 1613, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 769, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 1586, 624, 269, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 1585, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 1570, 624, 269,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 1568,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 0, 622, 621, 623,
	680, 1563, 624, 269, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 650, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	0, 622, 621, 623, 680, 1540, 624, 269, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 1538, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 0, 622, 621, 623, 680, 1498,
	624, 269, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 1481, 624, 269, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 1317, 624, 269,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 1316,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 0, 622, 621, 623,
	680, 1308, 624, 269, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 1307, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	269, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 275, 277, 276,
	278, 279, 280, 281, 1261, 282, 283, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 638, 0, 301,
	302, 639, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	650, 651, 652, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 653, 654, 0, 655, 0, 402,
	403, 0, 656, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	0, 479, 0, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 0, 534, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 0, 561, 562, 544, 545, 563,
	564, 0, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 269, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 275, 277, 276, 278, 279, 280,
	281, 778, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 650, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 0, 622, 621, 623, 680, 767,
	624, 269, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 0, 0, 0, 0, 0, 0, 0, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 760, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 758, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 759, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 773, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 772, 535,
	536, 537, 538, 761, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 771, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 762, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 769, 672,
	673, 674, 0, 607, 0, 599, 764, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 0, 622,
	621, 623, 680, 752, 624, 269, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 0, 0, 0, 0, 0,
	0, 0, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 753, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 0, 622, 621, 623, 680, 715, 624, 269,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 0,
	0, 0, 0, 0, 0, 0, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 650,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 0, 622, 621, 623,
	680, 709, 624, 269, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 0, 0, 0, 0, 0, 0, 0,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 650, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	0, 622, 621, 623, 680, 687, 624, 269, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 0, 0, 0,
	0, 0, 0, 0, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 650, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 269, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 638, 0, 301, 302, 639, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 653, 654,
	0, 655, 0, 402, 403, 0, 656, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 0, 479, 0, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	0, 534, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 547, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 0, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 269, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 0, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 3596, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 561, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 269, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 650, 651,
	652, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 653, 654, 0, 655, 0, 402, 403, 0,
	656, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 0, 479,
	0, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 0, 772, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	771, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 0,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 769, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 605, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 269, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 3521, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 514, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 269, 622, 621, 623, 680, 0, 624, 0,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 636, 637, 638,
	0, 301, 302, 639, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 648, 0, 649, 384, 0, 385, 386, 387,
	388, 389, 3499, 651, 652, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 653, 654, 0, 655,
	0, 402, 403, 0, 656, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 657, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 658, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 0, 479, 0, 661, 480, 481, 473, 482,
	483, 484, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 508, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 0, 534,
	535, 536, 537, 538, 667, 539, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 0, 561, 562, 544,
	545, 563, 564, 0, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 0, 588, 589, 0, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 675,
	602, 676, 0, 603, 604, 605, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 0,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 269,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 275, 277, 276, 278,
	279, 280, 281, 0, 282, 283, 0, 0, 0, 0,
	0, 630, 0, 0, 0, 0, 284, 285, 0, 286,
	287, 288, 289, 290, 291, 631, 632, 0, 292, 633,
	293, 634, 0, 635, 294, 295, 296, 297, 298, 299,
	0, 0, 0, 300, 636, 637, 638, 0, 301, 302,
	639, 0, 0, 0, 303, 304, 305, 306, 307, 308,
	309, 0, 0, 311, 312, 313, 310, 314, 0, 315,
	0, 316, 317, 318, 319, 320, 321, 0, 322, 323,
	324, 0, 325, 326, 327, 0, 0, 0, 0, 0,
	0, 0, 328, 329, 330, 331, 332, 0, 333, 640,
	641, 0, 337, 334, 335, 0, 338, 336, 339, 0,
	340, 341, 342, 0, 0, 343, 344, 345, 0, 346,
	347, 0, 348, 349, 350, 0, 351, 352, 642, 353,
	354, 355, 357, 359, 356, 360, 361, 362, 363, 643,
	644, 364, 0, 0, 0, 0, 0, 0, 0, 365,
	366, 367, 645, 0, 0, 0, 368, 0, 369, 370,
	0, 0, 0, 371, 372, 373, 646, 647, 374, 375,
	376, 377, 378, 379, 380, 381, 382, 0, 383, 648,
	0, 649, 384, 0, 385, 386, 387, 388, 389, 3496,
	651, 652, 469, 0, 390, 391, 0, 392, 393, 394,
	395, 396, 0, 0, 0, 0, 397, 398, 399, 401,
	0, 0, 400, 653, 654, 0, 655, 0, 402, 403,
	0, 656, 0, 404, 405, 406, 0, 407, 0, 0,
	0, 408, 409, 410, 411, 412, 413, 0, 414, 416,
	415, 0, 417, 657, 0, 418, 419, 0, 0, 420,
	0, 0, 0, 421, 422, 425, 0, 0, 423, 424,
	426, 427, 0, 428, 429, 431, 434, 430, 432, 433,
	435, 448, 436, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 450, 0, 449, 0, 451, 452,
	453, 459, 461, 462, 457, 458, 460, 463, 464, 455,
	456, 0, 465, 454, 0, 0, 0, 466, 467, 0,
	658, 468, 659, 470, 471, 0, 0, 472, 0, 0,
	0, 474, 475, 476, 0, 0, 477, 478, 660, 0,
	479, 0, 661, 480, 481, 473, 482, 483, 484, 485,
	486, 487, 488, 489, 490, 0, 491, 492, 662, 493,
	494, 495, 663, 496, 497, 498, 664, 499, 665, 500,
	501, 0, 502, 503, 0, 504, 505, 506, 507, 508,
	509, 510, 666, 511, 512, 514, 513, 515, 0, 516,
	0, 517, 518, 519, 0, 0, 0, 0, 0, 520,
	0, 522, 523, 524, 525, 521, 526, 527, 528, 529,
	530, 0, 531, 532, 533, 0, 534, 535, 536, 537,
	538, 667, 539, 0, 540, 541, 547, 548, 549, 542,
	543, 550, 551, 552, 553, 554, 0, 556, 557, 555,
	558, 559, 560, 0, 561, 562, 544, 545, 563, 564,
	0, 565, 566, 567, 568, 569, 570, 571, 668, 0,
	572, 0, 573, 574, 575, 577, 546, 578, 583, 584,
	669, 579, 580, 581, 582, 670, 586, 587, 0, 588,
	589, 0, 585, 576, 0, 590, 591, 592, 593, 594,
	595, 596, 358, 597, 0, 598, 671, 672, 673, 674,
	0, 607, 0, 599, 600, 601, 675, 602, 676, 0,
	603, 604, 605, 606, 0, 608, 609, 0, 0, 610,
	611, 612, 614, 615, 613, 616, 0, 617, 0, 0,
	618, 619, 620, 677, 678, 679, 269, 622, 621, 623,
	680, 0, 624, 0, 0, 0, 0, 625, 626, 681,
	627, 628, 629, 275, 277, 276, 278, 279, 280, 281,
	0, 282, 283, 0, 0, 0, 0, 0, 630, 0,
	0, 0, 0, 284, 285, 0, 286, 287, 288, 289,
	290, 291, 631, 632, 0, 292, 633, 293, 634, 0,
	635, 294, 295, 296, 297, 298, 299, 0, 0, 0,
	300, 636, 637, 638, 0, 301, 302, 639, 0, 0,
	0, 303, 304, 305, 306, 307, 308, 309, 0, 0,
	311, 312, 313, 310, 314, 0, 315, 0, 316, 317,
	318, 319, 320, 321, 0, 322, 323, 324, 0, 325,
	326, 327, 0, 0, 0, 0, 0, 0, 0, 328,
	329, 330, 331, 332, 0, 333, 640, 641, 0, 337,
	334, 335, 0, 338, 336, 339, 0, 340, 341, 342,
	0, 0, 343, 344, 345, 0, 346, 347, 0, 348,
	349, 350, 0, 351, 352, 642, 353, 354, 355, 357,
	359, 356, 360, 361, 362, 363, 643, 644, 364, 0,
	0, 0, 0, 0, 0, 0, 365, 366, 367, 645,
	0, 0, 0, 368, 0, 369, 370, 0, 0, 0,
	371, 372, 373, 646, 647, 374, 375, 376, 377, 378,
	379, 380, 381, 382, 0, 383, 648, 0, 649, 384,
	0, 385, 386, 387, 388, 389, 3446, 651, 652, 469,
	0, 390, 391, 0, 392, 393, 394, 395, 396, 0,
	0, 0, 0, 397, 398, 399, 401, 0, 0, 400,
	653, 654, 0, 655, 0, 402, 403, 0, 656, 0,
	404, 405, 406, 0, 407, 0, 0, 0, 408, 409,
	410, 411, 412, 413, 0, 414, 416, 415, 0, 417,
	657, 0, 418, 419, 0, 0, 420, 0, 0, 0,
	421, 422, 425, 0, 0, 423, 424, 426, 427, 0,
	428, 429, 431, 434, 430, 432, 433, 435, 448, 436,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 450, 0, 449, 0, 451, 452, 453, 459, 461,
	462, 457, 458, 460, 463, 464, 455, 456, 0, 465,
	454, 0, 0, 0, 466, 467, 0, 658, 468, 659,
	470, 471, 0, 0, 472, 0, 0, 0, 474, 475,
	476, 0, 0, 477, 478, 660, 0, 479, 0, 661,
	480, 481, 473, 482, 483, 484, 485, 486, 487, 488,
	489, 490, 0, 491, 492, 662, 493, 494, 495, 663,
	496, 497, 498, 664, 499, 665, 500, 501, 0, 502,
	503, 0, 504, 505, 506, 507, 508, 509, 510, 666,
	511, 512, 514, 513, 515, 0, 516, 0, 517, 518,
	519, 0, 0, 0, 0, 0, 520, 0, 522, 523,
	524, 525, 521, 526, 527, 528, 529, 530, 0, 531,
	532, 533, 0, 534, 535, 536, 537, 538, 667, 539,
	0, 540, 541, 547, 548, 549, 542, 543, 550, 551,
	552, 553, 554, 0, 556, 557, 555, 558, 559, 560,
	0, 561, 562, 544, 545, 563, 564, 0, 565, 566,
	567, 568, 569, 570, 571, 668, 0, 572, 0, 573,
	574, 575, 577, 546, 578, 583, 584, 669, 579, 580,
	581, 582, 670, 586, 587, 0, 588, 589, 0, 585,
	576, 0, 590, 591, 592, 593, 594, 595, 596, 358,
	597, 0, 598, 671, 672, 673, 674, 0, 607, 0,
	599, 600, 601, 675, 602, 676, 0, 603, 604, 605,
	606, 0, 608, 609, 0, 0, 610, 611, 612, 614,
	615, 613, 616, 0, 617, 0, 0, 618, 619, 620,
	677, 678, 679, 269, 622, 621, 623, 680, 0, 624,
	0, 0, 0, 0, 625, 626, 681, 627, 628, 629,
	275, 277, 276, 278, 279, 280, 281, 0, 282, 283,
	0, 0, 0, 0, 0, 630, 0, 0, 0, 0,
	284, 285, 0, 286, 287, 288, 289, 290, 291, 631,
	632, 0, 292, 633, 293, 634, 0, 635, 294, 295,
	296, 297, 298, 299, 0, 0, 0, 300, 636, 637,
	638, 0, 301, 302, 639, 0, 0, 0, 303, 304,
	305, 306, 307, 308, 309, 0, 0, 311, 312, 313,
	310, 314, 0, 315, 0, 316, 317, 318, 319, 320,
	321, 0, 322, 323, 324, 0, 325, 326, 327, 0,
	0, 0, 0, 0, 0, 0, 328, 329, 330, 331,
	332, 0, 333, 640, 641, 0, 337, 334, 335, 0,
	338, 336, 339, 0, 340, 341, 342, 0, 0, 343,
	344, 345, 0, 346, 347, 0, 348, 349, 350, 0,
	351, 352, 642, 353, 354, 355, 357, 359, 356, 360,
	361, 362, 363, 643, 644, 364, 0, 0, 0, 0,
	0, 0, 0, 365, 366, 367, 645, 0, 0, 0,
	368, 0, 369, 370, 0, 0, 0, 371, 372, 373,
	646, 647, 374, 375, 376, 377, 378, 379, 380, 381,
	382, 0, 383, 648, 0, 649, 384, 0, 385, 386,
	387, 388, 389, 3444, 651, 652, 469, 0, 390, 391,
	0, 392, 393, 394, 395, 396, 0, 0, 0, 0,
	397, 398, 399, 401, 0, 0, 400, 653, 654, 0,
	655, 0, 402, 403, 0, 656, 0, 404, 405, 406,
	0, 407, 0, 0, 0, 408, 409, 410, 411, 412,
	413, 0, 414, 416, 415, 0, 417, 657, 0, 418,
	419, 0, 0, 420, 0, 0, 0, 421, 422, 425,
	0, 0, 423, 424, 426, 427, 0, 428, 429, 431,
	434, 430, 432, 433, 435, 448, 436, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 450, 0,
	449, 0, 451, 452, 453, 459, 461, 462, 457, 458,
	460, 463, 464, 455, 456, 0, 465, 454, 0, 0,
	0, 466, 467, 0, 658, 468, 659, 470, 471, 0,
	0, 472, 0, 0, 0, 474, 475, 476, 0, 0,
	477, 478, 660, 0, 479, 0, 661, 480, 481, 473,
	482, 483, 484, 485, 486, 487, 488, 489, 490, 0,
	491, 492, 662, 493, 494, 495, 663, 496, 497, 498,
	664, 499, 665, 500, 501, 0, 502, 503, 0, 504,
	505, 506, 507, 508, 509, 510, 666, 511, 512, 514,
	513, 515, 0, 516, 0, 517, 518, 519, 0, 0,
	0, 0, 0, 520, 0, 522, 523, 524, 525, 521,
	526, 527, 528, 529, 530, 0, 531, 532, 533, 0,
	534, 535, 536, 537, 538, 667, 539, 0, 540, 541,
	547, 548, 549, 542, 543, 550, 551, 552, 553, 554,
	0, 556, 557, 555, 558, 559, 560, 0, 561, 562,
	544, 545, 563, 564, 0, 565, 566, 567, 568, 569,
	570, 571, 668, 0, 572, 0, 573, 574, 575, 577,
	546, 578, 583, 584, 669, 579, 580, 581, 582, 670,
	586, 587, 0, 588, 589, 0, 585, 576, 0, 590,
	591, 592, 593, 594, 595, 596, 358, 597, 0, 598,
	671, 672, 673, 674, 0, 607, 0, 599, 600, 601,
	675, 602, 676, 0, 603, 604, 605, 606, 0, 608,
	609, 0, 0, 610, 611, 612, 614, 615, 613, 616,
	0, 617, 0, 0, 618, 619, 620, 677, 678, 679,
	269, 622, 621, 623, 680, 0, 624, 0, 0, 0,
	0, 625, 626, 681, 627, 628, 629, 275, 277, 276,
	278, 279, 280, 281, 0, 282, 283, 0, 0, 0,
	0, 0, 630, 0, 0, 0, 0, 284, 285, 0,
	286, 287, 288, 289, 290, 291, 631, 632, 0, 292,
	633, 293, 634, 0, 635, 294, 295, 296, 297, 298,
	299, 0, 0, 0, 300, 636, 637, 638, 0, 301,
	302, 639, 0, 0, 0, 303, 304, 305, 306, 307,
	308, 309, 0, 0, 311, 312, 313, 310, 314, 0,
	315, 0, 316, 317, 318, 319, 320, 321, 0, 322,
	323, 324, 0, 325, 326, 327, 0, 0, 0, 0,
	0, 0, 0, 328, 329, 330, 331, 332, 0, 333,
	640, 641, 0, 337, 334, 335, 0, 338, 336, 339,
	0, 340, 341, 342, 0, 0, 343, 344, 345, 0,
	346, 347, 0, 348, 349, 350, 0, 351, 352, 642,
	353, 354, 355, 357, 359, 356, 360, 361, 362, 363,
	643, 644, 364, 0, 0, 0, 0, 0, 0, 0,
	365, 366, 367, 645, 0, 0, 0, 368, 0, 369,
	370, 0, 0, 0, 371, 372, 373, 646, 647, 374,
	375, 376, 377, 378, 379, 380, 381, 382, 0, 383,
	648, 0, 649, 384, 0, 385, 386, 387, 388, 389,
	3429, 651, 652, 469, 0, 390, 391, 0, 392, 393,
	394, 395, 396, 0, 0, 0, 0, 397, 398, 399,
	401, 0, 0, 400, 653, 654, 0, 655, 0, 402,
	403, 0, 656, 0, 404, 405, 406, 0, 407, 0,
	0, 0, 408, 409, 410, 411, 412, 413, 0, 414,
	416, 415, 0, 417, 657, 0, 418, 419, 0, 0,
	420, 0, 0, 0, 421, 422, 425, 0, 0, 423,
	424, 426, 427, 0, 428, 429, 431, 434, 430, 432,
	433, 435, 448, 436, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 450, 0, 449, 0, 451,
	452, 453, 459, 461, 462, 457, 458, 460, 463, 464,
	455, 456, 0, 465, 454, 0, 0, 0, 466, 467,
	0, 658, 468, 659, 470, 471, 0, 0, 472, 0,
	0, 0, 474, 475, 476, 0, 0, 477, 478, 660,
	0, 479, 0, 661, 480, 481, 473, 482, 483, 484,
	485, 486, 487, 488, 489, 490, 0, 491, 492, 662,
	493, 494, 495, 663, 496, 497, 498, 664, 499, 665,
	500, 501, 0, 502, 503, 0, 504, 505, 506, 507,
	508, 509, 510, 666, 511, 512, 514, 513, 515, 0,
	516, 0, 517, 518, 519, 0, 0, 0, 0, 0,
	520, 0, 522, 523, 524, 525, 521, 526, 527, 528,
	529, 530, 0, 531, 532, 533, 0, 534, 535, 536,
	537, 538, 667, 539, 0, 540, 541, 547, 548, 549,
	542, 543, 550, 551, 552, 553, 554, 0, 556, 557,
	555, 558, 559, 560, 0, 561, 562, 544, 545, 563,
	564, 0, 565, 566, 567, 568, 569, 570, 571, 668,
	0, 572, 0, 573, 574, 575, 577, 546, 578, 583,
	584, 669, 579, 580, 581, 582, 670, 586, 587, 0,
	588, 589, 0, 585, 576, 0, 590, 591, 592, 593,
	594, 595, 596, 358, 597, 0, 598, 671, 672, 673,
	674, 0, 607, 0, 599, 600, 601, 675, 602, 676,
	0, 603, 604, 605, 606, 0, 608, 609, 0, 0,
	610, 611, 612, 614, 615, 613, 616, 0, 617, 0,
	0, 618, 619, 620, 677, 678, 679, 269, 622, 621,
	623, 680, 0, 624, 0, 0, 0, 0, 625, 626,
	681, 627, 628, 629, 275, 277, 276, 278, 279, 280,
	281, 0, 282, 283, 0, 0, 0, 0, 0, 630,
	0, 0, 0, 0, 284, 285, 0, 286, 287, 288,
	289, 290, 291, 631, 632, 0, 292, 633, 293, 634,
	0, 635, 294, 295, 296, 297, 298, 299, 0, 0,
	0, 300, 636, 637, 638, 0, 301, 302, 639, 0,
	0, 0, 303, 304, 305, 306, 307, 308, 309, 0,
	0, 311, 312, 313, 310, 314, 0, 315, 0, 316,
	317, 318, 319, 320, 321, 0, 322, 323, 324, 0,
	325, 326, 327, 0, 0, 0, 0, 0, 0, 0,
	328, 329, 330, 331, 332, 0, 333, 640, 641, 0,
	337, 334, 335, 0, 338, 336, 339, 0, 340, 341,
	342, 0, 0, 343, 344, 345, 0, 346, 347, 0,
	348, 349, 350, 0, 351, 352, 642, 353, 354, 355,
	357, 359, 356, 360, 361, 362, 363, 643, 644, 364,
	0, 0, 0, 0, 0, 0, 0, 365, 366, 367,
	645, 0, 0, 0, 368, 0, 369, 370, 0, 0,
	0, 371, 372, 373, 646, 647, 374, 375, 376, 377,
	378, 379, 380, 381, 382, 0, 383, 648, 0, 649,
	384, 0, 385, 386, 387, 388, 389, 3036, 651, 652,
	469, 0, 390, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 0, 397, 398, 399, 401, 0, 0,
	400, 653, 654, 0, 655, 0, 402, 403, 0, 656,
	0, 404, 405, 406, 0, 407, 0, 0, 0, 408,
	409, 410, 411, 412, 413, 0, 414, 416, 415, 0,
	417, 657, 0, 418, 419, 0, 0, 420, 0, 0,
	0, 421, 422, 425, 0, 0, 423, 424, 426, 427,
	0, 428, 429, 431, 434, 430, 432, 433, 435, 448,
	436, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 450, 0, 449, 0, 451, 452, 453, 459,
	461, 462, 457, 458, 460, 463, 464, 455, 456, 0,
	465, 454, 0, 0, 0, 466, 467, 0, 658, 468,
	659, 470, 471, 0, 0, 472, 0, 0, 0, 474,
	475, 476, 0, 0, 477, 478, 660, 0, 479, 0,
	661, 480, 481, 473, 482, 483, 484, 485, 486, 487,
	488, 489, 490, 0, 491, 492, 662, 493, 494, 495,
	663, 496, 497, 498, 664, 499, 665, 500, 501, 0,
	502, 503, 0, 504, 505, 506, 507, 508, 509, 510,
	666, 511, 512, 514, 513, 515, 0, 516, 0, 517,
	518, 519, 0, 0, 0, 0, 0, 520, 0, 522,
	523, 524, 525, 521, 526, 527, 528, 529, 530, 0,
	531, 532, 533, 0, 534, 535, 536, 537, 538, 667,
	539, 0, 540, 541, 547, 548, 549, 542, 543, 550,
	551, 552, 553, 554, 0, 556, 557, 555, 558, 559,
	560, 0, 561, 562, 544, 545, 563, 564, 0, 565,
	566, 567, 568, 569, 570, 571, 668, 0, 572, 0,
	573, 574, 575, 577, 546, 578, 583, 584, 669, 579,
	580, 581, 582, 670, 586, 587, 0, 588, 589, 0,
	585, 576, 0, 590, 591, 592, 593, 594, 595, 596,
	358, 597, 0, 598, 671, 672, 673, 674, 0, 607,
	0, 599, 600, 601, 675, 602, 676, 0, 603, 604,
	605, 606, 0, 608, 609, 0, 0, 610, 611, 612,
	614, 615, 613, 616, 0, 617, 0, 0, 618, 619,
	620, 677, 678, 679, 269, 622, 621, 623, 680, 0,
	624, 0, 0, 0, 0, 625, 626, 681, 627, 628,
	629, 275, 277, 276, 278, 279, 280, 281, 0, 282,
	283, 0, 0, 0, 0, 0, 630, 0, 0, 0,
	0, 284, 285, 0, 286, 287, 288, 289, 290, 291,
	631, 632, 0, 292, 633, 293, 634, 0, 635, 294,
	295, 296, 297, 298, 299, 0, 0, 0, 300, 636,
	637, 638, 0, 301, 302, 639, 0, 0, 0, 303,
	304, 305, 306, 307, 308, 309, 0, 0, 311, 312,
	313, 310, 314, 0, 315, 0, 316, 317, 318, 319,
	320, 321, 0, 322, 323, 324, 0, 325, 326, 327,
	0, 0, 0, 0, 0, 0, 0, 328, 329, 330,
	331, 332, 0, 333, 640, 641, 0, 337, 334, 335,
	0, 338, 336, 339, 0, 340, 341, 342, 0, 0,
	343, 344, 345, 0, 346, 347, 0, 348, 349, 350,
	0, 351, 352, 642, 353, 354, 355, 357, 359, 356,
	360, 361, 362, 363, 643, 644, 364, 0, 0, 0,
	0, 0, 0, 0, 365, 366, 367, 645, 0, 0,
	0, 368, 0, 369, 370, 0, 0, 0, 371, 372,
	373, 646, 647, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 0, 383, 648, 0, 649, 384, 0, 385,
	386, 387, 388, 389, 650, 651, 652, 469, 0, 390,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	0, 397, 398, 399, 401, 0, 0, 400, 653, 654,
	0, 655, 0, 402, 403, 0, 656, 0, 404, 405,
	406, 0, 407, 0, 0, 0, 408, 409, 410, 411,
	412, 413, 0, 414, 416, 415, 0, 417, 657, 0,
	418, 419, 0, 0, 420, 0, 0, 0, 421, 422,
	425, 0, 0, 423, 424, 426, 427, 0, 428, 429,
	431, 434, 430, 432, 433, 435, 448, 436, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 450,
	0, 449, 0, 451, 452, 453, 459, 461, 462, 457,
	458, 460, 463, 464, 455, 456, 0, 465, 454, 0,
	0, 0, 466, 467, 0, 658, 468, 659, 470, 471,
	0, 0, 472, 0, 0, 0, 474, 475, 476, 0,
	0, 477, 478, 660, 0, 479, 0, 661, 480, 481,
	473, 482, 483, 484, 485, 486, 487, 488, 489, 490,
	0, 491, 492, 662, 493, 494, 495, 663, 496, 497,
	498, 664, 499, 665, 500, 501, 0, 502, 503, 0,
	504, 505, 506, 507, 508, 509, 510, 666, 511, 512,
	514, 513, 515, 0, 516, 0, 517, 518, 519, 0,
	0, 0, 0, 0, 520, 0, 522, 523, 524, 525,
	521, 526, 527, 528, 529, 530, 0, 531, 532, 533,
	0, 534, 535, 536, 537, 538, 667, 539, 0, 540,
	541, 753, 548, 549, 542, 543, 550, 551, 552, 553,
	554, 0, 556, 557, 555, 558, 559, 560, 0, 561,
	562, 544, 545, 563, 564, 0, 565, 566, 567, 568,
	569, 570, 571, 668, 0, 572, 0, 573, 574, 575,
	577, 546, 578, 583, 584, 669, 579, 580, 581, 582,
	670, 586, 587, 0, 588, 589, 0, 585, 576, 0,
	590, 591, 592, 593, 594, 595, 596, 358, 597, 0,
	598, 671, 672, 673, 674, 0, 607, 0, 599, 600,
	601, 675, 602, 676, 0, 603, 604, 605, 606, 0,
	608, 609, 0, 0, 610, 611, 612, 614, 615, 613,
	616, 0, 617, 0, 0, 618, 619, 620, 677, 678,
	679, 269, 622, 621, 623, 680, 0, 624, 0, 0,
	0, 0, 625, 626, 681, 627, 628, 629, 275, 277,
	276, 278, 279, 280, 281, 0, 282, 283, 0, 0,
	0, 0, 0, 630, 0, 2281, 0, 0, 284, 285,
	0, 286, 287, 288, 289, 290, 291, 631, 632, 0,
	292, 633, 293, 634, 0, 635, 294, 295, 296, 297,
	298, 299, 0, 0, 0, 300, 636, 637, 638, 0,
	301, 302, 639, 0, 0, 0, 303, 304, 305, 306,
	307, 308, 309, 0, 0, 311, 312, 313, 310, 314,
	0, 315, 0, 316, 317, 318, 319, 320, 321, 0,
	322, 323, 324, 0, 325, 326, 327, 0, 0, 0,
	0, 0, 0, 0, 328, 329, 330, 331, 332, 0,
	333, 640, 641, 0, 337, 334, 335, 0, 338, 336,
	339, 0, 340, 341, 342, 0, 0, 343, 344, 345,
	0, 346, 347, 0, 348, 349, 350, 0, 351, 352,
	642, 353, 354, 355, 357, 359, 356, 360, 361, 362,
	363, 643, 644, 364, 0, 0, 0, 0, 0, 0,
	0, 365, 366, 367, 645, 0, 0, 0, 368, 0,
	369, 370, 0, 0, 0, 371, 372, 373, 646, 647,
	374, 375, 376, 377, 378, 379, 380, 381, 382, 0,
	383, 648, 0, 649, 384, 0, 385, 386, 387, 388,
	389, 650, 651, 652, 469, 0, 390, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 0, 397, 398,
	399, 401, 0, 0, 400, 653, 654, 0, 655, 0,
	402, 403, 0, 656, 0, 404, 405, 406, 0, 407,
	0, 0, 0, 408, 409, 410, 411, 412, 413, 0,
	414, 416, 415, 0, 417, 657, 0, 418, 419, 0,
	0, 420, 0, 0, 0, 421, 422, 425, 0, 0,
	423, 424, 426, 427, 0, 428, 429, 431, 434, 430,
	432, 433, 435, 448, 436, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 450, 0, 449, 0,
	451, 452, 453, 459, 461, 462, 457, 458, 460, 463,
	464, 455, 456, 0, 465, 454, 0, 0, 0, 466,
	467, 0, 658, 468, 659, 470, 471, 0, 0, 472,
	0, 0, 0, 474, 475, 476, 0, 0, 477, 478,
	660, 0, 479, 0, 661, 480, 481, 473, 482, 483,
	484, 485, 486, 487, 488, 489, 490, 0, 491, 492,
	662, 493, 494, 495, 663, 496, 497, 498, 664, 499,
	665, 500, 501, 0, 502, 503, 0, 504, 505, 506,
	507, 508, 509, 510, 666, 511, 512, 514, 513, 515,
	0, 516, 0, 517, 518, 519, 0, 0, 0, 0,
	0, 520, 0, 522, 523, 524, 525, 521, 526, 527,
	528, 529, 530, 0, 531, 532, 533, 0, 534, 535,
	536, 537, 538, 667, 539, 0, 540, 541, 547, 548,
	549, 542, 543, 550, 551, 552, 553, 554, 0, 556,
	557, 555, 558, 559, 560, 0, 0, 562, 544, 545,
	563, 564, 0, 565, 566, 567, 568, 569, 570, 571,
	668, 0, 572, 0, 573, 574, 575, 577, 546, 578,
	583, 584, 669, 579, 580, 581, 582, 670, 586, 587,
	0, 588, 589, 0, 585, 576, 0, 590, 591, 592,
	593, 594, 595, 596, 358, 597, 0, 598, 671, 672,
	673, 674, 0, 607, 0, 599, 600, 601, 675, 602,
	676, 0, 603, 604, 605, 606, 0, 608, 609, 0,
	0, 610, 611, 612, 614, 615, 613, 616, 0, 617,
	0, 0, 618, 619, 620, 677, 678, 679, 269, 622,
	621, 623, 680, 0, 624, 0, 0, 0, 0, 625,
	626, 681, 627, 628, 629, 275, 277, 276, 278, 279,
	280, 281, 0, 282, 283, 0, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 284, 285, 0, 286, 287,
	288, 289, 290, 291, 631, 632, 0, 292, 633, 293,
	634, 0, 635, 294, 295, 296, 297, 298, 299, 0,
	0, 0, 300, 636, 637, 638, 0, 301, 302, 639,
	0, 0, 0, 303, 304, 305, 306, 307, 308, 309,
	0, 0, 311, 312, 313, 310, 314, 0, 315, 0,
	316, 317, 318, 319, 320, 321, 0, 322, 323, 324,
	0, 325, 326, 327, 0, 0, 0, 0, 0, 0,
	0, 328, 329, 330, 331, 332, 0, 333, 640, 641,
	0, 337, 334, 335, 0, 338, 336, 339, 0, 340,
	341, 342, 0, 0, 343, 344, 345, 0, 346, 347,
	0, 348, 349, 350, 0, 351, 352, 642, 353, 354,
	355, 357, 359, 356, 360, 361, 362, 363, 643, 644,
	364, 0, 0, 0, 0, 0, 0, 0, 365, 366,
	367, 645, 0, 0, 0, 368, 0, 369, 370, 0,
	0, 0, 371, 372, 373, 646, 647, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 0, 383, 648, 0,
	649, 384, 0, 385, 386, 387, 388, 389, 1279, 651,
	652, 469, 0, 390, 391, 0, 392, 393, 394, 395,
	396, 0, 0, 0, 0, 397, 398, 399, 401, 0,
	0, 400, 653, 654, 0, 655, 0, 402, 403, 0,
	656, 0, 404, 405, 406, 0, 407, 0, 0, 0,
	408, 409, 410, 411, 412, 413, 0, 414, 416, 415,
	0, 417, 657, 0, 418, 419, 0, 0, 420, 0,
	0, 0, 421, 422, 425, 0, 0, 423, 424, 426,
	427, 0, 428, 429, 431, 434, 430, 432, 433, 435,
	448, 436, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 450, 0, 449, 0, 451, 452, 453,
	459, 461, 462, 457, 458, 460, 463, 464, 455, 456,
	0, 465, 454, 0, 0, 0, 466, 467, 0, 658,
	468, 659, 470, 471, 0, 0, 472, 0, 0, 0,
	474, 475, 476, 0, 0, 477, 478, 660, 0, 479,
	0, 661, 480, 481, 473, 482, 483, 484, 485, 486,
	487, 488, 489, 490, 0, 491, 492, 662, 493, 494,
	495, 663, 496, 497, 498, 664, 499, 665, 500, 501,
	0, 502, 503, 0, 504, 505, 506, 507, 508, 509,
	510, 666, 511, 512, 514, 513, 515, 0, 516, 0,
	517, 518, 519, 0, 0, 0, 0, 0, 520, 0,
	522, 523, 524, 525, 521, 526, 527, 528, 529, 530,
	0, 531, 532, 533, 0, 534, 535, 536, 537, 538,
	667, 539, 0, 540, 541, 547, 548, 549, 542, 543,
	550, 551, 552, 553, 554, 0, 556, 557, 555, 558,
	559, 560, 0, 561, 562, 544, 545, 563, 564, 0,
	565, 566, 567, 568, 569, 570, 571, 668, 0, 572,
	0, 573, 574, 575, 577, 546, 578, 583, 584, 669,
	579, 580, 581, 582, 670, 586, 587, 0, 588, 589,
	0, 585, 576, 0, 590, 591, 592, 593, 594, 595,
	596, 358, 597, 0, 598, 671, 672, 673, 674, 0,
	607, 0, 599, 600, 601, 675, 602, 676, 0, 603,
	604, 605, 606, 0, 608, 609, 0, 0, 610, 611,
	612, 614, 615, 613, 616, 0, 617, 0, 0, 618,
	619, 620, 677, 678, 679, 269, 622, 621, 623, 680,
	0, 624, 0, 0, 0, 0, 625, 626, 681, 627,
	628, 629, 275, 277, 276, 278, 279, 280, 281, 0,
	282, 283, 0, 0, 0, 0, 0, 630, 0, 0,
	0, 0, 284, 285, 0, 286, 287, 288, 289, 290,
	291, 631, 632, 0, 292, 633, 293, 634, 0, 635,
	294, 295, 296, 297, 298, 299, 0, 0, 0, 300,
	636, 637, 638, 0, 301, 302, 639, 0, 0, 0,
	303, 304, 305, 306, 307, 308, 309, 0, 0, 311,
	312, 313, 310, 314, 0, 315, 0, 316, 317, 318,
	319, 320, 321, 0, 322, 323, 324, 0, 325, 326,
	327, 0, 0, 0, 0, 0, 0, 0, 328, 329,
	330, 331, 332, 0, 333, 640, 641, 0, 337, 334,
	335, 0, 338, 336, 339, 0, 340, 341, 342, 0,
	0, 343, 344, 345, 0, 346, 347, 0, 348, 349,
	350, 0, 351, 352, 642, 353, 354, 355, 357, 359,
	356, 360, 361, 362, 363, 643, 644, 364, 0, 0,
	0, 0, 0, 0, 0, 365, 366, 367, 645, 0,
	0, 0, 368, 0, 369, 370, 0, 0, 0, 371,
	372, 373, 646, 647, 374, 375, 376, 377, 378, 379,
	380, 381, 382, 0, 383, 648, 0, 649, 384, 0,
	385, 386, 387, 388, 389, 650, 651, 652, 469, 0,
	390, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 0, 397, 398, 399, 401, 0, 0, 400, 653,
	654, 0, 655, 0, 402, 403, 0, 656, 0, 404,
	405, 406, 0, 407, 0, 0, 0, 408, 409, 410,
	411, 412, 413, 0, 414, 416, 415, 0, 417, 657,
	0, 418, 419, 0, 0, 420, 0, 0, 0, 421,
	422, 425, 0, 0, 423, 424, 426, 427, 0, 428,
	429, 431, 434, 430, 432, 433, 435, 448, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	450, 0, 449, 0, 451, 452, 453, 459, 461, 462,
	457, 458, 460, 463, 464, 455, 456, 0, 465, 454,
	0, 0, 0, 466, 467, 0, 658, 468, 659, 470,
	471, 0, 0, 472, 0, 0, 0, 474, 475, 476,
	0, 0, 477, 478, 660, 0, 479, 0, 661, 480,
	481, 473, 482, 483, 484, 485, 486, 487, 488, 489,
	490, 0, 491, 492, 662, 493, 494, 495, 663, 496,
	497, 498, 664, 499, 665, 500, 501, 0, 502, 503,
	0, 504, 505, 506, 507, 508, 509, 510, 666, 511,
	512, 1211, 513, 515, 0, 516, 0, 517, 518, 519,
	0, 0, 0, 0, 0, 520, 0, 522, 523, 524,
	525, 521, 526, 527, 528, 529, 530, 0, 531, 532,
	533, 0, 534, 535, 536, 537, 538, 667, 539, 0,
	540, 541, 547, 548, 549, 542, 543, 550, 551, 552,
	553, 554, 0, 556, 557, 555, 558, 559, 560, 0,
	561, 562, 544, 545, 563, 564, 0, 565, 566, 567,
	568, 569, 570, 571, 668, 0, 572, 0, 573, 574,
	575, 577, 546, 578, 583, 584, 669, 579, 580, 581,
	582, 670, 586, 587, 0, 588, 589, 0, 585, 576,
	0, 590, 591, 592, 593, 594, 595, 596, 358, 597,
	0, 598, 671, 672, 673, 674, 0, 607, 0, 599,
	600, 601, 675, 602, 676, 0, 603, 604, 605, 606,
	0, 608, 609, 0, 0, 610, 611, 612, 614, 615,
	613, 616, 0, 617, 0, 0, 618, 619, 620, 677,
	678, 679, 269, 622, 621, 623, 680, 0, 624, 0,
	0, 0, 0, 625, 626, 681, 627, 628, 629, 275,
	277, 276, 278, 279, 280, 281, 0, 282, 283, 0,
	0, 0, 0, 0, 630, 0, 0, 0, 0, 284,
	285, 0, 286, 287, 288, 289, 290, 291, 631, 632,
	0, 292, 633, 293, 634, 0, 635, 294, 295, 296,
	297, 298, 299, 0, 0, 0, 300, 636, 637, 638,
	0, 301, 302, 639, 0, 0, 0, 303, 304, 305,
	306, 307, 308, 309, 0, 0, 311, 312, 313, 310,
	314, 0, 315, 0, 316, 317, 318, 319, 320, 321,
	0, 322, 323, 324, 0, 325, 326, 327, 0, 0,
	0, 0, 0, 0, 0, 328, 329, 330, 331, 332,
	0, 333, 640, 641, 0, 337, 334, 335, 0, 338,
	336, 339, 0, 340, 341, 342, 0, 0, 343, 344,
	345, 0, 346, 347, 0, 348, 349, 350, 0, 351,
	352, 642, 353, 354, 355, 357, 359, 356, 360, 361,
	362, 363, 643, 644, 364, 0, 0, 0, 0, 0,
	0, 0, 365, 366, 367, 645, 0, 0, 0, 368,
	0, 369, 370, 0, 0, 0, 371, 372, 373, 646,
	647, 374, 375, 376, 377, 378, 379, 380, 381, 382,
	0, 383, 648, 0, 649, 0, 0, 385, 386, 387,
	388, 389, 650, 651, 652, 469, 0, 390, 391, 0,
	392, 393, 394, 395, 396, 0, 0, 0, 0, 397,
	398, 399, 401, 0, 0, 400, 653, 654, 0, 655,
	0, 402, 403, 0, 656, 0, 404, 405, 406, 0,
	407, 0, 0, 0, 408, 409, 410, 411, 412, 413,
	0, 414, 416, 415, 0, 417, 657, 0, 418, 419,
	0, 0, 420, 0, 0, 0, 421, 422, 425, 0,
	0, 423, 424, 426, 427, 0, 428, 429, 431, 434,
	430, 432, 433, 435, 448, 436, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 450, 0, 449,
	0, 451, 452, 453, 459, 461, 462, 457, 458, 460,
	463, 464, 455, 456, 0, 465, 454, 0, 0, 0,
	466, 467, 0, 658, 468, 659, 470, 471, 0, 0,
	472, 0, 0, 0, 474, 475, 476, 0, 0, 477,
	478, 660, 0, 479, 0, 661, 480, 481, 473, 482,
	483, 0, 485, 486, 487, 488, 489, 490, 0, 491,
	492, 662, 493, 494, 495, 663, 496, 497, 498, 664,
	499, 665, 500, 501, 0, 502, 503, 0, 504, 505,
	506, 507, 0, 509, 510, 666, 511, 512, 514, 513,
	515, 0, 516, 0, 517, 518, 519, 0, 0, 0,
	0, 0, 520, 0, 522, 523, 524, 525, 521, 526,
	527, 528, 529, 530, 0, 531, 532, 533, 0, 534,
	535, 536, 537, 538, 667, 0, 0, 540, 541, 547,
	548, 549, 542, 543, 550, 551, 552, 553, 554, 0,
	556, 557, 555, 558, 559, 560, 0, 561, 562, 544,
	545, 563, 564, 0, 565, 566, 567, 568, 569, 570,
	571, 668, 0, 572, 0, 573, 574, 575, 577, 546,
	578, 583, 584, 669, 579, 580, 581, 582, 670, 586,
	587, 0, 588, 589, 0, 585, 576, 0, 590, 591,
	592, 593, 594, 595, 596, 358, 597, 0, 598, 671,
	672, 673, 674, 0, 607, 0, 599, 600, 601, 675,
	602, 676, 0, 603, 604, 605, 606, 0, 608, 609,
	0, 0, 610, 611, 612, 614, 615, 613, 616, 0,
	617, 0, 0, 618, 619, 620, 677, 678, 679, 0,
	622, 621, 623, 680, 0, 624, 0, 0, 0, 0,
	625, 626, 681, 627, 628, 629, 1782, 1783, 0, 1815,
	1816, 1817, 1826, 1827, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 1813,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 1782,
	1783, 1784, 1815, 1816, 1817, 1826, 1827, 1828, 0, 0,
	0, 1804, 0, 0, 0, 0, 0, 0, 0, 0,
	1801, 1819, 1813, 0, 0, 0, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1807, 1808, 1809, 1810, 0,
	0, 0, 0, 0, 0, 1790, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1782, 1783,
	0, 1815, 1816, 1817, 1826, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1813, 0, 1823, 0, 0, 1833, 0, 1785, 0,
	0, 0, 0, 1812, 1814, 0, 0, 1832, 1807, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 1790, 0,
	1829, 0, 1830, 0, 1838, 0, 0, 0, 0, 1799,
	1800, 0, 0, 1784, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1804, 0, 0, 0, 1821, 0, 0,
	0, 0, 1801, 0, 0, 0, 1823, 0, 0, 1833,
	0, 0, 1805, 0, 0, 0, 1812, 1814, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 1830, 0, 0, 0, 0,
	0, 0, 1799, 1800, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1805, 0, 1807, 1808, 1809,
	1810, 0, 0, 0, 0, 1835, 0, 1790, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 1823, 0, 0, 1833, 0,
	0, 0, 0, 0, 0, 1812, 1814, 1820, 0, 0,
	1811, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 1829, 0, 1830, 0, 0, 0, 0, 0,
	0, 1799, 1800, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1824, 0, 0, 0, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1837, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 1820, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1835, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 1797, 1803, 1825, 1802, 1798, 0,
	1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792, 0,
	0, 0, 1811, 4552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 1797, 1803, 1825,
	1802, 1798, 1824, 1795, 1793, 1794, 1786, 1787, 1788, 1789,
	1791, 1792, 0, 0, 1782, 1783, 4513, 1815, 1816, 1817,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1837, 0, 0, 1819, 1813, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1797, 1803, 1825, 1802,
	1798, 0, 1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791,
	1792, 0, 0, 1782, 1783, 4512, 1815, 1816, 1817, 1826,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1813, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 1807, 1808, 1809, 1810, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 1838,
	0, 0, 0, 0, 0, 0, 1782, 1783, 1784, 1815,
	1816, 1817, 1826, 1827, 1828, 0, 0, 0, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 1819, 1813,
	0, 1823, 0, 0, 1833, 0, 1785, 0, 0, 0,
	0, 1812, 1814, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	1830, 0, 1838, 0, 0, 0, 0, 1799, 1800, 0,
	0, 1784, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1804, 0, 0, 0, 1821, 0, 0, 0, 0,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 1807, 1808, 1809, 1810, 0, 0, 0, 0,
	0, 0, 1790, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	1823, 0, 0, 1833, 0, 0, 0, 0, 0, 0,
	1812, 1814, 1820, 0, 0, 1807, 1808, 1809, 1810, 0,
	0, 0, 0, 1835, 0, 1790, 0, 1829, 0, 1830,
	0, 0, 0, 0, 0, 0, 1799, 1800, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 1833, 0, 0, 1805,
	0, 0, 0, 1812, 1814, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1829, 0, 1830, 0, 0, 0, 0, 0, 0, 1799,
	1800, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1831, 0, 0, 0, 1821, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 1820, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1835, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1831, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 1835, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 1797, 1803, 1825, 1802, 1798, 1824, 1795, 1793,
	1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 0,
	1811, 4323, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 1806, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1782, 1783, 0, 1815, 1816, 1817, 1826, 1827, 1828,
	1824, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1813, 0, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 1837, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	1796, 1797, 1803, 1825, 1802, 1798, 1784, 1795, 1793, 1794,
	1786, 1787, 1788, 1789, 1791, 1792, 1804, 0, 0, 0,
	4157, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1796, 1797, 1803, 1825, 1802, 1798, 0,
	1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792, 0,
	0, 0, 0, 4087, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1807, 1808, 1809, 1810, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 0, 1815, 1816, 1817, 1826, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1813, 0, 0, 1823, 0,
	0, 1833, 1785, 0, 0, 0, 0, 0, 1812, 1814,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 1830, 1838, 0,
	0, 0, 0, 0, 1799, 1800, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	0, 0, 1821, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	1782, 1783, 0, 1815, 1816, 1817, 1826, 1827, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1813, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 1820,
	0, 1807, 1808, 1809, 1810, 1784, 0, 0, 0, 0,
	1835, 1790, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 1812,
	1814, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 1830, 0,
	0, 0, 0, 0, 0, 1799, 1800, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	1808, 1809, 1810, 1821, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 1824, 0, 0, 1805, 0,
	0, 1782, 1783, 0, 1815, 1816, 1817, 1826, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1813, 0, 1837, 1823, 0, 0,
	1833, 1785, 0, 0, 0, 0, 0, 1812, 1814, 0,
	1832, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 1830, 1838, 0, 0,
	1820, 0, 0, 1799, 1800, 0, 1784, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 1821, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 1797,
	1803, 1825, 1802, 1798, 0, 1795, 1793, 1794, 1786, 1787,
	1788, 1789, 1791, 1792, 0, 0, 1811, 0, 4086, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	1807, 1808, 1809, 1810, 0, 0, 0, 0, 0, 1835,
	1790, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 1823, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 1812, 1814,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 1830, 0, 0,
	0, 0, 0, 0, 1799, 1800, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 0, 1805, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	1797, 1803, 1825, 1802, 1798, 0, 1795, 1793, 1794, 1786,
	1787, 1788, 1789, 1791, 1792, 1837, 0, 0, 0, 4085,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 1797, 1803,
	1825, 1802, 1798, 0, 1795, 1793, 1794, 1786, 1787, 1788,
	1789, 1791, 1792, 0, 0, 1811, 0, 3743, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 1782, 1783, 0, 1815, 1816, 1817, 1826, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1813, 1824, 0, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1837, 1838, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 0, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 1797,
	1803, 1825, 1802, 1798, 0, 1795, 1793, 1794, 1786, 1787,
	1788, 1789, 1791, 1792, 0, 0, 0, 0, 3243, 0,
	1807, 1808, 1809, 1810, 0, 0, 0, 0, 0, 0,
	1790, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1782, 1783, 0, 1815, 1816, 1817, 1826, 1827,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1813, 0, 0, 1823, 0,
	0, 1833, 1785, 0, 0, 0, 0, 0, 1812, 1814,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 1830, 1838, 0,
	0, 0, 0, 0, 1799, 1800, 0, 1784, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1804, 0, 0,
	0, 0, 1821, 0, 0, 0, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	1782, 1783, 0, 1815, 1816, 1817, 1826, 1827, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1813, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 1820,
	0, 1807, 1808, 1809, 1810, 1784, 0, 0, 0, 0,
	1835, 1790, 0, 0, 0, 1804, 0, 0, 0, 0,
	0, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 1812,
	1814, 0, 0, 0, 0, 1811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1829, 0, 1830, 0,
	0, 0, 0, 0, 0, 1799, 1800, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	1808, 1809, 1810, 1821, 0, 0, 0, 0, 0, 1790,
	0, 0, 0, 0, 0, 1824, 0, 0, 1805, 0,
	0, 1782, 1783, 0, 1815, 1816, 1817, 1826, 1827, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1813, 0, 1837, 1823, 0, 0,
	1833, 1785, 0, 0, 0, 0, 0, 1812, 1814, 0,
	1832, 0, 1831, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 1830, 1838, 0, 0,
	1820, 0, 0, 1799, 1800, 0, 1784, 0, 0, 0,
	0, 1835, 0, 0, 0, 0, 1804, 0, 0, 0,
	0, 1821, 0, 0, 0, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 1797,
	1803, 1825, 1802, 1798, 0, 1795, 1793, 1794, 1786, 1787,
	1788, 1789, 1791, 1792, 0, 0, 1811, 0, 3242, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 0,
	1807, 1808, 1809, 1810, 0, 0, 0, 0, 0, 1835,
	1790, 0, 0, 0, 0, 0, 1824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1837, 1823, 0,
	0, 1833, 0, 0, 0, 0, 0, 0, 1812, 1814,
	0, 0, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1829, 0, 1830, 0, 0,
	0, 0, 0, 0, 1799, 1800, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 0, 1805, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1796,
	1797, 1803, 1825, 1802, 1798, 0, 1795, 1793, 1794, 1786,
	1787, 1788, 1789, 1791, 1792, 1837, 0, 0, 0, 3241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1835, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 1797, 1803,
	1825, 1802, 1798, 0, 1795, 1793, 1794, 1786, 1787, 1788,
	1789, 1791, 1792, 0, 0, 1811, 0, 3240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 1782,
	1783, 0, 1815, 1816, 1817, 1826, 1827, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1813, 0, 0, 1824, 0, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 1837, 0, 0, 0,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1796, 1797,
	1803, 1825, 1802, 1798, 0, 1795, 1793, 1794, 1786, 1787,
	1788, 1789, 1791, 1792, 0, 0, 3205, 0, 1807, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 1790, 4786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 1783, 0, 1815, 1816, 1817, 1826, 1827, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1813, 0, 0, 1823, 0, 0, 1833,
	1785, 0, 0, 0, 0, 0, 1812, 1814, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 1830, 1838, 0, 0, 0,
	0, 0, 1799, 1800, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	1821, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 0, 0, 1782, 1783,
	0, 1815, 1816, 1817, 1826, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1813, 0, 0, 0, 0, 3176, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 1820, 0, 1807,
	1808, 1809, 1810, 1784, 0, 0, 0, 0, 1835, 1790,
	0, 3305, 0, 1804, 0, 3304, 0, 0, 0, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	4785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 1812, 1814, 0,
	0, 3177, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 1830, 0, 0, 0,
	0, 0, 0, 1799, 1800, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 1808, 1809,
	1810, 1821, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 2716, 1824, 0, 0, 1805, 0, 0, 1782,
	1783, 0, 1815, 1816, 1817, 1826, 1827, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1813, 0, 1837, 1823, 2715, 0, 1833, 1785,
	0, 0, 0, 0, 0, 1812, 1814, 0, 1832, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 1830, 1838, 0, 0, 1820, 0,
	0, 1799, 1800, 0, 1784, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 1821,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 1797, 1803, 1825,
	1802, 1798, 0, 1795, 1793, 1794, 1786, 1787, 1788, 1789,
	1791, 1792, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1807, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 1835, 1790, 0,
	0, 0, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 1823, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 1812, 1814, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 1830, 0, 0, 0, 0,
	0, 0, 1799, 1800, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 1805, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 1797, 1803,
	1825, 1802, 1798, 0, 1795, 1793, 1794, 1786, 1787, 1788,
	1789, 1791, 1792, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1797, 1803, 1825, 1802,
	1798, 0, 1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791,
	1792, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1783, 1806, 1815, 1816, 1817,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 1813, 0, 0,
	0, 0, 0, 1824, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 1837, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 1797, 1803, 1825,
	1802, 1798, 0, 1795, 1793, 1794, 1786, 1787, 1788, 1789,
	1791, 1792, 0, 1807, 1808, 1809, 1810, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 1783, 0, 1815, 1816,
	1817, 1826, 1827, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1819, 1813, 0,
	0, 1823, 0, 0, 1833, 1785, 0, 0, 0, 0,
	0, 1812, 1814, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	1830, 1838, 0, 0, 0, 0, 0, 1799, 1800, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 0, 1821, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1782, 1783, 0, 1815, 1816, 1817, 1826,
	1827, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 1813, 0, 0, 0,
	0, 0, 0, 1785, 1831, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 1065, 1807, 1808, 1809, 1810, 0, 1838,
	0, 0, 0, 1835, 1790, 0, 0, 0, 1784, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1804, 0,
	0, 0, 0, 0, 0, 0, 0, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 1812, 1814, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 1830, 0, 0, 0, 0, 0, 0, 1799, 1800,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 1807, 1808, 1809, 1810, 0, 0, 1824, 0,
	0, 1805, 1790, 0, 0, 0, 0, 0, 3311, 0,
	0, 0, 0, 0, 1782, 1783, 0, 1815, 1816, 1817,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 1819, 1813, 0, 0,
	1823, 3306, 0, 1833, 1785, 1831, 0, 0, 0, 0,
	1812, 1814, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 0, 0, 0, 1829, 0, 1830,
	1838, 0, 0, 0, 1835, 0, 1799, 1800, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 1821, 0, 0, 0, 1801, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 1796, 1797, 1803, 1825, 1802, 1798, 0, 1795, 1793,
	1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 1831, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1820, 0, 1807, 1808, 1809, 1810, 0, 0, 1824,
	0, 0, 1835, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 3724, 1833, 0, 0, 0, 0, 0,
	0, 1812, 1814, 0, 0, 0, 0, 1811, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	1830, 0, 0, 0, 0, 0, 0, 1799, 1800, 0,
	1806, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 1824, 0, 0,
	1805, 0, 1796, 1797, 1803, 1825, 1802, 1798, 0, 1795,
	1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1837, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1835, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1796, 1797, 1803, 1825, 1802, 1798, 0, 1795, 1793, 1794,
	1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1782,
	1783, 1806, 1815, 1816, 1817, 1826, 1827, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1813, 0, 0, 0, 0, 0, 1824, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 1837,
	0, 0, 0, 0, 1784, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 0,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 1797, 1803, 1825, 1802, 1798, 0, 1795, 1793,
	1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 1807, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 0, 1790, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1782, 1783, 0, 1815, 1816, 1817, 1826, 1827, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1813, 0, 0, 1823, 3244, 0, 1833,
	1785, 0, 0, 0, 0, 0, 1812, 1814, 0, 1832,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 1830, 1838, 0, 0, 0,
	0, 0, 1799, 1800, 0, 1784, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1804, 0, 0, 0, 0,
	1821, 0, 0, 0, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 0, 0, 1782, 1783,
	0, 1815, 1816, 1817, 1826, 1827, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 1813, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 1820, 0, 1807,
	1808, 1809, 1810, 1784, 0, 0, 0, 0, 1835, 1790,
	0, 0, 0, 1804, 0, 0, 0, 0, 3271, 0,
	0, 0, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 1812, 1814, 0,
	0, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1829, 0, 1830, 0, 0, 0,
	0, 0, 0, 1799, 1800, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 1808, 1809,
	1810, 1821, 0, 0, 0, 0, 0, 1790, 0, 0,
	0, 0, 0, 1824, 0, 0, 1805, 0, 0, 1782,
	1783, 0, 1815, 1816, 1817, 1826, 1827, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1813, 0, 1837, 1823, 0, 0, 1833, 1785,
	0, 0, 0, 0, 0, 1812, 1814, 0, 1832, 0,
	1831, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1829, 0, 1830, 1838, 0, 0, 1820, 0,
	0, 1799, 1800, 0, 1784, 0, 0, 0, 0, 1835,
	0, 0, 0, 0, 1804, 0, 0, 0, 0, 1821,
	0, 0, 0, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1805, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 1797, 1803, 1825,
	1802, 1798, 0, 1795, 1793, 1794, 1786, 1787, 1788, 1789,
	1791, 1792, 0, 0, 1811, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 0, 1807, 1808,
	1809, 1810, 0, 0, 0, 0, 0, 1835, 1790, 0,
	0, 0, 0, 0, 1824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1837, 1823, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 1812, 1814, 0, 0,
	0, 0, 1811, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1829, 0, 1830, 0, 0, 0, 0,
	0, 0, 1799, 1800, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1824, 0, 0, 1805, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1796, 1797, 1803,
	1825, 1802, 1798, 0, 1795, 1793, 1794, 1786, 1787, 1788,
	1789, 1791, 1792, 1837, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1831,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1835, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2296, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1796, 1797, 1803, 1825, 1802,
	1798, 0, 1795, 1793, 1794, 1786, 1787, 1788, 1789, 1791,
	1792, 0, 0, 1811, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1782, 1783, 1806, 1815, 1816, 1817,
	1826, 1827, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 1813, 0, 0,
	0, 0, 0, 1824, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 0, 0, 0, 1837, 0, 0, 0, 0, 1784,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1804,
	0, 0, 0, 0, 0, 0, 0, 0, 1801, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1796, 1797, 1803, 1825,
	1802, 1798, 0, 1795, 1793, 1794, 1786, 1787, 1788, 1789,
	1791, 1792, 0, 1807, 1808, 1809, 1810, 0, 0, 0,
	0, 0, 0, 1790, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1782, 1783, 0, 1815, 1816,
	1817, 1826, 1827, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1813, 0,
	0, 1823, 0, 0, 1833, 1785, 0, 0, 0, 0,
	0, 1812, 1814, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1829, 0,
	1830, 1838, 0, 0, 0, 0, 0, 1799, 1800, 0,
	1784, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1804, 0, 0, 0, 0, 1821, 0, 0, 0, 1801,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1831, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 1808, 1809, 1810, 0, 0,
	0, 0, 0, 1835, 1790, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 1812, 1814, 0, 0, 0, 0, 1811, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1829,
	0, 1830, 0, 0, 0, 0, 0, 0, 1799, 1800,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1837,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1831, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1835, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1796, 1797, 1803, 1825, 1802, 1798, 0, 1795, 1793,
	1794, 1786, 1787, 1788, 1789, 1791, 1792, 0, 0, 1811,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1796, 1797, 1803, 1825, 1802, 1798, 0, 1795,
	1793, 1794, 1786, 1787, 1788, 1789, 1791, 1792,
}

var sqlPact = [...]int{
	270, -1000, -1000, -1000, -1000, 295, -1000, -1000, 285, 282,
	280, 279, 278, 277, 275, 273, 272, 271, 264, -1000,
	-1000, -1000, -1000, -1000, -1000, 262, -1000, -1000, 260, -1000,
	259, 257, 254, -1000, -1000, 248, -1000, 245, -1000, -1000,
	-1000, -1000, 242, 236, 233, 93955, 93401, 94502, 2403, 116003,
	101094, 2100, 83471, 115449, 82917, 114895, 2299, 12061, 114341, 2827,
	224, -1000, 113787, 223, 222, 221, -1000, 113233, -1000, 2168,
	-1000, 219, -1000, 1749, 70111, 213, 212, 209, 2387, 208,
	-1000, 207, 206, -1000, -1000, 205, -1000, 12121, 1706, -1000,
	204, 200, -1000, 1100, 98885, 198, 196, 2421, 192, 191,
	68461, 184, 180, 2228, 2979, -1000, -1000, 2193, -1000, -1000,
	178, 177, 176, 170, 168, 167, 166, 165, 163, 161,
	159, 158, -1000, 157, 156, 155, 153, 152, -1000, 151,
	146, 143, -1000, 142, -1000, 141, 140, 135, 130, 128,
	125, 123, 122, 117, 116, 114, 113, 112, 110, 18845,
	-1000, -1000, 109, 2082, 1758, 1740, 1732, 1721, 1717, 1043,
	107, 104, 102, 96, 94, 93, 87, 86, 82, 80,
	78, 77, 72, 71, 70, 68, 58, 56, 190, 55,
	53, 52, 46, 45, 38, 37, 2649, -1000, 1613, 988,
	32730, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 123661, 116550,
	34, -181, 33, -1000, 3406, 1117, 56735, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 413, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 608, 2214, 803, -1000, -1000, -1000,
	112686, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2401,
	10, -1000, 2171, -1000, -1000, -1000, -1000, -1000, 802, -1000,
	2400, 197, 2351, -1000, -1000, -1000, 3443, 2530, 3843, 3841,
	3840, 3839, 3838, 123114, 1963, 3837, 2599, 3835, 3834, 3831,
	3830, 3829, 3828, 3827, -1000, 92847, 1110, 92293, 91739, 3463,
	112139, 91185, 111585, 76834, 48778, 976, 3436, -1000, -1000, -1000,
	-1000, -1000, -1000, 116550, -1000, 1107, -1000, -1000, 3826, 3825,
	2198, 801, 100540, -1000, 1962, -1000, -1000, -1000, -1000, 993,
	1271, 34437, 34437, 34437, 410, -1000, -1000, -1000, -1000, -1000,
	-1000, 3824, 3823, 3822, 3820, 3819, -1000, -1000, 82363, 25714,
	81809, 81255, 111031, 25148, 90631, 90077, 3818, 3817, 3816, 110477,
	76268, 3573, 3571, 1103, 2169, 1494, -1000, -1000, -1000, -1000,
	-1000, -1000, 14, 72321, 3597, 116550, -1000, 407, -1000, -1000,
	-1000, -1000, -1000, -1000, 48209, 600, 47640, 872, 47071, 597,
	-1000, -1000, -1000, -1000, 75702, -1000, 109923, 2527, 3813, 3811,
	1191, 3810, 3345, 1958, 3809, 2048, 1309, 3806, 3805, 3803,
	3802, 3799, 3798, 3797, 1596, 109369, 3047, 1632, 108815, 1816,
	75136, 1101, 89523, 94502, 2753, 108261, 1567, 1529, -1000, -1000,
	-1000, -1000, 3162, 2948, 2914, 1400, -1000, -1000, -1000, -1000,
	60102, 9838, 6822, -1000, -1000, 11335, 107707, 62922, 94502, 94502,
	-1000, -1000, -1000, -1000, -1000, 46502, 524, 45933, 950, -1000,
	-1000, 60666, 2992, -1000, -1000, -1000, -1000, 45364, 352, 44795,
	912, 116550, -1000, 3042, 2042, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2367, 1681, 3628, 2818, 74570, 2156, 1474, 3407,
	3161, 3153, 1589, 2163, 3150, 3796, 2709, 3146, 3143, 3141,
	3139, 3138, 1640, 2651, 351, 2671, 32161, 3022, 1923, 44226,
	1582, 1569, 3135, 3125, 3643, 2146, 2120, 2122, 80701, 3795,
	3794, 3368, 3124, 3118, 2875, 3077, -1000, 2988, 1592, -1000,
	-1000, -1000, -1000, -1000, 1538, -1000, -1000, -1000, -1000, -1000,
	85112, -1000, -1000, 1802, -1000, -1000, 1802, -1000, -1000, -1000,
	-1000, -1000, 1486, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1613, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2165, -1000, 2197, -1000,
	-1000, 2584, 3377, 3377, 3377, 3435, 584, 576, -1000, 190,
	-1000, -1000, 130058, -1000, -1000, 49347, 49347, 49347, 49347, 49347,
	49347, 49347, 49347, 2318, -1000, 800, -1000, -1000, 839, -1000,
	799, 744, 693, -1000, -1000, -1000, -1000, -1000, -1000, 798,
	-1000, -1000, -1000, -1000, -1000, -1000, 3597, -1000, 28614, -1000,
	-1000, -1000, 574, 792, 49347, -1000, -1000, 3667, 3664, 1070,
	-1000, 406, 1017, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3041, 790, 788, -1000, 787,
	786, 785, 783, 781, -1000, 780, -1000, 777, 776, 775,
	773, 771, 769, 768, 767, -1000, 2191, -1000, -1000, -1000,
	-1000, -1000, -1000, 734, 732, 732, 732, -1000, 1086, -1000,
	-1000, -1000, 547, 729, 491, 728, 721, 717, -1000, 763,
	761, 757, 756, 755, 752, 751, 750, 748, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1085, -1000, -1000, -1000, -1000,
	7, 116550, -1000, 608, 7, -1000, -1000, 746, -1000, 36742,
	36742, 36742, -1000, -1000, 2399, 49347, -1000, 2555, -1000, 19,
	19, 961, 58406, -1000, 55601, 961, 286, 850, 64030, -1000,
	2983, -1000, -1000, 745, 392, -1000, -1000, -1000, -1000, 26278,
	2982, 116550, 116550, 116550, 94502, 94502, 94502, 3792, 3276, 49347,
	-1000, -1000, 69555, 116550, 95049, -1000, -1000, 3553, 70663, 69008,
	116550, 3033, 107153, 3791, -1000, -1000, -1000, -1000, -1000, 3235,
	3789, 3788, 3787, -1000, 116550, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 244, 3233, -1000, -1000, 98331, 244, 3230, -1000,
	244, 3229, -1000, 97784, -1000, -1000, 2435, 3228, -1000, -1000,
	253, 3226, -1000, -1000, -1000, 250, 3225, -1000, -1000, 375,
	-78, 3223, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 130058, -1000, -1000, -1000, 106599, -1000,
	3380, -1000, -1000, 116550, -1000, 49347, -1000, 3552, 1940, 77952,
	3492, -4, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2571,
	2549, 1210, 2429, -1000, 3288, 1454, 34437, 3333, -1000, -1000,
	-1000, -1000, -1000, 354, 26278, -1000, -1000, -1000, -1000, -1000,
	-1000, 3007, 3221, 1504, -1000, 2425, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2008, 3220, -1000, 1654, 3218, 2005,
	-1000, -1000, 2969, -1000, 3360, -1000, -1000, 1854, 3216, 20,
	-1000, -1000, 2471, -1000, -1000, -1000, -1000, 2112, -1000, 1354,
	3214, -1000, 2817, 2817, 88969, 3190, 62358, 60666, 72321, 2,
	-1000, -1000, -1000, -1000, -236, -1000, 24578, 130058, -1000, -1000,
	-1000, -1000, 1956, 130058, 1019, -1000, -1000, 3205, -1000, 130058,
	1013, -1000, -1000, 3204, -1000, 3031, -1000, -1000, 2485, -1000,
	-1000, 3785, -1000, -1000, 3783, -1000, 3782, 3781, 3780, -1000,
	1874, 2166, 3777, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 88422, 2397, -1000, -1000, 87314, 3027, -1000, 2484, 3489,
	-1000, 87868, 1095, -1000, 1051, 2483, -1000, 97237, 1084, 2482,
	-1000, 3775, 3462, 2768, 1051, 2481, -1000, -1000, -1000, -1000,
	-1000, 900, -1000, 66247, -1000, 66247, -1000, 1716, -1000, 122567,
	19, 94502, 3597, -1000, -22, -1000, -1000, -1000, 1117, -1000,
	59533, -1000, 59533, 99986, 77398, 1031, 848, 67907, 129877, -1000,
	1066, -1000, -1000, 130058, -1000, -1000, -1000, -86, 2816, -1000,
	77398, 61794, 130058, -1000, -1000, -1000, -1000, 130058, -1000, -1000,
	-1000, 77398, 87314, -1000, 106045, 86767, -1000, -1000, 1590, 2619,
	-1000, -1000, -1000, 77398, 1366, 77398, 77398, 77398, -1000, 105491,
	-1000, -1000, 2188, 1622, 3364, 2182, 94502, -1000, 1966, -1000,
	-1000, -1000, 3397, 3178, 116550, -1000, -1000, 3023, -1000, 71774,
	96690, -1000, 96143, -1000, 95596, -1000, 94502, -1000, 94502, -1000,
	3773, 3771, 3770, -1000, -1000, 3769, -1000, 3768, 3386, -1000,
	882, 43657, 130058, 3383, -1000, 3767, 3483, 3022, 130058, -1000,
	3177, 1757, 1754, 116550, -1000, -1000, 116550, -1000, 116550, -1000,
	-1000, -1000, 1646, -1000, -1000, 2568, -1000, -1000, -1000, -1000,
	94502, 94502, 94502, 94502, 1607, -1000, 43088, -1000, -1000, 3127,
	3765, 1842, -1000, 1914, -1000, 2973, 3398, -1000, 1579, 1938,
	-1000, -1000, 256, -1000, -1000, -4, -1000, 122020, -1000, 2584,
	-1000, 116550, -1000, 2596, 3014, 3021, 1684, 2412, 2684, -1000,
	42519, 2642, 52761, 2420, 190, -1000, -1000, 190, 190, 33868,
	-1000, -1000, 70663, 70663, 26278, 1518, 49347, 49347, 49347, 49347,
	49347, 49347, 49347, 49347, 49347, 49347, 49347, 49347, 49347, 49347,
	49347, 49347, 49347, 49347, 49347, 49347, 49347, 49347, 49347, 49347,
	49347, 49347, 49347, 49347, 49347, 49347, 49347, 49347, 49347, 49347,
	49347, 49347, 2265, 49347, 1485, 49347, 49347, 49347, 49347, 2065,
	-1000, -1000, 2070, 627, 2180, 744, -1000, -1000, -1000, 3598,
	3598, 3598, 546, 546, 546, 130664, 130664, 668, 3764, 839,
	-1000, 49347, -1000, 127, 58960, 49347, 26844, -1000, 576, 9596,
	2631, -1000, 575, 27442, -1000, -1000, -1000, 28614, 693, 41921,
	49347, 1077, 130058, -1000, -1000, 1409, 3624, 24008, 2959, 2864,
	743, 954, 952, 31563, 30965, 30367, 29769, 945, 758, 49347,
	49347, 49347, 49347, 49347, 49347, 49347, 49347, -1000, -1000, 3631,
	-1000, 3624, -1000, -1000, -1000, -1000, 3624, 1506, 1496, 3624,
	-1000, 3624, 3624, 9217, 9217, 41352, 40783, 40214, 53330, 39645,
	49347, 29200, 39076, 38507, -1000, 116550, 7, 3551, 49347, 187,
	-1000, 128278, -1000, 187, 187, 742, -23, 130058, 2688, 2688,
	57292, 2287, 2327, 2327, 2327, -1000, 961, 19419, 961, 104390,
	2332, 961, 961, 347, 374, 570, 55037, 2555, 104390, 822,
	741, 31, 30, 28, -1000, -1000, 27, 25, -1000, -1000,
	94502, 740, 26844, 26278, 344, 2109, -29, 2683, 2682, -1000,
	2677, 2673, -1000, 2668, -1000, 1969, -31, 1481, 94502, 116550,
	1535, 3762, -8, -1000, 4968, -36, -1000, 1159, 343, 3624,
	-1000, -1000, -1000, -1000, -1000, 3758, 3757, -1000, 1083, 737,
	735, 521, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	734, 732, 732, 732, -1000, 547, 729, 491, 728, 721,
	717, -1000, -1000, -1000, -1000, -1000, 2972, 94502, 116550, 1530,
	3756, -236, 95049, -80, -1000, -1000, 116550, -1000, -1000, -1000,
	3742, -1000, 94502, -1000, -1000, 94502, 244, 3200, -1000, 94502,
	-1000, 94502, 241, 3199, -1000, -1000, 116550, -1000, 94502, 94502,
	-1000, 116550, 116550, 116550, 77398, 77398, 228, -1000, 94502, 953,
	-37, 1216, -4, -1000, -1000, -1000, -1000, -1000, 1802, -1000,
	1830, -1000, -1000, -1000, -1000, -1000, -1000, 1573, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1070, -1000, -1000, -1000,
	-1000, -1000, -1000, 3614, 3604, 4, -1000, -1000, 26278, -1000,
	-5, 1756, 2023, 1479, -1000, 80147, 2489, 3370, 3741, 2756,
	3352, 1707, -1000, 1636, -1000, 3452, 85112, 3501, 3540, 1379,
	-1000, 2971, -1000, -1000, 990, 1827, 1910, 1467, 1452, 85112,
	1654, -1000, 70663, -1000, 2750, 3434, 1457, 1459, 1457, 1457,
	1466, -1000, 85112, 1893, 1446, 1440, 1438, 2269, 2111, 2110,
	-1000, -1000, -1000, 1436, 1435, 890, 2098, -1000, -7, 3493,
	3520, 1377, -1000, 2965, 1434, -1000, -1000, -1000, 3433, 94502,
	26278, 1631, 1623, 1610, 1883, 1420, 3, -1000, 3496, 1418,
	1416, -1000, 1124, 5010, 3309, -1000, 77398, 1124, 1124, 2000,
	3198, 2793, 1733, -1000, 2814, 959, 2813, -1000, -1000, -1000,
	959, 2, 72321, 116550, 333, -1000, 127, 49347, 49347, 127,
	49347, 127, 3482, 3197, -1000, -1000, -1000, -1000, -1000, 3740,
	2129, 2594, -1000, -1000, 716, 2475, 2964, 116550, 2693, 1,
	94502, -1000, 71227, 3196, 72876, 1654, 2474, -1000, -1000, 86213,
	-1000, 3187, 608, 2473, -1000, 782, 3738, 3184, -1000, 121473,
	-1000, 3380, 1262, 3180, 1143, 655, 3550, -1000, 655, 66799,
	-1000, 116550, -1000, 19, 6370, 79053, -38, -43, 566, -1000,
	104944, 116550, 1141, 79600, 116550, 3322, 2133, 2132, 1047, 60666,
	-1000, 60666, -50, -86, 2812, 1625, 1031, 1031, 959, -1000,
	959, -1000, 94502, 3020, -1000, -1000, 77398, 1031, 1031, 1031,
	-1000, -1000, -1000, -1000, 3737, 3736, 3735, 3733, -1000, -1000,
	1048, 94502, 116550, 94502, -1000, -1000, 1672, -1000, 325, -1000,
	116550, -1000, 116550, 116550, 94502, -1000, 1048, 116550, 1048, 116550,
	1048, 116550, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 127,
	-1000, -1000, 130058, -1000, 49347, -1000, -1000, 3732, 1755, -1000,
	3018, -1000, 3015, -1000, 63, -1000, -1000, 2034, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3731, 130058, -1000, 2086, -1000,
	-1000, -1000, -1000, 94502, 94502, 94502, 94502, 116550, 3307, -1000,
	116550, 3303, 94502, -1000, -1000, 85112, -1000, 2596, 3014, -1000,
	-1000, -1000, -1000, -1000, -1000, 1655, 2365, -1000, 2633, -1000,
	1669, -1000, -1000, -1000, 130058, 53899, -1000, -1000, 130058, 1972,
	-1000, 52192, 51623, -1000, -1000, 1846, 94502, 2697, -1000, 2697,
	-199, -1000, 128097, 2627, 94502, -1000, -1000, -1000, -1000, -1000,
	989, 707, 707, 1310, 1310, 1310, 1310, 3480, 7389, 301,
	6470, 411, 411, 7376, 7376, 7376, 7376, 7376, 411, 6922,
	546, 546, 6922, 6922, 6922, 6922, 6922, 546, 546, 546,
	411, 411, 411, 546, 130664, 130483, 8767, 49347, 49347, 1415,
	2069, 627, 8515, 49347, 10712, 10712, 10712, 10712, -1000, 1572,
	-1000, -1000, -1000, -1000, 2958, 713, 53330, 53330, -1000, -1000,
	-1000, -1000, 28028, 49347, -1000, -1000, -1000, -1000, 37909, -1000,
	-1000, 127390, -315, 565, -1000, 324, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 562,
	-184, 5, -1000, 49347, 49347, 49347, 561, -1000, 321, 49347,
	116550, -1000, 18047, 821, -194, -1000, -51, 1498, -1000, 49347,
	-1000, -1000, 1413, -1000, 1399, 1387, 1368, -1000, 712, 558,
	-1000, 320, -1000, 2325, 711, 710, 49347, -1000, -1000, -1000,
	-1000, -1000, 127209, -1000, -1000, 127111, -1000, -1000, 126930, -1000,
	-1000, 126500, -1000, -1000, -1000, -1000, -1000, 129779, 17411, 16922,
	16070, 8445, 15412, 10753, -52, 557, -53, 554, 987, 986,
	551, 549, 545, -59, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -60, 544, -1000, 2947,
	-184, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 543,
	-1000, 542, -1000, 129598, -184, 535, 599, -1000, 53330, 53330,
	53330, 53330, -1000, 530, -1000, 127999, -1000, 129173, 37340, 37340,
	37340, 526, 128992, 49347, -184, -61, -1000, -66, -1000, -1000,
	718, -67, 1038, 36742, 56178, 26278, -1000, 1038, 1038, 49347,
	-1000, 49347, 2653, -1000, -1000, -1000, -1000, 2648, 2276, 2688,
	57292, -1000, -1000, -1000, -1000, 104390, -1000, 3597, 2846, -1000,
	104390, -1000, -1000, 116550, 608, -1000, 104390, 104390, 26278, 961,
	-1000, 961, 104390, 719, -1000, -1000, -1000, -1000, -1000, 522,
	64587, 5, 317, 26278, 1051, -1000, -1000, 2763, 2763, 2763,
	2763, 2763, -1000, -1000, 116550, 1367, -1, -159, 2806, -1000,
	3577, -1000, 2208, -1000, 70663, -1000, 833, 1278, 26278, -1000,
	-1000, -1000, 709, -1000, 3624, 3624, -1000, 3624, 116550, 2945,
	160, 2795, -1000, 145, 72876, 3730, -1000, -1000, 244, -1000,
	94502, 244, 244, -1000, 94502, 94502, 2435, -1000, 253, -1000,
	250, -1000, -1000, -78, -1000, 1063, 34437, -1000, 1802, -1000,
	-1000, 1628, -1000, 2138, -1000, 1461, -1000, -1000, -1000, -1000,
	34437, -1000, 2393, 116550, 116550, 94502, -1000, 116550, -1000, 2296,
	72876, -1000, 2470, 120926, 2466, 70663, 116550, -1000, -1000, 706,
	1002, 2626, 2624, 1135, 116550, 116550, 2620, 120379, 119832, -1000,
	3729, 116550, 2210, 49347, 3430, 2268, 2486, 127, 127, -1000,
	127, 127, 127, -1000, 704, 1324, 94502, 94502, 116550, 72876,
	94502, 1924, -1000, -1000, -1000, -1000, -1000, 85659, -1000, -1000,
	3630, 3629, -1000, 1457, -1000, -1000, -1000, 1457, 1654, 1922,
	116550, 72876, 94502, 72876, -1000, -1000, 2366, 119285, 118738, 1872,
	116550, 1499, -1000, 890, 2256, 127, 127, -1000, 127, 127,
	127, 699, 26278, 2127, -1000, 3043, 116550, 3659, 118191, 3657,
	116550, 116550, 116550, 72876, 3391, 116550, 116550, 72876, -1000, 117644,
	3569, 2165, 5010, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 74004, 1148, 116550, 1354, -1000, -1000,
	1832, 1365, 1361, 85112, 2237, 1800, 1998, 116550, 60666, 1045,
	60666, 2773, -1000, -1000, 23438, -1000, 130058, 130058, -1000, 130058,
	-1000, 71227, 116550, -1000, 1093, 116550, 79600, 1023, 3173, 65695,
	-236, 1031, 77398, 94502, 1, 2693, 116550, -1000, -1000, -1000,
	-1000, -1000, 1654, 3166, 608, 2468, -1000, 77398, 3546, 3155,
	697, 3728, 3727, -1000, 94502, 2395, 2467, -1000, -1000, 117097,
	3260, 890, 116550, 1038, 57292, 2106, -1000, 63476, 1118, 116550,
	2017, 118, -1000, -1000, -1000, 43, 116550, -1000, 847, -1000,
	-1000, 6370, 6370, 1031, -244, 696, -1000, 938, 935, 61230,
	77398, -75, -1000, -1000, -1000, -1000, 2466, 94502, 116550, 1344,
	2762, 116550, -81, -1000, 306, 695, 934, 922, -1000, 2874,
	-1000, -86, -1000, 1047, 60666, 2944, 2939, -1000, -1000, 1062,
	-1000, 1575, 1031, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 18, 1995, 116550, -236, -236, -25,
	-1, -1000, 1048, -1000, 1048, -1000, 1048, -1000, 130058, -1000,
	-1000, 1741, 1731, 116550, -1000, -1000, 116550, -1000, 26278, 116550,
	94502, 26278, 94502, 3013, 3012, -1000, -1000, -1000, 116550, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1170, -1000, 1972, 2364,
	-1000, 693, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2548, -1000, -2, 33868, 969, -1000, -1000, 94502, 17,
	49347, 49347, 8481, 7842, 49347, 53330, 53330, -1000, 49347, 7043,
	-1000, -1000, -1000, -1000, -1000, 2935, 691, 49347, 70663, 5440,
	5250, -1000, 516, 10473, 6922, -1000, 49347, -1000, 477, -1000,
	515, 36173, -1000, 128703, -16, -83, -1000, 20002, -184, -84,
	-1000, -1000, 828, -1000, 3185, -1000, 49347, 128884, 2520, 2097,
	1988, 1768, 3624, 3653, 22868, -1000, 67353, 1075, 2337, 126319,
	-1000, -1000, -1000, -1000, 70663, 70663, 49347, 49347, -1000, 49347,
	49347, 49347, -1000, -1000, -1000, 3624, 971, -1000, -1000, -1000,
	971, -1000, -1000, 1457, -1000, 1457, -1000, 49347, -1000, -1000,
	2932, 49347, -1000, 70663, 70663, 53330, 53330, 53330, 53330, 53330,
	53330, 53330, 53330, 53330, 53330, 53330, 53330, 53330, 53330, 53330,
	53330, 53330, 53330, 53330, 53330, 2636, 53330, 3596, 3596, 3596,
	648, -1000, 3011, 2932, 49347, 49347, 70663, 514, 513, 510,
	-1000, 49347, -184, -1000, -1000, 10944, 690, -1000, 2537, -1000,
	2862, -1000, 49347, -1000, -82, -1000, 2555, -1000, -1000, 2862,
	2862, -89, 130058, 57292, 57292, -1000, 688, 49347, 2640, -1000,
	-1000, 820, -316, -1000, 921, -1000, -1000, -1000, -1000, -1000,
	-1000, 608, -1000, -1000, -1000, 305, 104390, 104390, 819, -1000,
	-90, -1000, -1000, -97, -1000, 3545, 507, 26278, -1000, 1038,
	2872, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -236, 116550,
	116550, 1796, 2350, 3652, -1000, 3625, 827, 812, 304, 3624,
	505, 503, 500, -236, 116550, 116550, 1787, 116550, -1000, -1000,
	-1000, 244, -1000, -1000, -1000, 241, -1000, -1000, -1000, -1000,
	2696, -1000, -4, -1000, -1000, -1000, 49347, -1000, -1000, 3369,
	1351, 1350, -1000, -1000, -1000, 2952, -1000, 3120, -1000, 2464,
	-1000, 1123, -1000, 1908, -1000, 49347, 687, 2752, 686, 676,
	3726, 2170, 3725, 1136, 3113, 2435, 3111, 2435, -1000, -1000,
	-1000, 996, -1000, 130058, 2268, -1000, 675, 674, -1000, -5,
	1689, 1939, 1335, 1061, -1000, -1000, -1000, -1000, 49347, 49347,
	103843, -1000, 506, 3360, 16, -1000, -1000, -1000, 1779, 1328,
	1266, -1000, -1000, -1000, -1000, 1654, 1776, 1264, 1263, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2463, -1000, -1000, 3109,
	1059, -1000, 3068, 3067, 975, 116550, -1000, 1058, -1000, -1000,
	-1000, -1000, 49347, -1000, -7, 1259, 3491, 2455, 94502, -1000,
	2435, 3108, 1255, -1000, 1254, -1000, -1000, -1000, 3495, 3494,
	1250, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 73440,
	-1000, -1000, 1124, 116550, 72876, 94502, 1864, -1000, -1000, 84018,
	84565, 116550, 2793, -236, 959, -1000, 2615, 959, 1045, 2928,
	-1000, 2689, 1057, 94502, 3724, 499, -98, -10, 70663, 3538,
	-1000, 2398, 747, 94502, 968, -1000, 3597, -1000, -1000, -1000,
	1056, -1000, 3487, 94502, 3533, 3107, 1051, 127, 94502, 3635,
	-1000, -1000, 3532, 94502, 3105, 2391, 2454, 2582, 890, 78506,
	1051, 2334, -62, -1000, 2017, 35575, 3358, -99, -1000, -1000,
	-1000, 1038, 66799, 57292, 49347, 3721, -100, -1000, -1000, -1000,
	-1000, -1000, 101648, 101648, 77398, 77398, 77398, 1031, 116550, 116550,
	79600, -1000, -1000, 670, 116550, 116550, 669, -1000, 116550, 116550,
	3716, 77398, 77398, 77398, -12, 667, -1000, 920, 916, 914,
	-1000, -1000, -1000, -1000, -1000, -1000, 1047, -1000, -86, 60666,
	127, -1000, 2346, 94502, -1000, 22298, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1048, -236, -1000, -1000, 2280, 2416, 2280,
	1992, 1983, -1000, -1000, 2362, -1000, -1000, -1000, -1000, 2703,
	3375, 26278, 3475, 10712, 49347, 49347, 6572, 1398, 348, 10712,
	49347, 49347, 70663, 11373, -114, 49347, 49347, -1000, 49347, 811,
	130058, -1000, 3649, 49347, 497, 494, -1000, -1000, -1000, 3620,
	-1000, -1000, -1000, 130058, 49347, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 493, -1000, 302, -1000, -1000, -1000, 124208, -1000,
	49347, 486, 3429, -1000, 476, 475, 9875, 5653, 126221, 126040,
	125595, 473, -1000, -1000, 454, 452, 130058, 3011, 130058, -1000,
	-1000, 977, 977, 1444, 1444, 1444, 1444, 3596, 394, 428,
	376, 689, 689, 689, 1139, 648, 648, 689, 689, 689,
	648, 2922, 2639, 661, 6084, -1000, -1000, 130058, 130058, 446,
	-1000, -1000, -1000, -184, 445, 10944, -1000, 2847, 3428, 130058,
	-1000, 57292, 2847, 2847, -1000, -1000, 2276, 116550, 130058, 57292,
	-1000, 2846, -1000, 20583, -1000, 26278, -1000, -1000, -1000, -1000,
	3597, -1000, 64587, -1000, 660, -1000, 44, -1000, 2872, -1000,
	913, -1000, -1000, 77398, 77398, -236, -212, 116550, -1000, -1000,
	810, 3715, 826, 26278, 444, -1000, -1000, -1000, -236, -236,
	116550, -236, -1000, -1000, -1000, 3321, 130058, 116550, 116550, 1624,
	103296, 116550, 3102, -1000, 2261, -1000, 1135, 125532, 57849, -1000,
	57849, 116550, -1000, -1000, -1000, -1000, 1991, 1511, 3710, 1181,
	-1000, 3399, 116550, -1000, 116550, -1000, -1000, -1000, 116550, 116550,
	94502, 116550, -1000, 72876, 3081, -116, 130058, -13, -1000, 911,
	-1000, 1433, -1000, 21728, 116550, 72876, 94502, 116550, 72876, 94502,
	3101, 116550, 2307, -1000, -1000, 3065, -1000, 3078, -119, 26278,
	-1000, 3648, 3647, 3096, 3403, -1000, 116550, 3644, 116550, 94502,
	3320, -1000, -1000, -1000, -1000, -1000, -1000, 1759, 1253, 1247,
	2389, -17, 2385, 2349, -25, 2237, 1045, -32, 656, -1000,
	909, -1000, -1000, 908, -1000, 1045, -1000, 77398, 60666, 3708,
	608, -1000, 2754, -1000, 99432, 2386, 127, -1000, 3706, 102202,
	654, -1000, 2345, -1000, 809, -1000, 2569, 72876, 1654, 127,
	94502, -1000, -1000, 608, 443, -34, -1000, 3247, 1132, 26278,
	94502, 3089, 2586, 890, 78506, -1000, 1262, 2684, -1000, -48,
	-1000, 772, 127, 2334, -1000, -62, 130058, -1000, 906, -1000,
	-122, -1000, -1000, 438, -1000, 3319, 3318, -1000, 2868, 57849,
	652, 651, 116550, 3314, -1000, -1000, -125, -1000, -1000, 2162,
	2162, 77398, 60666, 77398, -1000, 1047, 959, -1000, 2494, -1000,
	-1000, -1000, -1000, -1000, 26278, 1809, -1000, 650, 649, -1000,
	-1000, -1000, -1000, 3375, 10712, 10712, 49347, 49347, 49347, 10712,
	11373, -127, -1000, 10712, 10712, -184, -1000, -1000, 128703, -1000,
	-1000, -1000, 130058, -1000, 21158, 2291, -1000, 125413, -1000, 33868,
	-1000, -1000, 49347, 49347, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 53330, 2920, 646, 70663, -1000, -1000, 435, 1069,
	49347, 51054, 2555, 1069, 1069, -1000, -133, -1000, -1000, -1000,
	3597, 44, -1000, -1000, 3703, 26278, -1000, 77398, -1000, -1000,
	3702, -218, 824, -1000, 3697, -1000, -1000, 103, -1000, -1000,
	-1000, 2788, 3529, -1000, 2091, -1000, 116550, -1000, 116550, -1000,
	26278, 116550, 2884, 1317, -1000, 1002, 2616, 637, 53330, 1164,
	94502, 1036, 2836, 2831, -1000, 3564, 3425, 2811, -134, -1000,
	116550, 49347, 116550, -135, -136, 2441, -1000, -1000, 1162, 1316,
	49347, 1154, -1000, -1000, -1000, 70663, 635, 2435, 2435, -142,
	-143, -1000, -1000, -1000, 49347, 1242, 116550, 35006, -1000, 3688,
	3360, -1000, -1000, -1000, -1000, -1000, -1000, 116550, -1000, 116550,
	-1000, 49347, 1235, -1000, -1000, -1000, 3641, 2435, 26278, 2435,
	-1000, 2435, 3403, 1169, 116550, 72876, 94502, 1767, 1767, 2956,
	-1000, -1000, -1000, 2479, 2479, 77398, 60666, -1000, -78, 1045,
	-1000, 3528, 2737, 3687, -1000, -1000, -1000, -1000, 2614, -1000,
	-1000, 116550, 2607, 1035, -1000, -144, -1000, 905, 901, 79600,
	1023, 1011, -1000, -95, 634, -1000, 897, -1000, -1000, -1000,
	-1000, 608, 3527, -1000, 3636, 633, 632, 116550, 2384, 631,
	26278, 3354, 890, 78506, -1000, 3260, 2017, -1000, 2451, 116550,
	3351, -1000, 2684, 627, -1000, 1031, 626, 622, 2923, 2923,
	-149, 57849, 57849, -152, 621, 1031, -1000, -154, -1000, -1000,
	-1000, -1000, -1000, -145, -1000, 1004, 1003, -1000, -1000, 94502,
	94502, 49347, 49347, -1000, 10712, 10712, 10712, -1000, 431, -1000,
	-1000, 2334, 3422, -1000, -161, 124947, 124828, 7251, 53330, 70663,
	-160, -1000, -1000, 116550, 130058, -166, -1000, 130058, 618, 617,
	568, -1000, -1000, -1000, 808, -1000, -1000, -1000, 116550, 3683,
	-1000, 116550, 102749, 116550, -1000, -1000, 2249, -1000, -1000, -1000,
	116550, 2426, -1000, -1000, -1000, 1134, 49347, 6084, 53330, 616,
	49347, -1000, -1000, -1000, 3526, 3296, -1000, 2707, 2916, 2012,
	57849, -1000, 3375, -1000, 124765, -1000, 1126, 2118, -1000, -1000,
	-1000, -1000, 130058, 53330, 3403, 57849, -1000, -1000, 615, 614,
	130058, 613, 892, 2918, -1000, -1000, -1000, -1000, -1000, 130058,
	612, 3491, -1000, -1000, -1000, -1000, 2435, 94502, -1000, -1000,
	-1000, 1231, -1000, -1000, -1000, -1000, 3682, 3681, 2917, 84018,
	-1000, -165, -1000, -1000, 2124, 127, 2277, 2785, -1000, 2386,
	611, -1000, -1000, 2368, 2681, -1000, 102202, 34437, 34437, 427,
	3524, 1011, -1000, 3608, -1000, 3295, 3295, 49347, 3522, 127,
	-1000, 3635, 57849, -1000, 94502, 57849, 2383, 2190, 2563, 78506,
	-1000, 2582, -1000, -1000, -185, 116550, 2017, -1000, -1000, 77398,
	77398, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1126, -187, -188, -1000, 77398, -1000, -1000, 2494,
	-1000, 116550, -1000, 116550, -1000, -1000, -198, -201, -1000, 2248,
	49347, 33868, -1000, -1000, 7251, -206, -1000, -175, -1000, 3521,
	51054, 3676, 3675, 3674, -1000, -236, -1000, -236, -1000, 2087,
	-1000, -1000, -1000, 3084, 2852, 18681, 6084, 2540, 116550, 18245,
	-1000, 3505, 2909, -1000, -1000, 2737, 610, -1000, -1000, -1000,
	-1000, 969, 116550, 2737, 2851, 94502, 6084, 1133, -207, 2280,
	2280, 49347, 33299, 2304, 49347, -1000, -1000, 3403, 116550, -1000,
	-1000, 116550, 2377, -1000, 2888, 3606, -1000, 1023, -1000, 2278,
	116550, -1000, 3394, -1000, 3313, -1000, -1000, -1000, 2754, 127,
	-1000, -1000, -1000, -213, 130058, 127, -1000, 417, -216, 1132,
	-222, 94502, 2076, -1000, 890, -1000, 2586, 1038, -1000, -1000,
	-223, -224, 2012, 1126, 2256, -231, -1000, -233, -251, -1000,
	-1000, 415, 50485, 50485, 50485, -184, -199, -1000, 116550, 609,
	-1000, -1000, -1000, -1000, -1000, 3062, 1044, -1000, 903, 1952,
	255, 1161, -1000, -1000, -1000, 2256, 116550, -1000, -1000, -1000,
	1041, 608, -1000, 49347, 1126, -254, -1000, 1116, -257, -1000,
	1115, -262, -1000, 2913, -1000, -265, 2435, -263, 228, 1767,
	1037, 3479, -1000, -1000, -1000, 2368, 94502, -272, -1000, -1000,
	2452, -1000, 2737, 1035, -1000, -1000, -1000, 1126, 607, 2012,
	604, 1597, 890, -1000, -1000, 1457, 3354, 3132, 1031, 1031,
	2737, 2012, 1028, -1000, 1031, -1000, -1000, -1000, 3238, -1000,
	54468, 2396, 1975, 127818, 3238, 3238, -1000, -1000, 116550, 3468,
	-1000, 949, 946, 1561, -1000, -1000, -1000, -1000, -1000, -1000,
	2811, -273, 3467, 2540, 130058, 2737, -1000, 2280, 2780, -1000,
	2280, 2910, -1000, 2250, -1000, -1000, -1000, 2870, -1000, 2897,
	-1000, 1928, 3588, 2552, 603, -1000, 116550, 1965, 1955, 3673,
	2277, 2368, 2012, 57849, 2737, 57849, 2231, -1000, 116550, -1000,
	2190, 1388, -1000, -1000, 2256, 2737, 1038, 602, -1000, -1000,
	2040, 3559, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	867, -1000, 3284, -1000, 1152, 2099, 2099, 1038, -1000, 858,
	903, -1000, -1000, 601, -1000, 598, -1000, 2348, 116550, 2340,
	-1000, -1000, -1000, -1000, 116550, -1000, -1000, 3672, -1000, 1023,
	-1000, 2737, -274, 2256, -275, -1000, -1000, -1000, -236, 2076,
	-1000, 1702, 1028, 2256, -1000, 1974, -1000, -1000, 2330, 49916,
	49347, -1000, 3580, -1000, -1000, 2650, -1000, -1000, 49347, 2811,
	49347, 49347, -1000, 228, 65141, -280, -1000, 2368, 2256, 1126,
	1028, 2012, 1597, 66799, 1038, 1028, -1000, -1000, -1000, 130058,
	-1000, -1000, -1000, 130058, -1000, -287, -292, -1000, -244, 101648,
	2417, 2552, 1028, 2012, 1038, 2737, 2231, -264, -1000, 1038,
	2256, 1223, -295, -1000, -1000, -1000, -1000, 1038, 2737, -1000,
	2256, -1000, -1000, -1000, -1000, -1000, 586, -1000, -1000, 2256,
	1028, 49347, 1028, 1038, -302, 1038, -1000, 2256, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4489, 4486, 4484, 4483, 4482, 4479, 4476, 4474, 4472,
	4471, 4469, 4468, 139, 4467, 4465, 4464, 4461, 4460, 4453,
	4451, 4450, 4447, 4445, 4441, 4439, 4438, 4436, 4435, 4433,
	4432, 4427, 4426, 4425, 4424, 4422, 4421, 4420, 4419, 4418,
	4417, 4416, 4415, 4414, 4413, 4412, 4411, 4410, 4409, 4405,
	4404, 4403, 4400, 4398, 4397, 4395, 4393, 4392, 4391, 4390,
	4389, 4388, 4387, 4386, 4383, 4382, 55, 4380, 4379, 4378,
	4377, 4376, 4375, 4374, 4373, 4372, 4368, 4366, 4365, 4356,
	4353, 4352, 4351, 4347, 4346, 4344, 4343, 63, 4339, 276,
	4337, 4334, 4332, 4327, 4318, 4316, 4308, 4306, 4305, 4302,
	4301, 4297, 275, 4295, 119, 163, 4294, 4291, 3846, 4290,
	4289, 269, 4278, 4277, 4276, 4275, 284, 4268, 4264, 4263,
	4262, 4261, 4260, 4258, 4257, 4256, 4255, 4254, 96, 201,
	4252, 4250, 1355, 4248, 4245, 4241, 4235, 4231, 4230, 4229,
	4228, 4225, 4224, 248, 173, 4222, 268, 4220, 4219, 4218,
	4217, 4213, 4212, 4210, 4208, 4207, 4206, 4201, 4199, 4197,
	4195, 4191, 4186, 4184, 4183, 4182, 4181, 4180, 4179, 4178,
	4170, 4169, 4168, 4166, 4165, 4164, 4163, 4161, 4160, 4159,
	4157, 4156, 4155, 4152, 4148, 4147, 245, 170, 198, 4146,
	4145, 267, 266, 4144, 4143, 4138, 4137, 4136, 132, 11,
	253, 4134, 4132, 106, 85, 86, 97, 95, 100, 4130,
	115, 4124, 123, 69, 4123, 22, 4, 219, 246, 13257,
	241, 4122, 4121, 4120, 243, 200, 4119, 239, 4117, 4115,
	4113, 4112, 4109, 4108, 72, 47, 183, 180, 175, 178,
	265, 4107, 159, 98, 82, 62, 50, 8, 89, 211,
	21, 2, 216, 4106, 261, 5, 142, 6, 33, 4105,
	4104, 4103, 4100, 3451, 129, 4099, 263, 240, 171, 4098,
	4097, 4094, 1153, 4092, 4091, 59, 4090, 104, 88, 122,
	16, 128, 4089, 150, 168, 38, 4087, 164, 57, 4086,
	161, 90, 91, 10424, 12118, 4085, 4082, 116, 67, 133,
	4283, 208, 181, 203, 111, 155, 167, 109, 213, 212,
	190, 56, 4079, 249, 4071, 3527, 73, 187, 153, 5681,
	4070, 4068, 4065, 83, 204, 103, 4061, 4056, 80, 13,
	36, 1, 9, 141, 20, 19, 10, 4051, 24, 126,
	49, 30, 4050, 28, 4048, 4046, 4044, 4041, 4038, 41,
	160, 4036, 4035, 281, 4031, 84, 54, 32, 4030, 177,
	217, 4029, 233, 131, 4028, 4027, 257, 207, 179, 4024,
	42, 234, 4023, 4022, 4021, 4018, 4017, 140, 12, 134,
	4014, 4013, 144, 4012, 53, 242, 202, 4011, 58, 4010,
	4007, 182, 102, 138, 271, 193, 228, 121, 232, 189,
	238, 4006, 4005, 4004, 194, 4000, 3999, 225, 166, 3998,
	3994, 254, 285, 93, 46, 79, 236, 81, 196, 156,
	3993, 206, 3992, 3991, 278, 186, 221, 3, 23, 112,
	130, 3989, 7, 235, 154, 222, 117, 3988, 7424, 2366,
	3425, 3987, 3986, 148, 127, 77, 118, 152, 262, 71,
	3984, 3983, 2679, 3982, 3980, 3979, 3977, 192, 3975, 3973,
	3972, 143, 162, 188, 3971, 94, 78, 52, 25, 124,
	250, 277, 113, 229, 169, 255, 3970, 3969, 3968, 197,
	3967, 76, 136, 172, 205, 247, 61, 3966, 209, 3965,
	147, 1024, 66, 149, 3964, 226, 3963, 3962, 3961, 3957,
	3956, 3955, 3954, 865, 231, 3952, 3951, 3949, 37, 195,
	3948, 260, 151, 185, 110, 65, 3946, 92, 3364, 3941,
	474, 1125, 68, 264, 451, 3940, 2915, 51, 3939, 0,
	14956, 8904, 12222, 13978, 3938, 4211, 3937, 3935, 3933, 227,
	146, 3932, 3924, 3923, 107, 3919, 87, 3918, 3917, 74,
	3916, 29, 17, 18, 34, 31, 816, 793, 3913, 3912,
	27, 135, 157, 3911, 280, 230, 3910, 3908, 3907, 3905,
	99, 3901, 45, 3900, 43, 3897, 3895, 44, 15, 35,
	3893, 3892, 220, 3891, 224, 258, 3890, 165, 3889, 70,
	137, 3888, 3887, 3886, 64, 60, 259, 105, 3883, 274,
	3882, 199, 3878, 3877, 26, 3876, 3873, 244, 114, 108,
	3870, 252, 145, 40, 215, 176, 223, 3865, 3864, 174,
	3863, 3862, 3860, 279, 3859, 3857, 39, 3856, 3855, 3854,
	14, 3853, 3852, 210, 3243, 3851, 3849, 48, 3848, 184,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 51, 51, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 38, 32, 32,
	33, 33, 34, 35, 35, 10, 10, 6, 6, 6,
	6, 6, 6, 6, 6, 6, 18, 18, 39, 39,
	19, 19, 41, 41, 20, 20, 42, 42, 596, 596,
	614, 614, 23, 23, 44, 44, 24, 45, 17, 597,
	597, 597, 597, 36, 25, 46, 29, 29, 29, 29,
	29, 201, 201, 201, 201, 22, 22, 40, 40, 237,
	237, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 236, 236,
	236, 236, 236, 236, 236, 236, 236, 236, 592, 592,
	239, 239, 238, 231, 231, 232, 232, 233, 233, 598,
	598, 240, 240, 240, 242, 242, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 492, 492, 492, 524,
	524, 524, 523, 523, 618, 618, 619, 619, 619, 619,
	619, 131, 131, 390, 390, 390, 55, 55, 55, 55,
	55, 587, 587, 203, 203, 203, 205, 205, 204, 204,
	204, 204, 204, 78, 78, 603, 603, 604, 604, 602,
	605, 605, 605, 202, 202, 202, 127, 127, 127, 127,
	127, 127, 128, 128, 129, 129, 206, 206, 206, 208,
	208, 207, 207, 207, 207, 207, 207, 207, 207, 207,
	212, 16, 16, 16, 112, 112, 112, 112, 112, 112,
	112, 112, 112, 107, 107, 526, 526, 527, 527, 197,
	197, 198, 198, 198, 198, 199, 199, 200, 200, 200,
	69, 69, 209, 209, 211, 211, 210, 210, 210, 210,
	210, 57, 57, 57, 57, 57, 57, 57, 58, 58,
	58, 58, 58, 59, 59, 59, 59, 59, 59, 60,
	60, 60, 60, 60, 60, 67, 67, 67, 67, 67,
	67, 188, 188, 70, 70, 70, 70, 70, 70, 70,
	70, 70, 70, 70, 70, 70, 75, 75, 75, 75,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 620,
	620, 620, 620, 620, 620, 620, 620, 620, 620, 621,
	621, 622, 622, 623, 623, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 624, 624, 624, 624, 624, 624,
	624, 624, 624, 624, 73, 73, 73, 73, 73, 73,
	73, 73, 73, 73, 73, 73, 73, 73, 73, 73,
	73, 84, 84, 351, 351, 314, 314, 85, 85, 85,
	86, 86, 87, 87, 71, 71, 585, 585, 367, 367,
	483, 483, 72, 593, 593, 593, 595, 595, 594, 594,
	89, 89, 389, 389, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 92, 92, 92,
	92, 92, 92, 92, 92, 92, 92, 92, 92, 92,
	92, 99, 99, 99, 99, 99, 100, 100, 100, 97,
	97, 97, 94, 94, 94, 93, 93, 93, 98, 98,
	98, 584, 303, 303, 96, 96, 96, 95, 95, 95,
	368, 368, 101, 101, 101, 101, 315, 102, 102, 102,
	102, 102, 102, 102, 102, 105, 105, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 104, 104,
	104, 104, 104, 104, 104, 104, 104, 104, 106, 106,
	106, 106, 106, 106, 106, 106, 106, 106, 106, 106,
	485, 485, 103, 103, 103, 450, 450, 108, 108, 108,
	405, 405, 109, 109, 109, 109, 109, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 130, 130, 130, 130,
	130, 130, 130, 130, 589, 589, 360, 360, 266, 266,
	266, 266, 120, 120, 120, 120, 121, 121, 121, 122,
	122, 193, 193, 137, 137, 137, 137, 137, 136, 136,
	136, 136, 136, 136, 61, 61, 61, 62, 62, 63,
	63, 64, 64, 65, 65, 66, 66, 66, 66, 66,
	139, 139, 615, 615, 141, 138, 138, 138, 140, 140,
	140, 140, 142, 144, 144, 144, 144, 144, 143, 143,
	143, 143, 143, 145, 145, 517, 517, 376, 376, 515,
	515, 536, 536, 516, 516, 321, 321, 321, 321, 321,
	322, 322, 322, 525, 525, 525, 525, 525, 525, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 146, 146, 146, 146, 146, 146, 146, 146,
	146, 146, 194, 194, 195, 196, 196, 196, 196, 196,
	171, 171, 171, 187, 187, 187, 187, 187, 187, 187,
	187, 174, 174, 174, 158, 158, 147, 147, 147, 147,
	147, 147, 147, 152, 152, 152, 152, 152, 152, 152,
	152, 148, 148, 160, 160, 160, 160, 160, 153, 153,
	154, 154, 154, 155, 155, 155, 155, 181, 181, 157,
	157, 159, 159, 159, 159, 159, 159, 159, 159, 159,
	149, 149, 149, 149, 162, 162, 162, 162, 412, 412,
	412, 186, 186, 161, 161, 161, 161, 161, 161, 161,
	161, 161, 161, 161, 161, 161, 161, 161, 161, 184,
	184, 184, 184, 184, 184, 606, 606, 607, 607, 178,
	178, 178, 178, 178, 178, 464, 464, 172, 172, 172,
	172, 177, 177, 177, 177, 180, 180, 180, 180, 395,
	395, 169, 169, 169, 170, 170, 170, 175, 175, 176,
	352, 352, 173, 173, 179, 179, 179, 179, 150, 150,
	150, 150, 150, 150, 150, 151, 151, 151, 151, 182,
	182, 168, 168, 183, 183, 183, 183, 183, 183, 183,
	183, 183, 183, 183, 625, 625, 164, 164, 164, 163,
	163, 163, 163, 166, 166, 167, 167, 167, 167, 167,
	167, 165, 156, 185, 586, 586, 582, 582, 582, 582,
	582, 582, 582, 582, 583, 583, 583, 583, 588, 588,
	113, 113, 113, 113, 113, 123, 123, 123, 123, 123,
	114, 114, 114, 114, 114, 114, 114, 116, 116, 115,
	115, 115, 115, 79, 79, 79, 79, 79, 15, 15,
	15, 80, 80, 257, 257, 215, 215, 215, 340, 340,
	216, 216, 329, 329, 329, 329, 213, 213, 214, 214,
	81, 81, 626, 626, 626, 599, 599, 599, 600, 600,
	600, 600, 600, 600, 323, 323, 324, 324, 430, 430,
	430, 430, 430, 327, 327, 327, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 330, 330, 241, 241, 241,
	338, 339, 339, 331, 331, 337, 336, 336, 335, 335,
	334, 334, 332, 333, 333, 333, 342, 342, 341, 344,
	344, 343, 429, 545, 545, 547, 547, 547, 547, 547,
	547, 547, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 413, 413, 627,
	627, 628, 629, 543, 543, 543, 544, 539, 539, 540,
	540, 540, 540, 540, 325, 325, 326, 326, 326, 326,
	541, 542, 358, 358, 468, 546, 546, 548, 548, 550,
	630, 630, 630, 630, 630, 630, 631, 631, 631, 428,
	428, 427, 427, 349, 349, 551, 551, 551, 551, 552,
	552, 552, 552, 552, 555, 554, 553, 553, 553, 553,
	553, 83, 83, 83, 392, 392, 391, 391, 393, 393,
	393, 393, 393, 393, 393, 393, 393, 393, 393, 393,
	393, 393, 393, 190, 190, 269, 269, 77, 77, 77,
	12, 12, 12, 12, 12, 12, 12, 284, 284, 13,
	13, 13, 601, 601, 601, 82, 82, 82, 82, 82,
	82, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 268, 268, 268, 268, 268, 268, 268, 268, 268,
	268, 591, 591, 590, 590, 270, 270, 633, 633, 88,
	88, 88, 88, 88, 88, 88, 88, 486, 486, 487,
	487, 76, 76, 76, 76, 76, 414, 414, 411, 411,
	410, 410, 357, 357, 466, 466, 466, 467, 274, 274,
	275, 275, 234, 234, 234, 31, 30, 21, 21, 26,
	26, 27, 27, 256, 256, 256, 256, 256, 256, 256,
	256, 256, 28, 28, 48, 48, 48, 48, 49, 49,
	49, 49, 52, 52, 53, 53, 47, 47, 47, 47,
	50, 50, 43, 43, 54, 54, 54, 54, 54, 608,
	610, 610, 609, 609, 613, 613, 613, 613, 613, 613,
	611, 611, 612, 612, 616, 616, 617, 617, 119, 119,
	124, 124, 124, 124, 124, 125, 125, 125, 125, 126,
	126, 126, 126, 135, 135, 189, 189, 189, 189, 189,
	189, 189, 56, 56, 56, 56, 68, 68, 68, 68,
	133, 635, 635, 635, 134, 134, 134, 634, 634, 267,
	267, 424, 424, 425, 425, 636, 636, 426, 426, 426,
	426, 426, 260, 259, 261, 261, 262, 262, 74, 74,
	74, 250, 250, 249, 251, 251, 252, 252, 247, 247,
	528, 528, 254, 254, 254, 255, 255, 243, 243, 244,
	244, 245, 245, 246, 246, 258, 258, 637, 637, 111,
	111, 111, 192, 192, 313, 313, 313, 421, 421, 421,
	350, 350, 281, 281, 423, 423, 423, 423, 388, 388,
	388, 191, 191, 365, 365, 378, 378, 379, 379, 480,
	480, 380, 117, 117, 118, 118, 132, 132, 219, 219,
	217, 217, 217, 217, 217, 217, 217, 217, 224, 224,
	225, 225, 226, 226, 227, 228, 228, 228, 228, 369,
	369, 229, 229, 229, 218, 218, 218, 220, 220, 220,
	220, 220, 220, 220, 223, 223, 223, 223, 230, 230,
	230, 222, 222, 562, 562, 562, 564, 564, 566, 566,
	565, 565, 561, 561, 563, 563, 632, 632, 394, 394,
	394, 347, 348, 345, 345, 346, 346, 355, 355, 353,
	354, 354, 356, 356, 465, 465, 465, 235, 235, 235,
	385, 385, 385, 385, 386, 386, 417, 417, 415, 415,
	415, 415, 416, 416, 418, 418, 418, 419, 419, 420,
	420, 382, 382, 383, 383, 384, 384, 384, 384, 446,
	446, 221, 221, 221, 362, 362, 362, 363, 363, 436,
	436, 436, 436, 436, 436, 436, 437, 437, 435, 435,
	435, 435, 469, 469, 469, 469, 469, 469, 469, 469,
	469, 470, 471, 471, 364, 364, 472, 422, 422, 580,
	580, 580, 581, 581, 463, 463, 473, 473, 473, 473,
	473, 473, 461, 461, 462, 462, 481, 482, 482, 398,
	398, 398, 398, 396, 396, 399, 399, 399, 399, 399,
	397, 397, 474, 474, 474, 474, 387, 387, 475, 475,
	475, 475, 476, 477, 477, 478, 478, 431, 432, 432,
	488, 488, 488, 488, 490, 361, 361, 361, 361, 361,
	538, 537, 537, 489, 489, 489, 489, 489, 489, 489,
	489, 489, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 504, 504, 504, 504, 504, 504,
	504, 504, 504, 504, 505, 505, 505, 505, 505, 505,
	505, 491, 491, 491, 491, 491, 495, 495, 495, 494,
	494, 494, 494, 494, 494, 494, 494, 494, 494, 494,
	496, 496, 501, 501, 502, 502, 502, 497, 498, 503,
	503, 503, 503, 638, 638, 507, 507, 499, 499, 499,
	499, 499, 499, 499, 499, 499, 493, 493, 493, 500,
	500, 500, 407, 407, 407, 407, 407, 407, 407, 407,
	407, 407, 407, 407, 407, 406, 406, 408, 408, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 438,
	438, 438, 438, 438, 438, 438, 438, 438, 438, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	440, 440, 440, 440, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 441,
	441, 441, 441, 441, 441, 441, 441, 441, 441, 556,
	556, 556, 556, 556, 556, 556, 556, 442, 442, 559,
	559, 560, 560, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 557, 557, 557, 557,
	557, 557, 557, 557, 557, 557, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 567, 567, 568, 568, 570, 570,
	571, 571, 572, 573, 573, 573, 574, 575, 575, 569,
	569, 576, 576, 576, 576, 577, 577, 578, 578, 578,
	578, 578, 579, 579, 579, 579, 579, 452, 452, 453,
	453, 459, 459, 459, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 318,
	318, 318, 318, 318, 318, 318, 318, 318, 318, 320,
	320, 319, 271, 271, 271, 271, 271, 271, 374, 374,
	372, 372, 372, 375, 375, 373, 373, 371, 371, 370,
	370, 449, 449, 447, 447, 451, 451, 400, 400, 506,
	506, 506, 506, 506, 506, 506, 506, 401, 401, 401,
	409, 402, 402, 403, 403, 403, 403, 403, 443, 444,
	404, 404, 404, 445, 445, 454, 458, 458, 457, 456,
	456, 455, 455, 433, 433, 434, 434, 381, 381, 639,
	639, 377, 377, 479, 479, 479, 479, 317, 317, 366,
	366, 316, 316, 308, 308, 309, 309, 309, 309, 359,
	359, 460, 460, 508, 508, 509, 509, 510, 510, 511,
	511, 512, 513, 514, 448, 448, 292, 291, 278, 279,
	290, 289, 288, 277, 280, 285, 286, 287, 282, 283,
	299, 298, 297, 248, 253, 304, 305, 305, 307, 307,
	306, 306, 294, 295, 296, 484, 276, 310, 310, 311,
	311, 311, 312, 312, 312, 312, 272, 272, 273, 273,
	300, 300, 301, 302, 302, 293, 293, 293, 263, 263,
	263, 264, 264, 265, 265, 522, 522, 519, 519, 519,
	520, 520, 520, 521, 521, 521, 521, 518, 518, 518,
	518, 518, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 529, 529, 529, 529, 529, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 530,
	530, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 532,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 535, 535,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 5, 6, 9,
	6, 8, 4, 4, 5, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 0, 6, 6, 6, 6, 6, 6, 4, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 5, 6, 5, 6, 4, 8, 3, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 2, 1,
	1, 3, 1, 3, 2, 4, 3, 2, 3, 2,
	0, 1, 1, 0, 2, 0, 7, 10, 6, 8,
	6, 6, 6, 9, 4, 3, 2, 2, 0, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	1, 3, 1, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 4, 6, 0, 5, 7, 6, 8,
	8, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 6, 4, 9, 7, 12, 12,
	12, 9, 2, 7, 2, 1, 1, 1, 3, 3,
	0, 3, 1, 3, 1, 1, 3, 2, 5, 0,
	7, 5, 2, 0, 1, 2, 3, 1, 1, 2,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 6,
	4, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 6, 3, 8, 3,
	4, 3, 3, 4, 3, 4, 4, 4, 3, 5,
	7, 3, 3, 4, 3, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 4, 3, 3, 3, 3,
	3, 6, 4, 4, 4, 3, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 7, 2, 5, 0, 1, 3, 3, 1,
	9, 3, 2, 0, 2, 2, 2, 2, 2, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 4, 6, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 1, 1, 3, 4, 6, 3, 3, 5, 3,
	1, 3, 2, 2, 2, 2, 1, 2, 2, 5,
	3, 3, 6, 6, 3, 1, 1, 1, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 3, 5, 7, 2, 3, 0, 3, 5, 2,
	3, 0, 2, 3, 2, 3, 2, 6, 4, 7,
	7, 7, 9, 10, 5, 2, 6, 4, 7, 7,
	7, 10, 5, 2, 2, 1, 1, 3, 1, 1,
	1, 1, 1, 2, 1, 2, 2, 3, 2, 4,
	3, 2, 2, 1, 2, 1, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 2, 6, 3, 3,
	4, 4, 3, 1, 3, 3, 2, 2, 1, 3,
	3, 1, 1, 2, 1, 1, 2, 2, 3, 1,
	1, 1, 1, 1, 3, 2, 2, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 2, 2, 2, 1, 3, 3, 3, 3, 3,
	2, 3, 3, 1, 1, 1, 1, 1, 1, 2,
	2, 5, 7, 3, 3, 3, 4, 4, 6, 5,
	5, 5, 3, 4, 4, 3, 4, 4, 3, 4,
	4, 5, 3, 5, 5, 5, 7, 3, 3, 3,
	4, 6, 4, 2, 6, 4, 3, 2, 3, 4,
	3, 5, 3, 6, 5, 6, 3, 5, 6, 3,
	4, 3, 4, 3, 3, 4, 4, 5, 0, 1,
	1, 1, 1, 3, 2, 3, 4, 3, 4, 3,
	5, 3, 4, 4, 3, 4, 5, 3, 4, 3,
	4, 4, 5, 3, 3, 1, 1, 0, 2, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 3, 4, 5, 4, 4, 2,
	3, 2, 3, 6, 6, 7, 9, 7, 9, 4,
	3, 4, 4, 5, 1, 1, 10, 10, 3, 5,
	5, 5, 3, 5, 6, 4, 4, 5, 5, 2,
	3, 2, 5, 4, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 2, 2, 1, 2, 0,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 2,
	3, 7, 3, 3, 7, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 13, 16, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 8, 0, 1, 1, 0,
	2, 1, 0, 1, 0, 1, 1, 0, 1, 4,
	1, 0, 3, 7, 7, 1, 1, 3, 7, 1,
	3, 11, 3, 2, 0, 3, 1, 2, 2, 3,
	2, 6, 2, 1, 2, 2, 2, 8, 4, 2,
	3, 5, 5, 5, 2, 2, 2, 2, 0, 1,
	1, 3, 4, 11, 12, 9, 5, 3, 1, 5,
	10, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 5, 1, 3, 1, 2, 0, 1, 2, 2,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 6, 0, 3, 0, 2, 2, 2, 0, 1,
	1, 2, 2, 0, 3, 3, 2, 1, 1, 2,
	2, 5, 8, 4, 1, 0, 1, 2, 2, 1,
	2, 3, 3, 2, 2, 3, 2, 2, 2, 2,
	2, 3, 1, 4, 2, 2, 2, 4, 7, 3,
	4, 6, 5, 7, 5, 5, 3, 3, 0, 2,
	2, 2, 1, 1, 1, 8, 10, 11, 7, 10,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 0, 1, 8,
	11, 3, 6, 6, 5, 3, 4, 1, 0, 1,
	3, 17, 20, 16, 19, 4, 2, 0, 1, 0,
	1, 0, 1, 3, 2, 4, 2, 3, 1, 0,
	2, 0, 1, 1, 0, 9, 6, 6, 8, 6,
	8, 5, 7, 2, 6, 7, 4, 4, 5, 2,
	4, 6, 6, 8, 6, 7, 8, 9, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 6, 6, 8, 8, 4, 7,
	3, 0, 7, 10, 1, 1, 1, 1, 2, 2,
	3, 0, 3, 0, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 13, 16,
	3, 1, 0, 4, 1, 0, 2, 2, 3, 0,
	1, 1, 4, 4, 5, 1, 0, 3, 0, 3,
	0, 3, 0, 3, 0, 4, 0, 1, 0, 6,
	7, 3, 6, 3, 1, 3, 1, 1, 4, 2,
	1, 3, 1, 3, 4, 8, 11, 5, 2, 2,
	0, 10, 3, 2, 0, 1, 3, 1, 1, 3,
	3, 5, 6, 4, 5, 4, 1, 1, 3, 3,
	1, 2, 4, 4, 2, 3, 5, 5, 1, 3,
	1, 0, 1, 2, 3, 2, 4, 2, 3, 0,
	2, 0, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 8, 8, 8, 2, 4, 4,
	4, 2, 2, 2, 2, 3, 1, 3, 1, 2,
	6, 7, 1, 0, 1, 0, 1, 0, 1, 1,
	0, 1, 5, 1, 0, 1, 0, 1, 0, 3,
	3, 5, 1, 3, 3, 4, 5, 2, 2, 0,
	2, 2, 1, 1, 1, 0, 1, 0, 2, 2,
	5, 4, 2, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 0, 1, 3, 1, 3, 3, 3, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 1, 3, 2, 4,
	4, 0, 4, 4, 3, 4, 1, 5, 3, 4,
	5, 5, 1, 5, 1, 3, 2, 0, 3, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 5, 1, 0, 2,
	2, 2, 1, 1, 0, 1, 1, 1, 1, 0,
	4, 2, 1, 2, 2, 4, 1, 3, 1, 2,
	3, 2, 4, 1, 0, 1, 0, 2, 1, 0,
	2, 5, 7, 2, 1, 2, 4, 3, 5, 0,
	1, 3, 5, 1, 2, 1, 1, 1, 1, 1,
	2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 4, 6,
	6, 1, 1, 1, 1, 1, 3, 5, 0, 1,
	1, 1, 1, 1, 2, 2, 2, 2, 2, 1,
	3, 0, 5, 4, 1, 2, 1, 4, 1, 1,
	2, 1, 1, 1, 1, 1, 0, 1, 2, 5,
	1, 4, 2, 5, 1, 4, 3, 3, 0, 1,
	2, 4, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 3, 3, 3, 3, 1, 0, 1, 4, 1,
	3, 3, 3, 5, 2, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 2, 3, 3, 3, 2, 2, 3, 5, 4,
	6, 3, 5, 4, 6, 4, 6, 5, 7, 3,
	3, 3, 3, 3, 4, 3, 2, 4, 2, 3,
	3, 4, 3, 4, 3, 4, 5, 6, 6, 7,
	6, 7, 6, 7, 3, 4, 4, 1, 3, 1,
	3, 3, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	3, 4, 1, 1, 1, 2, 1, 2, 2, 3,
	1, 2, 3, 2, 3, 2, 3, 1, 0, 1,
	3, 1, 3, 3, 3, 1, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 1,
	2, 3, 0, 3, 3, 2, 2, 1, 2, 2,
	3, 2, 1, 1, 1, 5, 1, 2, 4, 2,
	0, 1, 0, 3, 5, 1, 0, 1, 2, 1,
	0, 1, 3, 3, 2, 1, 1, 1, 3, 1,
	3, 3, 1, 1, 1, 1, 5, 3, 1, 1,
	3, 1, 1, 1, 1, 2, 2, 1, 1, 2,
	2, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 7, 1, 7, 5, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 600, -104, -101, -69, -67, -108, -109,
	-90, -110, -103, -130, -135, -117, -118, -119, -131, -137,
	-189, -194, -195, -196, -3, -55, -57, -70, -89, -91,
	-102, -112, -111, -113, -120, -127, -123, -107, -61, -132,
	-136, -146, -190, -191, -192, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 429, 441, 399, 142, 420, 404,
	-140, -141, 459, -56, -68, -134, -133, 73, 129, 414,
	-4, -12, -16, 29, 46, -58, -59, -60, 62, -77,
	-73, -84, -78, -71, -72, -75, -620, 102, -563, -92,
	-95, -126, -624, 161, 220, -114, -115, 366, -121, -122,
	422, -124, -125, 425, 162, -63, -62, 156, -217, -219,
	-138, -139, -193, -147, -148, -149, -150, -151, -152, -153,
	-155, -181, -156, -157, -158, -159, -160, -161, -165, -184,
	-162, -163, -164, -167, -166, -168, -173, -169, -170, -171,
	-172, -174, -175, -177, -178, -179, -180, -182, -183, 464,
	-176, -185, -154, 525, 49, 479, 82, 146, 433, 21,
	-5, -6, -7, -8, -9, -10, -11, -15, -14, -54,
	-74, -76, -79, -80, -81, -88, -82, -83, -562, -93,
	-94, -97, -99, -100, -96, -98, 421, -220, -218, 597,
	540, -18, -23, -24, -19, -20, -22, -25, -21, -26,
	-27, -28, -39, -44, -45, -41, -42, -40, -43, -46,
	-47, -48, -49, -50, -51, -52, -53, -30, -36, -37,
	-31, -32, -33, -34, -35, -38, -17, -29, 561, 570,
	-223, -221, -222, -230, 451, 548, 499, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, -315,
	2, -294, -300, -301, -302, -293, -263, -532, -535, 4,
	-529, -533, 168, 230, 330, 21, 23, 22, 24, 25,
	26, 27, 29, 30, 41, 42, 44, 45, 46, 47,
	48, 49, 53, 55, 59, 60, 61, 62, 63, 64,
	68, 73, 74, 79, 80, 81, 82, 83, 84, 85,
	91, 88, 89, 90, 92, 94, 96, 97, 98, 99,
	100, 101, 103, 104, 105, 107, 108, 109, 117, 118,
	119, 120, 121, 123, 128, 129, 132, 127, 131, 133,
	135, 136, 137, 140, 141, 142, 144, 145, 147, 148,
	149, 151, 152, 154, 155, 156, 159, 157, 507, 158,
	160, 161, 162, 163, 166, 174, 175, 176, 181, 183,
	184, 188, 189, 190, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 203, 207, 209, 210, 211, 212, 213,
	219, 220, 222, 223, 224, 225, 226, 231, 232, 233,
	237, 234, 243, 244, 248, 249, 250, 252, 256, 257,
	258, 259, 260, 261, 263, 265, 264, 267, 270, 271,
	274, 278, 279, 283, 284, 280, 285, 286, 288, 289,
	292, 290, 293, 294, 291, 295, 297, 298, 299, 300,
	301, 302, 303, 304, 305, 306, 307, 308, 296, 311,
	309, 313, 314, 315, 328, 324, 325, 319, 320, 316,
	321, 317, 318, 322, 323, 327, 332, 333, 336, 217,
	338, 339, 342, 360, 346, 347, 348, 351, 352, 355,
	358, 359, 361, 362, 363, 364, 365, 366, 367, 368,
	369, 371, 372, 374, 375, 376, 378, 379, 380, 382,
	384, 385, 387, 388, 390, 391, 392, 393, 394, 395,
	396, 398, 399, 401, 400, 402, 404, 406, 407, 408,
	414, 420, 416, 417, 418, 419, 421, 422, 423, 424,
	425, 427, 428, 429, 431, 432, 433, 434, 435, 437,
	439, 440, 444, 445, 461, 462, 481, 441, 442, 443,
	446, 447, 448, 449, 450, 454, 452, 453, 455, 456,
	457, 459, 460, 463, 464, 466, 467, 468, 469, 470,
	471, 472, 475, 477, 478, 479, 498, 480, 482, 486,
	487, 488, 489, 483, 484, 497, 491, 492, 494, 495,
	500, 501, 502, 503, 504, 505, 506, 508, 510, 518,
	519, 520, 522, 525, 526, 527, 528, 516, 530, 531,
	534, 535, 536, 539, 537, 538, 540, 542, 545, 546,
	547, 553, 552, 554, 557, 562, 563, 565, 566, 567,
	36, 50, 51, 54, 56, 58, 69, 70, 71, 75,
	124, 125, 153, 164, 165, 177, 191, 192, 204, 206,
	214, 215, 216, 238, 239, 241, 246, 268, 335, 337,
	353, 357, 373, 377, 381, 383, 397, 436, 473, 485,
	490, 511, 512, 513, 514, 521, 523, 548, 549, 550,
	555, 564, -315, 2, -294, 344, -287, 2, -263, -263,
	384, 28, 2, 28, 372, 453, 502, 504, 2, -589,
	-360, 2, 28, -266, -263, 102, 202, 451, -287, 2,
	-589, -360, 25, 2, -263, 2, 358, 22, 27, 66,
	77, 98, 140, 163, 185, 188, -623, 360, 391, 439,
	455, 497, 508, 522, 2, 552, 289, 452, 499, 230,
	120, 527, 446, -601, 444, 445, 358, 389, 431, 205,
	541, -267, 2, 441, -263, 289, 2, 600, 94, 279,
	74, 436, 456, -143, 519, -144, -145, 2, -142, 511,
	-517, 446, 431, 311, -263, 600, 600, 600, 28, -276,
	-263, 499, 230, 446, 120, 495, 600, 2, 499, 363,
	552, 452, 120, 394, 230, 527, 188, 140, 27, 446,
	-601, 575, 576, 289, 126, -587, 2, -582, 4, -533,
	-529, -309, -308, 499, 505, 120, -302, -293, 590, -301,
	600, 600, 600, 2, 249, 250, 393, 392, 456, 457,
	600, 600, 600, 600, 444, 2, 163, 22, 27, 66,
	93, 98, 126, 185, 188, 349, -621, 360, 391, 455,
	497, 501, 508, 522, -600, 480, 68, 419, 446, -599,
	-601, 289, 527, 140, -410, 120, 279, 200, 535, 504,
	502, 533, 132, 237, 538, 537, 600, 600, -105, 2,
	597, 32, 31, -104, -108, 142, 459, -212, 499, 242,
	2, -263, 600, 600, 2, 249, 250, 444, 445, 600,
	600, 186, -582, 2, 600, 600, 2, 249, 250, 444,
	445, 242, 2, 68, 448, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	2, -187, 456, 480, 211, 47, 46, 74, 28, 390,
	79, 364, 121, 126, 148, 528, 203, 230, 231, 257,
	93, 94, -412, 44, 250, 68, 249, 445, -606, 444,
	-464, 500, 447, 453, 494, 261, 441, 519, 102, 542,
	432, 567, 394, 395, 492, 408, 280, 157, 187, 4,
	120, 311, 431, 458, 511, 279, 440, 367, 84, 600,
	-632, 2, 499, -634, 2, 519, 519, 2, -634, 2,
	-634, 2, -634, 2, -635, 519, 564, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, -218, -220, -219, 600, 600,
	600, 600, 600, 600, 600, -187, 456, 2, 74, 28,
	-353, -355, 532, 240, 150, 350, -217, -219, 2, -562,
	-515, 2, -438, -536, -440, 588, 589, 581, 496, 67,
	-319, 329, 568, -452, 126, 533, 344, -535, -441, -454,
	153, 360, 436, -375, 8, 9, 5, 6, 7, -272,
	-442, -448, 524, 167, 334, -312, 601, 10, 597, -559,
	-219, -453, 37, 206, 65, -519, -311, -273, -491, 241,
	-310, -293, -556, -557, 4, -529, -530, -520, -494, -502,
	-498, -499, -505, -263, -532, 77, 111, 112, 110, 115,
	114, 282, 281, 116, 113, 458, 541, 66, 36, 214,
	215, 246, 335, 216, 75, -558, 141, -531, 238, 239,
	473, 51, 397, 177, 125, 124, 337, 56, 54, 549,
	-503, 122, 511, 512, 513, 514, 191, 192, 58, 164,
	165, 357, 381, 490, 521, 523, 204, 268, 43, 106,
	187, 236, 218, 245, 247, 251, 269, 272, 312, 326,
	331, 354, 356, 430, 465, -638, 550, 485, 69, 70,
	-564, 400, -565, -287, -564, 600, 600, 602, 600, -345,
	-347, -348, 2, 28, 138, 597, 2, -469, 2, -470,
	-474, -219, 262, -473, 597, -471, 595, -294, 345, -560,
	437, -556, -557, -272, -293, -311, 4, -529, -531, 599,
	-349, 597, 120, 446, 499, 78, 230, 163, -405, 597,
	-263, 28, 344, 515, 602, -346, 388, -450, 597, 344,
	186, 347, 60, 293, 2, 2, 2, 2, 2, 214,
	-263, 499, 119, 2, 260, 2, 2, 2, 2, 2,
	2, 2, -368, 214, 2, -294, 552, -368, 214, 2,
	-368, 214, 2, -411, 2, 87, -277, 214, 2, -263,
	-303, 214, 2, -298, -300, -307, 214, 2, -305, -263,
	-527, 214, 2, -526, -522, 10, -521, 5, 4, -529,
	-533, -530, -532, 77, -438, 2, -132, 2, 60, -263,
	552, 2, 2, 461, 2, 597, -143, 71, 519, 43,
	456, -425, 2, -426, -259, -260, -261, -481, -262, 248,
	387, 396, 571, 130, 329, 567, -615, 186, 580, 515,
	-515, -515, -515, -376, 599, 2, 2, 2, 2, 2,
	2, -474, 214, -294, 2, -291, -518, 4, -529, -533,
	-530, -534, 28, 31, 32, 33, 35, 37, 38, 39,
	40, 57, 65, 66, 72, 76, 78, 87, 93, 102,
	110, 111, 113, 112, 114, 115, 116, 126, 130, 134,
	138, 139, 143, 146, 150, 167, 169, 182, 185, 186,
	202, 205, 208, 221, 235, 240, 242, 262, 266, 273,
	281, 282, 329, 334, 340, 344, 345, 349, 350, 370,
	386, 403, 426, 451, 458, 476, 493, 499, 509, 515,
	517, 524, 532, 533, 541, 543, 551, 556, 558, 559,
	560, 561, -535, 2, -474, 214, 2, -297, 214, -474,
	-300, 2, -277, 2, -290, -518, 2, -316, 214, -294,
	-296, -300, -298, 2, 2, 2, 2, -305, 2, -526,
	214, 2, 28, 28, 552, 388, 242, 515, 602, -366,
	-308, -309, -514, 8, -359, -263, 599, -438, 2, -132,
	-116, 2, 182, -438, 214, 2, -132, 214, 2, -438,
	214, 2, -132, 214, 2, -603, 2, -526, 214, -263,
	2, 293, 2, 2, 522, 2, 98, 499, 119, 2,
	418, -622, 439, 526, 2, 2, 2, 2, 2, 2,
	2, 499, -282, 2, -263, 182, 483, -305, 214, -306,
	2, 452, -633, 400, -526, 214, 2, 552, -298, 214,
	2, -298, 230, 244, -277, 214, 2, 504, 502, 504,
	502, 186, 2, 242, 2, 242, 2, -475, 2, -476,
	-470, -477, 595, 345, -485, 2, -484, -521, 548, -105,
	597, -105, 597, 456, 597, -526, -294, -294, -438, 2,
	-132, -116, 2, -438, 2, -132, 2, -129, -526, -128,
	597, 186, -438, 2, -132, -116, 2, -438, 2, -132,
	2, -212, 182, 2, 120, 499, -187, 2, 182, 543,
	2, 8, 2, 221, -526, 447, 395, 174, 2, 461,
	2, 462, 74, -412, 567, 74, 186, 2, 186, 2,
	-395, 2, 561, 388, 186, 2, 2, -586, 2, 344,
	186, 2, 186, 2, 186, 2, 186, 2, 186, 2,
	-186, 457, 520, 498, 392, 250, 2, -132, 558, -116,
	250, 249, -438, 558, 2, -607, 182, 445, -438, 2,
	518, 259, 158, 186, -395, 2, 186, 2, 186, 2,
	5, 2, 393, 481, 2, 248, 387, 481, 2, -294,
	499, 552, 452, 120, 28, 2, 444, 2, 2, 88,
	89, 186, 2, 186, 2, 201, 186, 2, 186, 499,
	567, 2, -387, -474, -424, -425, -424, 515, -353, -355,
	-187, 461, 2, -224, -385, -226, 182, -415, -416, -227,
	273, 169, 340, -228, -394, 28, 138, -394, -394, 60,
	598, 598, 11, 12, 76, 41, 588, 589, 590, 591,
	180, 592, 593, 586, 587, 585, 578, 579, 583, 254,
	255, 95, 582, 580, 86, 287, 438, 170, 171, 172,
	173, 415, 228, 34, 229, 14, 15, 16, -319, 33,
	349, 272, 568, 218, 465, 581, 17, 18, 19, 245,
	247, 331, 50, 221, -271, 360, -318, 496, 67, -438,
	-438, -438, -438, -438, -438, -438, -438, 356, 597, -381,
	-433, 595, -219, 597, 597, 597, 597, -514, -219, -438,
	-452, 598, -373, 597, -219, -452, -447, 597, 436, 595,
	597, -455, -438, 5, 5, 5, 597, 599, -567, 562,
	182, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 383, -496, 597,
	-495, 597, -495, -495, 553, -493, 597, 570, 563, 597,
	-493, 597, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 553, 602, -564, -349, 597, -377,
	-479, -438, 590, -377, -377, 344, -370, -438, 106, -398,
	251, 312, 187, 269, 430, 236, -435, 601, -435, -463,
	570, -219, -471, -293, -219, -473, 597, -469, -463, -106,
	-514, -89, -102, -111, -132, -146, -191, -192, 590, -294,
	597, 186, 597, 599, -518, 186, -359, -277, -304, -263,
	-294, -310, -311, -316, 2, 137, -370, -582, 527, 446,
	28, 452, -359, -266, 38, -449, -488, -489, -538, 601,
	-537, -491, -501, -497, -500, 373, 377, -520, 54, 549,
	-503, 241, 4, -529, -531, 238, 239, 473, 51, 397,
	177, 125, 124, 337, 56, 511, 512, 513, 514, 191,
	192, 58, 550, 485, 69, 70, -582, 527, 446, 28,
	452, -359, 182, -359, 2, 2, 153, 2, 2, 2,
	-263, -240, 602, 64, 423, 153, -368, 214, -240, 153,
	-240, 153, -317, 214, -316, -240, 153, -240, 602, 153,
	-240, 602, 153, 599, 602, 153, -359, 2, -411, -517,
	-370, 38, -425, 2, 126, -523, -521, 5, -636, 602,
	271, -322, 286, 328, 210, 345, 565, 338, 130, -525,
	5, 4, -448, -460, 126, 279, 241, -508, -510, 8,
	-509, 9, -511, 588, 589, -516, -515, 109, 599, -518,
	-237, 416, 459, 359, -236, 24, 29, 142, 232, 315,
	546, 159, -335, 233, -332, 363, 153, 477, 536, -596,
	-597, 443, 506, 507, 90, 338, 459, 359, 416, 153,
	-391, -393, 38, 118, 315, 358, 61, 225, 291, 292,
	479, 555, 153, 459, 359, 416, 359, 459, 24, 142,
	-254, -249, -597, 99, 416, 491, 386, -597, -239, 477,
	536, -596, -597, 443, 416, -238, -337, -332, 363, 153,
	601, 24, 142, 416, 459, 359, -618, -619, 29, 416,
	359, -590, -284, -561, 221, 561, 153, -284, -284, -474,
	214, -611, 182, 2, -604, -128, 263, 5, 10, -526,
	-128, -366, 602, 602, -518, 590, 445, 444, 153, 153,
	153, 153, 182, 329, 2, 2, 2, 2, 2, 188,
	-599, -623, 2, 2, -294, 214, -351, 344, -585, -367,
	499, -294, 182, 329, 43, -297, 214, 2, -300, 552,
	-590, 329, -299, 214, -294, 38, 597, 329, 2, -411,
	2, 230, -561, 329, -475, -313, -294, -470, -313, 459,
	-287, 38, -435, -294, 598, 602, -485, -485, -526, -200,
	561, 186, 102, 597, 597, -212, 561, 561, -482, 602,
	-481, 221, -527, -129, -526, 419, -526, -585, -277, 2,
	-294, 2, 499, 252, -526, -200, 221, -526, -526, -526,
	-517, 28, 462, 2, -186, 457, 520, 89, 462, 2,
	-294, 499, 120, 230, 80, -611, 182, 2, -263, -588,
	182, -583, 431, 446, 527, -582, -294, 120, -294, 120,
	-294, 120, -294, -294, 2, 2, 2, 2, 2, 85,
	2, -132, -438, 2, 85, 2, 46, -607, 182, 2,
	518, 2, 518, 2, -263, -263, -263, 480, 271, -294,
	-294, -294, -295, -300, 500, 445, -438, 2, -625, 2,
	186, 182, 2, 499, 230, 499, 230, 120, 186, 74,
	120, 28, 499, 442, -240, 602, -267, -224, -385, -517,
	-386, -385, -225, -224, -227, 182, 396, 537, 315, 463,
	256, -416, -415, 28, -438, -420, 176, 314, -438, -418,
	-440, 588, 589, -509, -511, -369, 338, -218, -218, -218,
	-356, -465, -438, 386, 230, -490, -488, -488, -292, -518,
	511, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, -438, -438, -438,
	-438, -438, -438, -438, -438, -438, -438, 272, 218, 465,
	50, 221, -438, 515, -438, -438, -438, -438, 309, 329,
	334, 524, 167, 534, 138, 338, -639, 493, 40, -445,
	-219, -374, 597, -459, 35, 476, 28, -452, 597, 2,
	-433, -438, -434, -320, -318, -263, 588, 589, 590, 591,
	592, 593, 578, 579, 580, 14, 15, 16, 583, 587,
	585, 586, 180, 95, 582, 287, 438, 86, 170, 171,
	172, 173, 254, 255, 17, 18, 19, 34, 581, -371,
	-370, -370, 598, 551, 28, 138, 590, 2, 598, 602,
	38, 598, -438, -371, -451, -447, -370, -458, -457, 558,
	-406, -407, 566, 296, 123, 212, 294, -408, 450, -512,
	8, -518, 590, -568, 175, 205, 597, 598, 2, 598,
	2, 598, -438, 2, 598, -438, 2, 598, -438, 2,
	598, -438, 2, 598, 2, 598, 2, -438, -438, -438,
	-438, -438, -438, -438, -370, 8, -512, -512, 511, 511,
	-512, -512, -512, -504, 373, 374, 375, 376, 274, 275,
	276, 277, 377, 378, 379, 380, 301, 302, 303, 304,
	297, 298, 299, 300, 305, 306, 307, 308, 196, 197,
	198, 199, 192, 193, 194, 195, -504, -400, 2, -506,
	-370, 4, 566, 296, 123, 212, 294, 450, 5, -400,
	2, -401, 2, -438, -370, -402, -439, -440, 588, 589,
	581, -319, -452, -403, 2, -438, -371, -438, 57, 266,
	517, -404, -438, 186, -370, -370, 2, -370, 2, -565,
	38, -370, -362, 602, 186, 38, 4, -362, -362, 597,
	598, 602, -399, 209, 290, 285, 244, -399, -469, -398,
	251, -396, 354, -396, -396, -463, -278, 595, 603, -518,
	-463, -462, -461, 38, -287, 351, -463, -463, 599, 598,
	-462, 596, -580, 597, 600, 600, 600, 600, 600, -294,
	597, -370, -518, 599, 482, 2, 598, 245, 245, 245,
	245, 245, 437, 598, 515, -584, -303, -307, 500, 2,
	561, -104, 346, 598, 602, -361, 37, 595, 599, -512,
	2, 2, -507, 553, 597, 597, -407, 597, 186, -584,
	-307, 500, 2, -360, 515, -263, 2, -294, -368, -240,
	153, -368, -368, -240, 602, 153, -277, -298, -303, -305,
	-307, -263, -526, -527, -240, -299, -615, 598, 519, -426,
	-321, 396, 475, 417, 454, 495, 8, 9, 8, 9,
	602, -518, 602, -616, 93, 515, 78, 446, -256, 280,
	515, -429, 214, 78, -539, -280, 93, -540, -263, 72,
	533, 386, 185, 151, -616, 93, 386, -616, 93, 2,
	232, 93, 459, 480, 28, 60, -474, 41, 41, 28,
	-614, 327, 267, 557, 186, 567, 499, 230, 446, 515,
	515, -474, -393, -488, 118, 291, 292, 60, -513, -508,
	588, 589, -513, 60, -513, -513, -513, 561, -297, -474,
	446, 515, 515, 515, -252, -249, 369, 406, 406, 515,
	515, -637, 580, 406, 602, 41, 41, 28, -614, 327,
	267, 186, 515, -316, -278, 547, 42, 547, 42, 547,
	515, 42, 446, 515, 602, 42, 515, 515, -13, 459,
	574, 421, -591, -268, 105, 321, 284, 322, 97, 318,
	96, 317, 103, 319, 104, 320, 554, 332, 63, 316,
	295, 323, -269, -270, 365, 545, 120, -526, -13, -13,
	459, 359, 416, 153, -612, 221, 28, -601, 221, -482,
	221, -482, -308, -263, 599, -132, -438, -438, -132, -438,
	-132, 46, 153, 2, -633, 260, 597, -325, 329, 186,
	-359, -483, 242, 602, -367, -582, 153, -524, -523, 116,
	458, -392, -391, 329, -299, 214, 2, 153, -349, 329,
	147, 597, 394, 2, 153, -279, 214, -264, -263, -411,
	-243, 503, 153, -389, 543, -421, -132, 597, 126, 38,
	-421, -378, -379, -480, -380, -280, 597, -287, -435, -105,
	-484, 598, 598, 598, -199, 348, -198, -263, 5, -212,
	543, -324, -430, -429, -543, -544, -539, 272, 230, 533,
	244, 168, -350, -281, -280, 119, 398, 398, -206, 561,
	-128, -129, 598, -482, 221, 483, -200, -200, -482, -482,
	-294, 182, -526, -200, -200, -200, 2, 2, 2, 2,
	-395, -294, -277, -316, -294, 28, 599, -359, -359, -307,
	-303, -395, -277, -395, -277, -395, -277, -132, -438, 2,
	456, 182, 182, 599, -395, -352, 426, 2, 394, 120,
	499, 363, 230, -294, -316, -294, -316, -277, 120, -277,
	121, -294, -474, -386, -225, 345, 256, 463, -418, -419,
	-440, 436, 437, -419, 436, 437, 8, 9, 8, 9,
	-229, 467, 333, -368, 602, -234, 39, 134, 256, -294,
	567, 149, -438, -438, 515, -639, 493, -445, 149, -438,
	309, 334, 524, 167, 534, 138, 338, 186, 597, -439,
	-439, 598, -372, -438, -438, 596, 605, 598, 599, 598,
	-355, 602, -353, -438, -370, -370, 598, 599, -370, -359,
	596, 596, 602, 598, -456, -457, 143, -438, 515, 515,
	515, 515, 597, 598, 599, -573, 355, 597, 597, -438,
	598, 598, 598, 598, 38, 602, 602, 602, 598, 602,
	602, 602, 598, 598, 598, 602, 598, 567, 567, 598,
	598, 598, 598, 602, 598, 602, 598, 186, 598, 598,
	-409, 370, 598, 11, 12, 588, 589, 590, 591, 180,
	592, 593, 586, 587, 585, 578, 579, 580, 86, 287,
	438, 14, 15, 16, -319, 245, 221, -439, -439, -439,
	-439, 598, -443, -444, 186, 182, 38, -404, -404, -404,
	598, 186, -370, 598, 598, 597, -566, 289, 329, 598,
	-432, -431, 559, -479, -363, 2, -469, -289, -518, -432,
	-432, -370, -438, 251, 251, -397, 543, 344, -399, -469,
	-462, -514, -437, -436, 184, 39, 134, 324, 325, 217,
	-462, -287, -349, -462, -462, -518, -463, -463, -461, 598,
	-581, -514, 598, -364, -472, -560, -355, 599, -518, -209,
	-561, -188, 5, 334, -188, -188, -188, -188, -359, 515,
	515, 221, 25, 371, -488, 595, 596, 8, -518, 597,
	-512, -512, -512, -359, 186, 186, 221, 186, -524, 2,
	-240, -368, -240, -240, -316, -317, -240, -240, -240, -390,
	561, -515, -425, 531, 83, 396, 511, -515, -236, 416,
	-280, -280, -294, -304, 200, 407, -524, 329, -429, 214,
	-242, 329, -488, -288, -263, 597, -413, 563, 256, 256,
	543, -280, -288, 256, 214, -280, 214, -288, 2, -288,
	-592, 396, 339, -438, 60, -333, 278, 394, 330, -237,
	416, 459, 359, -132, -132, -132, -132, -132, 597, -615,
	543, 137, -294, -316, -294, -304, -524, -299, 459, 359,
	416, 326, -310, -513, -513, -391, 459, 359, 416, -304,
	-524, -297, -524, 424, 126, -248, 214, -263, -248, 214,
	446, -277, 406, 567, 45, -637, -238, -132, -132, -132,
	-132, -132, 597, -278, -239, 416, 5, 214, -280, 5,
	-280, 214, 5, -263, -280, -304, -524, -619, 24, 142,
	-280, -304, -524, -144, 28, -187, -268, -526, 334, 539,
	-277, -590, -284, 446, 515, 515, -474, -608, -609, 202,
	429, 446, 432, -359, -128, -203, 561, -128, -197, 226,
	590, -587, -263, 552, -263, -323, -326, -324, -280, -215,
	-216, 563, 561, 153, -314, -294, 595, -200, -526, -294,
	-483, -305, -306, 153, -349, 329, -526, 38, 153, 597,
	2, 2, -298, 344, 329, -279, 214, -244, 144, -637,
	-277, -432, -363, -388, -423, 426, 344, -350, 548, -287,
	-388, -365, 602, 186, 580, 599, -350, -478, 590, -105,
	-105, -200, 602, 597, 580, 580, 597, -526, -526, 598,
	602, -242, -294, -279, 230, 230, -286, -264, 598, 602,
	599, 597, 580, 580, -208, 348, -207, 145, 258, 243,
	469, 470, 471, 472, 136, 468, -482, -206, -129, 186,
	186, -64, 561, 499, -200, 601, 432, -263, -395, -395,
	-395, 456, 456, -263, -359, -290, -277, -294, -291, -316,
	182, 182, -277, 537, -419, 345, 283, -465, -235, 569,
	-294, 601, -438, -438, 149, 149, -438, -439, -439, -438,
	149, 186, 597, -438, -449, 33, 33, 598, 602, -434,
	-438, -318, 598, 551, -355, -355, 598, 590, -518, 601,
	598, -447, 146, -438, 509, 296, 212, 294, -408, 294,
	-408, -408, -512, 5, -518, 590, -574, -283, 597, -263,
	559, -354, 350, 598, -490, -488, -438, -438, -438, -438,
	-438, -512, -493, -493, -508, -508, -438, -443, -438, -490,
	-488, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, 138, 329, 338, -439, -444, -443, -438, -438, -488,
	598, 598, 598, -370, -104, 597, 289, -382, 205, -438,
	-482, 602, -382, -382, 598, -469, -469, 597, -438, 251,
	596, 602, 604, 580, -349, 599, -461, -462, 596, 598,
	602, 598, 602, -422, 38, 598, -518, -432, -211, -210,
	135, 53, 107, 133, 334, -359, -359, 446, 347, 5,
	8, 595, 596, 599, -512, 598, 598, 598, -359, -359,
	446, -359, -240, -240, 119, 315, -438, 515, 515, 60,
	221, 153, 329, 545, -545, -540, 151, -438, 597, 230,
	597, 597, 2, -231, -232, -233, 142, 459, 24, -617,
	2, 543, 153, -240, 153, -240, 565, -333, 597, 597,
	515, 446, -256, 515, 561, -370, -438, -201, 126, -517,
	-597, 601, -597, 601, 446, 515, 515, 446, 515, 515,
	329, 153, 561, 166, 166, 567, -248, 561, -370, 515,
	-492, 48, 26, 329, -298, -240, 153, 515, 515, 527,
	459, -526, 334, -13, -304, -524, -299, 459, 359, 416,
	-589, -360, -589, 202, -307, -612, -482, -205, 348, -204,
	145, 428, 136, 258, 223, -482, -203, 186, 242, 561,
	-299, 2, 598, 598, 602, -546, 38, 342, 342, 597,
	-294, -85, 561, -481, -514, -593, 561, 43, -297, 38,
	153, -590, -132, -299, -486, -487, 5, 38, -294, 153,
	344, 329, -245, 265, -637, -522, -561, -355, -388, -377,
	330, 91, 598, -432, -379, -363, -438, 2, 598, -198,
	-199, -526, -526, -526, -200, -212, -212, -430, -327, 597,
	-279, -264, 597, -212, -281, 2, -527, -526, -526, 602,
	597, 580, 580, 580, -206, -482, -128, -132, 348, -294,
	590, -395, -339, -338, 363, 338, -339, 436, 436, 345,
	176, 261, -234, -278, -438, -438, 149, 33, 33, -438,
	-438, -449, 598, -438, -438, -370, 596, 5, -438, 598,
	598, 8, -438, 598, 599, -575, -263, -438, 598, 60,
	598, 598, 602, 602, 598, 598, 598, 598, 598, 598,
	598, -444, 186, 138, 338, 597, 598, 598, -104, -446,
	208, 60, -469, -446, -446, -397, -359, -469, -436, -278,
	595, -518, -514, -472, 597, 599, -210, 580, -526, -526,
	561, -307, 596, 2, 595, -518, 598, -307, 119, -280,
	-280, 499, 436, -248, 386, -429, 153, -547, 93, -549,
	76, 168, 102, 329, 334, 533, 386, 72, 126, 344,
	403, -627, -628, -629, 38, 572, 573, 598, -357, -466,
	-560, 597, -263, -357, -359, 329, 488, 126, 344, 329,
	126, 344, 556, 119, 2, 527, 79, -280, -288, -359,
	-359, -294, -304, -524, 160, 598, 602, 580, 2, 590,
	590, -304, -524, -299, -304, -524, -297, 153, -248, 361,
	166, 160, 598, -278, 5, 5, 153, -275, 76, -280,
	5, -280, -298, 119, 446, 515, 515, 344, 344, 347,
	-608, -609, -203, 602, 597, 580, 580, -203, -527, -128,
	2, -349, -340, 232, -280, -544, -541, -542, 386, -548,
	-550, 168, 386, -132, 2, -214, -213, -263, 5, 597,
	-325, 348, 596, -595, 348, -594, 117, 136, -524, -392,
	-132, -299, -349, 598, 602, 147, -414, 543, -278, -294,
	153, -246, 264, -637, -522, -243, -417, -415, 139, 597,
	344, -132, -355, 580, 598, 598, 119, 119, 224, 152,
	-357, 597, 597, -359, 119, 598, -207, -208, -526, -128,
	-526, -206, -482, -65, -66, 230, 93, 368, -291, 499,
	230, 597, 597, -234, -438, -438, -438, 598, -355, -518,
	590, -569, 363, 598, -465, -438, -438, -439, 186, 597,
	-449, 598, -570, 560, -438, -383, -384, -438, 434, 108,
	206, -570, -570, 598, -514, 2, -526, 2, 515, 595,
	2, 186, 221, 38, 406, -429, -288, -292, -285, -263,
	168, 214, 334, 556, -413, 256, 597, -439, 537, -294,
	597, 2, 213, 213, 30, 60, -630, 130, 235, 598,
	602, -467, -274, -263, -438, -467, 598, 598, 334, 537,
	334, 556, -438, 537, -488, 597, -240, -240, 598, 598,
	-438, 515, -517, 100, -515, 2, -597, -248, -277, -438,
	515, 5, -240, -292, -240, -240, -275, 527, -304, -524,
	-299, -613, 500, 453, 528, 447, 189, 435, -613, 182,
	-204, -205, -526, -128, -203, 38, -330, 234, 2, -546,
	256, -285, 256, -626, 561, 598, 602, 580, 580, -323,
	-215, -86, -87, 516, -481, 602, 597, 580, -349, 38,
	5, 597, 597, -263, 344, 597, -278, -258, 92, -637,
	-522, -244, -388, 330, -359, 93, -417, -445, -200, 597,
	597, -328, 81, 94, 127, 213, 190, 231, 480, 486,
	28, -328, 598, -357, -357, 598, 597, -200, 598, 602,
	28, 597, 28, 597, -294, -316, -370, -370, 598, -355,
	60, 602, 598, 598, -439, -449, 598, -571, -572, -283,
	602, 597, 597, 460, 596, -359, 2, -359, -248, 386,
	-263, -549, -285, 329, 543, -438, -439, -265, 597, -438,
	38, 126, 235, 131, 219, -428, -631, 101, 489, 222,
	-466, -234, 598, -427, 543, 403, -439, -275, -357, 597,
	597, 597, 580, 186, 597, -492, -240, -298, 515, 2,
	2, 186, -589, 598, -602, 401, -132, -334, -335, 221,
	597, -329, 344, 119, 315, -213, -515, -515, 598, 38,
	-87, 9, -594, -595, -438, 38, -132, -486, -357, -294,
	-357, 344, -250, -249, 273, -522, -245, 598, -288, -388,
	-527, -527, -427, 598, 598, -527, -66, -359, -359, 598,
	598, -576, 394, 437, 207, -370, -356, 598, 602, 38,
	-384, 2, 2, 2, 406, 153, 209, 598, -551, 288,
	-263, 598, 38, 131, 219, -330, 597, -235, -467, -330,
	209, -294, -598, 543, 598, -342, -341, -338, -344, -343,
	-338, -370, -515, 100, 361, -370, -275, -359, -359, 344,
	-605, 187, -604, 5, 10, -215, 361, -358, -468, -280,
	82, 119, -340, -132, 598, -132, 598, 598, -414, 598,
	-294, -247, -528, 406, 408, -637, -246, -432, 598, 598,
	-428, -427, -336, -332, 598, 598, 598, 598, -577, -578,
	50, 530, 109, -438, -577, -577, -572, -574, 168, 561,
	-552, -555, -554, 577, 466, 187, 362, 598, 488, 555,
	-336, -359, 561, -349, -438, -427, 598, 602, 548, 598,
	602, 548, 598, 186, 598, -240, -610, 561, -240, -613,
	-202, 561, 46, -329, -294, 598, 602, 385, 132, 142,
	-330, -626, -427, 597, -428, 597, -255, -254, -637, -508,
	-258, 139, -200, -200, -330, -428, -216, 561, -200, -579,
	151, -578, 382, 181, 436, 382, 181, -579, -579, -285,
	55, -554, 577, -555, 577, 537, 132, -630, 598, 55,
	-551, -330, -341, 221, -343, 186, 361, 202, 186, 444,
	-604, 30, -257, -256, 597, -468, 437, 437, 2, -334,
	-329, -428, -357, -330, -357, -251, -252, -253, -359, -250,
	330, 537, -336, -330, -432, 109, 205, 510, 315, 33,
	580, -553, 315, 423, 64, 459, -553, -432, 580, -552,
	597, 597, 347, -359, 348, -359, 2, -215, -330, 598,
	-336, 598, -247, 459, -216, -336, 436, 352, -578, -438,
	23, 334, 126, -438, -630, -370, -370, -240, -199, 597,
	598, -329, -336, -427, -216, -428, -255, -378, -432, -216,
	598, 598, -199, -241, 64, 423, -257, -216, -428, -432,
	-330, -251, -432, -432, -331, -332, 515, 598, -432, -330,
	-336, 597, -336, -216, -370, -216, -432, 598, -432, -331,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 547, 548, 550, 551, 552, 554,
	555, 557, 559, 561, 562, 563, 565, 566, 568, 569,
	570, 571, 572, 574, 576, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	643, 645, 0, 1395, 1397, 1399, 1401, 0, 794, 0,
	36, 37, 39, 0, -2, 331, 333, 335, 0, 363,
	365, 366, 368, 370, 371, 372, 374, -2, 0, 480,
	481, 483, 485, -2, 0, 1000, 1002, 0, 632, 634,
	0, 1005, 1007, 0, 0, 654, 655, 0, 1506, -2,
	648, 650, 652, 719, 721, 723, 725, 727, 729, 731,
	733, 735, 737, 738, 740, 742, 744, 746, 748, 749,
	751, 753, 755, 756, 758, 759, 761, 763, 765, 767,
	769, 771, 773, 775, 777, 779, 781, 783, 785, -2,
	788, 789, 790, -2, -2, 0, -2, -2, -2, 1413,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 59,
	424, 426, 428, 430, 432, 435, 437, 439, 1564, 487,
	489, 491, 493, 495, 497, 499, 0, -2, 1578, 0,
	0, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 107, 108, 109, 110, 111, 112, 113, 114,
	75, 76, 77, 79, 80, 81, 82, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 105, 73, 0, 0,
	1537, 1539, 1541, 1543, -2, 0, 0, 5, 9, 11,
	13, 15, 17, 19, 21, 23, 25, 27, 29, 549,
	553, 556, 558, 560, 564, 567, 573, 575, 577, 532,
	533, 536, 2272, 2290, 2291, 2292, 2295, 2296, 2297, 2298,
	2299, 2300, 2749, 2831, 2832, 2322, 2323, 2324, 2325, 2326,
	2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336,
	2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346,
	2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356,
	2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366,
	2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376,
	2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386,
	2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396,
	2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406,
	2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416,
	2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446,
	2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456,
	2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466,
	2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476,
	2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486,
	2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496,
	2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506,
	2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516,
	2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526,
	2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536,
	2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546,
	2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556,
	2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566,
	2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576,
	2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586,
	2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596,
	2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606,
	2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616,
	2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626,
	2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636,
	2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646,
	2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656,
	2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666,
	2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676,
	2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686,
	2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696,
	2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706,
	2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716,
	2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726,
	2727, 2728, 534, 535, 1184, 0, 601, 599, 2257, 602,
	2547, 604, 606, 474, 475, 476, 477, 478, 479, 0,
	625, 615, 1576, 626, 628, 629, 630, 631, 596, 594,
	0, 625, 2326, 623, 1393, 1394, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 486, 0, 0, 0, 0, -2,
	0, 0, 0, 0, 0, 0, 0, 403, 1242, 1243,
	1244, 1378, 1379, 2594, 1420, 0, 232, 644, -2, -2,
	-2, 2714, -2, 676, -2, 688, 691, 692, 683, 2718,
	0, 2597, 2581, -2, 695, 1396, 1398, 1400, 792, 793,
	2276, 0, 0, 0, 0, 0, 38, 40, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 240, 242, -2, -2,
	-2, -2, 0, 0, 2642, 2378, 2225, 2292, 2228, 2223,
	332, 334, 336, 337, 0, 0, 0, 0, 0, 0,
	364, 367, 369, 373, -2, 375, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 402, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, 0, 0, 0, 0, 0, 1063, 1055,
	1056, 1300, 0, 0, 0, -2, 482, 484, 537, 538,
	0, 1565, 1565, 545, 546, -2, 0, 0, 0, 0,
	302, 290, 1001, 1003, 1004, 0, 0, 0, 0, 633,
	635, 0, 0, 271, 1006, 1008, 1009, 0, 0, 0,
	0, 0, 304, 0, 0, 649, 651, 653, 720, 722,
	724, 726, 728, 730, 732, 734, 736, 739, 741, 743,
	745, 747, 750, 752, 754, 757, 760, 762, 764, 766,
	768, 770, 772, 774, 776, 778, 780, 782, 784, 786,
	787, 800, 0, 0, 0, 0, 0, -2, -2, 0,
	0, 0, -2, 0, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, 0, 0, 897, 0, 0,
	0, -2, -2, -2, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, -2, 981, 0, 0, 803,
	805, 806, 807, 808, 0, 870, 895, 896, 905, 791,
	0, 1224, 1566, 1422, 1403, 1417, 1422, 1405, 1406, 1407,
	1408, 1409, 1414, 1416, 1410, 1411, 1412, 42, 44, 46,
	48, 50, 52, 54, 56, 58, 60, 425, 427, 429,
	431, 433, 436, 438, 440, -2, 1535, 1536, 488, 490,
	492, 494, 496, 498, 500, 636, 0, 638, 0, 804,
	-2, 0, 1570, 1570, 1570, 0, 0, 1536, 1534, 0,
	641, 642, 699, 700, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 2099, 1927, 0, 701, -2, 1960, 1962,
	2689, 2520, 2714, 2098, 1964, 1965, 1966, 1967, 1968, 0,
	1970, 1971, 1972, 1973, 1974, 1975, 0, 1977, 0, 1982,
	1983, 1984, 0, 2696, 2202, 2286, -2, 0, 0, 2702,
	2282, 0, 2065, 2000, -2, -2, 2309, 2288, 1771, 1772,
	1773, 1774, 1775, -2, -2, 2732, 2004, 2005, 2006, 2007,
	2008, 2009, 2010, 2011, 2012, 2013, 2014, 0, 2677, 2697,
	2698, 2703, 2705, 2699, 2686, 2025, 2391, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	1798, 1807, -2, -2, -2, -2, -2, -2, -2, 2690,
	2691, 2708, 2711, 2717, 2722, 2723, 2695, 2704, 2731, 2733,
	2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743,
	2744, 2745, 2746, 2747, 2748, 1799, -2, -2, -2, -2,
	1553, 2561, 1556, 1184, 1554, 1538, 1540, 0, 1542, 0,
	0, 0, 1547, 1573, 1571, 0, 1622, 1551, 1552, 1641,
	1641, 1665, 0, 1646, 0, 1665, 1565, 1692, 0, 1652,
	2586, 2001, 2002, 0, 2292, 2287, -2, -2, 2729, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 597, 0,
	603, 605, 0, 0, 0, 624, 1575, 0, 0, 0,
	0, 0, 0, 0, 406, 407, 408, 409, 410, 2697,
	0, 0, 0, 415, 0, 417, 418, 419, 420, 421,
	422, 423, 203, 2697, 505, 530, 0, 203, 2697, 508,
	203, 2697, 511, 0, 514, 1298, 203, 2697, 517, 2253,
	203, 2697, 520, 522, 2261, 203, 2697, 526, 2268, 2266,
	527, 2697, 529, 307, 305, 306, 2305, 2306, 2313, 2314,
	2315, 2316, 2730, 2732, 1389, 1390, 1391, 1392, 0, 1419,
	1299, 646, 647, 0, 671, 0, 675, 2685, -2, 0,
	2606, -2, 679, 1423, 1427, 1428, 1429, 1430, 1431, 0,
	0, 0, 0, 1436, 0, 0, 0, 0, 672, 673,
	686, 687, 693, 696, 0, 795, 796, 797, 798, 799,
	72, 0, 2697, 1692, 74, 0, 2247, 2317, 2318, 2319,
	2320, 2321, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757,
	2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767,
	2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777,
	2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787,
	2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797,
	2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807,
	2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817,
	2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827,
	2828, 2829, 2830, 78, 0, 2697, 83, 0, 2697, 0,
	-2, 95, 0, 106, 0, 2250, 115, 0, 2697, 0,
	2222, -2, 0, 215, 291, 292, 293, 0, 1030, -2,
	2697, 1236, 1238, 1238, 0, -2, 0, 0, 0, 991,
	2219, 2224, 992, 2243, 993, 2229, 0, 338, 339, 340,
	341, 342, 0, 343, 2697, 345, 346, 0, 348, 349,
	2697, 351, 352, 0, 354, 0, 254, 255, 2697, 377,
	379, 0, 381, 382, 0, 384, 0, 0, 0, 388,
	-2, 404, 0, 401, 391, 392, 394, 395, 396, 397,
	398, 0, 444, 442, 2258, 0, 0, -2, 2697, 0,
	1027, 0, 0, 1278, -2, 2697, 1229, 0, 1285, 2697,
	1281, 0, -2, 0, 1563, 2697, 1440, 1059, 1060, 1061,
	1062, 1704, 471, 0, 1471, 0, 1473, 0, 1492, 1698,
	1641, 0, 0, 1703, 0, -2, 590, 2275, -2, 540,
	0, 541, 0, -2, 0, 319, 0, 0, 1010, 1012,
	1013, 1015, 1016, 1019, 1020, 1021, 1022, 1678, 272, 274,
	0, 0, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387,
	1388, 0, 0, 656, 0, 0, 801, 802, 0, 0,
	813, 814, 815, 0, 319, 2598, 2556, 2412, 822, 0,
	825, 828, -2, 0, 0, 0, 0, 832, 0, 837,
	838, 839, 0, -2, 0, 846, 848, 999, 850, 0,
	0, 852, 0, 856, 0, 859, 0, 861, 0, 863,
	-2, -2, -2, 871, 872, -2, 877, -2, 0, 881,
	-2, 0, 884, 0, 887, -2, 0, 897, 893, 894,
	0, 0, 0, 0, 913, 914, 0, 923, 0, 926,
	927, 928, 0, 932, 933, 0, 935, 936, 937, 938,
	0, 2669, 2603, 2378, 0, 944, -2, 950, 952, 0,
	-2, 0, 968, 0, 972, 0, 0, 980, 0, 0,
	809, 810, 203, 1696, 1402, -2, 1404, 0, -2, 0,
	637, 0, 640, 1595, 1521, 1518, 0, 1592, 1593, 1522,
	0, 0, 0, 1529, 0, 1568, 1569, 0, 0, 0,
	1508, 1509, 0, 0, 0, 0, 2104, 2105, 2106, 2107,
	2120, 2108, 2109, 2119, 2117, 2118, 2110, 2111, 2116, 2130,
	2131, 2121, 2122, 2112, 2125, 2123, 2124, 2126, 2127, 2128,
	2129, 0, 0, 2135, 0, 2113, 2114, 2115, 2143, 0,
	0, 2144, 0, 2146, 0, 2136, 2132, 2133, 2134, 0,
	1906, 1908, 2210, 0, 0, 0, 2142, 2137, 2138, 1844,
	1845, 1846, 1847, 1848, 1881, 1885, 1886, 0, 0, 1961,
	2207, 2206, 1963, 0, 0, 2158, 0, 1976, -2, 0,
	2099, 2153, 0, 0, 1985, 1986, 1987, 0, 0, 2158,
	0, 0, 2201, 1997, 1998, 1836, 0, 0, 2067, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 1784, 0,
	1786, 0, 1787, 1788, 1795, 1808, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 2182, -2,
	0, 0, 0, 0, 1800, 0, 1555, 0, 0, 1626,
	2211, 2215, 2216, 1626, 1626, 0, 0, 2159, 1689, 1689,
	0, 0, 1684, 1684, 1684, 1682, 1665, 0, 1665, 1675,
	0, 1665, 1665, 0, -2, 1646, 0, 0, 1675, 0,
	1659, 578, 580, 582, 584, 585, 586, 588, 1693, 1694,
	0, 0, 0, 0, 2293, 0, 0, 0, 0, 2265,
	0, 0, 2278, 0, 360, 0, 0, 0, 2652, 2597,
	0, -2, 608, 627, 1565, 0, 2161, 1719, 1723, 0,
	1725, 1726, 1727, 1728, 1729, 0, 0, 1720, -2, 1796,
	1798, 1819, 2310, 2311, 2312, 1779, 1780, 1781, 1782, 1783,
	1791, 1778, 1778, 1778, 1789, 1818, 1810, 1818, 1814, 1764,
	1765, 1766, 1801, 1802, 1803, 1804, 0, 2652, 2597, 0,
	-2, 617, 0, 0, 1503, 405, 0, 412, 413, 414,
	0, 501, 0, 201, 202, 0, 203, 2697, 506, 0,
	509, 0, 203, 2697, 2217, 515, 0, 518, 0, 0,
	524, 0, 0, 0, 0, 0, 203, 1505, 0, 0,
	0, 0, -2, 681, 689, 690, 222, 223, 0, 1425,
	0, 1432, 710, 711, 712, 1434, 1435, 0, 1437, 684,
	713, 714, 715, 716, 717, 718, 0, 2231, 2232, 2233,
	2234, 2237, 2238, 0, 0, 682, 703, 685, 0, 697,
	116, 1375, 0, 0, 159, 0, 1375, 1375, 0, 0,
	0, 0, 186, 0, 1098, 0, 0, 0, 0, 131,
	144, 155, 128, 129, 0, 0, 0, 0, 0, 0,
	84, 1206, 0, 1209, 0, 0, 0, 0, 0, 0,
	0, 1222, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 103, 143, 0, 0, 1468, 0, 138, 118, 0,
	0, 131, 145, 157, 0, 190, 192, 1095, 0, 0,
	0, 0, 0, 0, 0, 0, 214, 224, 0, 0,
	0, 1230, 0, 0, 0, 1562, 0, 0, 0, 0,
	2697, 1373, 0, 1358, 0, 1678, 2461, -2, -2, 272,
	1678, 990, 0, 0, 2293, 2227, 0, 0, 0, 0,
	0, 0, 0, 0, 380, 383, 385, 386, 387, 0,
	1277, 0, 393, 434, 1155, 2697, 0, 0, 461, 456,
	0, 458, 0, 0, 0, 1205, 2697, 1203, 2262, 0,
	1227, 0, 1184, 2697, 2260, 0, 0, 0, 1286, 2302,
	1295, 1299, 1458, 0, 473, 0, 1474, 1476, 0, 0,
	1699, 0, 1701, 1641, 1565, 0, 0, 0, 0, 295,
	0, 0, 0, 0, 0, 0, 0, 0, 278, 0,
	1677, 0, 0, 1678, 272, 2572, 319, 319, 1678, 658,
	1678, 660, 0, 0, 816, 817, 0, 319, 319, 319,
	823, 824, 826, 827, -2, -2, -2, -2, 829, 830,
	920, 0, 0, 0, 919, 840, 0, 842, 845, 849,
	0, 984, 2581, 2597, 2652, 997, 920, 2378, 920, 2378,
	920, 2378, 860, 862, 865, 908, 916, 876, 883, 0,
	878, 882, 885, 888, 0, 890, 898, -2, 0, 900,
	0, 902, 0, 904, 920, 921, 924, 931, 934, 939,
	940, 941, 942, 2273, 943, -2, 947, 948, 0, 959,
	964, 965, 961, 0, 0, 0, 0, 0, 0, 975,
	976, 0, 0, 983, 1223, 0, 1415, 1595, 1521, 639,
	1512, 1594, 1513, 1520, 1523, 0, 0, 1525, 0, 1527,
	0, 1590, 1591, 1598, 1599, 0, 1609, 1610, 1602, 0,
	-2, 0, 0, 1605, 1606, 1531, 0, 1548, 1549, 1550,
	1579, 1582, 1314, 0, 2831, 1840, 1714, 1841, 1842, 2246,
	0, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857,
	1858, -2, -2, -2, -2, -2, -2, -2, -2, 1867,
	1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877,
	-2, -2, -2, 1882, 1883, 1884, -2, 2145, 2147, 0,
	2210, 0, -2, 0, -2, -2, -2, -2, 1903, 0,
	1905, 1910, 1912, 1914, 0, 0, 0, 0, 2209, 1924,
	2193, 2194, 0, 0, 2101, 2102, 2103, 1909, 0, 1928,
	2208, 2205, 0, 0, 2139, 0, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 0,
	2157, 1578, 1989, 0, 0, 0, 0, 1996, 1981, 2155,
	0, 2154, 0, 0, 0, 2165, 0, 2200, 2196, 0,
	2244, 1835, 1822, 1823, 1824, 1825, 1826, 1827, 1837, 0,
	2241, 2279, 2285, 2075, 0, 0, 0, 2026, 2027, 2028,
	2029, 2030, 0, 2032, 2033, 0, 2035, 2036, 0, 2038,
	2039, 0, 2041, 2042, 2043, 2044, 2045, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1732, 1733, 1734, 1735, 1736, 1737,
	1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747,
	1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757,
	1758, 1759, 1760, 1761, 1762, 1763, 0, 0, 2047, 0,
	2168, -2, -2, -2, -2, -2, -2, -2, -2, 0,
	2049, 0, 2051, 2159, 2179, 0, 0, 1929, 0, 0,
	0, 0, 2099, 0, 2054, 2159, 2187, 0, 0, 0,
	0, 0, 2159, 0, 2192, 0, 2061, 0, 2063, 1557,
	0, 0, 1709, 0, 0, 0, 2214, 1709, 1709, 0,
	1621, 0, 0, 1685, 1686, 1687, 1688, 0, 0, 1689,
	0, 1679, 1683, 1680, 1681, 1675, 1638, 0, 0, 2248,
	1675, 1644, 1674, 0, 1184, 1664, 1675, 1675, 0, -2,
	1648, 1665, 0, 0, 579, 581, 583, 587, 589, 0,
	0, 1578, -2, 0, -2, 321, 1183, 0, 0, 0,
	0, 0, 598, 600, 0, 0, 521, 0, 0, 614,
	0, 592, 0, 595, 0, 1710, 1713, 0, 0, 1724,
	1730, 1731, 0, -2, 0, 0, 1820, 0, 0, 0,
	0, 0, 622, 0, 0, 0, 416, 531, 203, 503,
	0, 203, 203, 512, 0, 0, 203, 523, 203, 2269,
	203, 2267, 308, 528, 1504, 235, 0, 674, 0, 1424,
	1433, 0, 707, 0, 709, 0, 2235, 2239, 2236, 2240,
	0, 698, 0, 0, 0, 0, 1374, 0, 1321, 0,
	0, 163, 2697, 0, 205, 0, 0, 1148, 2254, 0,
	1138, 0, 0, 2398, 0, 0, 0, 0, 0, 179,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 125,
	0, 0, 0, 130, 0, 0, 0, 0, 0, 0,
	0, 0, 1207, 1208, 1210, 1217, 1219, 0, 1213, 2242,
	0, 0, 1214, 0, 1216, 1218, 1220, 0, 0, 0,
	0, 0, 0, 0, 97, 104, 0, 0, 0, 0,
	0, 0, 1467, 1468, 0, 0, 0, 127, 0, 0,
	0, 0, 0, 0, 2221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1232, 0,
	0, 0, 1273, 1271, 1251, 1252, 1253, 1254, 1255, 1256,
	1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266,
	1267, 1268, 1269, 1270, 0, 0, 0, -2, 1234, 1235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 245,
	0, 310, 2220, 2230, 0, 1017, 1018, 344, 347, 350,
	353, 241, 0, 389, 0, 0, 1065, 1040, 0, 0,
	443, 319, 0, 0, 457, 461, 2271, 1025, 219, 220,
	221, 1201, 1204, 0, 1184, 2697, 1250, 0, 0, 0,
	0, 0, 0, 1284, 0, 0, 2697, 2249, 2301, 2302,
	1460, 1468, 0, 1709, 0, 1490, 1477, 0, 0, 0,
	1490, 1494, 1495, 1497, 1498, 0, 0, 1700, 1706, 539,
	591, 1565, 1565, 319, 317, 2523, 315, 312, 314, 0,
	0, 0, 1066, 1068, 1069, 1070, 205, 0, 2302, 1138,
	2450, 2302, 0, 1480, 1482, 0, 0, 0, 266, 0,
	275, 1678, 273, 278, 0, 0, 0, 455, 657, 662,
	811, 0, 319, 819, 820, 821, 867, 910, 918, 963,
	831, 833, 834, 835, 0, 0, 0, 998, 994, 995,
	996, 851, 920, 854, 920, 857, 920, 880, 886, 892,
	899, 0, 0, 0, 912, 929, 0, 946, 0, 0,
	0, 0, 0, 0, 0, 969, 970, 971, 973, 978,
	977, 982, 1697, 1516, 1517, 1519, 0, 1528, 0, 0,
	1604, -2, -2, 1603, 1607, 1608, -2, -2, -2, -2,
	1524, 0, 1533, 1530, 0, 1589, 1312, 1313, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 1925, 0, -2,
	1904, 1907, 1911, 1913, 1915, 0, 0, 0, 0, 0,
	0, 2148, 0, 2150, 1926, 2203, 2206, 2141, 0, 2097,
	0, 0, 1577, 1578, 1578, 0, 1995, 0, 2156, 0,
	2163, 2164, 0, 1988, 0, 2197, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1999, 0, 0, 0, 0,
	2031, 2034, 2037, 2040, 0, 0, 0, 0, 2020, 0,
	0, 0, 2024, 1790, 1776, 0, 1818, 1816, 1817, 1811,
	1818, 1815, 1768, 0, 1767, 0, 2046, 0, 2048, 2050,
	0, 0, 2052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1932, 1933, 1934,
	1954, 2053, 2185, 2186, 0, 0, 0, 0, 0, 0,
	2059, 0, 2191, 2060, 2062, 1565, 0, 1558, 0, 1623,
	1612, 1708, 0, 2212, 1678, 1625, 1627, 2213, 2251, 1612,
	1612, 0, 2160, 0, 0, 1669, 0, 0, 0, 1671,
	1642, 0, 0, 1636, 0, 1631, 1632, 1633, 1634, 1635,
	1643, 1184, 1673, 1645, 1649, 2279, 0, 1675, 0, 1660,
	0, 1662, 1695, 0, 1654, 1657, 0, 0, 2294, 1709,
	0, 355, 361, 362, 356, 357, 358, 359, 607, 0,
	0, 0, 0, 0, 2162, 0, 1715, 0, 1721, 0,
	0, 0, 0, 616, 0, 0, 0, 0, 1502, 411,
	502, 203, 507, 510, 2218, 203, 516, 519, 525, 231,
	0, 670, -2, 705, 706, 708, 0, 704, 160, 1375,
	0, 0, 1317, 1319, 1323, 1329, 1332, 0, 165, 2697,
	177, 0, 1114, 0, 2252, 0, 0, 0, 0, 0,
	0, 1377, 0, 0, 2697, 203, 2697, 203, 180, 182,
	185, 0, 189, 187, 0, 1102, 0, 0, 1105, 117,
	1375, 0, 0, 120, 124, 132, 133, 136, 0, 0,
	0, 142, 0, 0, 0, 1334, 1338, 1346, 0, 0,
	0, 1211, 1212, 1215, 1221, 85, 0, 0, 0, 1342,
	1344, 1350, 96, 1446, 1447, 98, 2697, 2263, 100, 2697,
	0, 1316, 0, 0, 0, 0, 191, 122, 126, 134,
	135, 137, 0, 1352, 119, 0, 218, 0, 0, 208,
	203, 2697, 0, 210, 0, 211, 212, 225, 0, 0,
	0, 1028, 1029, 1239, 1240, 1241, 1272, 1225, 1226, 0,
	1237, 1231, 0, 0, 0, 0, 0, 1354, 1355, 0,
	0, 0, 1373, 1370, 1678, 237, 0, 1678, 245, 0,
	2226, 0, 376, 0, 0, 0, 0, 1064, 1166, 0,
	1035, 0, 0, 0, 449, 445, 0, 454, 460, 459,
	465, -2, 0, 0, 0, 0, -2, 0, 0, 1288,
	1282, 1283, 0, 0, 0, 0, 2697, 1462, 1468, 0,
	1563, 1578, 472, 1469, 1490, 0, 0, 0, 1479, 1475,
	1472, 1709, 0, 0, 0, 0, 0, 1702, 1705, 542,
	543, 294, 0, 0, 0, 0, 0, 319, 0, 0,
	0, 1071, 1075, 0, 2302, 2302, 0, 2256, 0, 0,
	0, 0, 0, 0, 276, 0, 279, 0, 0, 0,
	284, 285, 286, 287, 288, 289, 278, 268, 1678, 0,
	0, 659, 0, 0, 818, 0, 841, 844, 853, 855,
	858, 901, 903, 920, 930, 953, 954, 1092, 0, 1092,
	0, 0, 974, 1526, 0, 1601, 1532, 1583, 1584, 0,
	1314, 0, 1843, 1888, 0, 0, -2, 0, 0, 1892,
	0, 0, 0, -2, 0, 0, 0, 2149, 2151, 0,
	2205, 2140, 1990, 0, 0, 0, 1994, 1978, 1979, 0,
	2100, 2166, 2195, 2199, 0, 1828, 1829, 1830, 1831, 1832,
	1833, 1834, 0, 2245, 2280, 2284, 2073, 2074, 2078, 2259,
	0, 0, 0, 2003, 0, 0, 0, 0, 0, 0,
	0, 0, 1809, 1813, 0, 0, 2167, 2178, 2180, 1930,
	1931, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943,
	1944, -2, -2, -2, 1948, 1949, 1950, -2, -2, -2,
	1955, 0, 0, 0, 2181, 2183, 2184, 2188, 2189, 0,
	2056, 2057, 2058, 2190, 0, 1565, 1559, 1620, 0, 1707,
	1624, 0, 1620, 1620, 1572, 1667, 0, 0, 1691, 0,
	1639, 0, 1640, 0, 1672, 0, 1647, 1650, 1651, 1661,
	0, 1653, 0, 1656, 0, 1990, -2, 320, 322, 324,
	0, 327, 328, 0, 0, 610, 611, 0, 609, 593,
	0, 0, 1717, 0, 0, 1793, 1797, 1821, 619, 620,
	0, 618, 504, 513, 233, 0, 1676, 0, 0, 0,
	0, 0, 0, 204, 1112, 1147, 0, 0, 0, 1137,
	0, 0, 1153, 167, 168, 169, 0, 0, 0, 0,
	178, 0, 0, 175, 0, 184, 188, 1099, 0, 0,
	0, 0, 1322, 0, 0, 0, 139, 140, 141, 0,
	146, 0, 147, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1452, 1453, 0, 1443, 0, 0, 0,
	206, 0, 0, 0, 1311, 227, 0, 0, 0, 0,
	0, 1275, 1276, 1233, 1335, 1339, 1347, 0, 0, 0,
	0, 625, 0, 630, 1372, 0, 245, 243, 0, 246,
	0, 249, 250, 0, 252, 245, 239, 0, 0, 0,
	1184, 390, 1038, 1154, 0, 1156, 0, 1036, 0, 0,
	1155, 441, 0, 448, 0, 462, 0, 0, 1205, 0,
	0, 1228, 1248, 1184, 0, 1287, 1289, 0, 1297, 0,
	0, 0, 1464, 1468, 0, 1457, 1458, 1597, 1470, 1488,
	-2, 0, 0, 1578, 1496, 1493, 1499, 1500, 0, 316,
	0, 311, 313, 0, 297, 0, 0, 1067, 1072, 0,
	0, 0, 0, 0, 1481, 1483, 0, 1011, 1014, 0,
	0, 0, 0, 0, 267, 278, 1678, 303, 0, 812,
	836, 911, 955, 1091, 0, 0, 957, 0, 0, 1600,
	1587, 1588, 1585, 1314, 1890, 1894, 0, 0, 0, 1896,
	-2, 0, 1918, -2, -2, 2152, 2204, 1969, 1578, 1991,
	1993, 1980, 2198, 1838, 0, 2080, 2077, 0, 2064, 0,
	2015, 2016, 0, 0, 2019, 2021, 2022, 2023, 1777, 1770,
	1769, 2177, 0, 0, 0, 0, 2055, 1560, 0, 2069,
	0, 0, 1628, 2069, 2069, 1668, 0, 1670, 1637, 1629,
	0, 2280, 1663, 1655, 0, 0, 325, 0, 329, 330,
	0, 0, 1711, 1716, 0, 1722, 1792, 0, 234, 161,
	162, 1326, 1330, 1327, 0, 164, 0, 1113, 0, 1116,
	0, 0, 0, 0, 1123, 1138, 0, 0, 0, 0,
	0, 0, 1140, 0, 1139, 0, 0, 1170, 0, 1302,
	1309, 0, -2, 0, 0, 0, 171, 194, 0, 0,
	0, 0, 197, 1376, 173, 0, 0, 203, 203, 0,
	0, 1318, 1320, 1333, 0, 0, 0, 0, 149, 0,
	0, 1336, 1340, 1348, 1343, 1345, 1351, 0, 101, 0,
	1454, 0, 0, 1353, 216, 217, 0, 203, 0, 203,
	209, 203, 1311, 0, 0, 0, 0, 0, 0, 0,
	1356, 1357, 236, 0, 0, 0, 0, 238, 309, 245,
	378, 0, 1086, 0, 1166, 1158, 1159, 1160, 0, 1165,
	1167, 0, 0, 1052, 1037, 0, 1048, 0, 0, 1065,
	1040, 0, 446, 463, 0, 466, 0, 469, 1026, 1202,
	1245, 1184, 0, 1279, 0, 0, 0, 0, 0, 0,
	0, 1466, 1468, 0, 1459, 1460, 1490, 1596, 0, 0,
	0, 1478, 1597, 0, 318, 319, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 319, 280, 0, 281, 282,
	283, 269, 270, 661, 663, 0, 0, 669, 1090, 0,
	0, 0, 0, 1586, 1898, -2, -2, 1919, 0, 2281,
	2283, 1578, 0, 2066, 1580, 0, 0, -2, 0, 0,
	0, 1561, 1544, 0, 1619, 1611, 1613, 1615, 2584, 2373,
	2696, 1545, 1546, 1690, 0, 1658, 326, 612, 0, 0,
	1718, 0, 0, 0, 1328, 166, 0, 1117, 1118, 2255,
	1120, 0, 1122, 1124, 1125, 1126, 0, 1129, 0, 2304,
	0, 1134, 1135, 1136, 0, 0, 1149, 1171, 0, 1180,
	0, 1304, 1314, 1308, 0, 1306, 1182, 0, 170, 196,
	172, 198, 193, 0, 1311, 0, 174, 183, 0, 0,
	121, 0, 0, 2367, 152, 150, 148, 99, 1315, 123,
	0, 218, 226, 1310, 228, 213, 203, 0, 1337, 1341,
	1349, 0, 1364, 1365, 1366, 1367, 0, 0, 0, 0,
	247, 0, 248, 251, 0, 0, 1101, 0, 1039, 1157,
	0, 1168, 1169, 1042, 0, 1041, 0, 0, 0, 0,
	0, 447, 450, 0, 453, 0, 0, 0, 0, 0,
	1290, 1288, 0, 1296, 0, 0, 0, 1442, 0, 0,
	1461, 1462, 470, 1484, 0, 0, 1490, 1501, 296, 0,
	0, 1073, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083,
	1084, 1074, 1182, 0, 0, 1146, 0, 301, 277, 0,
	665, 0, 667, 0, 956, 958, 0, 0, 1992, 2084,
	0, 0, 2017, 2018, -2, 0, 1958, 2068, 2070, 0,
	0, 0, 0, 0, 1630, 613, 1712, 621, 1324, 0,
	1331, 1115, 1119, 0, 0, 0, 1130, 1188, 0, 0,
	1141, 0, 0, 1174, 1175, 1086, 0, 1176, 1177, 1178,
	1303, 1589, 1309, 1086, 0, 0, 195, 200, 0, 0,
	0, 0, 0, 0, 0, 207, 229, 1311, 0, 1368,
	1369, 0, 0, 244, 262, 0, 1246, 1040, 1100, 0,
	0, 1050, 0, 1053, 0, 1049, 1046, 1047, 1038, 0,
	451, 452, 467, 0, 468, 0, 1249, 0, 0, 1297,
	0, 0, 1449, 1441, 1468, 1463, 1464, 1709, 1487, 1491,
	0, 0, 1180, 1182, 1097, 0, 664, 0, 0, 966,
	967, 0, 0, 0, 0, 2079, 1581, 1959, 0, 0,
	1614, 1616, 1617, 1618, 1325, 0, 0, 1128, 1193, 0,
	0, 0, 1142, 1172, 1173, 1097, 0, 1307, 1305, 1151,
	0, 1184, 176, 0, 1182, 0, 1106, 0, 0, 1109,
	0, 0, 153, 2367, 151, 0, 203, 1361, 203, 0,
	265, 0, 259, 257, 258, 1042, 0, 0, 1162, 1164,
	0, 1054, 1086, 1052, 464, 1247, 1280, 1182, 0, 1180,
	0, 1456, 1468, 1450, 1451, 0, 1466, 0, 319, 319,
	1086, 1180, 1040, 1096, 319, 666, 668, 2076, 2096, 2085,
	-2, 2655, 2374, 0, 2096, 2096, 2071, 2072, 0, 0,
	1131, 1189, 1190, 0, 1185, 1186, 1187, 2303, 1132, 1133,
	1170, 0, 0, 1188, 199, 1086, 1103, 0, 0, 1104,
	0, 0, 156, 0, 158, 230, 1359, 0, 1362, 0,
	253, 0, 0, 1034, 0, 1161, 0, 0, 0, 0,
	1101, 1042, 1180, 0, 1086, 0, 1445, 1455, 0, 1465,
	1442, 0, 298, 299, 1097, 1086, 1709, 0, 300, 2081,
	0, 0, 2087, 2088, 2089, 2090, 2091, 2082, 2083, 1121,
	0, 1191, 0, 1192, 0, 0, 0, 1709, 1179, 0,
	1193, 181, 1107, 0, 1110, 0, 154, 0, 0, 0,
	260, 261, 1031, 1033, 0, 1163, 1043, 0, 1045, 1040,
	1051, 1086, 0, 1097, 0, 1438, 1444, 1448, 2264, 1449,
	1485, 0, 1040, 1097, 1145, 0, 2093, 2094, 0, 0,
	0, 1194, 0, 1197, 1198, 0, 1195, 1150, 0, 1170,
	0, 0, 1360, 203, 0, 0, 1044, 1042, 1097, 1182,
	1040, 1180, 1456, 0, 1709, 1040, 2092, 2095, 2086, 1127,
	1196, 1199, 1200, 1181, 1152, 0, 0, 1363, 263, 0,
	1089, 1034, 1040, 1180, 1709, 1086, 1445, 1709, 1143, 1709,
	1094, 0, 0, 1085, 1087, 1088, 1032, 1709, 1086, 1293,
	1097, 1439, 1486, 1144, 1108, 1093, 0, 264, 1291, 1097,
	1040, 0, 1040, 1709, 0, 1709, 1294, 1094, 1292, 1111,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 586, 3, 592, 587, 3,
	597, 598, 590, 588, 602, 589, 599, 591, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 605, 3,
	578, 580, 579, 583, 601, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 595, 3, 596, 593, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 603, 585, 604, 581,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 582, 57921, 584, 57922, 594, 57923, 600, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1467
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1472
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1474
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1477
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1494
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1505
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1508
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1576
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1602
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1634
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1638
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1642
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1669
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1673
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1679
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[5].union.dataPlacement(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1689
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1696
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1732
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1739
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1763
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1795
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1799
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1803
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1809
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1813
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1819
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1828
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1839
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1843
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1849
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1857
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1867
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1871
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1880
		{
		}
	case 131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1881
		{
		}
	case 132:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1885
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1894
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1906
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1911
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1918
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1930
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1937
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1945
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1950
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1954
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1959
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1965
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1973
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1984
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1994
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2004
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2013
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2024
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2030
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2038
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2042
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2046
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 154:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2056
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2061
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2072
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2076
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2082
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2086
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2113
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2118
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2123
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2128
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2133
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2138
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2152
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2166
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2195
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2198
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2204
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2256
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2264
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2265
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2269
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2273
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2279
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2287
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2291
		{
			sqlVAL.union.val = nil
		}
	case 195:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2297
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2301
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2307
		{
			sqlVAL.union.val = true
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2311
		{
			sqlVAL.union.val = false
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2317
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2321
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2332
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2336
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2346
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2371
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 208:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2393
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2412
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2421
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2430
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2439
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 214:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2443
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2446
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2450
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2457
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2464
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2469
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2471
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2476
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2483
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2491
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2522
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2526
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2530
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 235:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2534
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 236:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2564
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2576
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2597
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2606
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2610
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2614
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2622
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 244:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 245:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2630
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2641
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2758
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = nil
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2771
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2775
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 259:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2785
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2797
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2807
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = nil
		}
	case 266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2847
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2856
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2866
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2875
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2892
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2896
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2900
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2906
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 277:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2932
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2945
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2957
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2973
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2977
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2989
		{
			return unimplemented(sqllex, "alter function")
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2993
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3034
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3043
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3049
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3054
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3059
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3064
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3069
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3073
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3089
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3092
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3100
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 310:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3122
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3136
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3140
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3146
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3150
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 318:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3160
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3164
		{
			sqlVAL.union.val = nil
		}
	case 320:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3176
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3190
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3196
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 323:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3200
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3206
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3210
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3222
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3226
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3230
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3242
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3243
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3244
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3245
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3255
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3263
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3291
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3301
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3305
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3308
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3327
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3335
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3337
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3341
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3344
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3348
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3356
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3360
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3376
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3380
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 362:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3385
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3397
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3399
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3403
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3404
		{
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3405
		{
			return helpWith(sqllex, "CREATE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3418
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3422
		{
			return unimplemented(sqllex, "create access method")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3424
		{
			return unimplemented(sqllex, "create cast")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3425
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3426
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3427
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3428
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3429
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3430
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3431
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3432
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3433
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3434
		{
			return unimplemented(sqllex, "create publication")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "create rule")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return unimplemented(sqllex, "create server")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3437
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3439
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3443
		{
		}
	case 400:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3444
		{
		}
	case 401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3447
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3448
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3451
		{
		}
	case 404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3452
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3458
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3459
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3460
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3461
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3462
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3463
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3464
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3466
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3467
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3468
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3469
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3470
		{
			return unimplemented(sqllex, "drop server")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3471
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3476
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3477
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3478
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3479
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3480
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3483
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3484
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3485
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3495
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3503
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3507
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3511
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3517
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3521
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3530
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3537
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3543
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3564
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3576
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3599
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3613
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3619
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3634
		{

			sqlVAL.union.val = nil
		}
	case 462:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3651
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3666
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3677
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3717
		{
			return helpWith(sqllex, "DELETE")
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3720
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3721
		{
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3732
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3733
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3734
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3736
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3745
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3747
		{
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3748
		{
			return helpWith(sqllex, "DROP")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3751
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3754
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3755
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3756
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3757
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3765
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3769
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 503:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3773
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3790
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3802
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3805
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3813
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3820
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3828
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3837
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3845
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3861
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3868
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3883
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 524:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3913
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3943
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3947
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3952
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3972
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3977
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4004
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4011
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4013
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4029
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4037
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4045
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4056
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4064
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4067
		{
			return helpWith(sqllex, "DELETE")
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4069
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4070
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4071
		{
			return helpWith(sqllex, "INSERT")
		}
	case 564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4074
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4076
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4079
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4085
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DELETE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4092
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "INSERT")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4095
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4099
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4100
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 592:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4126
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4134
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4138
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 596:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4152
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4159
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4171
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4175
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4185
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4189
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4197
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4200
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4223
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4227
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4231
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4235
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4239
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4249
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 613:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4253
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4264
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4267
		{
			return helpWith(sqllex, "GRANT")
		}
	case 616:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4290
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4298
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4302
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4316
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4327
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4339
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 626:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4349
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4367
		{
			return helpWith(sqllex, "RESET")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4368
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4383
		{
			return helpWith(sqllex, "RESET")
		}
	case 639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4391
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4405
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4408
		{
			return helpWith(sqllex, "USE")
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4412
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4413
		{
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4414
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4419
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4421
		{
			return helpWith(sqllex, "USE")
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4452
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4455
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4473
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4481
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4485
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4495
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4499
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4505
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4509
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4513
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4517
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4532
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4535
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4561
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 677:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4570
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4592
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4601
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4620
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4624
		{
			return unimplemented(sqllex, "set from current")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4628
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4633
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4642
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4647
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4652
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4660
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4665
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4682
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4686
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4714
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4718
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4728
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 707:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4732
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4736
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4740
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4746
		{
			sqlVAL.union.val = tree.Low
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = tree.Normal
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4754
		{
			sqlVAL.union.val = tree.High
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4765
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4769
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4773
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4778
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4797
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4798
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4799
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4801
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4803
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4804
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4807
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4808
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4809
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4811
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4813
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4823
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4828
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4829
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4833
		{
			return helpWith(sqllex, "SHOW")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4845
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4849
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4854
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4864
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4869
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4879
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4880
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4881
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4892
		{
			sqlVAL.str = "client_encoding"
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.str = "timezone"
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4897
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4911
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4915
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4919
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4930
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4938
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4946
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4960
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4978
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4987
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5005
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5009
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5014
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5019
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5023
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5034
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5045
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5049
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5053
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5057
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5071
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5077
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5082
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5087
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5108
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5117
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5124
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5140
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5148
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5159
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5169
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5172
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5181
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5189
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5192
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5194
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5197
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5205
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5208
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5217
		{
			sqlVAL.union.val = true
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5219
		{
			sqlVAL.union.val = true
		}
	case 870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5221
		{
			sqlVAL.union.val = false
		}
	case 873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5242
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5249
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5251
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5253
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5257
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5265
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5286
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5294
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5295
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5313
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5319
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5327
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5331
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5341
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5345
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 899:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5356
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5359
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5361
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5364
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 903:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5366
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5370
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5373
		{
			sqlVAL.union.val = true
		}
	case 906:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5374
		{
			sqlVAL.union.val = false
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5387
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5390
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 911:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5398
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5421
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5428
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5431
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5433
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5436
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = true
		}
	case 920:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5440
		{
			sqlVAL.union.val = false
		}
	case 921:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5451
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5468
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5479
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5483
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 931:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5494
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5508
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5516
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5526
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5530
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5544
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5549
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5554
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5559
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5564
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5567
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5577
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5581
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5583
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5587
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5598
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5606
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5619
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5627
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5635
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5643
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5650
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5656
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5658
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5661
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5663
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5666
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5670
		{
		}
	case 966:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5679
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5687
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5693
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 969:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5702
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5707
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5711
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5723
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5727
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5743
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5749
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5755
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5761
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5777
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5783
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5790
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5797
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 985:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 986:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5922
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5930
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5969
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5973
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5978
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5982
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 999:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6018
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6031
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6032
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6033
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6043
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6073
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6075
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6079
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6083
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6086
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6091
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6095
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6110
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6118
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6126
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6140
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6147
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6154
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6161
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6172
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6189
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6228
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6244
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6262
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6266
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6273
		{

			sqlVAL.union.val = nil
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6279
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6285
		{
			sqlVAL.str = ""
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6295
		{
			sqlVAL.union.val = nil
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6299
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6312
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6316
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6322
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6332
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6336
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6342
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6356
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6371
		{
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6372
		{
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6373
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6392
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6393
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6398
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6399
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6400
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6401
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6416
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6428
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6441
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6454
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6460
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6465
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6467
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6468
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6471
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6472
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6473
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6478
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6499
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6504
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6510
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.str = ""
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6530
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6544
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6556
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6572
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6578
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6592
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6598
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6602
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6608
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6618
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6642
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6663
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6667
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6679
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6683
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6705
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6709
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6727
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6746
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6756
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6760
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6769
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6779
		{

			sqlVAL.union.val = true
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6784
		{
			sqlVAL.union.val = false
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6789
		{
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6793
		{
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6796
		{
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6828
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6858
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6864
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6871
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6884
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6896
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6907
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6914
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6918
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6924
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6934
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6945
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6949
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6977
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7003
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7014
		{
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7015
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7016
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7017
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7018
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7019
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7037
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7041
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7047
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7053
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7059
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7063
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7083
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7091
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7095
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7104
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7108
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7140
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7144
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7148
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7152
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7156
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7175
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7184
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7192
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7196
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7203
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7206
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7207
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7208
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7218
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7220
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7222
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7226
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7227
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7230
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7232
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7234
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7245
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7249
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7263
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7270
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7281
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7297
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7304
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7308
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7312
		{
			sqlVAL.str = ""
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = true
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7338
		{

			sqlVAL.union.val = true
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = false
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7353
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7367
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7379
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7391
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7401
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7411
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7431
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7435
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7439
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7443
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7451
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7455
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7463
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7471
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7479
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7502
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7506
		{
			sqlVAL.union.val = nil
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7521
		{
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7522
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7531
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7547
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7549
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7551
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7553
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7555
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7557
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7561
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7575
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7595
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7613
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7632
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7649
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7666
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7670
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = false
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7691
		{
			sqlVAL.union.val = true
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7695
		{
			sqlVAL.union.val = false
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7701
		{
			sqlVAL.union.val = true
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7705
		{
			sqlVAL.union.val = false
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7711
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7715
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7724
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7730
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7736
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7744
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7768
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7769
		{
			sqlVAL.str = ""
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7772
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.str = ""
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7777
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7781
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7797
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7803
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7809
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7823
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7831
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7849
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7855
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7862
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7874
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7881
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7887
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7893
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7899
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7916
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7942
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7969
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8000
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8006
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8014
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8023
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8034
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8040
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8052
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8058
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8072
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8078
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8086
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8090
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8102
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8111
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8120
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8137
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8152
		{
			sqlVAL.union.val = true
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8156
		{
			sqlVAL.union.val = false
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8170
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = tree.Types
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8197
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8201
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8210
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8216
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8220
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8225
		{
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8226
		{
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8229
		{
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8230
		{
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8238
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8241
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8259
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8265
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8268
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8281
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8289
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8291
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8297
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8310
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8318
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8320
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8326
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8334
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8337
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8341
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8342
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8343
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8362
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8364
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8367
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8380
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8382
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8385
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8389
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8394
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8395
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8396
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8413
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8416
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8417
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8421
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8425
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8435
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8441
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8445
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8460
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8469
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8487
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8493
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8509
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8513
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8553
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8558
		{
			sqlVAL.str = ""
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8576
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8581
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8588
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8592
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8598
		{

		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8605
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8609
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8613
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.str = ""
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.str = ""
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8652
		{
			sqlVAL.str = ""
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8662
		{
			sqlVAL.str = ""
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8668
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8681
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8682
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8697
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8704
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8711
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8722
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8729
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8733
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8742
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8747
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8753
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8757
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8761
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8767
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8771
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8791
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8802
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8818
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8822
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8827
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8860
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8876
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8892
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8907
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8913
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8928
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8969
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8975
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8979
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8994
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9036
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9040
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9046
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9057
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9058
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9062
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9066
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9067
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9072
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9107
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9108
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9109
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9131
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9144
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9170
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9174
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9192
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9214
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9230
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9241
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9245
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9251
		{
			sqlVAL.union.val = true
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = false
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9261
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9283
		{
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9284
		{
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = nil
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9297
		{
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9298
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9302
		{
			sqlVAL.union.val = true
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9306
		{
			sqlVAL.union.val = false
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9310
		{
			sqlVAL.union.val = false
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = true
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9327
		{
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9328
		{
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9331
		{
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9332
		{
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9336
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9340
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9346
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9352
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9356
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9373
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9394
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9399
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9425
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9434
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9445
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9446
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9450
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9454
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9458
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9472
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9476
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9484
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9513
		{
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9514
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9517
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9518
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9545
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9552
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9553
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9558
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9562
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9581
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9584
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9586
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9598
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9601
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9603
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9619
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9623
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9628
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9633
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9639
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9649
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9656
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9661
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9676
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9680
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9688
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9720
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9730
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9740
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9748
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9757
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9761
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9765
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9776
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9800
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9806
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9821
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9827
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9829
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9839
		{
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9841
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9844
		{
			sqlVAL.union.val = nil
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9845
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9846
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = true
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9864
		{
			sqlVAL.union.val = false
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9884
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9888
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9892
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9900
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9904
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9927
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9934
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.str = tree.AstFull
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.str = tree.AstRight
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9952
		{
			sqlVAL.str = tree.AstInner
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9958
		{
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9959
		{
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9983
		{
			sqlVAL.str = tree.AstHash
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9987
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9995
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9999
		{
			sqlVAL.str = ""
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10012
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10022
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10028
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10033
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10047
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10051
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10057
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10063
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10073
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10083
		{
			sqlVAL.union.val = true
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = false
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = true
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10097
		{
			sqlVAL.union.val = false
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10103
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10122
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10135
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10143
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10144
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10154
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10162
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10164
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10172
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10192
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10201
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10241
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10246
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10253
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10254
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10257
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10259
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10263
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10264
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10267
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10269
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10271
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10273
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10275
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10277
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10280
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10281
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10283
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10284
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10285
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10288
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = types.Geography
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10303
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10311
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10337
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10345
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10353
		{
			sqlVAL.union.val = nil
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10360
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10364
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = types.Int2
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = types.Int
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10376
		{
			sqlVAL.union.val = types.Float4
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10380
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10384
		{
			sqlVAL.union.val = types.Float
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10388
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10396
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10404
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10412
		{
			sqlVAL.union.val = types.Bool
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10418
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10431
		{
			sqlVAL.union.val = types.Float
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10437
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10443
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10451
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10455
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10459
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10465
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10477
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = types.String
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = true
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = false
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = types.Date
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10514
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10522
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10536
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10545
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10553
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10570
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10580
		{
			sqlVAL.union.val = true
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = false
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10582
		{
			sqlVAL.union.val = false
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10586
		{
			sqlVAL.union.val = types.Interval
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10594
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10629
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10645
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10660
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10678
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10699
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = nil
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10715
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10723
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10772
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10783
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10788
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10796
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10800
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10804
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10808
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10828
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10832
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10836
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10840
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10844
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10848
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10852
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10860
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10864
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10868
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10900
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10908
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10916
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10924
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10928
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10932
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10940
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10950
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10958
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10962
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10966
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10970
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10978
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10982
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10994
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10998
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11006
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11014
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11022
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11026
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11042
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11046
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11050
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11119
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11161
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11165
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11201
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11205
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11209
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11213
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11217
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11249
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11275
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11279
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11337
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11341
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11345
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11349
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11353
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11358
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11360
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11364
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11368
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11372
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11376
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11380
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11384
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11393
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11400
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11404
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11408
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11423
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11427
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11431
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11435
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11438
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11449
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11450
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11465
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11474
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11540
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11552
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11561
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11571
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11607
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11611
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11615
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11619
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11627
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11631
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11639
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11665
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11670
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11679
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11685
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11688
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11694
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11697
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11703
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11706
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11711
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11716
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11721
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11726
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11731
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11737
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11740
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11741
		{
			return unimplemented(sqllex, "treat")
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11743
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11747
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11755
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11762
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11767
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11777
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11787
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11794
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11798
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11804
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11808
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11814
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11830
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11857
		{
			sqlVAL.str = ""
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11867
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11873
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11881
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11889
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11903
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11916
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11948
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11984
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12002
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12006
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12013
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12033
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12049
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12050
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12052
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12053
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12054
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12055
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12056
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12059
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12063
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12065
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12068
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12069
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12071
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12072
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12073
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12075
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12076
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12077
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12079
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12080
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12089
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12142
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12152
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12156
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12167
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12188
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12194
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12198
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12208
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12218
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12224
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12228
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12265
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12269
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12282
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12307
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12311
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12331
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12380
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12386
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12390
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12397
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12414
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12420
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12424
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12429
		{
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12430
		{
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12434
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12444
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12461
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12469
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12473
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12479
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12483
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12502
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12510
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12533
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12542
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12550
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12554
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12560
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12564
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12583
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12599
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12608
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12619
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12628
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12636
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12653
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12738
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12746
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12750
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12768
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12795
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12802
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12806
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12810
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12824
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12832
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12845
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12854
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12872
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12885
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12892
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12917
		{
			sqlVAL.str = ""
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12923
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12927
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
