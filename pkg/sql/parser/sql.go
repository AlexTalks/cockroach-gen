// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/sql/lex"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}
func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

//line sql-gen.y:73

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}

//line sql-gen.y:689
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lex.IDENT
const SCONST = lex.SCONST
const BCONST = lex.BCONST
const BITCONST = lex.BITCONST
const ICONST = lex.ICONST
const FCONST = lex.FCONST
const PLACEHOLDER = lex.PLACEHOLDER
const TYPECAST = lex.TYPECAST
const TYPEANNOTATE = lex.TYPEANNOTATE
const DOT_DOT = lex.DOT_DOT
const LESS_EQUALS = lex.LESS_EQUALS
const GREATER_EQUALS = lex.GREATER_EQUALS
const NOT_EQUALS = lex.NOT_EQUALS
const NOT_REGMATCH = lex.NOT_REGMATCH
const REGIMATCH = lex.REGIMATCH
const NOT_REGIMATCH = lex.NOT_REGIMATCH
const ERROR = lex.ERROR
const ABORT = lex.ABORT
const ACTION = lex.ACTION
const ADD = lex.ADD
const ADMIN = lex.ADMIN
const AFTER = lex.AFTER
const AGGREGATE = lex.AGGREGATE
const ALL = lex.ALL
const ALTER = lex.ALTER
const ALWAYS = lex.ALWAYS
const ANALYSE = lex.ANALYSE
const ANALYZE = lex.ANALYZE
const AND = lex.AND
const AND_AND = lex.AND_AND
const ANY = lex.ANY
const ANNOTATE_TYPE = lex.ANNOTATE_TYPE
const ARRAY = lex.ARRAY
const AS = lex.AS
const ASC = lex.ASC
const ASYMMETRIC = lex.ASYMMETRIC
const AT = lex.AT
const ATTRIBUTE = lex.ATTRIBUTE
const AUTHORIZATION = lex.AUTHORIZATION
const AUTOMATIC = lex.AUTOMATIC
const BACKUP = lex.BACKUP
const BACKUPS = lex.BACKUPS
const BEFORE = lex.BEFORE
const BEGIN = lex.BEGIN
const BETWEEN = lex.BETWEEN
const BIGINT = lex.BIGINT
const BIGSERIAL = lex.BIGSERIAL
const BINARY = lex.BINARY
const BIT = lex.BIT
const BUCKET_COUNT = lex.BUCKET_COUNT
const BOOLEAN = lex.BOOLEAN
const BOTH = lex.BOTH
const BOX2D = lex.BOX2D
const BUNDLE = lex.BUNDLE
const BY = lex.BY
const CACHE = lex.CACHE
const CANCEL = lex.CANCEL
const CANCELQUERY = lex.CANCELQUERY
const CASCADE = lex.CASCADE
const CASE = lex.CASE
const CAST = lex.CAST
const CBRT = lex.CBRT
const CHANGEFEED = lex.CHANGEFEED
const CHAR = lex.CHAR
const CHARACTER = lex.CHARACTER
const CHARACTERISTICS = lex.CHARACTERISTICS
const CHECK = lex.CHECK
const CLOSE = lex.CLOSE
const CLUSTER = lex.CLUSTER
const COALESCE = lex.COALESCE
const COLLATE = lex.COLLATE
const COLLATION = lex.COLLATION
const COLUMN = lex.COLUMN
const COLUMNS = lex.COLUMNS
const COMMENT = lex.COMMENT
const COMMENTS = lex.COMMENTS
const COMMIT = lex.COMMIT
const COMMITTED = lex.COMMITTED
const COMPACT = lex.COMPACT
const COMPLETE = lex.COMPLETE
const CONCAT = lex.CONCAT
const CONCURRENTLY = lex.CONCURRENTLY
const CONFIGURATION = lex.CONFIGURATION
const CONFIGURATIONS = lex.CONFIGURATIONS
const CONFIGURE = lex.CONFIGURE
const CONFLICT = lex.CONFLICT
const CONSTRAINT = lex.CONSTRAINT
const CONSTRAINTS = lex.CONSTRAINTS
const CONTAINS = lex.CONTAINS
const CONTROLCHANGEFEED = lex.CONTROLCHANGEFEED
const CONTROLJOB = lex.CONTROLJOB
const CONVERSION = lex.CONVERSION
const CONVERT = lex.CONVERT
const COPY = lex.COPY
const COVERING = lex.COVERING
const CREATE = lex.CREATE
const CREATEDB = lex.CREATEDB
const CREATELOGIN = lex.CREATELOGIN
const CREATEROLE = lex.CREATEROLE
const CROSS = lex.CROSS
const CUBE = lex.CUBE
const CURRENT = lex.CURRENT
const CURRENT_CATALOG = lex.CURRENT_CATALOG
const CURRENT_DATE = lex.CURRENT_DATE
const CURRENT_SCHEMA = lex.CURRENT_SCHEMA
const CURRENT_ROLE = lex.CURRENT_ROLE
const CURRENT_TIME = lex.CURRENT_TIME
const CURRENT_TIMESTAMP = lex.CURRENT_TIMESTAMP
const CURRENT_USER = lex.CURRENT_USER
const CYCLE = lex.CYCLE
const DATA = lex.DATA
const DATABASE = lex.DATABASE
const DATABASES = lex.DATABASES
const DATE = lex.DATE
const DAY = lex.DAY
const DEC = lex.DEC
const DECIMAL = lex.DECIMAL
const DEFAULT = lex.DEFAULT
const DEFAULTS = lex.DEFAULTS
const DEALLOCATE = lex.DEALLOCATE
const DECLARE = lex.DECLARE
const DEFERRABLE = lex.DEFERRABLE
const DEFERRED = lex.DEFERRED
const DELETE = lex.DELETE
const DESC = lex.DESC
const DESTINATION = lex.DESTINATION
const DETACHED = lex.DETACHED
const DISCARD = lex.DISCARD
const DISTINCT = lex.DISTINCT
const DO = lex.DO
const DOMAIN = lex.DOMAIN
const DOUBLE = lex.DOUBLE
const DROP = lex.DROP
const ELSE = lex.ELSE
const ENCODING = lex.ENCODING
const ENCRYPTION_PASSPHRASE = lex.ENCRYPTION_PASSPHRASE
const END = lex.END
const ENUM = lex.ENUM
const ENUMS = lex.ENUMS
const ESCAPE = lex.ESCAPE
const EXCEPT = lex.EXCEPT
const EXCLUDE = lex.EXCLUDE
const EXCLUDING = lex.EXCLUDING
const EXISTS = lex.EXISTS
const EXECUTE = lex.EXECUTE
const EXECUTION = lex.EXECUTION
const EXPERIMENTAL = lex.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lex.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lex.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lex.EXPERIMENTAL_AUDIT
const EXPIRATION = lex.EXPIRATION
const EXPLAIN = lex.EXPLAIN
const EXPORT = lex.EXPORT
const EXTENSION = lex.EXTENSION
const EXTRACT = lex.EXTRACT
const EXTRACT_DURATION = lex.EXTRACT_DURATION
const FALSE = lex.FALSE
const FAMILY = lex.FAMILY
const FETCH = lex.FETCH
const FETCHVAL = lex.FETCHVAL
const FETCHTEXT = lex.FETCHTEXT
const FETCHVAL_PATH = lex.FETCHVAL_PATH
const FETCHTEXT_PATH = lex.FETCHTEXT_PATH
const FILES = lex.FILES
const FILTER = lex.FILTER
const FIRST = lex.FIRST
const FLOAT = lex.FLOAT
const FLOAT4 = lex.FLOAT4
const FLOAT8 = lex.FLOAT8
const FLOORDIV = lex.FLOORDIV
const FOLLOWING = lex.FOLLOWING
const FOR = lex.FOR
const FORCE_INDEX = lex.FORCE_INDEX
const FOREIGN = lex.FOREIGN
const FROM = lex.FROM
const FULL = lex.FULL
const FUNCTION = lex.FUNCTION
const GENERATED = lex.GENERATED
const GEOGRAPHY = lex.GEOGRAPHY
const GEOMETRY = lex.GEOMETRY
const GEOMETRYM = lex.GEOMETRYM
const GEOMETRYZ = lex.GEOMETRYZ
const GEOMETRYZM = lex.GEOMETRYZM
const GEOMETRYCOLLECTION = lex.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lex.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lex.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lex.GEOMETRYCOLLECTIONZM
const GLOBAL = lex.GLOBAL
const GRANT = lex.GRANT
const GRANTS = lex.GRANTS
const GREATEST = lex.GREATEST
const GROUP = lex.GROUP
const GROUPING = lex.GROUPING
const GROUPS = lex.GROUPS
const HAVING = lex.HAVING
const HASH = lex.HASH
const HIGH = lex.HIGH
const HISTOGRAM = lex.HISTOGRAM
const HOUR = lex.HOUR
const IDENTITY = lex.IDENTITY
const IF = lex.IF
const IFERROR = lex.IFERROR
const IFNULL = lex.IFNULL
const IGNORE_FOREIGN_KEYS = lex.IGNORE_FOREIGN_KEYS
const ILIKE = lex.ILIKE
const IMMEDIATE = lex.IMMEDIATE
const IMPORT = lex.IMPORT
const IN = lex.IN
const INCLUDE = lex.INCLUDE
const INCLUDING = lex.INCLUDING
const INCREMENT = lex.INCREMENT
const INCREMENTAL = lex.INCREMENTAL
const INET = lex.INET
const INET_CONTAINED_BY_OR_EQUALS = lex.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lex.INET_CONTAINS_OR_EQUALS
const INDEX = lex.INDEX
const INDEXES = lex.INDEXES
const INJECT = lex.INJECT
const INTERLEAVE = lex.INTERLEAVE
const INITIALLY = lex.INITIALLY
const INNER = lex.INNER
const INSERT = lex.INSERT
const INT = lex.INT
const INTEGER = lex.INTEGER
const INTERSECT = lex.INTERSECT
const INTERVAL = lex.INTERVAL
const INTO = lex.INTO
const INTO_DB = lex.INTO_DB
const INVERTED = lex.INVERTED
const IS = lex.IS
const ISERROR = lex.ISERROR
const ISNULL = lex.ISNULL
const ISOLATION = lex.ISOLATION
const JOB = lex.JOB
const JOBS = lex.JOBS
const JOIN = lex.JOIN
const JSON = lex.JSON
const JSONB = lex.JSONB
const JSON_SOME_EXISTS = lex.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lex.JSON_ALL_EXISTS
const KEY = lex.KEY
const KEYS = lex.KEYS
const KMS = lex.KMS
const KV = lex.KV
const LANGUAGE = lex.LANGUAGE
const LAST = lex.LAST
const LATERAL = lex.LATERAL
const LATEST = lex.LATEST
const LC_CTYPE = lex.LC_CTYPE
const LC_COLLATE = lex.LC_COLLATE
const LEADING = lex.LEADING
const LEASE = lex.LEASE
const LEAST = lex.LEAST
const LEFT = lex.LEFT
const LESS = lex.LESS
const LEVEL = lex.LEVEL
const LIKE = lex.LIKE
const LIMIT = lex.LIMIT
const LINESTRING = lex.LINESTRING
const LINESTRINGM = lex.LINESTRINGM
const LINESTRINGZ = lex.LINESTRINGZ
const LINESTRINGZM = lex.LINESTRINGZM
const LIST = lex.LIST
const LOCAL = lex.LOCAL
const LOCALTIME = lex.LOCALTIME
const LOCALTIMESTAMP = lex.LOCALTIMESTAMP
const LOCKED = lex.LOCKED
const LOGIN = lex.LOGIN
const LOOKUP = lex.LOOKUP
const LOW = lex.LOW
const LSHIFT = lex.LSHIFT
const MATCH = lex.MATCH
const MATERIALIZED = lex.MATERIALIZED
const MERGE = lex.MERGE
const MINVALUE = lex.MINVALUE
const MAXVALUE = lex.MAXVALUE
const MINUTE = lex.MINUTE
const MONTH = lex.MONTH
const MULTILINESTRING = lex.MULTILINESTRING
const MULTILINESTRINGM = lex.MULTILINESTRINGM
const MULTILINESTRINGZ = lex.MULTILINESTRINGZ
const MULTILINESTRINGZM = lex.MULTILINESTRINGZM
const MULTIPOINT = lex.MULTIPOINT
const MULTIPOINTM = lex.MULTIPOINTM
const MULTIPOINTZ = lex.MULTIPOINTZ
const MULTIPOINTZM = lex.MULTIPOINTZM
const MULTIPOLYGON = lex.MULTIPOLYGON
const MULTIPOLYGONM = lex.MULTIPOLYGONM
const MULTIPOLYGONZ = lex.MULTIPOLYGONZ
const MULTIPOLYGONZM = lex.MULTIPOLYGONZM
const NAN = lex.NAN
const NAME = lex.NAME
const NAMES = lex.NAMES
const NATURAL = lex.NATURAL
const NEVER = lex.NEVER
const NEXT = lex.NEXT
const NO = lex.NO
const NOCANCELQUERY = lex.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lex.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lex.NOCONTROLJOB
const NOCREATEDB = lex.NOCREATEDB
const NOCREATELOGIN = lex.NOCREATELOGIN
const NOCREATEROLE = lex.NOCREATEROLE
const NOLOGIN = lex.NOLOGIN
const NO_INDEX_JOIN = lex.NO_INDEX_JOIN
const NONE = lex.NONE
const NORMAL = lex.NORMAL
const NOT = lex.NOT
const NOTHING = lex.NOTHING
const NOTNULL = lex.NOTNULL
const NOVIEWACTIVITY = lex.NOVIEWACTIVITY
const NOWAIT = lex.NOWAIT
const NULL = lex.NULL
const NULLIF = lex.NULLIF
const NULLS = lex.NULLS
const NUMERIC = lex.NUMERIC
const OF = lex.OF
const OFF = lex.OFF
const OFFSET = lex.OFFSET
const OID = lex.OID
const OIDS = lex.OIDS
const OIDVECTOR = lex.OIDVECTOR
const ON = lex.ON
const ONLY = lex.ONLY
const OPT = lex.OPT
const OPTION = lex.OPTION
const OPTIONS = lex.OPTIONS
const OR = lex.OR
const ORDER = lex.ORDER
const ORDINALITY = lex.ORDINALITY
const OTHERS = lex.OTHERS
const OUT = lex.OUT
const OUTER = lex.OUTER
const OVER = lex.OVER
const OVERLAPS = lex.OVERLAPS
const OVERLAY = lex.OVERLAY
const OWNED = lex.OWNED
const OWNER = lex.OWNER
const OPERATOR = lex.OPERATOR
const PARENT = lex.PARENT
const PARTIAL = lex.PARTIAL
const PARTITION = lex.PARTITION
const PARTITIONS = lex.PARTITIONS
const PASSWORD = lex.PASSWORD
const PAUSE = lex.PAUSE
const PAUSED = lex.PAUSED
const PHYSICAL = lex.PHYSICAL
const PLACING = lex.PLACING
const PLAN = lex.PLAN
const PLANS = lex.PLANS
const POINT = lex.POINT
const POINTM = lex.POINTM
const POINTZ = lex.POINTZ
const POINTZM = lex.POINTZM
const POLYGON = lex.POLYGON
const POLYGONM = lex.POLYGONM
const POLYGONZ = lex.POLYGONZ
const POLYGONZM = lex.POLYGONZM
const POSITION = lex.POSITION
const PRECEDING = lex.PRECEDING
const PRECISION = lex.PRECISION
const PREPARE = lex.PREPARE
const PRESERVE = lex.PRESERVE
const PRIMARY = lex.PRIMARY
const PRIORITY = lex.PRIORITY
const PROCEDURAL = lex.PROCEDURAL
const PUBLIC = lex.PUBLIC
const PUBLICATION = lex.PUBLICATION
const QUERIES = lex.QUERIES
const QUERY = lex.QUERY
const RANGE = lex.RANGE
const RANGES = lex.RANGES
const READ = lex.READ
const REAL = lex.REAL
const RECURSIVE = lex.RECURSIVE
const RECURRING = lex.RECURRING
const REF = lex.REF
const REFERENCES = lex.REFERENCES
const REFRESH = lex.REFRESH
const REGCLASS = lex.REGCLASS
const REGPROC = lex.REGPROC
const REGPROCEDURE = lex.REGPROCEDURE
const REGNAMESPACE = lex.REGNAMESPACE
const REGTYPE = lex.REGTYPE
const REINDEX = lex.REINDEX
const REMOVE_PATH = lex.REMOVE_PATH
const RENAME = lex.RENAME
const REPEATABLE = lex.REPEATABLE
const REPLACE = lex.REPLACE
const RELEASE = lex.RELEASE
const RESET = lex.RESET
const RESTORE = lex.RESTORE
const RESTRICT = lex.RESTRICT
const RESUME = lex.RESUME
const RETURNING = lex.RETURNING
const RETRY = lex.RETRY
const REVISION_HISTORY = lex.REVISION_HISTORY
const REVOKE = lex.REVOKE
const RIGHT = lex.RIGHT
const ROLE = lex.ROLE
const ROLES = lex.ROLES
const ROLLBACK = lex.ROLLBACK
const ROLLUP = lex.ROLLUP
const ROW = lex.ROW
const ROWS = lex.ROWS
const RSHIFT = lex.RSHIFT
const RULE = lex.RULE
const RUNNING = lex.RUNNING
const SAVEPOINT = lex.SAVEPOINT
const SCATTER = lex.SCATTER
const SCHEDULE = lex.SCHEDULE
const SCHEDULES = lex.SCHEDULES
const SCHEMA = lex.SCHEMA
const SCHEMAS = lex.SCHEMAS
const SCRUB = lex.SCRUB
const SEARCH = lex.SEARCH
const SECOND = lex.SECOND
const SELECT = lex.SELECT
const SEQUENCE = lex.SEQUENCE
const SEQUENCES = lex.SEQUENCES
const SERIALIZABLE = lex.SERIALIZABLE
const SERVER = lex.SERVER
const SESSION = lex.SESSION
const SESSIONS = lex.SESSIONS
const SESSION_USER = lex.SESSION_USER
const SET = lex.SET
const SETTING = lex.SETTING
const SETTINGS = lex.SETTINGS
const SHARE = lex.SHARE
const SHOW = lex.SHOW
const SIMILAR = lex.SIMILAR
const SIMPLE = lex.SIMPLE
const SKIP = lex.SKIP
const SKIP_MISSING_FOREIGN_KEYS = lex.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lex.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lex.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lex.SKIP_MISSING_VIEWS
const SMALLINT = lex.SMALLINT
const SMALLSERIAL = lex.SMALLSERIAL
const SNAPSHOT = lex.SNAPSHOT
const SOME = lex.SOME
const SPLIT = lex.SPLIT
const SQL = lex.SQL
const START = lex.START
const STATISTICS = lex.STATISTICS
const STATUS = lex.STATUS
const STDIN = lex.STDIN
const STRICT = lex.STRICT
const STRING = lex.STRING
const STORAGE = lex.STORAGE
const STORE = lex.STORE
const STORED = lex.STORED
const STORING = lex.STORING
const SUBSTRING = lex.SUBSTRING
const SYMMETRIC = lex.SYMMETRIC
const SYNTAX = lex.SYNTAX
const SYSTEM = lex.SYSTEM
const SQRT = lex.SQRT
const SUBSCRIPTION = lex.SUBSCRIPTION
const TABLE = lex.TABLE
const TABLES = lex.TABLES
const TEMP = lex.TEMP
const TEMPLATE = lex.TEMPLATE
const TEMPORARY = lex.TEMPORARY
const TENANT = lex.TENANT
const TESTING_RELOCATE = lex.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lex.EXPERIMENTAL_RELOCATE
const TEXT = lex.TEXT
const THEN = lex.THEN
const TIES = lex.TIES
const TIME = lex.TIME
const TIMETZ = lex.TIMETZ
const TIMESTAMP = lex.TIMESTAMP
const TIMESTAMPTZ = lex.TIMESTAMPTZ
const TO = lex.TO
const THROTTLING = lex.THROTTLING
const TRAILING = lex.TRAILING
const TRACE = lex.TRACE
const TRANSACTION = lex.TRANSACTION
const TRANSACTIONS = lex.TRANSACTIONS
const TREAT = lex.TREAT
const TRIGGER = lex.TRIGGER
const TRIM = lex.TRIM
const TRUE = lex.TRUE
const TRUNCATE = lex.TRUNCATE
const TRUSTED = lex.TRUSTED
const TYPE = lex.TYPE
const TYPES = lex.TYPES
const TRACING = lex.TRACING
const UNBOUNDED = lex.UNBOUNDED
const UNCOMMITTED = lex.UNCOMMITTED
const UNION = lex.UNION
const UNIQUE = lex.UNIQUE
const UNKNOWN = lex.UNKNOWN
const UNLOGGED = lex.UNLOGGED
const UNSPLIT = lex.UNSPLIT
const UPDATE = lex.UPDATE
const UPSERT = lex.UPSERT
const UNTIL = lex.UNTIL
const USE = lex.USE
const USER = lex.USER
const USERS = lex.USERS
const USING = lex.USING
const UUID = lex.UUID
const VALID = lex.VALID
const VALIDATE = lex.VALIDATE
const VALUE = lex.VALUE
const VALUES = lex.VALUES
const VARBIT = lex.VARBIT
const VARCHAR = lex.VARCHAR
const VARIADIC = lex.VARIADIC
const VIEW = lex.VIEW
const VARYING = lex.VARYING
const VIEWACTIVITY = lex.VIEWACTIVITY
const VIRTUAL = lex.VIRTUAL
const WHEN = lex.WHEN
const WHERE = lex.WHERE
const WINDOW = lex.WINDOW
const WITH = lex.WITH
const WITHIN = lex.WITHIN
const WITHOUT = lex.WITHOUT
const WORK = lex.WORK
const WRITE = lex.WRITE
const YEAR = lex.YEAR
const ZONE = lex.ZONE
const NOT_LA = lex.NOT_LA
const WITH_LA = lex.WITH_LA
const AS_LA = lex.AS_LA
const GENERATED_ALWAYS = lex.GENERATED_ALWAYS
const CONTAINED_BY = lex.CONTAINED_BY
const POSTFIXOP = lex.POSTFIXOP
const UMINUS = lex.UMINUS
const HELPTOKEN = lex.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"MINUTE",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NO_INDEX_JOIN",
	"NONE",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGPROC",
	"REGPROCEDURE",
	"REGNAMESPACE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"TABLE",
	"TABLES",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}
var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:11889

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 31,
	-2, 1343,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 69,
	230, 202,
	478, 202,
	-2, 0,
	-1, 79,
	219, 1145,
	232, 1145,
	248, 340,
	369, 340,
	378, 929,
	410, 340,
	422, 929,
	463, 929,
	489, 340,
	515, 929,
	-2, 0,
	-1, 85,
	248, 344,
	-2, 0,
	-1, 86,
	127, 1343,
	225, 1343,
	500, 1343,
	501, 1343,
	-2, 0,
	-1, 102,
	144, 1314,
	162, 1314,
	175, 1314,
	228, 1314,
	261, 1314,
	322, 1314,
	332, 1314,
	495, 1314,
	-2, 1285,
	-1, 138,
	152, 808,
	247, 808,
	372, 777,
	427, 777,
	481, 808,
	483, 777,
	-2, 0,
	-1, 140,
	4, 1345,
	21, 1345,
	22, 1345,
	23, 1345,
	24, 1345,
	25, 1345,
	26, 1345,
	28, 1345,
	29, 1345,
	35, 1345,
	40, 1345,
	41, 1345,
	43, 1345,
	44, 1345,
	45, 1345,
	46, 1345,
	47, 1345,
	48, 1345,
	49, 1345,
	51, 1345,
	52, 1345,
	53, 1345,
	54, 1345,
	56, 1345,
	57, 1345,
	58, 1345,
	59, 1345,
	60, 1345,
	61, 1345,
	62, 1345,
	66, 1345,
	67, 1345,
	68, 1345,
	69, 1345,
	71, 1345,
	72, 1345,
	73, 1345,
	77, 1345,
	78, 1345,
	79, 1345,
	80, 1345,
	81, 1345,
	82, 1345,
	83, 1345,
	86, 1345,
	87, 1345,
	88, 1345,
	89, 1345,
	91, 1345,
	93, 1345,
	94, 1345,
	95, 1345,
	96, 1345,
	97, 1345,
	98, 1345,
	100, 1345,
	101, 1345,
	102, 1345,
	104, 1345,
	105, 1345,
	113, 1345,
	114, 1345,
	115, 1345,
	116, 1345,
	118, 1345,
	119, 1345,
	120, 1345,
	122, 1345,
	123, 1345,
	124, 1345,
	126, 1345,
	127, 1345,
	129, 1345,
	130, 1345,
	131, 1345,
	134, 1345,
	135, 1345,
	136, 1345,
	138, 1345,
	139, 1345,
	141, 1345,
	142, 1345,
	143, 1345,
	145, 1345,
	146, 1345,
	147, 1345,
	148, 1345,
	149, 1345,
	150, 1345,
	151, 1345,
	152, 1345,
	153, 1345,
	154, 1345,
	155, 1345,
	156, 1345,
	157, 1345,
	158, 1345,
	159, 1345,
	161, 1345,
	167, 1345,
	168, 1345,
	169, 1345,
	170, 1345,
	174, 1345,
	176, 1345,
	180, 1345,
	181, 1345,
	182, 1345,
	183, 1345,
	184, 1345,
	185, 1345,
	186, 1345,
	187, 1345,
	188, 1345,
	189, 1345,
	190, 1345,
	191, 1345,
	193, 1345,
	194, 1345,
	196, 1345,
	197, 1345,
	199, 1345,
	200, 1345,
	201, 1345,
	202, 1345,
	203, 1345,
	204, 1345,
	205, 1345,
	206, 1345,
	207, 1345,
	209, 1345,
	210, 1345,
	212, 1345,
	213, 1345,
	214, 1345,
	215, 1345,
	219, 1345,
	220, 1345,
	221, 1345,
	222, 1345,
	225, 1345,
	226, 1345,
	227, 1345,
	229, 1345,
	231, 1345,
	232, 1345,
	234, 1345,
	236, 1345,
	237, 1345,
	238, 1345,
	240, 1345,
	244, 1345,
	245, 1345,
	246, 1345,
	247, 1345,
	248, 1345,
	249, 1345,
	251, 1345,
	252, 1345,
	253, 1345,
	255, 1345,
	256, 1345,
	258, 1345,
	259, 1345,
	262, 1345,
	266, 1345,
	267, 1345,
	270, 1345,
	271, 1345,
	272, 1345,
	273, 1345,
	275, 1345,
	276, 1345,
	277, 1345,
	278, 1345,
	279, 1345,
	280, 1345,
	281, 1345,
	282, 1345,
	283, 1345,
	284, 1345,
	285, 1345,
	286, 1345,
	287, 1345,
	288, 1345,
	289, 1345,
	290, 1345,
	291, 1345,
	292, 1345,
	293, 1345,
	294, 1345,
	296, 1345,
	298, 1345,
	299, 1345,
	300, 1345,
	301, 1345,
	302, 1345,
	303, 1345,
	304, 1345,
	305, 1345,
	306, 1345,
	307, 1345,
	308, 1345,
	310, 1345,
	312, 1345,
	314, 1345,
	315, 1345,
	317, 1345,
	318, 1345,
	319, 1345,
	320, 1345,
	321, 1345,
	324, 1345,
	327, 1345,
	328, 1345,
	329, 1345,
	330, 1345,
	333, 1345,
	334, 1345,
	335, 1345,
	337, 1345,
	339, 1345,
	340, 1345,
	341, 1345,
	342, 1345,
	343, 1345,
	344, 1345,
	345, 1345,
	346, 1345,
	347, 1345,
	348, 1345,
	349, 1345,
	350, 1345,
	352, 1345,
	353, 1345,
	354, 1345,
	355, 1345,
	356, 1345,
	357, 1345,
	358, 1345,
	359, 1345,
	360, 1345,
	361, 1345,
	362, 1345,
	363, 1345,
	364, 1345,
	365, 1345,
	366, 1345,
	368, 1345,
	370, 1345,
	371, 1345,
	372, 1345,
	373, 1345,
	374, 1345,
	375, 1345,
	376, 1345,
	377, 1345,
	378, 1345,
	379, 1345,
	380, 1345,
	382, 1345,
	388, 1345,
	390, 1345,
	391, 1345,
	392, 1345,
	393, 1345,
	394, 1345,
	395, 1345,
	396, 1345,
	397, 1345,
	399, 1345,
	400, 1345,
	401, 1345,
	403, 1345,
	404, 1345,
	405, 1345,
	406, 1345,
	407, 1345,
	408, 1345,
	410, 1345,
	411, 1345,
	412, 1345,
	413, 1345,
	414, 1345,
	415, 1345,
	416, 1345,
	417, 1345,
	418, 1345,
	419, 1345,
	420, 1345,
	422, 1345,
	423, 1345,
	424, 1345,
	425, 1345,
	426, 1345,
	427, 1345,
	429, 1345,
	430, 1345,
	431, 1345,
	432, 1345,
	433, 1345,
	435, 1345,
	436, 1345,
	437, 1345,
	438, 1345,
	439, 1345,
	440, 1345,
	441, 1345,
	443, 1345,
	445, 1345,
	446, 1345,
	447, 1345,
	448, 1345,
	449, 1345,
	450, 1345,
	451, 1345,
	452, 1345,
	453, 1345,
	454, 1345,
	455, 1345,
	456, 1345,
	457, 1345,
	459, 1345,
	460, 1345,
	462, 1345,
	464, 1345,
	465, 1345,
	466, 1345,
	467, 1345,
	468, 1345,
	469, 1345,
	470, 1345,
	471, 1345,
	473, 1345,
	474, 1345,
	475, 1345,
	476, 1345,
	477, 1345,
	479, 1345,
	481, 1345,
	482, 1345,
	483, 1345,
	484, 1345,
	485, 1345,
	486, 1345,
	488, 1345,
	489, 1345,
	490, 1345,
	491, 1345,
	493, 1345,
	494, 1345,
	497, 1345,
	498, 1345,
	499, 1345,
	500, 1345,
	501, 1345,
	502, 1345,
	503, 1345,
	505, 1345,
	508, 1345,
	509, 1345,
	510, 1345,
	511, 1345,
	512, 1345,
	513, 1345,
	515, 1345,
	516, 1345,
	517, 1345,
	518, 1345,
	523, 1345,
	524, 1345,
	525, 1345,
	526, 1345,
	527, 1345,
	528, 1345,
	-2, 0,
	-1, 141,
	1, 1218,
	125, 1218,
	236, 1218,
	311, 1218,
	368, 1218,
	376, 1218,
	531, 1218,
	555, 1218,
	-2, 0,
	-1, 143,
	1, 1218,
	555, 1218,
	-2, 0,
	-1, 144,
	1, 1218,
	555, 1218,
	-2, 0,
	-1, 145,
	1, 1218,
	478, 1218,
	555, 1218,
	-2, 0,
	-1, 174,
	144, 1313,
	162, 1313,
	175, 1313,
	228, 1313,
	261, 1313,
	322, 1313,
	332, 1313,
	495, 1313,
	-2, 1288,
	-1, 212,
	4, 1352,
	5, 1352,
	6, 1352,
	7, 1352,
	8, 1352,
	9, 1352,
	10, 1352,
	21, 1352,
	22, 1352,
	23, 1352,
	24, 1352,
	25, 1352,
	26, 1352,
	28, 1352,
	29, 1352,
	35, 1352,
	36, 1352,
	40, 1352,
	41, 1352,
	42, 1352,
	43, 1352,
	44, 1352,
	45, 1352,
	46, 1352,
	47, 1352,
	48, 1352,
	49, 1352,
	51, 1352,
	52, 1352,
	53, 1352,
	54, 1352,
	56, 1352,
	57, 1352,
	58, 1352,
	59, 1352,
	60, 1352,
	61, 1352,
	62, 1352,
	63, 1352,
	64, 1352,
	65, 1352,
	66, 1352,
	67, 1352,
	68, 1352,
	69, 1352,
	71, 1352,
	72, 1352,
	73, 1352,
	75, 1352,
	77, 1352,
	78, 1352,
	79, 1352,
	80, 1352,
	81, 1352,
	82, 1352,
	83, 1352,
	86, 1352,
	87, 1352,
	88, 1352,
	89, 1352,
	91, 1352,
	93, 1352,
	94, 1352,
	95, 1352,
	96, 1352,
	97, 1352,
	98, 1352,
	100, 1352,
	101, 1352,
	102, 1352,
	103, 1352,
	104, 1352,
	105, 1352,
	106, 1352,
	107, 1352,
	108, 1352,
	109, 1352,
	110, 1352,
	111, 1352,
	112, 1352,
	113, 1352,
	114, 1352,
	115, 1352,
	116, 1352,
	117, 1352,
	118, 1352,
	119, 1352,
	120, 1352,
	121, 1352,
	122, 1352,
	123, 1352,
	124, 1352,
	126, 1352,
	127, 1352,
	129, 1352,
	130, 1352,
	131, 1352,
	134, 1352,
	135, 1352,
	136, 1352,
	138, 1352,
	139, 1352,
	141, 1352,
	142, 1352,
	143, 1352,
	145, 1352,
	146, 1352,
	147, 1352,
	148, 1352,
	149, 1352,
	150, 1352,
	151, 1352,
	152, 1352,
	153, 1352,
	154, 1352,
	155, 1352,
	156, 1352,
	157, 1352,
	158, 1352,
	159, 1352,
	160, 1352,
	161, 1352,
	167, 1352,
	168, 1352,
	169, 1352,
	170, 1352,
	174, 1352,
	176, 1352,
	179, 1352,
	180, 1352,
	181, 1352,
	182, 1352,
	183, 1352,
	184, 1352,
	185, 1352,
	186, 1352,
	187, 1352,
	188, 1352,
	189, 1352,
	190, 1352,
	191, 1352,
	193, 1352,
	194, 1352,
	196, 1352,
	197, 1352,
	199, 1352,
	200, 1352,
	201, 1352,
	202, 1352,
	203, 1352,
	204, 1352,
	205, 1352,
	206, 1352,
	207, 1352,
	208, 1352,
	209, 1352,
	210, 1352,
	212, 1352,
	213, 1352,
	214, 1352,
	215, 1352,
	219, 1352,
	220, 1352,
	221, 1352,
	222, 1352,
	224, 1352,
	225, 1352,
	226, 1352,
	227, 1352,
	229, 1352,
	231, 1352,
	232, 1352,
	233, 1352,
	234, 1352,
	235, 1352,
	236, 1352,
	237, 1352,
	238, 1352,
	239, 1352,
	240, 1352,
	244, 1352,
	245, 1352,
	246, 1352,
	247, 1352,
	248, 1352,
	249, 1352,
	251, 1352,
	252, 1352,
	253, 1352,
	255, 1352,
	256, 1352,
	257, 1352,
	258, 1352,
	259, 1352,
	260, 1352,
	262, 1352,
	266, 1352,
	267, 1352,
	268, 1352,
	269, 1352,
	270, 1352,
	271, 1352,
	272, 1352,
	273, 1352,
	275, 1352,
	276, 1352,
	277, 1352,
	278, 1352,
	279, 1352,
	280, 1352,
	281, 1352,
	282, 1352,
	283, 1352,
	284, 1352,
	285, 1352,
	286, 1352,
	287, 1352,
	288, 1352,
	289, 1352,
	290, 1352,
	291, 1352,
	292, 1352,
	293, 1352,
	294, 1352,
	296, 1352,
	297, 1352,
	298, 1352,
	299, 1352,
	300, 1352,
	301, 1352,
	302, 1352,
	303, 1352,
	304, 1352,
	305, 1352,
	306, 1352,
	307, 1352,
	308, 1352,
	309, 1352,
	310, 1352,
	311, 1352,
	312, 1352,
	313, 1352,
	314, 1352,
	315, 1352,
	316, 1352,
	317, 1352,
	318, 1352,
	319, 1352,
	320, 1352,
	321, 1352,
	324, 1352,
	328, 1352,
	329, 1352,
	330, 1352,
	333, 1352,
	334, 1352,
	335, 1352,
	336, 1352,
	337, 1352,
	338, 1352,
	339, 1352,
	340, 1352,
	341, 1352,
	342, 1352,
	343, 1352,
	344, 1352,
	345, 1352,
	346, 1352,
	347, 1352,
	348, 1352,
	349, 1352,
	350, 1352,
	352, 1352,
	353, 1352,
	354, 1352,
	355, 1352,
	356, 1352,
	357, 1352,
	358, 1352,
	359, 1352,
	360, 1352,
	361, 1352,
	362, 1352,
	363, 1352,
	364, 1352,
	365, 1352,
	366, 1352,
	368, 1352,
	370, 1352,
	371, 1352,
	372, 1352,
	373, 1352,
	374, 1352,
	375, 1352,
	376, 1352,
	377, 1352,
	378, 1352,
	379, 1352,
	380, 1352,
	382, 1352,
	388, 1352,
	390, 1352,
	391, 1352,
	392, 1352,
	393, 1352,
	394, 1352,
	395, 1352,
	396, 1352,
	397, 1352,
	399, 1352,
	400, 1352,
	401, 1352,
	402, 1352,
	403, 1352,
	404, 1352,
	405, 1352,
	406, 1352,
	407, 1352,
	408, 1352,
	410, 1352,
	411, 1352,
	412, 1352,
	413, 1352,
	414, 1352,
	415, 1352,
	416, 1352,
	417, 1352,
	418, 1352,
	419, 1352,
	420, 1352,
	422, 1352,
	423, 1352,
	424, 1352,
	425, 1352,
	426, 1352,
	427, 1352,
	428, 1352,
	429, 1352,
	430, 1352,
	431, 1352,
	432, 1352,
	433, 1352,
	434, 1352,
	435, 1352,
	436, 1352,
	437, 1352,
	438, 1352,
	439, 1352,
	440, 1352,
	441, 1352,
	443, 1352,
	445, 1352,
	446, 1352,
	447, 1352,
	448, 1352,
	449, 1352,
	450, 1352,
	451, 1352,
	452, 1352,
	453, 1352,
	454, 1352,
	455, 1352,
	456, 1352,
	457, 1352,
	459, 1352,
	460, 1352,
	461, 1352,
	462, 1352,
	464, 1352,
	465, 1352,
	466, 1352,
	467, 1352,
	468, 1352,
	469, 1352,
	470, 1352,
	471, 1352,
	473, 1352,
	474, 1352,
	475, 1352,
	476, 1352,
	477, 1352,
	479, 1352,
	481, 1352,
	482, 1352,
	483, 1352,
	484, 1352,
	485, 1352,
	486, 1352,
	487, 1352,
	488, 1352,
	489, 1352,
	490, 1352,
	491, 1352,
	493, 1352,
	494, 1352,
	496, 1352,
	497, 1352,
	498, 1352,
	499, 1352,
	500, 1352,
	501, 1352,
	502, 1352,
	503, 1352,
	504, 1352,
	505, 1352,
	508, 1352,
	509, 1352,
	510, 1352,
	511, 1352,
	512, 1352,
	513, 1352,
	515, 1352,
	516, 1352,
	517, 1352,
	518, 1352,
	523, 1352,
	524, 1352,
	525, 1352,
	526, 1352,
	527, 1352,
	528, 1352,
	529, 1352,
	536, 1352,
	543, 1352,
	544, 1352,
	545, 1352,
	552, 1352,
	556, 1352,
	-2, 0,
	-1, 662,
	178, 2086,
	478, 2086,
	535, 2086,
	554, 2086,
	-2, 0,
	-1, 663,
	178, 2184,
	478, 2184,
	535, 2184,
	554, 2184,
	-2, 0,
	-1, 664,
	178, 2074,
	478, 2074,
	535, 2074,
	554, 2074,
	-2, 0,
	-1, 666,
	178, 2304,
	478, 2304,
	535, 2304,
	554, 2304,
	-2, 0,
	-1, 668,
	178, 2338,
	478, 2338,
	535, 2338,
	554, 2338,
	-2, 0,
	-1, 675,
	178, 2208,
	478, 2208,
	535, 2208,
	554, 2208,
	-2, 619,
	-1, 706,
	554, 2025,
	557, 2025,
	-2, 866,
	-1, 707,
	554, 2027,
	557, 2027,
	-2, 867,
	-1, 708,
	554, 2026,
	557, 2026,
	-2, 868,
	-1, 709,
	557, 1959,
	-2, 869,
	-1, 731,
	175, 216,
	-2, 0,
	-1, 752,
	42, 2029,
	-2, 0,
	-1, 753,
	515, 1122,
	-2, 930,
	-1, 793,
	4, 1143,
	21, 1143,
	22, 1143,
	23, 1143,
	24, 1143,
	25, 1143,
	26, 1143,
	28, 1143,
	29, 1143,
	35, 1143,
	40, 1143,
	41, 1143,
	43, 1143,
	44, 1143,
	45, 1143,
	46, 1143,
	47, 1143,
	48, 1143,
	49, 1143,
	51, 1143,
	52, 1143,
	53, 1143,
	54, 1143,
	56, 1143,
	57, 1143,
	58, 1143,
	59, 1143,
	60, 1143,
	61, 1143,
	62, 1143,
	66, 1143,
	67, 1143,
	68, 1143,
	69, 1143,
	71, 1143,
	72, 1143,
	73, 1143,
	77, 1143,
	78, 1143,
	79, 1143,
	80, 1143,
	81, 1143,
	82, 1143,
	83, 1143,
	86, 1143,
	87, 1143,
	88, 1143,
	89, 1143,
	91, 1143,
	93, 1143,
	94, 1143,
	95, 1143,
	96, 1143,
	97, 1143,
	98, 1143,
	100, 1143,
	101, 1143,
	102, 1143,
	104, 1143,
	105, 1143,
	113, 1143,
	114, 1143,
	115, 1143,
	116, 1143,
	118, 1143,
	119, 1143,
	120, 1143,
	122, 1143,
	123, 1143,
	124, 1143,
	126, 1143,
	127, 1143,
	129, 1143,
	130, 1143,
	131, 1143,
	134, 1143,
	135, 1143,
	136, 1143,
	138, 1143,
	139, 1143,
	141, 1143,
	142, 1143,
	143, 1143,
	145, 1143,
	146, 1143,
	147, 1143,
	148, 1143,
	149, 1143,
	150, 1143,
	151, 1143,
	152, 1143,
	153, 1143,
	154, 1143,
	155, 1143,
	156, 1143,
	157, 1143,
	158, 1143,
	159, 1143,
	161, 1143,
	167, 1143,
	168, 1143,
	169, 1143,
	170, 1143,
	174, 1143,
	176, 1143,
	180, 1143,
	181, 1143,
	182, 1143,
	183, 1143,
	184, 1143,
	185, 1143,
	186, 1143,
	187, 1143,
	188, 1143,
	189, 1143,
	190, 1143,
	191, 1143,
	193, 1143,
	194, 1143,
	196, 1143,
	197, 1143,
	199, 1143,
	200, 1143,
	201, 1143,
	202, 1143,
	203, 1143,
	204, 1143,
	205, 1143,
	206, 1143,
	207, 1143,
	209, 1143,
	210, 1143,
	212, 1143,
	213, 1143,
	214, 1143,
	215, 1143,
	219, 1143,
	220, 1143,
	221, 1143,
	222, 1143,
	225, 1143,
	226, 1143,
	227, 1143,
	229, 1143,
	231, 1143,
	232, 1143,
	234, 1143,
	236, 1143,
	237, 1143,
	238, 1143,
	240, 1143,
	244, 1143,
	245, 1143,
	246, 1143,
	247, 1143,
	248, 1143,
	249, 1143,
	251, 1143,
	252, 1143,
	253, 1143,
	255, 1143,
	256, 1143,
	258, 1143,
	259, 1143,
	262, 1143,
	266, 1143,
	267, 1143,
	270, 1143,
	271, 1143,
	272, 1143,
	273, 1143,
	275, 1143,
	276, 1143,
	277, 1143,
	278, 1143,
	279, 1143,
	280, 1143,
	281, 1143,
	282, 1143,
	283, 1143,
	284, 1143,
	285, 1143,
	286, 1143,
	287, 1143,
	288, 1143,
	289, 1143,
	290, 1143,
	291, 1143,
	292, 1143,
	293, 1143,
	294, 1143,
	296, 1143,
	298, 1143,
	299, 1143,
	300, 1143,
	301, 1143,
	302, 1143,
	303, 1143,
	304, 1143,
	305, 1143,
	306, 1143,
	307, 1143,
	308, 1143,
	310, 1143,
	312, 1143,
	314, 1143,
	315, 1143,
	317, 1143,
	318, 1143,
	319, 1143,
	320, 1143,
	321, 1143,
	324, 1143,
	328, 1143,
	329, 1143,
	330, 1143,
	333, 1143,
	334, 1143,
	335, 1143,
	337, 1143,
	339, 1143,
	340, 1143,
	341, 1143,
	342, 1143,
	343, 1143,
	344, 1143,
	345, 1143,
	346, 1143,
	347, 1143,
	348, 1143,
	349, 1143,
	350, 1143,
	352, 1143,
	353, 1143,
	354, 1143,
	355, 1143,
	356, 1143,
	357, 1143,
	358, 1143,
	359, 1143,
	360, 1143,
	361, 1143,
	362, 1143,
	363, 1143,
	364, 1143,
	365, 1143,
	366, 1143,
	368, 1143,
	370, 1143,
	371, 1143,
	372, 1143,
	373, 1143,
	374, 1143,
	375, 1143,
	376, 1143,
	377, 1143,
	378, 1143,
	379, 1143,
	380, 1143,
	382, 1143,
	388, 1143,
	390, 1143,
	391, 1143,
	392, 1143,
	393, 1143,
	394, 1143,
	395, 1143,
	396, 1143,
	397, 1143,
	399, 1143,
	400, 1143,
	401, 1143,
	403, 1143,
	404, 1143,
	405, 1143,
	406, 1143,
	407, 1143,
	408, 1143,
	410, 1143,
	411, 1143,
	412, 1143,
	413, 1143,
	414, 1143,
	415, 1143,
	416, 1143,
	417, 1143,
	418, 1143,
	419, 1143,
	420, 1143,
	422, 1143,
	423, 1143,
	424, 1143,
	425, 1143,
	426, 1143,
	427, 1143,
	429, 1143,
	430, 1143,
	431, 1143,
	432, 1143,
	433, 1143,
	435, 1143,
	436, 1143,
	437, 1143,
	438, 1143,
	439, 1143,
	440, 1143,
	441, 1143,
	443, 1143,
	445, 1143,
	446, 1143,
	447, 1143,
	448, 1143,
	449, 1143,
	450, 1143,
	451, 1143,
	452, 1143,
	453, 1143,
	454, 1143,
	455, 1143,
	456, 1143,
	457, 1143,
	459, 1143,
	460, 1143,
	462, 1143,
	464, 1143,
	465, 1143,
	466, 1143,
	467, 1143,
	468, 1143,
	469, 1143,
	470, 1143,
	471, 1143,
	473, 1143,
	474, 1143,
	475, 1143,
	476, 1143,
	477, 1143,
	479, 1143,
	481, 1143,
	482, 1143,
	483, 1143,
	484, 1143,
	485, 1143,
	486, 1143,
	488, 1143,
	489, 1143,
	490, 1143,
	491, 1143,
	493, 1143,
	494, 1143,
	497, 1143,
	498, 1143,
	499, 1143,
	500, 1143,
	501, 1143,
	502, 1143,
	503, 1143,
	505, 1143,
	508, 1143,
	509, 1143,
	510, 1143,
	511, 1143,
	512, 1143,
	513, 1143,
	515, 1143,
	516, 1143,
	517, 1143,
	518, 1143,
	523, 1143,
	524, 1143,
	525, 1143,
	526, 1143,
	527, 1143,
	528, 1143,
	-2, 0,
	-1, 874,
	372, 778,
	427, 778,
	483, 778,
	-2, 0,
	-1, 875,
	372, 777,
	427, 777,
	483, 777,
	-2, 719,
	-1, 879,
	1, 822,
	551, 822,
	553, 822,
	555, 822,
	-2, 0,
	-1, 880,
	1, 754,
	551, 754,
	553, 754,
	555, 754,
	-2, 0,
	-1, 881,
	1, 756,
	551, 756,
	553, 756,
	555, 756,
	-2, 0,
	-1, 882,
	1, 865,
	175, 865,
	551, 865,
	553, 865,
	555, 865,
	-2, 0,
	-1, 890,
	1, 781,
	551, 781,
	553, 781,
	555, 781,
	-2, 0,
	-1, 896,
	1, 822,
	551, 822,
	553, 822,
	555, 822,
	-2, 0,
	-1, 897,
	1, 824,
	551, 824,
	553, 824,
	555, 824,
	-2, 0,
	-1, 898,
	1, 827,
	551, 827,
	553, 827,
	555, 827,
	-2, 0,
	-1, 904,
	1, 844,
	551, 844,
	553, 844,
	555, 844,
	-2, 0,
	-1, 905,
	1, 846,
	551, 846,
	553, 846,
	555, 846,
	-2, 0,
	-1, 954,
	162, 1354,
	175, 1354,
	261, 1354,
	322, 1354,
	-2, 1292,
	-1, 969,
	162, 1353,
	175, 1353,
	261, 1353,
	322, 1353,
	-2, 1289,
	-1, 995,
	554, 2024,
	-2, 627,
	-1, 1023,
	5, 2016,
	552, 2014,
	-2, 2005,
	-1, 1031,
	5, 2037,
	552, 2034,
	-2, 2025,
	-1, 1032,
	5, 2038,
	552, 2035,
	-2, 2026,
	-1, 1040,
	554, 2022,
	-2, 2004,
	-1, 1041,
	552, 2420,
	-2, 2023,
	-1, 1064,
	552, 2419,
	-2, 2039,
	-1, 1065,
	5, 1543,
	-2, 2390,
	-1, 1066,
	5, 1544,
	-2, 2391,
	-1, 1067,
	5, 1545,
	-2, 2405,
	-1, 1068,
	5, 1546,
	-2, 2369,
	-1, 1069,
	5, 1547,
	-2, 2403,
	-1, 1070,
	5, 1555,
	-2, 2382,
	-1, 1071,
	5, 1542,
	-2, 2378,
	-1, 1072,
	5, 1542,
	-2, 2377,
	-1, 1073,
	5, 1542,
	-2, 2396,
	-1, 1074,
	5, 1553,
	-2, 2371,
	-1, 1075,
	5, 1558,
	-2, 2370,
	-1, 1076,
	5, 1560,
	-2, 2415,
	-1, 1079,
	5, 1582,
	-2, 2408,
	-1, 1080,
	5, 1574,
	-2, 2409,
	-1, 1081,
	5, 1582,
	-2, 2410,
	-1, 1082,
	5, 1578,
	-2, 2411,
	-1, 1083,
	5, 1528,
	-2, 2383,
	-1, 1084,
	5, 1529,
	-2, 2384,
	-1, 1085,
	5, 1530,
	-2, 2372,
	-1, 1113,
	5, 1565,
	-2, 2416,
	-1, 1114,
	5, 1566,
	-2, 2406,
	-1, 1115,
	5, 1567,
	516, 1567,
	-2, 2373,
	-1, 1116,
	5, 1568,
	516, 1568,
	-2, 2374,
	-1, 1153,
	552, 2034,
	-2, 2025,
	-1, 1154,
	552, 2035,
	-2, 2026,
	-1, 1184,
	178, 2338,
	478, 2338,
	535, 2338,
	554, 2338,
	-2, 0,
	-1, 1187,
	1, 605,
	555, 605,
	-2, 1226,
	-1, 1315,
	390, 2000,
	429, 2000,
	545, 2000,
	-2, 1997,
	-1, 1327,
	556, 2000,
	-2, 2001,
	-1, 1334,
	1, 1119,
	551, 1119,
	553, 1119,
	555, 1119,
	-2, 1341,
	-1, 1388,
	378, 929,
	515, 929,
	-2, 339,
	-1, 1407,
	42, 2028,
	-2, 1998,
	-1, 1412,
	1, 1119,
	551, 1119,
	553, 1119,
	555, 1119,
	-2, 1341,
	-1, 1419,
	4, 1143,
	21, 1143,
	22, 1143,
	23, 1143,
	24, 1143,
	25, 1143,
	26, 1143,
	28, 1143,
	29, 1143,
	35, 1143,
	40, 1143,
	41, 1143,
	43, 1143,
	44, 1143,
	45, 1143,
	46, 1143,
	47, 1143,
	48, 1143,
	49, 1143,
	51, 1143,
	52, 1143,
	53, 1143,
	54, 1143,
	56, 1143,
	57, 1143,
	58, 1143,
	59, 1143,
	60, 1143,
	61, 1143,
	62, 1143,
	66, 1143,
	67, 1143,
	68, 1143,
	69, 1143,
	71, 1143,
	72, 1143,
	73, 1143,
	77, 1143,
	78, 1143,
	79, 1143,
	80, 1143,
	81, 1143,
	82, 1143,
	83, 1143,
	86, 1143,
	87, 1143,
	88, 1143,
	89, 1143,
	91, 1143,
	93, 1143,
	94, 1143,
	95, 1143,
	96, 1143,
	97, 1143,
	98, 1143,
	100, 1143,
	101, 1143,
	102, 1143,
	104, 1143,
	105, 1143,
	113, 1143,
	114, 1143,
	115, 1143,
	116, 1143,
	118, 1143,
	119, 1143,
	120, 1143,
	122, 1143,
	123, 1143,
	124, 1143,
	126, 1143,
	127, 1143,
	129, 1143,
	130, 1143,
	131, 1143,
	134, 1143,
	135, 1143,
	136, 1143,
	138, 1143,
	139, 1143,
	141, 1143,
	142, 1143,
	143, 1143,
	145, 1143,
	146, 1143,
	147, 1143,
	148, 1143,
	149, 1143,
	150, 1143,
	151, 1143,
	152, 1143,
	153, 1143,
	154, 1143,
	155, 1143,
	156, 1143,
	157, 1143,
	158, 1143,
	159, 1143,
	167, 1143,
	168, 1143,
	169, 1143,
	170, 1143,
	174, 1143,
	176, 1143,
	180, 1143,
	181, 1143,
	182, 1143,
	183, 1143,
	184, 1143,
	185, 1143,
	186, 1143,
	187, 1143,
	188, 1143,
	189, 1143,
	190, 1143,
	191, 1143,
	193, 1143,
	194, 1143,
	196, 1143,
	197, 1143,
	199, 1143,
	200, 1143,
	201, 1143,
	202, 1143,
	203, 1143,
	204, 1143,
	205, 1143,
	206, 1143,
	207, 1143,
	209, 1143,
	210, 1143,
	212, 1143,
	213, 1143,
	214, 1143,
	215, 1143,
	220, 1143,
	221, 1143,
	222, 1143,
	225, 1143,
	226, 1143,
	227, 1143,
	229, 1143,
	231, 1143,
	232, 1143,
	234, 1143,
	236, 1143,
	237, 1143,
	238, 1143,
	240, 1143,
	244, 1143,
	245, 1143,
	246, 1143,
	247, 1143,
	248, 1143,
	249, 1143,
	251, 1143,
	252, 1143,
	253, 1143,
	255, 1143,
	256, 1143,
	258, 1143,
	259, 1143,
	262, 1143,
	266, 1143,
	267, 1143,
	270, 1143,
	271, 1143,
	272, 1143,
	273, 1143,
	275, 1143,
	276, 1143,
	277, 1143,
	278, 1143,
	279, 1143,
	280, 1143,
	281, 1143,
	282, 1143,
	283, 1143,
	284, 1143,
	285, 1143,
	286, 1143,
	287, 1143,
	288, 1143,
	289, 1143,
	290, 1143,
	291, 1143,
	292, 1143,
	293, 1143,
	294, 1143,
	296, 1143,
	298, 1143,
	299, 1143,
	300, 1143,
	301, 1143,
	302, 1143,
	303, 1143,
	304, 1143,
	305, 1143,
	306, 1143,
	307, 1143,
	308, 1143,
	310, 1143,
	314, 1143,
	315, 1143,
	317, 1143,
	318, 1143,
	319, 1143,
	320, 1143,
	321, 1143,
	324, 1143,
	326, 1143,
	328, 1143,
	329, 1143,
	330, 1143,
	333, 1143,
	334, 1143,
	335, 1143,
	337, 1143,
	339, 1143,
	340, 1143,
	341, 1143,
	342, 1143,
	343, 1143,
	344, 1143,
	345, 1143,
	346, 1143,
	347, 1143,
	348, 1143,
	349, 1143,
	350, 1143,
	352, 1143,
	353, 1143,
	354, 1143,
	355, 1143,
	356, 1143,
	357, 1143,
	358, 1143,
	359, 1143,
	360, 1143,
	361, 1143,
	362, 1143,
	363, 1143,
	364, 1143,
	365, 1143,
	366, 1143,
	368, 1143,
	370, 1143,
	371, 1143,
	372, 1143,
	373, 1143,
	374, 1143,
	375, 1143,
	376, 1143,
	377, 1143,
	378, 1143,
	379, 1143,
	380, 1143,
	382, 1143,
	388, 1143,
	390, 1143,
	391, 1143,
	392, 1143,
	393, 1143,
	394, 1143,
	395, 1143,
	396, 1143,
	397, 1143,
	399, 1143,
	400, 1143,
	401, 1143,
	403, 1143,
	404, 1143,
	405, 1143,
	406, 1143,
	407, 1143,
	408, 1143,
	410, 1143,
	411, 1143,
	412, 1143,
	413, 1143,
	414, 1143,
	415, 1143,
	416, 1143,
	417, 1143,
	418, 1143,
	419, 1143,
	420, 1143,
	422, 1143,
	423, 1143,
	424, 1143,
	425, 1143,
	426, 1143,
	427, 1143,
	429, 1143,
	430, 1143,
	431, 1143,
	432, 1143,
	433, 1143,
	435, 1143,
	436, 1143,
	437, 1143,
	438, 1143,
	439, 1143,
	440, 1143,
	441, 1143,
	443, 1143,
	445, 1143,
	446, 1143,
	447, 1143,
	448, 1143,
	449, 1143,
	450, 1143,
	451, 1143,
	452, 1143,
	453, 1143,
	454, 1143,
	455, 1143,
	456, 1143,
	457, 1143,
	459, 1143,
	460, 1143,
	462, 1143,
	464, 1143,
	465, 1143,
	466, 1143,
	467, 1143,
	468, 1143,
	469, 1143,
	470, 1143,
	471, 1143,
	473, 1143,
	474, 1143,
	475, 1143,
	476, 1143,
	477, 1143,
	479, 1143,
	481, 1143,
	482, 1143,
	483, 1143,
	484, 1143,
	485, 1143,
	486, 1143,
	488, 1143,
	489, 1143,
	490, 1143,
	491, 1143,
	493, 1143,
	494, 1143,
	497, 1143,
	498, 1143,
	499, 1143,
	500, 1143,
	501, 1143,
	502, 1143,
	503, 1143,
	505, 1143,
	508, 1143,
	509, 1143,
	510, 1143,
	511, 1143,
	512, 1143,
	513, 1143,
	515, 1143,
	516, 1143,
	517, 1143,
	518, 1143,
	523, 1143,
	524, 1143,
	525, 1143,
	526, 1143,
	527, 1143,
	528, 1143,
	-2, 0,
	-1, 1492,
	1, 478,
	551, 478,
	553, 478,
	555, 478,
	-2, 1312,
	-1, 1495,
	4, 2414,
	11, 2414,
	12, 2414,
	14, 2414,
	15, 2414,
	16, 2414,
	17, 2414,
	18, 2414,
	19, 2414,
	21, 2414,
	22, 2414,
	23, 2414,
	24, 2414,
	25, 2414,
	26, 2414,
	28, 2414,
	29, 2414,
	32, 2414,
	33, 2414,
	35, 2414,
	37, 2414,
	40, 2414,
	41, 2414,
	43, 2414,
	44, 2414,
	45, 2414,
	46, 2414,
	47, 2414,
	48, 2414,
	49, 2414,
	51, 2414,
	52, 2414,
	53, 2414,
	54, 2414,
	56, 2414,
	57, 2414,
	58, 2414,
	59, 2414,
	60, 2414,
	61, 2414,
	62, 2414,
	66, 2414,
	67, 2414,
	68, 2414,
	69, 2414,
	71, 2414,
	72, 2414,
	73, 2414,
	74, 2414,
	77, 2414,
	78, 2414,
	79, 2414,
	80, 2414,
	81, 2414,
	82, 2414,
	83, 2414,
	84, 2414,
	86, 2414,
	87, 2414,
	88, 2414,
	89, 2414,
	91, 2414,
	92, 2414,
	93, 2414,
	94, 2414,
	95, 2414,
	96, 2414,
	97, 2414,
	98, 2414,
	100, 2414,
	101, 2414,
	102, 2414,
	103, 2414,
	104, 2414,
	105, 2414,
	113, 2414,
	114, 2414,
	115, 2414,
	116, 2414,
	118, 2414,
	119, 2414,
	120, 2414,
	122, 2414,
	123, 2414,
	124, 2414,
	126, 2414,
	127, 2414,
	129, 2414,
	130, 2414,
	131, 2414,
	134, 2414,
	135, 2414,
	136, 2414,
	138, 2414,
	139, 2414,
	141, 2414,
	142, 2414,
	143, 2414,
	145, 2414,
	146, 2414,
	147, 2414,
	148, 2414,
	149, 2414,
	150, 2414,
	151, 2414,
	152, 2414,
	153, 2414,
	154, 2414,
	155, 2414,
	156, 2414,
	157, 2414,
	158, 2414,
	159, 2414,
	163, 2414,
	164, 2414,
	165, 2414,
	166, 2414,
	167, 2414,
	168, 2414,
	169, 2414,
	170, 2414,
	173, 2414,
	174, 2414,
	176, 2414,
	179, 2414,
	180, 2414,
	181, 2414,
	182, 2414,
	183, 2414,
	184, 2414,
	185, 2414,
	186, 2414,
	187, 2414,
	188, 2414,
	189, 2414,
	190, 2414,
	191, 2414,
	193, 2414,
	194, 2414,
	196, 2414,
	197, 2414,
	199, 2414,
	200, 2414,
	201, 2414,
	202, 2414,
	203, 2414,
	204, 2414,
	205, 2414,
	206, 2414,
	207, 2414,
	208, 2414,
	209, 2414,
	210, 2414,
	211, 2414,
	212, 2414,
	213, 2414,
	214, 2414,
	215, 2414,
	217, 2414,
	218, 2414,
	220, 2414,
	221, 2414,
	222, 2414,
	224, 2414,
	225, 2414,
	226, 2414,
	227, 2414,
	229, 2414,
	231, 2414,
	232, 2414,
	233, 2414,
	234, 2414,
	235, 2414,
	236, 2414,
	237, 2414,
	238, 2414,
	239, 2414,
	240, 2414,
	242, 2414,
	243, 2414,
	244, 2414,
	245, 2414,
	246, 2414,
	247, 2414,
	248, 2414,
	249, 2414,
	251, 2414,
	252, 2414,
	253, 2414,
	255, 2414,
	256, 2414,
	257, 2414,
	258, 2414,
	259, 2414,
	260, 2414,
	262, 2414,
	266, 2414,
	267, 2414,
	270, 2414,
	271, 2414,
	272, 2414,
	273, 2414,
	274, 2414,
	275, 2414,
	276, 2414,
	277, 2414,
	278, 2414,
	279, 2414,
	280, 2414,
	281, 2414,
	282, 2414,
	283, 2414,
	284, 2414,
	285, 2414,
	286, 2414,
	287, 2414,
	288, 2414,
	289, 2414,
	290, 2414,
	291, 2414,
	292, 2414,
	293, 2414,
	294, 2414,
	296, 2414,
	297, 2414,
	298, 2414,
	299, 2414,
	300, 2414,
	301, 2414,
	302, 2414,
	303, 2414,
	304, 2414,
	305, 2414,
	306, 2414,
	307, 2414,
	308, 2414,
	310, 2414,
	313, 2414,
	314, 2414,
	315, 2414,
	317, 2414,
	318, 2414,
	319, 2414,
	320, 2414,
	321, 2414,
	324, 2414,
	328, 2414,
	329, 2414,
	330, 2414,
	331, 2414,
	333, 2414,
	334, 2414,
	335, 2414,
	337, 2414,
	339, 2414,
	340, 2414,
	341, 2414,
	342, 2414,
	343, 2414,
	344, 2414,
	345, 2414,
	346, 2414,
	347, 2414,
	348, 2414,
	349, 2414,
	350, 2414,
	352, 2414,
	353, 2414,
	354, 2414,
	355, 2414,
	356, 2414,
	357, 2414,
	358, 2414,
	359, 2414,
	360, 2414,
	361, 2414,
	362, 2414,
	363, 2414,
	364, 2414,
	365, 2414,
	366, 2414,
	368, 2414,
	370, 2414,
	371, 2414,
	372, 2414,
	373, 2414,
	374, 2414,
	375, 2414,
	376, 2414,
	377, 2414,
	378, 2414,
	379, 2414,
	380, 2414,
	382, 2414,
	388, 2414,
	389, 2414,
	390, 2414,
	391, 2414,
	392, 2414,
	393, 2414,
	394, 2414,
	395, 2414,
	396, 2414,
	397, 2414,
	399, 2414,
	400, 2414,
	401, 2414,
	402, 2414,
	403, 2414,
	404, 2414,
	405, 2414,
	406, 2414,
	407, 2414,
	408, 2414,
	409, 2414,
	410, 2414,
	411, 2414,
	412, 2414,
	413, 2414,
	414, 2414,
	415, 2414,
	416, 2414,
	417, 2414,
	418, 2414,
	419, 2414,
	420, 2414,
	422, 2414,
	423, 2414,
	424, 2414,
	425, 2414,
	426, 2414,
	427, 2414,
	429, 2414,
	430, 2414,
	431, 2414,
	432, 2414,
	433, 2414,
	434, 2414,
	435, 2414,
	436, 2414,
	437, 2414,
	438, 2414,
	439, 2414,
	440, 2414,
	441, 2414,
	443, 2414,
	445, 2414,
	446, 2414,
	447, 2414,
	448, 2414,
	449, 2414,
	450, 2414,
	451, 2414,
	452, 2414,
	453, 2414,
	454, 2414,
	455, 2414,
	456, 2414,
	457, 2414,
	459, 2414,
	460, 2414,
	462, 2414,
	464, 2414,
	465, 2414,
	466, 2414,
	467, 2414,
	468, 2414,
	469, 2414,
	470, 2414,
	471, 2414,
	473, 2414,
	474, 2414,
	475, 2414,
	476, 2414,
	477, 2414,
	479, 2414,
	481, 2414,
	482, 2414,
	483, 2414,
	484, 2414,
	485, 2414,
	486, 2414,
	488, 2414,
	489, 2414,
	490, 2414,
	491, 2414,
	493, 2414,
	494, 2414,
	497, 2414,
	498, 2414,
	499, 2414,
	500, 2414,
	501, 2414,
	502, 2414,
	503, 2414,
	505, 2414,
	508, 2414,
	509, 2414,
	510, 2414,
	511, 2414,
	512, 2414,
	513, 2414,
	515, 2414,
	516, 2414,
	517, 2414,
	518, 2414,
	523, 2414,
	524, 2414,
	525, 2414,
	526, 2414,
	527, 2414,
	528, 2414,
	529, 2414,
	530, 2414,
	533, 2414,
	534, 2414,
	535, 2414,
	536, 2414,
	537, 2414,
	538, 2414,
	540, 2414,
	541, 2414,
	542, 2414,
	543, 2414,
	544, 2414,
	545, 2414,
	546, 2414,
	547, 2414,
	548, 2414,
	550, 2414,
	553, 2414,
	554, 2414,
	556, 2414,
	557, 2414,
	-2, 0,
	-1, 1500,
	178, 2304,
	478, 2304,
	535, 2304,
	554, 2304,
	-2, 0,
	-1, 1549,
	372, 778,
	427, 778,
	483, 778,
	-2, 0,
	-1, 1575,
	1, 773,
	551, 773,
	553, 773,
	555, 773,
	-2, 0,
	-1, 1576,
	1, 809,
	551, 809,
	553, 809,
	555, 809,
	-2, 0,
	-1, 1577,
	1, 817,
	551, 817,
	553, 817,
	555, 817,
	-2, 0,
	-1, 1578,
	1, 780,
	551, 780,
	553, 780,
	555, 780,
	-2, 0,
	-1, 1580,
	1, 784,
	551, 784,
	553, 784,
	555, 784,
	-2, 0,
	-1, 1586,
	1, 791,
	551, 791,
	553, 791,
	555, 791,
	-2, 0,
	-1, 1614,
	1, 2360,
	551, 2360,
	553, 2360,
	554, 2360,
	555, 2360,
	-2, 842,
	-1, 1615,
	1, 2301,
	551, 2301,
	553, 2301,
	554, 2301,
	555, 2301,
	-2, 843,
	-1, 1630,
	1, 1221,
	555, 1221,
	-2, 1226,
	-1, 1633,
	162, 1353,
	175, 1353,
	261, 1353,
	322, 1353,
	-2, 1293,
	-1, 1727,
	144, 1314,
	162, 1314,
	175, 1314,
	228, 1314,
	261, 1314,
	322, 1314,
	332, 1314,
	495, 1314,
	-2, 1743,
	-1, 1787,
	553, 1893,
	-2, 0,
	-1, 1822,
	144, 1314,
	162, 1314,
	175, 1314,
	228, 1314,
	261, 1314,
	322, 1314,
	332, 1314,
	495, 1314,
	-2, 1434,
	-1, 1871,
	552, 1570,
	-2, 1558,
	-1, 1908,
	1, 607,
	555, 607,
	-2, 1226,
	-1, 2020,
	211, 217,
	-2, 2033,
	-1, 2021,
	211, 218,
	-2, 260,
	-1, 2149,
	1, 775,
	551, 775,
	553, 775,
	555, 775,
	-2, 0,
	-1, 2150,
	1, 811,
	551, 811,
	553, 811,
	555, 811,
	-2, 0,
	-1, 2151,
	1, 819,
	551, 819,
	553, 819,
	555, 819,
	-2, 0,
	-1, 2182,
	1, 793,
	551, 793,
	553, 793,
	555, 793,
	-2, 0,
	-1, 2228,
	407, 1380,
	408, 1380,
	-2, 1603,
	-1, 2259,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1623,
	-1, 2260,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1624,
	-1, 2261,
	92, 0,
	242, 0,
	243, 0,
	537, 0,
	538, 0,
	-2, 1625,
	-1, 2262,
	92, 0,
	242, 0,
	243, 0,
	537, 0,
	538, 0,
	-2, 1626,
	-1, 2263,
	92, 0,
	242, 0,
	243, 0,
	537, 0,
	538, 0,
	-2, 1627,
	-1, 2264,
	92, 0,
	242, 0,
	243, 0,
	537, 0,
	538, 0,
	-2, 1628,
	-1, 2265,
	92, 0,
	242, 0,
	243, 0,
	537, 0,
	538, 0,
	-2, 1629,
	-1, 2266,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1630,
	-1, 2278,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1642,
	-1, 2279,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1643,
	-1, 2280,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1644,
	-1, 2283,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1649,
	-1, 2289,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1653,
	-1, 2291,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1661,
	-1, 2292,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1662,
	-1, 2293,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1663,
	-1, 2294,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1664,
	-1, 2430,
	5, 2037,
	178, 1904,
	552, 2034,
	-2, 2025,
	-1, 2431,
	178, 1905,
	-2, 2365,
	-1, 2432,
	178, 1906,
	-2, 2207,
	-1, 2433,
	178, 1907,
	-2, 2102,
	-1, 2434,
	178, 1908,
	-2, 2152,
	-1, 2435,
	178, 1909,
	-2, 2193,
	-1, 2436,
	178, 1910,
	-2, 2299,
	-1, 2437,
	178, 1911,
	-2, 1726,
	-1, 2506,
	1, 1435,
	2, 1435,
	103, 1435,
	144, 1435,
	162, 1435,
	175, 1435,
	179, 1435,
	195, 1435,
	198, 1435,
	224, 1435,
	228, 1435,
	239, 1435,
	257, 1435,
	261, 1435,
	297, 1435,
	322, 1435,
	326, 1435,
	332, 1435,
	398, 1435,
	402, 1435,
	495, 1435,
	506, 1435,
	520, 1435,
	521, 1435,
	522, 1435,
	531, 1435,
	551, 1435,
	553, 1435,
	555, 1435,
	557, 1435,
	-2, 1434,
	-1, 2519,
	552, 2006,
	-2, 2020,
	-1, 2521,
	1, 276,
	-2, 1341,
	-1, 2546,
	552, 1569,
	-2, 1559,
	-1, 2681,
	1, 1119,
	551, 1119,
	553, 1119,
	555, 1119,
	-2, 1341,
	-1, 2858,
	327, 1383,
	-2, 2404,
	-1, 2859,
	327, 1384,
	-2, 2285,
	-1, 2863,
	407, 1970,
	408, 1970,
	-2, 1724,
	-1, 2864,
	407, 1974,
	408, 1974,
	-2, 1725,
	-1, 2865,
	407, 1971,
	408, 1971,
	-2, 1724,
	-1, 2866,
	407, 1975,
	408, 1975,
	-2, 1725,
	-1, 2879,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1651,
	-1, 2880,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1655,
	-1, 2886,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1657,
	-1, 3114,
	1, 604,
	551, 604,
	553, 604,
	555, 604,
	-2, 1226,
	-1, 3246,
	1, 1119,
	551, 1119,
	553, 1119,
	555, 1119,
	-2, 1341,
	-1, 3354,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1659,
	-1, 3361,
	233, 0,
	235, 0,
	313, 0,
	-2, 1678,
	-1, 3428,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1707,
	-1, 3429,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1708,
	-1, 3430,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1709,
	-1, 3434,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1713,
	-1, 3435,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1714,
	-1, 3436,
	14, 0,
	15, 0,
	16, 0,
	533, 0,
	534, 0,
	535, 0,
	-2, 1715,
	-1, 3482,
	552, 2007,
	-2, 2021,
	-1, 3620,
	554, 2521,
	-2, 1271,
	-1, 3678,
	233, 0,
	235, 0,
	313, 0,
	-2, 1679,
	-1, 3681,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1682,
	-1, 3682,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1684,
	-1, 3894,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1683,
	-1, 3895,
	17, 0,
	18, 0,
	19, 0,
	48, 0,
	208, 0,
	211, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 1685,
	-1, 3906,
	233, 0,
	-2, 1716,
	-1, 4056,
	233, 0,
	-2, 1717,
	-1, 4203,
	48, 0,
	208, 0,
	260, 0,
	434, 0,
	529, 0,
	536, 0,
	-2, 2368,
}

const sqlPrivate = 57344

const sqlLast = 112565

var sqlAct = [...]int{

	246, 4078, 2746, 3231, 2776, 3037, 4099, 3938, 3984, 4213,
	4312, 2017, 4202, 2582, 3818, 3230, 4178, 3941, 4159, 4144,
	4214, 4162, 4215, 3514, 3393, 4261, 3661, 4060, 3926, 3851,
	3991, 3846, 979, 3800, 2118, 37, 4201, 2238, 1354, 3883,
	1483, 3612, 1157, 2127, 4000, 1478, 3832, 3263, 3553, 1337,
	3132, 4023, 3748, 2306, 3226, 1642, 1858, 2102, 3256, 3588,
	2646, 3216, 970, 3856, 3571, 2246, 3573, 2445, 673, 1515,
	708, 3346, 1961, 3515, 3258, 2785, 2239, 3911, 1219, 2872,
	3309, 1317, 2798, 1828, 2717, 3311, 2735, 3080, 2063, 2462,
	2787, 2704, 3484, 1146, 708, 2713, 3060, 3020, 2125, 3052,
	1312, 2778, 807, 3043, 2795, 2784, 978, 165, 2747, 2732,
	3041, 1797, 2012, 1859, 2584, 2011, 4061, 2730, 3717, 2498,
	3660, 1971, 2499, 1735, 2319, 2856, 2621, 1557, 1320, 2100,
	3453, 3019, 2348, 1482, 1514, 1405, 703, 2006, 2660, 1990,
	1997, 2718, 1027, 1947, 240, 2089, 2794, 1798, 2243, 1034,
	3985, 2620, 2339, 4, 2501, 1203, 1773, 1944, 239, 2303,
	1630, 2480, 1934, 2459, 2350, 2227, 2210, 3228, 2208, 1493,
	1458, 2788, 2531, 2051, 2740, 1137, 1410, 1479, 1032, 1768,
	2530, 709, 1817, 1189, 1469, 2573, 710, 2342, 1140, 1119,
	639, 1077, 2488, 165, 2320, 2426, 1807, 1720, 174, 1644,
	3087, 2392, 625, 1643, 2209, 2470, 647, 1586, 2050, 2211,
	175, 705, 655, 1491, 714, 1154, 101, 1339, 667, 753,
	1434, 780, 1960, 1136, 2075, 1349, 2232, 1008, 717, 642,
	1025, 1142, 42, 1023, 41, 1117, 39, 30, 714, 28,
	801, 26, 1649, 650, 2907, 868, 1360, 1629, 3467, 888,
	3468, 3039, 717, 2903, 1657, 1658, 2091, 1690, 1691, 1692,
	1700, 1701, 1702, 4378, 4372, 2091, 4356, 2479, 3290, 1814,
	2479, 2091, 974, 2091, 4355, 1693, 1688, 4329, 2479, 3290,
	4327, 3764, 4323, 1660, 3764, 4243, 2025, 2642, 3272, 4244,
	4237, 1706, 4235, 974, 2479, 2871, 2479, 1579, 4232, 2091,
	4229, 3095, 4233, 4224, 4230, 822, 4199, 2025, 4198, 4197,
	2025, 4192, 2025, 2111, 3273, 2111, 4191, 1659, 1134, 4187,
	2111, 4185, 4157, 3764, 4138, 3764, 3764, 1679, 2537, 4131,
	4130, 1198, 4125, 2479, 2479, 1676, 3764, 1353, 4124, 4118,
	4092, 4058, 3764, 2025, 3810, 2537, 4040, 3110, 4037, 4034,
	3649, 1523, 2025, 3764, 3993, 3958, 3957, 2126, 3994, 2025,
	2025, 1120, 1120, 3949, 955, 3948, 3917, 2025, 3896, 3764,
	2025, 3875, 2537, 3864, 3795, 2111, 954, 3290, 2479, 3783,
	2109, 2479, 3763, 2479, 2992, 2993, 3764, 3010, 3011, 3012,
	3680, 3628, 3622, 975, 2537, 3306, 3306, 3586, 3477, 3475,
	3460, 3587, 3478, 3476, 2479, 3676, 1682, 1683, 1684, 1685,
	1198, 3377, 2533, 4139, 3109, 2025, 1665, 1657, 1658, 964,
	969, 3373, 3305, 1168, 3297, 2479, 3306, 238, 3298, 3036,
	3031, 3030, 2916, 2479, 2479, 2479, 3457, 2983, 2917, 1688,
	2957, 2984, 991, 1121, 2958, 2949, 1660, 2025, 1152, 2950,
	4053, 1697, 2947, 212, 1707, 2918, 2479, 3007, 2801, 2479,
	1687, 1689, 2111, 2774, 2773, 2992, 2993, 2114, 2114, 2557,
	1362, 2536, 4041, 2479, 2606, 2537, 1703, 2528, 1704, 2522,
	1659, 2479, 2472, 2025, 86, 1674, 1675, 2478, 2113, 2111,
	1679, 2479, 2114, 1173, 1123, 214, 1124, 2479, 1676, 3457,
	2471, 3845, 1169, 1695, 1657, 1658, 3810, 3784, 2025, 3649,
	3298, 2637, 1657, 1658, 1965, 2572, 1913, 1680, 2906, 2090,
	2710, 2106, 2024, 2654, 1362, 2570, 1688, 1793, 1348, 3544,
	3349, 3327, 1815, 1660, 1688, 2000, 212, 2515, 3007, 2514,
	2513, 1660, 3274, 213, 1559, 2512, 2998, 2992, 2993, 3674,
	3010, 3011, 3012, 2511, 206, 1125, 1705, 1122, 1657, 1658,
	963, 3275, 207, 962, 961, 960, 959, 1659, 3675, 1682,
	1683, 1684, 1685, 958, 1694, 1659, 2836, 1679, 214, 1665,
	1688, 957, 953, 212, 176, 1676, 952, 1660, 951, 950,
	2092, 949, 948, 947, 946, 945, 944, 943, 942, 2092,
	941, 940, 939, 938, 937, 2092, 3013, 2092, 919, 866,
	865, 864, 2992, 2993, 863, 862, 861, 860, 859, 858,
	3007, 1659, 857, 1687, 1689, 214, 213, 2998, 856, 855,
	854, 853, 1686, 2092, 852, 851, 3358, 206, 850, 849,
	212, 1374, 1368, 848, 847, 207, 846, 3008, 1674, 1675,
	845, 844, 1681, 843, 842, 2496, 1682, 1683, 1684, 1685,
	841, 840, 839, 838, 837, 836, 1665, 176, 835, 825,
	2375, 824, 1032, 213, 1665, 820, 1032, 1698, 819, 813,
	1680, 812, 214, 771, 770, 730, 729, 728, 720, 719,
	718, 1222, 687, 3272, 679, 1222, 678, 677, 661, 1342,
	234, 233, 232, 231, 1202, 230, 229, 228, 1207, 2998,
	1687, 1689, 1193, 227, 176, 226, 212, 3733, 1687, 1689,
	1665, 2345, 225, 1032, 3692, 1032, 1169, 1032, 3008, 224,
	213, 223, 1342, 222, 221, 1674, 1675, 220, 219, 218,
	217, 206, 1328, 216, 215, 3858, 3494, 3471, 2726, 207,
	212, 2762, 1527, 1323, 3307, 1342, 3083, 1509, 214, 1359,
	2090, 1366, 138, 1372, 1687, 1689, 2109, 1680, 2106, 3013,
	212, 176, 1696, 1353, 2998, 1680, 1671, 1672, 1678, 1699,
	1677, 1673, 3009, 1670, 1668, 1669, 1661, 1662, 1663, 1664,
	1666, 1667, 214, 2109, 2203, 1686, 1352, 4220, 1342, 1032,
	3700, 2929, 1416, 1418, 1342, 2346, 213, 2912, 1342, 2691,
	3008, 2541, 214, 2520, 1581, 1681, 1032, 206, 1032, 1818,
	1776, 1680, 1342, 2505, 1942, 207, 1775, 1776, 1032, 1187,
	1032, 1331, 1361, 1775, 1841, 1489, 2361, 2359, 3034, 1746,
	213, 1421, 1656, 1373, 1367, 1356, 1209, 176, 1779, 4044,
	2121, 206, 1507, 1156, 1512, 1774, 714, 3591, 4200, 207,
	213, 2471, 1408, 3009, 1521, 1215, 1526, 1309, 1314, 1737,
	717, 206, 1169, 3035, 1342, 3008, 1472, 1513, 4106, 207,
	4050, 176, 1686, 2347, 2344, 1182, 1403, 4042, 2743, 2992,
	2993, 3936, 1032, 1351, 3910, 1032, 3865, 3844, 1350, 3740,
	3715, 176, 1681, 1657, 1658, 3714, 3004, 3005, 3006, 3708,
	1681, 165, 165, 3003, 3001, 3002, 2994, 2995, 2996, 2997,
	2999, 3000, 3707, 3706, 3699, 1688, 1580, 3698, 3696, 2120,
	1362, 3691, 1660, 3688, 1528, 3687, 3585, 3498, 3860, 3497,
	1490, 3496, 3481, 1677, 1673, 3009, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 3448, 1681, 3447, 1496, 1498,
	3446, 3369, 1463, 1466, 3365, 3078, 1659, 1193, 1475, 3027,
	1193, 3018, 3301, 2991, 2988, 2987, 1679, 2985, 2956, 2992,
	2993, 2728, 3542, 2955, 2954, 1032, 1032, 1032, 1032, 1032,
	1032, 1032, 2951, 1437, 3003, 3001, 3002, 2994, 2995, 2996,
	2997, 2999, 3000, 2948, 2928, 1362, 2911, 1744, 2904, 2775,
	3009, 977, 1738, 2506, 1736, 1737, 1032, 1634, 2332, 1656,
	975, 1494, 1032, 2349, 1595, 1133, 1655, 2066, 4371, 4321,
	1677, 1673, 4320, 1670, 1668, 1669, 1661, 1662, 1663, 1664,
	1666, 1667, 1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667,
	2032, 2998, 2992, 2993, 2030, 1682, 1683, 1684, 1685, 3592,
	212, 212, 4253, 1508, 4251, 1665, 4242, 1158, 3395, 3004,
	3005, 3006, 4098, 4088, 4085, 1522, 3003, 3001, 3002, 2994,
	2995, 2996, 2997, 2999, 3000, 3592, 4084, 1670, 1668, 1669,
	1661, 1662, 1663, 1664, 1666, 1667, 1628, 1726, 4083, 1933,
	4077, 4070, 214, 214, 4038, 2992, 2993, 4022, 4021, 1687,
	1689, 2309, 4009, 4006, 3032, 1533, 3954, 3932, 3908, 3891,
	1315, 3890, 3872, 1327, 1330, 1550, 3871, 1032, 1032, 1032,
	2343, 3835, 3811, 1032, 3732, 3713, 3650, 1582, 3644, 3641,
	1154, 2998, 1154, 3002, 2994, 2995, 2996, 2997, 2999, 3000,
	213, 213, 3008, 4318, 3532, 2550, 3531, 1222, 3518, 2727,
	2315, 206, 206, 1795, 3859, 1032, 1680, 3517, 708, 207,
	207, 212, 1876, 708, 1631, 1639, 212, 955, 3463, 1832,
	1638, 3451, 1032, 3360, 1330, 1330, 1342, 1724, 212, 954,
	3308, 176, 176, 2992, 2993, 3291, 3249, 1844, 3188, 1633,
	3161, 3135, 3134, 3103, 1032, 3101, 2933, 1855, 2932, 2927,
	1222, 1635, 1902, 214, 2998, 1652, 1653, 2895, 214, 2703,
	1849, 2374, 1804, 1330, 1782, 1781, 1780, 1777, 1193, 1769,
	214, 1767, 975, 2548, 2547, 1911, 1940, 2517, 1778, 1801,
	1802, 1845, 3008, 2510, 2477, 1825, 1657, 1658, 1905, 2357,
	165, 212, 1770, 1771, 1851, 1840, 1796, 1657, 1658, 1791,
	1790, 213, 1789, 1788, 1787, 1786, 213, 2998, 1688, 1657,
	1658, 1906, 206, 1120, 1785, 1660, 1784, 206, 213, 1783,
	207, 1686, 1516, 1764, 1763, 207, 1660, 3009, 1762, 206,
	1761, 1760, 1759, 214, 1758, 1757, 212, 207, 1660, 1756,
	1755, 1681, 176, 2122, 1847, 3135, 1754, 176, 1753, 1659,
	1752, 1751, 714, 1750, 1739, 3008, 1725, 714, 3075, 2742,
	1659, 1870, 1723, 1718, 1181, 1826, 717, 1171, 1931, 1164,
	1823, 717, 1659, 4062, 3838, 1657, 1658, 3736, 214, 1925,
	1924, 213, 3684, 1933, 1935, 1908, 1220, 1342, 1342, 3493,
	1321, 3474, 206, 3466, 1794, 2998, 1030, 1222, 975, 212,
	207, 1904, 2915, 1873, 1660, 2508, 1953, 3921, 2539, 3738,
	3492, 1820, 3786, 1152, 4045, 1152, 1835, 3009, 1834, 1852,
	1833, 1831, 176, 1830, 1899, 1829, 213, 2360, 2358, 1738,
	1986, 3099, 1721, 1989, 1836, 1848, 1994, 206, 1659, 1856,
	1933, 214, 1864, 4311, 1206, 207, 4086, 1816, 1665, 3259,
	2992, 2993, 4043, 1198, 3996, 1933, 2018, 2022, 3003, 3001,
	3002, 2994, 2995, 2996, 2997, 2999, 3000, 176, 1936, 1926,
	212, 1665, 1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666,
	1667, 3935, 1965, 1204, 3995, 3863, 3813, 3812, 3785, 213,
	3009, 3164, 1687, 1689, 1970, 1759, 1928, 3735, 1729, 1759,
	206, 1205, 1734, 3653, 3652, 2625, 3651, 3469, 207, 3293,
	3292, 4001, 214, 3595, 1998, 1818, 2953, 1776, 2952, 935,
	2877, 3530, 1198, 1775, 1626, 2608, 1201, 3233, 4196, 3232,
	176, 1029, 1748, 714, 2119, 3992, 1558, 1665, 1342, 4240,
	1342, 4225, 1342, 4212, 3217, 1919, 2141, 717, 2799, 1680,
	2056, 2994, 2995, 2996, 2997, 2999, 3000, 1559, 1342, 1342,
	213, 2015, 936, 1198, 2546, 2013, 3550, 3549, 2061, 1342,
	1351, 206, 3535, 3324, 2072, 1350, 3112, 3912, 3039, 207,
	3397, 1342, 2067, 1342, 1342, 1342, 1993, 2921, 1596, 2340,
	1792, 4221, 1772, 3224, 1745, 2060, 2648, 1462, 2128, 1415,
	1345, 176, 1549, 1176, 1930, 708, 4234, 4231, 3268, 3509,
	4079, 1149, 3847, 4156, 2023, 1132, 2140, 4067, 3138, 3525,
	2651, 2782, 3001, 3002, 2994, 2995, 2996, 2997, 2999, 3000,
	1327, 2080, 2739, 4278, 3210, 1537, 3975, 1909, 4277, 3341,
	3774, 1380, 1929, 2558, 2069, 4366, 3116, 2124, 2042, 2096,
	2188, 2043, 2098, 2133, 4222, 2145, 3968, 933, 2103, 2186,
	1346, 2105, 931, 4302, 929, 2108, 1593, 927, 3760, 924,
	3960, 1390, 3808, 2094, 2622, 2623, 2576, 2994, 2995, 2996,
	2997, 2999, 3000, 3559, 1681, 3558, 1032, 973, 1032, 2074,
	2574, 3552, 1437, 2129, 2077, 1032, 2077, 2078, 1876, 1876,
	1222, 3756, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
	1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
	1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
	1032, 1032, 1032, 1032, 1032, 1032, 1032, 766, 1032, 2220,
	1032, 1032, 1032, 1032, 1920, 2207, 1148, 2082, 2083, 714,
	1391, 2115, 3757, 2116, 975, 1494, 975, 1494, 3548, 1182,
	1199, 1592, 1032, 717, 1594, 1032, 1032, 2996, 2997, 2999,
	3000, 972, 3546, 1032, 1188, 3506, 3118, 1032, 2132, 1032,
	1032, 3505, 3213, 1206, 3094, 983, 2345, 1222, 3100, 2926,
	2925, 2924, 3563, 1032, 1032, 1032, 1032, 915, 1032, 1032,
	1032, 1032, 1032, 1032, 1032, 1032, 2218, 1962, 1535, 2923,
	2881, 2244, 2245, 2202, 2658, 2657, 2164, 1006, 1661, 1662,
	1663, 1664, 1666, 1667, 1032, 1032, 1032, 1032, 1032, 1032,
	1032, 1032, 1032, 1199, 1667, 767, 2182, 1032, 1206, 1958,
	1205, 1661, 1662, 1663, 1664, 1666, 1667, 1870, 1870, 1154,
	2231, 4303, 1842, 3562, 2321, 2322, 1222, 2119, 2653, 2586,
	2644, 2636, 2216, 1963, 1964, 1154, 3163, 2635, 2321, 2337,
	2346, 1195, 2736, 2634, 2633, 974, 2612, 2059, 2599, 2206,
	2212, 1032, 1222, 2529, 2205, 2204, 2219, 2218, 955, 1873,
	1873, 955, 955, 1959, 2383, 1205, 2149, 1199, 2290, 1632,
	2235, 2388, 2336, 2236, 2237, 1943, 3325, 1575, 1347, 1663,
	1664, 1666, 1667, 2429, 2429, 2443, 2493, 2321, 1937, 1938,
	2463, 2465, 2540, 2387, 1448, 2248, 2469, 2576, 1864, 1864,
	1965, 1427, 1386, 1426, 3512, 3889, 1530, 1327, 2214, 1836,
	2041, 2574, 3752, 2216, 1195, 921, 1200, 3753, 2347, 2344,
	2610, 2150, 2485, 2201, 2629, 3787, 1425, 2317, 1424, 2137,
	1398, 2197, 1576, 2565, 2598, 2305, 2589, 2305, 1825, 2340,
	2518, 2521, 2854, 2334, 2385, 2622, 2623, 1605, 2869, 2386,
	975, 3943, 2389, 1222, 2390, 2391, 2507, 3000, 1120, 975,
	2622, 2623, 2192, 975, 2217, 1591, 1193, 1609, 3755, 2839,
	3770, 2154, 4306, 1196, 165, 1547, 4277, 2151, 1195, 2484,
	637, 1197, 3758, 1876, 1806, 1637, 3521, 2148, 1577, 1200,
	2438, 1334, 2454, 2467, 2425, 4330, 4218, 3569, 2597, 3178,
	1180, 2079, 1150, 2555, 3332, 632, 2605, 2492, 971, 2497,
	1161, 1222, 2503, 2504, 2490, 2491, 2486, 2475, 2476, 1531,
	1625, 2534, 2026, 1823, 1377, 1342, 1559, 2650, 1551, 3115,
	3331, 2349, 2215, 833, 2578, 2647, 3568, 2542, 3177, 2641,
	1032, 1032, 2532, 1032, 3171, 2217, 1196, 1412, 3533, 1159,
	2200, 975, 1152, 1200, 1197, 2683, 1948, 1778, 2349, 2649,
	1810, 1949, 4307, 2313, 3807, 3945, 1342, 2645, 1152, 2868,
	2311, 2556, 2549, 2842, 2692, 1770, 1771, 2695, 1559, 2697,
	769, 768, 2833, 3170, 4315, 1411, 3547, 1948, 3545, 2553,
	1486, 2552, 1949, 2630, 2682, 1984, 2615, 3754, 2707, 2187,
	1502, 685, 2614, 2750, 2554, 1813, 2559, 925, 2185, 1536,
	1196, 826, 925, 2215, 925, 2714, 2724, 926, 1197, 925,
	1808, 2741, 1342, 1342, 2741, 1342, 2588, 2686, 1588, 1409,
	2581, 2688, 1870, 3761, 1983, 3534, 1198, 1342, 1811, 2624,
	2626, 2627, 2628, 2601, 1968, 2591, 2594, 2796, 966, 3888,
	910, 3212, 1342, 1162, 2199, 2613, 1534, 1956, 910, 2720,
	3768, 4219, 2765, 2770, 2609, 2343, 1541, 4309, 2631, 1950,
	2314, 2157, 814, 968, 1873, 2196, 2804, 2805, 1809, 714,
	3182, 968, 2652, 1967, 2632, 1729, 1952, 2811, 2812, 2813,
	1032, 2301, 1972, 717, 3386, 764, 2764, 763, 2611, 2841,
	1950, 1606, 1996, 2577, 2892, 684, 2800, 3054, 4322, 1198,
	2822, 3383, 2823, 1864, 1976, 4294, 1351, 1952, 967, 2299,
	4333, 2689, 2029, 2028, 2830, 1995, 2820, 4293, 2838, 2701,
	165, 2527, 2890, 2781, 1032, 4266, 2711, 3666, 2802, 2450,
	1032, 1032, 2806, 1447, 2807, 4135, 2752, 910, 3665, 2819,
	2757, 1385, 4217, 2767, 1954, 2587, 2761, 1991, 2825, 3265,
	2827, 911, 2829, 2745, 2287, 2844, 2734, 2846, 1973, 911,
	968, 2861, 2862, 1198, 2756, 2158, 3266, 2771, 2759, 3522,
	2760, 1963, 1964, 1812, 1388, 1954, 4080, 1956, 4094, 3384,
	2766, 1330, 2847, 2817, 2772, 1032, 1032, 2561, 2768, 2575,
	2783, 1032, 4346, 2824, 3769, 2826, 2091, 2828, 1411, 3944,
	1603, 1992, 2563, 2010, 1032, 1032, 3149, 2840, 800, 3117,
	1032, 1032, 4313, 3827, 4265, 2247, 1032, 2837, 1765, 3097,
	4287, 633, 3191, 1607, 2349, 1032, 1032, 1032, 1330, 1956,
	4308, 1032, 1494, 1657, 1658, 2564, 827, 828, 3265, 3662,
	4246, 1032, 2884, 2295, 2883, 3901, 2304, 1810, 911, 4247,
	4167, 4097, 2009, 2860, 2562, 1688, 2887, 1532, 1032, 1977,
	2296, 3148, 1660, 3793, 1955, 2297, 922, 2576, 1956, 2302,
	2914, 2896, 2897, 2851, 2850, 834, 3885, 3053, 2888, 2849,
	2331, 2592, 2893, 1717, 1604, 2905, 2231, 1160, 2198, 2855,
	2153, 634, 1813, 1546, 1548, 1955, 1659, 815, 816, 1956,
	2931, 1806, 2352, 1636, 1608, 2870, 2147, 2487, 4314, 2489,
	1315, 4334, 4133, 3156, 2285, 2909, 2910, 2288, 1179, 2349,
	2913, 2502, 974, 1978, 1979, 1811, 3399, 1327, 4344, 3319,
	3837, 3656, 912, 635, 3576, 636, 686, 721, 3312, 683,
	912, 4316, 3489, 3574, 1945, 1974, 4134, 2882, 1032, 1032,
	1032, 1174, 3157, 3667, 3343, 2852, 1965, 1032, 1032, 1032,
	4100, 3152, 1032, 4216, 1987, 4276, 2284, 4274, 4115, 4008,
	2312, 2001, 1032, 1154, 1222, 1563, 2008, 1810, 1032, 3610,
	1032, 3046, 3047, 1946, 1948, 1975, 3590, 3252, 1154, 1949,
	3576, 2920, 2049, 1803, 1647, 1665, 1149, 2519, 1149, 3574,
	1172, 1167, 624, 4264, 3663, 3884, 1222, 3154, 2234, 2156,
	3711, 1966, 1921, 829, 830, 3015, 3016, 3017, 1154, 3828,
	3347, 1222, 1813, 3088, 3951, 4339, 975, 3950, 3930, 912,
	3314, 4015, 1951, 4066, 1330, 1330, 2298, 1808, 1876, 1687,
	1689, 3382, 1222, 3611, 3068, 3313, 2300, 3556, 3508, 2889,
	3577, 3029, 3253, 3773, 3437, 1811, 3245, 1032, 3130, 2891,
	3772, 3126, 965, 1951, 913, 2725, 2719, 3048, 3093, 3153,
	1812, 1032, 913, 2705, 817, 818, 2073, 2062, 3058, 4245,
	2054, 3082, 2037, 1876, 2007, 4101, 1327, 3122, 3123, 3113,
	3107, 3056, 1980, 3502, 3077, 1809, 1680, 1950, 2571, 1032,
	1342, 660, 1193, 3119, 3452, 3139, 3577, 4145, 3143, 3344,
	914, 3081, 3057, 2193, 1952, 1646, 1914, 3066, 914, 3040,
	3024, 3025, 3026, 3069, 3070, 1327, 4347, 1327, 1641, 3310,
	2092, 1148, 3074, 1148, 3086, 1342, 3886, 2224, 3158, 3159,
	2286, 3613, 3160, 3140, 3852, 1222, 3145, 3146, 3055, 2714,
	2702, 3098, 2616, 1450, 1342, 3067, 3127, 3990, 2593, 1342,
	3988, 913, 3194, 1981, 3931, 3197, 2450, 3141, 3166, 3202,
	3204, 1646, 722, 723, 3185, 3186, 3137, 3136, 3187, 3465,
	1342, 1717, 1954, 2138, 2714, 2875, 1342, 1870, 1342, 3072,
	3572, 3073, 1222, 3668, 2853, 3151, 3131, 3051, 3712, 708,
	1812, 3169, 3050, 2714, 3575, 3189, 1152, 914, 2714, 1985,
	1342, 3125, 3104, 3105, 1645, 3106, 3120, 3229, 3183, 3114,
	4338, 1152, 1918, 1953, 1342, 3090, 3091, 3092, 1578, 1873,
	3181, 1681, 1870, 3438, 3180, 2526, 3315, 3316, 3317, 3318,
	1154, 2525, 3439, 3238, 3261, 3168, 2450, 2450, 1646, 3199,
	3771, 1152, 1953, 2524, 3206, 3215, 2796, 3218, 1988, 3155,
	3575, 2523, 3173, 3244, 3162, 2796, 3179, 2225, 1864, 972,
	1645, 4102, 3176, 3669, 1873, 1647, 2481, 3174, 3184, 3503,
	3581, 3175, 1342, 1342, 2117, 3190, 3198, 2709, 1998, 2004,
	1419, 3205, 3200, 3270, 3819, 1916, 1998, 3211, 3207, 1564,
	1486, 2130, 1955, 1420, 1342, 1433, 1956, 725, 724, 1431,
	3289, 2131, 4073, 1864, 832, 3319, 3302, 2617, 2618, 3260,
	3282, 2071, 1408, 2139, 3312, 2142, 2143, 2144, 3939, 3220,
	3869, 1647, 1917, 4284, 3089, 3222, 3986, 2803, 2002, 1222,
	2614, 2687, 1222, 714, 2685, 3326, 3241, 1645, 3242, 2483,
	3262, 3121, 3254, 1848, 2482, 1540, 4148, 717, 3928, 4153,
	3214, 726, 727, 4142, 1669, 1661, 1662, 1663, 1664, 1666,
	1667, 4074, 1032, 3718, 3454, 659, 2356, 2003, 1032, 1032,
	165, 165, 1032, 1032, 1032, 3320, 1032, 3062, 4171, 3267,
	2450, 2450, 2450, 3283, 3192, 1032, 1876, 3868, 3276, 3269,
	3338, 3929, 3278, 3304, 1032, 3280, 3281, 1032, 3300, 4286,
	3284, 4236, 3285, 1222, 3286, 1623, 3314, 1150, 4087, 1150,
	3337, 3335, 1032, 3022, 1621, 3907, 3940, 3287, 3288, 3279,
	1222, 3313, 3710, 3580, 3021, 3359, 3322, 1600, 3321, 4149,
	1876, 1876, 1032, 1032, 3108, 1032, 1032, 1032, 3345, 2986,
	3355, 3356, 3362, 3328, 4075, 3329, 2894, 3330, 2706, 975,
	2643, 2607, 2551, 1843, 1839, 1624, 1518, 3334, 3340, 1598,
	1951, 3371, 3372, 1152, 1574, 1572, 3339, 3063, 3794, 1641,
	1570, 3342, 1568, 1566, 1556, 2835, 2834, 1032, 1554, 2809,
	1429, 1032, 2213, 1876, 1876, 1032, 1032, 1032, 1032, 1032,
	1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032, 1032,
	1032, 1032, 1032, 1032, 2184, 1032, 2195, 1587, 2161, 2034,
	1903, 1749, 1032, 1032, 1876, 3061, 1529, 1402, 3367, 1032,
	2355, 4211, 3782, 1432, 4288, 4141, 4262, 1430, 1327, 3850,
	1032, 3378, 831, 3799, 3745, 1870, 3609, 3601, 3394, 3561,
	1040, 1154, 1154, 2244, 3402, 1032, 3065, 3385, 3387, 3388,
	923, 2059, 3418, 3419, 3420, 3421, 3422, 3423, 3424, 3425,
	3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435,
	3436, 3528, 3440, 3526, 1222, 3411, 3507, 1873, 3401, 1870,
	1870, 1622, 3389, 3193, 242, 242, 242, 3248, 627, 628,
	1620, 643, 627, 643, 653, 658, 2244, 3417, 3409, 676,
	3470, 3412, 3410, 1599, 682, 3408, 3243, 3441, 3449, 1032,
	242, 3414, 3315, 3316, 3317, 3318, 1864, 3379, 3257, 3045,
	3234, 1873, 1873, 3487, 3488, 1032, 1032, 3445, 811, 165,
	3456, 3416, 1870, 1870, 242, 1597, 2763, 3499, 3500, 3501,
	1573, 1571, 3442, 2758, 3461, 3462, 1569, 3064, 1567, 1565,
	1555, 3071, 1032, 1032, 1553, 1149, 1428, 2737, 2723, 2712,
	1864, 1864, 2699, 1870, 2684, 2112, 3084, 3458, 3459, 2110,
	2107, 1149, 2104, 2099, 1873, 1873, 3450, 2183, 2097, 1032,
	1327, 1327, 2093, 3473, 2084, 3472, 2033, 3102, 2031, 2014,
	1999, 1982, 1969, 1957, 928, 930, 932, 4254, 1129, 3201,
	1650, 1342, 4032, 1850, 2008, 1873, 2873, 4278, 1922, 4181,
	3874, 3486, 3867, 1864, 1864, 3866, 3806, 3741, 2797, 1941,
	1876, 1382, 3540, 1130, 2576, 2576, 4017, 2596, 3541, 3543,
	3557, 3621, 1965, 1618, 1619, 1471, 2070, 3511, 2574, 2595,
	2152, 3536, 1470, 698, 1864, 2179, 2178, 627, 627, 1342,
	4180, 3801, 2159, 1552, 4024, 242, 1032, 3775, 3495, 4052,
	1327, 1657, 1658, 3719, 1154, 1032, 4025, 3623, 3551, 3596,
	3697, 3579, 2619, 3603, 1152, 1152, 2750, 2600, 1654, 3527,
	4280, 3529, 4272, 1342, 1342, 1342, 3632, 2681, 2614, 3485,
	1148, 4241, 3567, 638, 3598, 2698, 2874, 4026, 3615, 1342,
	3555, 2181, 3618, 3583, 3570, 1651, 1148, 3578, 235, 2055,
	2796, 3597, 2007, 1185, 3617, 2450, 2450, 2648, 1222, 1471,
	3636, 3554, 3614, 754, 1659, 1471, 2656, 3604, 1131, 797,
	1657, 1658, 2655, 3131, 3599, 2638, 3566, 3084, 3560, 3648,
	1222, 2602, 4140, 1032, 1032, 2640, 649, 2604, 3655, 1032,
	1032, 1876, 3602, 621, 1032, 1032, 4028, 1032, 2639, 1660,
	2603, 1032, 4110, 3616, 4107, 4072, 4004, 3619, 3983, 1870,
	3600, 3624, 1032, 3589, 3625, 3480, 3247, 2744, 4027, 2468,
	1907, 1857, 3631, 2228, 2769, 1486, 4310, 3937, 1032, 3637,
	3638, 3096, 4173, 1659, 3639, 4029, 4337, 4174, 3645, 4109,
	3671, 3646, 3643, 2992, 2993, 1657, 1658, 3679, 4173, 3642,
	3654, 1873, 1353, 4174, 2810, 3629, 4290, 3689, 3670, 3630,
	2568, 2569, 2566, 2567, 2351, 3491, 2568, 2450, 2450, 2450,
	2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450, 2450,
	2450, 2450, 2450, 2450, 2450, 2450, 3683, 2450, 1154, 3664,
	1864, 3659, 1539, 2566, 2384, 4324, 1154, 4005, 1538, 3969,
	1222, 1602, 1222, 3802, 1601, 3798, 3797, 3685, 3607, 1154,
	3490, 3390, 3195, 1743, 1742, 4295, 4063, 3964, 3922, 3919,
	3830, 3737, 3647, 3627, 1321, 1222, 3584, 1220, 3582, 3524,
	3519, 3277, 3724, 3251, 3250, 2982, 2981, 1152, 2980, 2979,
	1870, 2978, 3709, 2977, 2976, 2975, 2974, 2973, 1032, 3742,
	3743, 2972, 2971, 2970, 2969, 2968, 2967, 2966, 2965, 2964,
	3727, 2963, 2446, 2962, 2961, 2960, 2959, 2832, 2816, 2815,
	3776, 3766, 2814, 2754, 2729, 1222, 2700, 2544, 2543, 2316,
	2180, 2177, 1873, 1222, 2176, 2175, 2174, 3767, 165, 2173,
	3730, 3720, 3723, 2087, 3726, 2086, 3731, 2085, 3375, 3725,
	3778, 3779, 3081, 3803, 2068, 3804, 3734, 3721, 3722, 3777,
	2044, 1342, 1342, 3744, 2040, 3391, 1150, 2039, 2038, 2036,
	2035, 1864, 1617, 1616, 1561, 1560, 3765, 1457, 1456, 1342,
	1455, 3820, 1150, 1454, 1453, 3716, 244, 1452, 3805, 1451,
	1222, 1449, 1444, 3796, 1443, 1342, 1442, 1441, 1440, 1397,
	1396, 3815, 1330, 1395, 1394, 3829, 3817, 1393, 1392, 1387,
	1381, 1379, 3809, 4030, 1378, 3790, 3841, 1213, 4031, 1212,
	3814, 1211, 1032, 1210, 1178, 1177, 1112, 3843, 2714, 3792,
	1912, 3816, 1342, 1342, 1342, 934, 920, 3942, 3861, 3759,
	1611, 84, 1389, 1222, 3854, 3870, 742, 78, 3781, 2005,
	3848, 2059, 3523, 3857, 893, 1032, 1032, 1032, 3821, 3789,
	1165, 3791, 4170, 3873, 3840, 3836, 3862, 1375, 3853, 4093,
	3842, 1152, 749, 1222, 3839, 4155, 3147, 2659, 1032, 1152,
	2160, 1032, 1032, 3855, 1562, 2162, 3076, 2509, 1175, 4132,
	3693, 1032, 1152, 2930, 1876, 4059, 3900, 676, 2354, 1032,
	1032, 1747, 3879, 3033, 80, 1016, 1062, 3826, 3825, 3746,
	3510, 3877, 2786, 3823, 1222, 3876, 1342, 3881, 3822, 3482,
	242, 3887, 242, 242, 1318, 1861, 242, 242, 1333, 3897,
	1222, 3892, 1863, 982, 1225, 1923, 1022, 1939, 1032, 1932,
	2545, 2428, 242, 1039, 1355, 1032, 1036, 1865, 1867, 1038,
	3909, 1037, 1866, 1032, 3903, 1876, 1766, 1035, 3906, 1860,
	3606, 3605, 2708, 1032, 995, 2748, 1032, 1436, 895, 1384,
	1927, 2310, 2338, 2919, 1740, 1032, 997, 1018, 3924, 3915,
	3916, 1401, 1222, 1407, 2335, 1170, 1007, 242, 242, 3914,
	1318, 996, 3918, 1342, 1342, 3925, 3059, 3038, 3963, 3264,
	242, 3923, 3479, 2223, 758, 3933, 2989, 2341, 1446, 1149,
	1163, 2451, 2444, 2440, 3111, 2738, 1627, 3947, 3946, 3974,
	242, 1719, 242, 242, 1149, 1318, 242, 1333, 2749, 3229,
	1208, 1222, 3998, 3961, 1342, 1000, 3989, 676, 2308, 242,
	242, 3965, 1731, 1870, 2899, 2233, 3271, 3971, 3079, 2538,
	4177, 3398, 1032, 1032, 1149, 3966, 3979, 3978, 3982, 2048,
	3987, 4002, 811, 3981, 1128, 4003, 1127, 1126, 3953, 4161,
	3997, 1032, 1032, 4158, 3640, 4035, 4036, 3977, 4016, 3227,
	4020, 1915, 2560, 4012, 4014, 1873, 1709, 3235, 1032, 1876,
	4039, 4010, 1012, 1326, 4013, 3044, 3303, 4019, 3857, 1399,
	681, 4033, 3955, 3956, 1870, 1024, 4018, 4011, 1708, 2678,
	2677, 4069, 1194, 1032, 1192, 1191, 1032, 1190, 3129, 4345,
	3520, 3976, 211, 2867, 1864, 1648, 3970, 4047, 1640, 3972,
	3973, 208, 210, 209, 242, 1032, 4076, 4065, 3831, 3483,
	3085, 4239, 3208, 4051, 1148, 4057, 1873, 3538, 3219, 2857,
	21, 242, 20, 19, 105, 4056, 2059, 4064, 4082, 1148,
	4048, 4049, 40, 18, 120, 137, 136, 4081, 113, 135,
	1330, 134, 3239, 133, 132, 139, 1032, 1032, 131, 130,
	4096, 125, 129, 128, 127, 1864, 3246, 1032, 126, 1148,
	1032, 124, 1342, 123, 122, 121, 119, 118, 4089, 4095,
	117, 4091, 1342, 1342, 116, 115, 114, 112, 4104, 4105,
	4112, 111, 110, 4114, 109, 108, 4123, 107, 106, 1342,
	4111, 4103, 672, 4002, 4108, 669, 57, 56, 104, 2446,
	2446, 103, 17, 1032, 1032, 4117, 38, 14, 1870, 61,
	62, 4116, 4121, 4122, 3295, 3296, 4120, 16, 4119, 13,
	33, 83, 95, 94, 34, 92, 91, 32, 15, 4126,
	89, 4127, 4128, 88, 4129, 4150, 1032, 1032, 31, 1032,
	29, 4137, 11, 4152, 9, 8, 1149, 35, 1827, 12,
	1873, 5, 170, 4175, 169, 172, 4172, 168, 171, 82,
	4160, 4163, 4179, 167, 166, 81, 4151, 27, 10, 4165,
	4090, 4182, 162, 3999, 4190, 4169, 4194, 3729, 3594, 4195,
	76, 164, 163, 161, 1032, 1032, 1032, 160, 159, 1864,
	77, 4193, 4136, 4183, 74, 4186, 4184, 4189, 158, 157,
	3739, 75, 156, 2450, 25, 6, 60, 1032, 4223, 4228,
	7, 3882, 3323, 98, 99, 4210, 36, 4209, 72, 627,
	71, 4207, 4208, 70, 24, 4164, 59, 23, 4168, 199,
	198, 197, 196, 195, 194, 189, 188, 4250, 193, 191,
	242, 4248, 242, 2446, 2446, 2446, 242, 4226, 190, 192,
	2450, 4259, 187, 202, 1032, 4252, 201, 203, 4257, 1355,
	1318, 242, 4258, 242, 4249, 200, 4263, 205, 242, 1355,
	643, 186, 184, 242, 1355, 180, 4255, 4256, 179, 4279,
	676, 1148, 4260, 4269, 4270, 183, 4275, 4273, 185, 182,
	4271, 181, 178, 4282, 204, 154, 4281, 155, 67, 4283,
	1150, 153, 1032, 4289, 1032, 4285, 4297, 4160, 4179, 152,
	4163, 4292, 151, 150, 4296, 1150, 4304, 4300, 4298, 149,
	148, 147, 66, 4305, 22, 4299, 2, 4301, 995, 1,
	0, 4291, 995, 0, 0, 0, 0, 0, 0, 4317,
	0, 4319, 0, 0, 0, 1150, 0, 1306, 0, 0,
	0, 1306, 0, 4325, 0, 0, 0, 0, 4331, 4328,
	0, 1032, 1032, 4326, 4332, 4238, 0, 1327, 1220, 1032,
	0, 1032, 1032, 4335, 0, 0, 0, 4341, 0, 4349,
	0, 0, 4350, 4352, 0, 4348, 4354, 4353, 0, 0,
	0, 0, 0, 0, 2750, 0, 0, 4351, 3898, 4357,
	2450, 0, 4359, 0, 0, 0, 4361, 0, 4363, 0,
	4364, 3760, 0, 4367, 4365, 4368, 4362, 4360, 0, 0,
	0, 4370, 1032, 0, 4374, 4369, 0, 4376, 4373, 0,
	4377, 0, 4379, 0, 0, 0, 0, 4380, 0, 3898,
	0, 0, 802, 0, 3756, 0, 242, 0, 3749, 242,
	0, 0, 0, 1330, 0, 2247, 0, 1149, 1149, 0,
	4342, 4343, 0, 0, 3747, 0, 0, 0, 68, 0,
	805, 804, 0, 3751, 0, 0, 0, 0, 0, 0,
	0, 0, 2675, 0, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3757, 0, 0, 0, 242,
	73, 0, 0, 242, 0, 0, 0, 2247, 0, 0,
	242, 4375, 0, 0, 2667, 2665, 242, 0, 0, 0,
	0, 2669, 2671, 2661, 0, 0, 0, 0, 0, 242,
	0, 242, 0, 242, 0, 3750, 0, 627, 0, 79,
	0, 0, 0, 3564, 0, 0, 0, 0, 0, 0,
	0, 2088, 0, 0, 0, 1657, 1658, 0, 0, 0,
	0, 0, 0, 242, 0, 0, 0, 1150, 0, 0,
	242, 0, 0, 0, 0, 0, 85, 1688, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	100, 0, 1148, 1148, 0, 86, 97, 0, 0, 0,
	0, 676, 0, 0, 0, 811, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 3633, 3634, 3635, 1679, 0,
	242, 0, 1318, 242, 0, 0, 1676, 0, 0, 0,
	0, 1486, 0, 0, 0, 0, 0, 676, 0, 0,
	87, 0, 0, 0, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 242, 0, 242, 0,
	242, 0, 242, 0, 242, 0, 0, 0, 2446, 2446,
	1149, 0, 0, 0, 0, 3752, 0, 3353, 0, 0,
	3753, 0, 2663, 0, 0, 2189, 0, 0, 2190, 0,
	2191, 0, 0, 0, 0, 0, 0, 1682, 1683, 1684,
	1685, 0, 242, 0, 0, 0, 0, 1665, 0, 0,
	0, 0, 2676, 2668, 2666, 2670, 2672, 2662, 2664, 0,
	0, 0, 0, 658, 0, 2674, 0, 676, 0, 0,
	0, 3755, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3758, 0, 0, 0, 0,
	0, 1687, 1689, 0, 0, 0, 0, 0, 2679, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1674, 1675, 90, 0,
	2446, 2446, 2446, 2446, 2446, 2446, 2446, 2446, 2446, 2446,
	2446, 2446, 2446, 2446, 2446, 2446, 2446, 2446, 2446, 0,
	2446, 0, 0, 1306, 0, 1148, 2992, 2993, 1680, 3010,
	3011, 3012, 0, 0, 0, 0, 0, 0, 0, 688,
	0, 0, 0, 0, 173, 93, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	995, 212, 0, 0, 1149, 0, 1306, 0, 0, 806,
	3754, 0, 1149, 138, 0, 0, 0, 0, 1150, 1150,
	0, 0, 0, 0, 0, 1149, 0, 0, 0, 3007,
	0, 0, 0, 0, 627, 0, 0, 0, 0, 0,
	0, 0, 0, 214, 0, 0, 3761, 0, 0, 242,
	0, 0, 0, 1486, 0, 0, 2992, 2993, 627, 3010,
	3011, 3012, 0, 0, 0, 242, 0, 627, 140, 2680,
	0, 0, 0, 1686, 0, 0, 0, 3364, 2673, 242,
	0, 0, 693, 177, 0, 0, 0, 0, 0, 0,
	0, 213, 0, 1681, 242, 1333, 0, 0, 0, 0,
	0, 0, 206, 0, 0, 0, 0, 0, 0, 0,
	207, 0, 0, 0, 0, 0, 0, 0, 2998, 0,
	0, 0, 0, 0, 3878, 0, 3880, 0, 0, 3007,
	0, 0, 803, 0, 0, 0, 0, 0, 0, 1148,
	0, 242, 1333, 0, 643, 242, 0, 1148, 0, 0,
	0, 0, 0, 1306, 0, 0, 0, 146, 0, 0,
	1148, 0, 701, 0, 68, 0, 44, 43, 0, 0,
	0, 0, 0, 2992, 2993, 0, 3010, 3011, 3012, 0,
	69, 0, 0, 141, 0, 0, 695, 0, 0, 2585,
	0, 0, 0, 0, 3363, 0, 73, 0, 242, 0,
	0, 0, 0, 0, 0, 0, 0, 63, 3920, 0,
	242, 0, 0, 0, 46, 0, 143, 0, 2998, 3008,
	0, 1677, 1673, 242, 1670, 1668, 1669, 1661, 1662, 1663,
	1664, 1666, 1667, 45, 0, 79, 0, 0, 0, 0,
	242, 1150, 1805, 699, 0, 0, 3007, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 48,
	64, 0, 0, 0, 0, 242, 2690, 49, 0, 0,
	0, 0, 85, 0, 0, 0, 144, 0, 3013, 0,
	0, 0, 0, 0, 47, 3980, 100, 0, 0, 0,
	1355, 86, 97, 242, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 0, 0, 0, 0, 0, 0,
	2733, 0, 690, 0, 0, 0, 0, 0, 0, 3008,
	2585, 0, 627, 0, 0, 2753, 0, 0, 50, 0,
	0, 242, 0, 0, 242, 2998, 0, 0, 242, 0,
	242, 694, 0, 0, 0, 1318, 87, 242, 242, 0,
	1333, 1333, 0, 0, 3009, 0, 0, 0, 0, 0,
	2779, 811, 0, 2585, 2585, 0, 0, 0, 0, 0,
	700, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 697, 0, 0, 0, 0, 0, 692,
	0, 0, 0, 0, 0, 3013, 0, 242, 1318, 242,
	0, 0, 1355, 0, 1355, 0, 0, 1318, 0, 1318,
	0, 1318, 0, 0, 0, 0, 0, 0, 0, 0,
	981, 0, 0, 0, 0, 1150, 0, 0, 0, 0,
	689, 0, 0, 1150, 0, 0, 3008, 242, 242, 242,
	242, 1318, 242, 0, 242, 0, 1150, 0, 0, 0,
	0, 0, 0, 0, 3009, 0, 1306, 696, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 702, 0, 0, 0, 242, 0, 0, 3004, 3005,
	3006, 0, 691, 242, 90, 3003, 3001, 3002, 2994, 2995,
	2996, 2997, 2999, 3000, 1486, 1486, 0, 0, 0, 0,
	0, 51, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1486, 0, 0, 0, 0, 0, 0, 55, 0,
	0, 0, 0, 0, 65, 0, 0, 0, 0, 54,
	173, 93, 0, 96, 0, 0, 0, 52, 0, 0,
	0, 145, 0, 1306, 0, 0, 0, 0, 53, 0,
	0, 0, 0, 0, 0, 0, 0, 212, 0, 0,
	0, 0, 0, 2992, 2993, 58, 3010, 3011, 3012, 138,
	0, 3009, 1355, 0, 0, 0, 0, 0, 3004, 3005,
	3006, 0, 0, 142, 0, 3003, 3001, 3002, 2994, 2995,
	2996, 2997, 2999, 3000, 0, 0, 0, 0, 0, 214,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1306, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 140, 2992, 2993, 0, 3010, 3011,
	3012, 0, 0, 0, 0, 0, 3007, 0, 1306, 177,
	0, 0, 0, 0, 0, 0, 2446, 213, 0, 1657,
	1658, 0, 0, 0, 0, 0, 0, 0, 206, 0,
	0, 0, 0, 0, 0, 0, 207, 0, 0, 0,
	0, 1688, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 176, 0,
	0, 3, 0, 2446, 0, 3004, 3005, 3006, 3007, 0,
	0, 0, 3003, 3001, 3002, 2994, 2995, 2996, 2997, 2999,
	3000, 0, 1659, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 1679, 0, 0, 2998, 0, 0, 242, 0,
	1676, 0, 0, 627, 0, 0, 0, 0, 627, 1306,
	0, 627, 0, 0, 627, 627, 0, 0, 0, 0,
	627, 0, 0, 0, 0, 0, 0, 0, 242, 0,
	0, 0, 0, 3014, 0, 0, 0, 0, 0, 0,
	1355, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3352, 0, 0, 0, 3013, 0, 2998, 0, 0,
	0, 0, 1355, 0, 0, 0, 0, 1306, 0, 0,
	0, 1682, 1683, 1684, 1685, 0, 0, 0, 0, 0,
	0, 1665, 0, 0, 2585, 2585, 242, 0, 1333, 0,
	0, 2585, 0, 0, 3133, 0, 3008, 0, 0, 0,
	0, 0, 2585, 3133, 0, 2585, 3133, 3133, 0, 0,
	0, 0, 0, 2446, 0, 0, 0, 3013, 0, 0,
	242, 242, 1333, 242, 0, 1687, 1689, 1657, 1658, 0,
	1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0, 0,
	0, 0, 0, 1333, 242, 0, 0, 1318, 0, 1688,
	1674, 1675, 0, 0, 0, 0, 1660, 0, 3008, 2585,
	0, 3196, 2585, 1333, 1706, 0, 2585, 2585, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1680, 0, 981, 0, 0, 0, 981, 0,
	1659, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 0, 1676, 242,
	3223, 0, 0, 3225, 2585, 0, 0, 242, 0, 0,
	0, 242, 0, 1407, 0, 0, 0, 0, 0, 0,
	0, 3009, 0, 0, 0, 1357, 0, 1363, 0, 1369,
	0, 0, 0, 0, 0, 2733, 0, 0, 1318, 0,
	242, 0, 0, 2585, 0, 627, 0, 0, 0, 0,
	0, 0, 2585, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 242, 242, 0, 0, 0, 0, 1682,
	1683, 1684, 1685, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 3009, 0, 0, 0, 1686, 0, 0,
	242, 2733, 0, 0, 2733, 0, 0, 0, 0, 0,
	0, 1487, 0, 0, 0, 1657, 1658, 1681, 1690, 1691,
	1692, 1700, 1701, 1702, 1697, 0, 0, 1707, 1505, 0,
	1510, 0, 0, 1687, 1689, 0, 1693, 1688, 0, 0,
	1519, 0, 1524, 0, 1660, 0, 0, 3333, 0, 0,
	1318, 242, 1706, 242, 0, 3004, 3005, 3006, 1674, 1675,
	0, 0, 3003, 3001, 3002, 2994, 2995, 2996, 2997, 2999,
	3000, 0, 0, 0, 0, 0, 1695, 0, 1659, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 1679, 0,
	1680, 0, 0, 0, 0, 0, 1676, 0, 0, 0,
	0, 0, 0, 0, 1583, 0, 0, 1589, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3004, 3005, 3006,
	0, 0, 0, 0, 3003, 3001, 3002, 2994, 2995, 2996,
	2997, 2999, 3000, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3396, 0, 0, 1677, 1673, 0, 1670, 1668,
	1669, 1661, 1662, 1663, 1664, 1666, 1667, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 1683, 1684,
	1685, 0, 0, 0, 0, 0, 0, 1665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1710, 1711, 1712,
	1713, 1714, 1715, 1716, 0, 1686, 0, 0, 0, 0,
	0, 0, 1697, 0, 0, 1707, 0, 0, 0, 0,
	0, 1687, 1689, 0, 0, 1681, 0, 0, 1728, 0,
	0, 0, 0, 0, 1741, 0, 0, 1703, 0, 1704,
	1306, 0, 0, 0, 0, 0, 1674, 1675, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 242, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 1306, 0, 0, 0, 0, 0, 1680, 0,
	0, 0, 0, 627, 627, 0, 0, 1306, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	68, 0, 0, 0, 0, 1355, 1355, 0, 1306, 0,
	0, 0, 0, 0, 0, 0, 69, 1705, 0, 1355,
	1355, 1355, 0, 995, 0, 0, 0, 0, 0, 0,
	0, 0, 73, 0, 0, 1694, 0, 995, 0, 1799,
	1799, 1799, 0, 0, 0, 1696, 0, 0, 0, 1671,
	1672, 1678, 1699, 1677, 1673, 0, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 85, 0,
	0, 1306, 0, 1681, 0, 0, 981, 0, 0, 0,
	0, 0, 100, 1333, 242, 0, 0, 86, 97, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 242, 0, 0, 0, 0,
	0, 0, 0, 0, 242, 0, 0, 0, 1306, 242,
	0, 0, 0, 242, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2421, 2422, 2423, 2424, 2417, 2418,
	2419, 2420, 87, 2585, 242, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2779, 2779, 0, 0, 0, 0, 811, 811, 2585,
	0, 0, 2733, 2733, 0, 0, 811, 2585, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1696, 0, 0, 242, 1671, 1672, 1678,
	1699, 1677, 1673, 0, 1670, 1668, 1669, 1661, 1662, 1663,
	1664, 1666, 1667, 2397, 2398, 2399, 2400, 3702, 0, 0,
	0, 3701, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2409, 2410, 2411, 2412, 2405, 2406, 2407,
	2408, 2413, 2414, 2415, 2416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2535, 0, 0, 0, 0, 1306, 3694, 0, 1306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2393, 2394, 2395, 2396, 2401,
	2402, 2403, 2404, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 93, 242, 96,
	0, 0, 0, 0, 1355, 0, 242, 0, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	0, 0, 0, 212, 0, 0, 1306, 0, 0, 0,
	0, 806, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2585, 2585, 2585, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1355,
	0, 0, 0, 0, 0, 214, 0, 2585, 0, 3133,
	0, 0, 1355, 1355, 242, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 242, 1333, 242,
	140, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2585, 0, 2585, 242, 0, 177, 0, 0, 0, 0,
	0, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 2585, 0,
	0, 0, 207, 3833, 0, 0, 0, 0, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 242, 0, 0, 176, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1306, 0, 0, 0, 0, 1355, 0, 0, 2222, 0,
	2226, 0, 0, 0, 0, 0, 0, 2240, 0, 0,
	0, 0, 0, 0, 2249, 2250, 2251, 2252, 2253, 2254,
	2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264,
	2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274,
	2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 0,
	2289, 0, 2291, 2292, 2293, 2294, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1728, 0, 0, 0, 2333,
	0, 0, 0, 0, 0, 0, 2585, 0, 3133, 0,
	0, 3927, 0, 0, 0, 2363, 2366, 2369, 2372, 242,
	2376, 2377, 2378, 2379, 2380, 2381, 2382, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 676, 0, 0, 2442, 0,
	2453, 2455, 2460, 0, 1318, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1041, 0, 1333, 242,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3927, 0,
	0, 0, 0, 0, 0, 0, 2585, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4007, 0,
	243, 243, 243, 0, 0, 0, 0, 0, 1657, 1658,
	1355, 1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 1693,
	1688, 0, 0, 0, 1306, 0, 0, 1660, 0, 242,
	242, 0, 0, 0, 0, 1706, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 0, 3396, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 0, 0, 0, 0, 0, 0, 3927,
	0, 1679, 0, 0, 0, 0, 0, 0, 0, 1676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 242,
	1682, 1683, 1684, 1685, 0, 0, 0, 0, 3133, 0,
	1665, 0, 0, 0, 0, 0, 1306, 0, 1306, 0,
	0, 0, 2693, 2694, 0, 2696, 0, 0, 0, 0,
	0, 0, 0, 0, 1355, 0, 1355, 0, 0, 0,
	0, 1306, 0, 0, 0, 1697, 0, 0, 1707, 0,
	0, 0, 0, 0, 1687, 1689, 0, 0, 0, 0,
	0, 4146, 788, 0, 0, 0, 0, 0, 1355, 0,
	1703, 242, 1704, 0, 0, 0, 0, 0, 0, 1674,
	1675, 0, 0, 0, 0, 0, 772, 0, 242, 2585,
	0, 1306, 0, 0, 0, 0, 0, 1695, 0, 1306,
	0, 0, 0, 0, 0, 0, 242, 0, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 773, 0, 0, 0, 0, 0,
	3396, 0, 0, 0, 0, 774, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 775, 1306, 1657, 1658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1694, 0,
	0, 0, 2831, 0, 0, 794, 0, 0, 0, 1688,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 776, 0, 0, 0, 0, 0,
	0, 0, 3927, 1657, 1658, 0, 0, 0, 0, 1306,
	0, 0, 0, 0, 0, 0, 0, 777, 0, 0,
	1659, 0, 1710, 1711, 0, 1688, 1686, 0, 0, 0,
	1679, 0, 1660, 1355, 0, 2585, 0, 778, 1676, 1306,
	779, 0, 0, 0, 0, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 701, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 1698, 0, 0, 0, 0, 1679, 2879, 2880, 793,
	1306, 0, 0, 2886, 1676, 0, 0, 0, 0, 2885,
	0, 0, 0, 0, 0, 0, 1306, 0, 0, 0,
	0, 0, 2900, 2901, 0, 0, 0, 0, 2333, 1682,
	1683, 1684, 1685, 0, 0, 0, 0, 2908, 0, 1665,
	0, 2585, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 995, 2922, 0, 2779, 790, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1306, 2779,
	2934, 0, 0, 0, 0, 1682, 1683, 1684, 1685, 0,
	0, 0, 0, 1687, 1689, 1665, 1696, 0, 0, 0,
	1671, 1672, 1678, 1699, 1677, 1673, 0, 1670, 1668, 1669,
	1661, 1662, 1663, 1664, 1666, 1667, 0, 0, 1674, 1675,
	2943, 0, 0, 0, 2944, 0, 0, 1306, 0, 0,
	0, 0, 781, 0, 0, 0, 0, 0, 0, 1687,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 0, 800,
	0, 782, 0, 0, 1674, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2460,
	2460, 2460, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 700, 1799, 0, 1680, 0, 0, 0,
	783, 0, 3049, 0, 798, 799, 796, 0, 0, 0,
	0, 0, 791, 0, 0, 784, 243, 1226, 243, 243,
	0, 1226, 243, 243, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 785, 792, 0, 0, 0, 0, 1226, 0,
	0, 786, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 0, 995, 995, 0, 787, 0, 0, 0, 981,
	795, 1226, 0, 243, 243, 1681, 0, 0, 0, 0,
	0, 0, 0, 981, 702, 0, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 789, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 243, 0, 243, 243,
	0, 3150, 243, 0, 1226, 0, 0, 0, 0, 0,
	1226, 1681, 0, 0, 1226, 243, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 995, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1657, 1658, 0, 1690, 1691,
	1692, 1700, 1701, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1693, 1688, 0, 0,
	1226, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 1706, 1677, 1673, 0, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 0, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 1679, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 0, 1677,
	1673, 0, 1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666,
	1667, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 1683, 1684,
	1685, 0, 0, 0, 0, 0, 0, 1665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1697, 0, 0, 1707, 1657, 1658, 0, 0,
	0, 1687, 1689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2240, 0, 0, 1703, 1688, 1704,
	3350, 3351, 0, 0, 3354, 1660, 1674, 1675, 3357, 0,
	0, 0, 0, 0, 0, 0, 0, 3361, 0, 0,
	0, 0, 0, 0, 1695, 0, 3368, 0, 0, 3049,
	0, 0, 0, 0, 0, 0, 0, 0, 1680, 1659,
	0, 0, 0, 0, 3380, 0, 0, 0, 0, 1679,
	0, 0, 0, 0, 0, 0, 0, 1676, 0, 0,
	0, 0, 0, 0, 3403, 3404, 0, 3405, 3406, 3407,
	0, 0, 243, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 1226, 0, 0, 0, 243, 243, 243,
	0, 0, 0, 0, 243, 1694, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 2878, 3413,
	0, 0, 1226, 3415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1682, 1683,
	1684, 1685, 0, 0, 0, 0, 1226, 0, 1665, 0,
	0, 0, 0, 0, 3443, 3444, 0, 0, 0, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 0, 3455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 0, 0, 0, 3464, 0, 0,
	0, 0, 1687, 1689, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1698, 0,
	0, 0, 0, 0, 0, 0, 0, 1674, 1675, 0,
	68, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1680,
	0, 3504, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 68, 0, 3513, 3516, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 69, 243, 1226, 1226, 243, 0, 0, 0, 0,
	0, 79, 0, 1226, 0, 3537, 0, 73, 0, 0,
	0, 0, 0, 1696, 0, 0, 0, 1671, 1672, 1678,
	1699, 1677, 1673, 0, 1670, 1668, 1669, 1661, 1662, 1663,
	1664, 1666, 1667, 0, 0, 0, 0, 2329, 85, 0,
	0, 2330, 0, 0, 0, 243, 79, 0, 0, 243,
	0, 0, 100, 0, 0, 0, 243, 86, 97, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1686, 243, 0, 243, 0, 243,
	0, 0, 0, 85, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1681, 0, 0, 100, 0, 0,
	0, 0, 86, 97, 0, 0, 0, 0, 1799, 243,
	0, 0, 87, 0, 0, 0, 243, 3626, 0, 0,
	0, 0, 0, 0, 1144, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1226, 0, 1226, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 0, 0,
	0, 0, 0, 0, 1226, 1226, 68, 0, 237, 237,
	623, 0, 0, 0, 0, 1226, 243, 0, 0, 243,
	0, 0, 69, 0, 0, 0, 0, 1226, 0, 1226,
	1226, 1226, 0, 0, 0, 3672, 3673, 0, 73, 0,
	243, 3677, 3678, 0, 0, 0, 3681, 3682, 0, 0,
	0, 243, 243, 3686, 243, 0, 243, 0, 243, 0,
	243, 0, 1677, 1673, 3690, 1670, 1668, 1669, 1661, 1662,
	1663, 1664, 1666, 1667, 1028, 0, 0, 79, 0, 0,
	3695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	90, 0, 0, 0, 0, 0, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 85, 0, 0, 0, 241, 241,
	241, 0, 0, 0, 0, 0, 0, 0, 100, 0,
	0, 0, 0, 86, 97, 90, 173, 93, 0, 96,
	0, 0, 0, 0, 715, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 212, 0, 0, 0, 0, 715, 0,
	0, 806, 0, 0, 0, 138, 0, 0, 0, 0,
	0, 173, 93, 0, 96, 0, 0, 0, 87, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3516, 0, 0, 0, 0, 214, 0, 0, 212, 0,
	0, 0, 0, 0, 0, 0, 806, 0, 0, 0,
	138, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	140, 0, 0, 1226, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 177, 0, 0, 0, 0,
	214, 0, 0, 213, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 206, 0, 0, 0, 0, 0,
	0, 0, 207, 0, 0, 140, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	177, 0, 0, 0, 176, 0, 0, 0, 213, 0,
	0, 0, 1226, 0, 0, 0, 0, 0, 0, 206,
	0, 0, 0, 0, 0, 0, 0, 207, 0, 0,
	0, 0, 0, 0, 3516, 243, 90, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1499,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3893, 3894, 3895,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 173, 93, 0, 96, 0, 0, 0, 0,
	2240, 0, 0, 3904, 3905, 0, 0, 243, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 212,
	0, 3913, 0, 0, 0, 0, 0, 806, 0, 0,
	0, 138, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 214, 0, 0, 243, 0, 0, 3516, 0, 0,
	0, 0, 0, 0, 0, 3952, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 3959, 140, 0, 981, 243,
	0, 0, 0, 0, 0, 0, 0, 3967, 0, 0,
	0, 177, 0, 0, 0, 0, 243, 1226, 0, 213,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	206, 1226, 0, 0, 0, 0, 0, 0, 207, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 1657,
	1658, 0, 1690, 1691, 1692, 1700, 1701, 1702, 0, 0,
	1497, 0, 0, 0, 0, 0, 0, 0, 0, 243,
	1693, 1688, 1226, 0, 0, 0, 0, 243, 1660, 0,
	0, 0, 0, 0, 3516, 3516, 1706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 243, 0, 0,
	243, 0, 1659, 0, 243, 0, 243, 0, 0, 0,
	0, 0, 1679, 243, 243, 0, 0, 0, 1226, 1226,
	1676, 1226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1226, 0, 4068, 0, 0, 4071, 0,
	0, 0, 0, 0, 243, 0, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 3516, 0, 0,
	0, 0, 0, 243, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 1217, 0, 0, 0, 0, 0,
	1325, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1682, 1683, 1684, 1685, 0, 0, 0, 981, 981,
	0, 1665, 0, 243, 243, 243, 243, 0, 243, 3516,
	243, 0, 3516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1697, 0, 0, 1707,
	0, 243, 0, 0, 0, 1687, 1689, 0, 0, 243,
	0, 0, 0, 0, 1438, 0, 2240, 0, 0, 0,
	0, 1703, 0, 1704, 0, 0, 0, 0, 0, 0,
	1674, 1675, 0, 0, 1461, 0, 1461, 1461, 0, 0,
	0, 0, 0, 0, 241, 0, 241, 241, 1695, 981,
	241, 241, 0, 1503, 1504, 0, 0, 1657, 1658, 0,
	0, 0, 1680, 1700, 1701, 1702, 715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1688,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 4206, 4206, 4206, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 241, 0, 0, 0, 0, 0, 0, 4227,
	1659, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 0, 1676, 0,
	0, 1017, 102, 0, 241, 0, 241, 241, 1610, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 241, 0, 4206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1681, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	1683, 1684, 1685, 0, 3516, 0, 3516, 0, 0, 1665,
	0, 0, 1698, 0, 0, 0, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 1707, 241, 0,
	0, 0, 0, 1687, 1689, 0, 0, 0, 0, 0,
	0, 0, 1226, 4206, 4336, 241, 0, 0, 0, 0,
	0, 4340, 0, 0, 0, 0, 0, 1226, 1674, 1675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1695, 956, 1226, 0,
	0, 0, 0, 0, 0, 0, 0, 1696, 976, 0,
	1680, 1671, 1672, 1678, 1699, 1677, 1673, 0, 1670, 1668,
	1669, 1661, 1662, 1663, 1664, 1666, 1667, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1138, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 243, 243, 0, 243,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	1837, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	243, 1226, 0, 0, 0, 1846, 0, 1325, 0, 0,
	0, 1226, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	0, 243, 1226, 0, 1226, 1681, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 243, 0, 0, 1226, 243, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 1821, 0, 1151, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 1821, 241, 0, 0,
	0, 0, 715, 0, 0, 243, 0, 715, 0, 243,
	243, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1226, 1226,
	0, 0, 0, 0, 0, 0, 243, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 1696, 0, 0, 0, 0,
	0, 0, 1699, 1677, 1673, 733, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 243, 1226, 243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 734, 0, 751, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 2046, 0, 0, 0, 2053, 0, 735,
	0, 0, 0, 0, 736, 0, 0, 0, 0, 0,
	2065, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1438, 759, 2076, 0, 2076, 0, 1226,
	737, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 757, 0, 0, 1226, 0, 0, 0,
	241, 0, 0, 715, 0, 0, 0, 1461, 0, 0,
	0, 0, 0, 0, 1325, 0, 738, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 739, 0, 0, 740,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	761, 0, 0, 241, 701, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 2053, 0, 0, 2135, 0, 0,
	0, 0, 0, 241, 0, 241, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2165, 0, 2167, 0, 2169, 0, 2171, 241, 2172, 0,
	0, 0, 0, 0, 241, 0, 760, 0, 0, 0,
	0, 0, 0, 0, 0, 755, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 0, 0, 0, 0, 2194, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 102, 0, 102,
	0, 0, 0, 0, 1064, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 0, 0, 241, 0, 0,
	741, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 743, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 715,
	241, 0, 241, 0, 241, 0, 241, 0, 241, 0,
	744, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 0, 0, 0, 976, 102, 102, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 102, 0,
	102, 243, 700, 0, 0, 0, 241, 0, 0, 0,
	102, 0, 102, 731, 0, 752, 0, 1226, 0, 0,
	243, 0, 0, 0, 745, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 243, 0, 0, 0, 0, 0, 750, 0, 0,
	243, 0, 0, 0, 0, 243, 0, 0, 0, 243,
	0, 746, 0, 0, 764, 1226, 763, 0, 0, 0,
	747, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 748, 0, 0, 0, 0, 756,
	0, 0, 0, 0, 0, 765, 0, 762, 0, 1226,
	1226, 1226, 0, 702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	0, 0, 0, 2516, 0, 0, 0, 0, 0, 1155,
	0, 0, 243, 0, 1226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 0, 0,
	956, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1722, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 1727, 0, 0,
	0, 1733, 0, 1151, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1151,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1226, 0, 1226, 0,
	0, 0, 0, 0, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 241,
	0, 1226, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 1822, 0, 102, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2053, 0, 0,
	243, 0, 0, 0, 0, 2065, 0, 0, 0, 0,
	0, 1226, 241, 243, 0, 243, 0, 0, 0, 1226,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 243,
	0, 0, 0, 0, 0, 2755, 0, 241, 1461, 0,
	0, 0, 1461, 0, 1461, 0, 0, 1226, 1226, 0,
	0, 0, 0, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 243, 0,
	0, 0, 0, 0, 0, 0, 1226, 243, 0, 715,
	0, 1226, 2808, 0, 0, 0, 0, 1657, 1658, 0,
	1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0, 0,
	0, 2818, 0, 2821, 0, 0, 0, 241, 1693, 1688,
	0, 0, 0, 0, 0, 241, 1660, 0, 1226, 1226,
	1226, 0, 0, 0, 1706, 0, 0, 0, 0, 1226,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2843, 1325, 2845, 1325, 241, 2848, 0, 241, 0,
	1659, 0, 241, 0, 241, 0, 0, 0, 0, 1226,
	1679, 241, 241, 0, 0, 0, 0, 0, 1676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1461,
	0, 0, 0, 0, 0, 0, 0, 2876, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 0, 0, 0,
	1226, 0, 1226, 0, 0, 0, 0, 0, 0, 0,
	0, 241, 0, 241, 0, 0, 1226, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	1683, 1684, 1685, 0, 0, 0, 0, 0, 0, 1665,
	0, 241, 241, 241, 241, 0, 241, 0, 241, 0,
	0, 0, 0, 0, 0, 1155, 0, 0, 1226, 1155,
	0, 0, 0, 1155, 0, 243, 0, 0, 0, 1226,
	1226, 0, 0, 0, 1697, 0, 0, 1707, 0, 241,
	0, 0, 0, 1687, 1689, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 1155, 0, 0, 1703,
	0, 1704, 0, 0, 0, 0, 0, 1226, 1674, 1675,
	1226, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 0, 0, 1695, 0, 0, 976,
	0, 976, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 243, 243, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1155, 0, 0, 0, 0, 0, 1155, 0,
	0, 0, 1155, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 1155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 243, 0, 0, 1226, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 1226, 1226,
	0, 956, 0, 0, 956, 956, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1226, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3124, 0, 0, 0, 0, 0, 0, 1151, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1151, 0, 0, 0, 0, 243, 0, 2307,
	0, 0, 0, 0, 3165, 3167, 0, 2065, 0, 0,
	0, 0, 0, 0, 243, 976, 0, 0, 0, 0,
	0, 0, 1821, 0, 1727, 0, 0, 0, 1727, 0,
	0, 0, 243, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1696, 0, 0, 0, 1671,
	1672, 1678, 1699, 1677, 1673, 0, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 0, 0, 0, 0, 0,
	241, 0, 0, 3366, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1138, 3236, 0, 0, 0, 3240, 0, 0, 0, 0,
	0, 0, 0, 0, 241, 241, 1822, 241, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 0, 1461, 0, 0, 0, 1325, 1325, 0,
	0, 0, 0, 0, 1155, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1155, 0, 0, 3299, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 715, 0, 0, 0, 0, 0, 0,
	1155, 241, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 247, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1155, 3336, 0, 1325, 0, 0,
	0, 0, 0, 0, 1151, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 241, 241, 0,
	3348, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 0, 0,
	0, 0, 707, 0, 241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 707, 0, 0, 0,
	102, 0, 0, 102, 0, 102, 0, 0, 1657, 1658,
	0, 1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 241, 0, 1693,
	1688, 0, 0, 0, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 102, 0, 0,
	102, 1155, 1155, 0, 0, 0, 0, 0, 0, 0,
	241, 1155, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 102, 0, 0, 0, 1676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	102, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1682, 1683, 1684, 1685, 0, 0, 0, 0, 0, 0,
	1665, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1155, 0, 1155, 1697, 1155, 0, 1707, 0,
	0, 0, 0, 0, 1687, 1689, 0, 0, 0, 0,
	0, 0, 1155, 1155, 0, 0, 0, 0, 0, 0,
	1703, 0, 1704, 1155, 0, 1151, 1151, 0, 0, 1674,
	1675, 0, 0, 0, 0, 1155, 0, 1155, 1155, 1155,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	2307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1727, 0, 0, 0, 0, 0, 0, 2065, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2065,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3593,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1033, 0, 2065, 0, 0, 0, 3608, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 1877, 1155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	3657, 0, 0, 0, 0, 0, 1681, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 241,
	0, 0, 0, 0, 0, 0, 0, 0, 241, 0,
	0, 1698, 0, 241, 0, 0, 0, 241, 0, 0,
	0, 0, 0, 0, 1138, 0, 0, 0, 0, 0,
	0, 1155, 0, 0, 0, 0, 0, 0, 1151, 1138,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	241, 0, 0, 1155, 0, 0, 0, 0, 0, 0,
	1155, 0, 0, 0, 0, 0, 1696, 0, 0, 1155,
	1671, 1672, 1678, 1699, 1677, 1673, 0, 1670, 1668, 1669,
	1661, 1662, 1663, 1664, 1666, 1667, 1155, 0, 0, 0,
	0, 0, 0, 0, 2946, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 102, 0, 0, 102, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 0, 1223, 0, 0,
	0, 1343, 0, 0, 0, 0, 0, 0, 3780, 0,
	102, 102, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 2065, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 1151, 0, 0, 0, 0, 1155, 0, 0,
	1151, 0, 0, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2065, 1877, 0, 0,
	0, 0, 0, 0, 0, 3849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1343, 0, 0, 0, 0, 1155, 1343, 0, 0, 0,
	1343, 1138, 0, 0, 976, 0, 0, 0, 241, 1155,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 0,
	0, 241, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 102, 241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1155, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 0, 0, 0,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1155, 1155, 0, 1155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1155, 0, 3934, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2065, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4046, 1325, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 241, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 0,
	0, 0, 1224, 0, 0, 0, 1224, 0, 0, 0,
	1344, 0, 1138, 1138, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	707, 0, 0, 241, 241, 707, 1344, 0, 0, 0,
	0, 0, 0, 4113, 0, 0, 0, 0, 1343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4154, 0, 0, 0, 0,
	241, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4176, 0, 0, 0, 0, 1155, 1155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4188, 0, 1155, 241, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1155, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 1155, 0, 0, 1155, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1877, 0, 0, 1138, 1155, 0, 0, 1343,
	1343, 0, 0, 0, 0, 0, 0, 0, 0, 1223,
	0, 0, 0, 0, 0, 241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 241, 0, 0, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 102, 0, 0, 0, 0, 0,
	241, 0, 0, 0, 1155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 0, 0, 0, 0, 1155, 0,
	0, 0, 0, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1155, 0, 0, 0, 0, 0,
	1155, 0, 1155, 0, 0, 0, 1155, 0, 0, 0,
	1343, 0, 1343, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1155, 0, 0, 0, 0, 0,
	1343, 1343, 0, 102, 0, 0, 0, 0, 1155, 1138,
	0, 1343, 0, 0, 0, 0, 0, 1138, 0, 0,
	0, 0, 0, 1343, 1155, 1343, 1343, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 707, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1224, 0,
	0, 0, 0, 0, 0, 0, 1155, 1155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1344, 1155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1155, 0, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 102, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 1658, 0, 1690, 1691, 1692,
	1700, 1701, 1702, 0, 102, 0, 0, 0, 0, 0,
	1877, 0, 0, 0, 0, 1693, 1688, 0, 0, 0,
	0, 0, 0, 1660, 0, 0, 0, 1155, 0, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 1877, 0, 1659, 0, 1223,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 0, 0, 1676, 0, 0, 1344, 1344,
	0, 0, 0, 0, 0, 0, 0, 0, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1877, 1877, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 0, 1682, 1683, 1684, 1685,
	0, 0, 0, 0, 1223, 0, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 1155, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1697, 0, 0, 1707, 0, 0, 0, 1155, 0,
	1687, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 1704, 0,
	0, 0, 0, 0, 0, 1674, 1675, 0, 0, 1344,
	0, 1344, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 0, 2307, 0, 0, 0, 1344,
	1344, 0, 0, 0, 0, 1223, 0, 1680, 0, 0,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 1344, 1344, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1155, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 102, 0, 0, 1343, 0,
	0, 0, 1686, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 1155, 0,
	0, 1224, 1681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1155, 1155, 1155,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 1155, 1343, 1343, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1343,
	0, 0, 1155, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1877, 0, 0, 1224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 102,
	0, 0, 102, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1696, 0, 0, 0, 1671, 1672, 1678, 1699,
	1677, 1673, 0, 1670, 1668, 1669, 1661, 1662, 1663, 1664,
	1666, 1667, 0, 0, 0, 0, 0, 0, 0, 0,
	2945, 0, 0, 0, 0, 0, 0, 1224, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1155, 1224, 0, 0, 0, 0, 0, 0,
	1155, 0, 0, 0, 1155, 0, 1155, 0, 0, 0,
	0, 0, 0, 1155, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1155,
	0, 0, 0, 0, 0, 0, 0, 1155, 0, 0,
	0, 0, 0, 0, 1224, 0, 0, 1657, 1658, 0,
	1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1155, 1155, 0, 1693, 1688,
	0, 0, 0, 0, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 1155, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1155, 0, 0, 0, 0, 1155,
	0, 0, 1224, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 1344, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 0, 1676, 0,
	0, 0, 0, 0, 0, 0, 1155, 1155, 1155, 0,
	0, 0, 0, 0, 0, 0, 0, 1155, 0, 0,
	0, 0, 0, 0, 0, 0, 1223, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1223, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1877, 1682,
	1683, 1684, 1685, 1223, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 1344, 1344, 0, 1344, 0, 1155, 0,
	1155, 0, 0, 0, 1223, 0, 0, 0, 1344, 0,
	0, 0, 0, 0, 1155, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 1697, 0, 0, 1707, 0, 0,
	0, 0, 0, 1687, 1689, 0, 0, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1703,
	0, 1704, 0, 0, 0, 0, 0, 0, 1674, 1675,
	0, 0, 1343, 0, 0, 0, 1155, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1695, 1155, 1155, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1223, 0, 0,
	0, 0, 0, 0, 0, 1155, 1343, 0, 1155, 0,
	0, 1343, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1343, 0, 0, 0, 0, 1694, 1343, 0,
	1343, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 707, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1343, 1877, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 1343, 0, 0, 0, 0,
	1698, 1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702,
	0, 0, 0, 0, 0, 0, 1343, 0, 0, 0,
	0, 0, 1693, 1688, 0, 0, 1155, 0, 0, 0,
	1660, 0, 0, 0, 0, 0, 1155, 1155, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1223, 0, 1155, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1696, 0, 0, 0, 1671,
	1672, 1678, 1699, 1677, 1673, 1224, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 2942, 0, 1223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1224, 0, 0,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1224, 1682, 1683, 1684, 1685, 0, 0, 0,
	0, 0, 0, 1665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1697, 0,
	0, 1707, 0, 0, 0, 0, 0, 1687, 1689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 1704, 0, 0, 0, 0,
	0, 1344, 1674, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 1344, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 1223, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 1344, 0, 1344,
	0, 1694, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 1344, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 1343, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 1343, 1343, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1696,
	0, 1343, 0, 1671, 1672, 1678, 1699, 1677, 1673, 0,
	1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0,
	1223, 0, 0, 0, 1224, 0, 0, 2941, 0, 1657,
	1658, 0, 1690, 1691, 1692, 1700, 1701, 1702, 0, 0,
	0, 1224, 1223, 0, 0, 0, 0, 0, 0, 0,
	1693, 1688, 0, 0, 0, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 0, 1706, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1679, 0, 0, 0, 0, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702,
	0, 0, 1223, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 1693, 1688, 0, 0, 0, 0, 0, 0,
	1660, 1682, 1683, 1684, 1685, 0, 0, 1223, 1706, 0,
	0, 1665, 0, 0, 0, 1224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1679, 0, 1697, 0, 0, 1707,
	0, 0, 1676, 0, 0, 1687, 1689, 1223, 0, 0,
	0, 0, 0, 0, 0, 1223, 0, 0, 0, 0,
	0, 1703, 0, 1704, 0, 0, 0, 0, 0, 0,
	1674, 1675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1343, 1343, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1343, 1680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1223, 1682, 1683, 1684, 1685, 1343, 0, 0,
	0, 0, 0, 1665, 0, 0, 0, 0, 0, 0,
	0, 0, 1344, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1343, 1343, 1343, 0, 1697, 1694,
	0, 1707, 0, 0, 0, 1223, 0, 1687, 1689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1344, 0, 0, 1703, 0, 1704, 0, 0, 0, 0,
	0, 0, 1674, 1675, 0, 1223, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 0, 0, 0, 1344, 1344, 1344, 1686, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 0, 0, 1223, 1681, 1343, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1224,
	0, 0, 1223, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1698, 1705, 0, 0, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1223, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1343, 1343, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1223, 0, 0, 1343, 1696, 0, 1681,
	0, 1671, 1672, 1678, 1699, 1677, 1673, 0, 1670, 1668,
	1669, 1661, 1662, 1663, 1664, 1666, 1667, 0, 0, 0,
	0, 0, 0, 0, 1698, 2940, 0, 0, 0, 0,
	0, 1224, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1224, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1224, 0, 0, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 1696,
	0, 0, 0, 1671, 1672, 1678, 1699, 1677, 1673, 0,
	1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0,
	0, 0, 1344, 1344, 0, 0, 0, 2330, 0, 0,
	0, 0, 0, 0, 1343, 0, 0, 0, 0, 0,
	1344, 0, 0, 0, 1343, 1343, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 1344, 0, 0, 0,
	0, 1343, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 1344, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1224, 0, 1344, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1224, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1224, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1344, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1224, 0, 0, 1344, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1221, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1344, 1344, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 1227, 257, 258, 1228, 1229, 1230,
	1344, 1231, 569, 1232, 1233, 1234, 1235, 259, 260, 1095,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 1236, 574, 268, 269, 270, 271, 272, 273,
	1237, 1238, 0, 274, 575, 576, 577, 1239, 275, 276,
	578, 1240, 1307, 1241, 277, 278, 279, 280, 281, 282,
	283, 0, 1242, 285, 286, 287, 284, 1243, 288, 0,
	289, 290, 291, 292, 293, 294, 1244, 295, 296, 297,
	1096, 298, 299, 1245, 1246, 1248, 1247, 1249, 1250, 1251,
	300, 301, 302, 303, 0, 304, 579, 580, 1252, 308,
	305, 306, 1253, 309, 307, 1254, 310, 311, 312, 1255,
	1256, 313, 314, 315, 1257, 316, 317, 1258, 318, 319,
	320, 1259, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 1260, 248, 1261,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 1262, 338, 1263, 1264, 1097, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 1265,
	349, 587, 1266, 588, 350, 1267, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 1099, 356, 357, 1268, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	1269, 1098, 364, 592, 593, 1270, 594, 1271, 366, 367,
	1100, 595, 1101, 368, 369, 370, 1102, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 1272, 378, 380,
	379, 1273, 381, 596, 1103, 382, 383, 1104, 1274, 384,
	0, 0, 0, 385, 386, 1275, 1276, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 1105, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 1106, 415, 1277, 250,
	1107, 424, 425, 1278, 597, 426, 598, 428, 429, 1279,
	0, 430, 0, 1280, 1281, 432, 433, 434, 1282, 1283,
	435, 436, 599, 1108, 437, 1109, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 1284, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 1285, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 1286, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 1287, 480, 481, 482, 1110,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 1288, 503,
	504, 502, 505, 506, 507, 1289, 508, 492, 493, 509,
	510, 1111, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 1290, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 1291, 529, 530, 0, 528,
	1292, 531, 532, 533, 534, 535, 536, 328, 537, 1293,
	538, 610, 611, 612, 613, 1294, 547, 1295, 539, 540,
	541, 614, 542, 615, 1296, 543, 544, 545, 546, 0,
	548, 549, 1297, 1298, 550, 551, 552, 554, 555, 553,
	556, 1299, 557, 1300, 0, 558, 559, 560, 616, 617,
	618, 1301, 562, 561, 563, 619, 1302, 1303, 1304, 1305,
	564, 565, 620, 566, 567, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1221,
	0, 0, 0, 0, 0, 0, 0, 2494, 0, 0,
	0, 0, 0, 0, 0, 2495, 251, 252, 253, 254,
	255, 256, 1227, 257, 258, 1228, 1229, 1230, 0, 1231,
	569, 1232, 1233, 1234, 1235, 259, 260, 1095, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	1236, 574, 268, 269, 270, 271, 272, 273, 1237, 1238,
	0, 274, 575, 576, 577, 1239, 275, 276, 578, 1240,
	1307, 1241, 277, 278, 279, 280, 281, 282, 283, 0,
	1242, 285, 286, 287, 284, 1243, 288, 0, 289, 290,
	291, 292, 293, 294, 1244, 295, 296, 297, 1096, 298,
	299, 1245, 1246, 1248, 1247, 1249, 1250, 1251, 300, 301,
	302, 303, 0, 304, 579, 580, 1252, 308, 305, 306,
	1253, 309, 307, 1254, 310, 311, 312, 1255, 1256, 313,
	314, 315, 1257, 316, 317, 1258, 318, 319, 320, 1259,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 1260, 248, 1261, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	1262, 338, 1263, 1264, 1097, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 1265, 349, 587,
	1266, 588, 350, 1267, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 1099, 356, 357, 1268, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 1269, 1098,
	364, 592, 593, 1270, 594, 1271, 366, 367, 1100, 595,
	1101, 368, 369, 370, 1102, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 1272, 378, 380, 379, 1273,
	381, 596, 1103, 382, 383, 1104, 1274, 384, 0, 0,
	0, 385, 386, 1275, 1276, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 1105, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 1106, 415, 1277, 250, 1107, 424,
	425, 1278, 597, 426, 598, 428, 429, 1279, 0, 430,
	0, 1280, 1281, 432, 433, 434, 1282, 1283, 435, 436,
	599, 1108, 437, 1109, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 1284, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 1285, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 1286, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 1287, 480, 481, 482, 1110, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 1288, 503, 504, 502,
	505, 506, 507, 1289, 508, 492, 493, 509, 510, 1111,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 1290,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 1291, 529, 530, 0, 528, 1292, 531,
	532, 533, 534, 535, 536, 328, 537, 1293, 538, 610,
	611, 612, 613, 1294, 547, 1295, 539, 540, 541, 614,
	542, 615, 1296, 543, 544, 545, 546, 0, 548, 549,
	1297, 1298, 550, 551, 552, 554, 555, 553, 556, 1299,
	557, 1300, 0, 558, 559, 560, 616, 617, 618, 1301,
	562, 561, 563, 619, 1302, 1303, 1304, 1305, 564, 565,
	620, 566, 567, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1221, 0, 0, 0, 0,
	3374, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3376, 251, 252, 253, 254, 255, 256, 1227, 257,
	258, 1228, 1229, 1230, 0, 1231, 569, 1232, 1233, 1234,
	1235, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 1236, 574, 268, 269,
	270, 271, 272, 273, 1237, 1238, 0, 274, 575, 576,
	577, 1239, 275, 276, 578, 1240, 1307, 1241, 277, 278,
	279, 280, 281, 282, 283, 0, 1242, 285, 286, 287,
	284, 1243, 288, 0, 289, 290, 291, 292, 293, 294,
	1244, 295, 296, 297, 1096, 298, 299, 1245, 1246, 1248,
	1247, 1249, 1250, 1251, 300, 301, 302, 303, 0, 304,
	579, 580, 1252, 308, 305, 306, 1253, 309, 307, 1254,
	310, 311, 312, 1255, 1256, 313, 314, 315, 1257, 316,
	317, 1258, 318, 319, 320, 1259, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 1260, 248, 1261, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 1262, 338, 1263, 1264,
	1097, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 1265, 349, 587, 1266, 588, 350, 1267,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 1099,
	356, 357, 1268, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 1269, 1098, 364, 592, 593, 1270,
	594, 1271, 366, 367, 1100, 595, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 1272, 378, 380, 379, 1273, 381, 596, 1103, 382,
	383, 1104, 1274, 384, 0, 0, 0, 385, 386, 1275,
	1276, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 1277, 250, 1107, 424, 425, 1278, 597, 426,
	598, 428, 429, 1279, 0, 430, 0, 1280, 1281, 432,
	433, 434, 1282, 1283, 435, 436, 599, 1108, 437, 1109,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 1284, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 1285, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 1286, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 1287,
	480, 481, 482, 1110, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 1288, 503, 504, 502, 505, 506, 507, 1289,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 1290, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 1291,
	529, 530, 0, 528, 1292, 531, 532, 533, 534, 535,
	536, 328, 537, 1293, 538, 610, 611, 612, 613, 1294,
	547, 1295, 539, 540, 541, 614, 542, 615, 1296, 543,
	544, 545, 546, 0, 548, 549, 1297, 1298, 550, 551,
	552, 554, 555, 553, 556, 1299, 557, 1300, 0, 558,
	559, 560, 616, 617, 618, 1301, 562, 561, 563, 619,
	1302, 1303, 1304, 1305, 564, 565, 620, 566, 567, 568,
	0, 0, 0, 0, 0, 1221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3728, 251, 252, 253, 254, 255, 256, 1227, 257,
	258, 1228, 1229, 1230, 0, 1231, 569, 1232, 1233, 1234,
	1235, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 1236, 574, 268, 269,
	270, 271, 272, 273, 1237, 1238, 0, 274, 575, 576,
	577, 1239, 275, 276, 578, 1240, 1307, 1241, 277, 278,
	279, 280, 281, 282, 283, 0, 1242, 285, 286, 287,
	284, 1243, 288, 0, 289, 290, 291, 292, 293, 294,
	1244, 295, 296, 297, 1096, 298, 299, 1245, 1246, 1248,
	1247, 1249, 1250, 1251, 300, 301, 302, 303, 0, 304,
	579, 580, 1252, 308, 305, 306, 1253, 309, 307, 1254,
	310, 311, 312, 1255, 1256, 313, 314, 315, 1257, 316,
	317, 1258, 318, 319, 320, 1259, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 1260, 248, 1261, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 1262, 338, 1263, 1264,
	1097, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 1265, 349, 587, 1266, 588, 350, 1267,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 1099,
	356, 357, 1268, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 1269, 1098, 364, 592, 593, 1270,
	594, 1271, 366, 367, 1100, 595, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 1272, 378, 380, 379, 1273, 381, 596, 1103, 382,
	383, 1104, 1274, 384, 0, 0, 0, 385, 386, 1275,
	1276, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 1277, 250, 1107, 424, 425, 1278, 597, 426,
	598, 428, 429, 1279, 0, 430, 0, 1280, 1281, 432,
	433, 434, 1282, 1283, 435, 436, 599, 1108, 437, 1109,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 1284, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 1285, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 1286, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 1287,
	480, 481, 482, 1110, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 1288, 503, 504, 502, 505, 506, 507, 1289,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 1290, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 1291,
	529, 530, 0, 528, 1292, 531, 532, 533, 534, 535,
	536, 328, 537, 1293, 538, 610, 611, 612, 613, 1294,
	547, 1295, 539, 540, 541, 614, 542, 615, 1296, 543,
	544, 545, 546, 0, 548, 549, 1297, 1298, 550, 551,
	552, 554, 555, 553, 556, 1299, 557, 1300, 0, 558,
	559, 560, 616, 617, 618, 1301, 562, 561, 563, 619,
	1302, 1303, 1304, 1305, 564, 565, 620, 566, 567, 568,
	1221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3899, 251, 252, 253,
	254, 255, 256, 1227, 257, 258, 1228, 1229, 1230, 0,
	1231, 569, 1232, 1233, 1234, 1235, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 1236, 574, 268, 269, 270, 271, 272, 273, 1237,
	1238, 0, 274, 575, 576, 577, 1239, 275, 276, 578,
	1240, 1307, 1241, 277, 278, 279, 280, 281, 282, 283,
	0, 1242, 285, 286, 287, 284, 1243, 288, 0, 289,
	290, 291, 292, 293, 294, 1244, 295, 296, 297, 1096,
	298, 299, 1245, 1246, 1248, 1247, 1249, 1250, 1251, 300,
	301, 302, 303, 0, 304, 579, 580, 1252, 308, 305,
	306, 1253, 309, 307, 1254, 310, 311, 312, 1255, 1256,
	313, 314, 315, 1257, 316, 317, 1258, 318, 319, 320,
	1259, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 1260, 248, 1261, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 1262, 338, 1263, 1264, 1097, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 1265, 349,
	587, 1266, 588, 350, 1267, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 1099, 356, 357, 1268, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 1269,
	1098, 364, 592, 593, 1270, 594, 1271, 366, 367, 1100,
	595, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 1272, 378, 380, 379,
	1273, 381, 596, 1103, 382, 383, 1104, 1274, 384, 0,
	0, 0, 385, 386, 1275, 1276, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 1277, 250, 1107,
	424, 425, 1278, 597, 426, 598, 428, 429, 1279, 0,
	430, 0, 1280, 1281, 432, 433, 434, 1282, 1283, 435,
	436, 599, 1108, 437, 1109, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 1284, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 1285, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 1286, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 1287, 480, 481, 482, 1110, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 1288, 503, 504,
	502, 505, 506, 507, 1289, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	1290, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 1291, 529, 530, 0, 528, 1292,
	531, 532, 533, 534, 535, 536, 328, 537, 1293, 538,
	610, 611, 612, 613, 1294, 547, 1295, 539, 540, 541,
	614, 542, 615, 1296, 543, 544, 545, 546, 0, 548,
	549, 1297, 1298, 550, 551, 552, 554, 555, 553, 556,
	1299, 557, 1300, 0, 558, 559, 560, 616, 617, 618,
	1301, 562, 561, 563, 619, 1302, 1303, 1304, 1305, 564,
	565, 620, 566, 567, 568, 1221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3788, 251, 252, 253, 254, 255, 256, 1227, 257,
	258, 1228, 1229, 1230, 0, 1231, 569, 1232, 1233, 1234,
	1235, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 1236, 574, 268, 269,
	270, 271, 272, 273, 1237, 1238, 0, 274, 575, 576,
	577, 1239, 275, 276, 578, 1240, 1307, 1241, 277, 278,
	279, 280, 281, 282, 283, 0, 1242, 285, 286, 287,
	284, 1243, 288, 0, 289, 290, 291, 292, 293, 294,
	1244, 295, 296, 297, 1096, 298, 299, 1245, 1246, 1248,
	1247, 1249, 1250, 1251, 300, 301, 302, 303, 0, 304,
	579, 580, 1252, 308, 305, 306, 1253, 309, 307, 1254,
	310, 311, 312, 1255, 1256, 313, 314, 315, 1257, 316,
	317, 1258, 318, 319, 320, 1259, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 1260, 248, 1261, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 1262, 338, 1263, 1264,
	1097, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 1265, 349, 587, 1266, 588, 350, 1267,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 1099,
	356, 357, 1268, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 1269, 1098, 364, 592, 593, 1270,
	594, 1271, 366, 367, 1100, 595, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 1272, 378, 380, 379, 1273, 381, 596, 1103, 382,
	383, 1104, 1274, 384, 0, 0, 0, 385, 386, 1275,
	1276, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 1277, 250, 1107, 424, 425, 1278, 597, 426,
	598, 428, 429, 1279, 0, 430, 0, 1280, 1281, 432,
	433, 434, 1282, 1283, 435, 436, 599, 1108, 437, 1109,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 1284, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 1285, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 1286, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 1287,
	480, 481, 482, 1110, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 1288, 503, 504, 502, 505, 506, 507, 1289,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 1290, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 1291,
	529, 530, 0, 528, 1292, 531, 532, 533, 534, 535,
	536, 328, 537, 1293, 538, 610, 611, 612, 613, 1294,
	547, 1295, 539, 540, 541, 614, 542, 615, 1296, 543,
	544, 545, 546, 0, 548, 549, 1297, 1298, 550, 551,
	552, 554, 555, 553, 556, 1299, 557, 1300, 0, 558,
	559, 560, 616, 617, 618, 1301, 562, 561, 563, 619,
	1302, 1303, 1304, 1305, 564, 565, 620, 566, 567, 568,
	1221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3658, 251, 252, 253,
	254, 255, 256, 1227, 257, 258, 1228, 1229, 1230, 0,
	1231, 569, 1232, 1233, 1234, 1235, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 1236, 574, 268, 269, 270, 271, 272, 273, 1237,
	1238, 0, 274, 575, 576, 577, 1239, 275, 276, 578,
	1240, 1307, 1241, 277, 278, 279, 280, 281, 282, 283,
	0, 1242, 285, 286, 287, 284, 1243, 288, 0, 289,
	290, 291, 292, 293, 294, 1244, 295, 296, 297, 1096,
	298, 299, 1245, 1246, 1248, 1247, 1249, 1250, 1251, 300,
	301, 302, 303, 0, 304, 579, 580, 1252, 308, 305,
	306, 1253, 309, 307, 1254, 310, 311, 312, 1255, 1256,
	313, 314, 315, 1257, 316, 317, 1258, 318, 319, 320,
	1259, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 1260, 248, 1261, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 1262, 338, 1263, 1264, 1097, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 1265, 349,
	587, 1266, 588, 350, 1267, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 1099, 356, 357, 1268, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 1269,
	1098, 364, 592, 593, 1270, 594, 1271, 366, 367, 1100,
	595, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 1272, 378, 380, 379,
	1273, 381, 596, 1103, 382, 383, 1104, 1274, 384, 0,
	0, 0, 385, 386, 1275, 1276, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 1277, 250, 1107,
	424, 425, 1278, 597, 426, 598, 428, 429, 1279, 0,
	430, 0, 1280, 1281, 432, 433, 434, 1282, 1283, 435,
	436, 599, 1108, 437, 1109, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 1284, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 1285, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 1286, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 1287, 480, 481, 482, 1110, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 1288, 503, 504,
	502, 505, 506, 507, 1289, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	1290, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 1291, 529, 530, 0, 528, 1292,
	531, 532, 533, 534, 535, 536, 328, 537, 1293, 538,
	610, 611, 612, 613, 1294, 547, 1295, 539, 540, 541,
	614, 542, 615, 1296, 543, 544, 545, 546, 0, 548,
	549, 1297, 1298, 550, 551, 552, 554, 555, 553, 556,
	1299, 557, 1300, 0, 558, 559, 560, 616, 617, 618,
	1301, 562, 561, 563, 619, 1302, 1303, 1304, 1305, 564,
	565, 620, 566, 567, 568, 1221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3392, 251, 252, 253, 254, 255, 256, 1227, 257,
	258, 1228, 1229, 1230, 0, 1231, 569, 1232, 1233, 1234,
	1235, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 1236, 574, 268, 269,
	270, 271, 272, 273, 1237, 1238, 0, 274, 575, 576,
	577, 1239, 275, 276, 578, 1240, 1307, 1241, 277, 278,
	279, 280, 281, 282, 283, 0, 1242, 285, 286, 287,
	284, 1243, 288, 0, 289, 290, 291, 292, 293, 294,
	1244, 295, 296, 297, 1096, 298, 299, 1245, 1246, 1248,
	1247, 1249, 1250, 1251, 300, 301, 302, 303, 0, 304,
	579, 580, 1252, 308, 305, 306, 1253, 309, 307, 1254,
	310, 311, 312, 1255, 1256, 313, 314, 315, 1257, 316,
	317, 1258, 318, 319, 320, 1259, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 1260, 248, 1261, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 1262, 338, 1263, 1264,
	1097, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 1265, 349, 587, 1266, 588, 350, 1267,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 1099,
	356, 357, 1268, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 1269, 1098, 364, 592, 593, 1270,
	594, 1271, 366, 367, 1100, 595, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 1272, 378, 380, 379, 1273, 381, 596, 1103, 382,
	383, 1104, 1274, 384, 0, 0, 0, 385, 386, 1275,
	1276, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 1277, 250, 1107, 424, 425, 1278, 597, 426,
	598, 428, 429, 1279, 0, 430, 0, 1280, 1281, 432,
	433, 434, 1282, 1283, 435, 436, 599, 1108, 437, 1109,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 1284, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 1285, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 1286, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 1287,
	480, 481, 482, 1110, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 1288, 503, 504, 502, 505, 506, 507, 1289,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 1290, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 1291,
	529, 530, 0, 528, 1292, 531, 532, 533, 534, 535,
	536, 328, 537, 1293, 538, 610, 611, 612, 613, 1294,
	547, 1295, 539, 540, 541, 614, 542, 615, 1296, 543,
	544, 545, 546, 0, 548, 549, 1297, 1298, 550, 551,
	552, 554, 555, 553, 556, 1299, 557, 1300, 0, 558,
	559, 560, 616, 617, 618, 1301, 562, 561, 563, 619,
	1302, 1303, 1304, 1305, 564, 565, 620, 566, 567, 568,
	1221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3221, 251, 252, 253,
	254, 255, 256, 1227, 257, 258, 1228, 1229, 1230, 0,
	1231, 569, 1232, 1233, 1234, 1235, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 1236, 574, 268, 269, 270, 271, 272, 273, 1237,
	1238, 0, 274, 575, 576, 577, 1239, 275, 276, 578,
	1240, 1307, 1241, 277, 278, 279, 280, 281, 282, 283,
	0, 1242, 285, 286, 287, 284, 1243, 288, 0, 289,
	290, 291, 292, 293, 294, 1244, 295, 296, 297, 1096,
	298, 299, 1245, 1246, 1248, 1247, 1249, 1250, 1251, 300,
	301, 302, 303, 0, 304, 579, 580, 1252, 308, 305,
	306, 1253, 309, 307, 1254, 310, 311, 312, 1255, 1256,
	313, 314, 315, 1257, 316, 317, 1258, 318, 319, 320,
	1259, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 1260, 248, 1261, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 1262, 338, 1263, 1264, 1097, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 1265, 349,
	587, 1266, 588, 350, 1267, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 1099, 356, 357, 1268, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 1269,
	1098, 364, 592, 593, 1270, 594, 1271, 366, 367, 1100,
	595, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 1272, 378, 380, 379,
	1273, 381, 596, 1103, 382, 383, 1104, 1274, 384, 0,
	0, 0, 385, 386, 1275, 1276, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 1277, 250, 1107,
	424, 425, 1278, 597, 426, 598, 428, 429, 1279, 0,
	430, 0, 1280, 1281, 432, 433, 434, 1282, 1283, 435,
	436, 599, 1108, 437, 1109, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 1284, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 1285, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 1286, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 1287, 480, 481, 482, 1110, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 1288, 503, 504,
	502, 505, 506, 507, 1289, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	1290, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 1291, 529, 530, 0, 528, 1292,
	531, 532, 533, 534, 535, 536, 328, 537, 1293, 538,
	610, 611, 612, 613, 1294, 547, 1295, 539, 540, 541,
	614, 542, 615, 1296, 543, 544, 545, 546, 0, 548,
	549, 1297, 1298, 550, 551, 552, 554, 555, 553, 556,
	1299, 557, 1300, 0, 558, 559, 560, 616, 617, 618,
	1301, 562, 561, 563, 619, 1302, 1303, 1304, 1305, 564,
	565, 620, 566, 567, 568, 1221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2353, 251, 252, 253, 254, 255, 256, 1227, 257,
	258, 1228, 1229, 1230, 0, 1231, 569, 1232, 1233, 1234,
	1235, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 1236, 574, 268, 269,
	270, 271, 272, 273, 1237, 1238, 0, 274, 575, 576,
	577, 1239, 275, 276, 578, 1240, 1307, 1241, 277, 278,
	279, 280, 281, 282, 283, 0, 1242, 285, 286, 287,
	284, 1243, 288, 0, 289, 290, 291, 292, 293, 294,
	1244, 295, 296, 297, 1096, 298, 299, 1245, 1246, 1248,
	1247, 1249, 1250, 1251, 300, 301, 302, 303, 0, 304,
	579, 580, 1252, 308, 305, 306, 1253, 309, 307, 1254,
	310, 311, 312, 1255, 1256, 313, 314, 315, 1257, 316,
	317, 1258, 318, 319, 320, 1259, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 1260, 248, 1261, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 1262, 338, 1263, 1264,
	1097, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 1265, 349, 587, 1266, 588, 350, 1267,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 1099,
	356, 357, 1268, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 1269, 1098, 364, 592, 593, 1270,
	594, 1271, 366, 367, 1100, 595, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 1272, 378, 380, 379, 1273, 381, 596, 1103, 382,
	383, 1104, 1274, 384, 0, 0, 0, 385, 386, 1275,
	1276, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 1277, 250, 1107, 424, 425, 1278, 597, 426,
	598, 428, 429, 1279, 0, 430, 0, 1280, 1281, 432,
	433, 434, 1282, 1283, 435, 436, 599, 1108, 437, 1109,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 1284, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 1285, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 1286, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 1287,
	480, 481, 482, 1110, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 1288, 503, 504, 502, 505, 506, 507, 1289,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 1290, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 1291,
	529, 530, 0, 528, 1292, 531, 532, 533, 534, 535,
	536, 328, 537, 1293, 538, 610, 611, 612, 613, 1294,
	547, 1295, 539, 540, 541, 614, 542, 615, 1296, 543,
	544, 545, 546, 0, 548, 549, 1297, 1298, 550, 551,
	552, 554, 555, 553, 556, 1299, 557, 1300, 0, 558,
	559, 560, 616, 617, 618, 1301, 562, 561, 563, 619,
	1302, 1303, 1304, 1305, 564, 565, 620, 566, 567, 568,
	1319, 0, 1221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2027, 0, 0, 251,
	252, 253, 254, 255, 256, 1227, 257, 258, 1228, 1229,
	1230, 0, 1231, 569, 1232, 1233, 1234, 1235, 259, 260,
	1095, 261, 262, 263, 264, 265, 570, 571, 0, 266,
	572, 267, 573, 1236, 574, 268, 269, 270, 271, 272,
	273, 1237, 1238, 0, 274, 575, 576, 577, 1239, 275,
	276, 578, 1240, 1307, 1241, 277, 278, 279, 280, 281,
	282, 283, 0, 1242, 285, 286, 287, 284, 1243, 288,
	0, 289, 290, 291, 292, 293, 294, 1244, 295, 296,
	297, 1096, 298, 299, 1245, 1246, 1248, 1247, 1249, 1250,
	1251, 300, 301, 302, 303, 0, 304, 579, 580, 1252,
	308, 305, 306, 1253, 309, 307, 1254, 310, 311, 312,
	1255, 1256, 313, 314, 315, 1257, 316, 317, 1258, 318,
	319, 320, 1259, 321, 322, 581, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 582, 583, 1260, 248,
	1261, 0, 0, 0, 0, 334, 335, 336, 584, 0,
	0, 0, 337, 1262, 338, 1263, 1264, 1097, 339, 340,
	585, 586, 341, 342, 343, 344, 345, 346, 347, 348,
	1265, 349, 587, 1266, 588, 350, 1267, 351, 352, 353,
	354, 355, 589, 590, 591, 427, 1099, 356, 357, 1268,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 1269, 1098, 364, 592, 593, 1270, 594, 1271, 366,
	367, 1100, 595, 1101, 368, 369, 370, 1102, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 1272, 378,
	380, 379, 1273, 381, 596, 1103, 382, 383, 1104, 1274,
	384, 0, 0, 0, 385, 386, 1275, 1276, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 1105, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 1106, 415, 1277,
	250, 1107, 424, 425, 1278, 597, 426, 598, 428, 429,
	1279, 0, 430, 0, 1280, 1281, 432, 433, 434, 1282,
	1283, 435, 436, 599, 1108, 437, 1109, 600, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 1284,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	603, 456, 604, 457, 458, 1285, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 605, 468, 467, 469, 1286,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 1287, 480, 481, 482,
	1110, 483, 484, 485, 486, 606, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 1288,
	503, 504, 502, 505, 506, 507, 1289, 508, 492, 493,
	509, 510, 1111, 511, 512, 513, 514, 515, 516, 607,
	0, 517, 1290, 518, 519, 520, 521, 494, 522, 527,
	608, 523, 524, 525, 526, 609, 1291, 529, 530, 0,
	528, 1292, 531, 532, 533, 534, 535, 536, 328, 537,
	1293, 538, 610, 611, 612, 613, 1294, 547, 1295, 539,
	540, 541, 614, 542, 615, 1296, 543, 544, 545, 546,
	0, 548, 549, 1297, 1298, 550, 551, 552, 554, 555,
	553, 556, 1299, 557, 1300, 0, 558, 559, 560, 616,
	617, 618, 1301, 562, 561, 563, 619, 1302, 1303, 1304,
	1305, 564, 565, 620, 566, 567, 568, 1218, 0, 1221,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 1227, 257, 258, 1228, 1229, 1230, 0, 1231,
	569, 1232, 1233, 1234, 1235, 259, 260, 1095, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	1236, 574, 268, 269, 270, 271, 272, 273, 1237, 1238,
	0, 274, 575, 576, 577, 1239, 275, 276, 578, 1240,
	1307, 1241, 277, 278, 279, 280, 281, 282, 283, 0,
	1242, 285, 286, 287, 284, 1243, 288, 0, 289, 290,
	291, 292, 293, 294, 1244, 295, 296, 297, 1096, 298,
	299, 1245, 1246, 1248, 1247, 1249, 1250, 1251, 300, 301,
	302, 303, 0, 304, 579, 580, 1252, 308, 305, 306,
	1253, 309, 307, 1254, 310, 311, 312, 1255, 1256, 313,
	314, 315, 1257, 316, 317, 1258, 318, 319, 320, 1259,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 1260, 248, 1261, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	1262, 338, 1263, 1264, 1097, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 1265, 349, 587,
	1266, 588, 350, 1267, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 1099, 356, 357, 1268, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 1269, 1098,
	364, 592, 593, 1270, 594, 1271, 366, 367, 1100, 595,
	1101, 368, 369, 370, 1102, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 1272, 378, 380, 379, 1273,
	381, 596, 1103, 382, 383, 1104, 1274, 384, 0, 0,
	0, 385, 386, 1275, 1276, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 1105, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 1106, 415, 1277, 250, 1107, 424,
	425, 1278, 597, 426, 598, 428, 429, 1279, 0, 430,
	0, 1280, 1281, 432, 433, 434, 1282, 1283, 435, 436,
	599, 1108, 437, 1109, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 1284, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 1285, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 1286, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 1287, 480, 481, 482, 1110, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 1288, 503, 504, 502,
	505, 506, 507, 1289, 508, 492, 493, 509, 510, 1111,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 1290,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 1291, 529, 530, 0, 528, 1292, 531,
	532, 533, 534, 535, 536, 328, 537, 1293, 538, 610,
	611, 612, 613, 1294, 547, 1295, 539, 540, 541, 614,
	542, 615, 1296, 543, 544, 545, 546, 0, 548, 549,
	1297, 1298, 550, 551, 552, 554, 555, 553, 556, 1299,
	557, 1300, 0, 558, 559, 560, 616, 617, 618, 1301,
	562, 561, 563, 619, 1302, 1303, 1304, 1305, 564, 565,
	620, 566, 567, 568, 1221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 1227, 257, 258,
	1228, 1229, 1230, 0, 1231, 569, 1232, 1233, 1234, 1235,
	259, 260, 1095, 261, 262, 263, 264, 265, 570, 571,
	0, 266, 572, 267, 573, 1236, 574, 268, 269, 270,
	271, 272, 273, 1237, 1238, 0, 274, 575, 576, 577,
	1239, 275, 276, 578, 1240, 1307, 1241, 277, 278, 279,
	280, 281, 282, 283, 0, 1242, 285, 286, 287, 284,
	1243, 288, 0, 289, 290, 291, 292, 293, 294, 1244,
	295, 296, 297, 1096, 298, 299, 1245, 1246, 1248, 1247,
	1249, 1250, 1251, 300, 301, 302, 303, 0, 304, 579,
	580, 1252, 308, 305, 306, 1253, 309, 307, 1254, 310,
	311, 312, 1255, 1256, 313, 314, 315, 1257, 316, 317,
	1258, 318, 319, 320, 1259, 321, 322, 581, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 582, 583,
	1260, 248, 1261, 0, 0, 0, 0, 334, 335, 336,
	584, 0, 0, 0, 337, 1262, 338, 1263, 1264, 1097,
	339, 340, 585, 586, 341, 342, 343, 344, 345, 346,
	347, 348, 1265, 349, 587, 1266, 588, 350, 1267, 351,
	352, 353, 354, 355, 589, 590, 591, 427, 1099, 356,
	357, 1268, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 1269, 1098, 364, 592, 593, 1270, 594,
	1271, 366, 367, 1100, 595, 1101, 368, 369, 370, 1102,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	1272, 378, 380, 379, 1273, 381, 596, 1103, 382, 383,
	1104, 1274, 384, 0, 0, 0, 385, 386, 1275, 1276,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 1105, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 1106,
	415, 1277, 250, 1107, 424, 425, 1278, 597, 426, 598,
	428, 429, 1279, 0, 430, 0, 1280, 1281, 432, 433,
	434, 1282, 1283, 435, 436, 599, 1108, 437, 1109, 600,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 1284, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 603, 456, 604, 457, 458, 1285, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 605, 468, 467,
	469, 1286, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 1287, 480,
	481, 482, 1110, 483, 484, 485, 486, 606, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 1288, 503, 504, 502, 505, 506, 507, 1289, 508,
	492, 493, 509, 510, 1111, 511, 512, 513, 514, 515,
	516, 607, 0, 517, 1290, 518, 519, 520, 521, 494,
	522, 527, 608, 523, 524, 525, 526, 609, 1291, 529,
	530, 0, 528, 1292, 531, 532, 533, 534, 535, 536,
	328, 537, 1293, 538, 610, 611, 612, 613, 1294, 547,
	1295, 539, 540, 541, 614, 542, 615, 1296, 543, 544,
	545, 546, 0, 548, 549, 1297, 1298, 550, 551, 552,
	554, 555, 553, 556, 1299, 557, 1300, 0, 558, 559,
	560, 616, 617, 618, 1301, 562, 561, 563, 619, 1302,
	1303, 1304, 1305, 564, 565, 620, 566, 567, 568, 2328,
	0, 1031, 1003, 1004, 1005, 1001, 1002, 1014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 2325, 257, 258, 0, 0, 0,
	0, 0, 1055, 1019, 0, 0, 0, 259, 260, 1095,
	261, 262, 263, 264, 265, 570, 1068, 0, 266, 1075,
	267, 1074, 0, 1085, 268, 269, 270, 271, 272, 273,
	1021, 1054, 988, 274, 1115, 1116, 577, 0, 275, 276,
	1061, 0, 1042, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1096, 298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050,
	300, 301, 302, 303, 1078, 304, 1072, 1071, 992, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 2326,
	0, 313, 1063, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 998, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1086, 1087, 1010, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1070, 0, 0,
	0, 337, 0, 338, 0, 0, 1097, 339, 340, 1083,
	1084, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 1093, 0, 1020, 350, 0, 351, 352, 353, 354,
	355, 1056, 1057, 1060, 427, 1099, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 1098, 364, 1065, 1066, 0, 1026, 0, 366, 367,
	1100, 1058, 1101, 368, 369, 370, 1102, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 1094, 1103, 382, 383, 1104, 0, 384,
	0, 0, 0, 385, 386, 1049, 1048, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 1105, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 1106, 415, 989, 250,
	1107, 424, 425, 1011, 1059, 426, 1073, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 1108, 437, 1109, 1088, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 1089,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 1069, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 1110,
	483, 484, 485, 486, 999, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 1052, 508, 492, 493, 509,
	510, 1111, 511, 512, 513, 514, 515, 516, 1067, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 1114,
	523, 524, 525, 526, 1090, 0, 529, 530, 987, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 1079, 1080, 1081, 1082, 0, 547, 0, 539, 540,
	541, 1091, 542, 1092, 1009, 543, 544, 545, 546, 0,
	548, 549, 0, 993, 550, 551, 552, 554, 555, 553,
	556, 1053, 557, 0, 0, 558, 559, 560, 616, 1076,
	1113, 2324, 562, 561, 563, 619, 0, 0, 0, 0,
	564, 565, 620, 566, 567, 568, 990, 0, 0, 0,
	0, 0, 0, 986, 0, 0, 0, 0, 0, 0,
	984, 985, 2327, 0, 0, 0, 0, 0, 0, 1015,
	2323, 0, 977, 1013, 1031, 1003, 1004, 1005, 1001, 1002,
	1014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1055, 1019, 0, 0, 0,
	259, 260, 1095, 261, 262, 263, 264, 265, 570, 1068,
	0, 266, 1075, 267, 1074, 0, 1085, 268, 269, 270,
	271, 272, 273, 1021, 1054, 988, 274, 1115, 1116, 577,
	0, 275, 276, 1061, 0, 1042, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051,
	1047, 1046, 1050, 300, 301, 302, 303, 1078, 304, 1072,
	1071, 992, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1063, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 998, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1086, 1087,
	1010, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1070, 0, 0, 0, 337, 0, 338, 0, 0, 1097,
	339, 340, 1083, 1084, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1093, 0, 1020, 350, 0, 351,
	352, 353, 354, 355, 1056, 1057, 1060, 427, 1099, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1098, 364, 1065, 1066, 0, 1026,
	0, 366, 367, 1100, 1058, 1101, 368, 369, 370, 1102,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1094, 1103, 382, 383,
	1104, 0, 384, 0, 0, 0, 385, 386, 1049, 1048,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 1105, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 1106,
	415, 989, 250, 1107, 424, 425, 1011, 1059, 426, 1073,
	428, 429, 0, 0, 430, 0, 0, 0, 432, 433,
	434, 0, 0, 435, 436, 599, 1108, 437, 1109, 1088,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 1089, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 1069, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 1110, 483, 484, 485, 486, 999, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 212, 503, 504, 502, 505, 506, 507, 1052, 508,
	492, 493, 509, 510, 1111, 511, 512, 513, 514, 515,
	516, 1067, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 1114, 523, 524, 525, 526, 1090, 0, 529,
	530, 987, 528, 214, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 1079, 1080, 1081, 1082, 0, 547,
	0, 539, 540, 541, 1091, 542, 1092, 1009, 543, 544,
	545, 546, 0, 548, 549, 0, 993, 550, 551, 552,
	554, 555, 553, 556, 1053, 557, 0, 0, 558, 559,
	560, 1495, 1076, 1113, 0, 562, 561, 563, 619, 0,
	0, 0, 206, 564, 565, 620, 566, 567, 568, 990,
	207, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 0, 984, 985, 1031, 1003, 1004, 1005, 1001,
	1002, 1014, 1732, 1730, 0, 0, 1013, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1055, 1019, 0, 0,
	0, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	1068, 0, 266, 1075, 267, 1074, 0, 1085, 268, 269,
	270, 271, 272, 273, 1021, 1054, 988, 274, 1115, 1116,
	577, 0, 275, 276, 1061, 0, 1042, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1096, 298, 299, 1045, 1043, 1044,
	1051, 1047, 1046, 1050, 300, 301, 302, 303, 1078, 304,
	1072, 1071, 992, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1063, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 998, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1086,
	1087, 1010, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1070, 0, 0, 0, 337, 0, 338, 0, 0,
	1097, 339, 340, 1083, 1084, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 1093, 0, 1020, 350, 0,
	351, 352, 353, 354, 355, 1056, 1057, 1060, 427, 1099,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 1098, 364, 1065, 1066, 0,
	1026, 0, 366, 367, 1100, 1058, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 1094, 1103, 382,
	383, 1104, 0, 384, 0, 0, 0, 385, 386, 1049,
	1048, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 989, 250, 1107, 424, 425, 1011, 1059, 426,
	1073, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 1108, 437, 1109,
	1088, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 1089, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 1069, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 1110, 483, 484, 485, 486, 999, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 212, 503, 504, 502, 505, 506, 507, 1052,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 1067, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 1114, 523, 524, 525, 526, 1090, 0,
	529, 530, 987, 528, 214, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 1079, 1080, 1081, 1082, 0,
	547, 0, 539, 540, 541, 1091, 542, 1092, 1009, 543,
	544, 545, 546, 0, 548, 549, 0, 993, 550, 551,
	552, 554, 555, 553, 556, 1053, 557, 0, 0, 558,
	559, 560, 1495, 1076, 1113, 0, 562, 561, 563, 619,
	0, 0, 0, 206, 564, 565, 620, 566, 567, 568,
	990, 207, 0, 0, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 0, 984, 985, 1031, 1003, 1004, 1005,
	1001, 1002, 1014, 1732, 2898, 0, 0, 1013, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1055, 1019, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 1068, 0, 266, 1075, 267, 1074, 0, 1085, 268,
	269, 270, 271, 272, 273, 1021, 1054, 988, 274, 1115,
	1116, 577, 0, 275, 276, 1061, 0, 1042, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 1045, 1043,
	1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303, 1078,
	304, 1072, 1071, 992, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1063, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 998,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1086, 1087, 1010, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1070, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 1083, 1084, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1093, 0, 1020, 350,
	0, 351, 352, 353, 354, 355, 1056, 1057, 1060, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1098, 364, 1065, 1066,
	0, 1026, 0, 366, 367, 1100, 1058, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 1094, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	1049, 1048, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 989, 250, 1107, 424, 425, 1011, 1059,
	426, 1073, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 1088, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 1089, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 1069,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 999,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 212, 503, 504, 502, 505, 506, 507,
	1052, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 1067, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 1114, 523, 524, 525, 526, 1090,
	0, 529, 530, 987, 528, 214, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 1079, 1080, 1081, 1082,
	0, 547, 0, 539, 540, 541, 1091, 542, 1092, 1009,
	543, 544, 545, 546, 0, 548, 549, 0, 993, 550,
	551, 552, 554, 555, 553, 556, 1053, 557, 0, 0,
	558, 559, 560, 1495, 1076, 1113, 0, 562, 561, 563,
	619, 0, 0, 0, 206, 564, 565, 620, 566, 567,
	568, 990, 207, 0, 0, 0, 0, 0, 986, 0,
	0, 0, 0, 0, 0, 984, 985, 1031, 1003, 1004,
	1005, 1001, 1002, 1014, 1732, 1730, 0, 0, 1013, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1055, 1019,
	0, 0, 0, 259, 260, 1095, 261, 262, 263, 264,
	265, 570, 1068, 0, 266, 1075, 267, 1074, 2456, 1085,
	268, 269, 270, 271, 272, 273, 1021, 1054, 988, 274,
	1115, 1116, 577, 0, 275, 276, 1061, 0, 1042, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1096, 298, 299, 1045,
	1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303,
	1078, 304, 1072, 1071, 992, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1063, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	998, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1086, 1087, 1010, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1070, 0, 0, 0, 337, 0, 338,
	0, 2461, 1097, 339, 340, 1083, 1084, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 1093, 0, 1020,
	350, 0, 351, 352, 353, 354, 355, 1056, 1057, 1060,
	427, 1099, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 1098, 364, 1065,
	1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101, 368,
	369, 370, 1102, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 2457, 381, 1094,
	1103, 382, 383, 1104, 0, 384, 0, 0, 0, 385,
	386, 1049, 1048, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	1105, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 1106, 415, 989, 250, 1107, 424, 425, 1011,
	1059, 426, 1073, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 1108,
	437, 1109, 1088, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 1089, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	1069, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 1110, 483, 484, 485, 486,
	999, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 1052, 508, 492, 493, 509, 510, 1111, 511, 512,
	513, 514, 515, 516, 1067, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 1114, 523, 524, 525, 526,
	1090, 0, 529, 530, 987, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 1079, 1080, 1081,
	1082, 0, 547, 2458, 539, 540, 541, 1091, 542, 1092,
	1009, 543, 544, 545, 546, 0, 548, 549, 0, 993,
	550, 551, 552, 554, 555, 553, 556, 1053, 557, 0,
	0, 558, 559, 560, 616, 1076, 1113, 0, 562, 561,
	563, 619, 0, 0, 0, 0, 564, 565, 620, 566,
	567, 568, 990, 0, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 984, 985, 0, 0,
	0, 0, 0, 0, 0, 1015, 0, 0, 2373, 1013,
	1031, 1003, 1004, 1005, 1001, 1002, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1055, 1019, 0, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 1068, 0, 266, 1075, 267,
	1074, 0, 1085, 268, 269, 270, 271, 272, 273, 1021,
	1054, 988, 274, 1115, 1116, 577, 0, 275, 276, 1061,
	0, 1042, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300,
	301, 302, 303, 1078, 304, 1072, 1071, 992, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1063, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 998, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1086, 1087, 1010, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1070, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 1083, 1084,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1093, 0, 1020, 350, 0, 351, 352, 353, 354, 355,
	1056, 1057, 1060, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1098, 364, 1065, 1066, 0, 1026, 0, 366, 367, 1100,
	1058, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1094, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 1049, 1048, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 989, 250, 1107,
	424, 425, 1011, 1059, 426, 1073, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 1088, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 1089, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 1069, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 999, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 1052, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 1067, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 1114, 523,
	524, 525, 526, 1090, 0, 529, 530, 987, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	1079, 1080, 1081, 1082, 0, 547, 0, 539, 540, 541,
	1091, 542, 1092, 1009, 543, 544, 545, 546, 0, 548,
	549, 0, 993, 550, 551, 552, 554, 555, 553, 556,
	1053, 557, 0, 0, 558, 559, 560, 616, 1076, 1113,
	0, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 990, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 0, 984,
	985, 0, 0, 0, 0, 0, 0, 0, 1015, 2371,
	0, 2370, 1013, 1031, 1003, 1004, 1005, 1001, 1002, 1014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1055, 1019, 0, 0, 0, 259,
	260, 1095, 261, 262, 263, 264, 265, 570, 1068, 0,
	266, 1075, 267, 1074, 0, 1085, 268, 269, 270, 271,
	272, 273, 1021, 1054, 988, 274, 1115, 1116, 577, 0,
	275, 276, 1061, 0, 1042, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051, 1047,
	1046, 1050, 300, 301, 302, 303, 1078, 304, 1072, 1071,
	992, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1063, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 998, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1086, 1087, 1010,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1070,
	0, 0, 0, 337, 0, 338, 0, 0, 1097, 339,
	340, 1083, 1084, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1093, 0, 1020, 350, 0, 351, 352,
	353, 354, 355, 1056, 1057, 1060, 427, 1099, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1098, 364, 1065, 1066, 0, 1026, 0,
	366, 367, 1100, 1058, 1101, 368, 369, 370, 1102, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1094, 1103, 382, 383, 1104,
	0, 384, 0, 0, 0, 385, 386, 1049, 1048, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 1105, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 1106, 415,
	989, 250, 1107, 424, 425, 1011, 1059, 426, 1073, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 1108, 437, 1109, 1088, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 1089, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 1069, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 1110, 483, 484, 485, 486, 999, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 1052, 508, 492,
	493, 509, 510, 1111, 511, 512, 513, 514, 515, 516,
	1067, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 1114, 523, 524, 525, 526, 1090, 0, 529, 530,
	987, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 1079, 1080, 1081, 1082, 0, 547, 0,
	539, 540, 541, 1091, 542, 1092, 1009, 543, 544, 545,
	546, 0, 548, 549, 0, 993, 550, 551, 552, 554,
	555, 553, 556, 1053, 557, 0, 0, 558, 559, 560,
	616, 1076, 1113, 0, 562, 561, 563, 619, 0, 0,
	0, 0, 564, 565, 620, 566, 567, 568, 990, 0,
	0, 0, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 0, 984, 985, 0, 0, 0, 0, 0, 0,
	0, 1015, 2368, 0, 2367, 1013, 1031, 1003, 1004, 1005,
	1001, 1002, 1014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1055, 1019, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 1068, 0, 266, 1075, 267, 1074, 0, 1085, 268,
	269, 270, 271, 272, 273, 1021, 1054, 988, 274, 1115,
	1116, 577, 0, 275, 276, 1061, 0, 1042, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 1045, 1043,
	1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303, 1078,
	304, 1072, 1071, 992, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1063, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 998,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1086, 1087, 1010, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1070, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 1083, 1084, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1093, 0, 1020, 350,
	0, 351, 352, 353, 354, 355, 1056, 1057, 1060, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1098, 364, 1065, 1066,
	0, 1026, 0, 366, 367, 1100, 1058, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 1094, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	1049, 1048, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 989, 250, 1107, 424, 425, 1011, 1059,
	426, 1073, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 1088, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 1089, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 1069,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 999,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	1052, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 1067, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 1114, 523, 524, 525, 526, 1090,
	0, 529, 530, 987, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 1079, 1080, 1081, 1082,
	0, 547, 0, 539, 540, 541, 1091, 542, 1092, 1009,
	543, 544, 545, 546, 0, 548, 549, 0, 993, 550,
	551, 552, 554, 555, 553, 556, 1053, 557, 0, 0,
	558, 559, 560, 616, 1076, 1113, 0, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 990, 0, 0, 0, 0, 0, 0, 986, 0,
	0, 0, 0, 0, 0, 984, 985, 0, 0, 0,
	0, 0, 0, 0, 1015, 2365, 0, 2364, 1013, 1031,
	1003, 1004, 1005, 1001, 1002, 1014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1055, 1019, 0, 0, 0, 259, 260, 1095, 261, 262,
	263, 264, 265, 570, 1068, 0, 266, 1075, 267, 1074,
	0, 1085, 268, 269, 270, 271, 272, 273, 1021, 1054,
	988, 274, 1115, 1116, 577, 0, 275, 276, 1061, 0,
	1042, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1096, 298,
	299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301,
	302, 303, 1078, 304, 1072, 1071, 992, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1063, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 998, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1086, 1087, 1010, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1070, 0, 0, 0, 337,
	0, 338, 0, 0, 1097, 339, 340, 1083, 1084, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1093,
	0, 1020, 350, 0, 351, 352, 353, 354, 355, 1056,
	1057, 1060, 427, 1099, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1098,
	364, 1065, 1066, 0, 1026, 0, 366, 367, 1100, 1058,
	1101, 368, 369, 370, 1102, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1094, 1103, 382, 383, 1104, 0, 384, 0, 0,
	0, 385, 386, 1049, 1048, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 1105, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 1106, 415, 989, 250, 1107, 424,
	425, 1011, 1059, 426, 1073, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 1108, 437, 1109, 1088, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 1089, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 1069, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 1110, 483, 484,
	485, 486, 999, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 1052, 508, 492, 493, 509, 510, 1111,
	511, 512, 513, 514, 515, 516, 1067, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 1114, 523, 524,
	525, 526, 1090, 0, 529, 530, 987, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 1079,
	1080, 1081, 1082, 0, 547, 0, 539, 540, 541, 1091,
	542, 1092, 1009, 543, 544, 545, 546, 0, 548, 549,
	0, 993, 550, 551, 552, 554, 555, 553, 556, 1053,
	557, 0, 0, 558, 559, 560, 616, 1076, 1113, 0,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 990, 0, 0, 0, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 0, 984, 985,
	0, 0, 0, 0, 0, 0, 0, 1015, 2362, 0,
	1585, 1013, 1031, 1003, 1004, 1005, 1001, 1002, 1014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1055, 1019, 0, 0, 0, 259, 260,
	1095, 261, 262, 263, 264, 265, 570, 1068, 0, 266,
	1075, 267, 1074, 0, 1085, 268, 269, 270, 271, 272,
	273, 1021, 1054, 988, 274, 1115, 1116, 577, 0, 275,
	276, 1061, 0, 1042, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1096, 298, 299, 1045, 1043, 1044, 1051, 1047, 1046,
	1050, 300, 301, 302, 303, 1078, 304, 1072, 1071, 992,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 1063, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 998, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1086, 1087, 1010, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 1070, 0,
	0, 0, 337, 0, 338, 0, 0, 1097, 339, 340,
	1083, 1084, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 1093, 0, 1020, 350, 0, 351, 352, 353,
	354, 355, 1056, 1057, 1060, 427, 1099, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 1098, 364, 1065, 1066, 0, 1026, 0, 366,
	367, 1100, 1058, 1101, 368, 369, 370, 1102, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 1094, 1103, 382, 383, 1104, 0,
	384, 0, 0, 0, 385, 386, 1049, 1048, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 1105, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 1106, 415, 989,
	250, 1107, 424, 425, 1011, 1059, 426, 1073, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 434, 0,
	0, 435, 436, 599, 1108, 437, 1109, 1088, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	1089, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 1069, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	1110, 483, 484, 485, 486, 999, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 1052, 508, 492, 493,
	509, 510, 1111, 511, 512, 513, 514, 515, 516, 1067,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	1114, 523, 524, 525, 526, 1090, 0, 529, 530, 987,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 1079, 1080, 1081, 1082, 0, 547, 0, 539,
	540, 541, 1091, 542, 1092, 1009, 543, 544, 545, 546,
	0, 548, 549, 0, 993, 550, 551, 552, 554, 555,
	553, 556, 1053, 557, 0, 0, 558, 559, 560, 616,
	1076, 1113, 0, 562, 561, 563, 619, 1584, 0, 0,
	0, 564, 565, 620, 566, 567, 568, 990, 0, 0,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 0,
	0, 984, 985, 0, 0, 0, 0, 0, 0, 0,
	1015, 0, 0, 980, 1013, 1031, 1003, 1004, 1005, 1001,
	1002, 1014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1055, 1019, 0, 0,
	0, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	1068, 0, 266, 1075, 267, 1074, 0, 1085, 268, 269,
	270, 271, 272, 273, 1021, 1054, 988, 274, 1115, 1116,
	577, 0, 275, 276, 1061, 0, 1042, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1096, 298, 299, 1045, 1043, 1044,
	1051, 1047, 1046, 1050, 300, 301, 302, 303, 1078, 304,
	1072, 1071, 992, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1063, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 998, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1086,
	1087, 1010, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1070, 0, 0, 0, 337, 0, 338, 0, 0,
	1097, 339, 340, 1083, 1084, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 1093, 0, 1020, 350, 0,
	351, 352, 353, 354, 355, 1056, 1057, 1060, 427, 1099,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 1098, 364, 1065, 1066, 0,
	1026, 0, 366, 367, 1100, 1058, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 1094, 1103, 382,
	383, 1104, 0, 384, 0, 0, 0, 385, 386, 1049,
	1048, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 989, 250, 1107, 424, 425, 1011, 1059, 426,
	1073, 428, 429, 0, 0, 430, 0, 994, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 1108, 437, 1109,
	1088, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 1089, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 1069, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 1110, 483, 484, 485, 486, 999, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 1052,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 1067, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 1114, 523, 524, 525, 526, 1090, 0,
	529, 530, 987, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 1079, 1080, 1081, 1082, 0,
	547, 0, 539, 540, 541, 1091, 542, 1092, 1009, 543,
	544, 545, 546, 0, 548, 549, 0, 993, 550, 551,
	552, 554, 555, 553, 556, 1053, 557, 0, 0, 558,
	559, 560, 616, 1076, 1113, 0, 562, 561, 563, 619,
	0, 0, 0, 0, 564, 565, 620, 566, 567, 568,
	990, 0, 0, 0, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 0, 984, 985, 1031, 1003, 1004, 1005,
	1001, 1002, 1014, 1015, 0, 0, 0, 1013, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1055, 1019, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 1068, 0, 266, 1075, 267, 1074, 0, 1085, 268,
	269, 270, 271, 272, 273, 1021, 1054, 988, 274, 1115,
	1116, 577, 0, 275, 276, 1061, 0, 1042, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 4166,
	294, 0, 295, 296, 297, 1096, 298, 299, 1045, 1043,
	1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303, 1078,
	304, 1072, 1071, 992, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1063, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 998,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1086, 1087, 1010, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1070, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 1083, 1084, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1093, 0, 1020, 350,
	0, 351, 352, 353, 354, 355, 1056, 1057, 1060, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1098, 364, 1065, 1066,
	0, 1026, 0, 366, 367, 1100, 1058, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 1094, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	1049, 1048, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 989, 250, 1107, 424, 425, 1011, 1059,
	426, 1073, 428, 429, 0, 0, 430, 0, 994, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 1088, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 1089, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 1069,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 999,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	1052, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 1067, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 1114, 523, 524, 525, 526, 1090,
	0, 529, 530, 987, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 1079, 1080, 1081, 1082,
	0, 547, 0, 539, 540, 541, 1091, 542, 1092, 1009,
	543, 544, 545, 546, 0, 548, 549, 0, 993, 550,
	551, 552, 554, 555, 553, 556, 1053, 557, 0, 0,
	558, 559, 560, 616, 1076, 1113, 0, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 990, 0, 0, 0, 0, 0, 0, 986, 0,
	0, 0, 0, 0, 0, 984, 985, 1031, 1003, 1004,
	1005, 1001, 1002, 1014, 1015, 0, 0, 0, 1013, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1055, 1019,
	0, 0, 0, 259, 260, 1095, 261, 262, 263, 264,
	265, 570, 1068, 0, 266, 1075, 267, 1074, 0, 1085,
	268, 269, 270, 271, 272, 273, 1021, 1054, 988, 274,
	1115, 1116, 577, 0, 275, 276, 1061, 0, 1042, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1096, 298, 299, 1045,
	1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303,
	1078, 304, 1072, 1071, 992, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1063, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	998, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1086, 1087, 1010, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1070, 0, 0, 0, 337, 0, 338,
	0, 0, 1097, 339, 340, 1083, 1084, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 1093, 0, 1020,
	350, 0, 351, 352, 353, 354, 355, 1056, 1057, 1060,
	427, 1099, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 2242, 362, 363, 365, 0, 1098, 364, 1065,
	1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101, 368,
	369, 370, 1102, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 1094,
	1103, 382, 383, 1104, 0, 384, 0, 0, 0, 385,
	386, 1049, 1048, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	1105, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 1106, 415, 989, 250, 1107, 424, 425, 1011,
	1059, 426, 1073, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 1108,
	437, 1109, 1088, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 1089, 456, 604, 457, 458,
	2241, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	1069, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 1110, 483, 484, 485, 486,
	999, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 1052, 508, 492, 493, 509, 510, 1111, 511, 512,
	513, 514, 515, 516, 1067, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 1114, 523, 524, 525, 526,
	1090, 0, 529, 530, 987, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 1079, 1080, 1081,
	1082, 0, 547, 0, 539, 540, 541, 1091, 542, 1092,
	1009, 543, 544, 545, 546, 0, 548, 549, 0, 993,
	550, 551, 552, 554, 555, 553, 556, 1053, 557, 0,
	0, 558, 559, 560, 616, 1076, 1113, 0, 562, 561,
	563, 619, 0, 0, 0, 0, 564, 565, 620, 566,
	567, 568, 990, 0, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 984, 985, 1031, 1003,
	1004, 1005, 1001, 1002, 1014, 1015, 0, 0, 0, 1013,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1055,
	1019, 0, 0, 0, 259, 260, 1095, 261, 262, 263,
	264, 265, 570, 1068, 0, 266, 1075, 267, 1074, 0,
	1085, 268, 269, 270, 271, 272, 273, 1021, 1054, 988,
	274, 1115, 1116, 577, 0, 275, 276, 1061, 0, 1042,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1096, 298, 299,
	1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302,
	303, 1078, 304, 1072, 1071, 992, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1063,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 998, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1086, 1087, 1010, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1070, 0, 0, 0, 337, 0,
	338, 0, 0, 1097, 339, 340, 1083, 1084, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1093, 0,
	1020, 350, 0, 351, 352, 353, 354, 355, 1056, 1057,
	1060, 427, 1099, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1098, 364,
	1065, 1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101,
	368, 369, 370, 1102, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1094, 1103, 382, 383, 1104, 0, 384, 0, 0, 0,
	385, 386, 1049, 1048, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 1105, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 1106, 415, 989, 250, 1107, 424, 425,
	1011, 1059, 426, 1073, 428, 429, 0, 0, 430, 0,
	994, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	1108, 437, 1109, 1088, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 1089, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 1069, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 1110, 483, 484, 485,
	486, 999, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 1052, 508, 492, 493, 509, 510, 1111, 511,
	512, 513, 514, 515, 516, 1067, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 1114, 523, 524, 525,
	526, 1090, 0, 529, 530, 987, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 1079, 1080,
	1081, 1082, 0, 547, 0, 539, 540, 541, 1091, 542,
	1092, 1009, 543, 544, 545, 546, 0, 548, 549, 0,
	993, 550, 551, 552, 554, 555, 553, 556, 1053, 557,
	0, 0, 558, 559, 560, 616, 1076, 1113, 0, 562,
	561, 563, 619, 0, 0, 0, 0, 564, 565, 620,
	566, 567, 568, 990, 0, 0, 0, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 0, 984, 985, 1031,
	1003, 1004, 1005, 1001, 1002, 1014, 1015, 0, 0, 0,
	1013, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1055, 1019, 0, 0, 0, 259, 260, 1095, 261, 262,
	263, 264, 265, 570, 1068, 0, 266, 1075, 267, 1074,
	0, 1085, 268, 269, 270, 271, 272, 273, 1021, 1054,
	988, 274, 1115, 1116, 577, 0, 275, 276, 1061, 0,
	1042, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 3962, 294, 0, 295, 296, 297, 1096, 298,
	299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301,
	302, 303, 1078, 304, 1072, 1071, 992, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1063, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 998, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1086, 1087, 1010, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1070, 0, 0, 0, 337,
	0, 338, 0, 0, 1097, 339, 340, 1083, 1084, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1093,
	0, 1020, 350, 0, 351, 352, 353, 354, 355, 1056,
	1057, 1060, 427, 1099, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1098,
	364, 1065, 1066, 0, 1026, 0, 366, 367, 1100, 1058,
	1101, 368, 369, 370, 1102, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1094, 1103, 382, 383, 1104, 0, 384, 0, 0,
	0, 385, 386, 1049, 1048, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 1105, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 1106, 415, 989, 250, 1107, 424,
	425, 1011, 1059, 426, 1073, 428, 429, 0, 0, 430,
	0, 994, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 1108, 437, 1109, 1088, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 1089, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 1069, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 1110, 483, 484,
	485, 486, 999, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 1052, 508, 492, 493, 509, 510, 1111,
	511, 512, 513, 514, 515, 516, 1067, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 1114, 523, 524,
	525, 526, 1090, 0, 529, 530, 987, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 1079,
	1080, 1081, 1082, 0, 547, 0, 539, 540, 541, 1091,
	542, 1092, 1009, 543, 544, 545, 546, 0, 548, 549,
	0, 993, 550, 551, 552, 554, 555, 553, 556, 1053,
	557, 0, 0, 558, 559, 560, 616, 1076, 1113, 0,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 990, 0, 0, 0, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 0, 984, 985,
	1031, 1003, 1004, 1005, 1001, 1002, 1014, 1015, 0, 0,
	0, 1013, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1055, 1019, 0, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 1068, 0, 266, 1075, 267,
	1074, 0, 1085, 268, 269, 270, 271, 272, 273, 1021,
	1054, 988, 274, 1115, 1116, 577, 0, 275, 276, 1061,
	0, 1042, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300,
	301, 302, 303, 1078, 304, 1072, 1071, 992, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1063, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 998, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1086, 1087, 1010, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1070, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 1083, 1084,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1093, 0, 1020, 350, 0, 351, 352, 353, 354, 355,
	1056, 1057, 1060, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1098, 364, 1065, 1066, 0, 1026, 0, 366, 367, 1100,
	1058, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1094, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 1049, 1048, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 989, 3620, 1107,
	424, 425, 1011, 1059, 426, 1073, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 1088, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 1089, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 1069, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 999, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 1052, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 1067, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 1114, 523,
	524, 525, 526, 1090, 0, 529, 530, 987, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	1079, 1080, 1081, 1082, 0, 547, 0, 539, 540, 541,
	1091, 542, 1092, 1009, 543, 544, 545, 546, 0, 548,
	549, 0, 993, 550, 551, 552, 554, 555, 553, 556,
	1053, 557, 0, 0, 558, 559, 560, 616, 1076, 1113,
	0, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 990, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 0, 984,
	985, 1800, 0, 0, 0, 0, 0, 0, 1015, 0,
	0, 0, 1013, 1031, 1003, 1004, 1005, 1001, 1002, 1014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1055, 1019, 0, 0, 0, 259,
	260, 1095, 261, 262, 263, 264, 265, 570, 1068, 0,
	266, 1075, 267, 1074, 0, 1085, 268, 269, 270, 271,
	272, 273, 1021, 1054, 988, 274, 1115, 1116, 577, 0,
	275, 276, 1061, 0, 1042, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051, 1047,
	1046, 1050, 300, 301, 302, 303, 1078, 304, 1072, 1071,
	992, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1063, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 998, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1086, 1087, 1010,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1070,
	0, 0, 0, 337, 0, 338, 0, 0, 1097, 339,
	340, 1083, 1084, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1093, 0, 1020, 350, 0, 351, 352,
	353, 354, 355, 1056, 1057, 1060, 427, 1099, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1098, 364, 1065, 1066, 0, 1026, 0,
	366, 367, 1100, 1058, 1101, 368, 369, 370, 1102, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1094, 1103, 382, 383, 1104,
	0, 384, 0, 0, 0, 385, 386, 1049, 1048, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 1105, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 1106, 415,
	989, 250, 1107, 424, 425, 1011, 1059, 426, 1073, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 1108, 437, 1109, 1088, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 1089, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 1069, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 1110, 483, 484, 485, 486, 999, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 1052, 508, 492,
	493, 509, 510, 1111, 511, 512, 513, 514, 515, 516,
	1067, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 1114, 523, 524, 525, 526, 1090, 0, 529, 530,
	987, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 1079, 1080, 1081, 1082, 0, 547, 0,
	539, 540, 541, 1091, 542, 1092, 1009, 543, 544, 545,
	546, 0, 548, 549, 0, 993, 550, 551, 552, 554,
	555, 553, 556, 1053, 557, 0, 0, 558, 559, 560,
	616, 1076, 1113, 3370, 562, 561, 563, 619, 0, 0,
	0, 0, 564, 565, 620, 566, 567, 568, 990, 0,
	0, 0, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 0, 984, 985, 1031, 1003, 1004, 1005, 1001, 1002,
	1014, 1015, 0, 0, 0, 1013, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1055, 1019, 0, 0, 0,
	259, 260, 1095, 261, 262, 263, 264, 265, 570, 1068,
	0, 266, 1075, 267, 1074, 0, 1085, 268, 269, 270,
	271, 272, 273, 1021, 1054, 988, 274, 1115, 1116, 577,
	0, 275, 276, 1061, 0, 1042, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051,
	1047, 1046, 1050, 300, 301, 302, 303, 1078, 304, 1072,
	1071, 992, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1063, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 998, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1086, 1087,
	1010, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1070, 0, 0, 0, 337, 0, 338, 0, 0, 1097,
	339, 340, 1083, 1084, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1093, 0, 1020, 350, 0, 351,
	352, 353, 354, 355, 1056, 1057, 1060, 427, 1099, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1098, 364, 1065, 1066, 0, 1026,
	0, 366, 367, 1100, 1058, 1101, 368, 369, 370, 1102,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1094, 1103, 382, 383,
	1104, 0, 384, 0, 0, 0, 385, 386, 1049, 1048,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 1105, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 1106,
	415, 989, 250, 1107, 424, 425, 1011, 1059, 426, 1073,
	428, 429, 0, 0, 430, 0, 0, 0, 432, 433,
	434, 0, 0, 435, 436, 599, 1108, 437, 1109, 1088,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 1089, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 1069, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 1110, 483, 484, 485, 486, 999, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 0, 503, 504, 502, 505, 506, 507, 1052, 508,
	492, 493, 509, 510, 1111, 511, 512, 513, 514, 515,
	516, 1067, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 1114, 523, 524, 525, 526, 1090, 0, 529,
	530, 987, 528, 0, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 1079, 1080, 1081, 1082, 0, 547,
	0, 539, 540, 541, 1091, 542, 1092, 1009, 543, 544,
	545, 546, 0, 548, 549, 0, 993, 550, 551, 552,
	554, 555, 553, 556, 1053, 557, 0, 0, 558, 559,
	560, 616, 1076, 1113, 0, 562, 561, 563, 619, 0,
	0, 0, 0, 564, 565, 620, 566, 567, 568, 990,
	0, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 0, 984, 985, 1800, 0, 0, 0, 0,
	0, 0, 1015, 0, 0, 0, 1013, 1031, 1003, 1004,
	1005, 1001, 1002, 1014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1055, 1019,
	0, 0, 0, 259, 260, 1095, 261, 262, 263, 264,
	265, 570, 1068, 0, 266, 1075, 267, 1074, 0, 1085,
	268, 269, 270, 271, 272, 273, 1021, 1054, 988, 274,
	1115, 1116, 577, 0, 275, 276, 1061, 0, 1042, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1096, 298, 299, 1045,
	1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303,
	1078, 304, 1072, 1071, 992, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1063, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	998, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1086, 1087, 1010, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1070, 0, 0, 0, 337, 0, 338,
	0, 2461, 1097, 339, 340, 1083, 1084, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 1093, 0, 1020,
	350, 0, 351, 352, 353, 354, 355, 1056, 1057, 1060,
	427, 1099, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 1098, 364, 1065,
	1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101, 368,
	369, 370, 1102, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 1094,
	1103, 382, 383, 1104, 0, 384, 0, 0, 0, 385,
	386, 1049, 1048, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	1105, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 1106, 415, 989, 250, 1107, 424, 425, 1011,
	1059, 426, 1073, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 1108,
	437, 1109, 1088, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 1089, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	1069, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 1110, 483, 484, 485, 486,
	999, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 1052, 508, 492, 493, 509, 510, 1111, 511, 512,
	513, 514, 515, 516, 1067, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 1114, 523, 524, 525, 526,
	1090, 0, 529, 530, 987, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 1079, 1080, 1081,
	1082, 0, 547, 0, 539, 540, 541, 1091, 542, 1092,
	1009, 543, 544, 545, 546, 0, 548, 549, 0, 993,
	550, 551, 552, 554, 555, 553, 556, 1053, 557, 0,
	0, 558, 559, 560, 616, 1076, 1113, 0, 562, 561,
	563, 619, 0, 0, 0, 0, 564, 565, 620, 566,
	567, 568, 990, 0, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 984, 985, 1031, 1003,
	1004, 1005, 1001, 1002, 1014, 1015, 0, 0, 0, 1013,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1055,
	1019, 0, 0, 0, 259, 260, 1095, 261, 262, 263,
	264, 265, 570, 1068, 0, 266, 1075, 267, 1074, 0,
	1085, 268, 269, 270, 271, 272, 273, 1021, 1054, 988,
	274, 1115, 1116, 577, 0, 275, 276, 1061, 0, 1042,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1096, 298, 299,
	1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302,
	303, 1078, 304, 1072, 1071, 992, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1063,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 998, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1086, 1087, 1010, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1070, 0, 0, 0, 337, 0,
	338, 0, 0, 1097, 339, 340, 1083, 1084, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1093, 0,
	1020, 350, 0, 351, 352, 353, 354, 355, 1056, 1057,
	1060, 427, 1099, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1098, 364,
	1065, 1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101,
	368, 369, 370, 1102, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1094, 1103, 382, 383, 1104, 0, 384, 0, 0, 0,
	385, 386, 1049, 1048, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 1105, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 1106, 415, 989, 250, 1107, 424, 425,
	1011, 1059, 426, 1073, 428, 429, 0, 0, 430, 0,
	0, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	1108, 437, 1109, 1088, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 1089, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 1069, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 1110, 483, 484, 485,
	486, 999, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 1052, 508, 492, 493, 509, 510, 1111, 511,
	512, 513, 514, 515, 516, 1067, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 1114, 523, 524, 525,
	526, 1090, 0, 529, 530, 987, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 1079, 1080,
	1081, 1082, 0, 547, 0, 539, 540, 541, 1091, 542,
	1092, 1009, 543, 544, 545, 546, 0, 548, 549, 0,
	993, 550, 551, 552, 554, 555, 553, 556, 1053, 557,
	0, 0, 558, 559, 560, 616, 1076, 1113, 0, 562,
	561, 563, 619, 0, 0, 0, 0, 564, 565, 620,
	566, 567, 568, 990, 0, 0, 0, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 0, 984, 985, 0,
	0, 0, 0, 0, 0, 0, 1015, 1730, 0, 2466,
	1013, 1031, 1003, 1004, 1005, 1001, 1002, 1014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1055, 1019, 0, 0, 0, 259, 260, 1095,
	261, 262, 263, 264, 265, 570, 1068, 0, 266, 1075,
	267, 1074, 0, 1085, 268, 269, 270, 271, 272, 273,
	1021, 1054, 988, 274, 1115, 1116, 577, 0, 275, 276,
	1061, 0, 1042, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1096, 298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050,
	300, 301, 302, 303, 1078, 304, 1072, 1071, 992, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 1063, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 998, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1086, 1087, 1010, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1070, 0, 0,
	0, 337, 0, 338, 0, 0, 1097, 339, 340, 1083,
	1084, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 1093, 0, 1020, 350, 0, 351, 352, 353, 354,
	355, 1056, 1057, 1060, 427, 1099, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 1098, 364, 1065, 1066, 0, 1026, 0, 366, 367,
	1100, 1058, 1101, 368, 369, 370, 1102, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 1094, 1103, 382, 383, 1104, 0, 384,
	0, 0, 0, 385, 386, 1049, 1048, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 1105, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 1106, 415, 989, 250,
	1107, 424, 425, 1011, 1059, 426, 1073, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 1108, 437, 1109, 1088, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 1089,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 1069, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 1110,
	483, 484, 485, 486, 999, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 1052, 508, 492, 493, 509,
	510, 1111, 511, 512, 513, 514, 515, 516, 1067, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 1114,
	523, 524, 525, 526, 1090, 0, 529, 530, 987, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 1079, 1080, 1081, 1082, 0, 547, 0, 539, 540,
	541, 1091, 542, 1092, 1009, 543, 544, 545, 546, 0,
	548, 549, 0, 993, 550, 551, 552, 554, 555, 553,
	556, 1053, 557, 0, 0, 558, 559, 560, 616, 1076,
	1113, 0, 562, 561, 563, 619, 0, 0, 0, 0,
	564, 565, 620, 566, 567, 568, 990, 0, 0, 0,
	0, 0, 0, 986, 0, 0, 0, 0, 0, 0,
	984, 985, 0, 0, 0, 0, 0, 0, 0, 1015,
	0, 0, 2464, 1013, 1031, 1003, 1004, 1005, 1001, 1002,
	1014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1055, 1019, 0, 0, 0,
	259, 260, 1095, 261, 262, 263, 264, 265, 570, 1068,
	0, 266, 1075, 267, 1074, 0, 1085, 268, 269, 270,
	271, 272, 273, 1021, 1054, 988, 274, 1115, 1116, 577,
	0, 275, 276, 1061, 0, 1042, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051,
	1047, 1046, 1050, 300, 301, 302, 303, 1078, 304, 1072,
	1071, 992, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1063, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 998, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1086, 1087,
	1010, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1070, 0, 0, 0, 337, 0, 338, 0, 0, 1097,
	339, 340, 1083, 1084, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1093, 0, 1020, 350, 0, 351,
	352, 353, 354, 355, 1056, 1057, 1060, 427, 1099, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1098, 364, 1065, 1066, 0, 1026,
	0, 366, 367, 1100, 1058, 1101, 368, 369, 370, 1102,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1094, 1103, 382, 383,
	1104, 0, 384, 0, 0, 0, 385, 386, 1049, 1048,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 1105, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 1106,
	415, 989, 250, 1107, 424, 425, 1011, 1059, 426, 1073,
	428, 429, 0, 0, 430, 0, 0, 0, 432, 433,
	434, 0, 0, 435, 436, 599, 1108, 437, 1109, 1088,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 1089, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 1069, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 1110, 483, 484, 485, 486, 999, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 0, 503, 504, 502, 505, 506, 507, 1052, 508,
	492, 493, 509, 510, 1111, 511, 512, 513, 514, 515,
	516, 1067, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 1114, 523, 524, 525, 526, 1090, 0, 529,
	530, 987, 528, 0, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 1079, 1080, 1081, 1082, 0, 547,
	0, 539, 540, 541, 1091, 542, 1092, 1009, 543, 544,
	545, 546, 0, 548, 549, 0, 993, 550, 551, 552,
	554, 555, 553, 556, 1053, 557, 0, 0, 558, 559,
	560, 616, 1076, 1113, 0, 562, 561, 563, 619, 0,
	0, 0, 0, 564, 565, 620, 566, 567, 568, 990,
	0, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 0, 984, 985, 0, 0, 0, 0, 0,
	0, 0, 1015, 0, 0, 2452, 1013, 1031, 1003, 1004,
	1005, 1001, 1002, 1014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1055, 1019,
	0, 0, 0, 259, 260, 1095, 261, 262, 263, 264,
	265, 570, 1068, 0, 266, 1075, 267, 1074, 0, 1085,
	268, 269, 270, 271, 272, 273, 1021, 1054, 988, 274,
	1115, 1116, 577, 0, 275, 276, 1061, 0, 1042, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1096, 298, 299, 1045,
	1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303,
	1078, 304, 1072, 1071, 992, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1063, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	998, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1086, 1087, 1010, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1070, 0, 0, 0, 337, 0, 338,
	0, 0, 1097, 339, 340, 1083, 1084, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 1093, 0, 1020,
	350, 0, 351, 352, 353, 354, 355, 1056, 1057, 1060,
	427, 1099, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 1098, 364, 1065,
	1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101, 368,
	369, 370, 1102, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 1094,
	1103, 382, 383, 1104, 0, 384, 0, 0, 0, 385,
	386, 1049, 1048, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	1105, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 1106, 415, 989, 250, 1107, 424, 425, 1011,
	1059, 426, 1073, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 1108,
	437, 1109, 1088, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 1089, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	1069, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 1110, 483, 484, 485, 486,
	999, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 1052, 508, 492, 493, 509, 510, 1111, 511, 512,
	513, 514, 515, 516, 1067, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 1114, 523, 524, 525, 526,
	1090, 0, 529, 530, 987, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 1079, 1080, 1081,
	1082, 0, 547, 0, 539, 540, 541, 1091, 542, 1092,
	1009, 543, 544, 545, 546, 0, 548, 549, 0, 993,
	550, 551, 552, 554, 555, 553, 556, 1053, 557, 0,
	0, 558, 559, 560, 616, 1076, 1113, 0, 562, 561,
	563, 619, 0, 0, 0, 0, 564, 565, 620, 566,
	567, 568, 990, 0, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 984, 985, 0, 0,
	0, 0, 0, 0, 0, 1015, 0, 0, 2441, 1013,
	1031, 1003, 1004, 1005, 1001, 1002, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1055, 1019, 0, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 1068, 0, 266, 1075, 267,
	1074, 0, 1085, 268, 269, 270, 271, 272, 273, 1021,
	1054, 988, 274, 1115, 1116, 577, 0, 275, 276, 1061,
	0, 1042, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300,
	301, 302, 303, 1078, 304, 1072, 1071, 992, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1063, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 998, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1086, 1087, 1010, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1070, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 1083, 1084,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1093, 0, 1020, 350, 0, 351, 352, 353, 354, 355,
	1056, 1057, 1060, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1098, 364, 1065, 1066, 0, 1026, 0, 366, 367, 1100,
	1058, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1094, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 1049, 1048, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 989, 250, 1107,
	424, 425, 1011, 1059, 426, 1073, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 1088, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 1089, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 1069, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 999, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 1052, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 1067, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 1114, 523,
	524, 525, 526, 1090, 0, 529, 530, 987, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	1079, 1080, 1081, 1082, 0, 547, 0, 539, 540, 541,
	1091, 542, 1092, 1009, 543, 544, 545, 546, 0, 548,
	549, 0, 993, 550, 551, 552, 554, 555, 553, 556,
	1053, 557, 0, 0, 558, 559, 560, 616, 1076, 1113,
	0, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 990, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 0, 984,
	985, 0, 0, 0, 0, 0, 0, 0, 1015, 0,
	0, 2439, 1013, 2430, 2437, 1004, 1005, 1001, 1002, 1014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1055, 1019, 0, 0, 0, 259,
	260, 1095, 261, 262, 263, 264, 265, 570, 1068, 0,
	266, 1075, 267, 1074, 0, 1085, 268, 269, 270, 271,
	272, 273, 1021, 1054, 988, 274, 1115, 1116, 577, 0,
	275, 276, 1061, 0, 1042, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051, 1047,
	1046, 1050, 300, 301, 302, 303, 1078, 2433, 1072, 1071,
	992, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1063, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 998, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1086, 1087, 1010,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1070,
	0, 0, 0, 337, 0, 338, 0, 0, 1097, 339,
	340, 1083, 1084, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1093, 0, 1020, 350, 0, 351, 352,
	353, 2434, 355, 1056, 1057, 1060, 427, 1099, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1098, 364, 1065, 1066, 0, 1026, 0,
	366, 367, 1100, 1058, 1101, 368, 369, 370, 1102, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1094, 1103, 382, 383, 1104,
	0, 384, 0, 0, 0, 385, 386, 1049, 1048, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 2435,
	2432, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 1105, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 1106, 415,
	989, 250, 1107, 424, 425, 1011, 1059, 426, 1073, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 1108, 437, 1109, 1088, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 1089, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 1069, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 1110, 483, 484, 485, 486, 999, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 2436,
	0, 503, 504, 502, 505, 506, 507, 1052, 508, 492,
	493, 509, 510, 1111, 511, 512, 513, 514, 515, 516,
	1067, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 1114, 523, 524, 525, 526, 1090, 0, 529, 530,
	987, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 1079, 1080, 1081, 1082, 0, 547, 0,
	539, 540, 541, 1091, 542, 1092, 1009, 543, 544, 545,
	546, 0, 548, 549, 0, 993, 550, 551, 552, 554,
	555, 553, 556, 1053, 557, 0, 0, 558, 559, 560,
	616, 1076, 1113, 0, 562, 561, 563, 619, 0, 0,
	0, 0, 564, 565, 620, 566, 2431, 568, 990, 0,
	0, 0, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 0, 984, 985, 0, 0, 0, 0, 0, 0,
	0, 1015, 0, 0, 2427, 1013, 2430, 2437, 1004, 1005,
	1001, 1002, 1014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1055, 1019, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 1068, 0, 266, 1075, 267, 1074, 0, 1085, 268,
	269, 270, 271, 272, 273, 1021, 1054, 988, 274, 1115,
	1116, 577, 0, 275, 276, 1061, 0, 1042, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 1045, 1043,
	1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303, 1078,
	2433, 1072, 1071, 992, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1063, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 998,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1086, 1087, 1010, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1070, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 1083, 1084, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1093, 0, 1020, 350,
	0, 351, 352, 353, 2434, 355, 1056, 1057, 1060, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1098, 364, 1065, 1066,
	0, 1026, 0, 366, 367, 1100, 1058, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 1094, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	1049, 1048, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 2435, 2432, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 989, 250, 1107, 424, 425, 1011, 1059,
	426, 1073, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 1088, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 1089, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 1069,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 999,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 2436, 0, 503, 504, 502, 505, 506, 507,
	1052, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 1067, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 1114, 523, 524, 525, 526, 1090,
	0, 529, 530, 987, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 1079, 1080, 1081, 1082,
	0, 547, 0, 539, 540, 541, 1091, 542, 1092, 1009,
	543, 544, 545, 546, 0, 548, 549, 0, 993, 550,
	551, 552, 554, 555, 553, 556, 1053, 557, 0, 0,
	558, 559, 560, 616, 1076, 1113, 0, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 2431,
	568, 990, 0, 0, 0, 0, 0, 0, 986, 0,
	0, 0, 0, 0, 0, 984, 985, 1031, 1003, 1004,
	1005, 1001, 1002, 1014, 1015, 0, 0, 0, 1013, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1055, 1019,
	0, 0, 0, 259, 260, 1095, 261, 262, 263, 264,
	265, 570, 1068, 0, 266, 1075, 267, 1074, 0, 1085,
	268, 269, 270, 271, 272, 273, 1021, 1054, 988, 274,
	1115, 1116, 577, 0, 275, 276, 1061, 0, 1042, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1096, 298, 299, 1045,
	1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303,
	1078, 304, 1072, 1071, 992, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1063, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	998, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1086, 1087, 1010, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1070, 0, 0, 0, 337, 0, 338,
	0, 0, 1097, 339, 340, 1083, 1084, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 1093, 0, 1020,
	350, 0, 351, 352, 353, 354, 355, 1056, 1057, 1060,
	427, 1099, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 1098, 364, 1065,
	1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101, 368,
	369, 370, 1102, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 1094,
	1103, 382, 383, 1104, 0, 384, 0, 0, 0, 385,
	386, 1049, 1048, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	1105, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 1106, 415, 989, 250, 1107, 424, 425, 1011,
	1059, 426, 1073, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 1108,
	437, 1109, 1088, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 1089, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	1069, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 1110, 483, 484, 485, 486,
	999, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 1052, 508, 492, 493, 509, 510, 1111, 511, 512,
	513, 514, 515, 516, 1067, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 1114, 523, 524, 525, 526,
	1090, 0, 529, 530, 987, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 1079, 1080, 1081,
	1082, 0, 547, 0, 539, 540, 541, 1091, 542, 1092,
	1009, 543, 544, 545, 546, 0, 548, 549, 0, 993,
	550, 551, 552, 554, 555, 553, 556, 1053, 557, 0,
	0, 558, 559, 560, 616, 1076, 1113, 0, 562, 561,
	563, 619, 0, 0, 0, 0, 564, 565, 620, 566,
	567, 568, 990, 0, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 984, 985, 0, 0,
	0, 0, 0, 1738, 0, 1015, 0, 0, 0, 1013,
	1031, 1003, 1004, 1005, 1001, 1002, 1014, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 2221, 257, 258, 0, 0, 0, 0,
	0, 1055, 1019, 0, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 1068, 0, 266, 1075, 267,
	1074, 0, 1085, 268, 269, 270, 271, 272, 273, 1021,
	1054, 988, 274, 1115, 1116, 577, 0, 275, 276, 1061,
	0, 1042, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300,
	301, 302, 303, 1078, 304, 1072, 1071, 992, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1063, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 998, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1086, 1087, 1010, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1070, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 1083, 1084,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1093, 0, 1020, 350, 0, 351, 352, 353, 354, 355,
	1056, 1057, 1060, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1098, 364, 1065, 1066, 0, 1026, 0, 366, 367, 1100,
	1058, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1094, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 1049, 1048, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 989, 250, 1107,
	424, 425, 1011, 1059, 426, 1073, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 1088, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 1089, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 1069, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 999, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 1052, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 1067, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 1114, 523,
	524, 525, 526, 1090, 0, 529, 530, 987, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	1079, 1080, 1081, 1082, 0, 547, 0, 539, 540, 541,
	1091, 542, 1092, 1009, 543, 544, 545, 546, 0, 548,
	549, 0, 993, 550, 551, 552, 554, 555, 553, 556,
	1053, 557, 0, 0, 558, 559, 560, 616, 1076, 1113,
	0, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 990, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 0, 984,
	985, 0, 0, 0, 0, 0, 0, 0, 1015, 0,
	0, 1590, 1013, 1031, 1003, 1004, 1005, 1001, 1002, 1014,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1055, 1019, 0, 0, 0, 259,
	260, 1095, 261, 262, 263, 264, 265, 570, 1068, 0,
	266, 1075, 267, 1074, 0, 1085, 268, 269, 270, 271,
	272, 273, 1021, 1054, 988, 274, 1115, 1116, 577, 0,
	275, 276, 1061, 0, 1042, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051, 1047,
	1046, 1050, 300, 301, 302, 303, 1078, 304, 1072, 1071,
	992, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1063, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 998, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1086, 1087, 1010,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1070,
	0, 0, 0, 337, 0, 338, 0, 0, 1097, 339,
	340, 1083, 1084, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1093, 0, 1020, 350, 0, 351, 352,
	353, 354, 355, 1056, 1057, 1060, 427, 1099, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1098, 364, 1065, 1066, 0, 1026, 0,
	366, 367, 1100, 1058, 1101, 368, 369, 370, 1102, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1094, 1103, 382, 383, 1104,
	0, 384, 0, 0, 0, 385, 386, 1049, 1048, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 1105, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 1106, 415,
	989, 250, 1107, 424, 425, 1011, 1059, 426, 1073, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 1108, 437, 1109, 1088, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 1089, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 1069, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 1110, 483, 484, 485, 486, 999, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 1052, 508, 492,
	493, 509, 510, 1111, 511, 512, 513, 514, 515, 516,
	1067, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 1114, 523, 524, 525, 526, 1090, 0, 529, 530,
	987, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 1079, 1080, 1081, 1082, 0, 547, 0,
	539, 540, 541, 1091, 542, 1092, 1009, 543, 544, 545,
	546, 0, 548, 549, 0, 993, 550, 551, 552, 554,
	555, 553, 556, 1053, 557, 0, 0, 558, 559, 560,
	616, 1076, 1113, 0, 562, 561, 563, 619, 0, 0,
	0, 0, 564, 565, 620, 566, 567, 568, 990, 0,
	0, 0, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 0, 984, 985, 0, 0, 0, 0, 0, 0,
	0, 1015, 0, 0, 1525, 1013, 1031, 1003, 1004, 1005,
	1001, 1002, 1014, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 1055, 1019, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 1068, 0, 266, 1075, 267, 1074, 0, 1085, 268,
	269, 270, 271, 272, 273, 1021, 1054, 988, 274, 1115,
	1116, 577, 0, 275, 276, 1061, 0, 1042, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 1045, 1043,
	1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303, 1078,
	304, 1072, 1071, 992, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 1063, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 998,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1086, 1087, 1010, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 1070, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 1083, 1084, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1093, 0, 1020, 350,
	0, 351, 352, 353, 354, 355, 1056, 1057, 1060, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1098, 364, 1065, 1066,
	0, 1026, 0, 366, 367, 1100, 1058, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 1094, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	1049, 1048, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 989, 250, 1107, 424, 425, 1011, 1059,
	426, 1073, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 1088, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 1089, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 1069,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 999,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	1052, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 1067, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 1114, 523, 524, 525, 526, 1090,
	0, 529, 530, 987, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 1079, 1080, 1081, 1082,
	0, 547, 0, 539, 540, 541, 1091, 542, 1092, 1009,
	543, 544, 545, 546, 0, 548, 549, 0, 993, 550,
	551, 552, 554, 555, 553, 556, 1053, 557, 0, 0,
	558, 559, 560, 616, 1076, 1113, 0, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 990, 0, 0, 0, 0, 0, 0, 986, 0,
	0, 0, 0, 0, 0, 984, 985, 0, 0, 0,
	0, 0, 0, 0, 1015, 0, 0, 1520, 1013, 1031,
	1003, 1004, 1005, 1001, 1002, 1014, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1055, 1019, 0, 0, 0, 259, 260, 1095, 261, 262,
	263, 264, 265, 570, 1068, 0, 266, 1075, 267, 1074,
	0, 1085, 268, 269, 270, 271, 272, 273, 1021, 1054,
	988, 274, 1115, 1116, 577, 0, 275, 276, 1061, 0,
	1042, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1096, 298,
	299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301,
	302, 303, 1078, 304, 1072, 1071, 992, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1063, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 998, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1086, 1087, 1010, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1070, 0, 0, 0, 337,
	0, 338, 0, 0, 1097, 339, 340, 1083, 1084, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1093,
	0, 1020, 350, 0, 351, 352, 353, 354, 355, 1056,
	1057, 1060, 427, 1099, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1098,
	364, 1065, 1066, 0, 1026, 0, 366, 367, 1100, 1058,
	1101, 368, 369, 370, 1102, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1094, 1103, 382, 383, 1104, 0, 384, 0, 0,
	0, 385, 386, 1049, 1048, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 1105, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 1106, 415, 989, 250, 1107, 424,
	425, 1011, 1059, 426, 1073, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 1108, 437, 1109, 1088, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 1089, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 1069, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 1110, 483, 484,
	485, 486, 999, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 1052, 508, 492, 493, 509, 510, 1111,
	511, 512, 513, 514, 515, 516, 1067, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 1114, 523, 524,
	525, 526, 1090, 0, 529, 530, 987, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 1079,
	1080, 1081, 1082, 0, 547, 0, 539, 540, 541, 1091,
	542, 1092, 1009, 543, 544, 545, 546, 0, 548, 549,
	0, 993, 550, 551, 552, 554, 555, 553, 556, 1053,
	557, 0, 0, 558, 559, 560, 616, 1076, 1113, 0,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 990, 0, 0, 0, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 0, 984, 985,
	0, 0, 0, 0, 0, 0, 0, 1015, 0, 0,
	1511, 1013, 1031, 1003, 1004, 1005, 1001, 1002, 1014, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1055, 1019, 0, 0, 0, 259, 260,
	1095, 261, 262, 263, 264, 265, 570, 1068, 0, 266,
	1075, 267, 1074, 0, 1085, 268, 269, 270, 271, 272,
	273, 1021, 1054, 988, 274, 1115, 1116, 577, 0, 275,
	276, 1061, 0, 1042, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1096, 298, 299, 1045, 1043, 1044, 1051, 1047, 1046,
	1050, 300, 301, 302, 303, 1078, 304, 1072, 1071, 992,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 1063, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 998, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1086, 1087, 1010, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 1070, 0,
	0, 0, 337, 0, 338, 0, 0, 1097, 339, 340,
	1083, 1084, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 1093, 0, 1020, 350, 0, 351, 352, 353,
	354, 355, 1056, 1057, 1060, 427, 1099, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 1098, 364, 1065, 1066, 0, 1026, 0, 366,
	367, 1100, 1058, 1101, 368, 369, 370, 1102, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 1094, 1103, 382, 383, 1104, 0,
	384, 0, 0, 0, 385, 386, 1049, 1048, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 1105, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 1106, 415, 989,
	250, 1107, 424, 425, 1011, 1059, 426, 1073, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 434, 0,
	0, 435, 436, 599, 1108, 437, 1109, 1088, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	1089, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 1069, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	1110, 483, 484, 485, 486, 999, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 1052, 508, 492, 493,
	509, 510, 1111, 511, 512, 513, 514, 515, 516, 1067,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	1114, 523, 524, 525, 526, 1090, 0, 529, 530, 987,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 1079, 1080, 1081, 1082, 0, 547, 0, 539,
	540, 541, 1091, 542, 1092, 1009, 543, 544, 545, 546,
	0, 548, 549, 0, 993, 550, 551, 552, 554, 555,
	553, 556, 1053, 557, 0, 0, 558, 559, 560, 616,
	1076, 1113, 0, 562, 561, 563, 619, 0, 0, 0,
	0, 564, 565, 620, 566, 567, 568, 990, 0, 0,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 0,
	0, 984, 985, 0, 0, 0, 0, 0, 0, 0,
	1015, 0, 0, 1506, 1013, 1031, 1003, 1004, 1005, 1001,
	1002, 1014, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 1055, 1019, 0, 0,
	0, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	1068, 0, 266, 1075, 267, 1074, 0, 1085, 268, 269,
	270, 271, 272, 273, 1021, 1054, 988, 274, 1115, 1116,
	577, 0, 275, 276, 1061, 0, 1042, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1096, 298, 299, 1045, 1043, 1044,
	1051, 1047, 1046, 1050, 300, 301, 302, 303, 1078, 304,
	1072, 1071, 992, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 1063, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 998, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 1086,
	1087, 1010, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 1070, 0, 0, 0, 337, 0, 338, 0, 0,
	1097, 339, 340, 1083, 1084, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 1093, 0, 1020, 350, 0,
	351, 352, 353, 354, 355, 1056, 1057, 1060, 427, 1099,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 1098, 364, 1065, 1066, 0,
	1026, 0, 366, 367, 1100, 1058, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 1094, 1103, 382,
	383, 1104, 0, 384, 0, 0, 0, 385, 386, 1049,
	1048, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 989, 250, 1107, 424, 425, 1011, 1059, 426,
	1073, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 1108, 437, 1109,
	1088, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 1089, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 1069, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 1110, 483, 484, 485, 486, 999, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 1052,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 1067, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 1114, 523, 524, 525, 526, 1090, 0,
	529, 530, 987, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 1079, 1080, 1081, 1082, 0,
	547, 0, 539, 540, 541, 1091, 542, 1092, 1009, 543,
	544, 545, 546, 0, 548, 549, 0, 993, 550, 551,
	552, 554, 555, 553, 556, 1053, 557, 0, 0, 558,
	559, 560, 616, 1076, 1113, 0, 562, 561, 563, 619,
	0, 0, 0, 0, 564, 565, 620, 566, 567, 568,
	990, 0, 0, 0, 0, 0, 0, 986, 0, 0,
	0, 0, 0, 0, 984, 985, 0, 0, 0, 0,
	0, 0, 0, 1015, 0, 0, 1488, 1013, 1031, 1003,
	1004, 1005, 1001, 1002, 1014, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1055,
	1019, 0, 0, 0, 259, 260, 1095, 261, 262, 263,
	264, 265, 570, 1068, 0, 266, 1075, 267, 1074, 0,
	1085, 268, 269, 270, 271, 272, 273, 1021, 1054, 988,
	274, 1115, 1116, 577, 0, 275, 276, 1061, 0, 1042,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1096, 298, 299,
	1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302,
	303, 1078, 304, 1072, 1071, 992, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1063,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 998, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1086, 1087, 1010, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1070, 0, 0, 0, 337, 0,
	338, 0, 0, 1097, 339, 340, 1083, 1084, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1093, 0,
	1020, 350, 0, 351, 352, 353, 354, 355, 1056, 1057,
	1060, 427, 1099, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1098, 364,
	1065, 1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101,
	368, 369, 370, 1102, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1094, 1103, 382, 383, 1104, 0, 384, 0, 0, 0,
	385, 386, 1049, 1048, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 1105, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 1106, 415, 989, 250, 1107, 424, 425,
	1011, 1059, 426, 1073, 428, 429, 0, 0, 430, 0,
	0, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	1108, 437, 1109, 1088, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 1089, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 1069, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 1110, 483, 484, 485,
	486, 999, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 1052, 508, 492, 493, 509, 510, 1111, 511,
	512, 513, 514, 515, 516, 1067, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 1114, 523, 524, 525,
	526, 1090, 0, 529, 530, 987, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 1079, 1080,
	1081, 1082, 0, 547, 0, 539, 540, 541, 1091, 542,
	1092, 1009, 543, 544, 545, 546, 0, 548, 549, 0,
	993, 550, 551, 552, 554, 555, 553, 556, 1053, 557,
	0, 0, 558, 559, 560, 616, 1076, 1113, 0, 562,
	561, 563, 619, 0, 0, 0, 0, 564, 565, 620,
	566, 567, 568, 990, 0, 0, 0, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 0, 984, 985, 0,
	0, 0, 0, 0, 0, 0, 1015, 0, 0, 1371,
	1013, 1031, 1003, 1004, 1005, 1001, 1002, 1014, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1055, 1019, 0, 0, 0, 259, 260, 1095,
	261, 262, 263, 264, 265, 570, 1068, 0, 266, 1075,
	267, 1074, 0, 1085, 268, 269, 270, 271, 272, 273,
	1021, 1054, 988, 274, 1115, 1116, 577, 0, 275, 276,
	1061, 0, 1042, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1096, 298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050,
	300, 301, 302, 303, 1078, 304, 1072, 1071, 992, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 1063, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 998, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1086, 1087, 1010, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1070, 0, 0,
	0, 337, 0, 338, 0, 0, 1097, 339, 340, 1083,
	1084, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 1093, 0, 1020, 350, 0, 351, 352, 353, 354,
	355, 1370, 1057, 1060, 427, 1099, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 1098, 364, 1065, 1066, 0, 1026, 0, 366, 367,
	1100, 1058, 1101, 368, 369, 370, 1102, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 1094, 1103, 382, 383, 1104, 0, 384,
	0, 0, 0, 385, 386, 1049, 1048, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 1105, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 1106, 415, 989, 250,
	1107, 424, 425, 1011, 1059, 426, 1073, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 1108, 437, 1109, 1088, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 1089,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 1069, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 1110,
	483, 484, 485, 486, 999, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 1052, 508, 492, 493, 509,
	510, 1111, 511, 512, 513, 514, 515, 516, 1067, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 1114,
	523, 524, 525, 526, 1090, 0, 529, 530, 987, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 1079, 1080, 1081, 1082, 0, 547, 0, 539, 540,
	541, 1091, 542, 1092, 1009, 543, 544, 545, 546, 0,
	548, 549, 0, 993, 550, 551, 552, 554, 555, 553,
	556, 1053, 557, 0, 0, 558, 559, 560, 616, 1076,
	1113, 0, 562, 561, 563, 619, 0, 0, 0, 0,
	564, 565, 620, 566, 567, 568, 990, 0, 0, 0,
	0, 0, 0, 986, 0, 0, 0, 0, 0, 0,
	984, 985, 0, 0, 0, 0, 0, 0, 0, 1015,
	0, 0, 1365, 1013, 1031, 1003, 1004, 1005, 1001, 1002,
	1014, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1055, 1019, 0, 0, 0,
	259, 260, 1095, 261, 262, 263, 264, 265, 570, 1068,
	0, 266, 1075, 267, 1074, 0, 1085, 268, 269, 270,
	271, 272, 273, 1021, 1054, 988, 274, 1115, 1116, 577,
	0, 275, 276, 1061, 0, 1042, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051,
	1047, 1046, 1050, 300, 301, 302, 303, 1078, 304, 1072,
	1071, 992, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1063, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 998, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1086, 1087,
	1010, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1070, 0, 0, 0, 337, 0, 338, 0, 0, 1097,
	339, 340, 1083, 1084, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1093, 0, 1020, 350, 0, 351,
	352, 353, 354, 355, 1364, 1057, 1060, 427, 1099, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1098, 364, 1065, 1066, 0, 1026,
	0, 366, 367, 1100, 1058, 1101, 368, 369, 370, 1102,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1094, 1103, 382, 383,
	1104, 0, 384, 0, 0, 0, 385, 386, 1049, 1048,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 1105, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 1106,
	415, 989, 250, 1107, 424, 425, 1011, 1059, 426, 1073,
	428, 429, 0, 0, 430, 0, 0, 0, 432, 433,
	434, 0, 0, 435, 436, 599, 1108, 437, 1109, 1088,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 1089, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 1069, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 1110, 483, 484, 485, 486, 999, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 0, 503, 504, 502, 505, 506, 507, 1052, 508,
	492, 493, 509, 510, 1111, 511, 512, 513, 514, 515,
	516, 1067, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 1114, 523, 524, 525, 526, 1090, 0, 529,
	530, 987, 528, 0, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 1079, 1080, 1081, 1082, 0, 547,
	0, 539, 540, 541, 1091, 542, 1092, 1009, 543, 544,
	545, 546, 0, 548, 549, 0, 993, 550, 551, 552,
	554, 555, 553, 556, 1053, 557, 0, 0, 558, 559,
	560, 616, 1076, 1113, 0, 562, 561, 563, 619, 0,
	0, 0, 0, 564, 565, 620, 566, 567, 568, 990,
	0, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	0, 0, 0, 984, 985, 0, 0, 0, 0, 0,
	0, 0, 1015, 0, 0, 1358, 1013, 1031, 1003, 1004,
	1005, 1001, 1002, 1014, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 1055, 1019,
	0, 0, 0, 259, 260, 1095, 261, 262, 263, 264,
	265, 570, 1068, 0, 266, 1075, 267, 1074, 0, 1085,
	268, 269, 270, 271, 272, 273, 1021, 1054, 988, 274,
	1115, 1116, 577, 0, 275, 276, 1061, 0, 1042, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1096, 298, 299, 1045,
	1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303,
	1078, 304, 1072, 1071, 992, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 1063, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	998, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 1086, 1087, 1010, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 1070, 0, 0, 0, 337, 0, 338,
	0, 0, 1097, 339, 340, 1083, 1084, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 1093, 0, 1020,
	350, 0, 351, 352, 353, 354, 355, 1056, 1057, 1060,
	427, 1099, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 1098, 364, 1065,
	1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101, 368,
	369, 370, 1102, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 1094,
	1103, 382, 383, 1104, 0, 384, 0, 0, 0, 385,
	386, 1049, 1048, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	1105, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 1106, 415, 989, 250, 1107, 424, 425, 1011,
	1059, 426, 1073, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 1108,
	437, 1109, 1088, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 1089, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	1069, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 1110, 483, 484, 485, 486,
	999, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 1052, 508, 492, 493, 509, 510, 1111, 511, 512,
	513, 514, 515, 516, 1067, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 1114, 523, 524, 525, 526,
	1090, 0, 529, 530, 987, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 1079, 1080, 1081,
	1082, 0, 547, 0, 539, 540, 541, 1091, 542, 1092,
	1009, 543, 544, 545, 546, 0, 548, 549, 0, 993,
	550, 551, 552, 554, 555, 553, 556, 1053, 557, 0,
	0, 558, 559, 560, 616, 1076, 1113, 0, 562, 561,
	563, 619, 0, 0, 0, 0, 564, 565, 620, 566,
	567, 568, 990, 0, 0, 0, 0, 0, 0, 986,
	0, 0, 0, 0, 0, 0, 984, 985, 1031, 1003,
	1004, 1005, 1001, 1002, 1014, 1015, 0, 0, 0, 1013,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1055,
	1019, 0, 0, 0, 259, 260, 1095, 261, 262, 263,
	264, 265, 570, 1068, 0, 266, 1075, 267, 1074, 0,
	1085, 268, 269, 270, 271, 272, 273, 1021, 1054, 988,
	274, 1115, 1116, 577, 0, 275, 276, 1061, 0, 1042,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1096, 298, 299,
	1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302,
	303, 1078, 304, 1072, 1071, 992, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 1063,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 998, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1086, 1087, 1010, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 1070, 0, 0, 0, 337, 0,
	338, 0, 0, 1097, 339, 340, 1083, 1084, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1093, 0,
	1020, 350, 0, 351, 352, 353, 354, 355, 1056, 1057,
	1060, 427, 1099, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1098, 364,
	1065, 1066, 0, 1026, 0, 366, 367, 1100, 1058, 1101,
	368, 369, 370, 1102, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1094, 1103, 382, 383, 1104, 0, 384, 0, 0, 0,
	385, 386, 1049, 1048, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 1105, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 1106, 415, 989, 250, 1107, 424, 425,
	1011, 1059, 426, 1073, 428, 429, 0, 0, 430, 0,
	0, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	1108, 437, 1109, 1088, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 1089, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 1069, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 1110, 483, 484, 485,
	486, 999, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 1052, 508, 492, 493, 509, 510, 1111, 511,
	512, 513, 514, 515, 516, 1067, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 1114, 523, 524, 525,
	526, 1090, 0, 529, 530, 987, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 1079, 1080,
	1081, 1082, 0, 547, 0, 539, 540, 541, 1091, 542,
	1092, 1009, 543, 544, 545, 546, 0, 548, 549, 0,
	993, 550, 551, 552, 554, 555, 553, 556, 1053, 557,
	0, 0, 558, 559, 560, 616, 1076, 1113, 0, 562,
	561, 563, 619, 0, 0, 0, 0, 564, 565, 620,
	566, 567, 568, 990, 0, 0, 0, 0, 0, 0,
	986, 0, 0, 0, 0, 0, 0, 984, 985, 1031,
	1003, 1004, 1005, 1001, 1002, 1014, 1015, 0, 0, 0,
	1013, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	1055, 1019, 0, 0, 0, 259, 260, 1095, 261, 262,
	263, 264, 265, 570, 1068, 0, 266, 1075, 267, 1074,
	0, 1085, 268, 269, 270, 271, 272, 273, 1021, 1054,
	988, 274, 1115, 1116, 577, 0, 275, 276, 1061, 0,
	1042, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1096, 298,
	4205, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301,
	302, 303, 1078, 304, 1072, 1071, 992, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1063, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 998, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1086, 1087, 1010, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1070, 0, 0, 0, 337,
	0, 338, 0, 0, 1097, 339, 340, 1083, 1084, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1093,
	0, 1020, 350, 0, 351, 352, 353, 354, 355, 1056,
	1057, 1060, 427, 1099, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1098,
	364, 1065, 1066, 0, 1026, 0, 366, 367, 1100, 1058,
	1101, 368, 369, 370, 1102, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1094, 1103, 382, 383, 1104, 0, 384, 0, 0,
	0, 385, 386, 1049, 1048, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 1105, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 1106, 415, 989, 250, 1107, 424,
	425, 1011, 1059, 426, 1073, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 1108, 437, 1109, 1088, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 1089, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 1069, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 1110, 483, 484,
	485, 486, 999, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 1052, 508, 492, 493, 509, 510, 1111,
	511, 512, 513, 514, 515, 516, 1067, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 1114, 523, 524,
	525, 526, 1090, 0, 529, 530, 987, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 1079,
	1080, 1081, 1082, 0, 547, 0, 539, 540, 541, 1091,
	542, 1092, 1009, 543, 544, 545, 546, 0, 4204, 549,
	0, 993, 550, 551, 552, 554, 555, 553, 556, 1053,
	557, 0, 0, 558, 559, 560, 616, 1076, 1113, 0,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 990, 0, 0, 0, 0, 0,
	0, 986, 0, 0, 0, 0, 0, 0, 984, 985,
	1031, 1003, 1004, 1005, 1001, 1002, 1014, 1015, 0, 0,
	0, 1013, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1055, 1019, 0, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 4203, 1068, 0, 266, 1075, 267,
	1074, 0, 1085, 268, 269, 270, 271, 272, 273, 1021,
	1054, 988, 274, 1115, 1116, 577, 0, 275, 276, 1061,
	0, 1042, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 4205, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300,
	301, 302, 303, 1078, 304, 1072, 1071, 992, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 1063, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 998, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1086, 1087, 1010, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 1070, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 1083, 1084,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1093, 0, 1020, 350, 0, 351, 352, 353, 354, 355,
	1056, 1057, 1060, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1098, 364, 1065, 1066, 0, 1026, 0, 366, 367, 1100,
	1058, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1094, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 1049, 1048, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 989, 250, 1107,
	424, 425, 1011, 1059, 426, 1073, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 1088, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 1089, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 1069, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 999, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 1052, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 1067, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 1114, 523,
	524, 525, 526, 1090, 0, 529, 530, 987, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	1079, 1080, 1081, 1082, 0, 547, 0, 539, 540, 541,
	1091, 542, 1092, 1009, 543, 544, 545, 546, 0, 4204,
	549, 0, 993, 550, 551, 552, 554, 555, 553, 556,
	1053, 557, 0, 0, 558, 559, 560, 616, 1076, 1113,
	0, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 990, 0, 0, 0, 0,
	0, 0, 986, 0, 0, 0, 0, 0, 0, 984,
	985, 1031, 1003, 1004, 1005, 2865, 2866, 1014, 1015, 0,
	0, 0, 1013, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 1055, 1019, 0, 0, 0, 259, 260, 1095,
	261, 262, 263, 264, 265, 570, 1068, 0, 266, 1075,
	267, 1074, 0, 1085, 268, 269, 270, 271, 272, 273,
	1021, 1054, 988, 274, 1115, 1116, 577, 0, 275, 276,
	1061, 0, 1042, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1096, 298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050,
	300, 301, 302, 303, 1078, 304, 1072, 1071, 992, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 1063, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 998, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 1086, 1087, 1010, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 1070, 0, 0,
	0, 337, 0, 338, 0, 0, 1097, 339, 340, 1083,
	1084, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 1093, 0, 1020, 350, 0, 351, 352, 353, 354,
	355, 1056, 1057, 1060, 427, 1099, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 1098, 364, 1065, 1066, 0, 1026, 0, 366, 367,
	1100, 1058, 1101, 368, 369, 370, 1102, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 1094, 1103, 382, 383, 1104, 0, 384,
	0, 0, 0, 385, 386, 1049, 1048, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 1105, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 1106, 415, 989, 250,
	1107, 424, 425, 1011, 1059, 426, 1073, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 1108, 437, 1109, 1088, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 1089,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 1069, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 1110,
	483, 484, 485, 486, 999, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 1052, 508, 492, 493, 509,
	510, 1111, 511, 512, 513, 514, 515, 516, 1067, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 1114,
	523, 524, 525, 526, 1090, 0, 529, 530, 987, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 1079, 1080, 1081, 1082, 0, 547, 0, 539, 540,
	541, 1091, 542, 1092, 1009, 543, 544, 545, 546, 0,
	548, 549, 0, 993, 550, 551, 552, 554, 555, 553,
	556, 1053, 557, 0, 0, 558, 559, 560, 616, 1076,
	1113, 0, 562, 561, 563, 619, 0, 0, 0, 0,
	564, 565, 620, 566, 567, 568, 990, 0, 0, 0,
	0, 0, 0, 986, 0, 0, 0, 0, 0, 0,
	984, 985, 1031, 1003, 1004, 1005, 2863, 2864, 1014, 1015,
	0, 0, 0, 1013, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 1055, 1019, 0, 0, 0, 259, 260,
	1095, 261, 262, 263, 264, 265, 570, 1068, 0, 266,
	1075, 267, 1074, 0, 1085, 268, 269, 270, 271, 272,
	273, 1021, 1054, 988, 274, 1115, 1116, 577, 0, 275,
	276, 1061, 0, 1042, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1096, 298, 299, 1045, 1043, 1044, 1051, 1047, 1046,
	1050, 300, 301, 302, 303, 1078, 304, 1072, 1071, 992,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 1063, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 998, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1086, 1087, 1010, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 1070, 0,
	0, 0, 337, 0, 338, 0, 0, 1097, 339, 340,
	1083, 1084, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 1093, 0, 1020, 350, 0, 351, 352, 353,
	354, 355, 1056, 1057, 1060, 427, 1099, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 1098, 364, 1065, 1066, 0, 1026, 0, 366,
	367, 1100, 1058, 1101, 368, 369, 370, 1102, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 1094, 1103, 382, 383, 1104, 0,
	384, 0, 0, 0, 385, 386, 1049, 1048, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 1105, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 1106, 415, 989,
	250, 1107, 424, 425, 1011, 1059, 426, 1073, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 434, 0,
	0, 435, 436, 599, 1108, 437, 1109, 1088, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	1089, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 1069, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	1110, 483, 484, 485, 486, 999, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 1052, 508, 492, 493,
	509, 510, 1111, 511, 512, 513, 514, 515, 516, 1067,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	1114, 523, 524, 525, 526, 1090, 0, 529, 530, 987,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 1079, 1080, 1081, 1082, 0, 547, 0, 539,
	540, 541, 1091, 542, 1092, 1009, 543, 544, 545, 546,
	0, 548, 549, 0, 993, 550, 551, 552, 554, 555,
	553, 556, 1053, 557, 0, 0, 558, 559, 560, 616,
	1076, 1113, 0, 562, 561, 563, 619, 0, 0, 0,
	0, 564, 565, 620, 566, 567, 568, 990, 0, 0,
	0, 0, 0, 0, 986, 0, 0, 0, 0, 0,
	0, 984, 985, 1031, 1003, 1004, 1005, 1001, 1002, 1014,
	1015, 0, 0, 0, 1013, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 1055, 1019, 0, 0, 0, 259,
	260, 1095, 261, 262, 263, 264, 265, 570, 1068, 0,
	266, 1075, 267, 1074, 0, 1085, 268, 269, 270, 271,
	272, 273, 1021, 1054, 988, 274, 1115, 1116, 577, 0,
	275, 276, 1061, 0, 1042, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051, 1047,
	1046, 1050, 300, 301, 302, 303, 1078, 304, 1072, 1071,
	992, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 1063, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 998, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 1086, 1087, 1010,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 1070,
	0, 0, 0, 337, 0, 338, 0, 0, 1097, 339,
	340, 1083, 1084, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 1093, 0, 1020, 350, 0, 351, 352,
	353, 354, 355, 1056, 1057, 1060, 427, 1099, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 1098, 364, 1065, 1066, 0, 1026, 0,
	366, 367, 1100, 1058, 1101, 368, 369, 370, 1102, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 1094, 1103, 382, 383, 1104,
	0, 384, 0, 0, 0, 385, 386, 1049, 1048, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 1105, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 1106, 415,
	989, 250, 1107, 424, 425, 1011, 1059, 426, 1073, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 1108, 437, 1109, 1088, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 1089, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 1069, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 1110, 483, 484, 485, 486, 999, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 1052, 508, 492,
	493, 509, 510, 1111, 511, 512, 513, 514, 515, 516,
	1067, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 1114, 523, 524, 525, 526, 1090, 0, 529, 530,
	987, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 1079, 1080, 1081, 1082, 0, 547, 0,
	539, 540, 541, 1091, 542, 1092, 1009, 543, 544, 545,
	546, 0, 548, 549, 0, 993, 550, 551, 552, 554,
	555, 553, 556, 1053, 557, 0, 0, 558, 559, 560,
	616, 1076, 1113, 0, 562, 561, 563, 619, 0, 0,
	0, 0, 564, 565, 620, 566, 567, 568, 990, 0,
	0, 0, 0, 0, 0, 986, 0, 0, 0, 0,
	0, 0, 2229, 2230, 1031, 1003, 1004, 1005, 1001, 1002,
	1014, 1015, 0, 0, 0, 1013, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 1055, 1019, 0, 0, 0,
	259, 260, 1095, 261, 262, 263, 264, 265, 570, 1068,
	0, 266, 1075, 267, 1074, 0, 1085, 268, 269, 270,
	271, 272, 273, 1021, 1054, 0, 274, 1115, 1116, 577,
	0, 275, 276, 1061, 0, 1042, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1096, 298, 299, 1045, 1043, 1044, 1051,
	1047, 1046, 1050, 300, 301, 302, 303, 1078, 304, 1072,
	1071, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1063, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 998, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1086, 1087,
	1010, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1070, 0, 0, 0, 337, 0, 338, 0, 0, 1097,
	339, 340, 1083, 1084, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1093, 0, 1020, 350, 0, 351,
	352, 353, 354, 355, 1056, 1057, 1060, 427, 1099, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1098, 364, 1065, 1066, 0, 1026,
	0, 366, 367, 1100, 1058, 1101, 368, 369, 370, 1102,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1094, 1103, 382, 383,
	1104, 0, 384, 0, 0, 0, 385, 386, 1049, 1048,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 1105, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 1106,
	415, 0, 250, 1107, 424, 425, 1011, 1059, 426, 1073,
	428, 429, 0, 0, 430, 0, 0, 0, 432, 433,
	434, 0, 0, 435, 436, 599, 1108, 437, 1109, 1088,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 1089, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 1069, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 1110, 483, 484, 485, 486, 999, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 0, 503, 504, 502, 505, 506, 507, 1052, 508,
	492, 493, 509, 510, 1111, 511, 512, 513, 514, 515,
	516, 1067, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 1114, 523, 524, 525, 526, 1090, 0, 529,
	530, 0, 528, 0, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 1079, 1080, 1081, 1082, 0, 547,
	0, 539, 540, 541, 1091, 542, 1092, 1009, 543, 544,
	545, 546, 0, 548, 549, 0, 0, 550, 551, 552,
	554, 555, 553, 556, 1053, 557, 0, 0, 558, 559,
	560, 616, 1076, 1113, 0, 562, 561, 563, 619, 0,
	0, 0, 0, 564, 565, 620, 566, 567, 568, 1031,
	1003, 1004, 1005, 1001, 1002, 1014, 2449, 0, 0, 0,
	0, 0, 0, 2447, 2448, 0, 251, 252, 253, 254,
	255, 256, 1015, 257, 258, 0, 1013, 0, 0, 0,
	1055, 1019, 0, 0, 0, 259, 260, 1095, 261, 262,
	263, 264, 265, 570, 1068, 0, 266, 1075, 267, 1074,
	0, 1085, 268, 269, 270, 271, 272, 273, 1021, 1054,
	0, 274, 1115, 1116, 577, 0, 275, 276, 1061, 0,
	1042, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1096, 298,
	299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301,
	302, 303, 1078, 304, 1072, 1071, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1063, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 998, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 1086, 1087, 1010, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 1070, 0, 0, 0, 337,
	0, 338, 0, 0, 1097, 339, 340, 1083, 1084, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 1093,
	0, 1020, 350, 0, 351, 352, 353, 354, 355, 1056,
	1057, 1060, 427, 1099, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 1098,
	364, 1065, 1066, 0, 1026, 0, 366, 367, 1100, 1058,
	1101, 368, 369, 370, 1102, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 1094, 1103, 382, 383, 1104, 0, 384, 0, 0,
	0, 385, 386, 1049, 1048, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 1105, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 1106, 415, 0, 250, 1107, 424,
	425, 1011, 1059, 426, 1073, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 1108, 437, 1109, 1088, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 1089, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 1069, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 1110, 483, 484,
	485, 486, 2858, 2859, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 1052, 508, 492, 493, 509, 510, 1111,
	511, 512, 513, 514, 515, 516, 1067, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 1114, 523, 524,
	525, 526, 1090, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 1079,
	1080, 1081, 1082, 0, 547, 0, 539, 540, 541, 1091,
	542, 1092, 1009, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 1053,
	557, 0, 0, 558, 559, 560, 616, 1076, 1113, 0,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 1031, 1003, 1004, 1005, 1001, 1002,
	1014, 0, 0, 0, 0, 0, 0, 0, 1937, 1938,
	0, 251, 252, 253, 254, 255, 256, 1015, 257, 258,
	0, 1013, 0, 0, 0, 1055, 1019, 0, 0, 0,
	259, 260, 1095, 261, 262, 263, 264, 265, 0, 1068,
	0, 266, 1075, 267, 1074, 0, 1085, 268, 269, 270,
	271, 272, 273, 1021, 1054, 988, 274, 1115, 1116, 577,
	0, 275, 276, 1061, 0, 1042, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1096, 298, 4205, 1045, 1043, 1044, 1051,
	1047, 1046, 1050, 300, 301, 302, 303, 1078, 304, 1072,
	1071, 992, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 1063, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 998, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 1086, 1087,
	1010, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	1070, 0, 0, 0, 337, 0, 338, 0, 0, 1097,
	339, 340, 1083, 1084, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 1093, 0, 1020, 350, 0, 351,
	352, 353, 354, 355, 1056, 1057, 1060, 427, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 1098, 364, 1065, 1066, 0, 1026,
	0, 366, 367, 0, 1058, 0, 368, 369, 370, 1102,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 1094, 1103, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 1049, 1048,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 1105, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 1106,
	415, 989, 250, 0, 424, 425, 1011, 1059, 426, 1073,
	428, 429, 0, 0, 430, 0, 0, 0, 432, 433,
	434, 0, 0, 435, 436, 599, 1108, 437, 1109, 1088,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 1089, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 1069, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 1110, 483, 484, 485, 486, 999, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 0, 503, 504, 502, 505, 506, 507, 1052, 508,
	492, 493, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 1067, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 1114, 523, 524, 525, 526, 1090, 0, 529,
	530, 987, 528, 0, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 1079, 1080, 1081, 1082, 0, 547,
	0, 539, 540, 541, 1091, 542, 1092, 1009, 543, 544,
	545, 546, 0, 4204, 549, 0, 993, 550, 551, 552,
	554, 555, 553, 556, 1053, 557, 0, 0, 558, 559,
	560, 616, 1076, 1113, 0, 562, 561, 563, 619, 0,
	0, 0, 0, 564, 565, 620, 566, 567, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 977, 0,
	1153, 0, 0, 984, 985, 0, 0, 0, 0, 0,
	0, 0, 1015, 0, 0, 0, 1013, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1055, 0, 0, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	1054, 0, 274, 575, 576, 577, 0, 275, 276, 1061,
	0, 1042, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1086, 1087, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1093, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	1056, 1057, 1060, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1098, 364, 592, 593, 0, 594, 0, 366, 367, 1100,
	1058, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 1139, 378, 380, 379,
	0, 381, 1094, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 1049, 1048, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 0, 250, 1107,
	424, 425, 0, 1059, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 1145, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 1088, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 1089, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 606, 1147, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 212, 503, 504,
	502, 505, 506, 507, 1052, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 1090, 0, 529, 530, 0, 528, 214,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	1091, 542, 1092, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	1053, 557, 0, 0, 558, 559, 560, 1495, 617, 618,
	0, 562, 561, 563, 619, 0, 1153, 0, 206, 564,
	565, 620, 566, 567, 568, 0, 207, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 1143, 1055, 1824, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 1054, 0, 274, 575,
	576, 577, 0, 275, 276, 1061, 0, 1042, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 1045, 1043,
	1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1086, 1087, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1093, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 1056, 1057, 1060, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1098, 364, 592, 593,
	0, 594, 0, 366, 367, 1100, 1058, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 1139, 378, 380, 379, 0, 381, 1094, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	1049, 1048, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 0, 250, 1107, 424, 425, 0, 1059,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 1145,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 1088, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 1089, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 606,
	1147, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 212, 503, 504, 502, 505, 506, 507,
	1052, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 1090,
	0, 529, 530, 0, 528, 214, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 1091, 542, 1092, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 1053, 557, 0, 0,
	558, 559, 560, 1495, 617, 618, 0, 562, 561, 563,
	619, 0, 0, 0, 206, 564, 565, 620, 566, 567,
	568, 0, 207, 0, 0, 0, 3042, 0, 1153, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1143, 0, 1824, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 1055,
	0, 0, 0, 0, 259, 260, 1095, 261, 262, 263,
	264, 265, 570, 571, 0, 266, 572, 267, 573, 0,
	574, 268, 269, 270, 271, 272, 273, 0, 1054, 0,
	274, 575, 576, 577, 0, 275, 276, 1061, 0, 1042,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1096, 298, 299,
	1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302,
	303, 0, 304, 579, 580, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 581, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1086, 1087, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 584, 0, 0, 0, 337, 0,
	338, 0, 0, 1097, 339, 340, 585, 586, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1093, 0,
	588, 350, 0, 351, 352, 353, 354, 355, 1056, 1057,
	1060, 427, 1099, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1098, 364,
	592, 593, 0, 594, 0, 366, 367, 1100, 1058, 1101,
	368, 369, 370, 1102, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 1139, 378, 380, 379, 0, 381,
	1094, 1103, 382, 383, 1104, 0, 384, 0, 0, 0,
	385, 386, 1049, 1048, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 1105, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 1106, 415, 0, 250, 1107, 424, 425,
	0, 1059, 426, 598, 428, 429, 0, 0, 430, 0,
	0, 1145, 432, 433, 434, 0, 0, 435, 436, 599,
	1108, 437, 1109, 1088, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 1089, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 605, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 1110, 483, 484, 485,
	486, 606, 1147, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 1052, 508, 492, 493, 509, 510, 1111, 511,
	512, 513, 514, 515, 516, 607, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 608, 523, 524, 525,
	526, 1090, 0, 529, 530, 0, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 610, 611,
	612, 613, 0, 547, 0, 539, 540, 541, 1091, 542,
	1092, 0, 543, 544, 545, 546, 0, 548, 549, 0,
	0, 550, 551, 552, 554, 555, 553, 556, 1053, 557,
	0, 0, 558, 559, 560, 616, 617, 618, 0, 562,
	561, 563, 619, 0, 1135, 0, 1153, 564, 565, 620,
	566, 567, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 1143, 0, 1141, 1055, 0, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 1054, 0, 274, 575,
	576, 577, 0, 275, 276, 1061, 0, 1042, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 1045, 1043,
	1044, 1051, 1047, 1046, 1050, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	1086, 1087, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 1093, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 1056, 1057, 1060, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 1098, 364, 592, 593,
	0, 594, 0, 366, 367, 1100, 1058, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 1139, 378, 380, 379, 0, 381, 1094, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	1049, 1048, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 0, 250, 1107, 424, 425, 0, 1059,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 1145,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 1088, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 1089, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 606,
	1147, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	1052, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 1090,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 1091, 542, 1092, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 1053, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 0, 1153, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 1143, 1055, 1141, 0, 0, 0, 259, 260,
	1095, 261, 262, 263, 264, 265, 570, 571, 0, 266,
	572, 267, 573, 0, 574, 268, 269, 270, 271, 272,
	273, 0, 1054, 0, 274, 575, 576, 577, 0, 275,
	276, 1061, 0, 1042, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 1096, 298, 299, 1045, 1043, 1044, 1051, 1047, 1046,
	1050, 300, 301, 302, 303, 0, 304, 579, 580, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 581, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 1086, 1087, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 584, 0,
	0, 0, 337, 0, 338, 0, 0, 1097, 339, 340,
	585, 586, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 1093, 0, 588, 350, 0, 351, 352, 353,
	354, 355, 1056, 1057, 1060, 427, 1099, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 1098, 364, 592, 593, 0, 594, 0, 366,
	367, 1100, 1058, 1101, 368, 369, 370, 1102, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 1139, 378,
	380, 379, 0, 381, 1094, 1103, 382, 383, 1104, 0,
	384, 0, 0, 0, 385, 386, 1049, 1048, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 1105, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 1106, 415, 0,
	250, 1107, 424, 425, 0, 1059, 426, 598, 428, 429,
	0, 0, 430, 0, 0, 1145, 432, 433, 434, 0,
	0, 435, 436, 599, 1108, 437, 1109, 1088, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	1089, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 605, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	1110, 483, 484, 485, 486, 606, 1147, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 1052, 508, 492, 493,
	509, 510, 1111, 511, 512, 513, 514, 515, 516, 607,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	608, 523, 524, 525, 526, 1090, 0, 529, 530, 0,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 610, 611, 612, 613, 0, 547, 0, 539,
	540, 541, 1091, 542, 1092, 0, 543, 544, 545, 546,
	0, 548, 549, 0, 0, 550, 551, 552, 554, 555,
	553, 556, 1053, 557, 0, 0, 558, 559, 560, 616,
	617, 618, 0, 562, 561, 563, 619, 0, 1153, 0,
	0, 564, 565, 620, 566, 567, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 1143, 1055,
	1141, 0, 0, 0, 259, 260, 1095, 261, 262, 263,
	264, 265, 570, 571, 0, 266, 572, 267, 573, 0,
	574, 268, 269, 270, 271, 272, 273, 0, 1054, 0,
	274, 575, 576, 577, 0, 275, 276, 1061, 0, 1042,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1096, 298, 299,
	1045, 1043, 1044, 1051, 1047, 1046, 1050, 300, 301, 302,
	303, 0, 304, 579, 580, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 581, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 1086, 1087, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 584, 0, 0, 0, 337, 0,
	338, 0, 0, 1097, 339, 340, 585, 586, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 1093, 0,
	588, 350, 0, 351, 352, 353, 354, 355, 1056, 1057,
	1060, 427, 1099, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 1098, 364,
	592, 593, 0, 594, 0, 366, 367, 1100, 1058, 1101,
	368, 369, 370, 1102, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	1094, 1103, 382, 383, 1104, 0, 384, 0, 0, 0,
	385, 386, 1049, 1048, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 1105, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 1106, 415, 0, 250, 1107, 424, 425,
	0, 1059, 426, 598, 428, 429, 0, 0, 430, 0,
	0, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	1108, 437, 1109, 1088, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 1089, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 605, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 1110, 483, 484, 485,
	486, 606, 1147, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 1052, 508, 492, 493, 509, 510, 1111, 511,
	512, 513, 514, 515, 516, 607, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 608, 523, 524, 525,
	526, 1090, 0, 529, 530, 0, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 610, 611,
	612, 613, 0, 547, 0, 539, 540, 541, 1091, 542,
	1092, 0, 543, 544, 545, 546, 0, 548, 549, 0,
	0, 550, 551, 552, 554, 555, 553, 556, 1053, 557,
	0, 0, 558, 559, 560, 616, 617, 618, 0, 562,
	561, 563, 619, 0, 977, 0, 1341, 564, 565, 620,
	566, 567, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 1723, 569, 0, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 1307, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 1098, 364, 592, 593,
	0, 594, 0, 366, 367, 1100, 595, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 0, 0, 1107, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 212, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 214, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 1495, 617, 618, 0, 562, 561, 563,
	619, 0, 0, 0, 206, 564, 565, 620, 566, 567,
	568, 0, 207, 0, 0, 0, 1492, 0, 1341, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 176, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 259, 260, 1095, 261, 262, 263,
	264, 265, 570, 571, 0, 266, 572, 267, 573, 0,
	574, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 575, 576, 577, 0, 275, 276, 578, 0, 1307,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 1096, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 579, 580, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 581, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 582, 583, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 584, 0, 0, 0, 337, 0,
	338, 0, 0, 1097, 339, 340, 585, 586, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 587, 0,
	588, 350, 0, 351, 352, 353, 354, 355, 589, 590,
	591, 427, 1099, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 1098, 364,
	592, 593, 0, 594, 0, 366, 367, 1100, 595, 1101,
	368, 369, 370, 1102, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	596, 1103, 382, 383, 1104, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 1105, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 1106, 415, 0, 0, 1107, 424, 425,
	0, 597, 426, 598, 428, 429, 0, 0, 430, 0,
	0, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	1108, 437, 1109, 600, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 603, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 605, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 1110, 483, 484, 485,
	486, 606, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 212, 503, 504, 502, 505,
	506, 507, 0, 508, 492, 493, 509, 510, 1111, 511,
	512, 513, 514, 515, 516, 607, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 608, 523, 524, 525,
	526, 609, 0, 529, 530, 0, 528, 214, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 610, 611,
	612, 613, 0, 547, 0, 539, 540, 541, 614, 542,
	615, 0, 543, 544, 545, 546, 0, 548, 549, 0,
	0, 550, 551, 552, 554, 555, 553, 556, 0, 557,
	0, 0, 558, 559, 560, 1495, 617, 618, 0, 562,
	561, 563, 619, 0, 0, 0, 206, 564, 565, 620,
	566, 567, 568, 0, 207, 0, 0, 0, 0, 0,
	1341, 1340, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 176, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 1307, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	1098, 364, 592, 593, 0, 594, 0, 366, 367, 1100,
	595, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 0, 0, 1107,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	0, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 1341, 1340, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 1517, 257,
	258, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 0, 574, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 575, 576,
	577, 0, 275, 276, 578, 0, 1307, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1096, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	579, 580, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 0, 338, 0, 0,
	1097, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 587, 0, 588, 350, 0,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 1099,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 1098, 364, 592, 593, 0,
	594, 0, 366, 367, 1100, 595, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 596, 1103, 382,
	383, 1104, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 0, 0, 1107, 424, 425, 0, 597, 426,
	598, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 1108, 437, 1109,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 1110, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 0,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 0,
	529, 530, 0, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 610, 611, 612, 613, 0,
	547, 0, 539, 540, 541, 614, 542, 615, 0, 543,
	544, 545, 546, 0, 548, 549, 0, 0, 550, 551,
	552, 554, 555, 553, 556, 0, 557, 0, 0, 558,
	559, 560, 616, 617, 618, 0, 562, 561, 563, 619,
	0, 0, 0, 0, 564, 565, 620, 566, 567, 568,
	1341, 2020, 0, 0, 0, 0, 2021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 3294, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 1307, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	1098, 364, 592, 593, 0, 594, 0, 366, 367, 1100,
	595, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 2019, 380, 379,
	0, 381, 596, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 0, 0, 1107,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	0, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 1341, 1340, 0, 0, 0,
	0, 1338, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 1517, 257,
	258, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 259, 260, 1095, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 0, 574, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 575, 576,
	577, 0, 275, 276, 578, 0, 1307, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 1096, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	579, 580, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 0, 338, 0, 0,
	1097, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 587, 0, 588, 350, 0,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 1099,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 1098, 364, 592, 593, 0,
	594, 0, 366, 367, 1100, 595, 1101, 368, 369, 370,
	1102, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 596, 1103, 382,
	383, 1104, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 1105, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	1106, 415, 0, 0, 1107, 424, 425, 0, 597, 426,
	598, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 1108, 437, 1109,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 1110, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 0,
	508, 492, 493, 509, 510, 1111, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 0,
	529, 530, 0, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 610, 611, 612, 613, 0,
	547, 0, 539, 540, 541, 614, 542, 615, 0, 543,
	544, 545, 546, 0, 548, 549, 0, 0, 550, 551,
	552, 554, 555, 553, 556, 0, 557, 0, 0, 558,
	559, 560, 616, 617, 618, 0, 562, 561, 563, 619,
	1153, 0, 0, 0, 564, 565, 620, 566, 567, 568,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 1055, 0, 1501, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	1054, 0, 274, 575, 576, 577, 0, 275, 276, 1061,
	0, 1042, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 299, 1045, 1043, 1044, 1051, 1047, 1046, 1050, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 1086, 1087, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	1093, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	1056, 1057, 1060, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	1098, 364, 592, 593, 0, 594, 0, 366, 367, 1100,
	1058, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 1094, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 1049, 1048, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 0, 250, 1107,
	424, 425, 0, 1059, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 1088, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 1089, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 1052, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 1090, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	1091, 542, 1092, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	1053, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	0, 562, 561, 563, 619, 977, 0, 245, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 589, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 0, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 212, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 214, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 1495, 617, 618, 245, 562, 561,
	563, 619, 0, 0, 0, 206, 564, 565, 620, 566,
	567, 568, 0, 207, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 259, 260, 176, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 589, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 250, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 0, 562, 561,
	563, 619, 0, 1435, 0, 245, 564, 565, 620, 566,
	567, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 1838, 569, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 0, 574, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 575, 576,
	577, 0, 275, 276, 578, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	579, 580, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 587, 0, 588, 350, 0,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 0, 364, 592, 593, 0,
	594, 0, 366, 367, 0, 595, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 596, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 0, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	0, 415, 0, 250, 0, 424, 425, 0, 597, 426,
	598, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 0, 437, 0,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 0, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 0,
	508, 492, 493, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 0,
	529, 530, 0, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 610, 611, 612, 613, 0,
	547, 0, 539, 540, 541, 614, 542, 615, 0, 543,
	544, 545, 546, 0, 548, 549, 0, 0, 550, 551,
	552, 554, 555, 553, 556, 0, 557, 0, 0, 558,
	559, 560, 616, 617, 618, 0, 562, 561, 563, 619,
	0, 245, 2780, 0, 564, 565, 620, 566, 567, 568,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 1439, 569, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 0, 364, 592, 593, 0, 594, 0, 366, 367,
	0, 595, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 0, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 0, 415, 0, 0,
	0, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 0, 437, 0, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 0,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 245, 562, 561, 563, 619, 0, 0, 0, 0,
	564, 565, 620, 566, 567, 568, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 259, 260, 4358,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 0, 364, 592, 593, 0, 594, 0, 366, 367,
	0, 595, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 0, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 0, 415, 0, 250,
	0, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 0, 437, 0, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 0,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 0, 562, 561, 563, 619, 0, 245, 0, 0,
	564, 565, 620, 566, 567, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 3237, 569, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 589, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 250, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 0, 562, 561,
	563, 619, 0, 245, 0, 0, 564, 565, 620, 566,
	567, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 1439, 569, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 570, 571, 0,
	266, 572, 267, 573, 0, 574, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 575, 576, 577, 0,
	275, 276, 578, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 579, 580,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 581, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 582, 583, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 584,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 585, 586, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 587, 0, 588, 350, 0, 351, 352,
	353, 354, 355, 589, 590, 591, 427, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 592, 593, 0, 594, 0,
	366, 367, 0, 595, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 596, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 0, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 0, 415,
	0, 0, 0, 424, 425, 0, 597, 426, 598, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 0, 437, 0, 600, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 603, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 605, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 0, 483, 484, 485, 486, 606, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 0, 508, 492,
	493, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	607, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 608, 523, 524, 525, 526, 609, 0, 529, 530,
	0, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 610, 611, 612, 613, 0, 547, 0,
	539, 540, 541, 614, 542, 615, 0, 543, 544, 545,
	546, 0, 548, 549, 0, 0, 550, 551, 552, 554,
	555, 553, 556, 0, 557, 0, 0, 558, 559, 560,
	616, 617, 618, 245, 562, 561, 563, 619, 0, 0,
	0, 0, 564, 565, 620, 566, 567, 568, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 259,
	260, 2751, 261, 262, 263, 264, 265, 570, 571, 0,
	266, 572, 267, 573, 0, 574, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 575, 576, 577, 0,
	275, 276, 578, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 579, 580,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 581, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 582, 583, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 584,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 585, 586, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 587, 0, 588, 350, 0, 351, 352,
	353, 354, 355, 589, 590, 591, 427, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 592, 593, 0, 594, 0,
	366, 367, 0, 595, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 596, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 0, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 0, 415,
	0, 0, 0, 424, 425, 0, 597, 426, 598, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 0, 437, 0, 600, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 603, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 605, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 0, 483, 484, 485, 486, 606, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 0, 508, 492,
	493, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	607, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 608, 523, 524, 525, 526, 609, 0, 529, 530,
	0, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 610, 611, 612, 613, 0, 547, 0,
	539, 540, 541, 614, 542, 615, 0, 543, 544, 545,
	546, 0, 548, 549, 0, 0, 550, 551, 552, 554,
	555, 553, 556, 0, 557, 0, 0, 558, 559, 560,
	616, 617, 618, 245, 562, 561, 563, 619, 0, 0,
	0, 0, 564, 565, 620, 566, 567, 568, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 259,
	260, 3395, 261, 262, 263, 264, 265, 570, 571, 0,
	266, 572, 267, 573, 0, 574, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 575, 576, 577, 0,
	275, 276, 578, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 579, 580,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 581, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 582, 583, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 584,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 585, 586, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 587, 0, 588, 350, 0, 351, 352,
	353, 354, 355, 589, 590, 591, 427, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 592, 593, 0, 594, 0,
	366, 367, 0, 595, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 596, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 0, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 0, 415,
	0, 0, 0, 424, 425, 0, 597, 426, 598, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 0, 437, 0, 600, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 603, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 605, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 0, 483, 484, 485, 486, 606, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 0, 508, 492,
	493, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	607, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 608, 523, 524, 525, 526, 609, 0, 529, 530,
	0, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 610, 611, 612, 613, 0, 547, 0,
	539, 540, 541, 614, 542, 615, 0, 543, 544, 545,
	546, 0, 548, 549, 0, 0, 550, 551, 552, 554,
	555, 553, 556, 0, 557, 0, 0, 558, 559, 560,
	616, 617, 618, 0, 562, 561, 563, 619, 0, 823,
	0, 706, 564, 565, 620, 566, 567, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 2123, 569, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 713, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 821, 0, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 0, 364, 592, 593, 0, 594, 0, 366, 367,
	0, 595, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 0, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 0, 415, 0, 250,
	0, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 0, 437, 0, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 0,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	711, 531, 532, 533, 534, 712, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 0, 562, 561, 563, 619, 0, 704, 0, 706,
	564, 565, 620, 566, 567, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 716, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	713, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 711, 531,
	532, 533, 534, 712, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 1875,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	716, 0, 0, 0, 0, 259, 260, 1095, 261, 262,
	263, 264, 265, 0, 1881, 0, 266, 1871, 267, 1887,
	0, 1894, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 1897, 1898, 0, 0, 275, 276, 0, 0,
	1307, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 1096, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 1078, 304, 1885, 1884, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	1063, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 0, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 1883, 0, 0, 0, 337,
	0, 338, 0, 0, 1097, 339, 340, 1892, 1893, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 0,
	0, 0, 350, 0, 351, 352, 353, 354, 355, 0,
	0, 0, 427, 1099, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 0, 362, 363, 365, 0, 1098,
	364, 1878, 1879, 0, 1874, 0, 366, 367, 1100, 0,
	1101, 368, 369, 370, 1102, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 0, 1103, 382, 383, 1104, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 1105, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 1106, 415, 0, 0, 1107, 424,
	425, 0, 0, 426, 1886, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	0, 1108, 437, 1109, 0, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 1868,
	450, 451, 452, 1869, 453, 454, 455, 0, 456, 0,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 1882, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 1110, 483, 484,
	485, 486, 0, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 1111,
	511, 512, 513, 514, 515, 516, 1880, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 1896, 523, 524,
	525, 526, 0, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 1888,
	1889, 1890, 1891, 0, 547, 0, 539, 540, 541, 0,
	542, 0, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 0, 1872, 1895, 0,
	562, 561, 563, 0, 0, 0, 1341, 1340, 564, 565,
	0, 566, 567, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 1862, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 1307, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 0, 0,
	0, 0, 0, 0, 2715, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 1098, 364, 592, 593,
	0, 594, 0, 366, 367, 1100, 595, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 0, 0, 1107, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	2716, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 1341, 1340, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 259, 260, 1095,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 1307, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1096, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 1097, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 1099, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 1098, 364, 592, 593, 0, 594, 0, 366, 367,
	1100, 595, 1101, 368, 369, 370, 1102, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 1103, 382, 383, 1104, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 1105, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 1106, 415, 0, 0,
	1107, 424, 425, 3565, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 1108, 437, 1109, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 1110,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 1111, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 706, 562, 561, 563, 619, 0, 0, 0, 0,
	564, 565, 620, 566, 567, 568, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 713, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 0, 364, 592, 593, 0, 594, 0, 366, 367,
	0, 595, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 0, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 0, 415, 0, 250,
	0, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 0, 437, 0, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 0,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	711, 531, 532, 533, 534, 712, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 0, 562, 561, 563, 619, 0, 0, 0, 0,
	564, 565, 620, 566, 567, 568, 1341, 1340, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 716, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 1307, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 1098, 364, 592, 593,
	0, 594, 0, 366, 367, 1100, 595, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 0, 0, 1107, 424, 425, 3209, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 706, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 713, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 250, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 2163, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 711, 531, 532, 533, 534,
	712, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 706, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 716, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 713, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 0, 364, 592, 593, 0, 594, 0, 366, 367,
	0, 595, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 0, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 0, 415, 0, 250,
	0, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 0, 437, 0, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 0,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 1901, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	711, 531, 532, 533, 534, 712, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 1900, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 0, 562, 561, 563, 619, 706, 0, 0, 0,
	564, 565, 620, 566, 567, 568, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 716, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 713, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 250, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 1854, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 711, 531, 532, 533, 534,
	712, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 1853, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 1545, 0, 1341, 1340, 0, 0, 0, 0, 1338,
	0, 0, 0, 0, 0, 0, 0, 716, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 259,
	260, 1095, 261, 262, 263, 264, 265, 570, 571, 0,
	266, 572, 267, 573, 0, 574, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 575, 576, 577, 0,
	275, 276, 578, 0, 1307, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 1096, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 579, 580,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 581, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 582, 583, 0,
	248, 0, 0, 0, 0, 0, 1544, 335, 336, 584,
	0, 0, 0, 337, 0, 338, 0, 0, 1097, 339,
	340, 585, 586, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 587, 0, 588, 350, 0, 351, 352,
	353, 354, 355, 589, 590, 591, 427, 1099, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 1098, 364, 592, 593, 0, 594, 0,
	366, 367, 1100, 595, 1101, 368, 369, 370, 1102, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 596, 1103, 382, 383, 1104,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 1105, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 1106, 415,
	0, 0, 1107, 424, 425, 0, 597, 426, 598, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 1108, 437, 1109, 600, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 603, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 1543, 466, 605, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 1110, 483, 484, 485, 486, 606, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 1542, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 0, 508, 492,
	493, 509, 510, 1111, 511, 512, 513, 514, 515, 516,
	607, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 608, 523, 524, 525, 526, 609, 0, 529, 530,
	0, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 610, 611, 612, 613, 0, 547, 0,
	539, 540, 541, 614, 542, 615, 0, 543, 544, 545,
	546, 0, 548, 549, 0, 0, 550, 551, 552, 554,
	555, 553, 556, 0, 557, 0, 0, 558, 559, 560,
	616, 617, 618, 0, 562, 561, 563, 619, 0, 0,
	0, 0, 564, 565, 620, 566, 567, 568, 1485, 0,
	1341, 1340, 0, 0, 0, 0, 1338, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 1095, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 1307, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 1096,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 1097, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	1484, 590, 591, 427, 1099, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	1098, 364, 592, 593, 0, 594, 0, 366, 367, 1100,
	595, 1101, 368, 369, 370, 1102, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 1103, 382, 383, 1104, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 1105, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 1106, 415, 0, 0, 1107,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 1108, 437, 1109, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 1110, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	1111, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	0, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 1414, 0, 1341, 1340, 0,
	0, 0, 0, 1338, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 259, 260, 1095, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 1307, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 1096, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 1097, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 1413, 590, 591,
	427, 1099, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 1098, 364, 592,
	593, 0, 594, 0, 366, 367, 1100, 595, 1101, 368,
	369, 370, 1102, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	1103, 382, 383, 1104, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	1105, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 1106, 415, 0, 0, 1107, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 1108,
	437, 1109, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 1110, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 1111, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 0, 562, 561,
	563, 619, 0, 0, 0, 0, 564, 565, 620, 566,
	567, 568, 1376, 0, 1341, 1340, 0, 0, 0, 0,
	1338, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 0,
	259, 260, 1095, 261, 262, 263, 264, 265, 570, 571,
	0, 266, 572, 267, 573, 0, 574, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 575, 576, 577,
	0, 275, 276, 578, 0, 1307, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 1096, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 579,
	580, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 581, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 582, 583,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	584, 0, 0, 0, 337, 0, 338, 0, 0, 1097,
	339, 340, 585, 586, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 587, 0, 588, 350, 0, 351,
	352, 353, 354, 355, 589, 590, 591, 427, 1099, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 1098, 364, 592, 593, 0, 594,
	0, 366, 367, 1100, 595, 1101, 368, 369, 370, 1102,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 596, 1103, 382, 383,
	1104, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 1105, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 1106,
	415, 0, 0, 1107, 424, 425, 0, 597, 426, 598,
	428, 429, 0, 0, 430, 0, 0, 0, 432, 433,
	434, 0, 0, 435, 436, 599, 1108, 437, 1109, 600,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 603, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 605, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 1110, 483, 484, 485, 486, 606, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 0, 503, 504, 502, 505, 506, 507, 0, 508,
	492, 493, 509, 510, 1111, 511, 512, 513, 514, 515,
	516, 607, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 608, 523, 524, 525, 526, 609, 0, 529,
	530, 0, 528, 0, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 610, 611, 612, 613, 0, 547,
	0, 539, 540, 541, 614, 542, 615, 0, 543, 544,
	545, 546, 0, 548, 549, 0, 0, 550, 551, 552,
	554, 555, 553, 556, 0, 557, 0, 0, 558, 559,
	560, 616, 617, 618, 0, 562, 561, 563, 619, 0,
	0, 0, 0, 564, 565, 620, 566, 567, 568, 1336,
	0, 1341, 1340, 0, 0, 0, 0, 1338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 259, 260, 1095,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 1307, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1096, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 1097, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 1335, 590, 591, 427, 1099, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 1098, 364, 592, 593, 0, 594, 0, 366, 367,
	1100, 595, 1101, 368, 369, 370, 1102, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 1103, 382, 383, 1104, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 1105, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 1106, 415, 0, 0,
	1107, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 1108, 437, 1109, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 1110,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 1111, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 0, 562, 561, 563, 619, 0, 0, 0, 0,
	564, 565, 620, 566, 567, 568, 1341, 1340, 0, 0,
	0, 0, 1338, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 1307, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 1098, 364, 592, 593,
	0, 594, 0, 366, 367, 1100, 595, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 0, 0, 1107, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 245, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 250, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 1341, 1340, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 716, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 259, 260, 1095,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 1307, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	1096, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 579, 580, 1910, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 1097, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 1099, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 1098, 364, 592, 593, 0, 594, 0, 366, 367,
	1100, 595, 1101, 368, 369, 370, 1102, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 1103, 382, 383, 1104, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 1105, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 1106, 415, 0, 0,
	1107, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 1108, 437, 1109, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 1110,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 1111, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 0, 562, 561, 563, 619, 1341, 1340, 0, 0,
	564, 565, 620, 566, 567, 568, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 1307, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 1098, 364, 592, 593,
	0, 594, 0, 366, 367, 1100, 595, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 0, 0, 1107, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 1341, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 1095, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 1307, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 1096, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 1097, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	1099, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 1098, 364, 592, 593,
	0, 594, 0, 366, 367, 1100, 595, 1101, 368, 369,
	370, 1102, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 1103,
	382, 383, 1104, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 1105,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 1106, 415, 0, 0, 1107, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 1108, 437,
	1109, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 1110, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 1111, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 245, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 2586, 275, 276, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 2583, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 2590, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 2793, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 2589,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 2790, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 2792, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 2789, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 0, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 2588,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 2791, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 245, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 2586, 275, 276, 578, 0, 0, 2580, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 2583, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 2590, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 2589,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 2579, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 0, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 2588,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 2587, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 1612, 0, 245, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 570, 571, 0,
	266, 572, 267, 573, 0, 574, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 575, 576, 577, 0,
	275, 276, 578, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 579, 580,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 581, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 582, 583, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 584,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 585, 586, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 587, 0, 588, 350, 0, 351, 352,
	353, 354, 355, 589, 590, 591, 427, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 0, 364, 592, 593, 0, 594, 0,
	366, 367, 0, 595, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 596, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 0, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 0, 415,
	0, 250, 0, 424, 425, 0, 597, 426, 598, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 0, 437, 0, 600, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 603, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 605, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 0, 483, 484, 485, 486, 606, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 1615, 504, 502, 505, 506, 507, 0, 508, 492,
	493, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	607, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 608, 523, 524, 525, 526, 609, 0, 529, 530,
	0, 528, 1613, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 610, 611, 612, 613, 0, 547, 0,
	539, 540, 541, 614, 542, 615, 0, 543, 544, 545,
	546, 0, 548, 549, 0, 0, 550, 551, 552, 554,
	555, 553, 556, 0, 557, 0, 0, 558, 559, 560,
	616, 617, 618, 0, 1614, 561, 563, 619, 1311, 0,
	245, 0, 564, 565, 620, 566, 567, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	1313, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 250, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 1145, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	0, 562, 561, 563, 619, 1308, 0, 245, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 1310, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 250, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	1145, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 0, 562, 561,
	563, 619, 1214, 0, 245, 0, 564, 565, 620, 566,
	567, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 570, 571,
	0, 266, 572, 267, 573, 0, 574, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 575, 576, 577,
	0, 275, 276, 578, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 579,
	580, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 581, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 582, 583,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	584, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 585, 586, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 587, 0, 588, 350, 0, 351,
	352, 353, 354, 355, 1216, 590, 591, 427, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 0, 364, 592, 593, 0, 594,
	0, 366, 367, 0, 595, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 596, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 0, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 0,
	415, 0, 250, 0, 424, 425, 0, 597, 426, 598,
	428, 429, 0, 0, 430, 0, 0, 1145, 432, 433,
	434, 0, 0, 435, 436, 599, 0, 437, 0, 600,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 603, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 605, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 0, 483, 484, 485, 486, 606, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 0, 503, 504, 502, 505, 506, 507, 0, 508,
	492, 493, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 607, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 608, 523, 524, 525, 526, 609, 0, 529,
	530, 0, 528, 0, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 610, 611, 612, 613, 0, 547,
	0, 539, 540, 541, 614, 542, 615, 0, 543, 544,
	545, 546, 0, 548, 549, 0, 0, 550, 551, 552,
	554, 555, 553, 556, 0, 557, 0, 0, 558, 559,
	560, 616, 617, 618, 0, 562, 561, 563, 619, 652,
	0, 245, 0, 564, 565, 620, 566, 567, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 651, 255, 256, 641, 257, 258, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 644, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 645,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 0, 364, 592, 593, 0, 594, 0, 366, 367,
	0, 595, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 0, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 0, 415, 0, 0,
	0, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 0, 437, 0, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 0,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 646, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 0, 562, 561, 563, 619, 640, 0, 245, 0,
	564, 565, 620, 566, 567, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 641, 257, 258, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 570, 571, 0, 266, 572, 267, 573, 0,
	574, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 575, 576, 577, 0, 275, 276, 578, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 644, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 579, 580, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 581, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 584, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 585, 586, 341, 342,
	343, 344, 345, 346, 347, 348, 645, 349, 587, 0,
	588, 350, 0, 351, 352, 353, 354, 355, 589, 590,
	591, 427, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 0, 364,
	592, 593, 0, 594, 0, 366, 367, 0, 595, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	596, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 0, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 0, 415, 0, 0, 0, 424, 425,
	0, 597, 426, 598, 428, 429, 0, 0, 430, 0,
	0, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	0, 437, 0, 600, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 603, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 605, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 0, 483, 484, 485,
	486, 606, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 646, 503, 504, 502, 505,
	506, 507, 0, 508, 492, 493, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 607, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 608, 523, 524, 525,
	526, 609, 0, 529, 530, 0, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 610, 611,
	612, 613, 0, 547, 0, 539, 540, 541, 614, 542,
	615, 0, 543, 544, 545, 546, 0, 548, 549, 0,
	0, 550, 551, 552, 554, 555, 553, 556, 0, 557,
	0, 0, 558, 559, 560, 616, 617, 618, 245, 562,
	561, 563, 619, 0, 0, 0, 0, 564, 565, 620,
	566, 567, 568, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 570, 571, 0, 266, 572, 267, 573, 0,
	574, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 575, 576, 577, 0, 275, 276, 578, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 579, 580, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 581, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 582, 583, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 584, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 585, 586, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 587, 0,
	588, 350, 0, 351, 352, 353, 354, 355, 589, 590,
	591, 427, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 0, 364,
	592, 593, 0, 594, 0, 366, 367, 0, 595, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	596, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 0, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 0, 415, 0, 250, 0, 424, 425,
	0, 597, 426, 598, 428, 429, 0, 0, 430, 0,
	0, 1145, 432, 433, 434, 0, 0, 435, 436, 599,
	0, 437, 0, 600, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 603, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 605, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 0, 483, 484, 485,
	486, 606, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 0, 508, 492, 493, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 607, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 608, 523, 524, 525,
	526, 609, 0, 529, 530, 0, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 610, 611,
	612, 613, 0, 547, 0, 539, 540, 541, 614, 542,
	615, 0, 543, 544, 545, 546, 0, 548, 549, 0,
	0, 550, 551, 552, 554, 555, 553, 556, 0, 557,
	0, 0, 558, 559, 560, 616, 617, 618, 245, 562,
	561, 563, 619, 0, 0, 0, 0, 564, 565, 620,
	566, 567, 568, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 570, 571, 0, 266, 572, 267, 573, 0,
	574, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 575, 576, 577, 0, 275, 276, 578, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 579, 580, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 581, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 582, 583, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 584, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 585, 586, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 587, 0,
	588, 350, 0, 351, 352, 353, 354, 355, 589, 590,
	591, 427, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 0, 364,
	592, 593, 0, 594, 0, 366, 367, 0, 595, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	596, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 0, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 3172, 415, 0, 250, 0, 424, 425,
	0, 597, 426, 598, 428, 429, 0, 0, 430, 0,
	0, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	0, 437, 0, 600, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 603, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 605, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 0, 483, 484, 485,
	486, 606, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 0, 508, 492, 493, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 607, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 608, 523, 524, 525,
	526, 609, 0, 529, 530, 0, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 610, 611,
	612, 613, 0, 547, 0, 539, 540, 541, 614, 542,
	615, 0, 543, 544, 545, 546, 0, 548, 549, 0,
	0, 550, 551, 552, 554, 555, 553, 556, 0, 557,
	0, 0, 558, 559, 560, 616, 617, 618, 0, 562,
	561, 563, 619, 2722, 0, 245, 0, 564, 565, 620,
	566, 567, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 0, 574, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 575, 576,
	577, 0, 275, 276, 578, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	579, 580, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 587, 0, 588, 350, 0,
	351, 352, 353, 354, 355, 2721, 590, 591, 427, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 0, 364, 592, 593, 0,
	594, 0, 366, 367, 0, 595, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 596, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 0, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	0, 415, 0, 250, 0, 424, 425, 0, 597, 426,
	598, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 0, 437, 0,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 0, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 0,
	508, 492, 493, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 0,
	529, 530, 0, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 610, 611, 612, 613, 0,
	547, 0, 539, 540, 541, 614, 542, 615, 0, 543,
	544, 545, 546, 0, 548, 549, 0, 0, 550, 551,
	552, 554, 555, 553, 556, 0, 557, 0, 0, 558,
	559, 560, 616, 617, 618, 0, 562, 561, 563, 619,
	2136, 0, 245, 0, 564, 565, 620, 566, 567, 568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 570, 571, 0, 266,
	572, 267, 573, 0, 574, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 575, 576, 577, 0, 275,
	276, 578, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 579, 580, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 581, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 582, 583, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 584, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	585, 586, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 587, 0, 588, 350, 0, 351, 352, 353,
	354, 355, 589, 590, 591, 427, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 0, 364, 592, 593, 0, 594, 0, 366,
	367, 0, 595, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 596, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 0, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 0, 415, 0,
	250, 0, 424, 425, 0, 597, 426, 598, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 434, 0,
	0, 435, 436, 599, 0, 437, 0, 600, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	603, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 605, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	0, 483, 484, 485, 486, 606, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 0, 508, 492, 493,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 607,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	608, 523, 524, 525, 526, 609, 0, 529, 530, 0,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 610, 611, 612, 613, 0, 547, 0, 539,
	540, 541, 614, 542, 615, 0, 543, 544, 545, 546,
	0, 548, 549, 0, 0, 550, 551, 552, 554, 555,
	553, 556, 0, 557, 0, 0, 558, 559, 560, 616,
	617, 618, 245, 562, 561, 563, 619, 0, 0, 0,
	0, 564, 565, 620, 566, 567, 568, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 570, 571, 0, 266,
	572, 267, 573, 0, 574, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 575, 576, 577, 0, 275,
	276, 578, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 579, 580, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 581, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 582, 583, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 584, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	585, 586, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 587, 0, 588, 350, 0, 351, 352, 353,
	354, 355, 589, 590, 591, 427, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 0, 364, 592, 593, 0, 594, 0, 366,
	367, 0, 595, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 596, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 0, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 0, 415, 0,
	250, 0, 424, 425, 0, 597, 426, 598, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 434, 0,
	0, 435, 436, 599, 0, 437, 0, 600, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	603, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 605, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	0, 483, 484, 485, 486, 606, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 0, 508, 492, 493,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 607,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	608, 523, 524, 525, 526, 609, 0, 529, 530, 0,
	528, 2052, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 610, 611, 612, 613, 0, 547, 0, 539,
	540, 541, 614, 542, 615, 0, 543, 544, 545, 546,
	0, 548, 549, 0, 0, 550, 551, 552, 554, 555,
	553, 556, 0, 557, 0, 0, 558, 559, 560, 616,
	617, 618, 0, 562, 561, 563, 619, 2058, 0, 245,
	0, 564, 565, 620, 566, 567, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 2057,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 0,
	562, 561, 563, 619, 2045, 0, 245, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 2047, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 250, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 245, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 248, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 2016, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 249, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 250, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 1145,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 1477, 0, 245, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 570, 571, 0,
	266, 572, 267, 573, 0, 574, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 575, 576, 577, 0,
	275, 276, 578, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 579, 580,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 581, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 582, 583, 0,
	248, 0, 0, 0, 0, 0, 334, 335, 336, 584,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 585, 586, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 587, 0, 588, 350, 0, 351, 352,
	353, 354, 355, 1476, 590, 591, 427, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 249, 362,
	363, 365, 0, 0, 364, 592, 593, 0, 594, 0,
	366, 367, 0, 595, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 596, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 0, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 0, 415,
	0, 250, 0, 424, 425, 0, 597, 426, 598, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 0, 437, 0, 600, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 603, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 605, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 0, 483, 484, 485, 486, 606, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 0, 508, 492,
	493, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	607, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 608, 523, 524, 525, 526, 609, 0, 529, 530,
	0, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 610, 611, 612, 613, 0, 547, 0,
	539, 540, 541, 614, 542, 615, 0, 543, 544, 545,
	546, 0, 548, 549, 0, 0, 550, 551, 552, 554,
	555, 553, 556, 0, 557, 0, 0, 558, 559, 560,
	616, 617, 618, 0, 562, 561, 563, 619, 1468, 0,
	245, 0, 564, 565, 620, 566, 567, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 248, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	1467, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 249, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 250, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	0, 562, 561, 563, 619, 1465, 0, 245, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 248, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 1464, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 249, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 250, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 0, 562, 561,
	563, 619, 1460, 0, 245, 0, 564, 565, 620, 566,
	567, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 570, 571,
	0, 266, 572, 267, 573, 0, 574, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 575, 576, 577,
	0, 275, 276, 578, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 579,
	580, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 581, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 582, 583,
	0, 248, 0, 0, 0, 0, 0, 334, 335, 336,
	584, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 585, 586, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 587, 0, 588, 350, 0, 351,
	352, 353, 354, 355, 1459, 590, 591, 427, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 249,
	362, 363, 365, 0, 0, 364, 592, 593, 0, 594,
	0, 366, 367, 0, 595, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 596, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 0, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 0,
	415, 0, 250, 0, 424, 425, 0, 597, 426, 598,
	428, 429, 0, 0, 430, 0, 0, 0, 432, 433,
	434, 0, 0, 435, 436, 599, 0, 437, 0, 600,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 603, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 605, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 0, 483, 484, 485, 486, 606, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 0, 503, 504, 502, 505, 506, 507, 0, 508,
	492, 493, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 607, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 608, 523, 524, 525, 526, 609, 0, 529,
	530, 0, 528, 0, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 610, 611, 612, 613, 0, 547,
	0, 539, 540, 541, 614, 542, 615, 0, 543, 544,
	545, 546, 0, 548, 549, 0, 0, 550, 551, 552,
	554, 555, 553, 556, 0, 557, 0, 0, 558, 559,
	560, 616, 617, 618, 0, 562, 561, 563, 619, 1417,
	0, 245, 0, 564, 565, 620, 566, 567, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 248, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 249, 362, 363, 365,
	0, 0, 364, 592, 593, 0, 594, 0, 366, 367,
	0, 595, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 0, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 0, 415, 0, 250,
	0, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 0, 437, 0, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 0,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 0, 562, 561, 563, 619, 1329, 0, 245, 0,
	564, 565, 620, 566, 567, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 570, 571, 0, 266, 572, 267, 573, 0,
	574, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 575, 576, 577, 0, 275, 276, 578, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 579, 580, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 581, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 582, 583, 0, 248, 0, 0, 0, 0,
	0, 334, 335, 336, 584, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 585, 586, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 587, 0,
	588, 350, 0, 351, 352, 353, 354, 355, 589, 590,
	591, 427, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 249, 362, 363, 365, 0, 0, 364,
	592, 593, 0, 594, 0, 366, 367, 0, 595, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	596, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 0, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 0, 415, 0, 250, 0, 424, 425,
	0, 597, 426, 598, 428, 429, 0, 0, 430, 0,
	0, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	0, 437, 0, 600, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 603, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 605, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 0, 483, 484, 485,
	486, 606, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 0, 508, 492, 493, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 607, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 608, 523, 524, 525,
	526, 609, 0, 529, 530, 0, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 610, 611,
	612, 613, 0, 547, 0, 539, 540, 541, 614, 542,
	615, 0, 543, 544, 545, 546, 0, 548, 549, 0,
	0, 550, 551, 552, 554, 555, 553, 556, 0, 557,
	0, 0, 558, 559, 560, 616, 617, 618, 0, 562,
	561, 563, 619, 1322, 0, 245, 0, 564, 565, 620,
	566, 567, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 0, 574, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 575, 576,
	577, 0, 275, 276, 578, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	579, 580, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 0, 248, 0, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 587, 0, 588, 350, 0,
	351, 352, 353, 354, 355, 1324, 590, 591, 427, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	249, 362, 363, 365, 0, 0, 364, 592, 593, 0,
	594, 0, 366, 367, 0, 595, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 596, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 0, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	0, 415, 0, 250, 0, 424, 425, 0, 597, 426,
	598, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 0, 437, 0,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 0, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 0,
	508, 492, 493, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 0,
	529, 530, 0, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 610, 611, 612, 613, 0,
	547, 0, 539, 540, 541, 614, 542, 615, 0, 543,
	544, 545, 546, 0, 548, 549, 0, 0, 550, 551,
	552, 554, 555, 553, 556, 0, 557, 0, 0, 558,
	559, 560, 616, 617, 618, 0, 562, 561, 563, 619,
	622, 0, 245, 0, 564, 565, 620, 566, 567, 568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 570, 571, 0, 266,
	572, 267, 573, 0, 574, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 575, 576, 577, 0, 275,
	276, 578, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 579, 580, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 581, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 582, 583, 0, 248,
	0, 0, 0, 0, 0, 334, 335, 336, 584, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	585, 586, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 587, 0, 588, 350, 0, 351, 352, 353,
	354, 355, 589, 590, 591, 427, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 249, 362, 363,
	365, 0, 0, 364, 592, 593, 0, 594, 0, 366,
	367, 0, 595, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 596, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 0, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 0, 415, 0,
	250, 0, 424, 425, 0, 597, 426, 598, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 434, 0,
	0, 435, 436, 599, 0, 437, 0, 600, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	603, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 605, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	0, 483, 484, 485, 486, 606, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 0, 508, 492, 493,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 607,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	608, 523, 524, 525, 526, 609, 0, 529, 530, 0,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 610, 611, 612, 613, 0, 547, 0, 539,
	540, 541, 614, 542, 615, 0, 543, 544, 545, 546,
	0, 548, 549, 0, 0, 550, 551, 552, 554, 555,
	553, 556, 0, 557, 0, 0, 558, 559, 560, 616,
	617, 618, 0, 562, 561, 563, 619, 236, 0, 245,
	0, 564, 565, 620, 566, 567, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 245,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 245,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 644, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 645, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 0, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 0, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 646, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 245,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	2170, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 245,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	2168, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 245,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	2166, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 245,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 2101,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 245,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 2095,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 245,
	562, 561, 563, 619, 0, 0, 0, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 248, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 2064,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 249, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 250, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 0,
	562, 561, 563, 619, 810, 0, 245, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 809, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 0, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 808, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 245, 562, 561, 563,
	619, 0, 0, 0, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 2793, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 0, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 3824,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 674, 0, 245, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 259,
	260, 1185, 261, 262, 263, 264, 265, 570, 571, 0,
	266, 572, 267, 573, 0, 574, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 575, 576, 1183, 0,
	275, 276, 578, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 579, 580,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 581, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 582, 583, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 584,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 585, 586, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 587, 0, 588, 350, 0, 351, 352,
	353, 354, 355, 589, 590, 591, 427, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 592, 593, 0, 594, 0,
	366, 367, 0, 595, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 596, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 675, 0, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 0, 415,
	0, 0, 0, 424, 425, 0, 597, 426, 598, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 0, 437, 0, 600, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 603, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 605, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 0, 483, 484, 485, 486, 606, 487, 0, 488,
	489, 495, 496, 490, 491, 671, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 1186, 507, 0, 508, 492,
	493, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	607, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 608, 523, 524, 525, 526, 609, 0, 529, 530,
	0, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 670, 611, 612, 613, 0, 547, 0,
	539, 540, 541, 614, 542, 615, 0, 543, 544, 545,
	546, 0, 548, 549, 0, 0, 550, 551, 552, 554,
	555, 553, 556, 0, 557, 0, 0, 558, 559, 560,
	616, 617, 618, 0, 562, 561, 563, 619, 674, 0,
	245, 0, 564, 565, 620, 566, 567, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 1185, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 1183, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 675, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 671, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 1186, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	670, 611, 612, 613, 0, 547, 0, 539, 1184, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	0, 562, 561, 563, 619, 631, 0, 245, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	630, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 589, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 0, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 629, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 0, 562, 561,
	563, 619, 245, 2780, 0, 0, 564, 565, 620, 566,
	567, 568, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 570, 571, 0, 266,
	572, 267, 573, 0, 574, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 575, 576, 577, 0, 275,
	276, 578, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 579, 580, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 581, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 584, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	585, 586, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 587, 0, 588, 350, 0, 351, 352, 353,
	354, 355, 589, 590, 591, 427, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 592, 593, 0, 594, 0, 366,
	367, 0, 595, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 596, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 0, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 0, 415, 0,
	0, 0, 424, 425, 0, 597, 426, 598, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 434, 0,
	0, 435, 436, 599, 0, 437, 0, 600, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	603, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 605, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	0, 483, 484, 485, 486, 606, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 0, 508, 492, 493,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 607,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	608, 523, 524, 525, 526, 609, 0, 529, 530, 0,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 610, 611, 612, 613, 0, 547, 0, 539,
	540, 541, 614, 542, 615, 0, 543, 544, 545, 546,
	0, 548, 549, 0, 0, 550, 551, 552, 554, 555,
	553, 556, 0, 557, 0, 0, 558, 559, 560, 616,
	617, 618, 0, 562, 561, 563, 619, 245, 3834, 0,
	0, 564, 565, 620, 566, 567, 568, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 589, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 0, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 245, 562, 561,
	563, 619, 0, 0, 0, 0, 564, 565, 620, 566,
	567, 568, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 3539, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 589, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 0, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 245, 562, 561,
	563, 619, 0, 0, 0, 0, 564, 565, 620, 566,
	567, 568, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	2500, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 589, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 0, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 0, 562, 561,
	563, 619, 245, 2780, 0, 0, 564, 565, 620, 566,
	567, 568, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 570, 571, 0, 266,
	572, 267, 573, 0, 574, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 575, 576, 577, 0, 275,
	276, 578, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 579, 580, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 581, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 584, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	585, 586, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 587, 0, 588, 350, 0, 351, 352, 353,
	354, 355, 589, 590, 591, 427, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 592, 593, 0, 594, 0, 366,
	367, 0, 595, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 596, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 0, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 0, 415, 0,
	0, 0, 424, 425, 0, 597, 426, 598, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 2777, 0,
	0, 435, 436, 599, 0, 437, 0, 600, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	603, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 605, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	0, 483, 484, 485, 486, 606, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 0, 508, 492, 493,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 607,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	608, 523, 524, 525, 526, 609, 0, 529, 530, 0,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 610, 611, 612, 613, 0, 547, 0, 539,
	540, 541, 614, 542, 615, 0, 543, 544, 545, 546,
	0, 548, 549, 0, 0, 550, 551, 552, 554, 555,
	553, 556, 0, 557, 0, 0, 558, 559, 560, 616,
	617, 618, 245, 562, 561, 563, 619, 0, 0, 0,
	0, 564, 565, 620, 566, 567, 568, 0, 0, 251,
	252, 253, 254, 255, 256, 2146, 257, 258, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 570, 571, 0, 266,
	572, 267, 573, 0, 574, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 575, 576, 577, 0, 275,
	276, 578, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 288,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 579, 580, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 581, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 584, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	585, 586, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 587, 0, 588, 350, 0, 351, 352, 353,
	354, 355, 589, 590, 591, 427, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 592, 593, 0, 594, 0, 366,
	367, 0, 595, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 596, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 386, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 410, 0, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 0, 415, 0,
	0, 0, 424, 425, 0, 597, 426, 598, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 434, 0,
	0, 435, 436, 599, 0, 437, 0, 600, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	603, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 605, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	0, 483, 484, 485, 486, 606, 487, 0, 488, 489,
	495, 496, 490, 491, 497, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 506, 507, 0, 508, 492, 493,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 607,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	608, 523, 524, 525, 526, 609, 0, 529, 530, 0,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 610, 611, 612, 613, 0, 547, 0, 539,
	540, 541, 614, 542, 615, 0, 543, 544, 545, 546,
	0, 548, 549, 0, 0, 550, 551, 552, 554, 555,
	553, 556, 0, 557, 0, 0, 558, 559, 560, 616,
	617, 618, 0, 562, 561, 563, 619, 2134, 0, 245,
	0, 564, 565, 620, 566, 567, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 0, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 0, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 495, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 0,
	562, 561, 563, 619, 674, 0, 245, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 664, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 675, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 0, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 671, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 1500, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 670, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 1481, 0, 245, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 570, 571, 0,
	266, 572, 267, 573, 0, 574, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 575, 576, 577, 0,
	275, 276, 578, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 579, 580,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 581, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 582, 583, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 584,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 585, 586, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 587, 0, 588, 350, 0, 351, 352,
	353, 354, 355, 1480, 590, 591, 427, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 592, 593, 0, 594, 0,
	366, 367, 0, 595, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 596, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 0, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 0, 415,
	0, 0, 0, 424, 425, 0, 597, 426, 598, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 0, 437, 0, 600, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 603, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 605, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 0, 483, 484, 485, 486, 606, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 0, 508, 492,
	493, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	607, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 608, 523, 524, 525, 526, 609, 0, 529, 530,
	0, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 610, 611, 612, 613, 0, 547, 0,
	539, 540, 541, 614, 542, 615, 0, 543, 544, 545,
	546, 0, 548, 549, 0, 0, 550, 551, 552, 554,
	555, 553, 556, 0, 557, 0, 0, 558, 559, 560,
	616, 617, 618, 0, 562, 561, 563, 619, 1474, 0,
	245, 0, 564, 565, 620, 566, 567, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	1473, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	0, 562, 561, 563, 619, 1423, 0, 245, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 251, 252, 253, 254, 255, 256,
	0, 257, 258, 0, 0, 0, 0, 0, 569, 0,
	0, 0, 0, 259, 260, 0, 261, 262, 263, 264,
	265, 570, 571, 0, 266, 572, 267, 573, 0, 574,
	268, 269, 270, 271, 272, 273, 0, 0, 0, 274,
	575, 576, 577, 0, 275, 276, 578, 0, 0, 0,
	277, 278, 279, 280, 281, 282, 283, 0, 0, 285,
	286, 287, 284, 0, 288, 0, 289, 290, 291, 292,
	293, 294, 0, 295, 296, 297, 0, 298, 299, 0,
	0, 0, 0, 0, 0, 0, 300, 301, 302, 303,
	0, 304, 579, 580, 0, 308, 305, 306, 0, 309,
	307, 0, 310, 311, 312, 0, 0, 313, 314, 315,
	0, 316, 317, 0, 318, 319, 320, 0, 321, 322,
	581, 323, 324, 325, 327, 329, 326, 330, 331, 332,
	333, 582, 583, 0, 0, 0, 0, 0, 0, 0,
	334, 335, 336, 584, 0, 0, 0, 337, 0, 338,
	0, 0, 0, 339, 340, 585, 586, 341, 342, 343,
	344, 345, 346, 347, 348, 0, 349, 587, 0, 588,
	350, 0, 351, 352, 353, 354, 355, 1422, 590, 591,
	427, 0, 356, 357, 0, 358, 359, 360, 361, 0,
	0, 0, 0, 362, 363, 365, 0, 0, 364, 592,
	593, 0, 594, 0, 366, 367, 0, 595, 0, 368,
	369, 370, 0, 371, 0, 0, 0, 372, 373, 374,
	375, 376, 377, 0, 378, 380, 379, 0, 381, 596,
	0, 382, 383, 0, 0, 384, 0, 0, 0, 385,
	386, 0, 0, 387, 388, 389, 390, 0, 391, 392,
	394, 396, 393, 395, 409, 397, 398, 399, 400, 401,
	402, 403, 404, 405, 406, 407, 408, 411, 0, 410,
	0, 412, 413, 414, 419, 421, 422, 417, 418, 420,
	423, 416, 0, 415, 0, 0, 0, 424, 425, 0,
	597, 426, 598, 428, 429, 0, 0, 430, 0, 0,
	0, 432, 433, 434, 0, 0, 435, 436, 599, 0,
	437, 0, 600, 438, 439, 431, 440, 441, 442, 443,
	444, 445, 446, 447, 0, 448, 449, 601, 450, 451,
	452, 602, 453, 454, 455, 603, 456, 604, 457, 458,
	0, 459, 0, 460, 461, 462, 463, 464, 465, 466,
	605, 468, 467, 469, 0, 470, 0, 0, 0, 0,
	0, 471, 0, 473, 474, 475, 472, 476, 477, 478,
	479, 0, 480, 481, 482, 0, 483, 484, 485, 486,
	606, 487, 0, 488, 489, 495, 496, 490, 491, 497,
	498, 499, 500, 501, 0, 503, 504, 502, 505, 506,
	507, 0, 508, 492, 493, 509, 510, 0, 511, 512,
	513, 514, 515, 516, 607, 0, 517, 0, 518, 519,
	520, 521, 494, 522, 527, 608, 523, 524, 525, 526,
	609, 0, 529, 530, 0, 528, 0, 531, 532, 533,
	534, 535, 536, 328, 537, 0, 538, 610, 611, 612,
	613, 0, 547, 0, 539, 540, 541, 614, 542, 615,
	0, 543, 544, 545, 546, 0, 548, 549, 0, 0,
	550, 551, 552, 554, 555, 553, 556, 0, 557, 0,
	0, 558, 559, 560, 616, 617, 618, 0, 562, 561,
	563, 619, 1406, 0, 245, 0, 564, 565, 620, 566,
	567, 568, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 251, 252, 253, 254, 255, 256, 0, 257, 258,
	0, 0, 0, 0, 0, 569, 0, 0, 0, 0,
	259, 260, 0, 261, 262, 263, 264, 265, 570, 571,
	0, 266, 572, 267, 573, 0, 574, 268, 269, 270,
	271, 272, 273, 0, 0, 0, 274, 575, 576, 577,
	0, 275, 276, 578, 0, 0, 0, 277, 278, 279,
	280, 281, 282, 283, 0, 0, 285, 286, 287, 284,
	0, 288, 0, 289, 290, 291, 292, 293, 294, 0,
	295, 296, 297, 0, 298, 299, 0, 0, 0, 0,
	0, 0, 0, 300, 301, 302, 303, 0, 304, 579,
	580, 0, 308, 305, 306, 0, 309, 307, 0, 310,
	311, 312, 0, 0, 313, 314, 315, 0, 316, 317,
	0, 318, 319, 320, 0, 321, 322, 581, 323, 324,
	325, 327, 329, 326, 330, 331, 332, 333, 582, 583,
	0, 0, 0, 0, 0, 0, 0, 334, 335, 336,
	584, 0, 0, 0, 337, 0, 338, 0, 0, 0,
	339, 340, 585, 586, 341, 342, 343, 344, 345, 346,
	347, 348, 0, 349, 587, 0, 588, 350, 0, 351,
	352, 353, 354, 355, 1404, 590, 591, 427, 0, 356,
	357, 0, 358, 359, 360, 361, 0, 0, 0, 0,
	362, 363, 365, 0, 0, 364, 592, 593, 0, 594,
	0, 366, 367, 0, 595, 0, 368, 369, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	0, 378, 380, 379, 0, 381, 596, 0, 382, 383,
	0, 0, 384, 0, 0, 0, 385, 386, 0, 0,
	387, 388, 389, 390, 0, 391, 392, 394, 396, 393,
	395, 409, 397, 398, 399, 400, 401, 402, 403, 404,
	405, 406, 407, 408, 411, 0, 410, 0, 412, 413,
	414, 419, 421, 422, 417, 418, 420, 423, 416, 0,
	415, 0, 0, 0, 424, 425, 0, 597, 426, 598,
	428, 429, 0, 0, 430, 0, 0, 0, 432, 433,
	434, 0, 0, 435, 436, 599, 0, 437, 0, 600,
	438, 439, 431, 440, 441, 442, 443, 444, 445, 446,
	447, 0, 448, 449, 601, 450, 451, 452, 602, 453,
	454, 455, 603, 456, 604, 457, 458, 0, 459, 0,
	460, 461, 462, 463, 464, 465, 466, 605, 468, 467,
	469, 0, 470, 0, 0, 0, 0, 0, 471, 0,
	473, 474, 475, 472, 476, 477, 478, 479, 0, 480,
	481, 482, 0, 483, 484, 485, 486, 606, 487, 0,
	488, 489, 495, 496, 490, 491, 497, 498, 499, 500,
	501, 0, 503, 504, 502, 505, 506, 507, 0, 508,
	492, 493, 509, 510, 0, 511, 512, 513, 514, 515,
	516, 607, 0, 517, 0, 518, 519, 520, 521, 494,
	522, 527, 608, 523, 524, 525, 526, 609, 0, 529,
	530, 0, 528, 0, 531, 532, 533, 534, 535, 536,
	328, 537, 0, 538, 610, 611, 612, 613, 0, 547,
	0, 539, 540, 541, 614, 542, 615, 0, 543, 544,
	545, 546, 0, 548, 549, 0, 0, 550, 551, 552,
	554, 555, 553, 556, 0, 557, 0, 0, 558, 559,
	560, 616, 617, 618, 0, 562, 561, 563, 619, 1400,
	0, 245, 0, 564, 565, 620, 566, 567, 568, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 251, 252,
	253, 254, 255, 256, 0, 257, 258, 0, 0, 0,
	0, 0, 569, 0, 0, 0, 0, 259, 260, 0,
	261, 262, 263, 264, 265, 570, 571, 0, 266, 572,
	267, 573, 0, 574, 268, 269, 270, 271, 272, 273,
	0, 0, 0, 274, 575, 576, 577, 0, 275, 276,
	578, 0, 0, 0, 277, 278, 279, 280, 281, 282,
	283, 0, 0, 285, 286, 287, 284, 0, 288, 0,
	289, 290, 291, 292, 293, 294, 0, 295, 296, 297,
	0, 298, 299, 0, 0, 0, 0, 0, 0, 0,
	300, 301, 302, 303, 0, 304, 579, 580, 0, 308,
	305, 306, 0, 309, 307, 0, 310, 311, 312, 0,
	0, 313, 314, 315, 0, 316, 317, 0, 318, 319,
	320, 0, 321, 322, 581, 323, 324, 325, 327, 329,
	326, 330, 331, 332, 333, 582, 583, 0, 0, 0,
	0, 0, 0, 0, 334, 335, 336, 584, 0, 0,
	0, 337, 0, 338, 0, 0, 0, 339, 340, 585,
	586, 341, 342, 343, 344, 345, 346, 347, 348, 0,
	349, 587, 0, 588, 350, 0, 351, 352, 353, 354,
	355, 589, 590, 591, 427, 0, 356, 357, 0, 358,
	359, 360, 361, 0, 0, 0, 0, 362, 363, 365,
	0, 0, 364, 592, 593, 0, 594, 0, 366, 367,
	0, 595, 0, 368, 369, 370, 0, 371, 0, 0,
	0, 372, 373, 374, 375, 376, 377, 0, 378, 380,
	379, 0, 381, 596, 0, 382, 383, 0, 0, 384,
	0, 0, 0, 385, 386, 0, 0, 387, 388, 389,
	390, 0, 391, 392, 394, 396, 393, 395, 409, 397,
	398, 399, 400, 401, 402, 403, 404, 405, 406, 407,
	408, 411, 0, 410, 0, 412, 413, 414, 419, 421,
	422, 417, 418, 420, 423, 416, 0, 415, 0, 0,
	0, 424, 425, 0, 597, 426, 598, 428, 429, 0,
	0, 430, 0, 0, 0, 432, 433, 434, 0, 0,
	435, 436, 599, 0, 437, 0, 600, 438, 439, 431,
	440, 441, 442, 443, 444, 445, 446, 447, 0, 448,
	449, 601, 450, 451, 452, 602, 453, 454, 455, 603,
	456, 604, 457, 458, 0, 459, 0, 460, 461, 462,
	463, 464, 465, 466, 605, 468, 467, 469, 0, 470,
	0, 0, 0, 0, 0, 471, 0, 473, 474, 475,
	472, 476, 477, 478, 479, 0, 480, 481, 482, 0,
	483, 484, 485, 486, 606, 487, 0, 488, 489, 495,
	496, 490, 491, 497, 498, 499, 500, 501, 0, 503,
	504, 502, 505, 506, 507, 0, 508, 492, 493, 509,
	510, 0, 511, 512, 513, 514, 515, 516, 607, 0,
	517, 0, 518, 519, 520, 521, 494, 522, 527, 608,
	523, 524, 525, 526, 609, 0, 529, 530, 0, 528,
	0, 531, 532, 533, 534, 535, 536, 328, 537, 0,
	538, 610, 611, 612, 613, 0, 547, 0, 539, 540,
	541, 614, 542, 615, 0, 543, 544, 545, 546, 0,
	548, 549, 0, 0, 550, 551, 552, 554, 555, 553,
	556, 0, 557, 0, 0, 558, 559, 560, 616, 617,
	618, 0, 562, 561, 563, 619, 1332, 0, 245, 0,
	564, 565, 620, 566, 567, 568, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 252, 253, 254, 255,
	256, 0, 257, 258, 0, 0, 0, 0, 0, 569,
	0, 0, 0, 0, 259, 260, 0, 261, 262, 263,
	264, 265, 570, 571, 0, 266, 572, 267, 573, 0,
	574, 268, 269, 270, 271, 272, 273, 0, 0, 0,
	274, 575, 576, 577, 0, 275, 276, 578, 0, 0,
	0, 277, 278, 279, 280, 281, 282, 283, 0, 0,
	285, 286, 287, 284, 0, 288, 0, 289, 290, 291,
	292, 293, 294, 0, 295, 296, 297, 0, 298, 299,
	0, 0, 0, 0, 0, 0, 0, 300, 301, 302,
	303, 0, 304, 579, 580, 0, 308, 305, 306, 0,
	309, 307, 0, 310, 311, 312, 0, 0, 313, 314,
	315, 0, 316, 317, 0, 318, 319, 320, 0, 321,
	322, 581, 323, 324, 325, 327, 329, 326, 330, 331,
	332, 333, 582, 583, 0, 0, 0, 0, 0, 0,
	0, 334, 335, 336, 584, 0, 0, 0, 337, 0,
	338, 0, 0, 0, 339, 340, 585, 586, 341, 342,
	343, 344, 345, 346, 347, 348, 0, 349, 587, 0,
	588, 350, 0, 351, 352, 353, 354, 355, 589, 590,
	591, 427, 0, 356, 357, 0, 358, 359, 360, 361,
	0, 0, 0, 0, 362, 363, 365, 0, 0, 364,
	592, 593, 0, 594, 0, 366, 367, 0, 595, 0,
	368, 369, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 0, 378, 380, 379, 0, 381,
	596, 0, 382, 383, 0, 0, 384, 0, 0, 0,
	385, 386, 0, 0, 387, 388, 389, 390, 0, 391,
	392, 394, 396, 393, 395, 409, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, 408, 411, 0,
	410, 0, 412, 413, 414, 419, 421, 422, 417, 418,
	420, 423, 416, 0, 415, 0, 0, 0, 424, 425,
	0, 597, 426, 598, 428, 429, 0, 0, 430, 0,
	0, 0, 432, 433, 434, 0, 0, 435, 436, 599,
	0, 437, 0, 600, 438, 439, 431, 440, 441, 442,
	443, 444, 445, 446, 447, 0, 448, 449, 601, 450,
	451, 452, 602, 453, 454, 455, 603, 456, 604, 457,
	458, 0, 459, 0, 460, 461, 462, 463, 464, 465,
	466, 605, 468, 467, 469, 0, 470, 0, 0, 0,
	0, 0, 471, 0, 473, 474, 475, 472, 476, 477,
	478, 479, 0, 480, 481, 482, 0, 483, 484, 485,
	486, 606, 487, 0, 488, 489, 495, 496, 490, 491,
	497, 498, 499, 500, 501, 0, 503, 504, 502, 505,
	506, 507, 0, 508, 492, 493, 509, 510, 0, 511,
	512, 513, 514, 515, 516, 607, 0, 517, 0, 518,
	519, 520, 521, 494, 522, 527, 608, 523, 524, 525,
	526, 609, 0, 529, 530, 0, 528, 0, 531, 532,
	533, 534, 535, 536, 328, 537, 0, 538, 610, 611,
	612, 613, 0, 547, 0, 539, 540, 541, 614, 542,
	615, 0, 543, 544, 545, 546, 0, 548, 549, 0,
	0, 550, 551, 552, 554, 555, 553, 556, 0, 557,
	0, 0, 558, 559, 560, 616, 617, 618, 0, 562,
	561, 563, 619, 1316, 0, 245, 0, 564, 565, 620,
	566, 567, 568, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 251, 252, 253, 254, 255, 256, 0, 257,
	258, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 0, 574, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 575, 576,
	577, 0, 275, 276, 578, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	579, 580, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 587, 0, 588, 350, 0,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 0, 364, 592, 593, 0,
	594, 0, 366, 367, 0, 595, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 596, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 0, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	0, 415, 0, 0, 0, 424, 425, 0, 597, 426,
	598, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 0, 437, 0,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 0, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 0,
	508, 492, 493, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 0,
	529, 530, 0, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 610, 611, 612, 613, 0,
	547, 0, 539, 540, 541, 614, 542, 615, 0, 543,
	544, 545, 546, 0, 548, 549, 0, 0, 550, 551,
	552, 554, 555, 553, 556, 0, 557, 0, 0, 558,
	559, 560, 616, 617, 618, 245, 562, 561, 563, 619,
	0, 0, 0, 0, 564, 565, 620, 566, 567, 568,
	0, 0, 251, 252, 253, 254, 255, 256, 1166, 257,
	258, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 0, 574, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 575, 576,
	577, 0, 275, 276, 578, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	579, 580, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 587, 0, 588, 350, 0,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 0, 364, 592, 593, 0,
	594, 0, 366, 367, 0, 595, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 596, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 0, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	0, 415, 0, 0, 0, 424, 425, 0, 597, 426,
	598, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 0, 437, 0,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 0, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 0,
	508, 492, 493, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 0,
	529, 530, 0, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 610, 611, 612, 613, 0,
	547, 0, 539, 540, 541, 614, 542, 615, 0, 543,
	544, 545, 546, 0, 548, 549, 0, 0, 550, 551,
	552, 554, 555, 553, 556, 0, 557, 0, 0, 558,
	559, 560, 616, 617, 618, 245, 562, 561, 563, 619,
	0, 0, 0, 0, 564, 565, 620, 566, 567, 568,
	0, 0, 251, 252, 253, 254, 255, 256, 680, 257,
	258, 0, 0, 0, 0, 0, 569, 0, 0, 0,
	0, 259, 260, 0, 261, 262, 263, 264, 265, 570,
	571, 0, 266, 572, 267, 573, 0, 574, 268, 269,
	270, 271, 272, 273, 0, 0, 0, 274, 575, 576,
	577, 0, 275, 276, 578, 0, 0, 0, 277, 278,
	279, 280, 281, 282, 283, 0, 0, 285, 286, 287,
	284, 0, 288, 0, 289, 290, 291, 292, 293, 294,
	0, 295, 296, 297, 0, 298, 299, 0, 0, 0,
	0, 0, 0, 0, 300, 301, 302, 303, 0, 304,
	579, 580, 0, 308, 305, 306, 0, 309, 307, 0,
	310, 311, 312, 0, 0, 313, 314, 315, 0, 316,
	317, 0, 318, 319, 320, 0, 321, 322, 581, 323,
	324, 325, 327, 329, 326, 330, 331, 332, 333, 582,
	583, 0, 0, 0, 0, 0, 0, 0, 334, 335,
	336, 584, 0, 0, 0, 337, 0, 338, 0, 0,
	0, 339, 340, 585, 586, 341, 342, 343, 344, 345,
	346, 347, 348, 0, 349, 587, 0, 588, 350, 0,
	351, 352, 353, 354, 355, 589, 590, 591, 427, 0,
	356, 357, 0, 358, 359, 360, 361, 0, 0, 0,
	0, 362, 363, 365, 0, 0, 364, 592, 593, 0,
	594, 0, 366, 367, 0, 595, 0, 368, 369, 370,
	0, 371, 0, 0, 0, 372, 373, 374, 375, 376,
	377, 0, 378, 380, 379, 0, 381, 596, 0, 382,
	383, 0, 0, 384, 0, 0, 0, 385, 386, 0,
	0, 387, 388, 389, 390, 0, 391, 392, 394, 396,
	393, 395, 409, 397, 398, 399, 400, 401, 402, 403,
	404, 405, 406, 407, 408, 411, 0, 410, 0, 412,
	413, 414, 419, 421, 422, 417, 418, 420, 423, 416,
	0, 415, 0, 0, 0, 424, 425, 0, 597, 426,
	598, 428, 429, 0, 0, 430, 0, 0, 0, 432,
	433, 434, 0, 0, 435, 436, 599, 0, 437, 0,
	600, 438, 439, 431, 440, 441, 442, 443, 444, 445,
	446, 447, 0, 448, 449, 601, 450, 451, 452, 602,
	453, 454, 455, 603, 456, 604, 457, 458, 0, 459,
	0, 460, 461, 462, 463, 464, 465, 466, 605, 468,
	467, 469, 0, 470, 0, 0, 0, 0, 0, 471,
	0, 473, 474, 475, 472, 476, 477, 478, 479, 0,
	480, 481, 482, 0, 483, 484, 485, 486, 606, 487,
	0, 488, 489, 495, 496, 490, 491, 497, 498, 499,
	500, 501, 0, 503, 504, 502, 505, 506, 507, 0,
	508, 492, 493, 509, 510, 0, 511, 512, 513, 514,
	515, 516, 607, 0, 517, 0, 518, 519, 520, 521,
	494, 522, 527, 608, 523, 524, 525, 526, 609, 0,
	529, 530, 0, 528, 0, 531, 532, 533, 534, 535,
	536, 328, 537, 0, 538, 610, 611, 612, 613, 0,
	547, 0, 539, 540, 541, 614, 542, 615, 0, 543,
	544, 545, 546, 0, 548, 549, 0, 0, 550, 551,
	552, 554, 555, 553, 556, 0, 557, 0, 0, 558,
	559, 560, 616, 617, 618, 0, 562, 561, 563, 619,
	674, 0, 245, 0, 564, 565, 620, 566, 567, 568,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 251,
	252, 253, 254, 255, 256, 0, 257, 258, 0, 0,
	0, 0, 0, 569, 0, 0, 0, 0, 259, 260,
	0, 261, 262, 263, 264, 265, 570, 571, 0, 266,
	572, 267, 573, 0, 574, 268, 269, 270, 271, 272,
	273, 0, 0, 0, 274, 575, 576, 577, 0, 275,
	664, 578, 0, 0, 0, 277, 278, 279, 280, 281,
	282, 283, 0, 0, 285, 286, 287, 284, 0, 662,
	0, 289, 290, 291, 292, 293, 294, 0, 295, 296,
	297, 0, 298, 299, 0, 0, 0, 0, 0, 0,
	0, 300, 301, 302, 303, 0, 304, 579, 580, 0,
	308, 305, 306, 0, 309, 307, 0, 310, 311, 312,
	0, 0, 313, 314, 315, 0, 316, 317, 0, 318,
	319, 320, 0, 321, 322, 581, 323, 324, 325, 327,
	329, 326, 330, 331, 332, 333, 582, 583, 0, 0,
	0, 0, 0, 0, 0, 334, 335, 336, 584, 0,
	0, 0, 337, 0, 338, 0, 0, 0, 339, 340,
	585, 586, 341, 342, 343, 344, 345, 346, 347, 348,
	0, 349, 587, 0, 588, 350, 0, 351, 352, 353,
	354, 355, 589, 590, 591, 427, 0, 356, 357, 0,
	358, 359, 360, 361, 0, 0, 0, 0, 362, 363,
	365, 0, 0, 364, 592, 593, 0, 594, 0, 366,
	367, 0, 595, 0, 368, 369, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 0, 378,
	380, 379, 0, 381, 596, 0, 382, 383, 0, 0,
	384, 0, 0, 0, 385, 663, 0, 0, 387, 388,
	389, 390, 0, 391, 392, 394, 396, 393, 395, 409,
	397, 398, 399, 400, 401, 402, 403, 404, 405, 406,
	407, 408, 411, 0, 675, 0, 412, 413, 414, 419,
	421, 422, 417, 418, 420, 423, 416, 0, 415, 0,
	0, 0, 424, 425, 0, 597, 426, 598, 428, 429,
	0, 0, 430, 0, 0, 0, 432, 433, 434, 0,
	0, 435, 436, 599, 0, 437, 0, 600, 438, 439,
	431, 440, 441, 442, 443, 444, 445, 446, 447, 0,
	448, 449, 601, 450, 451, 452, 602, 453, 454, 455,
	603, 456, 604, 457, 458, 0, 459, 0, 460, 461,
	462, 463, 464, 465, 466, 605, 468, 467, 469, 0,
	470, 0, 0, 0, 0, 0, 471, 0, 473, 474,
	475, 472, 476, 477, 478, 479, 0, 480, 481, 482,
	0, 483, 484, 485, 486, 665, 487, 0, 488, 489,
	495, 496, 490, 491, 671, 498, 499, 500, 501, 0,
	503, 504, 502, 505, 666, 507, 0, 508, 492, 493,
	509, 510, 0, 511, 512, 513, 514, 515, 516, 607,
	0, 517, 0, 518, 519, 520, 521, 494, 522, 527,
	608, 523, 524, 525, 526, 609, 0, 529, 530, 0,
	528, 0, 531, 532, 533, 534, 535, 536, 328, 537,
	0, 538, 670, 611, 612, 613, 0, 547, 0, 539,
	668, 541, 614, 542, 615, 0, 543, 544, 545, 546,
	0, 548, 549, 0, 0, 550, 551, 552, 554, 555,
	553, 556, 0, 557, 0, 0, 558, 559, 560, 616,
	617, 618, 0, 562, 561, 563, 619, 656, 0, 245,
	0, 564, 565, 620, 566, 567, 568, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 251, 252, 253, 254,
	255, 256, 0, 257, 258, 0, 0, 0, 0, 0,
	569, 0, 0, 0, 0, 259, 260, 0, 261, 262,
	263, 264, 265, 570, 571, 0, 266, 572, 267, 573,
	0, 574, 268, 269, 270, 271, 272, 273, 0, 0,
	0, 274, 575, 576, 577, 0, 275, 276, 578, 0,
	0, 0, 277, 278, 279, 280, 281, 282, 283, 0,
	0, 285, 286, 287, 284, 0, 288, 0, 289, 290,
	291, 292, 293, 294, 0, 295, 296, 297, 0, 298,
	299, 0, 0, 0, 0, 0, 0, 0, 300, 301,
	302, 303, 0, 304, 579, 580, 0, 308, 305, 306,
	0, 309, 307, 0, 310, 311, 312, 0, 0, 313,
	314, 315, 0, 316, 317, 0, 318, 319, 320, 0,
	321, 322, 581, 323, 324, 325, 327, 329, 326, 330,
	331, 332, 333, 582, 583, 0, 0, 0, 0, 0,
	0, 0, 334, 335, 336, 584, 0, 0, 0, 337,
	0, 338, 0, 0, 0, 339, 340, 585, 586, 341,
	342, 343, 344, 345, 346, 347, 348, 0, 349, 587,
	0, 588, 350, 0, 351, 352, 353, 354, 355, 589,
	590, 591, 427, 0, 356, 357, 0, 358, 359, 360,
	361, 0, 0, 0, 0, 362, 363, 365, 0, 0,
	364, 592, 593, 0, 594, 0, 366, 367, 0, 595,
	0, 368, 369, 370, 0, 371, 0, 0, 0, 372,
	373, 374, 375, 376, 377, 0, 378, 380, 379, 0,
	381, 596, 0, 382, 383, 0, 0, 384, 0, 0,
	0, 385, 386, 0, 0, 387, 388, 389, 390, 0,
	391, 392, 394, 396, 393, 395, 409, 397, 398, 399,
	400, 401, 402, 403, 404, 405, 406, 407, 408, 411,
	0, 410, 0, 412, 413, 414, 419, 421, 422, 417,
	418, 420, 423, 416, 0, 415, 0, 0, 0, 424,
	425, 0, 597, 426, 598, 428, 429, 0, 0, 430,
	0, 0, 0, 432, 433, 434, 0, 0, 435, 436,
	599, 0, 437, 0, 600, 438, 439, 431, 440, 441,
	442, 443, 444, 445, 446, 447, 0, 448, 449, 601,
	450, 451, 452, 602, 453, 454, 455, 603, 456, 604,
	457, 458, 0, 459, 0, 460, 461, 462, 463, 464,
	465, 466, 605, 468, 467, 469, 0, 470, 0, 0,
	0, 0, 0, 471, 0, 473, 474, 475, 472, 476,
	477, 478, 479, 0, 480, 481, 482, 0, 483, 484,
	485, 486, 606, 487, 0, 488, 489, 657, 496, 490,
	491, 497, 498, 499, 500, 501, 0, 503, 504, 502,
	505, 506, 507, 0, 508, 492, 493, 509, 510, 0,
	511, 512, 513, 514, 515, 516, 607, 0, 517, 0,
	518, 519, 520, 521, 494, 522, 527, 608, 523, 524,
	525, 526, 609, 0, 529, 530, 0, 528, 0, 531,
	532, 533, 534, 535, 536, 328, 537, 0, 538, 610,
	611, 612, 613, 0, 547, 0, 539, 540, 541, 614,
	542, 615, 0, 543, 544, 545, 546, 0, 548, 549,
	0, 0, 550, 551, 552, 554, 555, 553, 556, 0,
	557, 0, 0, 558, 559, 560, 616, 617, 618, 0,
	562, 561, 563, 619, 654, 0, 245, 0, 564, 565,
	620, 566, 567, 568, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 251, 252, 253, 254, 255, 256, 0,
	257, 258, 0, 0, 0, 0, 0, 569, 0, 0,
	0, 0, 259, 260, 0, 261, 262, 263, 264, 265,
	570, 571, 0, 266, 572, 267, 573, 0, 574, 268,
	269, 270, 271, 272, 273, 0, 0, 0, 274, 575,
	576, 577, 0, 275, 276, 578, 0, 0, 0, 277,
	278, 279, 280, 281, 282, 283, 0, 0, 285, 286,
	287, 284, 0, 288, 0, 289, 290, 291, 292, 293,
	294, 0, 295, 296, 297, 0, 298, 299, 0, 0,
	0, 0, 0, 0, 0, 300, 301, 302, 303, 0,
	304, 579, 580, 0, 308, 305, 306, 0, 309, 307,
	0, 310, 311, 312, 0, 0, 313, 314, 315, 0,
	316, 317, 0, 318, 319, 320, 0, 321, 322, 581,
	323, 324, 325, 327, 329, 326, 330, 331, 332, 333,
	582, 583, 0, 0, 0, 0, 0, 0, 0, 334,
	335, 336, 584, 0, 0, 0, 337, 0, 338, 0,
	0, 0, 339, 340, 585, 586, 341, 342, 343, 344,
	345, 346, 347, 348, 0, 349, 587, 0, 588, 350,
	0, 351, 352, 353, 354, 355, 589, 590, 591, 427,
	0, 356, 357, 0, 358, 359, 360, 361, 0, 0,
	0, 0, 362, 363, 365, 0, 0, 364, 592, 593,
	0, 594, 0, 366, 367, 0, 595, 0, 368, 369,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 0, 378, 380, 379, 0, 381, 596, 0,
	382, 383, 0, 0, 384, 0, 0, 0, 385, 386,
	0, 0, 387, 388, 389, 390, 0, 391, 392, 394,
	396, 393, 395, 409, 397, 398, 399, 400, 401, 402,
	403, 404, 405, 406, 407, 408, 411, 0, 410, 0,
	412, 413, 414, 419, 421, 422, 417, 418, 420, 423,
	416, 0, 415, 0, 0, 0, 424, 425, 0, 597,
	426, 598, 428, 429, 0, 0, 430, 0, 0, 0,
	432, 433, 434, 0, 0, 435, 436, 599, 0, 437,
	0, 600, 438, 439, 431, 440, 441, 442, 443, 444,
	445, 446, 447, 0, 448, 449, 601, 450, 451, 452,
	602, 453, 454, 455, 603, 456, 604, 457, 458, 0,
	459, 0, 460, 461, 462, 463, 464, 465, 466, 605,
	468, 467, 469, 0, 470, 0, 0, 0, 0, 0,
	471, 0, 473, 474, 475, 472, 476, 477, 478, 479,
	0, 480, 481, 482, 0, 483, 484, 485, 486, 606,
	487, 0, 488, 489, 495, 496, 490, 491, 497, 498,
	499, 500, 501, 0, 503, 504, 502, 505, 506, 507,
	0, 508, 492, 493, 509, 510, 0, 511, 512, 513,
	514, 515, 516, 607, 0, 517, 0, 518, 519, 520,
	521, 494, 522, 527, 608, 523, 524, 525, 526, 609,
	0, 529, 530, 0, 528, 0, 531, 532, 533, 534,
	535, 536, 328, 537, 0, 538, 610, 611, 612, 613,
	0, 547, 0, 539, 540, 541, 614, 542, 615, 0,
	543, 544, 545, 546, 0, 548, 549, 0, 0, 550,
	551, 552, 554, 555, 553, 556, 0, 557, 0, 0,
	558, 559, 560, 616, 617, 618, 0, 562, 561, 563,
	619, 648, 0, 245, 0, 564, 565, 620, 566, 567,
	568, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	251, 252, 253, 254, 255, 256, 0, 257, 258, 0,
	0, 0, 0, 0, 569, 0, 0, 0, 0, 259,
	260, 0, 261, 262, 263, 264, 265, 570, 571, 0,
	266, 572, 267, 573, 0, 574, 268, 269, 270, 271,
	272, 273, 0, 0, 0, 274, 575, 576, 577, 0,
	275, 276, 578, 0, 0, 0, 277, 278, 279, 280,
	281, 282, 283, 0, 0, 285, 286, 287, 284, 0,
	288, 0, 289, 290, 291, 292, 293, 294, 0, 295,
	296, 297, 0, 298, 299, 0, 0, 0, 0, 0,
	0, 0, 300, 301, 302, 303, 0, 304, 579, 580,
	0, 308, 305, 306, 0, 309, 307, 0, 310, 311,
	312, 0, 0, 313, 314, 315, 0, 316, 317, 0,
	318, 319, 320, 0, 321, 322, 581, 323, 324, 325,
	327, 329, 326, 330, 331, 332, 333, 582, 583, 0,
	0, 0, 0, 0, 0, 0, 334, 335, 336, 584,
	0, 0, 0, 337, 0, 338, 0, 0, 0, 339,
	340, 585, 586, 341, 342, 343, 344, 345, 346, 347,
	348, 0, 349, 587, 0, 588, 350, 0, 351, 352,
	353, 354, 355, 589, 590, 591, 427, 0, 356, 357,
	0, 358, 359, 360, 361, 0, 0, 0, 0, 362,
	363, 365, 0, 0, 364, 592, 593, 0, 594, 0,
	366, 367, 0, 595, 0, 368, 369, 370, 0, 371,
	0, 0, 0, 372, 373, 374, 375, 376, 377, 0,
	378, 380, 379, 0, 381, 596, 0, 382, 383, 0,
	0, 384, 0, 0, 0, 385, 386, 0, 0, 387,
	388, 389, 390, 0, 391, 392, 394, 396, 393, 395,
	409, 397, 398, 399, 400, 401, 402, 403, 404, 405,
	406, 407, 408, 411, 0, 410, 0, 412, 413, 414,
	419, 421, 422, 417, 418, 420, 423, 416, 0, 415,
	0, 0, 0, 424, 425, 0, 597, 426, 598, 428,
	429, 0, 0, 430, 0, 0, 0, 432, 433, 434,
	0, 0, 435, 436, 599, 0, 437, 0, 600, 438,
	439, 431, 440, 441, 442, 443, 444, 445, 446, 447,
	0, 448, 449, 601, 450, 451, 452, 602, 453, 454,
	455, 603, 456, 604, 457, 458, 0, 459, 0, 460,
	461, 462, 463, 464, 465, 466, 605, 468, 467, 469,
	0, 470, 0, 0, 0, 0, 0, 471, 0, 473,
	474, 475, 472, 476, 477, 478, 479, 0, 480, 481,
	482, 0, 483, 484, 485, 486, 606, 487, 0, 488,
	489, 495, 496, 490, 491, 497, 498, 499, 500, 501,
	0, 503, 504, 502, 505, 506, 507, 0, 508, 492,
	493, 509, 510, 0, 511, 512, 513, 514, 515, 516,
	607, 0, 517, 0, 518, 519, 520, 521, 494, 522,
	527, 608, 523, 524, 525, 526, 609, 0, 529, 530,
	0, 528, 0, 531, 532, 533, 534, 535, 536, 328,
	537, 0, 538, 610, 611, 612, 613, 0, 547, 0,
	539, 540, 541, 614, 542, 615, 0, 543, 544, 545,
	546, 0, 548, 549, 0, 0, 550, 551, 552, 554,
	555, 553, 556, 0, 557, 0, 0, 558, 559, 560,
	616, 617, 618, 0, 562, 561, 563, 619, 626, 0,
	245, 0, 564, 565, 620, 566, 567, 568, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	3255, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	3203, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	3144, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	3142, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	3128, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	2731, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 657, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 2081, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 0, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	1445, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	1383, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 350, 0, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 442, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	464, 465, 466, 605, 1118, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 487, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	245, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 0, 0, 251, 252, 253,
	254, 255, 256, 0, 257, 258, 0, 0, 0, 0,
	0, 569, 0, 0, 0, 0, 259, 260, 0, 261,
	262, 263, 264, 265, 570, 571, 0, 266, 572, 267,
	573, 0, 574, 268, 269, 270, 271, 272, 273, 0,
	0, 0, 274, 575, 576, 577, 0, 275, 276, 578,
	0, 0, 0, 277, 278, 279, 280, 281, 282, 283,
	0, 0, 285, 286, 287, 284, 0, 288, 0, 289,
	290, 291, 292, 293, 294, 0, 295, 296, 297, 0,
	298, 299, 0, 0, 0, 0, 0, 0, 0, 300,
	301, 302, 303, 0, 304, 579, 580, 0, 308, 305,
	306, 0, 309, 307, 0, 310, 311, 312, 0, 0,
	313, 314, 315, 0, 316, 317, 0, 318, 319, 320,
	0, 321, 322, 581, 323, 324, 325, 327, 329, 326,
	330, 331, 332, 333, 582, 583, 0, 0, 0, 0,
	0, 0, 0, 334, 335, 336, 584, 0, 0, 0,
	337, 0, 338, 0, 0, 0, 339, 340, 585, 586,
	341, 342, 343, 344, 345, 346, 347, 348, 0, 349,
	587, 0, 588, 0, 0, 351, 352, 353, 354, 355,
	589, 590, 591, 427, 0, 356, 357, 0, 358, 359,
	360, 361, 0, 0, 0, 0, 362, 363, 365, 0,
	0, 364, 592, 593, 0, 594, 0, 366, 367, 0,
	595, 0, 368, 369, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 0, 378, 380, 379,
	0, 381, 596, 0, 382, 383, 0, 0, 384, 0,
	0, 0, 385, 386, 0, 0, 387, 388, 389, 390,
	0, 391, 392, 394, 396, 393, 395, 409, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 407, 408,
	411, 0, 410, 0, 412, 413, 414, 419, 421, 422,
	417, 418, 420, 423, 416, 0, 415, 0, 0, 0,
	424, 425, 0, 597, 426, 598, 428, 429, 0, 0,
	430, 0, 0, 0, 432, 433, 434, 0, 0, 435,
	436, 599, 0, 437, 0, 600, 438, 439, 431, 440,
	441, 0, 443, 444, 445, 446, 447, 0, 448, 449,
	601, 450, 451, 452, 602, 453, 454, 455, 603, 456,
	604, 457, 458, 0, 459, 0, 460, 461, 462, 463,
	0, 465, 466, 605, 468, 467, 469, 0, 470, 0,
	0, 0, 0, 0, 471, 0, 473, 474, 475, 472,
	476, 477, 478, 479, 0, 480, 481, 482, 0, 483,
	484, 485, 486, 606, 0, 0, 488, 489, 495, 496,
	490, 491, 497, 498, 499, 500, 501, 0, 503, 504,
	502, 505, 506, 507, 0, 508, 492, 493, 509, 510,
	0, 511, 512, 513, 514, 515, 516, 607, 0, 517,
	0, 518, 519, 520, 521, 494, 522, 527, 608, 523,
	524, 525, 526, 609, 0, 529, 530, 0, 528, 0,
	531, 532, 533, 534, 535, 536, 328, 537, 0, 538,
	610, 611, 612, 613, 0, 547, 0, 539, 540, 541,
	614, 542, 615, 0, 543, 544, 545, 546, 0, 548,
	549, 0, 0, 550, 551, 552, 554, 555, 553, 556,
	0, 557, 0, 0, 558, 559, 560, 616, 617, 618,
	0, 562, 561, 563, 619, 0, 0, 0, 0, 564,
	565, 620, 566, 567, 568, 1657, 1658, 0, 1690, 1691,
	1692, 1700, 1701, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1693, 1688, 0, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 0, 0,
	0, 0, 1706, 0, 0, 1657, 1658, 0, 1690, 1691,
	1692, 1700, 1701, 1702, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1693, 1688, 1659, 0,
	0, 0, 0, 0, 1660, 0, 0, 0, 1679, 0,
	0, 0, 1706, 0, 0, 0, 1676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1659, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1679, 0,
	0, 0, 0, 0, 0, 0, 1676, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 1683, 1684,
	1685, 0, 0, 0, 0, 0, 0, 1665, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1682, 1683, 1684,
	1685, 0, 1697, 0, 0, 1707, 0, 1665, 0, 0,
	0, 1687, 1689, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 0, 1704,
	0, 0, 0, 0, 0, 0, 1674, 1675, 0, 0,
	0, 0, 1697, 0, 0, 1707, 0, 0, 0, 0,
	0, 1687, 1689, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1703, 1680, 1704,
	0, 0, 0, 0, 0, 0, 1674, 1675, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1695, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 1680, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1705, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1686, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1681, 1657, 1658, 0, 1690, 1691, 1692,
	1700, 1701, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1686, 0, 1693, 1688, 0, 1698, 0,
	0, 0, 0, 1660, 0, 0, 0, 0, 0, 0,
	0, 1706, 0, 1681, 1657, 1658, 0, 1690, 1691, 1692,
	1700, 1701, 1702, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1693, 1688, 1659, 1698, 0,
	0, 0, 0, 1660, 0, 0, 0, 1679, 0, 0,
	0, 1706, 0, 0, 0, 1676, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	0, 0, 0, 1696, 0, 1676, 0, 1671, 1672, 1678,
	1699, 1677, 1673, 0, 1670, 1668, 1669, 1661, 1662, 1663,
	1664, 1666, 1667, 0, 0, 0, 0, 4147, 0, 0,
	0, 0, 0, 0, 0, 0, 1682, 1683, 1684, 1685,
	0, 0, 0, 1696, 0, 0, 1665, 1671, 1672, 1678,
	1699, 1677, 1673, 0, 1670, 1668, 1669, 1661, 1662, 1663,
	1664, 1666, 1667, 0, 0, 0, 0, 4143, 0, 0,
	0, 0, 0, 0, 0, 0, 1682, 1683, 1684, 1685,
	0, 1697, 0, 0, 1707, 0, 1665, 0, 0, 0,
	1687, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 1704, 0,
	0, 0, 0, 0, 0, 1674, 1675, 0, 0, 0,
	0, 1697, 0, 0, 1707, 0, 0, 0, 0, 0,
	1687, 1689, 0, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 1680, 1704, 0,
	0, 0, 0, 0, 0, 1674, 1675, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1705, 1680, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1694, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1681, 1657, 1658, 0, 1690, 1691, 1692, 1700,
	1701, 1702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 0, 1693, 1688, 0, 1698, 0, 0,
	0, 0, 1660, 0, 0, 0, 0, 0, 0, 0,
	1706, 0, 1681, 1657, 1658, 0, 1690, 1691, 1692, 1700,
	1701, 1702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1693, 1688, 1659, 1698, 0, 0,
	0, 0, 1660, 0, 0, 0, 1679, 0, 0, 0,
	1706, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 0,
	0, 0, 1696, 0, 1676, 0, 1671, 1672, 1678, 1699,
	1677, 1673, 0, 1670, 1668, 1669, 1661, 1662, 1663, 1664,
	1666, 1667, 0, 0, 0, 0, 4055, 0, 0, 0,
	0, 0, 0, 0, 0, 1682, 1683, 1684, 1685, 0,
	0, 0, 1696, 0, 0, 1665, 1671, 1672, 1678, 1699,
	1677, 1673, 0, 1670, 1668, 1669, 1661, 1662, 1663, 1664,
	1666, 1667, 0, 0, 0, 0, 4054, 0, 0, 0,
	0, 0, 0, 0, 0, 1682, 1683, 1684, 1685, 0,
	1697, 0, 0, 1707, 0, 1665, 0, 0, 0, 1687,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 0, 1704, 0, 0,
	0, 0, 0, 0, 1674, 1675, 0, 0, 0, 0,
	1697, 0, 0, 1707, 0, 0, 0, 0, 0, 1687,
	1689, 0, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 1680, 1704, 0, 0,
	0, 0, 0, 0, 1674, 1675, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1695, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 1680, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1681, 1657, 1658, 0, 1690, 1691, 1692, 1700, 1701,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 0, 1693, 1688, 0, 1698, 0, 0, 0,
	0, 1660, 0, 0, 0, 0, 0, 0, 0, 1706,
	0, 1681, 1657, 1658, 0, 1690, 1691, 1692, 1700, 1701,
	1702, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1693, 1688, 1659, 1698, 0, 0, 0,
	0, 1660, 0, 0, 0, 1679, 0, 0, 0, 1706,
	0, 0, 0, 1676, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1659, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1679, 0, 0, 0, 0,
	0, 1696, 0, 1676, 0, 1671, 1672, 1678, 1699, 1677,
	1673, 0, 1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666,
	1667, 0, 0, 0, 0, 3902, 0, 0, 0, 0,
	0, 0, 0, 0, 1682, 1683, 1684, 1685, 0, 0,
	0, 1696, 0, 0, 1665, 1671, 1672, 1678, 1699, 1677,
	1673, 0, 1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666,
	1667, 0, 0, 0, 0, 3762, 0, 0, 0, 0,
	0, 0, 0, 0, 1682, 1683, 1684, 1685, 0, 1697,
	0, 0, 1707, 0, 1665, 0, 0, 0, 1687, 1689,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 0, 1704, 0, 0, 0,
	0, 0, 0, 1674, 1675, 0, 0, 0, 0, 1697,
	0, 0, 1707, 0, 0, 0, 0, 0, 1687, 1689,
	0, 1695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1703, 1680, 1704, 0, 0, 0,
	0, 0, 0, 1674, 1675, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1695, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1705, 1680, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1705, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1694, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1681, 1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1686, 0, 1693, 1688, 0, 1698, 0, 0, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 1706, 0,
	1681, 1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 1688, 1659, 1698, 0, 0, 0, 0,
	1660, 0, 0, 0, 1679, 0, 0, 0, 1706, 0,
	0, 0, 1676, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	1696, 0, 1676, 0, 1671, 1672, 1678, 1699, 1677, 1673,
	0, 1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667,
	0, 0, 0, 0, 3705, 0, 0, 0, 0, 0,
	0, 0, 0, 1682, 1683, 1684, 1685, 0, 0, 0,
	1696, 0, 0, 1665, 1671, 1672, 1678, 1699, 1677, 1673,
	0, 1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667,
	0, 0, 0, 0, 3704, 0, 0, 0, 0, 0,
	0, 0, 0, 1682, 1683, 1684, 1685, 0, 1697, 0,
	0, 1707, 0, 1665, 0, 0, 0, 1687, 1689, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 1704, 0, 0, 0, 0,
	0, 0, 1674, 1675, 0, 0, 0, 0, 1697, 0,
	0, 1707, 0, 0, 0, 0, 0, 1687, 1689, 0,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 1680, 1704, 0, 0, 0, 0,
	0, 0, 1674, 1675, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1695, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1705, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1681,
	1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1686,
	0, 1693, 1688, 0, 1698, 0, 0, 0, 0, 1660,
	0, 0, 0, 0, 0, 0, 0, 1706, 0, 1681,
	1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1693, 1688, 1659, 1698, 0, 0, 0, 0, 1660,
	0, 0, 0, 1679, 0, 0, 0, 1706, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 0, 0, 0, 0, 1696,
	0, 1676, 0, 1671, 1672, 1678, 1699, 1677, 1673, 0,
	1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0,
	0, 0, 0, 3703, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 1683, 1684, 1685, 0, 0, 0, 1696,
	0, 0, 1665, 1671, 1672, 1678, 1699, 1677, 1673, 0,
	1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0,
	0, 0, 0, 3400, 0, 0, 0, 0, 0, 0,
	0, 0, 1682, 1683, 1684, 1685, 0, 1697, 0, 0,
	1707, 0, 1665, 0, 0, 0, 1687, 1689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 0, 1704, 0, 0, 0, 0, 0,
	0, 1674, 1675, 0, 0, 0, 0, 1697, 0, 0,
	1707, 0, 0, 0, 0, 0, 1687, 1689, 0, 1695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 1680, 1704, 0, 0, 0, 0, 0,
	0, 1674, 1675, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1695,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 1680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1681, 1657,
	1658, 0, 1690, 1691, 1692, 1700, 1701, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1686, 0,
	1693, 1688, 0, 1698, 0, 0, 0, 0, 1660, 0,
	0, 0, 0, 0, 0, 0, 1706, 0, 1681, 1657,
	1658, 0, 1690, 1691, 1692, 1700, 1701, 1702, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1693, 1688, 1659, 1698, 0, 0, 0, 0, 1660, 0,
	0, 0, 1679, 0, 0, 0, 1706, 0, 0, 0,
	1676, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1659, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1679, 0, 0, 0, 0, 0, 1696, 0,
	1676, 0, 1671, 1672, 1678, 1699, 1677, 1673, 0, 1670,
	1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0, 0,
	0, 0, 2938, 0, 0, 0, 0, 0, 0, 0,
	0, 1682, 1683, 1684, 1685, 0, 0, 0, 1696, 0,
	0, 1665, 1671, 1672, 1678, 1699, 1677, 1673, 0, 1670,
	1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0, 0,
	0, 0, 2937, 0, 0, 0, 0, 0, 0, 0,
	0, 1682, 1683, 1684, 1685, 0, 1697, 0, 0, 1707,
	0, 1665, 0, 0, 0, 1687, 1689, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 0, 1704, 0, 0, 0, 0, 0, 0,
	1674, 1675, 0, 0, 0, 0, 1697, 0, 0, 1707,
	0, 0, 0, 0, 0, 1687, 1689, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1703, 1680, 1704, 0, 0, 0, 0, 0, 0,
	1674, 1675, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1695, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 1680, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1694,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1681, 1657, 1658,
	0, 1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1686, 0, 1693,
	1688, 0, 1698, 0, 0, 0, 0, 1660, 0, 0,
	0, 0, 0, 0, 0, 1706, 0, 1681, 1657, 1658,
	0, 1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1693,
	1688, 1659, 1698, 0, 0, 0, 0, 1660, 0, 0,
	0, 1679, 0, 0, 0, 1706, 0, 0, 0, 1676,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1659, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1679, 0, 0, 0, 0, 0, 1696, 0, 1676,
	0, 1671, 1672, 1678, 1699, 1677, 1673, 0, 1670, 1668,
	1669, 1661, 1662, 1663, 1664, 1666, 1667, 0, 0, 0,
	0, 2936, 0, 0, 0, 0, 0, 0, 0, 0,
	1682, 1683, 1684, 1685, 0, 0, 0, 1696, 0, 0,
	1665, 1671, 1672, 1678, 1699, 1677, 1673, 0, 1670, 1668,
	1669, 1661, 1662, 1663, 1664, 1666, 1667, 0, 0, 0,
	0, 2935, 0, 0, 0, 0, 0, 0, 0, 0,
	1682, 1683, 1684, 1685, 0, 1697, 0, 0, 1707, 0,
	1665, 4268, 0, 0, 1687, 1689, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 0, 1704, 0, 0, 0, 0, 0, 0, 1674,
	1675, 0, 0, 0, 0, 1697, 0, 0, 1707, 0,
	0, 0, 0, 0, 1687, 1689, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1703, 1680, 1704, 0, 0, 0, 0, 0, 0, 1674,
	1675, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1695, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 1680, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1705, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1694, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4267, 0, 0, 0, 0, 0, 1681, 1657, 1658, 0,
	1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1686, 0, 1693, 1688,
	0, 1698, 0, 0, 2873, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 1681, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 1698, 0, 0, 0, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 0, 1676, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2874, 0, 1696, 0, 0, 0,
	1671, 1672, 1678, 1699, 1677, 1673, 0, 1670, 1668, 1669,
	1661, 1662, 1663, 1664, 1666, 1667, 0, 0, 2902, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	1683, 1684, 1685, 0, 0, 0, 1696, 0, 0, 1665,
	1671, 1672, 1678, 1699, 1677, 1673, 0, 1670, 1668, 1669,
	1661, 1662, 1663, 1664, 1666, 1667, 0, 1657, 1658, 0,
	1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 1697, 0, 0, 1707, 1693, 1688,
	0, 0, 0, 1687, 1689, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 1703,
	0, 1704, 0, 0, 0, 0, 0, 0, 1674, 1675,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 0, 0, 0, 0, 1695, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 0, 1676, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	1683, 1684, 1685, 0, 0, 0, 0, 0, 0, 1665,
	0, 3022, 0, 2474, 3021, 0, 0, 0, 0, 0,
	1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1693, 1688, 0, 1697, 1686, 2473, 1707, 0, 1660,
	0, 0, 0, 1687, 1689, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 1681, 0, 0, 0, 1703,
	0, 1704, 0, 0, 0, 0, 0, 0, 1674, 1675,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 1679, 0, 0, 1695, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 0, 0,
	0, 0, 1682, 1683, 1684, 1685, 0, 0, 0, 0,
	0, 0, 1665, 0, 0, 1696, 0, 0, 0, 1671,
	1672, 1678, 1699, 1677, 1673, 0, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1697, 0, 0,
	1707, 0, 0, 0, 0, 1686, 1687, 1689, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 0, 1704, 1681, 0, 0, 0, 0,
	0, 1674, 1675, 0, 0, 0, 0, 1657, 1658, 0,
	1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0, 1695,
	1698, 0, 0, 0, 0, 0, 0, 0, 1693, 1688,
	0, 0, 0, 1680, 0, 0, 1660, 0, 0, 0,
	0, 0, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1659, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	1679, 0, 0, 0, 0, 0, 0, 0, 1676, 0,
	1694, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1696, 0, 0, 0, 1671,
	1672, 1678, 1699, 1677, 1673, 0, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1686, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1682,
	1683, 1684, 1685, 0, 0, 0, 0, 0, 1681, 1665,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702, 0,
	0, 0, 0, 1698, 0, 0, 0, 0, 0, 0,
	0, 1693, 1688, 0, 1697, 0, 0, 1707, 0, 1660,
	0, 0, 0, 1687, 1689, 0, 0, 1706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1703,
	0, 1704, 0, 0, 0, 0, 0, 0, 1674, 1675,
	0, 0, 0, 1659, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1679, 0, 0, 1695, 0, 0, 0,
	0, 1676, 0, 0, 0, 0, 0, 0, 0, 0,
	1680, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1696, 0,
	0, 0, 1671, 1672, 1678, 1699, 1677, 1673, 0, 1670,
	1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1694, 974, 0,
	0, 0, 1682, 1683, 1684, 1685, 0, 0, 0, 0,
	0, 0, 1665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1657, 1658, 0, 1690, 1691, 1692, 1700,
	1701, 1702, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1693, 1688, 0, 1697, 0, 0,
	1707, 0, 1660, 0, 0, 1686, 1687, 1689, 0, 0,
	1706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1703, 0, 1704, 1681, 0, 0, 0, 0,
	0, 1674, 1675, 0, 0, 0, 1659, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1679, 0, 0, 1695,
	1698, 0, 0, 0, 1676, 0, 0, 0, 0, 0,
	0, 0, 0, 1680, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1705, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1694, 0, 0, 0, 0, 1682, 1683, 1684, 1685, 0,
	0, 0, 0, 0, 0, 1665, 0, 0, 0, 0,
	3028, 0, 0, 0, 0, 1696, 0, 0, 0, 1671,
	1672, 1678, 1699, 1677, 1673, 0, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 0, 0, 0, 0, 0,
	1697, 0, 0, 1707, 0, 0, 0, 0, 1686, 1687,
	1689, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1703, 0, 1704, 1681, 0,
	0, 0, 0, 0, 1674, 1675, 0, 0, 0, 0,
	0, 1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702,
	0, 0, 1695, 1698, 0, 0, 0, 0, 0, 0,
	0, 0, 1693, 1688, 0, 0, 1680, 3023, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3381, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 1705, 0, 0, 0, 0,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 1676, 1694, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1696, 0,
	0, 0, 1671, 1672, 1678, 1699, 1677, 1673, 0, 1670,
	1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1686, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1682, 1683, 1684, 1685, 0, 0, 0,
	0, 1681, 0, 1665, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1657, 1658, 0, 1690, 1691, 1692,
	1700, 1701, 1702, 0, 0, 0, 1698, 0, 0, 0,
	0, 0, 0, 0, 0, 1693, 1688, 0, 1697, 0,
	0, 1707, 0, 1660, 0, 0, 0, 1687, 1689, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 1704, 0, 0, 0, 0,
	0, 0, 1674, 1675, 0, 0, 0, 1659, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	1695, 0, 0, 0, 0, 1676, 0, 0, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1696, 0, 0, 0, 1671, 1672, 1678, 1699, 1677,
	1673, 0, 1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666,
	1667, 0, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 1682, 1683, 1684, 1685,
	0, 0, 0, 0, 0, 0, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1657, 1658, 0,
	1690, 1691, 1692, 1700, 1701, 1702, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1693, 1688,
	0, 1697, 0, 2939, 1707, 0, 1660, 0, 0, 1686,
	1687, 1689, 0, 0, 1706, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1703, 0, 1704, 1681,
	0, 0, 0, 0, 0, 1674, 1675, 0, 0, 0,
	1659, 1657, 1658, 0, 1690, 1691, 1692, 1700, 1701, 1702,
	1679, 0, 0, 1695, 1698, 0, 0, 0, 1676, 0,
	0, 0, 1693, 1688, 0, 0, 0, 1680, 0, 0,
	1660, 0, 0, 0, 0, 0, 0, 0, 1706, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1659, 0, 1705, 0, 0, 0,
	0, 0, 0, 0, 1679, 0, 0, 0, 0, 0,
	0, 0, 1676, 0, 1694, 0, 0, 0, 0, 1682,
	1683, 1684, 1685, 0, 0, 0, 0, 0, 0, 1665,
	0, 0, 0, 0, 2990, 0, 0, 0, 0, 1696,
	0, 0, 0, 1671, 1672, 1678, 1699, 1677, 1673, 0,
	1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0,
	0, 0, 0, 0, 1697, 0, 0, 1707, 0, 0,
	0, 0, 1686, 1687, 1689, 0, 0, 0, 0, 0,
	0, 0, 0, 1682, 1683, 1684, 1685, 0, 0, 1703,
	0, 1704, 1681, 1665, 0, 0, 0, 0, 1674, 1675,
	0, 0, 0, 0, 1657, 1658, 0, 1690, 1691, 1692,
	1700, 1701, 1702, 0, 0, 0, 1695, 1698, 0, 0,
	0, 0, 0, 0, 0, 0, 1688, 0, 1697, 0,
	1680, 1707, 0, 1660, 0, 0, 0, 1687, 1689, 0,
	0, 1706, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1703, 0, 1704, 0, 0, 0, 0,
	0, 0, 1674, 1675, 0, 0, 0, 1659, 0, 1705,
	0, 0, 0, 0, 0, 0, 0, 1679, 0, 0,
	1695, 0, 0, 0, 0, 1676, 0, 1694, 0, 0,
	0, 0, 0, 0, 1680, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1696, 0, 0, 0, 1671, 1672, 1678, 1699,
	1677, 1673, 0, 1670, 1668, 1669, 1661, 1662, 1663, 1664,
	1666, 1667, 0, 1705, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1686, 0, 0, 0, 0,
	0, 1694, 0, 0, 0, 0, 1682, 1683, 1684, 1685,
	0, 0, 0, 0, 0, 1681, 1665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1698, 0, 0, 0, 0, 0, 0, 0, 867, 0,
	910, 1697, 0, 0, 1707, 0, 0, 0, 0, 1686,
	1687, 1689, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 875, 0, 0, 1703, 0, 1704, 1681,
	0, 0, 0, 0, 0, 1674, 1675, 0, 0, 889,
	873, 872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1695, 1698, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1680, 874, 0,
	0, 0, 0, 877, 0, 0, 0, 0, 918, 0,
	0, 0, 0, 0, 0, 1696, 886, 887, 0, 1671,
	1672, 1678, 1699, 1677, 1673, 903, 1670, 1668, 1669, 1661,
	1662, 1663, 1664, 1666, 1667, 0, 1705, 0, 0, 0,
	0, 911, 879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 880, 0,
	0, 0, 0, 0, 0, 0, 0, 909, 0, 1696,
	0, 0, 0, 1671, 1672, 1678, 1699, 1677, 1673, 0,
	1670, 1668, 1669, 1661, 1662, 1663, 1664, 1666, 1667, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1686, 0, 0, 0, 0, 0, 0, 882,
	0, 0, 0, 0, 0, 0, 0, 871, 0, 0,
	0, 0, 1681, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 883, 884, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1698, 0, 0,
	0, 0, 0, 891, 890, 0, 0, 0, 0, 0,
	0, 885, 0, 0, 0, 900, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 915, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 912, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1696, 0, 0, 0, 1671, 1672, 1678, 1699,
	1677, 1673, 0, 1670, 1668, 1669, 1661, 1662, 1663, 1664,
	1666, 1667, 878, 0, 0, 917, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 876, 0, 0, 0,
	907, 908, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	905, 0, 0, 0, 0, 0, 0, 916, 901, 0,
	894, 892, 0, 897, 0, 0, 0, 0, 0, 898,
	0, 0, 869, 0, 913, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 870, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 899, 0, 0, 0, 0,
	896, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	914, 0, 0, 0, 0, 0, 0, 0, 902, 0,
	0, 0, 0, 0, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 904, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 906,
}
var sqlPact = [...]int{

	4946, -1000, -1000, -1000, -1000, 189, -1000, -1000, 188, 185,
	184, 183, 182, 179, 178, 176, 174, -1000, -1000, -1000,
	-1000, -1000, -1000, 167, -1000, -1000, 160, -1000, 158, 152,
	151, -1000, -1000, 150, -1000, 148, -1000, -1000, -1000, -1000,
	147, 146, 145, 81745, 81228, 82255, 2176, 99736, 88403, 1968,
	72984, 99219, 72467, 98702, 98185, 2599, 143, -1000, 97668, 142,
	141, 139, -1000, 97151, -1000, 1976, -1000, 137, 4777, 59525,
	135, 134, 133, 2435, 132, -1000, 131, 130, -1000, 9649,
	1570, -1000, 129, 128, -1000, 7120, 4390, 86342, 126, 124,
	2160, 123, 120, 59007, 116, 114, 2099, 2812, -1000, -1000,
	1957, -1000, -1000, 113, 110, 109, 108, 107, 106, 105,
	99, 98, 96, 95, -1000, 91, 89, 88, 84, 83,
	80, 79, 76, -1000, 75, 74, 73, 67, 64, 63,
	62, 61, 60, 59, 56, 55, 54, -1000, 112036, 53,
	1903, 1627, 1625, 1622, 1620, 1615, 997, 49, 48, 47,
	46, 45, 43, 42, 41, 40, -1000, 39, 38, 37,
	36, 34, 33, 31, 27, 162, 26, 18, 11, 10,
	9, 8, 5, 2136, -1000, 1503, 1009, 27941, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 105856, 100246, 2, -61,
	0, -1000, 3206, 1023, 49162, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 299, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 515, 1924, 777, -1000, -1000, -1000, 96641,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2175, -55,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 775, -1000, 2174,
	315, 2122, -1000, -1000, -1000, -1000, -1000, 100246, -1000, 1048,
	-1000, -1000, 3643, 3642, 1988, 772, 87886, -1000, 1732, -1000,
	958, 29564, -1000, 1265, -1000, 29564, 292, -1000, -1000, -1000,
	-1000, -1000, -1000, 3641, 3639, 3637, 3635, -1000, -1000, 71950,
	21395, 71433, 70916, 96131, 20868, 80711, 80194, 95614, 66287, 1045,
	-1000, -1000, -1000, 1390, -1000, -1000, -1000, -1000, -1000, -1000,
	-29, 67322, 3414, 100246, -1000, 291, -1000, -1000, -1000, -1000,
	-1000, -1000, 42223, 830, 41670, 640, 41117, 639, -1000, -1000,
	-1000, 65760, -1000, 3632, 3629, 1116, 3628, 3136, 105346, 1778,
	3627, 1882, 1221, 3626, 3625, 3622, 3621, 3618, 3617, 1457,
	95097, 2852, 94580, 1697, 65233, 1044, 79677, 82255, 2571, 94063,
	1451, 1426, -1000, -1000, -1000, -1000, 2988, 2807, 2803, 55411,
	-1000, -1000, 3616, 3615, 3614, 3612, 3610, 104836, 1770, 3609,
	2405, 3607, 3605, 3602, 3601, 3598, 3596, 3595, -1000, 79160,
	1042, 78643, 78126, 3250, 93546, 77609, 93029, 64706, 40564, 938,
	-1000, -1000, -1000, 51244, 8348, 8157, 92512, 53351, 82255, 82255,
	-1000, -1000, -1000, -1000, -1000, 40011, 755, 39458, 875, -1000,
	-1000, 51776, 2788, -1000, -1000, -1000, -1000, 38905, 349, 38352,
	750, 100246, -1000, 2851, 1894, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2144,
	1593, 3460, 2644, 64179, 1963, 1490, 3191, 2986, 2982, 1494,
	3593, 3592, 2473, 2981, 2980, 2978, 2973, 2972, 1495, 2490,
	295, 27388, 2842, 1703, 37799, 1474, 1546, 2967, 2935, 3469,
	1927, 1935, 1955, 70399, 3591, 3590, 3157, 2922, 2913, 2787,
	-1000, -1000, -1000, -1000, 1482, -1000, -1000, -1000, -1000, -1000,
	73494, -1000, -1000, 1668, -1000, -1000, 1668, -1000, -1000, -1000,
	-1000, -1000, 1381, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1503, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2233, -1000, 1973, -1000, -1000,
	2453, 3183, 3183, 3183, 3230, 473, 466, -1000, 162, -1000,
	-1000, 111660, -1000, -1000, 42764, 42764, 42764, 42764, 42764, 42764,
	42764, 2045, -1000, 771, -1000, -1000, 842, -1000, 770, 635,
	-1000, -1000, -1000, -1000, -1000, -1000, 764, -1000, -1000, -1000,
	-1000, -1000, -1000, 3414, -1000, 24082, -1000, -1000, -1000, 462,
	762, 42764, -1000, -1000, 3479, 3478, 1002, -1000, 285, 969,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2846, 761, 759, -1000, 758, 756, 754, 748,
	747, -1000, -1000, -1000, 743, 742, 740, 739, 738, 736,
	732, 731, -1000, 1954, -1000, -1000, -1000, -1000, -1000, -1000,
	679, 677, 677, 677, -1000, 1036, -1000, -1000, -1000, 303,
	675, 296, 674, 673, 672, -1000, 727, 724, 722, 713,
	712, 711, 710, 708, 707, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1034, -1000, -1000, -1000, -1000, -30, 100246, -1000,
	515, -30, -1000, -1000, 704, -1000, 31740, 31740, 31740, -1000,
	-1000, 2167, 42764, -1000, 2298, -1000, -24, -24, 945, 50194,
	-1000, 48112, 945, 329, 849, 54893, -1000, 2786, -1000, -1000,
	703, 280, -1000, -1000, -1000, -1000, 21920, 2785, 100246, 100246,
	82255, 82255, 82255, 3082, 42764, -1000, -1000, 63652, 100246, 82765,
	3354, 60035, 63137, 100246, 2845, -1000, 3160, -1000, -1000, 100246,
	-1000, 42764, -1000, 3353, 1595, 67837, 3281, -41, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2357, 2522, 1178, 2192, -1000,
	3093, 1335, -1000, 29564, 3124, -1000, -1000, -1000, 270, 21920,
	-1000, -1000, -1000, -1000, -1000, 2054, 3056, 1354, -1000, 2191,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1744,
	3055, -1000, 2145, 3054, 1695, -1000, -1000, 2368, -1000, -1000,
	3154, -1000, -1000, 1802, 3053, -21, -1000, -1000, 2448, -1000,
	-1000, 1962, -1000, -1000, 1003, 3052, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 77092, 52826, 51776, 67322, -35,
	-1000, -1000, -1000, -1000, -49, -1000, 20341, 111660, -1000, -1000,
	-1000, -1000, 1798, 111660, 907, -1000, -1000, 3051, -1000, 111660,
	903, -1000, -1000, 3049, -1000, 2844, -1000, -1000, -1000, -1000,
	3588, -1000, 3587, 2271, 3586, 3585, 3582, -1000, 1720, 1939,
	3578, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 76582, 2166,
	-1000, -1000, 75548, -1000, 2269, 3277, -1000, -1000, -1000, 76065,
	1040, -1000, 1003, 2266, -1000, 85825, 990, -1000, 3572, 3244,
	2602, 1003, 2265, -1000, -1000, -1000, -1000, -1000, 56953, -1000,
	56953, -1000, 56953, -1000, 1562, -1000, 104326, -24, -24, 3414,
	-1000, -1000, -1000, -1000, -1000, 3047, 3565, 3563, 3561, -1000,
	100246, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 203, 3045,
	-1000, -1000, 85315, 203, 3041, -1000, 203, 3036, -1000, 84805,
	-1000, -1000, 2234, 3035, -1000, 211, 3033, -1000, -1000, 209,
	3032, -1000, -1000, -68, 3028, -1000, -1000, 111660, -1000, -1000,
	-1000, -65, -1000, -1000, -1000, 1023, -1000, 50712, -1000, 50712,
	87369, 66812, 972, 751, 58489, 111660, -1000, -1000, -1000, -1000,
	111660, -1000, -1000, -1000, -200, -1000, -1000, 66812, 51776, 111660,
	-1000, -1000, -1000, -1000, 111660, -1000, -1000, -1000, 66812, 75548,
	-1000, 91995, 75038, -1000, -1000, 1456, 2443, -1000, -1000, -1000,
	66812, 1295, 66812, 66812, 66812, -1000, 91478, -1000, -1000, 1975,
	1484, 3163, 1959, 82255, -1000, 2046, -1000, -1000, -1000, 3184,
	-1000, -1000, 2843, -1000, 62622, 84295, -1000, 83785, -1000, 83275,
	-1000, 82255, -1000, 82255, -1000, 3557, 3554, 3553, 3552, -1000,
	3549, 3173, -1000, 111660, 3172, -1000, 3548, 3267, 2842, 111660,
	-1000, 3012, 1617, 1608, 100246, -1000, -1000, 100246, -1000, 100246,
	-1000, -1000, -1000, 1504, -1000, -1000, 2354, -1000, -1000, -1000,
	-1000, 82255, -1000, -1000, -1000, -1000, -1000, -1000, 2841, -1000,
	1702, -1000, 1925, -1000, 1450, -1000, -1000, 237, -1000, -1000,
	-41, -1000, 103816, -1000, 2453, -1000, 100246, -1000, 2509, 2804,
	2817, 1522, 2172, 2586, -1000, 37246, 2468, 45469, 2188, 162,
	-1000, -1000, 162, 162, 29023, -1000, -1000, 60035, 60035, 21920,
	1411, 42764, 42764, 42764, 42764, 42764, 42764, 42764, 42764, 42764,
	42764, 42764, 42764, 42764, 42764, 42764, 42764, 42764, 42764, 42764,
	42764, 42764, 42764, 42764, 42764, 42764, 42764, 42764, 42764, 42764,
	42764, 42764, 42764, 42764, 42764, 42764, 2206, 42764, 1380, 42764,
	42764, 42764, 42764, 2049, -1000, -1000, 1888, 559, 2026, -1000,
	3404, 3404, 3404, 1258, 1258, 111833, 111833, 608, 3547, 842,
	-1000, 42764, -1000, 115, 42764, 22447, -1000, 466, 7694, 2343,
	-1000, 465, 23000, -1000, -1000, -1000, 24082, 635, 36693, 42764,
	1030, 111660, -1000, -1000, 1628, 3426, 19816, 2862, 2681, 697,
	835, 834, 26835, 26282, 25729, 25176, 668, 42764, 42764, 42764,
	42764, 42764, 42764, 42764, 42764, -1000, -1000, 3456, -1000, 3426,
	-1000, -1000, -1000, -1000, 3426, 1409, 1387, 3426, -1000, 3426,
	3426, 6131, 6131, 36152, 35599, 35046, 46010, 34493, 42764, 24623,
	33940, 33387, -1000, 100246, -30, 3352, 42764, 304, -1000, 110429,
	-1000, 304, 304, 692, -66, 111660, 2577, 2577, 49678, 2168,
	2073, 2073, 2073, -1000, 945, 15587, 945, 90453, 2088, 945,
	945, 269, 289, 460, 47596, 2298, 90453, 814, 691, -2,
	-10, -15, -1000, -1000, -16, -18, -1000, -1000, 82255, 685,
	22447, 21920, 259, 1481, -74, 2528, 2520, 2508, -1000, 2502,
	1813, -76, 1365, 82255, 100246, -110, -1000, 6112, -82, -1000,
	1332, 257, 3426, -1000, -1000, -1000, -1000, -1000, 3546, 3545,
	-1000, 1008, 682, 681, 603, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 679, 677, 677, 677, -1000, 303, 675,
	296, 674, 673, 672, -1000, -1000, -1000, -1000, -1000, 2784,
	82255, 100246, -49, 82765, 82255, 926, -84, 1121, -41, -1000,
	-1000, -1000, 1668, -1000, 1911, -1000, -1000, -1000, -1000, -1000,
	-1000, 1463, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1002, -1000, -1000, -1000, -1000, -1000, -1000, 3424, 3422, -32,
	-1000, -1000, 21920, -1000, -42, 1811, 1777, -1000, 69882, 2291,
	3159, 3147, 1559, -1000, 1476, 1360, 3229, 73494, 3311, 3330,
	219, -1000, 2783, -1000, -1000, 957, 1691, 1772, 1358, 73494,
	2145, -1000, 60035, -1000, 2539, 3224, 1091, 1407, 1091, 1091,
	1392, -1000, 73494, 1758, 1356, 1355, -1000, 1349, 1343, -1000,
	-46, 3305, 3328, 32, -1000, 2782, 1342, -1000, -1000, 82255,
	21920, 1515, 1539, 1756, 1340, -34, -1000, 3301, 3295, 1297,
	1296, -1000, 4371, -1000, 66812, 1655, 3027, 2633, 882, 2630,
	-1000, -1000, 882, -35, 67322, 100246, 255, -1000, 115, 42764,
	42764, 115, 42764, 115, 3261, -1000, -1000, 3025, -1000, -1000,
	-1000, 3544, 1920, 2402, -1000, -1000, 667, 2262, 2780, 100246,
	2557, -37, 82255, -1000, 3022, 60552, 2145, 2255, -1000, -1000,
	74521, -1000, 3021, 515, 2254, -1000, 607, 3542, -1000, 103306,
	-1000, 3160, 1366, 3020, 1086, 767, 3350, -1000, 767, 57469,
	-1000, 100246, -1000, -1000, 100246, -1000, -1000, -1000, 3541, -1000,
	82255, -1000, -1000, 82255, 203, 3006, -1000, 82255, -1000, 82255,
	194, 2999, -1000, -1000, 100246, -1000, 82255, 82255, -1000, 100246,
	100246, 66812, 66812, 8112, 68862, -89, -90, 456, -1000, 90968,
	100246, 1075, 69372, 100246, 3114, 986, 51776, -1000, -95, -200,
	2626, 972, 972, 882, -1000, 882, -1000, 82255, 2814, -1000,
	-1000, 66812, 972, 972, 972, -1000, -1000, -1000, -1000, 3540,
	3537, 3536, -1000, -1000, -1000, 995, 82255, 100246, 82255, -1000,
	-1000, 100246, -1000, 100246, -1000, 995, 100246, 995, 100246, 995,
	100246, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 115, 42764,
	-1000, -1000, 3535, 1646, -1000, 2811, -1000, 2810, -1000, 22,
	-1000, -1000, -1000, -1000, -1000, 1844, 82255, 82255, 82255, 82255,
	100246, 82255, -1000, 73494, -1000, 2509, 2804, -1000, -1000, -1000,
	-1000, -1000, -1000, 1603, 2128, -1000, 2450, -1000, 1500, -1000,
	-1000, -1000, 111660, 46535, -1000, -1000, 111660, 1854, -1000, 44928,
	44387, -1000, -1000, 1623, 82255, 2541, -1000, 2541, -262, -1000,
	110076, 2441, 82255, -1000, -1000, -1000, -1000, -1000, 952, 1324,
	1324, 1246, 1246, 1246, 1246, 3329, 2322, 1235, 501, 9136,
	9136, 892, 892, 892, 892, 892, 9136, 547, 1258, 1258,
	547, 547, 547, 547, 547, 1258, 1258, 1258, 9136, 9136,
	9136, 111833, 8878, 7895, 42764, 42764, 1292, 1886, 559, 7206,
	42764, 7252, 7252, 7252, 7252, -1000, 2062, -1000, -1000, -1000,
	-1000, 2778, 665, 46010, 46010, -1000, -1000, -1000, -1000, 23541,
	42764, -1000, -1000, -1000, -1000, 32834, -1000, -1000, 109677, -307,
	455, -176, -39, -1000, 42764, 42764, 42764, 453, -1000, 253,
	42764, 100246, -1000, 14610, 811, -119, -1000, -98, 1410, -1000,
	42764, -1000, -1000, 1291, -1000, 1273, 1272, 1271, -1000, 657,
	451, -1000, 247, -1000, 2063, 656, 654, 42764, -1000, -1000,
	-1000, -1000, -1000, 109318, -1000, -1000, 109278, -1000, -1000, 108919,
	-1000, -1000, 108879, -1000, -1000, -1000, 111596, 14488, 13940, 13516,
	6897, 12833, 11257, -101, 450, -108, 439, 950, 948, 431,
	430, 425, -113, -1000, 3534, 3533, 3532, -1000, 3531, 3529,
	3527, -1000, 3526, 3525, 3524, -1000, 3523, 3522, 3521, -1000,
	3520, 3519, 3515, -1000, 3514, 3513, 3512, -1000, 3511, 3509,
	3507, -1000, 3506, 3504, 3503, -116, 424, -1000, 2771, -176,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 422, -1000,
	421, -1000, 111423, -176, 420, 5362, -1000, 46010, 46010, 46010,
	-1000, 418, -1000, 110256, -1000, 111250, 32293, 32293, 32293, 416,
	111012, 42764, -176, -122, -1000, -123, -1000, -1000, 562, -124,
	1018, 31740, 48644, 21920, -1000, 1018, 1018, 42764, -1000, 42764,
	2463, -1000, -1000, -1000, 2458, 1871, 2577, 49678, -1000, -1000,
	-1000, -1000, 90453, -1000, 3414, 2849, -1000, 90453, -1000, -1000,
	100246, 515, -1000, 90453, 90453, 21920, 945, -1000, 945, 90453,
	765, -1000, -1000, -1000, -1000, -1000, 412, 53866, -39, 202,
	21920, 1003, -1000, 2518, 2518, 2518, 2518, -1000, -1000, 100246,
	1266, -36, -177, 3377, -1000, 1967, -1000, 60035, -1000, 841,
	1197, 21920, -1000, -1000, -1000, 651, -1000, 3426, 3426, -1000,
	3426, 100246, 2766, 236, 169, 1014, 29564, -1000, 1668, -1000,
	-1000, 1525, -1000, 1933, -1000, 1262, -1000, -1000, -1000, -1000,
	29564, -1000, 2461, 100246, 100246, 82255, -1000, 100246, -1000, 2250,
	102796, 2247, 60035, 100246, -1000, -1000, 650, 649, 2433, 2432,
	1072, 100246, 100246, 2423, 102286, 101776, 100246, 1985, 42764, 60552,
	2195, 2023, 115, 115, -1000, -1000, 115, 648, 1320, 82255,
	82255, 100246, 82255, 1644, -1000, -1000, -1000, -1000, -1000, 74004,
	-1000, -1000, 3455, 3428, -1000, 1091, -1000, -1000, -1000, 1091,
	2145, 1599, 100246, 82255, 60552, 1754, 100246, 1984, 115, 115,
	-1000, -1000, 115, 646, 21920, 1932, -1000, 2889, 100246, 3477,
	100246, 100246, 100246, 60552, 3186, 101266, 100246, 100246, 60552, 4371,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 62112,
	1092, 1003, 1725, 1264, 73494, 51776, 982, 51776, 2614, -1000,
	-1000, 19291, -1000, 111660, 111660, -1000, 111660, -1000, 61587, 100246,
	-1000, 1038, 100246, 69372, 965, 2983, 56437, -49, 972, 66812,
	82255, -37, 100246, -1000, -1000, -1000, -1000, -1000, 2145, 2969,
	515, 2245, -1000, 66812, 3349, 2950, 644, 3502, 3501, -1000,
	2161, 2241, -1000, -1000, 100756, 2990, 874, 100246, 1018, 49678,
	1940, -1000, 54383, 1057, 100246, 1851, 136, -1000, -1000, -1000,
	7, 100246, -1000, 3499, -1000, -1000, 203, -1000, 82255, 203,
	203, -1000, 82255, 82255, 2234, -1000, 211, -1000, 209, -1000,
	-68, -1000, -1000, 8112, 8112, 972, -278, 643, -1000, 935,
	934, 52301, 66812, -129, -1000, -1000, -1000, -1000, -1000, 82255,
	100246, 753, 2597, 100246, -131, -1000, 200, 638, -1000, 2299,
	-1000, -1000, 986, 51776, 2758, -1000, -1000, 1011, -1000, 1403,
	972, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -25, -49, -49, -1000, 995, -1000, 995, -1000, 995,
	-1000, 111660, -1000, -1000, 1594, 1568, 100246, -1000, 21920, 100246,
	82255, 21920, 82255, 2801, 2793, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1099, -1000, 1854, 2127, -1000, 635, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2339, -1000,
	-38, 29023, 2202, -1000, -1000, 82255, -26, 42764, 42764, 5448,
	4494, 42764, 46010, 46010, -1000, 42764, 493, -1000, -1000, -1000,
	-1000, -1000, 2757, 631, 42764, 60035, 4972, 4855, -1000, 411,
	10466, 547, -1000, 42764, -1000, 408, 31199, -1000, 110666, -60,
	-132, -1000, 16125, -176, -142, -1000, -1000, 839, -1000, 2987,
	-1000, 42764, 110839, 2260, 1999, 1904, 1601, 3426, 3476, 18766,
	-1000, 57979, 1020, 2094, 108520, -1000, -1000, -1000, -1000, 60035,
	60035, 42764, 42764, -1000, 42764, 42764, 42764, -1000, -1000, -1000,
	3426, 953, -1000, -1000, -1000, 953, -1000, -1000, 1091, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1091, -1000, 42764, -1000, -1000, 2756,
	42764, -1000, 60035, 60035, 46010, 46010, 46010, 46010, 46010, 46010,
	46010, 46010, 46010, 46010, 46010, 46010, 46010, 46010, 46010, 46010,
	46010, 46010, 46010, 2422, 46010, 3402, 3402, 3402, -1000, 2748,
	2756, 42764, 42764, 60035, 407, 404, 402, -1000, 42764, -176,
	-1000, -1000, 8112, 629, -1000, 2328, -1000, 2679, -1000, 42764,
	-1000, -121, -1000, 2298, -1000, -1000, 2679, 2679, -153, 111660,
	49678, 49678, -1000, 626, 42764, 2440, -1000, -1000, 802, -309,
	-1000, 932, -1000, -1000, -1000, -1000, -1000, 515, -1000, -1000,
	-1000, 193, 90453, 90453, 800, -1000, -154, -1000, -1000, -155,
	-1000, 3348, 389, 21920, -1000, -1000, 3170, -1000, -1000, -1000,
	-1000, -1000, -1000, -49, 100246, 100246, 2113, 3475, -1000, 3427,
	820, 798, 192, 3426, 388, 386, 384, -49, 100246, 100246,
	100246, -1000, 2479, -1000, -41, -1000, -1000, -1000, 42764, -1000,
	-1000, 3158, 1263, 1257, -1000, -1000, 2939, -1000, 2237, -1000,
	1061, -1000, 1749, -1000, 42764, 42764, 615, 606, 3498, 1840,
	3497, 1073, 2936, 2234, 2934, 2234, -1000, -1000, 955, -1000,
	111660, -1000, 604, 602, -1000, -42, 1560, 1709, 1010, -1000,
	-1000, 42764, 42764, 89943, -1000, 426, 3154, -27, -1000, -1000,
	1662, 1254, -1000, -1000, -1000, -1000, 2145, 1660, 1240, -1000,
	-1000, -1000, 1005, -1000, -1000, 1004, -1000, -1000, 42764, -1000,
	-46, 1173, 3285, 2236, 82255, 1167, -1000, 1165, -1000, -1000,
	-1000, 3286, 2234, 2902, 1323, -1000, -1000, -1000, -1000, -1000,
	61077, -1000, 100246, 82255, 1597, 882, -1000, 2360, 882, 982,
	2755, -1000, 2550, 3496, 82255, 3494, 383, -156, -47, 60035,
	3346, -1000, 2162, 533, 82255, 951, -1000, 3414, -1000, -1000,
	-1000, -1000, 3262, 82255, 3343, 2900, 1003, 115, 82255, 3473,
	-1000, -1000, 82255, 2899, 2153, 2232, 2388, 874, 68352, -1000,
	1003, 2090, -58, -1000, 1851, 30646, 3152, -161, -1000, -1000,
	-1000, 1018, 57469, 49678, 42764, 3491, -162, -1000, -1000, 203,
	-1000, -1000, -1000, 194, -1000, -1000, -1000, -1000, -1000, -1000,
	88918, 88918, 66812, 66812, 66812, 972, 100246, 100246, 69372, -1000,
	587, 100246, 100246, 586, -1000, 100246, 100246, 3490, 66812, -48,
	584, -1000, 931, 929, 928, -1000, -1000, -1000, -1000, -1000,
	-1000, -200, 115, -1000, 2101, 82255, -1000, 18241, -1000, -1000,
	-1000, -1000, -1000, 995, -1000, -1000, 1994, 2184, 1994, 1831,
	1820, -1000, 2126, -1000, -1000, -1000, -1000, 2524, 3178, 21920,
	3260, 7252, 42764, 42764, 406, 536, 373, 7252, 42764, 42764,
	60035, 5656, -163, 42764, 42764, -1000, 42764, 791, 111660, 3472,
	42764, 382, 380, -1000, -1000, -1000, 3419, -1000, -1000, -1000,
	111660, 42764, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 378,
	-1000, 170, -1000, -1000, -1000, 106366, -1000, 42764, 375, 3222,
	-1000, 374, 371, 243, 5844, 108480, 108121, 108081, 370, -1000,
	-1000, 369, 356, 111660, 2748, 111660, -1000, -1000, 1182, 1182,
	1399, 1399, 1399, 1399, 3402, 601, 968, 1041, 454, 454,
	454, 878, 1094, 1094, 454, 454, 454, 2754, 2378, 583,
	5424, -1000, -1000, 111660, 111660, 352, -1000, -1000, -1000, -176,
	347, 8112, -1000, 2675, 3215, 111660, -1000, 49678, 2675, 2675,
	-1000, -1000, 1871, 100246, 111660, 49678, -1000, 2849, -1000, 16661,
	-1000, 21920, -1000, -1000, -1000, -1000, 3414, -1000, 53866, -1000,
	582, -1000, 163, 3170, -1000, 922, -1000, -49, -49, -1000,
	-1000, 786, 3489, 819, 21920, 346, -1000, -1000, -1000, -49,
	-49, -49, -1000, 3113, 111660, 100246, 100246, 100246, 2897, -1000,
	4324, -1000, 1072, 107722, -171, -1000, 110076, 42764, 100246, -1000,
	-1000, 1839, 2439, 1110, -1000, 3190, 100246, -1000, 100246, -1000,
	-1000, 100246, 100246, 82255, 100246, 2878, -174, 111660, -50, -1000,
	913, -1000, 1370, -1000, 17716, 100246, 82255, 100246, 82255, 2020,
	2824, -179, 21920, -1000, 3471, 3470, 2896, 3187, 3468, 100246,
	-1000, 100246, 82255, 3112, -1000, -1000, -1000, -1000, 1638, 1154,
	982, -51, 580, -1000, 912, -1000, -1000, 911, 982, -1000,
	66812, 51776, -1000, 515, -1000, 2572, -1000, 86852, 2152, 115,
	-1000, 3488, 89433, 579, -1000, 2100, -1000, 783, 60552, 2145,
	115, 82255, -1000, -1000, 515, 344, -56, -1000, 1066, 21920,
	82255, 2892, 2392, 874, 68352, -1000, 1366, 2586, -1000, -57,
	-1000, 612, 115, 2090, -1000, -58, 111660, -1000, 910, -1000,
	-1000, -1000, -180, -1000, -1000, 343, -1000, 3111, 3108, -1000,
	2684, 42764, 574, 570, 100246, 3106, -1000, -1000, -182, 2685,
	2685, 66812, 51776, 66812, 986, -1000, 2286, -1000, -1000, -1000,
	-1000, -1000, 21920, 1676, -1000, 569, 567, -1000, -1000, -1000,
	-1000, 3178, 7252, 7252, 42764, 42764, 42764, 7252, 5656, -185,
	-1000, 7252, 7252, -176, -1000, -1000, 110666, -1000, -1000, -1000,
	111660, -1000, 17191, 2000, -1000, 107682, -1000, 29023, -1000, -1000,
	42764, 42764, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	46010, 2747, 566, 60035, -1000, -1000, 341, 1016, 42764, 42764,
	2298, 1016, 1016, -1000, -187, -1000, -1000, -1000, 3414, 163,
	-1000, -1000, 3487, 21920, -1000, 66812, 817, -1000, 3486, -1000,
	-1000, -1000, -1000, -1000, -1000, 100246, -1000, 100246, -1000, 21920,
	100246, 2697, 2212, -1000, -1000, 2420, 565, 46010, 82255, 889,
	-1000, 3368, 2703, 1843, 42764, 2202, -188, -190, 2211, -1000,
	-1000, 2208, 42764, -1000, 60035, 564, 2234, 2234, -197, -198,
	-1000, -1000, 42764, 1152, 100246, 30105, -1000, 3485, 3154, -1000,
	-1000, -1000, -1000, 100246, 42764, 1138, -1000, -1000, -1000, 3464,
	2234, 21920, -1000, 2234, 2234, 3187, 1106, 100246, 82255, -1000,
	2304, 2304, 66812, 51776, -1000, -68, 982, 3341, 1984, 2625,
	-1000, -1000, -1000, -1000, 2416, -1000, -1000, 100246, 2413, 973,
	-1000, -199, -1000, 909, 879, 69372, 965, 992, -1000, -1000,
	-1000, -1000, 515, 3339, -1000, 3462, 561, 100246, 2143, 560,
	21920, -1000, 874, 68352, -1000, 2990, 1851, -1000, 2219, 100246,
	3146, -1000, 2586, 559, -1000, 972, 556, 555, 3185, 3185,
	-204, 42764, 42764, -205, 552, 972, -1000, -207, -1000, -1000,
	-1000, -1000, -85, -1000, 860, 822, -1000, -1000, 82255, 82255,
	42764, 42764, -1000, 7252, 7252, 7252, -1000, 327, -1000, -1000,
	2090, 3211, -1000, -107, 107323, 107283, 4755, 46010, 60035, -212,
	-1000, -1000, 100246, 111660, -176, -1000, -1000, -1000, 782, -1000,
	-1000, 3484, -1000, -1000, 1591, -1000, -1000, -1000, 100246, 2222,
	-1000, 1071, 42764, 5424, 549, 42764, -1000, 3338, -1000, 2589,
	2745, 2572, 548, -1000, -1000, -1000, -1000, -1000, 1064, 1895,
	-1000, -1000, 111660, 3187, 42764, -1000, -1000, 546, 534, 111660,
	522, 871, 2740, -1000, -1000, -1000, -1000, 111660, 521, 3285,
	-1000, -1000, -1000, -1000, 2234, 82255, -1000, -1000, -1000, -213,
	-1000, -1000, 1899, 115, 965, -1000, 2008, 2152, 520, -1000,
	-1000, 2134, 2471, -1000, 89433, 29564, 29564, 325, 3337, 992,
	-1000, 3400, -1000, 3335, 115, -1000, 42764, -1000, 82255, 42764,
	2142, 68352, -1000, 2388, -1000, -1000, -214, 100246, 1851, -1000,
	-1000, 66812, 66812, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1064, -215, -221, -1000, 66812, -1000,
	-1000, 2286, -1000, 100246, -1000, 100246, -1000, -1000, -223, -224,
	-1000, 2038, 42764, 29023, -1000, -1000, 4755, -229, -1000, -144,
	-1000, 3315, -1000, -1000, -1000, -1000, 2888, 2664, 106924, 2332,
	100246, 106884, -1000, 2730, -1000, -1000, 1984, 100246, 2572, 2660,
	82255, 1067, -231, 1994, 1994, 42764, 28482, 2007, 42764, -1000,
	-1000, 3187, -1000, 2709, 3413, -1000, 2134, 82255, 100246, -1000,
	3180, -1000, 3105, -1000, -1000, -1000, 2572, 115, -1000, -1000,
	115, -1000, -232, 1066, -234, 82255, -1000, 2392, 1018, -1000,
	-1000, -237, -242, 1843, 1064, 966, -244, -1000, -245, -247,
	-1000, -1000, 305, 43846, 43846, 43846, -176, -262, -1000, 100246,
	516, 2870, 981, -1000, 2137, 1807, 244, 1096, -1000, -1000,
	2703, -250, -1000, 979, 515, -1000, 42764, 1064, -253, -1000,
	1056, -255, -1000, 1055, -261, -1000, 2733, -1000, -263, 2234,
	977, 3257, -1000, -1000, -1000, -1000, 514, -268, -1000, -1000,
	2213, -1000, 1984, 973, -1000, 1064, 512, 1843, 510, -1000,
	3074, 972, 972, 2572, 1843, 1018, 507, 972, -1000, -1000,
	-1000, 2891, -1000, 47060, 2140, 1818, 109717, 2891, 2891, -1000,
	-1000, 100246, 3239, -1000, 2141, 2139, 1466, -1000, -1000, -1000,
	-1000, -1000, -1000, 1018, -1000, 3237, 2332, 111660, 2572, -1000,
	1994, 2622, -1000, 1994, 2731, -1000, 1977, -1000, -1000, -1000,
	2884, 3397, 100246, -1000, 100246, 1809, 1797, 3483, 965, 2134,
	1843, 42764, 2572, 42764, 1311, -1000, -1000, 1984, 2572, -1000,
	-1000, -1000, 1857, 3364, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 868, -1000, 3090, -1000, 1098, 2012, 2012, -1000,
	618, 2137, -1000, -1000, 480, -1000, 477, -1000, 1784, -1000,
	-1000, -271, -1000, -1000, 3463, -1000, 2134, -1000, 2572, -273,
	1984, -276, -1000, 1556, 966, 1984, 1803, -1000, -1000, 2077,
	43305, 42764, -1000, 3384, -1000, -1000, 2404, -1000, 42764, 2703,
	42764, 42764, 2098, 2230, -1000, -1000, 1984, 1064, 966, 1843,
	57469, 1018, 966, -1000, -1000, -1000, 111660, -1000, -1000, -1000,
	111660, -1000, -279, -287, 55927, -1000, -1000, -1000, 966, 1843,
	1018, 2572, -269, -1000, 1018, 1984, 1127, -278, 88918, 1018,
	2572, -1000, 1984, -1000, -1000, -1000, 476, -289, -1000, 1984,
	966, 42764, -1000, 966, 1018, -290, 1018, -1000, 1984, -1000,
	-1000,
}
var sqlPgo = [...]int{

	0, 4279, 4276, 4274, 4272, 4271, 4270, 4269, 4263, 4262,
	4259, 4251, 4248, 4247, 4245, 4244, 4242, 4241, 4239, 4238,
	4235, 4228, 4225, 4222, 4221, 4217, 4215, 4207, 4206, 4203,
	4202, 4199, 4198, 4189, 4188, 4186, 4185, 4184, 4183, 4182,
	4181, 4180, 4179, 4177, 4176, 4174, 4173, 4170, 4168, 4166,
	4164, 4163, 4162, 4161, 39, 4160, 4156, 4155, 4154, 4152,
	4151, 4149, 4148, 4144, 4140, 4138, 4137, 4133, 4132, 4131,
	4130, 4128, 4123, 44, 4122, 241, 4118, 4117, 4115, 4114,
	4113, 4109, 4108, 4107, 4105, 4104, 4102, 4101, 239, 4099,
	153, 4098, 4097, 4095, 4094, 4092, 237, 4090, 4088, 4083,
	4080, 246, 4078, 4077, 4076, 4075, 4074, 4073, 4072, 4071,
	4070, 69, 134, 4069, 4067, 35, 4060, 4059, 4057, 4056,
	4052, 4051, 4048, 4047, 4046, 4045, 218, 4042, 236, 4038,
	4037, 4035, 4034, 4032, 4031, 4027, 4026, 4025, 4024, 4020,
	4017, 4016, 4015, 4014, 4013, 4011, 4008, 4004, 4003, 4002,
	4001, 3999, 3998, 3995, 3994, 3993, 3991, 3989, 3988, 3986,
	3985, 3984, 245, 200, 3983, 3982, 234, 232, 3974, 3973,
	3972, 3970, 3968, 101, 4, 34, 3967, 3961, 61, 66,
	64, 82, 85, 80, 3960, 92, 3959, 102, 46, 3958,
	15, 3, 216, 210, 9231, 198, 3953, 3952, 3951, 209,
	166, 3948, 199, 3945, 3943, 3942, 3940, 79, 71, 143,
	157, 140, 139, 145, 3939, 3938, 86, 58, 41, 29,
	3937, 3935, 3934, 3932, 3050, 109, 3931, 229, 212, 138,
	3930, 3929, 3928, 1777, 3925, 33, 3920, 81, 60, 117,
	13, 104, 3919, 116, 28, 3916, 154, 50, 3915, 128,
	78, 65, 8444, 8334, 3913, 100, 45, 88, 427, 158,
	144, 172, 133, 135, 177, 186, 181, 142, 233, 3912,
	224, 3907, 3318, 57, 129, 3906, 3902, 3901, 54, 167,
	91, 3899, 3894, 51, 6, 14, 8, 150, 26, 120,
	18, 3893, 21, 3889, 3887, 3886, 3884, 42, 146, 3879,
	244, 3871, 62, 37, 23, 3870, 38, 190, 3869, 205,
	110, 3868, 3866, 225, 173, 170, 3865, 89, 194, 3864,
	3862, 3858, 3855, 3850, 111, 2, 108, 3848, 3841, 130,
	204, 168, 3836, 47, 3835, 3834, 141, 84, 121, 242,
	127, 192, 99, 196, 161, 195, 3833, 3832, 3831, 163,
	3830, 3827, 187, 132, 3826, 3824, 184, 249, 31, 55,
	203, 63, 165, 125, 3823, 174, 3822, 3819, 247, 160,
	183, 1, 17, 75, 105, 3817, 5, 197, 124, 269,
	96, 3816, 5052, 67, 1745, 3811, 3806, 131, 97, 53,
	118, 123, 227, 56, 3805, 3804, 442, 3797, 3796, 3794,
	3793, 152, 3792, 3791, 3790, 122, 119, 182, 3788, 76,
	73, 16, 103, 223, 231, 87, 188, 175, 220, 3787,
	147, 3785, 43, 98, 3782, 169, 213, 3781, 3780, 113,
	3779, 148, 230, 48, 156, 3777, 179, 3776, 3772, 3771,
	3769, 3768, 3767, 3766, 191, 201, 3763, 3761, 3760, 126,
	162, 3759, 226, 164, 151, 83, 32, 3757, 68, 655,
	3756, 149, 217, 49, 95, 3755, 1282, 40, 0, 11581,
	9964, 6856, 11162, 3754, 3606, 3753, 3752, 3745, 171, 114,
	3738, 3733, 3732, 90, 3730, 59, 3729, 3728, 52, 3727,
	19, 9, 10, 22, 20, 1491, 1356, 3726, 3725, 93,
	112, 106, 3724, 235, 189, 3723, 3721, 3718, 3716, 77,
	3715, 27, 3713, 24, 3710, 3709, 36, 12, 25, 3707,
	3706, 211, 3705, 180, 208, 3704, 136, 3700, 3303, 115,
	3697, 3696, 222, 72, 3695, 219, 3692, 3253, 3689, 3687,
	11, 3682, 3674, 207, 155, 185, 3672, 3669, 137, 3667,
	3666, 3662, 221, 3661, 3660, 30, 3659, 7, 3657, 3656,
	176, 3060, 3655, 3650, 74, 3646, 159,
}
var sqlR1 = [...]int{

	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 3, 3, 3, 3, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 5, 11, 11, 7, 7, 7, 8,
	8, 8, 8, 41, 41, 9, 9, 9, 9, 9,
	29, 10, 10, 6, 6, 6, 6, 6, 6, 6,
	6, 6, 16, 16, 30, 30, 17, 17, 32, 32,
	18, 18, 33, 33, 532, 532, 21, 35, 22, 36,
	15, 533, 533, 533, 533, 28, 23, 37, 25, 25,
	25, 25, 25, 176, 176, 176, 176, 20, 20, 31,
	31, 210, 210, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 209, 209, 209, 209,
	209, 209, 209, 209, 209, 209, 531, 531, 212, 212,
	211, 206, 206, 534, 534, 213, 213, 213, 215, 215,
	13, 13, 13, 13, 13, 13, 13, 13, 13, 433,
	433, 433, 464, 464, 464, 547, 547, 548, 548, 548,
	548, 548, 114, 114, 335, 335, 335, 43, 43, 43,
	43, 43, 526, 526, 178, 178, 178, 180, 180, 179,
	179, 179, 179, 64, 64, 539, 539, 540, 540, 538,
	541, 541, 541, 177, 177, 177, 110, 110, 110, 110,
	111, 111, 112, 112, 181, 181, 181, 183, 183, 182,
	182, 182, 182, 182, 182, 182, 182, 187, 97, 97,
	97, 97, 97, 97, 97, 97, 97, 92, 92, 466,
	466, 467, 467, 172, 172, 173, 173, 173, 173, 174,
	174, 175, 175, 175, 57, 184, 184, 186, 186, 185,
	185, 45, 45, 45, 45, 45, 45, 45, 46, 46,
	46, 46, 46, 47, 47, 47, 47, 47, 47, 48,
	48, 48, 48, 48, 48, 55, 55, 55, 55, 163,
	163, 58, 58, 58, 58, 58, 58, 58, 58, 58,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 549,
	549, 549, 549, 549, 549, 549, 549, 549, 549, 550,
	550, 551, 551, 552, 552, 553, 553, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 553, 60, 60, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 60, 60, 60, 60, 60, 60,
	60, 70, 70, 299, 299, 271, 271, 71, 71, 71,
	72, 72, 73, 73, 59, 59, 524, 524, 314, 314,
	424, 424, 75, 75, 334, 334, 76, 76, 76, 76,
	76, 76, 77, 77, 77, 77, 77, 77, 77, 78,
	78, 78, 78, 78, 78, 78, 78, 78, 78, 78,
	78, 78, 78, 85, 85, 85, 85, 85, 86, 86,
	86, 83, 83, 83, 80, 80, 80, 79, 79, 79,
	84, 84, 84, 523, 261, 261, 82, 82, 82, 264,
	264, 81, 81, 81, 315, 315, 87, 87, 87, 87,
	272, 88, 88, 88, 88, 88, 88, 88, 88, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	90, 90, 90, 90, 90, 90, 90, 90, 90, 90,
	91, 91, 91, 91, 91, 91, 91, 91, 91, 91,
	91, 91, 426, 426, 89, 89, 89, 394, 394, 93,
	93, 93, 350, 350, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 113, 113, 113, 113, 113,
	113, 528, 528, 307, 307, 227, 227, 227, 227, 103,
	103, 103, 103, 104, 104, 104, 105, 105, 168, 168,
	120, 120, 120, 120, 120, 119, 119, 119, 119, 119,
	119, 49, 49, 49, 50, 50, 51, 51, 52, 52,
	53, 53, 54, 54, 54, 54, 54, 122, 122, 544,
	544, 124, 121, 121, 121, 123, 123, 123, 123, 125,
	126, 126, 126, 126, 126, 126, 126, 126, 127, 127,
	458, 458, 323, 323, 456, 456, 475, 475, 457, 457,
	276, 276, 276, 276, 276, 277, 277, 277, 465, 465,
	465, 465, 465, 465, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 128, 128,
	128, 128, 128, 128, 128, 128, 128, 128, 169, 169,
	170, 171, 171, 171, 171, 148, 148, 148, 162, 162,
	162, 162, 162, 162, 162, 151, 151, 151, 138, 138,
	129, 129, 129, 129, 129, 129, 129, 133, 133, 133,
	133, 133, 133, 133, 133, 130, 130, 140, 140, 140,
	140, 140, 134, 134, 135, 135, 158, 158, 137, 137,
	139, 139, 139, 139, 139, 139, 139, 139, 139, 131,
	131, 131, 131, 142, 142, 142, 142, 357, 357, 357,
	141, 141, 141, 141, 141, 141, 141, 141, 141, 141,
	141, 161, 161, 161, 161, 161, 161, 542, 542, 543,
	543, 155, 155, 155, 155, 155, 155, 408, 408, 149,
	149, 149, 149, 154, 154, 154, 154, 157, 157, 157,
	157, 340, 340, 146, 146, 146, 147, 147, 147, 152,
	152, 153, 150, 150, 156, 156, 156, 156, 132, 132,
	132, 554, 554, 554, 159, 159, 145, 145, 160, 160,
	160, 160, 160, 160, 160, 160, 144, 144, 144, 143,
	143, 143, 143, 136, 525, 525, 521, 521, 521, 521,
	521, 521, 521, 521, 522, 522, 527, 527, 98, 98,
	98, 98, 98, 106, 106, 106, 106, 106, 99, 99,
	99, 99, 99, 101, 101, 100, 100, 100, 100, 65,
	65, 65, 65, 65, 14, 14, 14, 66, 66, 190,
	190, 190, 191, 191, 284, 284, 284, 284, 188, 188,
	189, 189, 67, 67, 555, 555, 555, 535, 535, 535,
	536, 536, 536, 536, 536, 536, 278, 278, 279, 279,
	374, 374, 374, 374, 374, 282, 282, 282, 283, 283,
	283, 283, 283, 283, 283, 283, 283, 285, 285, 214,
	214, 214, 288, 289, 289, 286, 286, 287, 287, 287,
	291, 291, 290, 293, 293, 292, 373, 484, 484, 486,
	486, 486, 486, 486, 486, 486, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 488, 556, 556, 482,
	482, 482, 483, 478, 478, 479, 479, 479, 479, 479,
	280, 280, 281, 281, 281, 281, 480, 481, 305, 305,
	411, 485, 485, 487, 487, 489, 557, 557, 557, 557,
	557, 557, 558, 558, 558, 372, 372, 371, 371, 297,
	297, 490, 490, 490, 490, 491, 491, 491, 491, 491,
	494, 493, 492, 492, 492, 492, 492, 69, 69, 69,
	337, 337, 336, 336, 338, 338, 338, 338, 338, 338,
	338, 338, 338, 338, 338, 338, 338, 338, 338, 165,
	165, 230, 230, 63, 63, 63, 12, 12, 12, 537,
	537, 537, 68, 68, 68, 68, 68, 68, 229, 229,
	229, 229, 229, 229, 229, 229, 229, 229, 229, 229,
	229, 229, 229, 229, 229, 229, 530, 530, 529, 529,
	231, 231, 560, 560, 74, 74, 74, 74, 74, 74,
	74, 427, 427, 428, 428, 62, 62, 62, 62, 62,
	358, 358, 356, 356, 355, 355, 304, 304, 410, 235,
	235, 207, 207, 207, 27, 26, 19, 19, 24, 24,
	39, 39, 39, 39, 42, 42, 38, 38, 38, 38,
	40, 40, 34, 34, 545, 545, 546, 546, 102, 102,
	107, 107, 107, 107, 107, 108, 108, 108, 108, 109,
	109, 109, 109, 118, 118, 164, 164, 164, 164, 164,
	164, 164, 44, 44, 44, 44, 56, 56, 56, 56,
	116, 562, 562, 562, 117, 117, 117, 561, 561, 228,
	228, 368, 368, 369, 369, 563, 563, 370, 370, 370,
	370, 370, 221, 220, 222, 222, 223, 223, 61, 61,
	61, 216, 216, 217, 217, 218, 218, 219, 219, 564,
	564, 96, 96, 96, 167, 167, 270, 270, 270, 365,
	365, 365, 298, 298, 241, 241, 367, 367, 367, 367,
	333, 333, 333, 166, 166, 312, 312, 325, 325, 326,
	326, 421, 421, 327, 115, 115, 194, 194, 192, 192,
	192, 192, 192, 192, 192, 192, 199, 199, 200, 200,
	201, 201, 202, 203, 203, 203, 203, 316, 316, 204,
	204, 204, 193, 193, 193, 195, 195, 195, 195, 195,
	195, 195, 198, 198, 198, 198, 205, 205, 205, 197,
	197, 501, 501, 501, 503, 503, 505, 505, 504, 504,
	500, 500, 502, 502, 559, 559, 339, 339, 339, 295,
	296, 294, 294, 302, 302, 300, 301, 301, 303, 303,
	409, 409, 409, 208, 208, 208, 330, 330, 330, 330,
	331, 331, 361, 361, 359, 359, 359, 359, 360, 360,
	362, 362, 362, 363, 363, 364, 364, 329, 329, 390,
	390, 196, 196, 196, 309, 309, 309, 310, 310, 380,
	380, 380, 380, 380, 380, 381, 381, 379, 379, 379,
	379, 412, 412, 412, 412, 412, 412, 412, 412, 412,
	413, 414, 414, 311, 311, 415, 366, 366, 519, 519,
	519, 520, 520, 407, 407, 416, 416, 416, 416, 416,
	416, 405, 405, 406, 406, 422, 423, 423, 343, 343,
	343, 343, 341, 341, 344, 344, 344, 344, 342, 342,
	417, 417, 417, 417, 332, 332, 418, 418, 418, 418,
	419, 375, 376, 376, 429, 429, 429, 429, 431, 308,
	308, 308, 308, 308, 477, 476, 476, 430, 430, 430,
	430, 430, 430, 430, 430, 430, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 446, 446,
	446, 446, 446, 446, 446, 432, 432, 432, 432, 432,
	436, 436, 436, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 437, 437, 442, 442, 443, 443,
	443, 438, 439, 444, 444, 444, 444, 565, 565, 448,
	448, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	434, 434, 434, 441, 441, 441, 352, 352, 352, 352,
	352, 352, 352, 352, 352, 352, 352, 352, 352, 351,
	351, 353, 353, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 382, 382, 382, 382, 382, 382, 382, 382, 382,
	382, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	383, 383, 383, 383, 383, 383, 383, 383, 383, 383,
	384, 384, 384, 384, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 385,
	385, 385, 385, 385, 385, 385, 385, 385, 385, 495,
	495, 495, 495, 495, 495, 495, 495, 386, 386, 498,
	498, 499, 499, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 496, 496, 496, 496,
	496, 496, 496, 496, 496, 496, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 497, 497, 497, 497, 497, 497, 497, 497,
	497, 497, 506, 506, 507, 507, 509, 509, 510, 510,
	511, 512, 512, 512, 513, 514, 514, 508, 508, 515,
	515, 515, 515, 516, 516, 517, 517, 517, 517, 517,
	518, 518, 518, 518, 518, 396, 396, 397, 397, 403,
	403, 403, 275, 275, 275, 275, 275, 275, 275, 275,
	275, 275, 275, 275, 275, 275, 275, 275, 232, 232,
	232, 232, 232, 321, 321, 319, 319, 319, 322, 322,
	320, 320, 318, 318, 317, 317, 393, 393, 391, 391,
	395, 395, 345, 345, 447, 447, 447, 447, 447, 447,
	447, 447, 346, 346, 346, 354, 347, 347, 348, 348,
	348, 348, 348, 387, 388, 349, 349, 349, 389, 389,
	398, 402, 402, 401, 400, 400, 399, 399, 377, 377,
	378, 378, 328, 328, 566, 566, 324, 324, 420, 420,
	420, 420, 274, 274, 313, 313, 273, 273, 265, 265,
	266, 266, 266, 266, 306, 306, 404, 404, 449, 449,
	450, 450, 451, 451, 452, 452, 453, 454, 455, 392,
	392, 251, 250, 238, 239, 249, 248, 247, 237, 240,
	244, 245, 246, 242, 243, 257, 256, 255, 262, 263,
	253, 254, 425, 236, 267, 267, 268, 268, 268, 269,
	269, 269, 269, 233, 233, 234, 234, 258, 258, 259,
	260, 260, 252, 252, 252, 224, 224, 224, 225, 225,
	226, 226, 463, 463, 460, 460, 460, 461, 461, 461,
	462, 462, 462, 462, 459, 459, 459, 459, 459, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 468, 468, 468,
	468, 468, 468, 468, 468, 468, 468, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 472,
	472, 472, 472, 472, 472, 472, 472, 472, 472, 469,
	469, 470, 470, 470, 470, 470, 470, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 470, 470, 470, 471,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 473, 473, 473,
	474, 474,
}
var sqlR2 = [...]int{

	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 1, 2, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 1, 3, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 3,
	6, 1, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 6, 4, 6, 6, 9, 6, 9,
	6, 5, 6, 5, 1, 1, 5, 5, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	6, 5, 6, 6, 4, 8, 3, 4, 10, 3,
	6, 4, 3, 1, 3, 3, 2, 1, 1, 3,
	1, 3, 2, 2, 0, 1, 1, 0, 2, 0,
	7, 10, 8, 6, 6, 6, 9, 4, 3, 2,
	2, 0, 1, 1, 1, 1, 3, 6, 4, 6,
	7, 9, 6, 2, 2, 3, 0, 8, 6, 8,
	7, 2, 0, 1, 2, 5, 0, 1, 3, 3,
	1, 1, 3, 12, 3, 1, 0, 1, 1, 2,
	3, 3, 0, 5, 7, 0, 5, 6, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 6, 4,
	9, 7, 12, 12, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 6, 2, 0, 1, 2, 3,
	1, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 6, 6, 6, 6, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	3, 3, 4, 3, 4, 7, 4, 4, 4, 3,
	5, 7, 3, 3, 4, 3, 3, 3, 3, 2,
	0, 1, 0, 1, 0, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 7, 3, 2, 0, 1, 3, 3, 1, 0,
	1, 2, 2, 1, 6, 5, 1, 2, 1, 3,
	2, 0, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 1,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 2, 6, 4, 7, 7, 7,
	2, 1, 1, 1, 3, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 2, 4, 3, 2, 2,
	1, 2, 1, 3, 3, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	1, 5, 3, 2, 6, 3, 3, 4, 4, 3,
	1, 3, 2, 3, 3, 1, 3, 1, 2, 1,
	1, 2, 2, 3, 1, 1, 1, 1, 1, 3,
	2, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 2,
	1, 3, 3, 3, 3, 2, 3, 3, 1, 1,
	1, 1, 1, 2, 2, 5, 7, 3, 3, 3,
	4, 4, 6, 5, 5, 5, 3, 4, 4, 3,
	4, 4, 3, 4, 4, 5, 3, 5, 5, 5,
	7, 3, 3, 3, 2, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 4,
	3, 4, 3, 3, 4, 4, 5, 0, 1, 1,
	3, 2, 4, 3, 3, 5, 3, 4, 3, 5,
	3, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 5, 4, 6, 4, 6, 4, 1, 0, 3,
	4, 4, 5, 7, 5, 3, 3, 3, 4, 4,
	5, 2, 0, 4, 2, 3, 4, 2, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 3, 3, 4,
	3, 1, 1, 1, 2, 3, 2, 3, 6, 6,
	7, 9, 7, 9, 3, 4, 10, 10, 3, 5,
	5, 5, 3, 5, 2, 0, 1, 1, 1, 1,
	3, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 11, 14, 1,
	2, 3, 0, 4, 0, 4, 5, 4, 3, 3,
	1, 3, 10, 13, 0, 2, 3, 1, 1, 0,
	1, 2, 2, 2, 2, 1, 1, 0, 1, 3,
	1, 1, 1, 1, 3, 3, 3, 0, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 8, 0, 1,
	1, 0, 2, 1, 0, 1, 0, 9, 9, 3,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 1, 2,
	8, 4, 2, 5, 5, 5, 2, 1, 3, 11,
	12, 8, 5, 3, 1, 5, 9, 7, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 2, 2, 4, 7, 3, 4, 6, 3, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 3, 6, 6, 5, 3,
	4, 1, 0, 1, 3, 17, 20, 16, 19, 4,
	2, 0, 1, 0, 1, 0, 1, 3, 3, 2,
	0, 1, 1, 0, 9, 6, 6, 8, 6, 8,
	6, 7, 8, 9, 6, 8, 6, 7, 8, 9,
	6, 8, 6, 8, 1, 0, 2, 0, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 3, 2, 3, 2, 2, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 0, 2,
	1, 1, 0, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 2, 3, 2, 2, 1, 2, 8, 11,
	3, 3, 0, 3, 0, 3, 0, 3, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 1, 1, 3, 3, 1, 2,
	4, 4, 2, 3, 5, 5, 1, 3, 1, 0,
	1, 2, 3, 2, 4, 2, 3, 0, 2, 0,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	2, 1, 8, 8, 8, 2, 4, 4, 4, 2,
	2, 2, 2, 3, 1, 3, 1, 2, 6, 7,
	1, 0, 1, 0, 1, 0, 1, 1, 0, 1,
	5, 1, 0, 1, 0, 3, 3, 5, 1, 3,
	3, 4, 5, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 2,
	0, 4, 2, 5, 3, 2, 0, 1, 3, 3,
	5, 1, 1, 1, 1, 1, 3, 2, 4, 4,
	0, 4, 4, 3, 4, 1, 5, 3, 4, 5,
	5, 1, 5, 1, 3, 2, 0, 3, 0, 2,
	3, 1, 3, 2, 0, 3, 5, 6, 4, 6,
	4, 3, 2, 1, 0, 5, 1, 0, 2, 2,
	2, 1, 1, 0, 1, 1, 1, 0, 4, 2,
	1, 2, 2, 4, 1, 3, 1, 2, 3, 2,
	2, 2, 1, 0, 2, 5, 7, 2, 1, 2,
	4, 3, 5, 0, 1, 3, 5, 1, 2, 1,
	1, 1, 1, 1, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 2,
	2, 2, 1, 2, 2, 2, 1, 2, 2, 2,
	1, 2, 2, 2, 1, 2, 2, 2, 1, 1,
	1, 4, 4, 6, 6, 1, 1, 1, 1, 1,
	3, 5, 0, 1, 1, 1, 1, 1, 2, 2,
	2, 2, 2, 1, 3, 0, 5, 4, 1, 2,
	1, 4, 1, 1, 2, 1, 1, 1, 1, 1,
	0, 1, 2, 5, 1, 4, 2, 5, 1, 4,
	3, 3, 0, 1, 2, 4, 1, 1, 1, 1,
	1, 1, 3, 3, 3, 3, 3, 3, 3, 1,
	0, 1, 4, 1, 3, 3, 3, 5, 2, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 3,
	5, 4, 6, 3, 5, 4, 6, 4, 6, 5,
	7, 3, 3, 3, 3, 3, 4, 3, 2, 4,
	2, 3, 3, 4, 3, 4, 3, 4, 5, 6,
	6, 7, 6, 7, 6, 7, 3, 4, 4, 1,
	3, 1, 3, 3, 2, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 5, 6, 6, 7,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 6,
	1, 1, 1, 1, 1, 1, 2, 1, 5, 5,
	6, 3, 1, 1, 1, 2, 2, 2, 4, 3,
	5, 6, 8, 6, 5, 4, 3, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 4, 3, 4, 3, 4, 3,
	4, 4, 3, 6, 5, 5, 5, 4, 4, 3,
	4, 3, 5, 0, 5, 0, 2, 0, 1, 3,
	3, 2, 2, 0, 6, 1, 0, 3, 0, 3,
	3, 3, 0, 1, 4, 2, 2, 2, 2, 2,
	3, 2, 2, 3, 0, 4, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 5, 7, 1,
	7, 5, 3, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 0,
	3, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}
var sqlChk = [...]int{

	-1000, -1, -2, 555, -90, -87, -57, -55, -93, -94,
	-76, -95, -89, -113, -118, -102, -114, -120, -164, -169,
	-170, -171, -3, -43, -45, -58, -75, -77, -88, -97,
	-96, -98, -103, -110, -106, -92, -49, -115, -119, -128,
	-165, -166, -167, 31, 30, 97, 78, 148, 123, 131,
	192, 365, 401, 412, 393, 382, -123, -124, 429, -44,
	-56, -117, -116, 71, 124, 388, -4, -12, 28, 44,
	-46, -47, -48, 60, -63, -60, -70, -64, -549, 99,
	-502, -78, -81, -109, -553, 136, 155, 210, -99, -100,
	348, -104, -105, 395, -107, -108, 397, 156, -51, -50,
	150, -192, -194, -121, -122, -168, -129, -130, -131, -132,
	-133, -134, -135, -158, -136, -137, -138, -139, -140, -141,
	-161, -142, -143, -144, -145, -150, -146, -147, -148, -149,
	-151, -152, -154, -155, -156, -157, -159, -160, 433, -153,
	488, 47, 447, 80, 140, 405, 21, -5, -6, -7,
	-8, -9, -10, -11, -14, -13, -59, -61, -62, -65,
	-66, -67, -74, -68, -69, -501, -79, -80, -83, -85,
	-86, -82, -84, 394, -195, -193, 552, 503, -16, -21,
	-22, -17, -18, -20, -23, -19, -24, -30, -35, -36,
	-32, -33, -31, -34, -37, -38, -39, -40, -41, -42,
	-26, -28, -29, -27, -15, -25, 522, 530, -198, -196,
	-197, -205, 421, 511, 463, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, -272, 2, -253, -258, -259,
	-260, -252, -224, -471, -474, 4, -468, -472, 161, 219,
	312, 21, 22, 23, 24, 25, 26, 28, 29, 40,
	41, 43, 44, 45, 46, 47, 51, 53, 57, 58,
	59, 60, 61, 62, 66, 71, 72, 77, 78, 79,
	80, 81, 82, 83, 89, 86, 87, 88, 91, 93,
	94, 95, 96, 97, 98, 100, 101, 102, 104, 105,
	113, 114, 115, 116, 118, 123, 124, 127, 122, 126,
	129, 130, 131, 134, 135, 136, 138, 139, 141, 142,
	143, 145, 146, 148, 149, 150, 153, 151, 470, 152,
	154, 155, 156, 157, 167, 168, 169, 174, 176, 180,
	181, 184, 185, 186, 187, 188, 189, 190, 191, 193,
	197, 199, 200, 201, 202, 203, 209, 210, 212, 213,
	214, 215, 220, 221, 225, 222, 231, 232, 236, 237,
	238, 240, 244, 245, 246, 247, 248, 249, 251, 253,
	252, 255, 258, 259, 262, 266, 267, 270, 271, 272,
	273, 275, 276, 279, 277, 280, 278, 282, 283, 284,
	285, 286, 287, 288, 289, 290, 291, 292, 293, 281,
	296, 294, 298, 299, 300, 310, 308, 304, 305, 301,
	306, 302, 303, 307, 314, 315, 318, 207, 320, 321,
	324, 342, 328, 329, 330, 333, 334, 337, 340, 341,
	343, 344, 345, 346, 347, 348, 349, 350, 352, 353,
	355, 356, 357, 359, 360, 361, 363, 365, 366, 368,
	370, 371, 372, 373, 374, 375, 376, 379, 378, 380,
	382, 388, 393, 390, 391, 392, 394, 395, 396, 397,
	399, 400, 401, 403, 404, 405, 406, 408, 410, 411,
	414, 415, 430, 431, 449, 412, 413, 416, 417, 418,
	419, 420, 424, 422, 423, 425, 426, 427, 429, 432,
	433, 435, 436, 437, 438, 439, 440, 443, 445, 446,
	447, 448, 450, 453, 454, 455, 456, 451, 462, 459,
	460, 464, 465, 466, 467, 468, 469, 471, 473, 481,
	482, 483, 485, 488, 489, 490, 491, 479, 493, 494,
	497, 498, 499, 502, 500, 501, 503, 505, 508, 509,
	510, 516, 515, 517, 523, 524, 526, 527, 528, 35,
	48, 49, 52, 54, 56, 67, 68, 69, 73, 119,
	120, 147, 158, 159, 170, 182, 183, 194, 196, 204,
	205, 206, 226, 227, 229, 234, 256, 317, 319, 335,
	339, 354, 358, 362, 364, 377, 407, 441, 452, 457,
	474, 475, 476, 477, 484, 486, 511, 512, 513, 518,
	525, -272, 2, -253, 326, -246, 2, -224, -224, 365,
	27, 2, 27, 353, 423, 465, 467, 2, -528, -307,
	2, 27, -227, -224, 99, 192, 421, -246, 2, -528,
	-307, 24, 2, -224, 2, -228, 2, 412, -224, 276,
	2, 555, 91, 267, 72, 407, 426, -126, 482, -125,
	474, 416, -127, -458, 2, 296, -224, 555, 555, 555,
	27, -236, -224, 463, 219, 115, 460, 555, 2, 463,
	345, 515, 422, 115, 374, 219, 490, 416, -537, 276,
	403, 195, 504, -526, 2, -521, 4, -472, -468, -266,
	-265, 463, 468, 115, -260, -252, 545, -259, 555, 555,
	555, 2, 237, 238, 373, 372, 426, 427, 555, 555,
	555, 414, 2, 26, 64, 90, 95, 121, 157, 177,
	180, 331, -550, 342, 371, 425, 462, 471, 485, -536,
	448, 66, 416, -535, -537, 276, 490, 134, -355, 115,
	267, 191, 498, 467, 465, 496, 127, 225, 501, 500,
	555, 555, 26, 64, 75, 95, 134, 157, 177, 180,
	-552, 342, 371, 410, 425, 462, 471, 485, 2, 515,
	276, 422, 463, 219, 115, 490, 416, -537, 414, 415,
	369, -90, 2, 552, 31, 30, 429, -187, 463, 230,
	2, -224, 555, 555, 2, 237, 238, 414, 415, 555,
	555, 178, -521, 2, 555, 555, 2, 237, 238, 414,
	415, 230, 2, 66, 418, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 2, -162, 426,
	448, 201, 45, 44, 72, 27, 370, 77, 346, 116,
	142, 491, 193, 219, 220, 245, 90, 91, -357, 43,
	238, 237, 415, -542, 414, -408, 464, 417, 423, 459,
	249, 412, 482, 99, 505, 404, 528, 374, 375, 151,
	4, 115, 296, 428, 474, 267, 411, 349, 82, 555,
	-559, 2, 463, -561, 2, 482, 482, 2, -561, 2,
	-561, 2, -561, 2, -562, 482, 525, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, -193, -195, -194, 555, 555, 555,
	555, 555, 555, 555, -162, 426, 2, 72, 27, -300,
	-302, 495, 228, 144, 332, -192, -194, 2, -501, -456,
	2, -382, -475, -384, 543, 544, 536, 461, 65, 311,
	529, -396, 121, 496, 326, -474, -385, -398, 147, 407,
	-322, 8, 9, 5, 6, 7, -233, -386, -392, 487,
	160, 316, -269, 556, 10, 552, -498, -194, -397, 36,
	196, 63, -460, -268, -234, -432, 229, -267, -252, -495,
	-496, 4, -468, -469, -461, -435, -443, -439, -440, -446,
	-224, -471, 75, 107, 108, 106, 111, 110, 269, 268,
	112, 109, 428, 504, 64, 35, 204, 205, 234, 317,
	206, 73, -497, 135, -470, 226, 227, 441, 49, 377,
	170, 120, 119, 319, 54, 52, 512, -444, 117, 474,
	475, 476, 477, 182, 183, 56, 158, 159, 339, 362,
	457, 484, 486, 194, 256, 42, 103, 179, 224, 208,
	233, 235, 239, 257, 260, 297, 309, 313, 336, 338,
	402, 434, -565, 513, 452, 67, 68, -503, 378, -504,
	-246, -503, 555, 555, 557, 555, -294, -295, -296, 2,
	27, 132, 552, 2, -412, 2, -413, -417, -194, 250,
	-416, 552, -414, 550, -253, 327, -499, 408, -495, -496,
	-233, -252, -268, 4, -468, -470, 554, -297, 552, 115,
	463, 76, 219, -350, 552, -224, 27, 326, 478, 557,
	-394, 552, 326, 178, 329, -224, 515, 2, 2, 430,
	2, 552, -126, 69, 482, 42, 426, -369, 2, -370,
	-220, -221, -222, -422, -223, 236, 368, 376, 531, 125,
	311, 528, -456, -544, 178, 535, 478, -456, -323, 554,
	2, 2, 2, 2, 2, -417, 204, -253, 2, -250,
	-459, 4, -468, -472, -469, -473, -471, 27, 30, 31,
	32, 34, 36, 37, 38, 39, 55, 63, 64, 70,
	74, 76, 85, 90, 99, 106, 107, 109, 108, 110,
	111, 112, 121, 125, 128, 132, 133, 137, 140, 144,
	160, 162, 175, 177, 178, 192, 195, 198, 211, 223,
	228, 230, 250, 254, 261, 268, 269, 311, 316, 322,
	326, 327, 331, 332, 351, 367, 381, 398, 421, 428,
	444, 458, 463, 472, 478, 480, 487, 495, 496, 504,
	506, 514, 519, 520, 521, 522, -474, 75, 2, -417,
	204, 2, -255, 204, -417, -258, 2, -237, -224, 2,
	-249, -459, 2, -273, 204, -253, -254, -258, -256, 2,
	-258, -262, 2, -224, -466, 204, 2, -463, 10, -462,
	5, 4, -468, -472, -469, 515, 230, 478, 557, -313,
	-265, -266, -455, 8, -306, -224, 554, -382, 2, -115,
	-101, 2, 175, -382, 204, 2, -115, 204, 2, -382,
	204, 2, -115, 204, 2, -539, 2, -466, 2, 2,
	485, 2, 95, 204, -224, 463, 114, 2, 392, -551,
	410, 489, 2, 2, 2, 2, 2, 2, 463, -242,
	2, -224, 175, -262, 204, -263, 2, -224, -225, 422,
	-560, 378, -466, 204, 2, 515, -256, 2, -256, 219,
	232, -237, 204, 2, 467, 465, 467, 465, 178, 2,
	230, 2, 230, 2, -418, 2, -419, -413, -253, 550,
	2, 2, 2, 2, 2, 204, -224, 463, 114, 2,
	248, 2, 2, 2, 2, 2, 2, 2, -315, 204,
	2, -253, 515, -315, 204, 2, -315, 204, 2, -356,
	2, 85, -237, 204, 2, -261, 204, 2, -256, -264,
	204, 2, -262, -467, 204, 2, -466, -382, 2, -115,
	2, -426, 2, -425, -462, 511, -90, 552, -90, 552,
	426, 552, -466, -253, -253, -382, 2, -115, -101, 2,
	-382, 2, -115, 2, -112, -111, -466, 552, 178, -382,
	2, -115, -101, 2, -382, 2, -115, 2, -187, 175,
	2, 115, 463, -162, 2, 175, 506, 2, 8, 2,
	211, -466, 417, 375, 167, 2, 430, 2, 431, 72,
	-357, 528, 72, 178, 2, 178, 2, -340, 2, 522,
	2, 2, -525, 2, 326, 178, 2, 178, 2, 178,
	2, 178, 2, 178, 2, 372, 427, 483, 238, 2,
	-115, 519, -101, -382, 519, 2, -543, 175, 415, -382,
	2, 481, 247, 152, 178, -340, 2, 178, 2, 178,
	2, 5, 2, 373, 449, 2, 236, 368, 449, 2,
	-253, -554, 2, 463, 515, 422, 2, 2, 86, 87,
	178, 2, 178, 2, 178, 528, 2, -332, -417, -368,
	-369, -368, 478, -300, -302, -162, 430, 2, -199, -330,
	-201, 175, -359, -360, -202, 261, 162, 322, -203, -339,
	27, 132, -339, -339, 58, 553, 553, 11, 12, 74,
	40, 543, 544, 545, 546, 173, 547, 548, 541, 542,
	540, 533, 534, 538, 242, 243, 92, 537, 535, 84,
	274, 409, 163, 164, 165, 166, 389, 217, 33, 218,
	14, 15, 16, 32, 331, 260, 529, 208, 434, 536,
	17, 18, 19, 233, 235, 313, 48, 211, -232, -275,
	-382, -382, -382, -382, -382, -382, -382, 338, 552, -328,
	-377, 550, -194, 552, 552, 552, -455, -194, -382, -396,
	553, -320, 552, -194, -396, -391, 552, 407, 550, 552,
	-399, -382, 5, 5, 5, 552, 554, -506, 523, 175,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 552,
	552, 552, 552, 552, 552, 364, -437, 552, -436, 552,
	-436, -436, 516, -434, 552, 530, 524, 552, -434, 552,
	552, 552, 552, 552, 552, 552, 552, 552, 552, 552,
	552, 552, 516, 557, -503, -297, 552, -324, -420, -382,
	545, -324, -324, 326, -317, -382, 103, -343, 239, 297,
	179, 257, 402, 224, -379, 556, -379, -407, 530, -194,
	-414, -252, -194, -416, 552, -412, -407, -91, -455, -75,
	-88, -96, -115, -128, -166, -167, 545, -253, 552, 178,
	552, 554, -459, 178, -306, -237, -253, -267, -268, -273,
	131, -317, -521, 490, 416, -306, -227, 37, -393, -429,
	-430, -477, 556, -476, -432, -442, -438, -441, 354, 358,
	-461, 52, 512, -444, 229, 4, -468, -470, 226, 227,
	441, 49, 377, 170, 120, 119, 319, 54, 474, 475,
	476, 477, 182, 183, 56, 513, 452, 67, 68, -521,
	490, 416, -306, 175, -356, -458, -317, 37, -369, 2,
	121, -463, -563, 557, 259, -277, 273, 310, 200, 327,
	526, 320, 125, -465, 5, 4, -392, -404, 121, 267,
	229, -449, -451, 8, -450, 9, -452, 543, 544, -457,
	-456, 105, 554, -459, -210, 390, 429, -209, 23, 28,
	136, 509, 153, -287, 221, 341, 345, 147, 445, 499,
	-532, -533, 413, 469, 470, 88, 320, 429, 390, 147,
	-336, -338, 37, 113, 300, 340, 59, 214, 278, 279,
	447, 518, 147, 429, 390, 341, -533, 96, 390, -533,
	-212, 445, 499, -532, -533, 413, 390, -211, -287, 147,
	556, 23, 390, 429, 341, -547, -548, 136, 28, 390,
	341, -529, -500, 522, 147, -417, 204, -540, -111, 251,
	5, 10, -111, -313, 557, 557, -459, 545, 415, 414,
	147, 147, 147, 147, 175, 2, 2, 311, 2, 2,
	2, 180, -535, -552, 2, 2, -253, 204, -299, 326,
	-524, -314, 463, -253, 311, 42, -255, 204, 2, -258,
	515, -529, 311, -257, 204, -253, 37, 552, 2, -356,
	2, 219, -500, 311, -418, -270, -253, -413, -270, 429,
	-246, 37, -379, -379, 147, 2, 2, 2, -224, -213,
	557, 62, 396, 147, -315, 204, -213, 147, -213, 147,
	-274, 204, -273, -213, 147, -213, 557, 147, -213, 557,
	147, 557, 147, 553, 557, -426, -426, -466, -175, 522,
	178, 99, 552, 552, -187, -423, 557, -422, -467, -112,
	-466, -466, -524, -237, 2, -253, 2, 463, 240, -466,
	-175, 211, -466, -466, -466, -458, 27, 431, 2, 372,
	427, 483, 87, 431, 2, -253, 463, 115, 219, 78,
	-527, 175, -522, 403, -521, -253, 115, -253, 115, -253,
	115, -253, -253, 2, 2, 2, 2, 2, 83, 83,
	2, 44, -543, 175, 2, 481, 2, 481, 2, -224,
	-224, -224, 448, 259, -253, 175, 463, 219, 463, 219,
	115, 463, -213, 557, -228, -199, -330, -458, -331, -330,
	-200, -199, -202, 175, 376, 500, 300, 432, 244, -360,
	-359, 27, -382, -364, 169, 299, -382, -362, -384, 543,
	544, -450, -452, -316, 320, -193, -193, -193, -303, -409,
	-382, 367, 219, -431, -429, -429, -251, -459, 474, -382,
	-382, -382, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, -382, -382, -382, -382, -382, -382, -382,
	-382, -382, -382, -382, 260, 208, 434, 48, 211, -382,
	478, -382, -382, -382, -382, 294, 311, 316, 487, 160,
	497, 132, 320, -566, 458, 39, -389, -194, -321, 552,
	-403, 34, 444, 27, -396, 552, 2, -377, -382, -378,
	-318, -317, -317, 553, 514, 27, 132, 545, 2, 553,
	557, 37, 553, -382, -318, -395, -391, -317, -402, -401,
	519, -351, -352, 527, 281, 118, 202, 280, -353, 420,
	-453, 8, -459, 545, -507, 168, 195, 552, 553, 2,
	553, 2, 553, -382, 2, 553, -382, 2, 553, -382,
	2, 553, -382, 2, 553, 2, -382, -382, -382, -382,
	-382, -382, -382, -317, 8, -453, -453, 474, 474, -453,
	-453, -453, -445, 354, 355, 356, 357, 262, 263, 264,
	265, 358, 359, 360, 361, 286, 287, 288, 289, 282,
	283, 284, 285, 290, 291, 292, 293, 187, 188, 189,
	190, 183, 184, 185, 186, -445, -345, 2, -447, -317,
	4, 527, 281, 118, 202, 280, 420, 5, -345, 2,
	-346, 2, -382, -317, -347, -383, -384, 543, 544, 536,
	-396, -348, 2, -382, -318, -382, 55, 254, 480, -349,
	-382, 178, -317, -317, 2, -317, 2, -504, 37, -317,
	-309, 557, 178, 37, 4, -309, -309, 552, 553, 557,
	-344, 199, 277, 272, -344, -412, -343, 239, -341, 336,
	-341, -341, -407, -238, 550, 558, -459, -407, -406, -405,
	37, -246, 333, -407, -407, 554, 553, -406, 551, -519,
	552, 555, 555, 555, 555, 555, -253, 552, -317, -459,
	554, 450, 553, 233, 233, 233, 233, 408, 553, 478,
	-523, -261, -264, 522, -90, 328, 553, 557, -308, 36,
	550, 554, -453, 2, 2, -448, 516, 552, 552, -352,
	552, 178, -523, -264, -307, -257, -544, 553, 482, -370,
	-276, 376, 443, 391, 424, 460, 8, 9, 8, 9,
	557, -459, 557, -545, 90, 478, 76, 416, -373, 204,
	76, -478, -240, 90, -479, -224, 70, 496, 367, 177,
	145, -545, 90, 367, -545, 90, 90, 429, 448, 478,
	58, -417, 40, 40, 27, -115, 255, 178, 528, 463,
	219, 416, 478, -417, -338, -429, 113, 278, 279, 58,
	-454, -449, 543, 544, -454, 58, -454, -454, -454, 522,
	-255, -417, 416, 478, 478, 478, 478, 557, 40, 40,
	27, -115, 255, 178, 478, -273, -238, 510, 41, 510,
	478, 41, 416, 478, 557, 41, 41, 478, 478, -530,
	-229, 102, 306, 271, 307, 94, 303, 93, 302, 100,
	304, 101, 305, 517, 314, 61, 301, -230, -231, 347,
	508, -466, 429, 390, 147, 211, -423, 211, -423, -265,
	-224, 554, -115, -382, -382, -115, -382, -115, 44, 147,
	2, -560, 248, 552, -280, 311, 178, -306, -424, 230,
	557, -314, 147, -464, -463, 112, 428, -337, -336, 311,
	-257, 204, 2, 147, -297, 311, 141, 552, 374, 2,
	-239, 204, -225, -224, -356, -216, 466, 147, -334, 506,
	-365, -115, 552, 121, 37, -365, -325, -326, -421, -327,
	-240, 552, -246, -224, 2, -253, -315, -213, 147, -315,
	-315, -213, 557, 147, -237, -256, -261, -262, -264, -466,
	-467, -90, -425, 553, 553, 553, -174, 330, -173, -224,
	5, -187, 506, -279, -374, -373, -482, -483, -478, 260,
	219, 496, 232, 161, -298, -241, -240, 114, -181, 522,
	-111, 553, -423, 211, -175, -175, -423, -423, -253, 175,
	-466, -175, -175, -175, 2, 2, 2, -340, -253, -237,
	-273, -253, -306, -306, -340, -237, -340, -237, -340, -237,
	-115, -382, 2, 426, 175, 175, 554, -340, 374, 115,
	463, 345, 219, -253, -273, -253, -273, -237, -253, -417,
	-331, -200, 327, 244, 432, -362, -363, -384, 407, 408,
	-363, 407, 408, 8, 9, 8, 9, -204, 436, 315,
	-315, 557, -207, 38, 128, 244, -253, 528, 143, -382,
	-382, 478, -566, 458, -389, 143, -382, 294, 316, 487,
	160, 497, 132, 320, 178, 552, -383, -383, 553, -319,
	-382, -382, 551, 560, 553, -302, 557, -300, -382, -317,
	-317, 553, 554, -317, -306, 551, 551, 557, 553, -400,
	-401, 137, -382, 478, 478, 478, 478, 552, 553, 554,
	-512, 337, 552, 552, -382, 553, 553, 553, 553, 37,
	557, 557, 557, 553, 557, 557, 557, 553, 553, 553,
	557, 553, 528, 528, 553, 553, 553, 553, 557, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 553, 557, 553, 178, 553, 553, -354,
	351, 553, 11, 12, 543, 544, 545, 546, 173, 547,
	548, 541, 542, 540, 533, 534, 535, 84, 274, 409,
	14, 15, 16, 233, 211, -383, -383, -383, 553, -387,
	-388, 178, 175, 37, -349, -349, -349, 553, 178, -317,
	553, 553, 552, -505, 276, 311, 553, -376, -375, 520,
	-420, -310, 2, -412, -248, -459, -376, -376, -317, -382,
	239, 239, -342, 506, 326, -344, -412, -406, -455, -381,
	-380, 176, 38, 128, 308, 207, -406, -246, -297, -406,
	-406, -459, -407, -407, -405, 553, -520, -455, 553, -311,
	-415, -499, -302, 554, -459, -184, -500, -163, 5, 316,
	-163, -163, -163, -306, 478, 478, 24, 352, -429, 550,
	551, 8, -459, 552, -453, -453, -453, -306, 178, 178,
	178, -335, 522, -456, -369, 494, 81, 376, 474, -456,
	-209, 390, -240, -240, -253, -262, 311, -373, 204, -215,
	311, -429, -247, -224, 552, 552, 244, 244, 506, -240,
	-247, 244, 204, -240, 204, -247, -247, -531, 376, 321,
	-382, -464, 266, 374, 312, -210, 390, 429, -115, -115,
	-115, 552, -544, 506, 131, -253, -273, -253, -262, -257,
	429, 390, 309, -267, -454, -454, -336, 429, 390, -262,
	-255, -464, 416, -237, -211, -115, -115, -115, 552, -238,
	-212, 390, 5, 204, -240, 5, -224, -240, -262, -464,
	-548, 23, -240, 204, -240, -262, -464, -229, -466, 316,
	502, -529, 416, 478, -417, -111, -178, 522, -111, -172,
	215, 545, -526, -224, 515, -224, -278, -281, -279, -240,
	-190, -191, 524, 522, 147, -271, -253, 550, -175, -466,
	-253, -262, -263, 147, -297, 311, -466, 37, 147, 552,
	2, 2, 326, 311, -239, 204, -217, 138, -564, 535,
	-237, -376, -310, -333, -367, 398, 326, -298, 511, -246,
	-333, -312, 557, 178, 535, 554, -298, 2, -213, -315,
	-213, -213, -273, -274, -213, -213, -213, -90, -90, -175,
	557, 552, 535, 535, 552, -466, -466, 553, 557, -253,
	-239, 219, 219, -245, -225, 553, 557, 554, 552, -183,
	330, -182, 139, 246, 231, 437, 438, 439, 440, 130,
	-181, -112, 178, -52, 522, 463, -175, 556, -340, -340,
	-340, 426, 426, -224, -249, -237, -253, -250, -273, 175,
	175, 500, -363, 327, 270, -409, -208, 318, -253, 556,
	-382, -382, 143, 143, -382, -383, -383, -382, 143, 178,
	552, -382, -393, 32, 32, 553, 557, -378, -382, 553,
	514, -302, -302, 553, 545, -459, 556, 553, -391, 140,
	-382, 472, 281, 202, 280, -353, 280, -353, -353, -453,
	5, -459, 545, -513, -243, 552, -224, 520, -301, 332,
	553, -431, -429, -382, -382, -382, -382, -382, -453, -434,
	-434, -449, -449, -382, -387, -382, -431, -429, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, -383, -383, -383,
	-383, -383, -383, -383, -383, -383, -383, 132, 311, 320,
	-383, -388, -387, -382, -382, -429, 553, 553, 553, -317,
	-90, 552, 276, -329, 195, -382, -423, 557, -329, -329,
	553, -412, -412, 552, -382, 239, 551, 557, 559, 535,
	-297, 554, -405, -406, 551, 553, 557, 553, 557, -366,
	37, 553, -459, -186, -185, 129, 51, -306, -306, 329,
	5, 8, 550, 551, 554, -453, 553, 553, 553, -306,
	-306, -306, 114, 300, -382, 478, 478, 147, 311, 508,
	-484, -479, 145, -382, -304, -410, -382, 552, 552, 2,
	-206, 136, 429, -546, 2, 506, 147, -213, 147, -213,
	526, 552, 552, 478, 416, 522, -317, -382, -176, 121,
	-458, -533, 556, -533, 556, 416, 478, 416, 478, 522,
	522, -317, 478, -433, 46, 25, 311, -256, 478, 478,
	-213, 147, 490, 429, -466, 316, -262, -257, 429, 390,
	-423, -180, 330, -179, 139, 400, 130, 246, -423, -178,
	178, 230, 2, -257, 2, 553, 553, 557, -485, 37,
	324, 324, 552, -253, -71, 522, -422, -455, 42, -255,
	37, 147, -529, -115, -257, -427, -428, 5, -253, 147,
	326, 311, -218, 253, -564, -463, -500, -302, -333, -324,
	312, 89, 553, -376, -326, -310, -382, 2, 553, -213,
	-213, -173, -174, -466, -466, -466, -175, -187, -187, -374,
	-282, 552, -239, -225, 552, -187, -241, 2, -467, 557,
	552, 535, 535, 535, -423, -115, 330, -253, 545, -340,
	-289, -288, 345, 320, -289, 407, 407, 327, 169, 249,
	-207, -238, -382, -382, 143, 32, 32, -382, -382, -393,
	553, -382, -382, -317, 551, 5, -382, 553, 553, 8,
	-382, 553, 554, -514, -224, -382, 553, 58, 553, 553,
	557, 557, 553, 553, 553, 553, 553, 553, 553, -388,
	178, 132, 320, 552, 553, 553, -90, -390, 198, 58,
	-412, -390, -390, -342, -306, -412, -380, -238, 550, -459,
	-455, -415, 552, 554, -185, 535, 551, 2, 550, -459,
	553, 114, -240, -240, -373, 147, -486, 90, -488, 74,
	161, 99, 311, 316, 496, 367, 70, 121, 381, -556,
	37, 532, 553, 553, 557, -207, -304, -306, 311, 455,
	121, 311, 121, 114, 490, 77, -240, -247, -306, -306,
	-253, -262, 154, 553, 557, 535, 2, 545, 545, -262,
	-257, -262, -255, 343, 154, 553, -238, 5, 5, 147,
	-235, 74, 5, -240, -240, -256, 114, 416, 478, -178,
	557, 552, 535, 535, -178, -467, -111, -297, -285, 222,
	-240, -483, -480, -481, 367, -487, -489, 161, 367, -115,
	2, -189, -188, -224, 5, 552, -280, 330, 551, -464,
	-337, -115, -257, -297, 553, 557, -358, 506, -238, -253,
	147, -219, 252, -564, -463, -216, -361, -359, 133, 552,
	326, -115, -302, 535, 553, 553, 114, 114, 213, 146,
	-304, 552, 552, -306, 114, 553, -182, -183, -466, -111,
	-466, -181, -53, -54, 219, 90, 350, -250, 463, 219,
	552, 552, -207, -382, -382, -382, 553, -302, -459, 545,
	-508, 345, 553, -409, -382, -382, -383, 178, 552, -393,
	553, -509, 521, -382, -317, -509, -509, 553, -455, 2,
	-466, 550, 2, -373, -247, -251, -244, -224, 161, 204,
	316, 244, 552, -383, -253, 552, 2, 29, -557, 125,
	223, -372, -558, 98, 456, 212, -410, -208, 553, 553,
	316, 316, -382, -429, 552, -213, -213, 553, 553, -382,
	478, -458, 97, -456, 2, -533, -237, -382, 478, 5,
	-213, -251, -213, -213, -235, 490, -262, -257, -179, -180,
	-466, -111, -178, 37, -286, -287, 211, -485, 244, -244,
	244, -555, 522, 553, 557, 535, 535, -278, -190, -72,
	-73, 479, -422, -297, 37, 5, 552, -224, 326, 552,
	-238, -564, -463, -217, -333, 312, -306, 90, -361, -389,
	-175, 552, 552, -283, 79, 91, 122, 203, 181, 220,
	448, 453, 27, -283, 553, -304, -304, 553, 552, -175,
	553, 557, 27, 552, 27, 552, -253, -273, -317, -317,
	553, -302, 58, 557, 553, 553, -383, -393, 553, -510,
	-511, -243, 551, 2, -488, -244, 311, 506, -382, -226,
	552, -382, 37, 223, 126, 209, -285, 552, -371, 506,
	381, -235, -304, 552, 552, 552, 535, 178, 552, -433,
	-213, -256, 553, -538, 379, -115, -190, 343, 552, -284,
	326, 114, 300, -188, -456, -456, 553, 37, -73, 9,
	37, -115, -304, -253, -304, 326, -463, -218, 553, -247,
	-333, -467, -467, -371, 553, 553, -467, -54, -306, -306,
	553, 553, -515, 374, 408, 197, -317, -303, 553, 557,
	37, 147, 199, 553, -490, 275, -224, 553, 126, 209,
	-286, -306, -285, 199, -253, -534, 506, 553, -291, -290,
	-288, -293, -292, -288, -317, -456, 97, 343, -317, -235,
	-541, 179, -540, 5, 10, -284, -253, -305, -411, -240,
	80, 114, -285, -115, -115, 553, -358, 553, -253, -219,
	-376, 553, 553, -372, -371, -191, 522, 553, 553, 553,
	553, -516, -517, 48, 493, 105, -382, -516, -516, -511,
	-513, 161, 522, -491, -494, -493, 326, 435, 179, 344,
	553, 455, 518, -557, 553, 522, -297, -382, -371, 553,
	557, 511, 553, 557, 511, 553, 178, 553, -213, -177,
	522, 44, 552, 553, 557, 366, 127, 136, -286, -555,
	-371, 552, -372, 552, 133, -175, -175, -285, -372, -376,
	-175, -518, 145, -517, 363, 174, 407, 363, 174, -518,
	-518, -244, 53, -493, 326, -494, 326, 500, 127, -376,
	53, -490, -285, -290, 211, -292, 178, 343, 150, -540,
	29, -306, -411, 408, 408, 2, -190, -284, -372, -304,
	-285, -304, 312, 500, -286, -285, 105, 195, 473, 300,
	32, 535, -492, 300, 396, 62, 429, -492, 535, -491,
	552, 552, 414, 553, 2, -284, -285, 553, -286, 553,
	429, -191, -286, 407, 334, -517, -382, 22, 316, 121,
	-382, -557, -317, -317, 330, -214, 62, 396, -286, -371,
	-191, -372, -325, -376, -191, 553, 553, -174, 552, -191,
	-372, -376, -285, -376, -376, -286, 478, -174, -376, -285,
	-286, 552, 553, -286, -191, -317, -191, -376, 553, -376,
	-286,
}
var sqlDef = [...]int{

	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 27, 28,
	29, 30, 479, 480, 482, 483, 484, 486, 487, 489,
	491, 493, 494, 495, 497, 498, 500, 501, 502, 503,
	504, 506, 508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 570, 572, 0, 1195,
	1197, 1199, 1201, 0, 710, 0, 32, 33, 0, -2,
	281, 283, 285, 0, 311, 313, 314, 316, 318, -2,
	0, 412, 413, 415, 417, -2, -2, 0, 878, 880,
	0, 559, 561, 0, 883, 885, 0, 0, 581, 582,
	0, 1284, -2, 575, 577, 579, 644, 646, 648, 650,
	652, 654, 656, 658, 660, 661, 663, 665, 667, 669,
	671, 673, 675, 677, 678, 680, 682, 684, 686, 688,
	690, 692, 694, 696, 698, 700, 702, 704, -2, 706,
	-2, -2, 0, -2, -2, -2, 1213, 36, 38, 40,
	42, 44, 46, 48, 50, 52, 363, 364, 366, 368,
	370, 372, 375, 377, 379, 1342, 419, 421, 423, 425,
	427, 429, 431, 0, -2, 1354, 0, 0, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 83, 84, 85,
	86, 87, 88, 89, 90, 66, 67, 69, 70, 71,
	75, 76, 77, 78, 81, 64, 0, 0, 1315, 1317,
	1319, 1321, -2, 0, 0, 5, 9, 11, 13, 15,
	17, 19, 21, 23, 25, 481, 485, 488, 490, 492,
	496, 499, 505, 507, 509, 466, 467, 470, 2000, 2017,
	2018, 2019, 2022, 2023, 2024, 2025, 2026, 2027, 2439, 2520,
	2521, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057,
	2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067,
	2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077,
	2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087,
	2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097,
	2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107,
	2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117,
	2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127,
	2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137,
	2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147,
	2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157,
	2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167,
	2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177,
	2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187,
	2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197,
	2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207,
	2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217,
	2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227,
	2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237,
	2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247,
	2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257,
	2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267,
	2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277,
	2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287,
	2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297,
	2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307,
	2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317,
	2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327,
	2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337,
	2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347,
	2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357,
	2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367,
	2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
	2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387,
	2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397,
	2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407,
	2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417,
	2418, 468, 469, 1040, 0, 533, 531, 1992, 534, 2255,
	536, 538, 406, 407, 408, 409, 410, 411, 0, 552,
	544, 551, 553, 555, 556, 557, 558, 528, 526, 0,
	552, 2052, 550, 1193, 1194, 1178, 1179, 2293, 1220, 0,
	193, 571, -2, -2, -2, 2404, -2, 603, -2, 610,
	2408, 2295, 615, 0, 617, -2, 620, 1196, 1198, 1200,
	708, 709, 2003, 0, 0, 0, 0, 34, 35, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1089, 1090, 1091, 0, 201, 203, -2, -2, -2, -2,
	0, 0, 2333, 2100, 1960, 2019, 1963, 1958, 282, 284,
	286, 287, 0, 0, 0, 0, 0, 0, 312, 315,
	317, -2, 319, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 342, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, 0, 0,
	0, 0, 935, 927, 928, 1144, 0, 0, 0, 0,
	414, 416, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 418, 0,
	0, 0, 0, -2, 0, 0, 0, 0, 0, 0,
	343, 471, 472, 0, 1343, 1343, 0, 0, 0, 0,
	256, 247, 879, 881, 882, 0, 0, 0, 0, 560,
	562, 0, 0, 229, 884, 886, 887, 0, 0, 0,
	0, 0, 258, 0, 0, 576, 578, 580, 645, 647,
	649, 651, 653, 655, 657, 659, 662, 664, 666, 668,
	670, 672, 674, 676, 679, 681, 683, 685, 687, 689,
	691, 693, 695, 697, 699, 701, 703, 705, 715, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, -2,
	-2, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	-2, 0, 799, 0, 0, 0, -2, -2, -2, 0,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 0,
	718, 720, 721, 722, 0, 779, 797, 798, 807, 707,
	0, 1080, 1344, 1222, 1203, 1217, 1222, 1205, 1206, 1207,
	1208, 1209, 1214, 1216, 1210, 1211, 1212, 37, 39, 41,
	43, 45, 47, 49, 51, 53, 365, 367, 369, 371,
	373, 376, 378, 380, -2, 1313, 1314, 420, 422, 424,
	426, 428, 430, 432, 563, 0, 565, 0, 719, -2,
	0, 1348, 1348, 1348, 0, 0, 1314, 1312, 0, 568,
	569, 624, 625, 1603, 0, 0, 0, 0, 0, 0,
	0, 1857, 1689, 0, 626, -2, 1720, 1722, 2379, 2404,
	1856, 1724, 1725, 1726, 1727, 1728, 0, 1730, 1731, 1732,
	1733, 1734, 1735, 0, 1737, 0, 1742, 1743, 1744, 0,
	2386, 1937, 2013, -2, 0, 0, 2392, 2009, 0, 1823,
	1760, -2, -2, 2036, 2015, 1535, 1536, 1537, 1538, 1539,
	-2, -2, 2422, 1764, 1765, 1766, 1767, 1768, 1769, 1770,
	1771, 1772, 1773, 1774, 0, 2367, 2387, 2388, 2393, 2395,
	2389, 2376, 1785, 2112, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1562, 1571, -2,
	-2, -2, -2, -2, -2, -2, 2380, 2381, 2398, 2401,
	2407, 2412, 2413, 2385, 2394, 2421, 2423, 2424, 2425, 2426,
	2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436,
	2437, 2438, 1563, -2, -2, -2, -2, 1331, 2266, 1334,
	1040, 1332, 1316, 1318, 0, 1320, 0, 0, 0, 1325,
	1351, 1349, 0, 1392, 1329, 1330, 1410, 1410, 1434, 0,
	1415, 0, 1434, 1343, 1460, 0, 1421, 2285, 1761, 1762,
	0, 2019, 2014, -2, -2, 2419, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 535, 537, 0, 0, 0,
	0, 0, 0, 0, 0, 1219, 1143, 573, 574, 0,
	598, 0, 602, 2375, -2, 0, 2304, -2, 606, 1223,
	1227, 1228, 1229, 1230, 1231, 0, 0, 0, 0, 1236,
	0, 0, 612, 0, 0, 599, 600, 618, 621, 0,
	711, 712, 713, 714, 63, 0, 2387, 1460, 65, 0,
	1982, 2044, 2045, 2046, 2047, 2048, 2420, 2440, 2441, 2442,
	2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452,
	2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462,
	2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472,
	2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482,
	2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492,
	2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502,
	2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512,
	2513, 2514, 2515, 2516, 2517, 2518, 2519, 2422, 68, 0,
	2387, 72, 0, 2387, 0, -2, 79, 0, 1988, 82,
	0, 1985, 91, 0, 2387, 0, 1957, -2, 0, 178,
	1996, 0, 906, 1998, -2, 2387, 1088, 259, 260, 2032,
	2033, 2040, 2041, 2042, 2043, 0, 0, 0, 0, 871,
	1954, 1959, 872, 1978, 873, 1964, 0, 288, 289, 290,
	291, 292, 0, 293, 2387, 295, 296, 0, 298, 299,
	2387, 301, 302, 0, 304, 0, 214, 215, 320, 321,
	0, 323, 0, 2387, 0, 0, 0, 329, -2, 344,
	0, 341, 332, 333, 335, 336, 337, 338, 0, 384,
	382, 1993, 0, 899, 2387, 0, 903, -2, 1999, 0,
	0, 1123, -2, 2387, 1085, 0, 1129, 1125, 0, -2,
	0, 1341, 2387, 1240, 931, 932, 933, 934, 0, 403,
	0, 1253, 0, 1255, 0, 1274, 1466, 1410, 1410, 0,
	345, 346, 347, 348, 349, 2387, 0, 0, 0, 354,
	0, 356, 357, 358, 359, 360, 361, 362, 167, 2387,
	437, 464, 0, 167, 2387, 440, 167, 2387, 443, 0,
	446, 1142, 167, 2387, 449, 167, 2387, 452, 454, 167,
	2387, 458, 459, 461, 2387, 463, 261, 1189, 1190, 1191,
	1192, 0, -2, 522, 2002, -2, 474, 0, 475, 0,
	-2, 0, 273, 0, 0, 888, 889, 890, 891, 892,
	895, 896, 897, 898, 1447, 232, 230, 0, 0, 1180,
	1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 0, 0,
	583, 0, 0, 716, 717, 0, 0, 727, 728, 729,
	0, 273, 2296, 2263, 2132, 736, 0, 739, 742, -2,
	0, 0, 0, 0, 746, 0, 751, 752, 753, 0,
	755, 757, 877, 759, 0, 0, 761, 0, 765, 0,
	768, 0, 770, 0, 772, -2, -2, -2, -2, 783,
	-2, 0, 786, 788, 0, 790, -2, 0, 799, 795,
	796, 0, 0, 0, 0, 815, 816, 0, 825, 0,
	828, 829, 830, 0, 832, 833, 0, 835, 836, 837,
	838, 0, 840, 841, -2, -2, 845, 847, 0, 854,
	0, 858, 0, 862, 0, 723, 724, 167, 1464, 1202,
	-2, 1204, 0, -2, 0, 564, 0, 567, 1371, 1299,
	1296, 0, 1368, 1369, 1300, 0, 0, 0, 1307, 0,
	1346, 1347, 0, 0, 0, 1286, 1287, 0, 0, 0,
	0, 1862, 1863, 1864, 1865, 1866, 1867, 1870, 1871, 1868,
	1869, 1872, 1873, 0, 0, 0, 0, 0, 1874, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 1876, 1877, 0, 0, 1879, 0, 1881, 0, 0,
	0, 0, 0, 0, 1668, 1670, 1945, 0, 0, 1878,
	1608, 1609, 1610, 1611, 1612, 1647, 1648, 0, 0, 1721,
	1942, 1941, 1723, 0, 1893, 0, 1736, -2, 0, 1857,
	1888, 0, 0, 1745, 1746, 1747, 0, 0, 1893, 0,
	0, 1936, 1757, 1758, 1600, 0, 0, 1825, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1549, 1548, 0, 1550, 0,
	1551, 1552, 1559, 1572, 0, 0, 0, 0, 1576, 0,
	0, 0, 0, 0, 0, 0, 1917, -2, 0, 0,
	0, 0, 1564, 0, 1333, 0, 0, 1396, 1946, 1950,
	1951, 1396, 1396, 0, 0, 1894, 1457, 1457, 0, 0,
	1453, 1453, 1453, 1451, 1434, 0, 1434, 1444, 0, 1434,
	1434, 0, -2, 1415, 0, 0, 1444, 0, 1428, 510,
	512, 514, 516, 517, 518, 520, 1461, 1462, 0, 0,
	0, 0, 2020, 0, 0, 0, 0, 0, 2005, 0,
	0, 0, 0, 2343, 2295, 540, 554, 1343, 0, 1896,
	1483, 1487, 0, 1489, 1490, 1491, 1492, 1493, 0, 0,
	1484, -2, 1560, 1562, 1583, 2037, 2038, 2039, 1543, 1544,
	1545, 1546, 1547, 1555, 1542, 1542, 1542, 1553, 1582, 1574,
	1582, 1578, 1528, 1529, 1530, 1565, 1566, 1567, 1568, 0,
	2343, 2295, 546, 0, 0, 0, 0, 0, -2, 608,
	613, 614, 0, 1225, 0, 1232, 635, 636, 637, 1234,
	1235, 0, 1237, 611, 638, 639, 640, 641, 642, 643,
	0, 1966, 1967, 1968, 1969, 1972, 1973, 0, 0, 609,
	628, 616, 0, 622, 92, 1175, 0, 131, 0, 1175,
	1175, 0, 0, 153, 0, 0, 0, 0, 0, 0,
	0, 116, 127, 104, 105, 0, 0, 0, 0, 0,
	73, 1062, 0, 1065, 0, 0, 0, 0, 0, 0,
	0, 1078, 0, 0, 0, 0, 115, 0, 0, 110,
	94, 0, 0, 0, 117, 129, 0, 158, 160, 0,
	0, 0, 0, 0, 0, 177, 185, 0, 0, 0,
	0, 1086, 0, 1340, 0, 0, 2387, 0, 1447, 2176,
	-2, -2, 1447, 870, 0, 0, 2020, 1962, 0, 0,
	0, 0, 0, 0, 0, 322, 324, 0, 326, 327,
	328, 0, 1122, 0, 334, 374, 1011, 2387, 0, 0,
	401, 396, 0, 398, 0, 0, 1061, 2387, 1059, 1997,
	0, 1083, 0, 1040, 2387, 1995, 0, 0, 1130, 2029,
	1139, 1143, 1242, 0, 405, 0, 1256, 1258, 0, 0,
	1467, 0, 1469, 1470, 0, 351, 352, 353, 0, 433,
	0, 165, 166, 0, 167, 2387, 438, 0, 441, 0,
	167, 2387, 1952, 447, 0, 450, 0, 0, 456, 0,
	0, 0, 0, 1343, 0, 0, 0, 0, 249, 0,
	0, 0, 0, 0, 0, 236, 0, 1446, 0, 1447,
	230, 273, 273, 1447, 585, 1447, 587, 0, 0, 730,
	731, 0, 273, 273, 273, 737, 738, 740, 741, -2,
	-2, -2, 855, 743, 744, 822, 0, 0, 0, 821,
	758, 0, 864, 2281, 875, 822, 2100, 822, 2100, 822,
	2100, 769, 771, 774, 810, 818, 782, 787, 0, 0,
	792, 800, -2, 0, 802, 0, 804, 0, 806, 822,
	823, 826, 831, 834, 839, 0, 0, 0, 0, 0,
	0, 0, 1079, 0, 1215, 1371, 1299, 566, 1290, 1370,
	1291, 1298, 1301, 0, 0, 1303, 0, 1305, 0, 1366,
	1367, 1374, 1375, 0, 1385, 1386, 1378, 0, -2, 0,
	0, 1381, 1382, 1309, 0, 1326, 1327, 1328, 1355, 1358,
	1153, 0, 2520, 1604, 1478, 1605, 1606, 1981, 0, 1613,
	1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, -2,
	-2, -2, -2, -2, -2, -2, -2, 1631, 1632, 1633,
	1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, -2, -2,
	-2, 1645, 1646, -2, 1880, 1882, 0, 1945, 0, -2,
	0, -2, -2, -2, -2, 1665, 0, 1667, 1672, 1674,
	1676, 0, 0, 0, 0, 1944, 1686, 1928, 1929, 0,
	0, 1859, 1860, 1861, 1671, 0, 1690, 1943, 1940, 0,
	0, 1892, 1354, 1749, 0, 0, 0, 0, 1756, 1741,
	1890, 0, 1889, 0, 0, 0, 1900, 0, 1935, 1931,
	0, 1979, 1599, 1586, 1587, 1588, 1589, 1590, 1591, 1601,
	0, 1976, 2006, 2012, 1833, 0, 0, 0, 1786, 1787,
	1788, 1789, 1790, 0, 1792, 1793, 0, 1795, 1796, 0,
	1798, 1799, 0, 1801, 1802, 1803, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1496, 0, 0, 0, 1500, 0, 0,
	0, 1504, 0, 0, 0, 1508, 0, 0, 0, 1512,
	0, 0, 0, 1516, 0, 0, 0, 1520, 0, 0,
	0, 1524, 0, 0, 0, 0, 0, 1805, 0, 1903,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 1807,
	0, 1809, 1894, 1914, 0, 0, 1691, 0, 0, 0,
	1857, 0, 1812, 1894, 1922, 0, 0, 0, 0, 0,
	1894, 0, 1927, 0, 1819, 0, 1821, 1335, 0, 0,
	1473, 0, 0, 0, 1949, 1473, 1473, 0, 1391, 0,
	0, 1454, 1455, 1456, 0, 0, 1457, 0, 1448, 1452,
	1449, 1450, 1444, 1407, 0, 0, 1983, 1444, 1413, 1443,
	0, 1040, 1433, 1444, 1444, 0, -2, 1417, 1434, 0,
	0, 511, 513, 515, 519, 521, 0, 0, 1354, -2,
	0, -2, 1039, 0, 0, 0, 0, 530, 532, 0,
	0, 453, 0, 0, 524, 0, 527, 0, 1474, 1477,
	0, 0, 1488, 1494, 1495, 0, -2, 0, 0, 1584,
	0, 0, 0, 0, 0, 196, 0, 601, 0, 1224,
	1233, 0, 632, 0, 634, 0, 1970, 1974, 1971, 1975,
	0, 623, 0, 0, 0, 0, 1174, 0, 135, 2387,
	0, 169, 0, 0, 1004, 1989, 0, 0, 0, 0,
	2119, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 101, 106, 0, 0, 0, 0,
	0, 0, 0, 0, 1063, 1064, 1066, 1073, 1075, 0,
	1069, 1977, 0, 0, 1070, 0, 1072, 1074, 1076, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	103, 107, 0, 0, 0, 0, 1956, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1118,
	1116, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106,
	1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 0,
	0, -2, 0, 0, 0, 0, 206, 0, 264, 1955,
	1965, 0, 893, 894, 294, 297, 300, 303, 202, 0,
	330, 0, 0, 937, 912, 0, 0, 383, 273, 0,
	0, 397, 2029, 901, 182, 183, 184, 1057, 1060, 0,
	1040, 2387, 1097, 0, 0, 0, 0, 0, 0, 1128,
	0, 2387, 1984, 2028, 2029, 1244, 1250, 0, 1473, 0,
	1272, 1259, 0, 0, 0, 1272, 1276, 1277, 1279, 1280,
	0, 0, 1468, 0, 355, 465, 167, 435, 0, 167,
	167, 444, 0, 0, 167, 455, 167, 460, 167, 262,
	462, 473, 523, 1343, 1343, 273, 271, 2232, 269, 266,
	268, 0, 0, 0, 938, 940, 941, 942, 943, 0,
	2029, 0, 2165, 2029, 0, 1262, 1264, 0, 226, 0,
	233, 231, 236, 0, 0, 395, 584, 589, 725, 0,
	273, 733, 734, 735, 776, 812, 820, 745, 747, 748,
	749, 0, 876, 874, 760, 822, 763, 822, 766, 822,
	785, 789, 794, 801, 0, 0, 0, 814, 0, 0,
	0, 0, 0, 0, 0, 859, 860, 861, 863, 1465,
	1294, 1295, 1297, 0, 1306, 0, 0, 1380, -2, -2,
	1379, 1383, 1384, -2, -2, -2, -2, 1302, 0, 1311,
	1308, 0, 1365, 1151, 1152, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 1687, 0, -2, 1666, 1669, 1673,
	1675, 1677, 0, 0, 0, 0, 0, 0, 1883, 0,
	1885, 1688, 1938, 1941, 1855, 0, 0, 1353, 1354, 1354,
	0, 1755, 0, 1891, 0, 1898, 1899, 0, 1748, 0,
	1932, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1759, 0, 0, 0, 0, 1791, 1794, 1797, 1800, 0,
	0, 0, 0, 1780, 0, 0, 0, 1784, 1554, 1540,
	0, 1582, 1580, 1581, 1575, 1582, 1579, 1532, 0, 1497,
	1498, 1499, 1501, 1502, 1503, 1505, 1506, 1507, 1509, 1510,
	1511, 1513, 1514, 1515, 1517, 1518, 1519, 1521, 1522, 1523,
	1525, 1526, 1527, 1531, 0, 1804, 0, 1806, 1808, 0,
	0, 1810, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1694, 1695, 1696, 1811, 1920,
	1921, 0, 0, 0, 0, 0, 0, 1817, 0, 1926,
	1818, 1820, 1343, 0, 1336, 0, 1393, 1388, 1472, 0,
	1947, 1447, 1395, 1397, 1948, 1986, 1388, 1388, 0, 1895,
	0, 0, 1438, 0, 0, 0, 1440, 1411, 0, 0,
	1405, 0, 1401, 1402, 1403, 1404, 1412, 1040, 1442, 1414,
	1418, 2006, 0, 1444, 0, 1429, 0, 1431, 1463, 0,
	1423, 1426, 0, 0, 2021, 274, 0, 305, 309, 310,
	306, 307, 308, 539, 0, 0, 0, 0, 1897, 0,
	1479, 0, 1485, 0, 0, 0, 0, 545, 0, 0,
	0, 192, 0, 597, -2, 630, 631, 633, 0, 629,
	132, 1175, 0, 0, 1156, 1158, 0, 137, 2387, 146,
	0, 978, 0, 1987, 0, 0, 0, 0, 0, 1177,
	0, 0, 2387, 167, 2387, 167, 149, 152, 0, 157,
	154, 155, 0, 0, 969, 93, 1175, 0, 96, 100,
	108, 0, 0, 0, 114, 0, 0, 0, 1160, 1166,
	0, 0, 1067, 1068, 1071, 1077, 74, 0, 0, 1164,
	1170, 80, 0, 1155, 159, 98, 102, 109, 0, 1172,
	95, 0, 181, 0, 0, 0, 173, 0, 174, 175,
	186, 0, 167, 2387, 0, 904, 905, 1117, 1081, 1082,
	0, 1087, 0, 0, 0, 1447, 198, 0, 1447, 206,
	0, 1961, 0, 0, 0, 0, 0, 0, 936, 1022,
	0, 909, 0, 0, 0, 389, 385, 0, 394, 400,
	399, 900, 0, 0, 0, 0, -2, 0, 0, 1132,
	1126, 1127, 0, 0, 0, 2387, 1246, 1250, 0, 1249,
	1341, 1354, 404, 1251, 1272, 0, 0, 0, 1261, 1257,
	1254, 1473, 0, 0, 0, 0, 0, 350, 434, 167,
	439, 442, 1953, 167, 448, 451, 457, 476, 477, 248,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 947,
	0, 2029, 2029, 0, 1991, 0, 0, 0, 0, 234,
	0, 237, 0, 0, 0, 242, 243, 244, 245, 246,
	227, 1447, 0, 586, 0, 0, 732, 0, 762, 764,
	767, 803, 805, 822, 848, 849, 964, 0, 964, 0,
	0, 1304, 0, 1377, 1310, 1359, 1360, 0, 1153, 0,
	1607, 1650, 0, 0, -2, 0, 0, 1654, 0, 0,
	0, -2, 0, 0, 0, 1884, 1886, 0, 1940, 1750,
	0, 0, 0, 1754, 1738, 1739, 0, 1858, 1901, 1930,
	1934, 0, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 0,
	1980, 2007, 2011, 1831, 1832, 1836, 1994, 0, 0, 0,
	1763, 0, 0, 0, 0, 0, 0, 0, 0, 1573,
	1577, 0, 0, 1902, 1913, 1915, 1692, 1693, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, -2, -2,
	-2, 1710, 1711, 1712, -2, -2, -2, 0, 0, 0,
	1916, 1918, 1919, 1923, 1924, 0, 1814, 1815, 1816, 1925,
	0, 1343, 1337, 1390, 0, 1471, 1394, 0, 1390, 1390,
	1350, 1436, 0, 0, 1459, 0, 1408, 0, 1409, 0,
	1441, 0, 1416, 1419, 1420, 1430, 0, 1422, 0, 1425,
	0, 1750, -2, 275, 277, 0, 280, 542, 543, 541,
	525, 0, 0, 1481, 0, 0, 1557, 1561, 1585, 548,
	549, 547, 194, 0, 1445, 0, 0, 0, 0, 168,
	976, 1003, 0, 0, 0, 1146, 1153, 0, 0, 1009,
	139, 0, 0, 0, 147, 0, 0, 144, 0, 151,
	156, 0, 0, 0, 0, 0, 0, 111, 112, 113,
	0, 118, 0, 119, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 170, 0, 0, 0, 1150, 0, 0,
	188, 0, 0, 0, 1120, 1121, 1161, 1167, 0, 0,
	206, 204, 0, 207, 0, 210, 211, 0, 206, 200,
	0, 0, 325, 1040, 331, 958, 1010, 0, 1012, 0,
	910, 0, 0, 1011, 381, 0, 388, 0, 0, 1061,
	0, 0, 1084, 1095, 1040, 0, 1131, 1133, 1141, 0,
	0, 0, 1248, 1250, 0, 1241, 1242, 1373, 1252, 1270,
	-2, 0, 0, 1354, 1278, 1275, 1281, 1282, 0, 436,
	445, 270, 0, 265, 267, 0, 251, 0, 0, 939,
	944, 0, 0, 0, 0, 0, 1263, 1265, 0, 0,
	0, 0, 0, 0, 236, 257, 0, 726, 750, 813,
	850, 963, 0, 0, 852, 0, 0, 1376, 1363, 1364,
	1361, 1153, 1652, 1656, 0, 0, 0, 1658, -2, 0,
	1680, -2, -2, 1887, 1939, 1729, 1354, 1751, 1753, 1740,
	1933, 1602, 0, 1838, 1835, 0, 1822, 0, 1775, 1776,
	0, 0, 1779, 1781, 1782, 1783, 1541, 1534, 1533, 1912,
	0, 0, 0, 0, 1813, 1338, 0, 1827, 0, 0,
	1398, 1827, 1827, 1437, 0, 1439, 1406, 1399, 0, 2007,
	1432, 1424, 0, 0, 278, 0, 1475, 1480, 0, 1486,
	1556, 195, 133, 134, 136, 0, 977, 0, 980, 0,
	0, 0, 0, 987, 988, 0, 0, 0, 0, 0,
	997, 0, 1026, 1036, 0, 1365, 0, 0, 0, 141,
	162, 0, 0, 1176, 0, 0, 167, 167, 0, 0,
	1157, 1159, 0, 0, 0, 0, 121, 0, 0, 1162,
	1168, 1165, 1171, 0, 0, 0, 1173, 179, 180, 0,
	167, 0, 172, 167, 167, 1150, 0, 0, 0, 197,
	0, 0, 0, 0, 199, 263, 206, 0, 966, 0,
	1022, 1014, 1015, 1016, 0, 1021, 1023, 0, 0, 924,
	911, 0, 920, 0, 0, 937, 912, 0, 386, 902,
	1058, 1092, 1040, 0, 1124, 0, 0, 0, 0, 0,
	0, 1238, 1250, 0, 1243, 1244, 1272, 1372, 0, 0,
	0, 1260, 1373, 0, 272, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 238, 0, 239, 240,
	241, 228, 588, 590, 0, 0, 596, 962, 0, 0,
	0, 0, 1362, 1660, -2, -2, 1681, 0, 2008, 2010,
	1354, 0, 1824, 1356, 0, 0, -2, 0, 0, 0,
	1339, 1322, 0, 1389, 1387, 1323, 1324, 1458, 0, 1427,
	279, 0, 1482, 138, 0, 981, 982, 1990, 984, 0,
	986, 989, 0, 992, 2031, 0, 996, 0, 1005, 1027,
	0, 958, 0, 1032, 1033, 1034, 1147, 1148, 1038, 0,
	140, 142, 161, 1150, 0, 143, 150, 0, 0, 97,
	0, 0, 2091, 124, 122, 120, 1154, 99, 0, 181,
	187, 1149, 176, 189, 167, 0, 1163, 1169, 208, 0,
	209, 212, 0, 0, 912, 965, 0, 1013, 0, 1024,
	1025, 914, 0, 913, 0, 0, 0, 0, 0, 387,
	390, 0, 393, 0, 0, 1134, 0, 1140, 0, 0,
	0, 0, 1245, 1246, 402, 1266, 0, 0, 1272, 1283,
	250, 0, 0, 945, 948, 949, 950, 951, 952, 953,
	954, 955, 956, 946, 1038, 0, 0, 1002, 0, 255,
	235, 0, 592, 0, 594, 0, 851, 853, 0, 0,
	1752, 1842, 0, 0, 1777, 1778, -2, 0, 1718, 1826,
	1828, 0, 1400, 1476, 979, 983, 0, 0, 0, 1044,
	0, 0, 998, 0, 1030, 1031, 966, 0, 958, 0,
	0, 164, 0, 0, 0, 0, 0, 0, 0, 171,
	190, 1150, 205, 222, 0, 1093, 914, 0, 0, 922,
	0, 925, 0, 921, 918, 919, 958, 0, 391, 392,
	0, 1096, 0, 1141, 0, 0, 1247, 1248, 1473, 1269,
	1273, 0, 0, 1036, 1038, 912, 0, 591, 0, 0,
	856, 857, 0, 0, 0, 0, 1837, 1357, 1719, 0,
	0, 0, 0, 991, 1049, 0, 0, 0, 1028, 1029,
	1026, 0, 1007, 0, 1040, 145, 0, 1038, 0, 970,
	0, 0, 973, 0, 0, 125, 2091, 123, 0, 167,
	225, 0, 219, 217, 218, 907, 0, 0, 1018, 1020,
	0, 926, 966, 924, 1094, 1038, 0, 1036, 0, 1239,
	0, 273, 273, 958, 1036, 1473, 0, 273, 593, 595,
	1834, 1854, 1843, -2, 2346, 2097, 0, 1854, 1854, 1829,
	1830, 0, 0, 993, 1045, 1046, 0, 1041, 1042, 1043,
	2030, 994, 995, 1473, 1035, 0, 1044, 163, 958, 967,
	0, 0, 968, 0, 0, 128, 0, 130, 191, 213,
	0, 0, 0, 1017, 0, 0, 0, 0, 912, 914,
	1036, 0, 958, 0, 0, 252, 253, 966, 958, 1001,
	254, 1839, 0, 0, 1845, 1846, 1847, 1848, 1849, 1840,
	1841, 985, 0, 1047, 0, 1048, 0, 0, 0, 1006,
	0, 1049, 148, 971, 0, 974, 0, 126, 0, 220,
	221, 0, 1019, 915, 0, 917, 914, 923, 958, 0,
	966, 0, 1267, 0, 912, 966, 0, 1851, 1852, 0,
	0, 0, 1050, 0, 1053, 1054, 0, 1051, 0, 1026,
	0, 0, 0, 961, 916, 908, 966, 1038, 912, 1036,
	0, 1473, 912, 1850, 1853, 1844, 990, 1052, 1055, 1056,
	1037, 1008, 0, 0, 0, 957, 959, 960, 912, 1036,
	1473, 958, 1473, 999, 1473, 966, 0, 223, 0, 1473,
	958, 1137, 966, 1268, 1000, 972, 0, 0, 1135, 966,
	912, 0, 224, 912, 1473, 0, 1473, 1138, 966, 1136,
	975,
}
var sqlTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 541, 3, 547, 542, 3,
	552, 553, 545, 543, 557, 544, 554, 546, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 560, 3,
	533, 535, 534, 538, 556, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 550, 3, 551, 548, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 558, 540, 559, 536,
}
var sqlTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}
var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 537, 57876, 539, 57877, 549, 57878, 555, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1229
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1234
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1236
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1239
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1240
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1241
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1242
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1243
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1244
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1245
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1246
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1247
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1254
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 34:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1263
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1264
		{
			return helpWith(sqllex, "ALTER")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1267
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1268
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1269
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1270
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 45:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1271
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1272
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 49:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1273
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 51:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1274
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1275
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1331
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1357
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 68:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1370
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1387
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1391
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 74:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1395
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 79:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1412
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 80:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1416
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].str}
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1437
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 91:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1469
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 92:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1473
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 93:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1477
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 94:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1487
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1493
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1502
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1513
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1517
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1523
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1531
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1541
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1545
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1555
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[5].union.slct(),
			}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1566
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[5].union.slct()}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1573
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 109:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1585
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1592
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 111:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1600
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 112:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1605
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 113:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1609
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1614
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 115:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1620
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 116:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1628
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1639
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 118:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1649
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 119:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1659
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 120:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1668
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 121:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1679
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1685
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 123:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1693
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1697
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1701
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1705
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1711
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1716
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1727
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:1731
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1741
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 133:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1748
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1753
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1758
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1768
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1778
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1783
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1788
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1793
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1798
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1807
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1819
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1829
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1855
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1864
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1873
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.AlterTablePartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1885
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1893
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Owner: sqlDollar[3].str,
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1900
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1901
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1905
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1915
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1923
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 162:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1927
		{
			sqlVAL.union.val = nil
		}
	case 163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1933
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 164:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = nil
		}
	case 165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1944
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1948
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 167:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1952
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1958
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 169:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1962
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 170:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1987
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[6].str,
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:1998
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      sqlDollar[9].str,
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2009
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: sqlDollar[6].str,
					NewVal: sqlDollar[8].str,
				},
			}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2019
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2028
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: sqlDollar[6].str,
				},
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2046
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2050
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2053
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2057
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2064
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: sqlDollar[2].str,
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 192:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2097
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2104
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2108
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2112
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 196:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2116
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 197:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2187
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2195
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 205:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2207
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2218
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2222
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2235
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2339
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2344
		{
			sqlVAL.union.val = nil
		}
	case 217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2356
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2366
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2374
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2378
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 224:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2392
		{
			sqlVAL.union.val = sqlDollar[6].union.kvOptions()
		}
	case 225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = nil
		}
	case 226:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2436
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2454
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2468
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2479
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 235:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2483
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2494
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2498
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2507
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2511
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2519
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2523
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2527
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2531
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2535
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 248:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2578
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 249:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2583
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2587
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2593
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2598
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2603
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2608
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2613
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2617
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 257:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2633
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2636
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2640
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2644
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2652
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2656
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2662
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2666
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2680
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2690
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2704
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2720
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2732
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2736
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2742
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2758
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2766
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2767
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2768
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 287:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2769
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2779
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2787
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2789
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2793
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2796
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2815
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2823
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2825
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2829
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2832
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2842
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2859
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2865
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2868
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2876
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2880
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2893
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2899
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2904
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2916
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2918
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2919
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2920
		{
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2921
		{
			return helpWith(sqllex, "CREATE")
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2924
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 321:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			return unimplemented(sqllex, "create cast")
		}
	case 322:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2926
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2928
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 325:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2929
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[6].str)
		}
	case 326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2930
		{
			return unimplemented(sqllex, "create extension "+sqlDollar[3].str)
		}
	case 327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2931
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2932
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2933
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2934
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2935
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2936
		{
			return unimplemented(sqllex, "create operator")
		}
	case 333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2937
		{
			return unimplemented(sqllex, "create publication")
		}
	case 334:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2938
		{
			return unimplemented(sqllex, "create rule")
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2939
		{
			return unimplemented(sqllex, "create server")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2941
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2945
		{
		}
	case 340:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2946
		{
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
		}
	case 342:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2950
		{
		}
	case 343:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2953
		{
		}
	case 344:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2954
		{
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2957
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2958
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2959
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2960
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2961
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2962
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2963
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2964
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2965
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2967
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2968
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2971
		{
			return unimplemented(sqllex, "drop server")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2972
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2973
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2974
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2978
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2979
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2980
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2981
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2982
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2984
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2985
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2986
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3005
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 384:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3023
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3032
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3039
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3045
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3055
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3066
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3078
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3086
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3094
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 398:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3114
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3118
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 401:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3129
		{

			sqlVAL.union.val = nil
		}
	case 402:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3143
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			return helpWith(sqllex, "DELETE")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3156
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3157
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3165
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3168
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3169
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3171
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3172
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3181
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3182
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3183
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			return helpWith(sqllex, "DROP")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3187
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3188
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3189
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3190
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3191
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3192
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3193
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3201
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3205
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3209
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3218
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3226
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3234
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3238
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3241
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3249
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 442:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3253
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 443:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3256
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3273
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3281
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3289
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3297
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3304
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3311
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3319
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3326
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3330
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3340
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 456:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3349
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.strs(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3357
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.strs(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3382
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 462:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3393
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3398
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 468:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3418
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3423
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3449
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3456
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3458
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3466
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"DISTSQL", "ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3482
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3490
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3505
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3508
		{
			return helpWith(sqllex, "DELETE")
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3510
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3511
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3512
		{
			return helpWith(sqllex, "INSERT")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3515
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3517
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3520
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3525
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3526
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3527
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3532
		{
			return helpWith(sqllex, "DELETE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3533
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3534
		{
			return helpWith(sqllex, "INSERT")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3540
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3541
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3545
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3549
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3559
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3567
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3575
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 528:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3583
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3600
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3608
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 533:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3616
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3634
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3663
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3667
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3671
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3675
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3688
		{
			return helpWith(sqllex, "GRANT")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3710
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3714
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3718
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3722
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3726
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.strs(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3735
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3740
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3744
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3758
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "RESET")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3781
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3785
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3788
		{
			return helpWith(sqllex, "RESET")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3796
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3799
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3810
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3813
		{
			return helpWith(sqllex, "USE")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3817
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3818
		{
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3819
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3820
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3824
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3826
		{
			return helpWith(sqllex, "USE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3842
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3860
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3886
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3890
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3894
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3914
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3937
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 601:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3950
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 604:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3975
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3994
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3997
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 607:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3999
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4002
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4006
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4025
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4032
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4037
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4042
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4047
		{
			return unimplemented(sqllex, "set from current")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4056
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4061
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4068
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4078
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4082
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 625:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4110
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4114
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4120
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4124
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4142
		{
			sqlVAL.union.val = tree.Low
		}
	case 636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4146
		{
			sqlVAL.union.val = tree.Normal
		}
	case 637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4150
		{
			sqlVAL.union.val = tree.High
		}
	case 638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4161
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4165
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4174
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4178
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4192
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4193
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4194
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4195
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4196
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4197
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4198
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4199
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4201
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4203
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4204
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4205
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4206
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4207
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4208
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4211
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4212
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4213
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4214
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4215
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4216
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4218
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4221
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "SHOW")
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4225
		{
			return helpWith(sqllex, "SHOW LAST QUERY STATISTICS")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4231
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4234
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4238
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4243
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4253
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4265
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.str = "client_encoding"
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4279
		{
			sqlVAL.str = "timezone"
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 725:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4294
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 726:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4298
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4302
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4313
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4321
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4329
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4335
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 732:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4343
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 733:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 734:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4361
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4370
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4378
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4406
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4409
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4420
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4428
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4432
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4436
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4440
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4443
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4464
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4471
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4474
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4487
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 759:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4495
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4506
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4508
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 764:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 765:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4519
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4521
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 767:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4525
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4528
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4536
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4539
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4541
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4544
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 774:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4555
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4557
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 776:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4560
		{
			return helpWith(sqllex, "SHOW QUERIES")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4564
		{
			sqlVAL.union.val = true
		}
	case 778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4566
		{
			sqlVAL.union.val = true
		}
	case 779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = false
		}
	case 780:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4579
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4586
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4587
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4589
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 785:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4593
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4597
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4602
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 789:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4610
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4628
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 792:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4634
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 794:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4642
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4650
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4654
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 799:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4664
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 801:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4682
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4687
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4689
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4693
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4696
		{
			sqlVAL.union.val = true
		}
	case 808:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4697
		{
			sqlVAL.union.val = false
		}
	case 809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4705
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4708
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 812:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4713
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4744
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4751
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4756
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4759
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4762
		{
			sqlVAL.union.val = true
		}
	case 822:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = false
		}
	case 823:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4770
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4774
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4777
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4784
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4788
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4791
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4798
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4802
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4809
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4819
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4830
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4840
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4852
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4856
		{

			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4860
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4873
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4876
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4884
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4887
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4895
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4899
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4907
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4915
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4922
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4933
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4944
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4952
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4958
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4967
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4972
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4979
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4983
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 865:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4995
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5119
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5123
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5162
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5166
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5171
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5175
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5192
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5199
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5216
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5217
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 884:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5228
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5229
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "RESUME")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5240
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5257
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5266
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5281
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5291
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5297
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5305
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].str,
			}
		}
	case 900:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5311
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
			}
		}
	case 901:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5318
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].str,
				AuthRole: sqlDollar[5].str,
			}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].str,
				IfNotExists: true,
				AuthRole:    sqlDollar[8].str,
			}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5332
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaRename{
					NewName: sqlDollar[6].str,
				},
			}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].str,
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].str,
				},
			}
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5399
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    sqlDollar[8].union.interleave(),
				Defs:          sqlDollar[6].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[10].union.storageParams(),
				OnCommit:      sqlDollar[11].union.createTableOnCommitSetting(),
			}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:5414
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    sqlDollar[11].union.interleave(),
				Defs:          sqlDollar[9].union.tblDefs(),
				AsSource:      nil,
				PartitionBy:   sqlDollar[12].union.partitionBy(),
				Persistence:   sqlDollar[2].union.persistence(),
				StorageParams: sqlDollar[13].union.storageParams(),
				OnCommit:      sqlDollar[14].union.createTableOnCommitSetting(),
			}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5432
		{

			sqlVAL.union.val = nil
		}
	case 911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5438
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = nil
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5448
		{

			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 914:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5455
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 915:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5459
		{

			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 916:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5464
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5469
		{

			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5476
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5490
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 922:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5496
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:5510
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 924:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5525
		{
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5526
		{
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5527
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5545
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 929:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5551
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5552
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5553
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5554
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5555
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5560
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5570
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 943:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5582
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5586
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5599
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 947:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5610
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5611
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5612
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5613
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5614
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5616
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 955:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5617
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5623
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5632
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 959:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5639
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5644
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 962:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5655
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 964:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5662
		{
			sqlVAL.str = ""
		}
	case 966:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5669
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 967:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5675
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				List:   sqlDollar[8].union.listPartitions(),
			}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[5].union.nameList(),
				Range:  sqlDollar[8].union.rangePartitions(),
			}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5689
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 972:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5705
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5715
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5719
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 975:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5725
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 977:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5750
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 978:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5754
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5760
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5768
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5784
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5806
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5810
		{
			sqlVAL.union.val = tree.UniqueConstraint{}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5814
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5825
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5829
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5833
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5847
		{
			return unimplemented(sqllex, "virtual computed columns")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5851
		{
			sqllex.Error("use AS ( <expr> ) STORED")
			return 1
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5858
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5859
		{
		}
	case 999:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5864
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[2].str),
				Columns:       sqlDollar[4].union.idxElems(),
				Sharded:       sqlDollar[6].union.shardedIndexDef(),
				Storing:       sqlDollar[7].union.nameList(),
				Interleave:    sqlDollar[8].union.interleave(),
				PartitionBy:   sqlDollar[9].union.partitionBy(),
				StorageParams: sqlDollar[10].union.storageParams(),
				Predicate:     sqlDollar[11].union.expr(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:5877
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:          tree.Name(sqlDollar[3].str),
					Columns:       sqlDollar[5].union.idxElems(),
					Sharded:       sqlDollar[7].union.shardedIndexDef(),
					Storing:       sqlDollar[8].union.nameList(),
					Interleave:    sqlDollar[9].union.interleave(),
					PartitionBy:   sqlDollar[10].union.partitionBy(),
					StorageParams: sqlDollar[11].union.storageParams(),
					Predicate:     sqlDollar[12].union.expr(),
				},
			}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5892
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:          tree.Name(sqlDollar[3].str),
				Columns:       sqlDollar[5].union.idxElems(),
				Inverted:      true,
				StorageParams: sqlDollar[7].union.storageParams(),
				Predicate:     sqlDollar[8].union.expr(),
			}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5904
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5916
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5921
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5927
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5933
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:     sqlDollar[3].union.idxElems(),
					Storing:     sqlDollar[5].union.nameList(),
					Interleave:  sqlDollar[6].union.interleave(),
					PartitionBy: sqlDollar[7].union.partitionBy(),
					Predicate:   sqlDollar[9].union.expr(),
				},
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5945
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:5957
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5968
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5975
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5979
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5985
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5995
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6006
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6010
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6017
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6023
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6034
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6038
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6044
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6054
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6060
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6064
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6075
		{
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6076
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6077
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6079
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6080
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6108
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6114
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6120
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6124
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6144
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6152
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6156
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6165
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6169
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6173
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6177
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6187
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6201
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6205
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6209
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6217
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6236
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6245
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6253
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6257
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6260
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6261
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6264
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6265
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6268
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6269
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6279
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6284
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6286
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6288
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6289
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6291
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6292
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6294
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6307
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6311
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6332
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6340
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6344
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = true
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6357
		{

			sqlVAL.union.val = true
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6362
		{
			sqlVAL.union.val = false
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6372
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6386
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6398
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6410
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6420
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6430
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6434
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6438
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6442
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6446
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6450
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6454
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6458
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6466
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6470
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6474
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6478
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6482
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6503
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6507
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6513
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.union.val = nil
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6532
		{
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6533
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6542
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.strs(),
			}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6549
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6551
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6553
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6555
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6557
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6559
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6563
		{
			sqlVAL.union.val = sqlDollar[1].union.strs()
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6567
		{
			sqlVAL.union.val = []string(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:6597
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[5].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Columns:       sqlDollar[10].union.idxElems(),
				Sharded:       sqlDollar[12].union.shardedIndexDef(),
				Storing:       sqlDollar[13].union.nameList(),
				Interleave:    sqlDollar[14].union.interleave(),
				PartitionBy:   sqlDollar[15].union.partitionBy(),
				StorageParams: sqlDollar[16].union.storageParams(),
				Predicate:     sqlDollar[17].union.expr(),
				Inverted:      sqlDollar[8].union.bool(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:6615
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[8].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Sharded:       sqlDollar[15].union.shardedIndexDef(),
				Storing:       sqlDollar[16].union.nameList(),
				Interleave:    sqlDollar[17].union.interleave(),
				PartitionBy:   sqlDollar[18].union.partitionBy(),
				Inverted:      sqlDollar[11].union.bool(),
				StorageParams: sqlDollar[19].union.storageParams(),
				Predicate:     sqlDollar[20].union.expr(),
				Concurrently:  sqlDollar[4].union.bool(),
			}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6634
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[6].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				Columns:       sqlDollar[10].union.idxElems(),
				Storing:       sqlDollar[12].union.nameList(),
				Interleave:    sqlDollar[13].union.interleave(),
				PartitionBy:   sqlDollar[14].union.partitionBy(),
				StorageParams: sqlDollar[15].union.storageParams(),
				Predicate:     sqlDollar[16].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:6651
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:          tree.Name(sqlDollar[9].str),
				Table:         table,
				Unique:        sqlDollar[2].union.bool(),
				Inverted:      true,
				IfNotExists:   true,
				Columns:       sqlDollar[13].union.idxElems(),
				Storing:       sqlDollar[15].union.nameList(),
				Interleave:    sqlDollar[16].union.interleave(),
				PartitionBy:   sqlDollar[17].union.partitionBy(),
				StorageParams: sqlDollar[18].union.storageParams(),
				Predicate:     sqlDollar[19].union.expr(),
				Concurrently:  sqlDollar[5].union.bool(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6668
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6672
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6687
		{
			sqlVAL.union.val = false
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = true
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = false
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = true
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6707
		{
			sqlVAL.union.val = false
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6713
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6717
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6726
		{

			e := sqlDollar[1].union.expr()
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			if colName, ok := e.(*tree.UnresolvedName); ok && colName.NumParts == 1 {
				sqlVAL.union.val = tree.IndexElem{Column: tree.Name(colName.Parts[0]), Direction: dir, NullsOrder: nullsOrder}
			} else {
				return unimplementedWithIssueDetail(sqllex, 9682, fmt.Sprintf("%T", e))
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.str = ""
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6753
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6757
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6761
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6767
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6773
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6779
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6785
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6793
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false,
			}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6799
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true,
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6807
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsView: true,
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6813
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         sqlDollar[7].str,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6823
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsView: true,
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         sqlDollar[9].str,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6841
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: sqlDollar[6].str, IfExists: false, IsSequence: true,
			}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6847
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: sqlDollar[8].str, IfExists: true, IsSequence: true,
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6855
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6861
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6873
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6879
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6893
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6899
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6916
		{
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6917
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6920
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6921
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6932
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6942
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6950
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6952
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6956
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6959
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6972
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6980
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6988
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7001
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7009
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7011
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7017
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7025
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7028
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7032
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7033
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7034
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7053
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7055
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7058
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7068
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7071
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7073
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7076
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7085
		{
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7086
		{
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7087
		{
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7097
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7101
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7104
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7107
		{
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7108
		{
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7112
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7122
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7126
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7132
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7136
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7149
		{
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7151
		{
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7155
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7160
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7164
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7172
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7178
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7184
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7190
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7200
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7204
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7214
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:     tree.Name(sqlDollar[3].str),
				Template: sqlDollar[5].str,
				Encoding: sqlDollar[6].str,
				Collate:  sqlDollar[7].str,
				CType:    sqlDollar[8].str,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7224
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists: true,
				Name:        tree.Name(sqlDollar[6].str),
				Template:    sqlDollar[8].str,
				Encoding:    sqlDollar[9].str,
				Collate:     sqlDollar[10].str,
				CType:       sqlDollar[11].str,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7234
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7238
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7242
		{
			sqlVAL.str = ""
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7252
		{
			sqlVAL.str = ""
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7258
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.str = ""
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7268
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7272
		{
			sqlVAL.str = ""
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7277
		{
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7278
		{
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7307
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7325
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7329
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7338
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7343
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7349
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7353
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7357
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7363
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7387
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7398
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7414
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7418
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7423
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7427
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7456
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7459
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7462
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7485
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7488
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7560
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7568
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7576
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7580
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7584
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7588
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7593
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7597
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7602
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7606
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7612
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7621
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7622
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7623
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7627
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7628
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7632
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7633
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7638
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7673
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7674
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7675
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7697
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7736
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7758
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7773
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7780
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7792
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7796
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7811
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7817
		{
			sqlVAL.union.val = true
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7821
		{
			sqlVAL.union.val = false
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7827
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7837
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7849
		{
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7850
		{
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7854
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7858
		{
			sqlVAL.union.val = nil
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7863
		{
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7864
		{
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = true
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = false
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = false
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = true
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7893
		{
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7894
		{
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7925
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7935
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7956
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7961
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7973
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7990
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7999
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8010
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8019
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8023
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8037
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8041
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8049
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8078
		{
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8079
		{
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8082
		{
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8083
		{
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8104
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8114
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8136
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8138
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8150
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8153
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8161
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8165
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8171
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8175
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8180
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8185
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8196
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8208
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8219
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8223
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8227
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8235
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8266
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8276
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8286
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8303
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8307
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8311
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8322
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8346
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8352
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8373
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8375
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8385
		{
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8387
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = nil
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8391
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8406
		{
			sqlVAL.union.val = true
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = false
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8430
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8434
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8438
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8456
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8460
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8473
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8480
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8486
		{
			sqlVAL.str = tree.AstFull
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8494
		{
			sqlVAL.str = tree.AstRight
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.str = tree.AstInner
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8504
		{
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8505
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.str = tree.AstHash
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8530
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8534
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8538
		{
			sqlVAL.str = ""
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8551
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8555
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8561
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8562
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8563
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8567
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8572
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8586
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8590
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8596
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8602
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8612
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8622
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8629
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8654
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8662
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8663
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8673
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8681
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8683
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8691
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8704
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8711
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8720
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8760
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8772
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8773
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8776
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8777
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8778
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8779
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8781
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8782
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8783
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8785
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8786
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8787
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8788
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8789
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8790
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8791
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8792
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8793
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8795
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8796
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8797
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8798
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8799
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8801
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8802
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8803
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8805
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYM_type")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8806
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZ_type")
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8807
		{
			return unimplementedWithIssueDetail(sqllex, 53091, "XYZM_type")
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8810
		{
			sqlVAL.union.val = types.Geography
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8811
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8814
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8818
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8822
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8830
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8856
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8864
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8872
		{
			sqlVAL.union.val = nil
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8887
		{
			sqlVAL.union.val = types.Int2
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8891
		{
			sqlVAL.union.val = types.Int
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8895
		{
			sqlVAL.union.val = types.Float4
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.union.val = types.Float
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8907
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8915
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8923
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8931
		{
			sqlVAL.union.val = types.Bool
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8937
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8950
		{
			sqlVAL.union.val = types.Float
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8956
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8962
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8970
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8984
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8996
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9006
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9010
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = types.String
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9023
		{
			sqlVAL.union.val = true
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9024
		{
			sqlVAL.union.val = false
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9029
		{
			sqlVAL.union.val = types.Date
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9033
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9041
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9053
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9055
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9064
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9072
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9085
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9089
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = true
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = false
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9101
		{
			sqlVAL.union.val = false
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9105
		{
			sqlVAL.union.val = types.Interval
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9113
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9140
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9148
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9156
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9179
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9188
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9197
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9203
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9212
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9218
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9228
		{
			sqlVAL.union.val = nil
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9242
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9287
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9291
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9302
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9311
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnarySqrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryCbrt, Expr: sqlDollar[2].union.expr()}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9331
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9347
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9359
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9363
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9367
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9371
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9375
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONSomeExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.JSONAllExists, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Contains, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9387
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ContainedBy, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9391
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9395
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9403
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9407
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchVal, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9411
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchText, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9415
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchValPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.JSONFetchTextPath, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9423
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9427
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9431
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Overlaps, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9459
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9463
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.Like, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9471
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9475
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotLike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.ILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9491
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotILike, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.SimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9503
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9507
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotSimilarTo, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9511
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9515
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9519
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.RegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9527
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotRegIMatch, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9531
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9535
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9539
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9551
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9554
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9556
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9560
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9564
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9576
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9580
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9588
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9592
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9600
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9604
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9608
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9612
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.In, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9616
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NotIn, Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9620
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9637
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9654
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9662
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.UnaryComplement, Expr: sqlDollar[2].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Plus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Minus, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mult, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Div, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9690
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.FloorDiv, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Mod, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Pow, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitxor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitand, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9710
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Bitor, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9714
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9718
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GT, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9722
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.EQ, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9726
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.Concat, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9730
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.LShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9734
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.RShift, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9738
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.LE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.GE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9746
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.NE, Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9750
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9754
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.IsNotDistinctFrom, Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9758
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9762
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9776
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9784
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9820
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9828
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9832
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9836
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9841
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9851
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9859
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9867
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9876
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: sqlDollar[5].str}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9891
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9902
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9910
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9914
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9918
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9921
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9932
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9933
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9935
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9948
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9957
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10010
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10023
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10035
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10044
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10058
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10064
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10068
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10072
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10076
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10084
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10090
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10094
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10098
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10106
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10110
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10114
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10118
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10122
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10134
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10138
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10145
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10148
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10150
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10153
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10162
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10164
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10171
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10177
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10180
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10189
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10191
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10199
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10201
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10204
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10209
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10211
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10219
		{
			return unimplemented(sqllex, "treat")
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10221
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10225
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10229
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10240
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10245
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10251
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10255
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10261
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10265
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10272
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10276
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10292
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10335
		{
			sqlVAL.str = ""
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10341
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10345
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10351
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10359
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10367
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10381
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10394
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10422
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10430
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10434
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10441
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10450
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10454
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10458
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10462
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10491
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = tree.Any
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = tree.Some
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10511
		{
			sqlVAL.union.val = tree.All
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = tree.Plus
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = tree.Minus
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10518
		{
			sqlVAL.union.val = tree.Mult
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10519
		{
			sqlVAL.union.val = tree.Div
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = tree.FloorDiv
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = tree.Mod
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10522
		{
			sqlVAL.union.val = tree.Bitand
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = tree.Bitor
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = tree.Pow
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10525
		{
			sqlVAL.union.val = tree.Bitxor
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10526
		{
			sqlVAL.union.val = tree.LT
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10527
		{
			sqlVAL.union.val = tree.GT
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = tree.EQ
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10529
		{
			sqlVAL.union.val = tree.LE
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10530
		{
			sqlVAL.union.val = tree.GE
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10531
		{
			sqlVAL.union.val = tree.NE
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = tree.Like
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = tree.NotLike
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = tree.ILike
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = tree.NotILike
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10575
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10579
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10590
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10594
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10600
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10604
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10621
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10631
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10641
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(sqlDollar[1].str), sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10688
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10692
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10705
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10709
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10738
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10754
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10760
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10764
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10768
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10786
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10813
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10820
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10843
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10847
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10852
		{
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10853
		{
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10867
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10876
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10884
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10892
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10902
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10933
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10956
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10965
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10969
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10977
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11002
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11006
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11018
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11022
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11031
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11042
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11051
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			var err error
			var d tree.Datum
			if sqlDollar[3].union.val == nil {
				d, err = tree.ParseDInterval(sqlDollar[2].str)
			} else {
				d, err = tree.ParseDIntervalWithTypeMetadata(sqlDollar[2].str, sqlDollar[3].union.intervalTypeMetadata())
			}
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11071
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			d, err := tree.ParseDIntervalWithTypeMetadata(sqlDollar[5].str, types.IntervalTypeMetadata{
				Precision:      prec,
				PrecisionIsSet: true,
			})
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11174
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11181
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11185
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11189
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11224
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11251
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11264
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11271
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.str = ""
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11302
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11306
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
