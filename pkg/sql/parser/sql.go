// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:878
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13776

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1602,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	262, 423,
	-2, 0,
	-1, 74,
	244, 254,
	519, 254,
	-2, 0,
	-1, 88,
	233, 1338,
	246, 1338,
	262, 419,
	393, 419,
	404, 1097,
	444, 419,
	457, 1097,
	504, 1097,
	530, 419,
	556, 1097,
	-2, 0,
	-1, 94,
	133, 1602,
	239, 1602,
	541, 1602,
	542, 1602,
	-2, 0,
	-1, 112,
	151, 1573,
	171, 1573,
	184, 1573,
	242, 1573,
	275, 1573,
	344, 1573,
	354, 1573,
	536, 1573,
	-2, 1544,
	-1, 153,
	159, 936,
	261, 936,
	396, 897,
	462, 897,
	503, 897,
	522, 936,
	524, 897,
	-2, 0,
	-1, 157,
	4, 1604,
	21, 1604,
	22, 1604,
	23, 1604,
	24, 1604,
	25, 1604,
	26, 1604,
	27, 1604,
	29, 1604,
	30, 1604,
	36, 1604,
	41, 1604,
	42, 1604,
	44, 1604,
	45, 1604,
	46, 1604,
	47, 1604,
	48, 1604,
	49, 1604,
	50, 1604,
	51, 1604,
	53, 1604,
	54, 1604,
	55, 1604,
	56, 1604,
	58, 1604,
	59, 1604,
	60, 1604,
	61, 1604,
	62, 1604,
	63, 1604,
	64, 1604,
	68, 1604,
	69, 1604,
	70, 1604,
	71, 1604,
	73, 1604,
	74, 1604,
	75, 1604,
	79, 1604,
	80, 1604,
	81, 1604,
	82, 1604,
	83, 1604,
	84, 1604,
	85, 1604,
	88, 1604,
	89, 1604,
	90, 1604,
	91, 1604,
	92, 1604,
	94, 1604,
	96, 1604,
	97, 1604,
	98, 1604,
	99, 1604,
	100, 1604,
	101, 1604,
	103, 1604,
	104, 1604,
	105, 1604,
	107, 1604,
	108, 1604,
	109, 1604,
	117, 1604,
	118, 1604,
	119, 1604,
	120, 1604,
	121, 1604,
	123, 1604,
	124, 1604,
	125, 1604,
	126, 1604,
	128, 1604,
	129, 1604,
	130, 1604,
	132, 1604,
	133, 1604,
	134, 1604,
	136, 1604,
	137, 1604,
	138, 1604,
	141, 1604,
	142, 1604,
	143, 1604,
	145, 1604,
	146, 1604,
	148, 1604,
	149, 1604,
	150, 1604,
	152, 1604,
	153, 1604,
	154, 1604,
	155, 1604,
	156, 1604,
	157, 1604,
	158, 1604,
	159, 1604,
	160, 1604,
	161, 1604,
	162, 1604,
	163, 1604,
	164, 1604,
	165, 1604,
	166, 1604,
	167, 1604,
	168, 1604,
	170, 1604,
	176, 1604,
	177, 1604,
	178, 1604,
	179, 1604,
	183, 1604,
	185, 1604,
	186, 1604,
	187, 1604,
	191, 1604,
	192, 1604,
	193, 1604,
	194, 1604,
	195, 1604,
	196, 1604,
	197, 1604,
	198, 1604,
	199, 1604,
	200, 1604,
	201, 1604,
	202, 1604,
	203, 1604,
	204, 1604,
	206, 1604,
	207, 1604,
	209, 1604,
	210, 1604,
	212, 1604,
	213, 1604,
	214, 1604,
	215, 1604,
	216, 1604,
	217, 1604,
	218, 1604,
	219, 1604,
	220, 1604,
	222, 1604,
	223, 1604,
	225, 1604,
	226, 1604,
	227, 1604,
	228, 1604,
	229, 1604,
	233, 1604,
	234, 1604,
	235, 1604,
	236, 1604,
	239, 1604,
	240, 1604,
	241, 1604,
	243, 1604,
	245, 1604,
	246, 1604,
	248, 1604,
	250, 1604,
	251, 1604,
	252, 1604,
	254, 1604,
	258, 1604,
	259, 1604,
	260, 1604,
	261, 1604,
	262, 1604,
	263, 1604,
	265, 1604,
	266, 1604,
	267, 1604,
	269, 1604,
	270, 1604,
	272, 1604,
	273, 1604,
	276, 1604,
	277, 1604,
	278, 1604,
	279, 1604,
	280, 1604,
	281, 1604,
	282, 1604,
	285, 1604,
	286, 1604,
	287, 1604,
	288, 1604,
	290, 1604,
	291, 1604,
	292, 1604,
	293, 1604,
	294, 1604,
	295, 1604,
	296, 1604,
	297, 1604,
	298, 1604,
	299, 1604,
	300, 1604,
	301, 1604,
	302, 1604,
	303, 1604,
	304, 1604,
	305, 1604,
	306, 1604,
	307, 1604,
	308, 1604,
	309, 1604,
	310, 1604,
	311, 1604,
	313, 1604,
	315, 1604,
	316, 1604,
	317, 1604,
	318, 1604,
	319, 1604,
	320, 1604,
	321, 1604,
	322, 1604,
	323, 1604,
	324, 1604,
	325, 1604,
	326, 1604,
	327, 1604,
	328, 1604,
	329, 1604,
	331, 1604,
	332, 1604,
	334, 1604,
	336, 1604,
	337, 1604,
	339, 1604,
	340, 1604,
	341, 1604,
	342, 1604,
	343, 1604,
	346, 1604,
	349, 1604,
	350, 1604,
	351, 1604,
	352, 1604,
	355, 1604,
	356, 1604,
	357, 1604,
	359, 1604,
	361, 1604,
	362, 1604,
	363, 1604,
	364, 1604,
	365, 1604,
	366, 1604,
	367, 1604,
	368, 1604,
	369, 1604,
	370, 1604,
	371, 1604,
	372, 1604,
	373, 1604,
	375, 1604,
	376, 1604,
	377, 1604,
	378, 1604,
	379, 1604,
	380, 1604,
	381, 1604,
	382, 1604,
	383, 1604,
	384, 1604,
	385, 1604,
	386, 1604,
	387, 1604,
	388, 1604,
	389, 1604,
	391, 1604,
	392, 1604,
	394, 1604,
	395, 1604,
	396, 1604,
	397, 1604,
	398, 1604,
	399, 1604,
	400, 1604,
	401, 1604,
	402, 1604,
	403, 1604,
	404, 1604,
	405, 1604,
	406, 1604,
	408, 1604,
	410, 1604,
	411, 1604,
	412, 1604,
	418, 1604,
	419, 1604,
	421, 1604,
	422, 1604,
	423, 1604,
	424, 1604,
	425, 1604,
	426, 1604,
	427, 1604,
	428, 1604,
	429, 1604,
	430, 1604,
	432, 1604,
	433, 1604,
	434, 1604,
	436, 1604,
	437, 1604,
	438, 1604,
	439, 1604,
	440, 1604,
	441, 1604,
	442, 1604,
	444, 1604,
	445, 1604,
	446, 1604,
	447, 1604,
	448, 1604,
	449, 1604,
	450, 1604,
	451, 1604,
	452, 1604,
	453, 1604,
	454, 1604,
	455, 1604,
	457, 1604,
	458, 1604,
	459, 1604,
	460, 1604,
	461, 1604,
	462, 1604,
	464, 1604,
	465, 1604,
	466, 1604,
	467, 1604,
	468, 1604,
	469, 1604,
	471, 1604,
	472, 1604,
	473, 1604,
	474, 1604,
	475, 1604,
	476, 1604,
	477, 1604,
	478, 1604,
	480, 1604,
	482, 1604,
	483, 1604,
	484, 1604,
	485, 1604,
	486, 1604,
	487, 1604,
	488, 1604,
	489, 1604,
	490, 1604,
	491, 1604,
	492, 1604,
	493, 1604,
	494, 1604,
	495, 1604,
	496, 1604,
	497, 1604,
	499, 1604,
	500, 1604,
	502, 1604,
	503, 1604,
	505, 1604,
	506, 1604,
	507, 1604,
	508, 1604,
	509, 1604,
	510, 1604,
	511, 1604,
	512, 1604,
	514, 1604,
	515, 1604,
	516, 1604,
	517, 1604,
	518, 1604,
	520, 1604,
	522, 1604,
	523, 1604,
	524, 1604,
	525, 1604,
	526, 1604,
	527, 1604,
	529, 1604,
	530, 1604,
	531, 1604,
	532, 1604,
	534, 1604,
	535, 1604,
	538, 1604,
	539, 1604,
	540, 1604,
	541, 1604,
	542, 1604,
	543, 1604,
	544, 1604,
	546, 1604,
	549, 1604,
	550, 1604,
	551, 1604,
	552, 1604,
	553, 1604,
	554, 1604,
	556, 1604,
	557, 1604,
	558, 1604,
	559, 1604,
	560, 1604,
	561, 1604,
	566, 1604,
	567, 1604,
	568, 1604,
	569, 1604,
	570, 1604,
	571, 1604,
	-2, 0,
	-1, 158,
	1, 1455,
	131, 1455,
	250, 1455,
	333, 1455,
	391, 1455,
	400, 1455,
	575, 1455,
	604, 1455,
	-2, 0,
	-1, 160,
	1, 1455,
	604, 1455,
	-2, 0,
	-1, 161,
	1, 1455,
	604, 1455,
	-2, 0,
	-1, 162,
	1, 1455,
	519, 1455,
	604, 1455,
	-2, 0,
	-1, 191,
	151, 1572,
	171, 1572,
	184, 1572,
	242, 1572,
	275, 1572,
	344, 1572,
	354, 1572,
	536, 1572,
	-2, 1547,
	-1, 241,
	4, 1611,
	5, 1611,
	6, 1611,
	7, 1611,
	8, 1611,
	9, 1611,
	10, 1611,
	21, 1611,
	22, 1611,
	23, 1611,
	24, 1611,
	25, 1611,
	26, 1611,
	27, 1611,
	29, 1611,
	30, 1611,
	36, 1611,
	37, 1611,
	41, 1611,
	42, 1611,
	43, 1611,
	44, 1611,
	45, 1611,
	46, 1611,
	47, 1611,
	48, 1611,
	49, 1611,
	50, 1611,
	51, 1611,
	53, 1611,
	54, 1611,
	55, 1611,
	56, 1611,
	58, 1611,
	59, 1611,
	60, 1611,
	61, 1611,
	62, 1611,
	63, 1611,
	64, 1611,
	65, 1611,
	66, 1611,
	67, 1611,
	68, 1611,
	69, 1611,
	70, 1611,
	71, 1611,
	73, 1611,
	74, 1611,
	75, 1611,
	77, 1611,
	79, 1611,
	80, 1611,
	81, 1611,
	82, 1611,
	83, 1611,
	84, 1611,
	85, 1611,
	88, 1611,
	89, 1611,
	90, 1611,
	91, 1611,
	92, 1611,
	94, 1611,
	96, 1611,
	97, 1611,
	98, 1611,
	99, 1611,
	100, 1611,
	101, 1611,
	103, 1611,
	104, 1611,
	105, 1611,
	106, 1611,
	107, 1611,
	108, 1611,
	109, 1611,
	110, 1611,
	111, 1611,
	112, 1611,
	113, 1611,
	114, 1611,
	115, 1611,
	116, 1611,
	117, 1611,
	118, 1611,
	119, 1611,
	120, 1611,
	121, 1611,
	122, 1611,
	123, 1611,
	124, 1611,
	125, 1611,
	126, 1611,
	127, 1611,
	128, 1611,
	129, 1611,
	130, 1611,
	132, 1611,
	133, 1611,
	134, 1611,
	136, 1611,
	137, 1611,
	138, 1611,
	141, 1611,
	142, 1611,
	143, 1611,
	145, 1611,
	146, 1611,
	148, 1611,
	149, 1611,
	150, 1611,
	152, 1611,
	153, 1611,
	154, 1611,
	155, 1611,
	156, 1611,
	157, 1611,
	158, 1611,
	159, 1611,
	160, 1611,
	161, 1611,
	162, 1611,
	163, 1611,
	164, 1611,
	165, 1611,
	166, 1611,
	167, 1611,
	168, 1611,
	169, 1611,
	170, 1611,
	176, 1611,
	177, 1611,
	178, 1611,
	179, 1611,
	183, 1611,
	185, 1611,
	186, 1611,
	187, 1611,
	190, 1611,
	191, 1611,
	192, 1611,
	193, 1611,
	194, 1611,
	195, 1611,
	196, 1611,
	197, 1611,
	198, 1611,
	199, 1611,
	200, 1611,
	201, 1611,
	202, 1611,
	203, 1611,
	204, 1611,
	206, 1611,
	207, 1611,
	209, 1611,
	210, 1611,
	212, 1611,
	213, 1611,
	214, 1611,
	215, 1611,
	216, 1611,
	217, 1611,
	218, 1611,
	219, 1611,
	220, 1611,
	221, 1611,
	222, 1611,
	223, 1611,
	225, 1611,
	226, 1611,
	227, 1611,
	228, 1611,
	229, 1611,
	233, 1611,
	234, 1611,
	235, 1611,
	236, 1611,
	238, 1611,
	239, 1611,
	240, 1611,
	241, 1611,
	243, 1611,
	245, 1611,
	246, 1611,
	247, 1611,
	248, 1611,
	249, 1611,
	250, 1611,
	251, 1611,
	252, 1611,
	253, 1611,
	254, 1611,
	258, 1611,
	259, 1611,
	260, 1611,
	261, 1611,
	262, 1611,
	263, 1611,
	265, 1611,
	266, 1611,
	267, 1611,
	269, 1611,
	270, 1611,
	271, 1611,
	272, 1611,
	273, 1611,
	274, 1611,
	276, 1611,
	277, 1611,
	278, 1611,
	279, 1611,
	280, 1611,
	281, 1611,
	282, 1611,
	283, 1611,
	284, 1611,
	285, 1611,
	286, 1611,
	287, 1611,
	288, 1611,
	290, 1611,
	291, 1611,
	292, 1611,
	293, 1611,
	294, 1611,
	295, 1611,
	296, 1611,
	297, 1611,
	298, 1611,
	299, 1611,
	300, 1611,
	301, 1611,
	302, 1611,
	303, 1611,
	304, 1611,
	305, 1611,
	306, 1611,
	307, 1611,
	308, 1611,
	309, 1611,
	310, 1611,
	311, 1611,
	313, 1611,
	314, 1611,
	315, 1611,
	316, 1611,
	317, 1611,
	318, 1611,
	319, 1611,
	320, 1611,
	321, 1611,
	322, 1611,
	323, 1611,
	324, 1611,
	325, 1611,
	326, 1611,
	327, 1611,
	328, 1611,
	329, 1611,
	330, 1611,
	331, 1611,
	332, 1611,
	333, 1611,
	334, 1611,
	335, 1611,
	336, 1611,
	337, 1611,
	338, 1611,
	339, 1611,
	340, 1611,
	341, 1611,
	342, 1611,
	343, 1611,
	346, 1611,
	350, 1611,
	351, 1611,
	352, 1611,
	355, 1611,
	356, 1611,
	357, 1611,
	358, 1611,
	359, 1611,
	360, 1611,
	361, 1611,
	362, 1611,
	363, 1611,
	364, 1611,
	365, 1611,
	366, 1611,
	367, 1611,
	368, 1611,
	369, 1611,
	370, 1611,
	371, 1611,
	372, 1611,
	373, 1611,
	375, 1611,
	376, 1611,
	377, 1611,
	378, 1611,
	379, 1611,
	380, 1611,
	381, 1611,
	382, 1611,
	383, 1611,
	384, 1611,
	385, 1611,
	386, 1611,
	387, 1611,
	388, 1611,
	389, 1611,
	391, 1611,
	392, 1611,
	394, 1611,
	395, 1611,
	396, 1611,
	397, 1611,
	398, 1611,
	399, 1611,
	400, 1611,
	401, 1611,
	402, 1611,
	403, 1611,
	404, 1611,
	405, 1611,
	406, 1611,
	408, 1611,
	410, 1611,
	411, 1611,
	412, 1611,
	418, 1611,
	419, 1611,
	421, 1611,
	422, 1611,
	423, 1611,
	424, 1611,
	425, 1611,
	426, 1611,
	427, 1611,
	428, 1611,
	429, 1611,
	430, 1611,
	432, 1611,
	433, 1611,
	434, 1611,
	435, 1611,
	436, 1611,
	437, 1611,
	438, 1611,
	439, 1611,
	440, 1611,
	441, 1611,
	442, 1611,
	444, 1611,
	445, 1611,
	446, 1611,
	447, 1611,
	448, 1611,
	449, 1611,
	450, 1611,
	451, 1611,
	452, 1611,
	453, 1611,
	454, 1611,
	455, 1611,
	457, 1611,
	458, 1611,
	459, 1611,
	460, 1611,
	461, 1611,
	462, 1611,
	463, 1611,
	464, 1611,
	465, 1611,
	466, 1611,
	467, 1611,
	468, 1611,
	469, 1611,
	470, 1611,
	471, 1611,
	472, 1611,
	473, 1611,
	474, 1611,
	475, 1611,
	476, 1611,
	477, 1611,
	478, 1611,
	480, 1611,
	482, 1611,
	483, 1611,
	484, 1611,
	485, 1611,
	486, 1611,
	487, 1611,
	488, 1611,
	489, 1611,
	490, 1611,
	491, 1611,
	492, 1611,
	493, 1611,
	494, 1611,
	495, 1611,
	496, 1611,
	497, 1611,
	499, 1611,
	500, 1611,
	501, 1611,
	502, 1611,
	503, 1611,
	505, 1611,
	506, 1611,
	507, 1611,
	508, 1611,
	509, 1611,
	510, 1611,
	511, 1611,
	512, 1611,
	514, 1611,
	515, 1611,
	516, 1611,
	517, 1611,
	518, 1611,
	520, 1611,
	522, 1611,
	523, 1611,
	524, 1611,
	525, 1611,
	526, 1611,
	527, 1611,
	528, 1611,
	529, 1611,
	530, 1611,
	531, 1611,
	532, 1611,
	534, 1611,
	535, 1611,
	537, 1611,
	538, 1611,
	539, 1611,
	540, 1611,
	541, 1611,
	542, 1611,
	543, 1611,
	544, 1611,
	545, 1611,
	546, 1611,
	549, 1611,
	550, 1611,
	551, 1611,
	552, 1611,
	553, 1611,
	554, 1611,
	556, 1611,
	557, 1611,
	558, 1611,
	559, 1611,
	560, 1611,
	561, 1611,
	566, 1611,
	567, 1611,
	568, 1611,
	569, 1611,
	570, 1611,
	571, 1611,
	572, 1611,
	585, 1611,
	592, 1611,
	593, 1611,
	594, 1611,
	601, 1611,
	605, 1611,
	-2, 0,
	-1, 754,
	4, 1336,
	21, 1336,
	22, 1336,
	23, 1336,
	24, 1336,
	25, 1336,
	26, 1336,
	27, 1336,
	29, 1336,
	30, 1336,
	36, 1336,
	41, 1336,
	42, 1336,
	44, 1336,
	45, 1336,
	46, 1336,
	47, 1336,
	48, 1336,
	49, 1336,
	50, 1336,
	51, 1336,
	53, 1336,
	54, 1336,
	55, 1336,
	56, 1336,
	58, 1336,
	59, 1336,
	60, 1336,
	61, 1336,
	62, 1336,
	63, 1336,
	64, 1336,
	68, 1336,
	69, 1336,
	70, 1336,
	71, 1336,
	73, 1336,
	74, 1336,
	75, 1336,
	79, 1336,
	80, 1336,
	81, 1336,
	82, 1336,
	83, 1336,
	84, 1336,
	85, 1336,
	88, 1336,
	89, 1336,
	90, 1336,
	91, 1336,
	92, 1336,
	94, 1336,
	96, 1336,
	97, 1336,
	98, 1336,
	99, 1336,
	100, 1336,
	101, 1336,
	103, 1336,
	104, 1336,
	105, 1336,
	107, 1336,
	108, 1336,
	109, 1336,
	117, 1336,
	118, 1336,
	119, 1336,
	120, 1336,
	121, 1336,
	123, 1336,
	124, 1336,
	125, 1336,
	126, 1336,
	128, 1336,
	129, 1336,
	130, 1336,
	132, 1336,
	133, 1336,
	134, 1336,
	136, 1336,
	137, 1336,
	138, 1336,
	141, 1336,
	142, 1336,
	143, 1336,
	145, 1336,
	146, 1336,
	148, 1336,
	149, 1336,
	150, 1336,
	152, 1336,
	153, 1336,
	154, 1336,
	155, 1336,
	156, 1336,
	157, 1336,
	158, 1336,
	159, 1336,
	160, 1336,
	161, 1336,
	162, 1336,
	163, 1336,
	164, 1336,
	165, 1336,
	166, 1336,
	167, 1336,
	168, 1336,
	170, 1336,
	176, 1336,
	177, 1336,
	178, 1336,
	179, 1336,
	183, 1336,
	185, 1336,
	186, 1336,
	187, 1336,
	191, 1336,
	192, 1336,
	193, 1336,
	194, 1336,
	195, 1336,
	196, 1336,
	197, 1336,
	198, 1336,
	199, 1336,
	200, 1336,
	201, 1336,
	202, 1336,
	203, 1336,
	204, 1336,
	206, 1336,
	207, 1336,
	209, 1336,
	210, 1336,
	212, 1336,
	213, 1336,
	214, 1336,
	215, 1336,
	216, 1336,
	217, 1336,
	218, 1336,
	219, 1336,
	220, 1336,
	222, 1336,
	223, 1336,
	225, 1336,
	226, 1336,
	227, 1336,
	228, 1336,
	229, 1336,
	233, 1336,
	234, 1336,
	235, 1336,
	236, 1336,
	239, 1336,
	240, 1336,
	241, 1336,
	243, 1336,
	245, 1336,
	246, 1336,
	248, 1336,
	250, 1336,
	251, 1336,
	252, 1336,
	254, 1336,
	258, 1336,
	259, 1336,
	260, 1336,
	261, 1336,
	262, 1336,
	263, 1336,
	265, 1336,
	266, 1336,
	267, 1336,
	269, 1336,
	270, 1336,
	272, 1336,
	273, 1336,
	276, 1336,
	277, 1336,
	278, 1336,
	279, 1336,
	280, 1336,
	281, 1336,
	282, 1336,
	285, 1336,
	286, 1336,
	287, 1336,
	288, 1336,
	290, 1336,
	291, 1336,
	292, 1336,
	293, 1336,
	294, 1336,
	295, 1336,
	296, 1336,
	297, 1336,
	298, 1336,
	299, 1336,
	300, 1336,
	301, 1336,
	302, 1336,
	303, 1336,
	304, 1336,
	305, 1336,
	306, 1336,
	307, 1336,
	308, 1336,
	309, 1336,
	310, 1336,
	311, 1336,
	313, 1336,
	315, 1336,
	316, 1336,
	317, 1336,
	318, 1336,
	319, 1336,
	320, 1336,
	321, 1336,
	322, 1336,
	323, 1336,
	324, 1336,
	325, 1336,
	326, 1336,
	327, 1336,
	328, 1336,
	329, 1336,
	331, 1336,
	332, 1336,
	334, 1336,
	336, 1336,
	337, 1336,
	339, 1336,
	340, 1336,
	341, 1336,
	342, 1336,
	343, 1336,
	346, 1336,
	350, 1336,
	351, 1336,
	352, 1336,
	355, 1336,
	356, 1336,
	357, 1336,
	359, 1336,
	361, 1336,
	362, 1336,
	363, 1336,
	364, 1336,
	365, 1336,
	366, 1336,
	367, 1336,
	368, 1336,
	369, 1336,
	370, 1336,
	371, 1336,
	372, 1336,
	373, 1336,
	375, 1336,
	376, 1336,
	377, 1336,
	378, 1336,
	379, 1336,
	380, 1336,
	381, 1336,
	382, 1336,
	383, 1336,
	384, 1336,
	385, 1336,
	386, 1336,
	387, 1336,
	388, 1336,
	389, 1336,
	391, 1336,
	392, 1336,
	394, 1336,
	395, 1336,
	396, 1336,
	397, 1336,
	398, 1336,
	399, 1336,
	400, 1336,
	401, 1336,
	402, 1336,
	403, 1336,
	404, 1336,
	405, 1336,
	406, 1336,
	408, 1336,
	410, 1336,
	411, 1336,
	412, 1336,
	418, 1336,
	419, 1336,
	421, 1336,
	422, 1336,
	423, 1336,
	424, 1336,
	425, 1336,
	426, 1336,
	427, 1336,
	428, 1336,
	429, 1336,
	430, 1336,
	432, 1336,
	433, 1336,
	434, 1336,
	436, 1336,
	437, 1336,
	438, 1336,
	439, 1336,
	440, 1336,
	441, 1336,
	442, 1336,
	444, 1336,
	445, 1336,
	446, 1336,
	447, 1336,
	448, 1336,
	449, 1336,
	450, 1336,
	451, 1336,
	452, 1336,
	453, 1336,
	454, 1336,
	455, 1336,
	457, 1336,
	458, 1336,
	459, 1336,
	460, 1336,
	461, 1336,
	462, 1336,
	464, 1336,
	465, 1336,
	466, 1336,
	467, 1336,
	468, 1336,
	469, 1336,
	471, 1336,
	472, 1336,
	473, 1336,
	474, 1336,
	475, 1336,
	476, 1336,
	477, 1336,
	478, 1336,
	480, 1336,
	482, 1336,
	483, 1336,
	484, 1336,
	485, 1336,
	486, 1336,
	487, 1336,
	488, 1336,
	489, 1336,
	490, 1336,
	491, 1336,
	492, 1336,
	493, 1336,
	494, 1336,
	495, 1336,
	496, 1336,
	497, 1336,
	499, 1336,
	500, 1336,
	502, 1336,
	503, 1336,
	505, 1336,
	506, 1336,
	507, 1336,
	508, 1336,
	509, 1336,
	510, 1336,
	511, 1336,
	512, 1336,
	514, 1336,
	515, 1336,
	516, 1336,
	517, 1336,
	518, 1336,
	520, 1336,
	522, 1336,
	523, 1336,
	524, 1336,
	525, 1336,
	526, 1336,
	527, 1336,
	529, 1336,
	530, 1336,
	531, 1336,
	532, 1336,
	534, 1336,
	535, 1336,
	538, 1336,
	539, 1336,
	540, 1336,
	541, 1336,
	542, 1336,
	543, 1336,
	544, 1336,
	546, 1336,
	549, 1336,
	550, 1336,
	551, 1336,
	552, 1336,
	553, 1336,
	554, 1336,
	556, 1336,
	557, 1336,
	558, 1336,
	559, 1336,
	560, 1336,
	561, 1336,
	566, 1336,
	567, 1336,
	568, 1336,
	569, 1336,
	570, 1336,
	571, 1336,
	-2, 0,
	-1, 773,
	189, 2403,
	519, 2403,
	584, 2403,
	603, 2403,
	-2, 0,
	-1, 774,
	189, 2390,
	519, 2390,
	584, 2390,
	603, 2390,
	-2, 0,
	-1, 776,
	189, 2654,
	519, 2654,
	584, 2654,
	603, 2654,
	-2, 0,
	-1, 779,
	189, 2514,
	519, 2514,
	584, 2514,
	603, 2514,
	-2, 0,
	-1, 780,
	189, 2695,
	519, 2695,
	584, 2695,
	603, 2695,
	-2, 0,
	-1, 788,
	189, 2541,
	519, 2541,
	584, 2541,
	603, 2541,
	-2, 718,
	-1, 823,
	603, 2339,
	606, 2339,
	-2, 1018,
	-1, 824,
	603, 2341,
	606, 2341,
	-2, 1019,
	-1, 825,
	603, 2340,
	606, 2340,
	-2, 1020,
	-1, 826,
	606, 2265,
	-2, 1021,
	-1, 851,
	184, 273,
	-2, 0,
	-1, 875,
	43, 2312,
	-2, 0,
	-1, 876,
	556, 1314,
	-2, 1098,
	-1, 892,
	4, 1745,
	21, 1745,
	22, 1745,
	23, 1745,
	24, 1745,
	25, 1745,
	26, 1745,
	27, 1745,
	29, 1745,
	30, 1745,
	36, 1745,
	41, 1745,
	42, 1745,
	44, 1745,
	45, 1745,
	46, 1745,
	47, 1745,
	48, 1745,
	49, 1745,
	50, 1745,
	51, 1745,
	53, 1745,
	54, 1745,
	55, 1745,
	56, 1745,
	58, 1745,
	59, 1745,
	60, 1745,
	61, 1745,
	62, 1745,
	63, 1745,
	64, 1745,
	68, 1745,
	69, 1745,
	70, 1745,
	71, 1745,
	73, 1745,
	74, 1745,
	75, 1745,
	79, 1745,
	80, 1745,
	81, 1745,
	82, 1745,
	83, 1745,
	84, 1745,
	85, 1745,
	88, 1745,
	89, 1745,
	90, 1745,
	91, 1745,
	92, 1745,
	94, 1745,
	96, 1745,
	97, 1745,
	98, 1745,
	99, 1745,
	100, 1745,
	101, 1745,
	103, 1745,
	104, 1745,
	105, 1745,
	107, 1745,
	108, 1745,
	109, 1745,
	117, 1745,
	118, 1745,
	119, 1745,
	120, 1745,
	121, 1745,
	123, 1745,
	124, 1745,
	125, 1745,
	126, 1745,
	128, 1745,
	129, 1745,
	130, 1745,
	132, 1745,
	133, 1745,
	134, 1745,
	136, 1745,
	137, 1745,
	138, 1745,
	141, 1745,
	142, 1745,
	143, 1745,
	145, 1745,
	146, 1745,
	148, 1745,
	149, 1745,
	150, 1745,
	152, 1745,
	153, 1745,
	154, 1745,
	155, 1745,
	156, 1745,
	157, 1745,
	158, 1745,
	159, 1745,
	160, 1745,
	161, 1745,
	162, 1745,
	163, 1745,
	164, 1745,
	165, 1745,
	166, 1745,
	167, 1745,
	168, 1745,
	170, 1745,
	176, 1745,
	177, 1745,
	178, 1745,
	179, 1745,
	183, 1745,
	185, 1745,
	186, 1745,
	187, 1745,
	191, 1745,
	192, 1745,
	193, 1745,
	194, 1745,
	195, 1745,
	196, 1745,
	197, 1745,
	198, 1745,
	199, 1745,
	200, 1745,
	201, 1745,
	202, 1745,
	203, 1745,
	204, 1745,
	206, 1745,
	207, 1745,
	209, 1745,
	210, 1745,
	212, 1745,
	213, 1745,
	214, 1745,
	215, 1745,
	216, 1745,
	217, 1745,
	218, 1745,
	219, 1745,
	220, 1745,
	222, 1745,
	223, 1745,
	225, 1745,
	226, 1745,
	227, 1745,
	228, 1745,
	229, 1745,
	233, 1745,
	234, 1745,
	235, 1745,
	236, 1745,
	239, 1745,
	240, 1745,
	241, 1745,
	243, 1745,
	245, 1745,
	246, 1745,
	248, 1745,
	250, 1745,
	251, 1745,
	252, 1745,
	254, 1745,
	258, 1745,
	259, 1745,
	260, 1745,
	261, 1745,
	262, 1745,
	263, 1745,
	265, 1745,
	266, 1745,
	267, 1745,
	269, 1745,
	270, 1745,
	272, 1745,
	273, 1745,
	276, 1745,
	277, 1745,
	278, 1745,
	279, 1745,
	280, 1745,
	281, 1745,
	282, 1745,
	285, 1745,
	286, 1745,
	287, 1745,
	288, 1745,
	290, 1745,
	291, 1745,
	292, 1745,
	293, 1745,
	294, 1745,
	295, 1745,
	296, 1745,
	297, 1745,
	298, 1745,
	299, 1745,
	300, 1745,
	301, 1745,
	302, 1745,
	303, 1745,
	304, 1745,
	305, 1745,
	306, 1745,
	307, 1745,
	308, 1745,
	309, 1745,
	310, 1745,
	311, 1745,
	313, 1745,
	315, 1745,
	316, 1745,
	317, 1745,
	318, 1745,
	319, 1745,
	320, 1745,
	321, 1745,
	322, 1745,
	323, 1745,
	324, 1745,
	325, 1745,
	326, 1745,
	327, 1745,
	328, 1745,
	329, 1745,
	331, 1745,
	332, 1745,
	334, 1745,
	336, 1745,
	337, 1745,
	339, 1745,
	340, 1745,
	341, 1745,
	342, 1745,
	343, 1745,
	346, 1745,
	350, 1745,
	351, 1745,
	352, 1745,
	355, 1745,
	356, 1745,
	357, 1745,
	359, 1745,
	361, 1745,
	362, 1745,
	363, 1745,
	364, 1745,
	365, 1745,
	366, 1745,
	367, 1745,
	368, 1745,
	369, 1745,
	370, 1745,
	371, 1745,
	372, 1745,
	373, 1745,
	375, 1745,
	376, 1745,
	377, 1745,
	378, 1745,
	379, 1745,
	380, 1745,
	381, 1745,
	382, 1745,
	383, 1745,
	384, 1745,
	385, 1745,
	386, 1745,
	387, 1745,
	388, 1745,
	389, 1745,
	391, 1745,
	392, 1745,
	394, 1745,
	395, 1745,
	396, 1745,
	397, 1745,
	398, 1745,
	399, 1745,
	400, 1745,
	401, 1745,
	402, 1745,
	403, 1745,
	404, 1745,
	405, 1745,
	406, 1745,
	408, 1745,
	410, 1745,
	411, 1745,
	412, 1745,
	418, 1745,
	419, 1745,
	421, 1745,
	422, 1745,
	423, 1745,
	424, 1745,
	425, 1745,
	426, 1745,
	427, 1745,
	428, 1745,
	429, 1745,
	430, 1745,
	432, 1745,
	433, 1745,
	434, 1745,
	436, 1745,
	437, 1745,
	438, 1745,
	439, 1745,
	440, 1745,
	441, 1745,
	442, 1745,
	444, 1745,
	445, 1745,
	446, 1745,
	447, 1745,
	448, 1745,
	449, 1745,
	450, 1745,
	451, 1745,
	452, 1745,
	453, 1745,
	454, 1745,
	455, 1745,
	457, 1745,
	458, 1745,
	459, 1745,
	460, 1745,
	461, 1745,
	462, 1745,
	464, 1745,
	465, 1745,
	466, 1745,
	467, 1745,
	468, 1745,
	469, 1745,
	471, 1745,
	472, 1745,
	473, 1745,
	474, 1745,
	475, 1745,
	476, 1745,
	477, 1745,
	478, 1745,
	480, 1745,
	482, 1745,
	483, 1745,
	484, 1745,
	485, 1745,
	486, 1745,
	487, 1745,
	488, 1745,
	489, 1745,
	490, 1745,
	491, 1745,
	492, 1745,
	493, 1745,
	494, 1745,
	495, 1745,
	496, 1745,
	497, 1745,
	499, 1745,
	500, 1745,
	502, 1745,
	503, 1745,
	505, 1745,
	506, 1745,
	507, 1745,
	508, 1745,
	509, 1745,
	510, 1745,
	511, 1745,
	512, 1745,
	514, 1745,
	515, 1745,
	516, 1745,
	517, 1745,
	518, 1745,
	520, 1745,
	522, 1745,
	523, 1745,
	524, 1745,
	525, 1745,
	526, 1745,
	527, 1745,
	529, 1745,
	530, 1745,
	531, 1745,
	532, 1745,
	534, 1745,
	535, 1745,
	538, 1745,
	539, 1745,
	540, 1745,
	541, 1745,
	542, 1745,
	543, 1745,
	544, 1745,
	546, 1745,
	549, 1745,
	550, 1745,
	551, 1745,
	552, 1745,
	553, 1745,
	554, 1745,
	556, 1745,
	557, 1745,
	558, 1745,
	559, 1745,
	560, 1745,
	561, 1745,
	566, 1745,
	567, 1745,
	568, 1745,
	569, 1745,
	570, 1745,
	571, 1745,
	-2, 0,
	-1, 902,
	262, 423,
	-2, 0,
	-1, 979,
	396, 898,
	462, 898,
	503, 898,
	524, 898,
	-2, 0,
	-1, 980,
	396, 897,
	462, 897,
	503, 897,
	524, 897,
	-2, 829,
	-1, 984,
	1, 950,
	600, 950,
	602, 950,
	604, 950,
	-2, 0,
	-1, 986,
	1, 872,
	600, 872,
	602, 872,
	604, 872,
	-2, 0,
	-1, 987,
	1, 876,
	600, 876,
	602, 876,
	604, 876,
	-2, 0,
	-1, 988,
	1, 1017,
	184, 1017,
	600, 1017,
	602, 1017,
	604, 1017,
	-2, 0,
	-1, 996,
	1, 903,
	600, 903,
	602, 903,
	604, 903,
	-2, 0,
	-1, 1003,
	1, 950,
	600, 950,
	602, 950,
	604, 950,
	-2, 0,
	-1, 1004,
	1, 952,
	600, 952,
	602, 952,
	604, 952,
	-2, 0,
	-1, 1005,
	1, 955,
	600, 955,
	602, 955,
	604, 955,
	-2, 0,
	-1, 1011,
	1, 981,
	600, 981,
	602, 981,
	604, 981,
	-2, 0,
	-1, 1012,
	1, 983,
	600, 983,
	602, 983,
	604, 983,
	-2, 0,
	-1, 1017,
	1, 1011,
	600, 1011,
	602, 1011,
	604, 1011,
	-2, 0,
	-1, 1069,
	171, 1615,
	184, 1615,
	275, 1615,
	344, 1615,
	-2, 1551,
	-1, 1084,
	171, 1614,
	184, 1614,
	275, 1614,
	344, 1614,
	-2, 1548,
	-1, 1111,
	603, 2338,
	-2, 726,
	-1, 1140,
	5, 2330,
	601, 2328,
	-2, 2319,
	-1, 1148,
	5, 2351,
	601, 2348,
	-2, 2339,
	-1, 1149,
	5, 2352,
	601, 2349,
	-2, 2340,
	-1, 1157,
	603, 2336,
	-2, 2318,
	-1, 1158,
	601, 2779,
	-2, 2337,
	-1, 1181,
	601, 2778,
	-2, 2353,
	-1, 1182,
	5, 1820,
	-2, 2749,
	-1, 1183,
	5, 1821,
	-2, 2750,
	-1, 1184,
	5, 1822,
	-2, 2764,
	-1, 1185,
	5, 1823,
	-2, 2728,
	-1, 1186,
	5, 1824,
	-2, 2762,
	-1, 1187,
	5, 1832,
	-2, 2741,
	-1, 1188,
	5, 1819,
	-2, 2737,
	-1, 1189,
	5, 1819,
	-2, 2736,
	-1, 1190,
	5, 1819,
	-2, 2755,
	-1, 1191,
	5, 1830,
	-2, 2730,
	-1, 1192,
	5, 1835,
	-2, 2729,
	-1, 1193,
	5, 1837,
	-2, 2774,
	-1, 1196,
	5, 1859,
	-2, 2767,
	-1, 1197,
	5, 1851,
	-2, 2768,
	-1, 1198,
	5, 1859,
	-2, 2769,
	-1, 1199,
	5, 1855,
	-2, 2770,
	-1, 1200,
	5, 1805,
	-2, 2742,
	-1, 1201,
	5, 1806,
	-2, 2743,
	-1, 1202,
	5, 1807,
	-2, 2731,
	-1, 1230,
	5, 1842,
	-2, 2775,
	-1, 1231,
	5, 1843,
	-2, 2765,
	-1, 1232,
	5, 1844,
	557, 1844,
	-2, 2732,
	-1, 1233,
	5, 1845,
	557, 1845,
	-2, 2733,
	-1, 1270,
	601, 2348,
	-2, 2339,
	-1, 1271,
	601, 2349,
	-2, 2340,
	-1, 1367,
	189, 2695,
	519, 2695,
	584, 2695,
	603, 2695,
	-2, 0,
	-1, 1372,
	1, 702,
	604, 702,
	-2, 1463,
	-1, 1502,
	363, 2313,
	421, 2313,
	464, 2313,
	594, 2313,
	-2, 2303,
	-1, 1510,
	90, 2691,
	-2, 132,
	-1, 1511,
	90, 2447,
	-2, 133,
	-1, 1512,
	90, 2616,
	-2, 134,
	-1, 1519,
	605, 2313,
	-2, 2315,
	-1, 1527,
	1, 1311,
	426, 1275,
	464, 1275,
	578, 1275,
	600, 1311,
	602, 1311,
	604, 1311,
	-2, 1600,
	-1, 1533,
	205, 1408,
	224, 1408,
	434, 1408,
	-2, 0,
	-1, 1588,
	404, 1097,
	556, 1097,
	-2, 418,
	-1, 1605,
	43, 2311,
	-2, 1063,
	-1, 1612,
	1, 1311,
	600, 1311,
	602, 1311,
	604, 1311,
	-2, 1600,
	-1, 1620,
	4, 1336,
	21, 1336,
	22, 1336,
	23, 1336,
	24, 1336,
	25, 1336,
	26, 1336,
	27, 1336,
	29, 1336,
	30, 1336,
	36, 1336,
	41, 1336,
	42, 1336,
	44, 1336,
	45, 1336,
	46, 1336,
	47, 1336,
	48, 1336,
	49, 1336,
	50, 1336,
	51, 1336,
	53, 1336,
	54, 1336,
	55, 1336,
	56, 1336,
	58, 1336,
	59, 1336,
	60, 1336,
	61, 1336,
	62, 1336,
	63, 1336,
	64, 1336,
	68, 1336,
	69, 1336,
	70, 1336,
	71, 1336,
	73, 1336,
	74, 1336,
	75, 1336,
	79, 1336,
	80, 1336,
	81, 1336,
	82, 1336,
	83, 1336,
	84, 1336,
	85, 1336,
	88, 1336,
	89, 1336,
	90, 1336,
	91, 1336,
	92, 1336,
	94, 1336,
	96, 1336,
	97, 1336,
	98, 1336,
	99, 1336,
	100, 1336,
	101, 1336,
	103, 1336,
	104, 1336,
	105, 1336,
	107, 1336,
	108, 1336,
	109, 1336,
	117, 1336,
	118, 1336,
	119, 1336,
	120, 1336,
	121, 1336,
	123, 1336,
	124, 1336,
	125, 1336,
	126, 1336,
	128, 1336,
	129, 1336,
	130, 1336,
	132, 1336,
	133, 1336,
	134, 1336,
	136, 1336,
	137, 1336,
	138, 1336,
	141, 1336,
	142, 1336,
	143, 1336,
	145, 1336,
	146, 1336,
	148, 1336,
	149, 1336,
	150, 1336,
	152, 1336,
	153, 1336,
	154, 1336,
	155, 1336,
	156, 1336,
	157, 1336,
	158, 1336,
	159, 1336,
	160, 1336,
	161, 1336,
	162, 1336,
	163, 1336,
	164, 1336,
	165, 1336,
	166, 1336,
	167, 1336,
	168, 1336,
	176, 1336,
	177, 1336,
	178, 1336,
	179, 1336,
	183, 1336,
	185, 1336,
	186, 1336,
	187, 1336,
	191, 1336,
	192, 1336,
	193, 1336,
	194, 1336,
	195, 1336,
	196, 1336,
	197, 1336,
	198, 1336,
	199, 1336,
	200, 1336,
	201, 1336,
	202, 1336,
	203, 1336,
	204, 1336,
	206, 1336,
	207, 1336,
	209, 1336,
	210, 1336,
	212, 1336,
	213, 1336,
	214, 1336,
	215, 1336,
	216, 1336,
	217, 1336,
	218, 1336,
	219, 1336,
	220, 1336,
	222, 1336,
	223, 1336,
	225, 1336,
	226, 1336,
	227, 1336,
	228, 1336,
	229, 1336,
	234, 1336,
	235, 1336,
	236, 1336,
	239, 1336,
	240, 1336,
	241, 1336,
	243, 1336,
	245, 1336,
	246, 1336,
	248, 1336,
	250, 1336,
	251, 1336,
	252, 1336,
	254, 1336,
	258, 1336,
	259, 1336,
	260, 1336,
	261, 1336,
	262, 1336,
	263, 1336,
	265, 1336,
	266, 1336,
	267, 1336,
	269, 1336,
	270, 1336,
	272, 1336,
	273, 1336,
	276, 1336,
	277, 1336,
	278, 1336,
	279, 1336,
	280, 1336,
	281, 1336,
	282, 1336,
	285, 1336,
	286, 1336,
	287, 1336,
	288, 1336,
	290, 1336,
	291, 1336,
	292, 1336,
	293, 1336,
	294, 1336,
	295, 1336,
	296, 1336,
	297, 1336,
	298, 1336,
	299, 1336,
	300, 1336,
	301, 1336,
	302, 1336,
	303, 1336,
	304, 1336,
	305, 1336,
	306, 1336,
	307, 1336,
	308, 1336,
	309, 1336,
	310, 1336,
	311, 1336,
	313, 1336,
	315, 1336,
	316, 1336,
	317, 1336,
	318, 1336,
	319, 1336,
	320, 1336,
	321, 1336,
	322, 1336,
	323, 1336,
	324, 1336,
	325, 1336,
	326, 1336,
	327, 1336,
	328, 1336,
	329, 1336,
	331, 1336,
	332, 1336,
	336, 1336,
	337, 1336,
	339, 1336,
	340, 1336,
	341, 1336,
	342, 1336,
	343, 1336,
	346, 1336,
	348, 1336,
	350, 1336,
	351, 1336,
	352, 1336,
	355, 1336,
	356, 1336,
	357, 1336,
	359, 1336,
	361, 1336,
	362, 1336,
	363, 1336,
	364, 1336,
	365, 1336,
	366, 1336,
	367, 1336,
	368, 1336,
	369, 1336,
	370, 1336,
	371, 1336,
	372, 1336,
	373, 1336,
	375, 1336,
	376, 1336,
	377, 1336,
	378, 1336,
	379, 1336,
	380, 1336,
	381, 1336,
	382, 1336,
	383, 1336,
	384, 1336,
	385, 1336,
	386, 1336,
	387, 1336,
	388, 1336,
	389, 1336,
	391, 1336,
	392, 1336,
	394, 1336,
	395, 1336,
	396, 1336,
	397, 1336,
	398, 1336,
	399, 1336,
	400, 1336,
	401, 1336,
	402, 1336,
	403, 1336,
	404, 1336,
	405, 1336,
	406, 1336,
	408, 1336,
	410, 1336,
	411, 1336,
	412, 1336,
	418, 1336,
	419, 1336,
	421, 1336,
	422, 1336,
	423, 1336,
	424, 1336,
	425, 1336,
	426, 1336,
	427, 1336,
	428, 1336,
	429, 1336,
	430, 1336,
	432, 1336,
	433, 1336,
	434, 1336,
	436, 1336,
	437, 1336,
	438, 1336,
	439, 1336,
	440, 1336,
	441, 1336,
	442, 1336,
	444, 1336,
	445, 1336,
	446, 1336,
	447, 1336,
	448, 1336,
	449, 1336,
	450, 1336,
	451, 1336,
	452, 1336,
	453, 1336,
	454, 1336,
	455, 1336,
	457, 1336,
	458, 1336,
	459, 1336,
	460, 1336,
	461, 1336,
	462, 1336,
	464, 1336,
	465, 1336,
	466, 1336,
	467, 1336,
	468, 1336,
	469, 1336,
	471, 1336,
	472, 1336,
	473, 1336,
	474, 1336,
	475, 1336,
	476, 1336,
	477, 1336,
	478, 1336,
	480, 1336,
	482, 1336,
	483, 1336,
	484, 1336,
	485, 1336,
	486, 1336,
	487, 1336,
	488, 1336,
	489, 1336,
	490, 1336,
	491, 1336,
	492, 1336,
	493, 1336,
	494, 1336,
	495, 1336,
	496, 1336,
	497, 1336,
	499, 1336,
	500, 1336,
	502, 1336,
	503, 1336,
	505, 1336,
	506, 1336,
	507, 1336,
	508, 1336,
	509, 1336,
	510, 1336,
	511, 1336,
	512, 1336,
	514, 1336,
	515, 1336,
	516, 1336,
	517, 1336,
	518, 1336,
	520, 1336,
	522, 1336,
	523, 1336,
	524, 1336,
	525, 1336,
	526, 1336,
	527, 1336,
	529, 1336,
	530, 1336,
	531, 1336,
	532, 1336,
	534, 1336,
	535, 1336,
	538, 1336,
	539, 1336,
	540, 1336,
	541, 1336,
	542, 1336,
	543, 1336,
	544, 1336,
	546, 1336,
	549, 1336,
	550, 1336,
	551, 1336,
	552, 1336,
	553, 1336,
	554, 1336,
	556, 1336,
	557, 1336,
	558, 1336,
	559, 1336,
	560, 1336,
	561, 1336,
	566, 1336,
	567, 1336,
	568, 1336,
	569, 1336,
	570, 1336,
	571, 1336,
	-2, 0,
	-1, 1643,
	1, 563,
	600, 563,
	602, 563,
	604, 563,
	-2, 1571,
	-1, 1646,
	4, 2773,
	11, 2773,
	12, 2773,
	14, 2773,
	15, 2773,
	16, 2773,
	17, 2773,
	18, 2773,
	19, 2773,
	21, 2773,
	22, 2773,
	23, 2773,
	24, 2773,
	25, 2773,
	26, 2773,
	27, 2773,
	29, 2773,
	30, 2773,
	33, 2773,
	34, 2773,
	36, 2773,
	38, 2773,
	41, 2773,
	42, 2773,
	44, 2773,
	45, 2773,
	46, 2773,
	47, 2773,
	48, 2773,
	49, 2773,
	50, 2773,
	51, 2773,
	53, 2773,
	54, 2773,
	55, 2773,
	56, 2773,
	58, 2773,
	59, 2773,
	60, 2773,
	61, 2773,
	62, 2773,
	63, 2773,
	64, 2773,
	67, 2773,
	68, 2773,
	69, 2773,
	70, 2773,
	71, 2773,
	73, 2773,
	74, 2773,
	75, 2773,
	76, 2773,
	79, 2773,
	80, 2773,
	81, 2773,
	82, 2773,
	83, 2773,
	84, 2773,
	85, 2773,
	86, 2773,
	88, 2773,
	89, 2773,
	90, 2773,
	91, 2773,
	92, 2773,
	94, 2773,
	95, 2773,
	96, 2773,
	97, 2773,
	98, 2773,
	99, 2773,
	100, 2773,
	101, 2773,
	103, 2773,
	104, 2773,
	105, 2773,
	106, 2773,
	107, 2773,
	108, 2773,
	109, 2773,
	117, 2773,
	118, 2773,
	119, 2773,
	120, 2773,
	121, 2773,
	123, 2773,
	124, 2773,
	125, 2773,
	126, 2773,
	128, 2773,
	129, 2773,
	130, 2773,
	132, 2773,
	133, 2773,
	134, 2773,
	136, 2773,
	137, 2773,
	138, 2773,
	141, 2773,
	142, 2773,
	143, 2773,
	145, 2773,
	146, 2773,
	148, 2773,
	149, 2773,
	150, 2773,
	152, 2773,
	153, 2773,
	154, 2773,
	155, 2773,
	156, 2773,
	157, 2773,
	158, 2773,
	159, 2773,
	160, 2773,
	161, 2773,
	162, 2773,
	163, 2773,
	164, 2773,
	165, 2773,
	166, 2773,
	167, 2773,
	168, 2773,
	172, 2773,
	173, 2773,
	174, 2773,
	175, 2773,
	176, 2773,
	177, 2773,
	178, 2773,
	179, 2773,
	182, 2773,
	183, 2773,
	185, 2773,
	186, 2773,
	187, 2773,
	190, 2773,
	191, 2773,
	192, 2773,
	193, 2773,
	194, 2773,
	195, 2773,
	196, 2773,
	197, 2773,
	198, 2773,
	199, 2773,
	200, 2773,
	201, 2773,
	202, 2773,
	203, 2773,
	204, 2773,
	206, 2773,
	207, 2773,
	209, 2773,
	210, 2773,
	212, 2773,
	213, 2773,
	214, 2773,
	215, 2773,
	216, 2773,
	217, 2773,
	218, 2773,
	219, 2773,
	220, 2773,
	221, 2773,
	222, 2773,
	223, 2773,
	224, 2773,
	225, 2773,
	226, 2773,
	227, 2773,
	228, 2773,
	229, 2773,
	231, 2773,
	232, 2773,
	234, 2773,
	235, 2773,
	236, 2773,
	238, 2773,
	239, 2773,
	240, 2773,
	241, 2773,
	243, 2773,
	245, 2773,
	246, 2773,
	247, 2773,
	248, 2773,
	249, 2773,
	250, 2773,
	251, 2773,
	252, 2773,
	253, 2773,
	254, 2773,
	256, 2773,
	257, 2773,
	258, 2773,
	259, 2773,
	260, 2773,
	261, 2773,
	262, 2773,
	263, 2773,
	265, 2773,
	266, 2773,
	267, 2773,
	269, 2773,
	270, 2773,
	271, 2773,
	272, 2773,
	273, 2773,
	274, 2773,
	276, 2773,
	277, 2773,
	278, 2773,
	279, 2773,
	280, 2773,
	281, 2773,
	282, 2773,
	285, 2773,
	286, 2773,
	287, 2773,
	288, 2773,
	289, 2773,
	290, 2773,
	291, 2773,
	292, 2773,
	293, 2773,
	294, 2773,
	295, 2773,
	296, 2773,
	297, 2773,
	298, 2773,
	299, 2773,
	300, 2773,
	301, 2773,
	302, 2773,
	303, 2773,
	304, 2773,
	305, 2773,
	306, 2773,
	307, 2773,
	308, 2773,
	309, 2773,
	310, 2773,
	311, 2773,
	313, 2773,
	314, 2773,
	315, 2773,
	316, 2773,
	317, 2773,
	318, 2773,
	319, 2773,
	320, 2773,
	321, 2773,
	322, 2773,
	323, 2773,
	324, 2773,
	325, 2773,
	326, 2773,
	327, 2773,
	328, 2773,
	329, 2773,
	331, 2773,
	332, 2773,
	335, 2773,
	336, 2773,
	337, 2773,
	339, 2773,
	340, 2773,
	341, 2773,
	342, 2773,
	343, 2773,
	346, 2773,
	350, 2773,
	351, 2773,
	352, 2773,
	353, 2773,
	355, 2773,
	356, 2773,
	357, 2773,
	359, 2773,
	361, 2773,
	362, 2773,
	363, 2773,
	364, 2773,
	365, 2773,
	366, 2773,
	367, 2773,
	368, 2773,
	369, 2773,
	370, 2773,
	371, 2773,
	372, 2773,
	373, 2773,
	375, 2773,
	376, 2773,
	377, 2773,
	378, 2773,
	379, 2773,
	380, 2773,
	381, 2773,
	382, 2773,
	383, 2773,
	384, 2773,
	385, 2773,
	386, 2773,
	387, 2773,
	388, 2773,
	389, 2773,
	391, 2773,
	392, 2773,
	394, 2773,
	395, 2773,
	396, 2773,
	397, 2773,
	398, 2773,
	399, 2773,
	400, 2773,
	401, 2773,
	402, 2773,
	403, 2773,
	404, 2773,
	405, 2773,
	406, 2773,
	408, 2773,
	410, 2773,
	411, 2773,
	412, 2773,
	418, 2773,
	419, 2773,
	420, 2773,
	421, 2773,
	422, 2773,
	423, 2773,
	424, 2773,
	425, 2773,
	426, 2773,
	427, 2773,
	428, 2773,
	429, 2773,
	430, 2773,
	432, 2773,
	433, 2773,
	434, 2773,
	435, 2773,
	436, 2773,
	437, 2773,
	438, 2773,
	439, 2773,
	440, 2773,
	441, 2773,
	442, 2773,
	443, 2773,
	444, 2773,
	445, 2773,
	446, 2773,
	447, 2773,
	448, 2773,
	449, 2773,
	450, 2773,
	451, 2773,
	452, 2773,
	453, 2773,
	454, 2773,
	455, 2773,
	457, 2773,
	458, 2773,
	459, 2773,
	460, 2773,
	461, 2773,
	462, 2773,
	464, 2773,
	465, 2773,
	466, 2773,
	467, 2773,
	468, 2773,
	469, 2773,
	470, 2773,
	471, 2773,
	472, 2773,
	473, 2773,
	474, 2773,
	475, 2773,
	476, 2773,
	477, 2773,
	478, 2773,
	480, 2773,
	482, 2773,
	483, 2773,
	484, 2773,
	485, 2773,
	486, 2773,
	487, 2773,
	488, 2773,
	489, 2773,
	490, 2773,
	491, 2773,
	492, 2773,
	493, 2773,
	494, 2773,
	495, 2773,
	496, 2773,
	497, 2773,
	499, 2773,
	500, 2773,
	501, 2773,
	502, 2773,
	503, 2773,
	505, 2773,
	506, 2773,
	507, 2773,
	508, 2773,
	509, 2773,
	510, 2773,
	511, 2773,
	512, 2773,
	514, 2773,
	515, 2773,
	516, 2773,
	517, 2773,
	518, 2773,
	520, 2773,
	522, 2773,
	523, 2773,
	524, 2773,
	525, 2773,
	526, 2773,
	527, 2773,
	529, 2773,
	530, 2773,
	531, 2773,
	532, 2773,
	534, 2773,
	535, 2773,
	538, 2773,
	539, 2773,
	540, 2773,
	541, 2773,
	542, 2773,
	543, 2773,
	544, 2773,
	546, 2773,
	549, 2773,
	550, 2773,
	551, 2773,
	552, 2773,
	553, 2773,
	554, 2773,
	556, 2773,
	557, 2773,
	558, 2773,
	559, 2773,
	560, 2773,
	561, 2773,
	566, 2773,
	567, 2773,
	568, 2773,
	569, 2773,
	570, 2773,
	571, 2773,
	572, 2773,
	574, 2773,
	582, 2773,
	583, 2773,
	584, 2773,
	585, 2773,
	586, 2773,
	587, 2773,
	589, 2773,
	590, 2773,
	591, 2773,
	592, 2773,
	593, 2773,
	594, 2773,
	595, 2773,
	596, 2773,
	597, 2773,
	599, 2773,
	602, 2773,
	603, 2773,
	605, 2773,
	606, 2773,
	-2, 0,
	-1, 1651,
	189, 2654,
	519, 2654,
	584, 2654,
	603, 2654,
	-2, 0,
	-1, 1704,
	396, 898,
	462, 898,
	503, 898,
	524, 898,
	-2, 0,
	-1, 1715,
	1, 1408,
	600, 1408,
	602, 1408,
	604, 1408,
	-2, 0,
	-1, 1732,
	1, 893,
	600, 893,
	602, 893,
	604, 893,
	-2, 0,
	-1, 1733,
	1, 937,
	600, 937,
	602, 937,
	604, 937,
	-2, 0,
	-1, 1734,
	1, 945,
	600, 945,
	602, 945,
	604, 945,
	-2, 0,
	-1, 1737,
	1, 902,
	600, 902,
	602, 902,
	604, 902,
	-2, 0,
	-1, 1739,
	1, 908,
	600, 908,
	602, 908,
	604, 908,
	-2, 0,
	-1, 1742,
	1, 904,
	600, 904,
	602, 904,
	604, 904,
	-2, 0,
	-1, 1747,
	1, 918,
	600, 918,
	602, 918,
	604, 918,
	-2, 0,
	-1, 1778,
	1, 2637,
	600, 2637,
	602, 2637,
	603, 2637,
	604, 2637,
	-2, 0,
	-1, 1782,
	1, 992,
	600, 992,
	602, 992,
	604, 992,
	-2, 0,
	-1, 1799,
	1, 1458,
	604, 1458,
	-2, 1463,
	-1, 1802,
	171, 1614,
	184, 1614,
	275, 1614,
	344, 1614,
	-2, 1552,
	-1, 1902,
	151, 1573,
	171, 1573,
	184, 1573,
	242, 1573,
	275, 1573,
	344, 1573,
	354, 1573,
	536, 1573,
	-2, 2024,
	-1, 1963,
	602, 2199,
	-2, 0,
	-1, 1998,
	151, 1573,
	171, 1573,
	184, 1573,
	242, 1573,
	275, 1573,
	344, 1573,
	354, 1573,
	536, 1573,
	-2, 1706,
	-1, 2037,
	519, 2651,
	603, 2651,
	606, 2651,
	-2, 0,
	-1, 2054,
	601, 1847,
	-2, 1835,
	-1, 2086,
	189, 2651,
	603, 2651,
	606, 2651,
	-2, 0,
	-1, 2128,
	1, 704,
	604, 704,
	-2, 1463,
	-1, 2273,
	224, 268,
	-2, 2347,
	-1, 2274,
	224, 269,
	-2, 320,
	-1, 2383,
	1, 895,
	600, 895,
	602, 895,
	604, 895,
	-2, 0,
	-1, 2384,
	1, 939,
	600, 939,
	602, 939,
	604, 939,
	-2, 0,
	-1, 2385,
	1, 947,
	600, 947,
	602, 947,
	604, 947,
	-2, 0,
	-1, 2386,
	1, 994,
	600, 994,
	602, 994,
	604, 994,
	-2, 0,
	-1, 2427,
	1, 920,
	600, 920,
	602, 920,
	604, 920,
	-2, 0,
	-1, 2447,
	1, 977,
	600, 977,
	602, 977,
	604, 977,
	-2, 0,
	-1, 2494,
	441, 1641,
	442, 1641,
	-2, 1880,
	-1, 2525,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1900,
	-1, 2526,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1901,
	-1, 2527,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1902,
	-1, 2528,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1903,
	-1, 2529,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1904,
	-1, 2530,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1905,
	-1, 2531,
	95, 0,
	256, 0,
	257, 0,
	586, 0,
	587, 0,
	-2, 1906,
	-1, 2532,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1907,
	-1, 2544,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1919,
	-1, 2545,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1920,
	-1, 2546,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1921,
	-1, 2550,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1928,
	-1, 2556,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1932,
	-1, 2558,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1940,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1941,
	-1, 2560,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1942,
	-1, 2561,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1943,
	-1, 2735,
	5, 2351,
	189, 2210,
	601, 2348,
	-2, 2339,
	-1, 2736,
	189, 2211,
	-2, 2724,
	-1, 2737,
	189, 2212,
	-2, 2540,
	-1, 2738,
	189, 2213,
	-2, 2421,
	-1, 2739,
	189, 2214,
	-2, 2478,
	-1, 2740,
	189, 2215,
	-2, 2525,
	-1, 2741,
	189, 2216,
	-2, 2649,
	-1, 2742,
	189, 2217,
	-2, 2007,
	-1, 2813,
	1, 1707,
	2, 1707,
	106, 1707,
	151, 1707,
	171, 1707,
	184, 1707,
	190, 1707,
	208, 1707,
	211, 1707,
	238, 1707,
	242, 1707,
	253, 1707,
	271, 1707,
	275, 1707,
	314, 1707,
	344, 1707,
	348, 1707,
	354, 1707,
	431, 1707,
	435, 1707,
	536, 1707,
	547, 1707,
	563, 1707,
	564, 1707,
	565, 1707,
	575, 1707,
	600, 1707,
	602, 1707,
	604, 1707,
	606, 1707,
	-2, 1706,
	-1, 2826,
	601, 2320,
	-2, 2334,
	-1, 2828,
	1, 337,
	563, 337,
	-2, 1600,
	-1, 2858,
	601, 1846,
	-2, 1836,
	-1, 3048,
	1, 1311,
	426, 1275,
	464, 1275,
	578, 1275,
	600, 1311,
	602, 1311,
	604, 1311,
	-2, 1600,
	-1, 3223,
	349, 1644,
	-2, 2763,
	-1, 3224,
	349, 1645,
	-2, 2634,
	-1, 3228,
	441, 2276,
	442, 2276,
	-2, 2005,
	-1, 3229,
	441, 2280,
	442, 2280,
	-2, 2006,
	-1, 3230,
	441, 2277,
	442, 2277,
	-2, 2005,
	-1, 3231,
	441, 2281,
	442, 2281,
	-2, 2006,
	-1, 3244,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1930,
	-1, 3245,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1934,
	-1, 3251,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1936,
	-1, 3477,
	1, 699,
	600, 699,
	602, 699,
	604, 699,
	-2, 1463,
	-1, 3659,
	43, 2311,
	-2, 1064,
	-1, 3664,
	1, 1311,
	600, 1311,
	602, 1311,
	604, 1311,
	-2, 1600,
	-1, 3767,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1938,
	-1, 3774,
	247, 0,
	249, 0,
	335, 0,
	-2, 1957,
	-1, 3842,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1986,
	-1, 3843,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1987,
	-1, 3844,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1988,
	-1, 3848,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1992,
	-1, 3849,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1993,
	-1, 3850,
	14, 0,
	15, 0,
	16, 0,
	582, 0,
	583, 0,
	584, 0,
	-2, 1994,
	-1, 3898,
	601, 2321,
	-2, 2335,
	-1, 4088,
	603, 2880,
	-2, 1526,
	-1, 4142,
	247, 0,
	249, 0,
	335, 0,
	-2, 1958,
	-1, 4145,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1961,
	-1, 4146,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1963,
	-1, 4248,
	603, 2336,
	-2, 1346,
	-1, 4407,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1962,
	-1, 4408,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	221, 0,
	224, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 1964,
	-1, 4419,
	247, 0,
	-2, 1997,
	-1, 4602,
	247, 0,
	-2, 1998,
	-1, 4811,
	50, 0,
	221, 0,
	274, 0,
	470, 0,
	572, 0,
	585, 0,
	-2, 2727,
}

const sqlPrivate = 57344

const sqlLast = 133824

var sqlAct = [...]int{
	277, 4751, 2097, 4994, 4637, 3648, 3133, 4925, 3382, 3120,
	4645, 4872, 4810, 4856, 4798, 2921, 4821, 4470, 4938, 4688,
	4709, 3647, 2270, 4761, 4782, 4764, 1263, 4822, 4741, 4750,
	4125, 4823, 4879, 4572, 1345, 1541, 4452, 4244, 2988, 4548,
	2347, 2177, 2768, 4535, 2963, 3807, 4519, 4606, 4369, 4364,
	4324, 4428, 2504, 4809, 3759, 4298, 3495, 4475, 3090, 3498,
	1140, 4396, 1568, 4072, 3681, 2359, 1094, 4080, 4353, 4557,
	4351, 4344, 4673, 714, 1338, 825, 4000, 4245, 4225, 2110,
	2922, 3237, 2573, 3632, 1669, 1811, 4374, 2512, 1274, 1085,
	2357, 4046, 4029, 3501, 3675, 3558, 2505, 2041, 1406, 4424,
	4027, 3007, 3145, 825, 785, 2185, 3109, 3621, 3712, 3637,
	3079, 2022, 3714, 3636, 1499, 3901, 3104, 1340, 1151, 3639,
	3428, 3614, 3106, 3613, 2355, 3405, 4124, 3435, 725, 3397,
	904, 3388, 3135, 3365, 1712, 4181, 3140, 3121, 2259, 3386,
	1973, 3055, 2257, 2197, 900, 4, 1093, 182, 4857, 2213,
	3868, 3520, 1949, 4607, 1910, 3364, 2806, 2509, 1880, 2586,
	3221, 1147, 1506, 2808, 3083, 820, 1607, 895, 3139, 1254,
	1194, 111, 2653, 1343, 2258, 3024, 2234, 2805, 2241, 781,
	2253, 1144, 2169, 3091, 271, 2786, 1387, 2962, 1331, 1799,
	1146, 2651, 2165, 2642, 270, 1149, 1317, 2108, 2493, 2320,
	2476, 2765, 1974, 2570, 2155, 2474, 2841, 1667, 3114, 758,
	1644, 1142, 2307, 701, 1610, 4710, 2908, 723, 1570, 826,
	2230, 827, 973, 2840, 3640, 4021, 822, 1374, 2645, 1983,
	2776, 1257, 2795, 1236, 1993, 2731, 1944, 1990, 2042, 2697,
	2623, 182, 1894, 1812, 1271, 2475, 1813, 2477, 191, 1747,
	766, 777, 1732, 192, 2267, 1253, 1328, 2333, 1642, 831,
	1635, 1537, 2306, 4873, 1507, 4926, 718, 2498, 1125, 834,
	44, 1259, 43, 1123, 1234, 3274, 41, 32, 715, 30,
	726, 28, 1818, 815, 741, 1547, 994, 831, 1798, 876,
	3882, 3268, 3883, 3384, 2099, 5005, 2099, 834, 877, 2785,
	2099, 4997, 2099, 4986, 1269, 3700, 2099, 2785, 2099, 4850,
	4985, 4959, 4957, 269, 2785, 4474, 4474, 4898, 4858, 4444,
	4847, 2279, 4859, 1738, 2785, 4441, 4845, 4842, 4839, 921,
	2785, 4843, 4840, 4807, 4806, 4805, 3690, 2279, 2279, 3150,
	4796, 4794, 1826, 1827, 4474, 4474, 3691, 4791, 4786, 4785,
	2120, 4560, 4474, 4474, 4759, 4729, 4722, 4721, 4474, 2849,
	2785, 2785, 4714, 4687, 4684, 1090, 2279, 2279, 4474, 4667,
	4604, 1089, 1829, 4314, 2849, 1251, 4586, 4550, 4493, 4492,
	4109, 4551, 2279, 2279, 4481, 4480, 163, 4473, 2279, 4474,
	3445, 4474, 4205, 3462, 73, 1383, 46, 45, 4435, 1237,
	1237, 1383, 2279, 1089, 2869, 1266, 4409, 1828, 1678, 3460,
	2849, 74, 2117, 1079, 158, 4385, 4382, 4293, 4271, 3150,
	3700, 2785, 2785, 3700, 4144, 4096, 2356, 79, 2849, 3707,
	2279, 1070, 3872, 2120, 1265, 4090, 1069, 4043, 67, 3707,
	3893, 4044, 3891, 3236, 3894, 48, 3892, 160, 3875, 3791,
	3787, 2778, 2785, 2279, 2785, 3335, 3336, 3706, 3381, 3376,
	3375, 3707, 2785, 2785, 2785, 47, 3326, 88, 1084, 3324,
	3327, 3316, 3314, 3325, 3285, 3317, 2785, 2117, 2785, 3283,
	3149, 1288, 3131, 3130, 3150, 3284, 2343, 2343, 2892, 2848,
	2648, 2120, 2785, 2849, 50, 68, 2845, 2838, 2830, 2785,
	2784, 2785, 2279, 51, 2785, 1549, 73, 1240, 57, 1241,
	2342, 1238, 161, 1834, 2343, 1295, 2120, 1267, 4730, 4608,
	49, 4599, 110, 74, 4587, 4560, 241, 3150, 94, 107,
	3350, 3872, 2777, 4362, 4314, 2117, 1289, 2120, 4272, 79,
	4109, 4045, 2997, 2190, 2907, 2134, 2098, 2114, 3085, 2278,
	3017, 2905, 1969, 1536, 3977, 3762, 3736, 1991, 2246, 3335,
	3336, 3692, 2822, 2821, 1513, 1714, 1826, 1827, 1289, 2820,
	52, 2819, 2818, 1242, 243, 1239, 1078, 241, 1077, 88,
	3693, 4199, 2649, 1076, 1075, 1074, 1073, 1072, 95, 1068,
	1549, 1067, 1066, 1065, 1826, 1827, 1829, 1859, 1860, 1861,
	1870, 1871, 1872, 3194, 1513, 1064, 1063, 1062, 1061, 1060,
	1059, 1058, 1057, 1056, 1055, 1054, 1863, 1857, 1053, 1052,
	902, 4156, 242, 2785, 1829, 243, 3341, 1051, 1033, 971,
	970, 1828, 49, 1876, 110, 235, 969, 968, 967, 966,
	94, 107, 965, 964, 236, 963, 962, 961, 960, 959,
	1882, 958, 957, 2680, 956, 3273, 1826, 1827, 2100, 1828,
	2100, 955, 954, 2650, 2100, 2647, 2100, 953, 952, 1848,
	2100, 193, 2100, 242, 4376, 951, 950, 949, 1845, 1857,
	2419, 948, 947, 946, 945, 944, 1829, 943, 942, 941,
	940, 939, 938, 937, 936, 1879, 925, 924, 923, 919,
	95, 918, 911, 910, 909, 894, 893, 850, 849, 848,
	847, 838, 1882, 837, 836, 835, 801, 792, 791, 94,
	790, 1828, 193, 772, 265, 4442, 264, 263, 262, 261,
	3341, 1848, 260, 3351, 3916, 99, 2117, 1834, 259, 258,
	1845, 257, 256, 255, 254, 253, 252, 251, 250, 1561,
	249, 248, 247, 53, 246, 1851, 1852, 1853, 1854, 1350,
	1149, 3099, 245, 3690, 244, 1834, 3887, 3708, 56, 3431,
	3296, 3379, 3279, 59, 1660, 3270, 3174, 241, 3065, 2853,
	2827, 2812, 2678, 69, 2466, 2163, 2119, 1149, 1149, 1149,
	58, 190, 102, 2664, 1952, 106, 2017, 1921, 2662, 54,
	1793, 1951, 1912, 162, 1867, 1409, 1543, 1877, 1879, 1409,
	1289, 55, 1555, 3380, 1856, 1858, 1350, 1851, 1852, 1853,
	1854, 241, 2652, 1994, 1952, 243, 2117, 1834, 1955, 62,
	1873, 1951, 1874, 4832, 153, 4831, 2120, 1395, 2879, 1843,
	1844, 1149, 2098, 1149, 2117, 1149, 1273, 99, 2114, 159,
	2469, 1825, 1573, 1391, 1392, 1393, 4828, 1865, 1950, 3335,
	3336, 4808, 241, 4793, 4611, 4695, 4596, 4423, 2777, 243,
	4465, 1378, 1849, 242, 4383, 4590, 1856, 1858, 1350, 4361,
	73, 4211, 4378, 1740, 4588, 1520, 235, 3352, 4179, 1515,
	3335, 3336, 4178, 4172, 157, 236, 4171, 74, 1573, 4170,
	4163, 1843, 1844, 190, 102, 1573, 4162, 106, 4160, 194,
	243, 4155, 1879, 79, 1149, 4152, 1149, 242, 1875, 4151,
	4042, 1573, 193, 1830, 1831, 1832, 1833, 1835, 1836, 1149,
	235, 1149, 1289, 241, 1849, 3920, 1864, 2646, 3919, 236,
	4056, 903, 3918, 3897, 3863, 3862, 153, 1879, 1682, 1322,
	1325, 3861, 3783, 88, 1616, 1619, 1549, 3778, 242, 1370,
	1913, 3426, 1911, 1335, 1560, 3372, 193, 1912, 2862, 3,
	1372, 235, 3117, 1402, 3363, 1496, 1501, 3334, 3331, 1573,
	236, 243, 3335, 3336, 3330, 3353, 3354, 3355, 1525, 3328,
	3323, 3335, 3336, 3322, 902, 3321, 1504, 3318, 3315, 1149,
	1914, 1919, 1149, 1855, 4140, 3295, 157, 193, 110, 1879,
	3278, 3101, 241, 831, 94, 107, 3271, 3269, 3132, 3335,
	3336, 194, 2813, 834, 2635, 153, 1850, 1554, 1364, 242,
	3341, 1825, 1250, 3346, 3344, 3345, 3337, 3338, 3339, 3340,
	3342, 3343, 235, 2323, 2286, 182, 182, 1824, 1539, 1605,
	1538, 236, 2284, 1868, 3452, 5000, 4057, 3350, 3975, 4947,
	243, 3341, 4946, 1683, 4871, 1855, 1647, 1649, 4869, 1090,
	1339, 1622, 1275, 3809, 95, 4752, 3335, 3336, 193, 4672,
	1548, 3377, 4658, 4653, 1881, 4652, 4651, 4631, 1850, 4630,
	4628, 4610, 4609, 4584, 2576, 4570, 4567, 4566, 4561, 4546,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 242, 3335,
	3336, 4545, 3353, 3354, 3355, 4489, 1645, 4460, 4421, 4404,
	1502, 235, 4403, 1519, 1339, 4347, 4340, 2582, 1378, 4337,
	236, 1378, 4315, 1149, 241, 4377, 4198, 3351, 1756, 1149,
	3337, 3338, 3339, 3340, 3342, 3343, 1881, 4177, 1638, 1832,
	1833, 1835, 1836, 3341, 1664, 1866, 2851, 193, 4110, 1803,
	3963, 3962, 3341, 3945, 1356, 1840, 1841, 1847, 1869, 1846,
	1842, 3944, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 3942, 243, 3878, 3350, 4166, 3866, 3773, 1899, 4165,
	3341, 3709, 3701, 1339, 1339, 4057, 3667, 1688, 3423, 3581,
	1659, 2847, 3533, 241, 1797, 3500, 3454, 3300, 3299, 1092,
	3294, 3260, 1879, 3078, 3100, 1677, 1958, 1957, 3357, 1826,
	1827, 99, 1956, 1953, 1945, 1943, 2860, 2859, 241, 2824,
	242, 1846, 1842, 2817, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 235, 1149, 1149, 1149, 3341, 2783, 1829,
	1149, 243, 236, 2679, 2660, 1898, 2016, 1271, 1972, 1271,
	3351, 1967, 1549, 1966, 1965, 1964, 241, 1705, 1963, 3351,
	1962, 1961, 1960, 1959, 1409, 1940, 243, 190, 102, 193,
	3341, 106, 1741, 1939, 1828, 1149, 1938, 1937, 825, 1350,
	1936, 3352, 1980, 1935, 2059, 825, 1350, 3351, 1350, 242,
	1934, 241, 1933, 1804, 1090, 1932, 1931, 241, 1930, 1929,
	1928, 2020, 235, 1927, 243, 903, 1926, 1269, 1925, 1269,
	153, 236, 1914, 2038, 242, 2104, 1971, 2032, 2106, 1800,
	2087, 1808, 2089, 1807, 2111, 1879, 1900, 235, 2113, 1897,
	2026, 2028, 1070, 2116, 1879, 1802, 236, 1069, 193, 243,
	1892, 1954, 1363, 1293, 3351, 243, 1636, 1284, 1350, 4613,
	2027, 4612, 242, 4350, 1149, 4207, 4148, 3915, 3890, 3881,
	1821, 1822, 1879, 193, 3282, 235, 2815, 1641, 4209, 4274,
	157, 3914, 2677, 1913, 236, 1977, 1978, 3351, 1149, 3450,
	2001, 1895, 2122, 2663, 2154, 194, 1409, 242, 2661, 1237,
	3335, 3336, 241, 242, 2179, 2154, 2126, 182, 3696, 2012,
	235, 193, 2053, 1390, 3352, 4944, 235, 1388, 1266, 236,
	1266, 4937, 2989, 3352, 4654, 236, 1946, 1947, 2154, 1879,
	1090, 2152, 1383, 4562, 4553, 4824, 4552, 3346, 3344, 3345,
	3337, 3338, 3339, 3340, 3342, 3343, 3116, 1265, 4591, 1265,
	243, 3352, 193, 39, 2161, 4381, 4318, 4589, 1378, 4317,
	4316, 2025, 1879, 4894, 2056, 2021, 2125, 4273, 4201, 4464,
	4115, 4114, 831, 3339, 3340, 3342, 3343, 4113, 1389, 831,
	2967, 4112, 834, 4111, 3885, 3884, 3711, 3710, 3703, 834,
	1999, 1935, 1992, 3702, 2002, 4892, 4558, 4060, 242, 1935,
	1994, 3760, 1952, 1704, 1795, 2047, 1384, 1383, 3352, 1951,
	1970, 235, 2224, 3989, 2033, 3320, 3567, 2243, 2102, 3319,
	236, 2082, 3242, 3536, 2949, 1386, 2140, 3960, 1996, 3502,
	1267, 2011, 1267, 2010, 241, 1573, 1573, 2009, 2007, 1049,
	2006, 3352, 2005, 3650, 1409, 3649, 1757, 193, 4050, 1923,
	3022, 1383, 2260, 3347, 3348, 3349, 2039, 2128, 2375, 4915,
	3346, 3344, 3345, 3337, 3338, 3339, 3340, 3342, 3343, 2348,
	3344, 3345, 3337, 3338, 3339, 3340, 3342, 3343, 1713, 4549,
	4854, 4425, 243, 4835, 1050, 4820, 3622, 3146, 1714, 2261,
	4064, 4039, 3997, 3288, 1519, 3384, 3986, 1920, 3968, 3345,
	3337, 3338, 3339, 3340, 3342, 3343, 2324, 3733, 241, 3475,
	2220, 2643, 2228, 2353, 3811, 2858, 2124, 2648, 241, 2271,
	2276, 2238, 3014, 1968, 1948, 1380, 3630, 1640, 2317, 1615,
	242, 1249, 1532, 1359, 4844, 3003, 1321, 4841, 3011, 3686,
	3009, 4829, 1519, 235, 3936, 3605, 3451, 4646, 1692, 1573,
	4365, 1573, 236, 1573, 2157, 2147, 243, 3337, 3338, 3339,
	3340, 3342, 3343, 241, 2223, 2129, 243, 4758, 4624, 2184,
	4484, 1573, 1573, 4456, 3505, 3955, 3113, 4895, 4487, 193,
	3347, 3348, 3349, 2196, 1573, 4483, 4896, 3346, 3344, 3345,
	3337, 3338, 3339, 3340, 3342, 3343, 1573, 3002, 1573, 1573,
	1573, 4462, 2265, 1641, 242, 2263, 2264, 4830, 1385, 2649,
	1029, 243, 4930, 3754, 242, 2994, 2947, 235, 2852, 4515,
	2218, 831, 825, 4261, 2313, 3479, 236, 235, 4010, 1582,
	4259, 834, 1590, 1755, 2229, 1047, 236, 2374, 4256, 1045,
	1043, 1041, 2484, 1038, 1149, 2190, 2141, 1390, 2893, 2433,
	4996, 4662, 2431, 193, 4508, 2318, 1539, 4495, 1538, 242,
	4307, 2330, 1534, 193, 4306, 4291, 1381, 4290, 2217, 2911,
	2214, 4008, 235, 2233, 4007, 1382, 1373, 2996, 2946, 1149,
	2237, 236, 3999, 3110, 2909, 3993, 2351, 3992, 2911, 3983,
	2650, 4240, 2647, 3982, 1384, 4009, 2231, 3980, 2277, 2468,
	1754, 2338, 2482, 2909, 3173, 1836, 2379, 4402, 193, 3979,
	3967, 3931, 1389, 3930, 3057, 1149, 2188, 1149, 1591, 3611,
	1090, 3610, 1090, 2484, 1149, 4233, 3572, 2059, 2059, 1409,
	1690, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1645, 1149, 1645,
	1149, 1149, 1149, 1149, 2299, 2367, 2340, 2327, 2298, 2361,
	4234, 3565, 3502, 2482, 2480, 1638, 3444, 2335, 1736, 2335,
	2332, 2336, 4485, 2261, 3481, 4457, 1149, 1088, 2486, 2348,
	1149, 1149, 1753, 1364, 1390, 1384, 831, 2344, 1149, 2345,
	2473, 3293, 1149, 1380, 1149, 1149, 834, 3292, 3291, 4931,
	2146, 2145, 1409, 2316, 2154, 2156, 889, 2232, 1149, 1149,
	1149, 1149, 3535, 3290, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 2624, 2625, 4255, 2053, 2053, 2366, 2404, 2652,
	1383, 2971, 2483, 1640, 2384, 3246, 2624, 2640, 2383, 4257,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1389,
	2394, 4275, 3020, 1149, 1736, 4524, 3019, 3016, 2964, 2965,
	2447, 3005, 2444, 2688, 764, 1271, 3343, 2991, 1087, 2964,
	2965, 2983, 1409, 2982, 764, 1735, 1385, 2056, 2056, 2427,
	1706, 1271, 2734, 2734, 2748, 2977, 2624, 2232, 2232, 2769,
	2771, 2643, 2964, 2965, 2976, 2775, 2385, 1149, 1409, 2975,
	2954, 2497, 2953, 2915, 1380, 2481, 2232, 2839, 2557, 1982,
	2275, 1801, 890, 2483, 2924, 2445, 2693, 1535, 2047, 2047,
	1733, 2692, 3566, 2149, 2514, 1269, 4932, 2866, 1628, 2472,
	1627, 2471, 2470, 2843, 1381, 2485, 2478, 2588, 1626, 2825,
	1625, 1269, 2446, 1382, 2646, 2510, 2511, 1070, 2639, 1090,
	1070, 1070, 2501, 1794, 2189, 2502, 2503, 2459, 4401, 1090,
	2188, 1735, 1586, 1090, 1307, 4217, 4229, 2198, 1035, 2443,
	3734, 4230, 2951, 2800, 4895, 2464, 2371, 1791, 1685, 3013,
	1089, 4235, 1734, 2186, 2297, 2874, 2481, 1385, 713, 1714,
	2202, 2878, 1599, 1986, 3939, 2456, 2792, 2900, 2690, 4639,
	2226, 1350, 1350, 2691, 2572, 2889, 2694, 2391, 2695, 2696,
	1766, 3012, 2001, 1237, 708, 2190, 2584, 2182, 2572, 1770,
	3153, 1714, 2829, 4232, 1604, 4933, 1266, 3010, 4216, 3008,
	2927, 3189, 2938, 2842, 2637, 2437, 2888, 2425, 3234, 2151,
	4236, 1989, 1266, 1752, 1409, 1381, 2187, 2199, 3219, 2791,
	4961, 4258, 1090, 1806, 1382, 1265, 1984, 3478, 2937, 2580,
	2814, 3952, 2388, 2337, 4826, 2846, 2578, 182, 1702, 2882,
	2458, 1265, 1279, 1691, 1987, 2183, 2743, 2150, 2730, 2059,
	2382, 3743, 2865, 2773, 2760, 3200, 2188, 1281, 2781, 2782,
	3964, 2652, 763, 3742, 1355, 2793, 1686, 4941, 2854, 1362,
	2797, 2798, 763, 4525, 1378, 2799, 1954, 2804, 3191, 2910,
	2810, 2811, 1999, 4305, 1276, 4523, 2885, 1985, 1383, 1611,
	2392, 4521, 799, 4641, 1749, 2170, 934, 1409, 3981, 2012,
	2171, 3978, 2914, 2215, 2914, 4935, 1039, 3800, 1267, 3923,
	1039, 1039, 1040, 1350, 1039, 3910, 3617, 3609, 3563, 2432,
	2004, 3399, 2430, 3015, 1267, 3797, 2203, 2974, 4018, 1282,
	2916, 3552, 1086, 2952, 1149, 1149, 2861, 1149, 4520, 4908,
	4231, 2884, 1609, 3233, 2465, 1546, 4917, 1553, 2873, 1559,
	3950, 2881, 2876, 3257, 2877, 1946, 1947, 2864, 3226, 3227,
	2554, 825, 2891, 1350, 2868, 4522, 2913, 2053, 3203, 2190,
	4916, 765, 2883, 2972, 2890, 3006, 2283, 2282, 2221, 4241,
	4242, 765, 2568, 3255, 892, 891, 4019, 2837, 2189, 3553,
	2956, 3082, 2204, 2205, 1573, 3544, 4962, 1280, 1339, 1383,
	4884, 2941, 2926, 3124, 4253, 797, 3798, 1573, 1988, 1573,
	4827, 2894, 2566, 2950, 2172, 2955, 3141, 2200, 1658, 2056,
	1663, 4130, 2216, 3052, 4129, 2210, 1573, 3737, 2973, 4017,
	3618, 2176, 3551, 1676, 2193, 1681, 2455, 1767, 2929, 2932,
	3683, 2966, 2968, 2969, 2970, 2919, 3060, 1339, 3197, 2981,
	1350, 3062, 1350, 3545, 3684, 2945, 3154, 3155, 3021, 3097,
	2047, 2201, 2244, 3049, 3050, 1588, 2652, 3161, 3162, 3163,
	887, 3965, 886, 2912, 1149, 2987, 4736, 4447, 1339, 1339,
	2187, 3053, 4726, 2211, 3175, 2980, 3176, 2957, 2099, 2990,
	1348, 3147, 2194, 2256, 2979, 3615, 3543, 2985, 2978, 3489,
	1739, 4934, 3202, 4647, 2995, 2170, 2173, 2178, 3001, 4669,
	2171, 2457, 2244, 831, 2189, 4825, 2240, 1585, 1611, 1306,
	3398, 4939, 3171, 834, 3051, 3252, 2209, 4800, 3058, 4801,
	3138, 2552, 709, 3199, 2555, 2192, 3151, 3683, 3480, 182,
	1149, 3144, 3156, 2239, 3157, 831, 1149, 1149, 1539, 2925,
	3063, 2255, 3253, 3126, 2562, 834, 3258, 3143, 2158, 2159,
	3128, 2390, 4640, 3076, 2750, 2652, 3584, 3093, 1764, 762,
	3177, 3086, 1502, 1715, 3168, 1533, 2563, 2235, 1768, 2227,
	3517, 2564, 4334, 2206, 2551, 2569, 3205, 3087, 3207, 2174,
	3179, 1291, 3181, 4883, 3183, 3119, 3185, 3186, 2911, 1941,
	2170, 2244, 1149, 1149, 3129, 2171, 2187, 3448, 1149, 1519,
	4251, 2225, 1645, 2930, 710, 1277, 3148, 4126, 2180, 3195,
	4414, 1149, 1149, 798, 2172, 4254, 2896, 1149, 1149, 3127,
	3170, 4940, 3248, 1149, 3527, 2236, 3108, 3516, 2180, 3201,
	1036, 2176, 2212, 4864, 2426, 3180, 2571, 3182, 2898, 3184,
	1687, 4905, 2225, 4865, 4769, 3058, 3521, 2247, 2207, 4285,
	3178, 4398, 2254, 711, 1765, 712, 731, 4942, 1278, 2227,
	4724, 3951, 800, 1769, 4032, 1891, 796, 2828, 1149, 1149,
	1149, 935, 2579, 4030, 1149, 2899, 3298, 1805, 3249, 3214,
	2796, 4963, 3525, 2809, 1149, 1826, 1827, 2387, 3208, 1089,
	2222, 3210, 1701, 1703, 3225, 2224, 2897, 3490, 926, 1986,
	3523, 1149, 3813, 839, 4725, 2381, 2173, 2178, 1857, 2172,
	3281, 3276, 3277, 3216, 3616, 1829, 3280, 3215, 2634, 4354,
	4950, 4349, 912, 1361, 927, 3526, 2176, 4120, 3220, 846,
	4948, 4310, 3254, 2219, 2497, 4032, 3911, 3235, 1296, 4355,
	4131, 1882, 3256, 3756, 4030, 3217, 1519, 1989, 917, 1720,
	1828, 4689, 4774, 4708, 2008, 3272, 4034, 1339, 4569, 4309,
	4252, 2565, 2794, 4308, 3522, 2226, 2248, 2986, 4078, 3671,
	2553, 2567, 2836, 2305, 1979, 1294, 1287, 700, 4055, 1816,
	1987, 4127, 2500, 2191, 1815, 2142, 4882, 4033, 1090, 2174,
	3852, 4397, 4335, 1149, 1149, 1149, 1149, 1810, 3247, 4482,
	4578, 2173, 2178, 1149, 1149, 1149, 3496, 4175, 1149, 1815,
	1519, 2175, 1519, 1081, 4623, 1021, 1107, 3436, 1149, 1271,
	1409, 4968, 2139, 4079, 1149, 4003, 1149, 4034, 3984, 3937,
	3391, 3392, 3935, 3796, 2168, 1271, 3672, 3663, 2180, 1083,
	3492, 3098, 2100, 4690, 3092, 3080, 2331, 2223, 2325, 2319,
	3374, 2311, 2291, 1409, 2290, 3927, 1834, 1579, 4033, 2787,
	1298, 3867, 771, 4742, 3757, 1271, 3393, 2914, 1409, 4711,
	4682, 4081, 2438, 1815, 2135, 3287, 2490, 4370, 3077, 1269,
	1350, 1309, 4132, 4541, 2174, 1082, 4539, 4459, 1814, 4863,
	2059, 3429, 2166, 2790, 1409, 1269, 2372, 2137, 3508, 1098,
	2931, 3504, 3503, 3240, 1350, 1856, 1858, 2958, 3218, 3880,
	1350, 3396, 3395, 1814, 3443, 2364, 3465, 1743, 1742, 3467,
	3468, 2354, 1566, 4674, 3471, 1269, 3472, 2288, 3473, 1737,
	4399, 1022, 1149, 2180, 2789, 2167, 4675, 3416, 3458, 2788,
	3907, 2138, 2835, 1634, 1988, 1632, 1149, 928, 929, 2179,
	4028, 4038, 840, 841, 4352, 3430, 1350, 1816, 2834, 2833,
	4031, 2832, 2059, 1849, 3485, 3486, 3401, 4133, 2831, 3903,
	4676, 913, 914, 933, 3084, 1653, 1620, 1814, 4471, 1149,
	1266, 1087, 1816, 2179, 3853, 3506, 2251, 3484, 3510, 1621,
	4634, 1668, 4325, 3854, 1350, 1982, 1266, 2935, 3476, 3469,
	3438, 3439, 3440, 3441, 3369, 3370, 3371, 3434, 2053, 1265,
	4176, 3415, 3482, 3422, 4051, 2491, 1350, 3402, 1350, 3400,
	3385, 2175, 3414, 3904, 1378, 1265, 1266, 3943, 3417, 3418,
	3507, 4031, 4967, 3512, 2329, 4678, 3514, 3625, 1879, 2243,
	1891, 3932, 4691, 4902, 2249, 4445, 1409, 4543, 2243, 1696,
	3905, 3056, 3902, 3461, 3928, 1265, 3446, 1350, 4677, 3152,
	2056, 1350, 2026, 3061, 3488, 3587, 4748, 3589, 3493, 3568,
	3593, 3538, 3455, 3456, 3599, 3457, 4679, 1027, 1026, 1986,
	2053, 3059, 2959, 2960, 4472, 2358, 1573, 2250, 3420, 2260,
	3421, 1695, 1267, 4467, 3585, 1721, 4454, 843, 842, 1350,
	1573, 2047, 1573, 4466, 3540, 4755, 1409, 4635, 1267, 4739,
	4182, 3869, 3466, 825, 1573, 3561, 2175, 1850, 3470, 1508,
	4542, 2659, 4906, 3477, 1023, 1573, 3554, 1989, 3449, 1787,
	3483, 3556, 2056, 3619, 3635, 4776, 4907, 1350, 1267, 1689,
	1540, 1021, 1984, 4455, 4904, 930, 931, 3582, 1789, 2451,
	3437, 770, 4846, 4665, 1271, 1786, 4749, 4655, 1784, 1761,
	1987, 3679, 844, 845, 3655, 1083, 4420, 3594, 4174, 915,
	916, 3600, 3141, 2047, 3524, 1881, 3534, 1759, 1731, 1573,
	1729, 3141, 1727, 3547, 3620, 1633, 3623, 1631, 1725, 3677,
	4037, 1573, 3366, 1573, 3542, 3548, 3550, 4636, 3772, 3549,
	3499, 3731, 3730, 1985, 3574, 3933, 3573, 3459, 3329, 3259,
	3081, 3004, 3564, 3699, 1269, 932, 3575, 2993, 3670, 2992,
	2948, 2863, 3662, 3583, 3688, 2460, 1723, 2349, 1717, 1711,
	1709, 3607, 2019, 1519, 1519, 1630, 2420, 2015, 3596, 3602,
	1409, 3735, 2981, 1409, 1790, 1671, 2429, 1024, 2396, 2269,
	4527, 4504, 4503, 3367, 3906, 3991, 3752, 1022, 3751, 1810,
	3193, 3192, 2803, 3608, 3612, 3673, 1830, 1831, 1832, 1833,
	1835, 1836, 1080, 3745, 1025, 2956, 3606, 1149, 3627, 3159,
	2479, 1748, 2399, 1149, 1149, 2310, 2289, 1149, 1149, 1149,
	2088, 1149, 3658, 3680, 3728, 3660, 1527, 831, 1924, 1684,
	1149, 2059, 3659, 1603, 2658, 1519, 3586, 834, 4819, 1149,
	4286, 3988, 3987, 3726, 1149, 1266, 4292, 182, 182, 4738,
	1409, 4270, 3687, 3750, 1988, 3685, 1028, 4680, 1090, 1149,
	2316, 2453, 1021, 4681, 3694, 1788, 2452, 1409, 3697, 3698,
	3678, 3749, 1785, 4368, 1265, 1783, 1760, 2059, 2059, 1149,
	1149, 4297, 1149, 1149, 1149, 3739, 1083, 3740, 1612, 3741,
	4283, 4222, 4221, 4077, 1758, 1730, 4068, 1728, 4006, 1726,
	1149, 3985, 3958, 3758, 1149, 1724, 2059, 2059, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149,
	1149, 1149, 1149, 1149, 1149, 1149, 1149, 1149, 3775, 1149,
	3729, 4880, 3746, 1027, 1026, 3785, 3786, 1149, 1149, 2059,
	3825, 3956, 3826, 1722, 1149, 1716, 1710, 1708, 3934, 2053,
	3666, 3755, 1629, 3661, 3651, 1149, 3111, 1267, 2428, 3747,
	2395, 2268, 3103, 3096, 3088, 3074, 1271, 1271, 3753, 3073,
	1149, 1901, 1037, 3054, 2880, 2875, 2287, 2285, 1022, 2262,
	1023, 2245, 2208, 2195, 2181, 2121, 3864, 1339, 2118, 2115,
	2112, 2107, 2105, 2101, 2092, 2053, 2053, 4363, 3780, 3782,
	3793, 2056, 1409, 3597, 3676, 4877, 1246, 2031, 2254, 3792,
	1819, 3238, 3899, 4896, 2143, 1350, 1350, 4633, 4354, 2131,
	2132, 3211, 3808, 3209, 2053, 2053, 1269, 1269, 3047, 4788,
	1350, 1350, 1247, 1350, 3815, 4384, 4304, 3803, 4355, 3925,
	2463, 3823, 2047, 3926, 4213, 3824, 3142, 2056, 2056, 3908,
	3909, 2162, 1149, 3799, 3801, 3802, 1584, 2053, 3828, 4580,
	3822, 2936, 4573, 3830, 3921, 3922, 4089, 3924, 3856, 2911,
	2190, 1149, 1781, 1782, 3886, 2911, 2056, 2056, 2386, 2328,
	1329, 3871, 1330, 3957, 2909, 3959, 2461, 1519, 2047, 2047,
	2933, 3857, 3865, 2423, 182, 2418, 4787, 3876, 3877, 2393,
	4262, 1826, 1827, 1024, 1149, 1149, 4299, 3239, 1707, 2056,
	4598, 4469, 3873, 3874, 4183, 2510, 3816, 2047, 2047, 2939,
	4240, 1820, 3598, 4161, 1027, 1026, 3519, 1266, 1266, 2940,
	1025, 1829, 2462, 1042, 1044, 1046, 1826, 1827, 4899, 3407,
	2961, 1823, 2130, 1248, 2510, 3831, 3969, 3888, 1357, 3938,
	2047, 2940, 1149, 1297, 4233, 266, 1265, 1265, 4226, 4890,
	4855, 4002, 4005, 3072, 1330, 1330, 1828, 4065, 3011, 3889,
	2312, 1023, 1368, 3009, 1157, 4224, 1573, 3860, 3018, 3000,
	2944, 1350, 1028, 4001, 4228, 2998, 2942, 4747, 4731, 4936,
	4698, 4702, 2999, 2943, 3998, 4696, 4632, 3917, 4564, 4534,
	4446, 1828, 697, 4075, 4067, 4054, 2059, 3896, 3665, 4234,
	3973, 3118, 2774, 3974, 3976, 2127, 2040, 4468, 4778, 2984,
	273, 273, 273, 4779, 703, 704, 1531, 719, 703, 719,
	729, 1530, 4004, 769, 3990, 3408, 3447, 789, 4966, 1267,
	1267, 3961, 795, 4910, 1513, 3966, 3335, 3336, 1573, 273,
	1826, 1827, 4227, 2346, 1149, 4153, 4778, 2903, 2904, 4020,
	4022, 4779, 1271, 1149, 2956, 2901, 2902, 4047, 4091, 2654,
	908, 2360, 2362, 1573, 1573, 1573, 3124, 273, 4098, 3913,
	1573, 1573, 1573, 1694, 2365, 4082, 3406, 3413, 2903, 1693,
	2901, 4014, 2689, 3141, 1024, 4074, 2373, 4565, 2376, 2377,
	2378, 1573, 4036, 4509, 4301, 4024, 3066, 1409, 4296, 3069,
	4083, 3071, 4295, 4061, 4149, 4026, 4102, 4086, 4035, 3912,
	3412, 1025, 1269, 1763, 2053, 3804, 1762, 3591, 4013, 4049,
	4025, 3588, 1918, 1409, 1917, 3213, 1149, 1149, 4053, 4085,
	2467, 4954, 1149, 1149, 2059, 4106, 4066, 1149, 1149, 4918,
	1149, 4735, 4734, 4733, 4664, 1149, 4663, 3115, 4615, 4537,
	3115, 4499, 4443, 4440, 4438, 4342, 1149, 4322, 4260, 4208,
	4105, 4095, 4041, 1028, 3954, 3946, 2056, 4069, 3669, 3668,
	3513, 4016, 1149, 3464, 3198, 4118, 3190, 4084, 3167, 3166,
	3165, 3164, 4147, 3102, 4087, 3075, 2934, 2871, 4092, 4116,
	4040, 4093, 2867, 4097, 2856, 2855, 2844, 4103, 2583, 2454,
	703, 703, 2424, 4134, 4104, 4229, 2417, 2047, 273, 2416,
	4230, 2415, 2414, 1266, 4117, 2413, 3724, 3409, 3410, 3411,
	4235, 2326, 2300, 2296, 4135, 2295, 4071, 2294, 2293, 3722,
	2292, 4143, 3187, 1271, 3499, 2095, 2094, 4128, 3715, 4123,
	2093, 1271, 1265, 2091, 2030, 1409, 1409, 1780, 1409, 1779,
	1718, 1598, 2053, 1597, 1596, 1271, 1595, 1594, 1593, 1592,
	1587, 1339, 4232, 1583, 1581, 1580, 1573, 1573, 1524, 1904,
	1523, 1522, 1400, 1909, 4188, 1399, 1398, 1409, 1397, 4236,
	1396, 3429, 1360, 1316, 1315, 1314, 1313, 1312, 1311, 1310,
	1308, 1303, 1302, 1269, 1301, 1300, 1299, 901, 8, 1229,
	2133, 1269, 1048, 1271, 2056, 1271, 4214, 4215, 1034, 4638,
	4239, 4238, 4237, 2450, 93, 1269, 1589, 863, 87, 2252,
	3953, 4849, 4173, 1000, 4775, 1267, 4668, 1564, 1350, 4246,
	871, 4246, 4263, 4757, 4063, 2316, 3515, 3717, 1409, 3023,
	1350, 4250, 4249, 1350, 2398, 2047, 4191, 4193, 1719, 2400,
	3424, 2816, 3716, 4723, 4157, 3297, 4605, 4413, 4265, 4266,
	1409, 3724, 2657, 1269, 4184, 1269, 1922, 4187, 4190, 4185,
	4186, 4180, 4189, 182, 3722, 4197, 4200, 3378, 4264, 89,
	1133, 1179, 4300, 3715, 4302, 4333, 4332, 1407, 4206, 4218,
	4223, 1509, 3940, 3638, 1266, 4204, 4329, 4328, 1573, 1573,
	2044, 4212, 1266, 2046, 4220, 1097, 1412, 4799, 3725, 4231,
	2144, 1139, 2160, 2153, 2857, 2733, 1266, 1156, 1153, 2048,
	4326, 2050, 1155, 1265, 1154, 2049, 1350, 1942, 1152, 2043,
	4073, 1265, 3122, 3695, 1639, 1637, 1002, 4268, 1409, 2148,
	2577, 4284, 2641, 1573, 4303, 1265, 3286, 1915, 4241, 4242,
	4277, 1113, 1135, 4280, 2638, 1292, 1124, 1112, 4282, 3404,
	3383, 4294, 3682, 4320, 1266, 3895, 1266, 2489, 881, 3332,
	2644, 1283, 1573, 1573, 1573, 1573, 1573, 2757, 2749, 2745,
	4371, 3474, 3717, 4321, 3112, 4357, 1796, 1409, 4427, 4323,
	1893, 3123, 1792, 1265, 4313, 1265, 1394, 3716, 1117, 1149,
	1149, 1149, 2575, 4319, 1906, 4372, 1267, 4312, 3264, 4311,
	2499, 3689, 3427, 2850, 1267, 4781, 3812, 1409, 3196, 4331,
	4360, 2304, 1149, 1245, 4327, 1149, 1149, 4338, 1267, 4348,
	1244, 4375, 1290, 1243, 4339, 1149, 4763, 4760, 2059, 4366,
	4279, 4380, 2242, 1149, 1149, 4336, 3633, 3634, 2136, 2895,
	2587, 4373, 3652, 3725, 1129, 1518, 2442, 4389, 3389, 4052,
	1409, 1600, 1573, 794, 4476, 3723, 3718, 3719, 3720, 3721,
	1141, 1878, 3044, 3043, 4627, 1379, 1267, 4405, 1267, 4387,
	4393, 1377, 4386, 1376, 1375, 4400, 4927, 1409, 3949, 3713,
	3948, 3947, 240, 3232, 1817, 1149, 1809, 237, 239, 238,
	4410, 4343, 3900, 4394, 3433, 4853, 3971, 3624, 1149, 23,
	22, 21, 116, 42, 20, 155, 133, 1149, 4416, 152,
	151, 125, 2059, 150, 149, 148, 4490, 4491, 4359, 147,
	154, 1149, 146, 145, 1149, 4422, 140, 144, 143, 142,
	141, 139, 4449, 137, 4450, 4433, 4434, 138, 132, 136,
	135, 134, 131, 1149, 130, 129, 2053, 2316, 128, 127,
	1409, 4510, 126, 4512, 124, 4513, 4479, 1350, 156, 123,
	1285, 122, 121, 120, 4451, 119, 118, 1573, 1573, 1573,
	117, 782, 783, 1339, 61, 4458, 2179, 60, 115, 113,
	114, 4448, 19, 40, 14, 65, 66, 18, 1271, 13,
	4498, 35, 92, 1305, 105, 104, 103, 36, 2056, 101,
	3723, 3718, 3719, 3720, 3721, 273, 4526, 273, 273, 4514,
	1334, 273, 1344, 3635, 4246, 100, 4536, 34, 17, 1409,
	4555, 4540, 1573, 1358, 16, 4544, 4547, 4496, 15, 4501,
	2053, 789, 4500, 98, 789, 97, 96, 4511, 33, 2047,
	31, 11, 9, 37, 2003, 12, 3528, 3529, 1269, 3530,
	3531, 3532, 4531, 4532, 1149, 1149, 3160, 4528, 273, 4574,
	273, 273, 1334, 4579, 273, 273, 4529, 4516, 4538, 1344,
	5, 1149, 2059, 187, 4583, 186, 4585, 189, 185, 4533,
	188, 4554, 2056, 273, 4575, 1542, 91, 184, 183, 4577,
	4559, 90, 1350, 29, 10, 1350, 4594, 4595, 4563, 179,
	4556, 1562, 3576, 3577, 4059, 3578, 3579, 3580, 1577, 82,
	181, 1149, 180, 1149, 4582, 1149, 4375, 4581, 4576, 178,
	4571, 177, 176, 2047, 4502, 1271, 4614, 1602, 83, 4616,
	1344, 80, 4593, 175, 273, 273, 86, 1334, 1149, 174,
	1271, 4622, 81, 85, 84, 27, 2018, 6, 64, 1266,
	4488, 4246, 7, 4597, 4395, 3732, 108, 4518, 789, 109,
	273, 273, 38, 78, 77, 76, 4246, 4660, 75, 4603,
	26, 63, 1665, 25, 173, 220, 219, 4650, 1265, 4621,
	4620, 218, 1672, 217, 216, 1269, 215, 908, 214, 213,
	2053, 4617, 208, 207, 4649, 212, 1271, 1271, 210, 209,
	1269, 211, 4642, 1149, 1149, 206, 230, 4671, 4643, 229,
	223, 2887, 222, 1149, 228, 227, 226, 225, 1271, 224,
	221, 1271, 4246, 4246, 234, 1573, 205, 204, 203, 201,
	197, 196, 200, 4685, 4686, 1573, 4659, 202, 199, 198,
	4661, 195, 2056, 233, 4246, 232, 231, 4246, 72, 1149,
	1149, 4666, 171, 172, 71, 4705, 1269, 1269, 4707, 1149,
	170, 1267, 169, 168, 167, 273, 4683, 166, 2164, 4693,
	4694, 165, 164, 4692, 70, 4719, 4697, 4720, 1269, 4699,
	4704, 1269, 4700, 2047, 24, 2, 1266, 4712, 1, 273,
	4715, 4727, 0, 0, 4713, 0, 4716, 4559, 0, 4718,
	4717, 1266, 4728, 0, 1149, 1149, 0, 0, 0, 1149,
	4732, 0, 0, 1350, 0, 1265, 1350, 0, 2581, 0,
	0, 0, 0, 0, 0, 0, 2494, 4737, 0, 0,
	1265, 0, 4762, 4765, 1904, 0, 0, 0, 4783, 4745,
	4746, 4780, 4777, 0, 0, 4784, 4766, 4772, 4753, 0,
	4773, 4770, 4754, 3048, 0, 0, 0, 1266, 1266, 0,
	0, 0, 0, 0, 0, 0, 1519, 4771, 0, 0,
	0, 4767, 0, 4804, 0, 1149, 1149, 1149, 0, 1266,
	0, 0, 1266, 0, 0, 0, 1265, 1265, 0, 2756,
	0, 0, 0, 0, 0, 0, 4789, 0, 1267, 0,
	4802, 0, 0, 3089, 0, 0, 4795, 0, 1265, 1149,
	0, 1265, 4803, 1267, 0, 0, 2280, 0, 4833, 0,
	4838, 0, 0, 0, 4848, 0, 4851, 4818, 4817, 4815,
	4816, 0, 0, 0, 0, 0, 0, 0, 4834, 4860,
	0, 2179, 0, 0, 0, 0, 4861, 0, 0, 0,
	0, 4870, 0, 0, 0, 4868, 0, 0, 0, 0,
	0, 0, 1149, 0, 0, 0, 4862, 0, 0, 1267,
	1267, 4852, 2751, 0, 4881, 0, 0, 0, 0, 1339,
	4867, 4536, 0, 4866, 0, 0, 0, 4876, 4874, 0,
	703, 1267, 4897, 0, 1267, 4836, 4878, 4875, 4887, 4888,
	0, 4893, 0, 0, 4891, 0, 4889, 0, 0, 0,
	0, 273, 0, 273, 4901, 4900, 4913, 273, 4914, 4903,
	1271, 4762, 1271, 4921, 4765, 4783, 0, 0, 4909, 0,
	1542, 1334, 2023, 273, 4911, 273, 2029, 4920, 4919, 0,
	4912, 0, 273, 0, 719, 0, 4246, 4929, 4246, 273,
	4923, 0, 0, 0, 0, 0, 0, 4922, 1350, 4924,
	4928, 0, 0, 0, 2096, 4943, 0, 4945, 4951, 0,
	0, 0, 0, 4953, 0, 0, 273, 0, 0, 4958,
	1269, 0, 1269, 273, 802, 0, 0, 1149, 1149, 4955,
	0, 0, 4949, 4952, 4960, 1149, 0, 1149, 1149, 4964,
	0, 4956, 4973, 0, 0, 0, 0, 4974, 4977, 813,
	4976, 0, 4979, 4970, 4982, 0, 789, 4981, 4980, 4978,
	0, 4984, 4983, 0, 0, 0, 0, 3124, 0, 0,
	0, 0, 4987, 0, 0, 4990, 4988, 4995, 4989, 4971,
	4972, 4992, 0, 4993, 0, 0, 0, 4999, 896, 0,
	0, 1149, 0, 0, 5001, 0, 0, 4995, 5002, 5006,
	5004, 0, 4991, 0, 0, 0, 0, 1261, 0, 0,
	4998, 0, 0, 0, 0, 73, 0, 899, 898, 0,
	0, 1266, 0, 1266, 0, 0, 0, 0, 0, 0,
	0, 0, 74, 5003, 0, 0, 0, 0, 0, 73,
	0, 2513, 807, 0, 0, 0, 0, 0, 79, 819,
	1265, 0, 1265, 268, 268, 699, 74, 0, 0, 0,
	0, 0, 3403, 812, 0, 0, 3603, 0, 0, 0,
	0, 0, 79, 0, 0, 3261, 3262, 0, 3425, 0,
	0, 0, 0, 73, 0, 0, 0, 0, 88, 0,
	0, 0, 0, 0, 3628, 0, 0, 0, 0, 0,
	74, 0, 0, 0, 0, 3656, 0, 0, 0, 4070,
	0, 0, 88, 811, 0, 0, 79, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 0, 902,
	764, 273, 0, 1267, 2655, 1267, 0, 0, 0, 0,
	0, 49, 0, 110, 0, 0, 0, 0, 0, 94,
	107, 0, 0, 902, 0, 809, 88, 0, 0, 3705,
	0, 0, 0, 0, 0, 49, 0, 110, 0, 0,
	0, 3727, 0, 94, 107, 4119, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 273, 0, 0, 902, 273, 0,
	0, 0, 0, 0, 273, 0, 0, 0, 0, 95,
	273, 110, 0, 818, 0, 0, 0, 94, 107, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 273, 0,
	2826, 0, 703, 95, 273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	908, 0, 3569, 3570, 3571, 0, 2756, 3359, 3360, 3361,
	3362, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 95, 0, 273,
	0, 1334, 273, 0, 0, 0, 0, 0, 0, 804,
	0, 0, 0, 0, 0, 0, 789, 0, 0, 0,
	3463, 0, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 2397, 0, 0, 0, 0, 273, 273, 0, 273,
	808, 273, 0, 273, 0, 273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2756, 2756, 3222,
	0, 0, 0, 0, 0, 0, 3491, 0, 0, 0,
	2434, 0, 0, 2435, 0, 2436, 99, 0, 763, 0,
	0, 0, 0, 0, 0, 0, 0, 273, 273, 273,
	273, 0, 0, 814, 0, 0, 2906, 0, 0, 806,
	99, 0, 0, 0, 3541, 0, 0, 0, 0, 3039,
	0, 0, 0, 0, 0, 0, 769, 0, 0, 0,
	789, 0, 0, 0, 0, 0, 3555, 0, 3557, 0,
	0, 0, 190, 102, 0, 0, 106, 0, 0, 0,
	2751, 2751, 3031, 3029, 99, 0, 803, 0, 0, 3033,
	3035, 3025, 0, 0, 0, 4287, 190, 102, 0, 0,
	106, 0, 241, 0, 0, 0, 0, 3595, 0, 0,
	903, 3601, 0, 810, 0, 153, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 241, 765, 0, 0,
	0, 0, 0, 0, 903, 0, 0, 0, 805, 153,
	190, 102, 0, 0, 106, 0, 0, 0, 0, 0,
	243, 0, 0, 2589, 0, 0, 0, 0, 4341, 0,
	0, 816, 817, 0, 0, 0, 0, 0, 0, 0,
	241, 4358, 0, 0, 243, 157, 0, 0, 903, 2756,
	2756, 2756, 2756, 153, 0, 0, 0, 3664, 0, 0,
	194, 0, 0, 0, 4379, 0, 0, 0, 242, 157,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 235, 0, 0, 194, 0, 0, 0, 243, 0,
	236, 0, 242, 0, 703, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 273,
	0, 0, 0, 157, 236, 0, 0, 897, 703, 0,
	0, 0, 0, 0, 0, 273, 0, 703, 194, 0,
	0, 0, 2751, 2751, 2751, 2751, 242, 0, 0, 273,
	0, 1650, 3027, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 3041, 0, 0, 4011, 0, 236, 273,
	1344, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3040, 3032, 3030, 3034, 3036,
	3026, 3028, 3042, 0, 0, 193, 0, 0, 0, 0,
	0, 0, 3038, 0, 2599, 2600, 2601, 2618, 2619, 2620,
	0, 0, 0, 0, 0, 0, 0, 0, 273, 1344,
	0, 0, 0, 719, 2621, 0, 0, 2870, 0, 0,
	0, 0, 0, 273, 0, 3045, 273, 0, 0, 0,
	273, 0, 273, 0, 0, 0, 0, 1334, 0, 273,
	273, 0, 1344, 1344, 2886, 0, 0, 1882, 0, 273,
	0, 0, 0, 4099, 4100, 4101, 0, 0, 0, 0,
	2360, 4107, 4108, 0, 0, 0, 2611, 0, 0, 0,
	0, 0, 0, 0, 0, 2607, 0, 0, 0, 0,
	0, 0, 3768, 3769, 0, 0, 0, 0, 1320, 0,
	1320, 1320, 0, 0, 0, 2923, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 0, 0, 0, 0, 0, 3335, 3336, 0, 3353,
	3354, 3355, 0, 273, 0, 0, 0, 0, 0, 0,
	0, 1404, 0, 0, 789, 0, 0, 1517, 4139, 0,
	0, 0, 2612, 2613, 2614, 2615, 0, 0, 0, 0,
	0, 0, 2606, 3994, 3995, 3996, 0, 0, 0, 1104,
	273, 0, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839,
	3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849,
	3850, 3851, 0, 3855, 0, 0, 0, 0, 0, 0,
	0, 3350, 0, 273, 3064, 3046, 0, 0, 0, 0,
	0, 0, 0, 0, 3037, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 273, 0, 273, 2616, 2617, 0, 0,
	0, 0, 273, 1654, 1655, 4062, 0, 0, 0, 0,
	0, 0, 3107, 0, 0, 0, 4202, 4203, 0, 0,
	0, 0, 2923, 0, 703, 0, 0, 0, 0, 2609,
	0, 0, 0, 3136, 908, 2923, 0, 4656, 4657, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 3341, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4670, 0,
	0, 0, 0, 0, 0, 273, 1334, 273, 0, 0,
	0, 0, 3390, 0, 0, 0, 0, 1344, 273, 0,
	0, 1334, 0, 1334, 0, 1334, 0, 0, 4703, 0,
	0, 0, 0, 0, 2756, 2756, 0, 0, 1771, 0,
	0, 0, 0, 0, 0, 3419, 0, 0, 0, 0,
	0, 0, 3357, 0, 0, 0, 0, 0, 0, 0,
	3432, 4015, 0, 0, 0, 0, 0, 0, 0, 0,
	273, 273, 273, 273, 1334, 0, 0, 1334, 2360, 273,
	0, 0, 0, 0, 273, 0, 3453, 0, 0, 0,
	0, 0, 0, 0, 3351, 0, 0, 0, 0, 0,
	3335, 3336, 0, 3353, 3354, 3355, 275, 0, 0, 0,
	0, 0, 0, 2610, 0, 273, 0, 2751, 2751, 0,
	0, 0, 3777, 273, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 0, 2756, 0, 0, 0, 0,
	0, 0, 4388, 0, 4390, 4391, 4392, 0, 0, 0,
	4790, 0, 0, 0, 0, 0, 4792, 0, 0, 1879,
	0, 1881, 0, 4196, 0, 3350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2751, 2751, 2751,
	2751, 2751, 2751, 2751, 2751, 2751, 2751, 2751, 2751, 2751,
	2751, 2751, 2751, 2751, 2751, 2751, 2751, 0, 2751, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4439, 0, 0, 0, 0, 0, 3352, 1542,
	0, 0, 2596, 2597, 2598, 2622, 2608, 2602, 0, 2604,
	2605, 2603, 2590, 2591, 2592, 2593, 2594, 2595, 0, 0,
	0, 3341, 0, 4288, 4289, 0, 0, 0, 0, 1826,
	1827, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 0, 0, 0, 0, 0, 0, 0, 3432, 0,
	0, 1111, 1857, 0, 0, 0, 2024, 0, 1517, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 3357, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 1320,
	0, 0, 0, 0, 1848, 0, 1517, 4530, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3351, 0,
	0, 0, 0, 0, 0, 0, 0, 3347, 3348, 3349,
	1826, 1827, 0, 273, 3346, 3344, 3345, 3337, 3338, 3339,
	3340, 3342, 3343, 0, 0, 0, 0, 0, 0, 273,
	0, 0, 0, 1857, 703, 0, 0, 0, 4269, 703,
	1829, 0, 703, 0, 0, 703, 703, 0, 0, 0,
	4278, 703, 1509, 4281, 0, 1407, 0, 0, 0, 273,
	1851, 1852, 1853, 1854, 0, 0, 1882, 0, 0, 0,
	1834, 273, 0, 1879, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 73,
	0, 0, 0, 4436, 0, 4437, 0, 0, 0, 0,
	0, 0, 0, 0, 3335, 3336, 74, 3353, 3354, 3355,
	273, 0, 0, 0, 273, 273, 0, 0, 0, 1856,
	1858, 0, 79, 0, 0, 0, 3776, 0, 0, 0,
	0, 0, 3789, 0, 0, 0, 4356, 0, 0, 0,
	0, 0, 0, 2923, 2923, 273, 0, 2023, 0, 3805,
	0, 0, 3352, 2923, 0, 2029, 0, 0, 0, 0,
	0, 0, 88, 0, 2923, 2029, 0, 2923, 2029, 0,
	0, 2029, 0, 0, 0, 0, 0, 1849, 0, 3350,
	0, 1834, 0, 0, 0, 273, 273, 2023, 0, 273,
	0, 4505, 4506, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 902, 0, 0, 0, 0, 0, 2023,
	0, 273, 0, 3560, 3560, 49, 0, 110, 1334, 0,
	0, 0, 0, 94, 107, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2923, 2360, 2923, 2302, 3592, 2923,
	2023, 2309, 1879, 2923, 2023, 0, 0, 789, 0, 0,
	0, 0, 0, 2322, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3341, 0, 0, 0, 2334,
	0, 2334, 1334, 95, 3898, 0, 0, 2341, 1849, 273,
	0, 3347, 3348, 3349, 0, 0, 0, 0, 3346, 3344,
	3345, 3337, 3338, 3339, 3340, 3342, 3343, 273, 1855, 3629,
	0, 0, 3631, 2923, 0, 0, 273, 0, 0, 4419,
	273, 0, 0, 1344, 0, 0, 0, 0, 0, 0,
	0, 1850, 2309, 0, 0, 2369, 0, 0, 273, 0,
	3357, 0, 0, 3107, 0, 0, 1334, 0, 273, 0,
	0, 2923, 0, 703, 0, 0, 2389, 0, 0, 0,
	2923, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	2405, 0, 2407, 0, 2409, 0, 2411, 4517, 2412, 4461,
	0, 0, 3351, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3738,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2439, 2440, 2441, 0, 0, 0, 0, 0, 0, 3744,
	99, 0, 1542, 0, 0, 1334, 273, 0, 273, 0,
	0, 0, 1850, 0, 1334, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 190, 102, 1826, 1827,
	106, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0,
	1881, 0, 1826, 1827, 0, 0, 0, 0, 0, 0,
	0, 1857, 0, 1111, 1111, 1111, 241, 0, 1829, 0,
	0, 0, 0, 0, 903, 1857, 0, 1876, 0, 153,
	0, 1493, 1829, 3810, 0, 1493, 3352, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 1848, 243, 4602, 0, 1828, 0, 0,
	0, 0, 1845, 0, 0, 0, 1862, 0, 0, 0,
	0, 2756, 0, 0, 0, 0, 0, 0, 0, 157,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 194, 0, 0, 4626, 0, 0,
	0, 0, 242, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 235, 0, 0, 0, 0,
	273, 273, 4648, 0, 236, 0, 0, 0, 0, 0,
	0, 2756, 0, 0, 0, 0, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 703, 703, 0, 0, 1834,
	0, 1648, 2823, 0, 2751, 0, 0, 0, 0, 0,
	0, 0, 0, 1834, 0, 3347, 3348, 3349, 0, 0,
	0, 0, 3346, 3344, 3345, 3337, 3338, 3339, 3340, 3342,
	3343, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 1877, 0, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1856, 1858, 2751, 0, 0, 0, 0, 0,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	4195, 0, 0, 0, 0, 0, 2872, 0, 0, 1320,
	0, 1865, 0, 1320, 0, 1320, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 4210,
	789, 0, 2322, 0, 0, 1826, 1827, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 3560, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 273, 0, 0, 0, 0, 2756, 0, 0,
	0, 1882, 0, 1862, 0, 0, 0, 0, 0, 0,
	1828, 1879, 0, 0, 2023, 0, 273, 0, 0, 0,
	719, 719, 1344, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 273, 0, 0, 0, 2756,
	0, 0, 0, 0, 0, 0, 273, 3107, 0, 0,
	3107, 2029, 0, 0, 0, 0, 273, 0, 0, 0,
	0, 0, 0, 1517, 2756, 0, 273, 1855, 0, 0,
	0, 273, 0, 0, 0, 0, 273, 0, 0, 0,
	2751, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 2923, 273, 0, 0, 0,
	0, 0, 0, 0, 1850, 3136, 3136, 0, 0, 0,
	0, 908, 2923, 0, 0, 0, 1834, 1868, 0, 0,
	0, 0, 2751, 0, 0, 0, 2309, 0, 0, 0,
	0, 0, 0, 0, 0, 2322, 0, 0, 0, 273,
	0, 0, 0, 0, 0, 0, 0, 2751, 1881, 1407,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 1856, 1858, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 4411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3158,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 1862, 0, 3169, 0,
	3172, 0, 0, 0, 4158, 0, 0, 0, 0, 1866,
	0, 0, 4411, 1849, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 2513,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3204, 1517, 3206, 1517, 273, 0, 0,
	0, 0, 3212, 1542, 1111, 273, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 1879, 273,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 1862, 0, 0, 0, 1344, 0, 0, 1320, 0,
	0, 0, 2513, 0, 1862, 0, 3241, 0, 1344, 1862,
	0, 0, 0, 0, 0, 2923, 2923, 0, 3560, 2923,
	0, 0, 0, 0, 0, 0, 0, 4248, 0, 4248,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2923, 0, 2029, 0, 0, 0, 1542, 1542, 273,
	2023, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 2023, 0, 273, 2023, 0, 273, 0,
	3560, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2923, 0, 2923, 273, 0, 0, 0, 0, 0,
	0, 0, 1826, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	1493, 0, 0, 0, 1981, 1857, 0, 0, 0, 2923,
	2923, 0, 1829, 0, 0, 3107, 3107, 0, 0, 0,
	0, 0, 4345, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 273, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 0, 0, 0, 1826, 1827, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	0, 4138, 0, 0, 0, 0, 1862, 1857, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 2755, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 1862, 2923, 2029, 1845, 2029,
	0, 1862, 4453, 0, 0, 0, 0, 0, 0, 1096,
	0, 273, 1856, 1858, 0, 0, 0, 0, 0, 0,
	0, 4477, 0, 4477, 3442, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	0, 1826, 1827, 0, 0, 0, 0, 789, 0, 0,
	0, 0, 0, 3771, 0, 0, 0, 0, 3560, 0,
	1334, 0, 0, 1320, 1857, 0, 0, 1517, 1517, 0,
	1849, 1829, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	2023, 0, 273, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1493, 0, 1882, 3487, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 4453,
	0, 0, 4248, 0, 0, 1542, 1848, 0, 0, 0,
	0, 0, 2923, 0, 0, 1845, 2726, 2727, 2728, 2729,
	2722, 2723, 2724, 2725, 1856, 1858, 0, 0, 3537, 3539,
	4568, 0, 2322, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 1542, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 273, 273, 0, 0,
	3766, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	3810, 1855, 1851, 1852, 1853, 1854, 0, 2702, 2703, 2704,
	2705, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	3560, 4619, 0, 0, 1850, 0, 0, 0, 0, 4453,
	2714, 2715, 2716, 2717, 2710, 2711, 2712, 2713, 2718, 2719,
	2720, 2721, 0, 0, 0, 0, 0, 0, 0, 4248,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 1856, 1858, 0, 4248, 0, 0, 1879, 0, 3653,
	0, 0, 0, 3657, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 1493, 0, 1843, 1844, 0, 0,
	273, 0, 0, 0, 3335, 3336, 0, 3353, 3354, 3355,
	0, 0, 719, 0, 0, 0, 0, 0, 2698, 2699,
	2700, 2701, 2706, 2707, 2708, 2709, 0, 0, 0, 1849,
	4248, 4248, 0, 1855, 0, 0, 4345, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4248, 0, 273, 4248, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 2029, 0, 3335, 3336, 0,
	3353, 3354, 3355, 0, 1542, 0, 1542, 1846, 1842, 3350,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3748,
	0, 1517, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 4743, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4477,
	0, 0, 273, 0, 0, 0, 0, 0, 3761, 0,
	1493, 0, 3350, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 2923, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3341, 0, 0, 1862, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 273, 0, 0, 0, 0, 0, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 3810, 0, 3358, 1862, 0,
	0, 0, 1862, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 1542, 3341, 0,
	3357, 1881, 0, 0, 0, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 0, 3351, 0, 1353, 0, 1862, 0, 1862, 1862,
	1862, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	2755, 2755, 0, 3357, 4453, 0, 0, 0, 0, 0,
	0, 1096, 1096, 1096, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 0, 0, 2923, 3351, 0, 0, 0, 0,
	0, 0, 0, 0, 4248, 0, 4248, 1879, 0, 1542,
	0, 0, 0, 0, 0, 1544, 1862, 1550, 0, 1556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1862, 0, 0, 1862,
	0, 0, 1862, 0, 0, 1862, 0, 0, 0, 0,
	0, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3136, 3352, 0, 1656, 0,
	1661, 0, 0, 0, 0, 0, 2923, 0, 0, 0,
	0, 0, 0, 1674, 0, 1679, 0, 0, 0, 0,
	3136, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	3356, 0, 2755, 2755, 2755, 2755, 0, 0, 0, 1862,
	0, 1862, 0, 0, 0, 0, 1862, 0, 0, 3352,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2322,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1744, 0, 0, 1750, 0, 2322, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4048,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4058,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2322, 0, 0, 0, 0, 4076,
	0, 0, 0, 0, 0, 3347, 3348, 3349, 0, 0,
	0, 0, 3346, 3344, 3345, 3337, 3338, 3339, 3340, 3342,
	3343, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 4121, 0, 0, 0, 0, 0, 3347, 3348,
	3349, 0, 0, 0, 0, 3346, 3344, 3345, 3337, 3338,
	3339, 3340, 3342, 3343, 0, 0, 0, 1903, 0, 0,
	0, 0, 0, 1916, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 1975, 1975,
	1975, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 1493,
	0, 0, 0, 0, 1845, 0, 0, 1862, 1862, 0,
	1862, 0, 0, 0, 1493, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1493, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4267, 0, 0, 0, 0, 0, 1111, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 2322, 0,
	0, 1834, 1111, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1096, 0, 0, 0, 0, 0, 1862, 0,
	1867, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 1874, 0,
	0, 0, 1145, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2322, 0, 0, 0,
	0, 0, 0, 1865, 1862, 1862, 4367, 2755, 2755, 0,
	0, 1862, 1493, 0, 0, 0, 0, 0, 1849, 0,
	0, 3356, 3356, 0, 0, 1862, 1862, 0, 272, 272,
	272, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 832, 0, 0,
	0, 1862, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 1493, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 832, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 2755, 2755, 2755,
	2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755, 2755,
	2755, 2755, 2755, 2755, 2755, 2755, 2755, 0, 2755, 3356,
	3356, 3356, 3356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1181, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4463, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1268, 0, 0, 0,
	1881, 0, 0, 0, 0, 2322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2421, 0,
	0, 1866, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 4592,
	1517, 3310, 0, 2448, 0, 3311, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2488,
	0, 2492, 0, 0, 0, 0, 0, 0, 2506, 0,
	0, 1272, 0, 0, 0, 2515, 2516, 2517, 2518, 2519,
	2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529,
	2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539,
	2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549,
	2550, 0, 2556, 0, 2558, 2559, 2560, 2561, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1493, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2585, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1903, 0, 0, 0, 2636, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2666, 2669, 2672, 2675, 0, 0, 2681, 2682,
	2683, 2684, 2685, 2686, 2687, 0, 0, 4706, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2747, 0, 2759, 2761,
	2766, 0, 0, 1862, 1862, 0, 0, 1862, 3356, 3356,
	1862, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4756, 0, 1862, 1862, 1862,
	1862, 1862, 0, 0, 0, 0, 0, 1862, 0, 1862,
	0, 0, 3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356,
	3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356, 3356,
	3356, 3356, 0, 0, 0, 3356, 0, 0, 1862, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 0, 0, 0, 4797, 0, 0, 1862,
	0, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 732, 0, 0, 0, 0, 733, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 0, 734, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 735, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1862, 0, 0, 272, 0, 272, 272, 736, 0, 272,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 755,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1493,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 0, 0, 0, 0, 272, 0, 272, 272,
	0, 0, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 738, 0, 0, 0, 0, 0,
	0, 832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 739, 0, 0,
	740, 0, 0, 0, 0, 0, 0, 0, 3067, 3068,
	0, 3070, 0, 0, 0, 0, 0, 764, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 754, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	0, 1493, 1493, 0, 1493, 0, 1862, 1862, 0, 0,
	0, 1862, 1862, 0, 0, 1862, 1862, 0, 0, 0,
	1862, 0, 0, 0, 1862, 0, 0, 0, 0, 1862,
	0, 0, 0, 1493, 0, 0, 0, 0, 0, 0,
	751, 0, 0, 0, 2755, 0, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3188, 0,
	0, 0, 0, 0, 1493, 0, 0, 0, 0, 1272,
	0, 0, 0, 272, 2755, 0, 0, 0, 0, 0,
	0, 761, 0, 742, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 762, 0, 743, 1272, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	1883, 1884, 0, 0, 0, 0, 0, 0, 1272, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 763, 0, 0, 0, 0,
	0, 0, 0, 744, 1493, 1863, 1857, 0, 759, 760,
	757, 0, 0, 1829, 0, 0, 752, 0, 0, 745,
	0, 0, 1876, 0, 0, 0, 3244, 3245, 0, 0,
	0, 0, 3251, 0, 0, 0, 1272, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 3265, 3266, 1493, 0, 0, 0, 2636, 1848, 0,
	0, 746, 0, 753, 0, 0, 0, 1845, 0, 0,
	0, 747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1493, 0, 748, 1862, 1862, 1862, 0,
	756, 0, 0, 0, 0, 0, 0, 1862, 1862, 3356,
	2755, 0, 3275, 0, 765, 0, 1862, 0, 0, 1862,
	0, 0, 0, 0, 0, 750, 0, 0, 3289, 0,
	0, 0, 0, 0, 0, 0, 1493, 0, 0, 0,
	0, 0, 0, 0, 0, 3301, 0, 0, 0, 0,
	0, 3356, 2755, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 1493, 1834, 0, 0, 0, 1862, 1997,
	0, 1268, 0, 0, 0, 272, 1862, 2755, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 272, 1997, 272, 0, 0, 0, 1862, 0, 0,
	832, 0, 0, 1867, 0, 0, 1877, 832, 0, 0,
	1111, 0, 0, 1856, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 0, 272, 0, 1493, 0, 1843, 1844,
	0, 272, 0, 0, 0, 0, 0, 2766, 2766, 2766,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 1975, 0, 0, 0, 0, 0, 0, 0,
	3394, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 1493, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 1862, 3356, 1875, 0, 1862,
	0, 0, 0, 0, 1272, 0, 1272, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 1882, 0, 3356, 0,
	0, 1272, 0, 0, 0, 1828, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 2060, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1096, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1096, 1862, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3765,
	0, 0, 0, 3518, 0, 1850, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 1852, 1853, 1854, 272, 0, 0, 0, 832,
	0, 1834, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 1111,
	1111, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 1862, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 272, 0, 0, 1843, 1844, 1862, 272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 272, 0, 0, 0,
	0, 0, 272, 0, 1866, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 2632, 0, 0, 0, 2633, 0,
	0, 1111, 0, 0, 0, 0, 0, 272, 0, 0,
	272, 0, 1272, 1272, 0, 0, 0, 0, 0, 0,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 832, 272, 0, 272, 0, 272,
	0, 272, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 272, 272, 272, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 1272, 0, 1272, 0,
	1272, 2506, 0, 0, 0, 0, 0, 3763, 3764, 0,
	0, 3767, 0, 0, 0, 3770, 0, 0, 1272, 1272,
	0, 0, 0, 0, 3774, 0, 0, 0, 0, 0,
	0, 1272, 0, 3781, 0, 0, 0, 0, 3394, 0,
	0, 0, 0, 1272, 0, 1272, 1272, 1272, 0, 0,
	1881, 0, 0, 3794, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3817, 3818, 0, 3819, 3820, 3821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3827, 0, 0, 0, 3829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3858, 3859, 0, 0, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 3870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3879, 1826, 1827, 0, 0, 0,
	0, 1870, 1871, 1872, 2060, 2060, 1272, 1268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1857, 0,
	0, 0, 0, 1268, 0, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 272, 0, 0,
	1828, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	1848, 0, 0, 0, 0, 0, 3929, 0, 0, 1845,
	0, 0, 0, 1863, 1857, 0, 0, 0, 0, 0,
	0, 1829, 0, 0, 0, 3941, 0, 0, 0, 1272,
	1876, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 272, 0, 0, 272, 0, 1828, 0, 272, 3970,
	272, 0, 0, 0, 0, 0, 1848, 272, 272, 0,
	0, 0, 0, 0, 0, 1845, 0, 272, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 1272, 0, 0, 0, 1834, 0, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 1272, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 1867, 0, 0, 1877, 0,
	0, 0, 0, 0, 0, 1856, 1858, 0, 272, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 272, 1834, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 1867, 0, 1849, 1877, 0, 0, 0, 1975, 0,
	0, 1856, 1858, 0, 0, 0, 0, 4094, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 832, 0, 0, 0, 0, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 272, 0, 832, 0, 0, 0, 0, 0, 1849,
	272, 1272, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4136, 4137, 0, 0, 0, 0, 4141, 4142, 0, 0,
	0, 4145, 4146, 0, 0, 0, 2060, 0, 0, 4150,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	4154, 0, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 1855, 0, 4159, 0, 0, 0,
	1134, 112, 0, 272, 1879, 272, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 272, 1850, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 272, 272,
	272, 272, 0, 0, 0, 1881, 0, 272, 0, 0,
	0, 0, 272, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	1868, 1272, 0, 272, 0, 0, 0, 0, 0, 1863,
	1857, 272, 0, 0, 1272, 0, 1272, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	0, 1881, 0, 1272, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 1869,
	1846, 1842, 1828, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 1071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1091, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 0, 0, 1255, 0, 4164, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 1856, 1858, 0,
	0, 0, 0, 4406, 4407, 4408, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 1874, 0, 0, 0, 0,
	0, 0, 1843, 1844, 0, 0, 2506, 0, 0, 4417,
	4418, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 4426, 4429, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 1826, 1827,
	0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 1857, 0, 0, 0, 0, 0, 1268, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4478, 0, 1882, 0, 0, 1997, 0, 1864,
	0, 4486, 0, 1828, 0, 0, 0, 0, 0, 272,
	1879, 0, 0, 1848, 0, 4494, 0, 0, 1096, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4507, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	0, 0, 272, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 1272, 1272, 0, 1834,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 1272, 272, 272, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 1997, 0, 0, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 1881, 1867, 272,
	0, 1877, 1272, 0, 0, 1272, 0, 0, 1856, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 2060, 0, 0,
	0, 1272, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 0, 4625, 0, 0, 0, 4629,
	0, 0, 0, 0, 0, 0, 1849, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 832, 0, 0, 0, 2060,
	0, 0, 3779, 0, 272, 0, 0, 0, 272, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 272, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 1268, 0, 0, 1158,
	0, 1879, 0, 0, 0, 0, 0, 1096, 1096, 0,
	0, 0, 0, 0, 0, 0, 0, 4701, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 274, 274, 274, 0, 0,
	0, 0, 0, 749, 2506, 0, 0, 1855, 0, 0,
	0, 0, 0, 4429, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 732, 274, 0, 0, 0, 733, 0,
	1850, 0, 0, 1272, 272, 0, 272, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 0, 1272,
	0, 0, 274, 1272, 0, 0, 0, 1868, 0, 1096,
	0, 1272, 112, 0, 112, 0, 112, 734, 0, 0,
	0, 0, 1272, 272, 0, 0, 0, 0, 735, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 736,
	0, 1272, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1091, 112,
	112, 755, 0, 0, 0, 0, 1272, 0, 0, 4814,
	4814, 4814, 0, 0, 0, 112, 0, 112, 1272, 0,
	1272, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	112, 0, 112, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 4837, 0, 0, 738, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 1272, 0, 739,
	1272, 0, 740, 3313, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 764,
	0, 0, 0, 0, 0, 0, 4814, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1268, 1268,
	0, 0, 0, 0, 754, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 0, 751, 0, 2060, 2060, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1071, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1896, 0, 0, 0, 0,
	0, 4814, 4965, 0, 0, 0, 0, 0, 0, 4969,
	0, 0, 0, 1902, 0, 0, 2060, 1908, 0, 0,
	0, 0, 0, 0, 0, 742, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 1272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 762, 0, 743, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 763, 0, 0,
	0, 0, 0, 0, 272, 744, 0, 0, 0, 0,
	759, 760, 757, 0, 0, 0, 0, 0, 752, 0,
	0, 745, 0, 272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 1995, 0, 1998,
	0, 112, 0, 0, 272, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 272, 0, 0, 0, 0, 272,
	0, 0, 0, 746, 272, 753, 0, 0, 0, 0,
	0, 0, 0, 747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1268, 0, 0, 748, 0, 0,
	0, 0, 756, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 765, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 750, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1272, 0, 0, 1863, 1857, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1272, 1272, 1272, 0, 0, 0, 0, 1272, 1272, 1272,
	274, 0, 274, 274, 0, 1268, 274, 0, 0, 0,
	0, 0, 0, 1268, 0, 0, 0, 0, 1272, 0,
	0, 0, 0, 0, 1272, 0, 0, 1997, 0, 0,
	0, 0, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	1272, 0, 0, 274, 1413, 274, 274, 0, 1413, 274,
	274, 2060, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1997, 0, 1997, 274, 0,
	0, 0, 0, 0, 1867, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 1856, 1858, 0, 272, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 1874, 272, 0, 0, 272, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 274,
	274, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 272, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 1849, 0, 1413, 274, 274, 0, 0, 0,
	1272, 0, 0, 0, 0, 0, 0, 0, 1272, 1091,
	1413, 1091, 1272, 1272, 0, 1272, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 278, 0, 1272, 1272, 0, 0, 0, 1875, 0,
	0, 272, 0, 0, 1272, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 1413, 0,
	1272, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 112, 0, 1272, 824, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 274, 0, 0, 1272, 0, 0,
	0, 0, 0, 0, 824, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1272, 1272, 0, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 0, 0, 1071,
	0, 0, 1071, 1071, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 1272, 0, 0, 0, 272,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2574, 1272,
	1272, 1272, 1272, 1272, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 0, 0, 0, 1091, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1902, 0,
	0, 0, 1902, 0, 0, 1866, 0, 0, 0, 1150,
	272, 0, 0, 0, 1272, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 2060, 0, 0, 0, 3312,
	1997, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 1272, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 0, 0, 0, 1255, 1829, 0, 0, 0,
	0, 0, 274, 0, 1272, 1876, 0, 0, 0, 0,
	0, 1998, 0, 1413, 0, 0, 0, 0, 274, 274,
	274, 0, 1882, 0, 272, 272, 0, 274, 0, 0,
	0, 1828, 0, 0, 274, 0, 0, 0, 0, 2060,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 112, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1272, 1272, 1272, 1997, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1997, 0, 0, 1272, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 1413, 0, 1834, 272, 0,
	0, 0, 0, 0, 0, 0, 1272, 0, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1997, 1997,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 1856, 1858, 0, 0,
	1997, 0, 272, 1997, 0, 0, 0, 0, 0, 2060,
	0, 0, 1873, 0, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 0, 0,
	272, 0, 274, 0, 1413, 1413, 274, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 112, 0, 0, 112, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 1826, 1827, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 1272, 1272, 0, 0, 0, 0, 0,
	0, 272, 0, 0, 1857, 0, 0, 0, 0, 274,
	0, 1829, 0, 274, 112, 1272, 0, 112, 1272, 274,
	0, 0, 1272, 112, 0, 274, 0, 0, 0, 0,
	0, 0, 1272, 0, 0, 0, 0, 1882, 0, 0,
	0, 274, 0, 274, 0, 1855, 1828, 0, 0, 274,
	0, 0, 0, 0, 0, 0, 1848, 0, 1413, 0,
	1413, 0, 1413, 0, 0, 1845, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 274, 1868, 0, 274, 0, 112,
	0, 0, 0, 0, 0, 1413, 0, 1413, 1413, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	3250, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 274, 274, 0, 274, 0, 274, 0, 274, 0,
	274, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 1410, 0, 0, 0,
	1410, 0, 1997, 0, 1997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 274, 274, 274, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 1856, 1858, 1574, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 1843, 1844, 0, 0,
	0, 3309, 0, 0, 0, 0, 2574, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 0, 0, 0, 0, 1574, 1902, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1272, 0, 1272,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 1413, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	1855, 0, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 1413, 0, 0, 1411, 1876, 0, 0, 1411, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 274, 0, 0, 1413, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 274, 0, 0, 0, 0, 0,
	1845, 1575, 0, 0, 0, 0, 0, 0, 0, 1255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 1255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 274, 0, 0, 0, 1575, 0, 0,
	0, 0, 0, 0, 1575, 0, 0, 0, 274, 0,
	0, 274, 0, 0, 0, 274, 0, 274, 0, 0,
	1575, 0, 0, 0, 274, 274, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 274, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 0, 1413, 0, 0, 1867, 0, 1575, 1877,
	0, 0, 0, 0, 0, 0, 1856, 1858, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 274, 0, 0, 0, 0,
	0, 1843, 1844, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 112, 112, 1410, 112, 112, 112, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 824,
	0, 0, 0, 0, 1849, 0, 824, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 112,
	112, 0, 112, 112, 112, 0, 0, 0, 274, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 1879,
	274, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1410, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 1413, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 274, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 1255, 0, 0, 1091, 1850, 0,
	274, 0, 274, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 112, 274, 0, 0, 0, 0, 0, 1826,
	1827, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 274, 274, 274, 274, 0,
	0, 0, 0, 1411, 274, 1882, 0, 0, 0, 274,
	0, 0, 0, 0, 1828, 0, 1574, 1574, 0, 0,
	0, 0, 0, 0, 1848, 1410, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 0, 3243, 0,
	0, 3308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 1411, 0, 0, 0, 0,
	1574, 0, 1574, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 0, 1856,
	1858, 0, 0, 0, 0, 0, 0, 1574, 0, 1574,
	1574, 1574, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 1843, 1844, 0, 0, 0, 0,
	0, 0, 0, 824, 0, 0, 1255, 1255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 1575, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 1575, 0,
	1575, 1850, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	1575, 1575, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1575, 0, 274, 0, 0, 0, 274,
	274, 0, 0, 0, 0, 1575, 0, 1575, 1575, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 274, 0, 0, 274, 0, 0, 0, 0, 1410,
	0, 274, 1255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 274, 0, 0, 0,
	0, 0, 0, 0, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 852, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 854, 0, 0, 274, 0, 855, 0, 0, 1413,
	0, 1413, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 0, 274, 1413, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 1413, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 856, 0, 873, 0, 0,
	0, 0, 0, 274, 0, 1410, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 857, 0, 0, 0, 0, 858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 112, 1413, 0,
	0, 0, 0, 1255, 0, 0, 0, 0, 0, 882,
	1413, 1255, 1413, 0, 0, 0, 859, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1411, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 853, 0, 0, 0, 0, 1413,
	0, 274, 1413, 274, 0, 1826, 1827, 1411, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 860, 0, 0,
	861, 0, 0, 0, 0, 0, 0, 1863, 1857, 0,
	0, 0, 884, 0, 0, 1829, 0, 764, 0, 0,
	274, 0, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 824, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 112, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	1848, 0, 0, 0, 0, 1574, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 1413, 0, 1574, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	883, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	878, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 1877, 0,
	0, 0, 0, 0, 865, 1856, 1858, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 1873, 0, 1874, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 763, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 851, 0,
	875, 0, 0, 1849, 0, 0, 0, 0, 0, 866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 872, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 867, 0, 1575, 0, 868, 887, 0, 886, 0,
	0, 869, 0, 0, 0, 0, 1575, 1864, 1575, 0,
	0, 0, 0, 0, 0, 870, 0, 0, 1879, 0,
	879, 0, 0, 0, 0, 1575, 888, 0, 885, 0,
	0, 0, 0, 0, 765, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 0,
	0, 274, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	274, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 2574, 0, 0, 0, 0, 0, 0, 0,
	0, 274, 0, 0, 1868, 0, 274, 0, 0, 0,
	0, 274, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 1413, 1413, 1413, 0, 0, 0, 0, 1413,
	1413, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 274, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 0, 1413, 0, 0, 0, 1866, 0, 0, 1410,
	0, 0, 0, 0, 112, 112, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 1410, 0, 0, 0, 0,
	3307, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 112, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 1413, 0, 1413, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 274, 0, 0, 112, 0, 1411,
	0, 0, 0, 112, 0, 0, 0, 1413, 0, 0,
	274, 0, 0, 274, 0, 0, 0, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 1574, 1411, 1574, 0, 0, 0, 1410, 0, 274,
	0, 0, 0, 0, 824, 1574, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 1413, 0,
	0, 0, 0, 1411, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 274, 0,
	1574, 0, 1413, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1413, 1413, 1413, 1413, 1413, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 1410, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 1857, 0, 0, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 1411, 0, 0, 1876, 1413,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 1410, 0, 0, 1828, 0, 1413, 0, 0, 0,
	0, 0, 0, 0, 1848, 1575, 274, 0, 1410, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 1575,
	0, 1575, 0, 0, 0, 1411, 0, 0, 0, 0,
	0, 0, 0, 1575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 274, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 1413, 1413, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 0, 1575, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1575, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 1867,
	0, 1413, 1877, 1410, 0, 0, 0, 0, 0, 1856,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 1411, 0, 0, 1873, 0, 1874, 0, 0,
	0, 274, 274, 0, 1843, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 274, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 0, 0, 0, 0, 1829, 0, 1855, 274,
	0, 0, 0, 0, 1413, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 1413, 0, 0, 0, 0, 0,
	0, 1850, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 1868, 1574,
	1845, 1411, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 1574, 1574, 274, 0, 1881,
	0, 1574, 1574, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 1410, 0, 0, 1834, 274, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 1867, 0, 0, 1877,
	0, 0, 0, 0, 2633, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1410, 1410, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	1875, 0, 0, 0, 0, 0, 0, 1575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 1575, 1575, 1575, 0, 0, 0, 0, 1575,
	1575, 1575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	1575, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 1411, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 1574, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1574, 1574, 1574, 1574, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 1411, 1411, 0, 1411, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 1575, 1866, 1410, 0,
	0, 0, 0, 0, 0, 0, 1411, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 4744, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1411, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1410, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1574, 1574,
	1574, 0, 0, 0, 0, 0, 0, 1411, 0, 0,
	0, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1575, 1575, 1575, 1575, 1575, 0, 0, 0, 0,
	1410, 0, 0, 1574, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 1575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1411, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1411,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1575, 1575, 1575, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1411, 0,
	0, 1575, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	1414, 289, 290, 1415, 1416, 1417, 0, 1418, 645, 1419,
	1420, 1421, 1422, 291, 292, 1212, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 1423,
	650, 301, 302, 303, 304, 305, 306, 1424, 1425, 0,
	307, 651, 652, 653, 1426, 308, 309, 654, 1427, 1494,
	1428, 310, 311, 312, 313, 314, 315, 316, 0, 1429,
	318, 319, 320, 317, 321, 1430, 322, 0, 323, 324,
	325, 326, 327, 328, 1431, 329, 330, 331, 1213, 332,
	333, 334, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 1439,
	345, 341, 343, 1440, 346, 344, 347, 1441, 348, 349,
	350, 1442, 1443, 351, 352, 353, 1444, 354, 355, 1445,
	356, 357, 358, 1446, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 1447, 279, 1448, 1575, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 1575, 376, 1449, 377, 378, 379,
	1450, 1451, 1214, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 1452, 392, 663,
	1453, 664, 393, 1454, 394, 395, 396, 397, 398, 665,
	666, 667, 482, 1216, 399, 400, 1455, 401, 402, 403,
	404, 405, 0, 0, 0, 280, 406, 407, 408, 1456,
	1215, 409, 668, 669, 1457, 670, 1458, 410, 411, 1217,
	671, 1218, 412, 413, 414, 1219, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 1459, 422, 424, 423,
	1460, 425, 672, 1220, 426, 427, 1221, 1461, 428, 429,
	430, 431, 432, 433, 436, 1462, 1463, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1222, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 1223, 478, 466, 1464, 281, 1224, 479, 480,
	1465, 673, 481, 674, 483, 484, 1466, 0, 485, 0,
	1467, 1468, 487, 488, 489, 1469, 1470, 490, 491, 675,
	1225, 492, 1226, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1471, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 1472, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 527, 526, 528, 1473,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 1474, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1475, 570,
	571, 569, 572, 573, 574, 1476, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 1477, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	1478, 602, 603, 0, 599, 590, 1479, 604, 605, 606,
	607, 608, 609, 610, 611, 1480, 612, 686, 687, 688,
	689, 1481, 621, 1482, 613, 614, 615, 690, 616, 691,
	1483, 617, 618, 619, 620, 0, 622, 623, 1484, 1485,
	624, 625, 626, 628, 629, 627, 630, 1486, 631, 1487,
	0, 632, 633, 634, 692, 693, 694, 1488, 636, 635,
	637, 695, 638, 639, 1489, 1490, 1491, 1492, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1408, 0, 0, 0, 0, 0, 0,
	0, 2801, 0, 0, 0, 0, 0, 0, 0, 2802,
	282, 284, 283, 285, 286, 287, 288, 1414, 289, 290,
	1415, 1416, 1417, 0, 1418, 645, 1419, 1420, 1421, 1422,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 1423, 650, 301, 302,
	303, 304, 305, 306, 1424, 1425, 0, 307, 651, 652,
	653, 1426, 308, 309, 654, 1427, 1494, 1428, 310, 311,
	312, 313, 314, 315, 316, 0, 1429, 318, 319, 320,
	317, 321, 1430, 322, 0, 323, 324, 325, 326, 327,
	328, 1431, 329, 330, 331, 1213, 332, 333, 334, 1432,
	1433, 1435, 1434, 1436, 1437, 1438, 335, 336, 337, 338,
	339, 0, 340, 342, 655, 656, 1439, 345, 341, 343,
	1440, 346, 344, 347, 1441, 348, 349, 350, 1442, 1443,
	351, 352, 353, 1444, 354, 355, 1445, 356, 357, 358,
	1446, 359, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 658, 659, 372, 1447, 279,
	1448, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 1449, 377, 378, 379, 1450, 1451, 1214,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 1452, 392, 663, 1453, 664, 393,
	1454, 394, 395, 396, 397, 398, 665, 666, 667, 482,
	1216, 399, 400, 1455, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 1456, 1215, 409, 668,
	669, 1457, 670, 1458, 410, 411, 1217, 671, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 1459, 422, 424, 423, 1460, 425, 672,
	1220, 426, 427, 1221, 1461, 428, 429, 430, 431, 432,
	433, 436, 1462, 1463, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 1464, 281, 1224, 479, 480, 1465, 673, 481,
	674, 483, 484, 1466, 0, 485, 0, 1467, 1468, 487,
	488, 489, 1469, 1470, 490, 491, 675, 1225, 492, 1226,
	676, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 1471, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 679, 512, 680, 513, 514, 1472,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 1473, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	1474, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 1475, 570, 571, 569, 572,
	573, 574, 1476, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	1477, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 685, 600, 601, 1478, 602, 603,
	0, 599, 590, 1479, 604, 605, 606, 607, 608, 609,
	610, 611, 1480, 612, 686, 687, 688, 689, 1481, 621,
	1482, 613, 614, 615, 690, 616, 691, 1483, 617, 618,
	619, 620, 0, 622, 623, 1484, 1485, 624, 625, 626,
	628, 629, 627, 630, 1486, 631, 1487, 0, 632, 633,
	634, 692, 693, 694, 1488, 636, 635, 637, 695, 638,
	639, 1489, 1490, 1491, 1492, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 3788, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3790, 282, 284, 283, 285, 286,
	287, 288, 1414, 289, 290, 1415, 1416, 1417, 0, 1418,
	645, 1419, 1420, 1421, 1422, 291, 292, 1212, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 1423, 650, 301, 302, 303, 304, 305, 306, 1424,
	1425, 0, 307, 651, 652, 653, 1426, 308, 309, 654,
	1427, 1494, 1428, 310, 311, 312, 313, 314, 315, 316,
	0, 1429, 318, 319, 320, 317, 321, 1430, 322, 0,
	323, 324, 325, 326, 327, 328, 1431, 329, 330, 331,
	1213, 332, 333, 334, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 1439, 345, 341, 343, 1440, 346, 344, 347, 1441,
	348, 349, 350, 1442, 1443, 351, 352, 353, 1444, 354,
	355, 1445, 356, 357, 358, 1446, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 1447, 279, 1448, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 1449, 377,
	378, 379, 1450, 1451, 1214, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 1452,
	392, 663, 1453, 664, 393, 1454, 394, 395, 396, 397,
	398, 665, 666, 667, 482, 1216, 399, 400, 1455, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 1456, 1215, 409, 668, 669, 1457, 670, 1458, 410,
	411, 1217, 671, 1218, 412, 413, 414, 1219, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 1459, 422,
	424, 423, 1460, 425, 672, 1220, 426, 427, 1221, 1461,
	428, 429, 430, 431, 432, 433, 436, 1462, 1463, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1222, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 1223, 478, 466, 1464, 281, 1224,
	479, 480, 1465, 673, 481, 674, 483, 484, 1466, 0,
	485, 0, 1467, 1468, 487, 488, 489, 1469, 1470, 490,
	491, 675, 1225, 492, 1226, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1471, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 1472, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 1473, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1474, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1475, 570, 571, 569, 572, 573, 574, 1476, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 1477, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 1478, 602, 603, 0, 599, 590, 1479, 604,
	605, 606, 607, 608, 609, 610, 611, 1480, 612, 686,
	687, 688, 689, 1481, 621, 1482, 613, 614, 615, 690,
	616, 691, 1483, 617, 618, 619, 620, 0, 622, 623,
	1484, 1485, 624, 625, 626, 628, 629, 627, 630, 1486,
	631, 1487, 0, 632, 633, 634, 692, 693, 694, 1488,
	636, 635, 637, 695, 638, 639, 1489, 1490, 1491, 1492,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1408, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4194, 282, 284, 283, 285, 286, 287,
	288, 1414, 289, 290, 1415, 1416, 1417, 0, 1418, 645,
	1419, 1420, 1421, 1422, 291, 292, 1212, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	1423, 650, 301, 302, 303, 304, 305, 306, 1424, 1425,
	0, 307, 651, 652, 653, 1426, 308, 309, 654, 1427,
	1494, 1428, 310, 311, 312, 313, 314, 315, 316, 0,
	1429, 318, 319, 320, 317, 321, 1430, 322, 0, 323,
	324, 325, 326, 327, 328, 1431, 329, 330, 331, 1213,
	332, 333, 334, 1432, 1433, 1435, 1434, 1436, 1437, 1438,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	1439, 345, 341, 343, 1440, 346, 344, 347, 1441, 348,
	349, 350, 1442, 1443, 351, 352, 353, 1444, 354, 355,
	1445, 356, 357, 358, 1446, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 1447, 279, 1448, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 1449, 377, 378,
	379, 1450, 1451, 1214, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 1452, 392,
	663, 1453, 664, 393, 1454, 394, 395, 396, 397, 398,
	665, 666, 667, 482, 1216, 399, 400, 1455, 401, 402,
	403, 404, 405, 0, 0, 0, 280, 406, 407, 408,
	1456, 1215, 409, 668, 669, 1457, 670, 1458, 410, 411,
	1217, 671, 1218, 412, 413, 414, 1219, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 1459, 422, 424,
	423, 1460, 425, 672, 1220, 426, 427, 1221, 1461, 428,
	429, 430, 431, 432, 433, 436, 1462, 1463, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1222, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 1223, 478, 466, 1464, 281, 1224, 479,
	480, 1465, 673, 481, 674, 483, 484, 1466, 0, 485,
	0, 1467, 1468, 487, 488, 489, 1469, 1470, 490, 491,
	675, 1225, 492, 1226, 676, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 1471, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 1472, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 681, 524, 525, 527, 526, 528,
	1473, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 1474, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 682, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 1475,
	570, 571, 569, 572, 573, 574, 1476, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 1477, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 1478, 602, 603, 0, 599, 590, 1479, 604, 605,
	606, 607, 608, 609, 610, 611, 1480, 612, 686, 687,
	688, 689, 1481, 621, 1482, 613, 614, 615, 690, 616,
	691, 1483, 617, 618, 619, 620, 0, 622, 623, 1484,
	1485, 624, 625, 626, 628, 629, 627, 630, 1486, 631,
	1487, 0, 632, 633, 634, 692, 693, 694, 1488, 636,
	635, 637, 695, 638, 639, 1489, 1490, 1491, 1492, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4192, 282, 284, 283, 285, 286, 287, 288,
	1414, 289, 290, 1415, 1416, 1417, 0, 1418, 645, 1419,
	1420, 1421, 1422, 291, 292, 1212, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 1423,
	650, 301, 302, 303, 304, 305, 306, 1424, 1425, 0,
	307, 651, 652, 653, 1426, 308, 309, 654, 1427, 1494,
	1428, 310, 311, 312, 313, 314, 315, 316, 0, 1429,
	318, 319, 320, 317, 321, 1430, 322, 0, 323, 324,
	325, 326, 327, 328, 1431, 329, 330, 331, 1213, 332,
	333, 334, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 1439,
	345, 341, 343, 1440, 346, 344, 347, 1441, 348, 349,
	350, 1442, 1443, 351, 352, 353, 1444, 354, 355, 1445,
	356, 357, 358, 1446, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 1447, 279, 1448, 0, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 0, 376, 1449, 377, 378, 379,
	1450, 1451, 1214, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 1452, 392, 663,
	1453, 664, 393, 1454, 394, 395, 396, 397, 398, 665,
	666, 667, 482, 1216, 399, 400, 1455, 401, 402, 403,
	404, 405, 0, 0, 0, 280, 406, 407, 408, 1456,
	1215, 409, 668, 669, 1457, 670, 1458, 410, 411, 1217,
	671, 1218, 412, 413, 414, 1219, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 1459, 422, 424, 423,
	1460, 425, 672, 1220, 426, 427, 1221, 1461, 428, 429,
	430, 431, 432, 433, 436, 1462, 1463, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1222, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 1223, 478, 466, 1464, 281, 1224, 479, 480,
	1465, 673, 481, 674, 483, 484, 1466, 0, 485, 0,
	1467, 1468, 487, 488, 489, 1469, 1470, 490, 491, 675,
	1225, 492, 1226, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1471, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 1472, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 527, 526, 528, 1473,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 1474, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1475, 570,
	571, 569, 572, 573, 574, 1476, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 1477, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	1478, 602, 603, 0, 599, 590, 1479, 604, 605, 606,
	607, 608, 609, 610, 611, 1480, 612, 686, 687, 688,
	689, 1481, 621, 1482, 613, 614, 615, 690, 616, 691,
	1483, 617, 618, 619, 620, 0, 622, 623, 1484, 1485,
	624, 625, 626, 628, 629, 627, 630, 1486, 631, 1487,
	0, 632, 633, 634, 692, 693, 694, 1488, 636, 635,
	637, 695, 638, 639, 1489, 1490, 1491, 1492, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4412, 282, 284, 283,
	285, 286, 287, 288, 1414, 289, 290, 1415, 1416, 1417,
	0, 1418, 645, 1419, 1420, 1421, 1422, 291, 292, 1212,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 1423, 650, 301, 302, 303, 304, 305,
	306, 1424, 1425, 0, 307, 651, 652, 653, 1426, 308,
	309, 654, 1427, 1494, 1428, 310, 311, 312, 313, 314,
	315, 316, 0, 1429, 318, 319, 320, 317, 321, 1430,
	322, 0, 323, 324, 325, 326, 327, 328, 1431, 329,
	330, 331, 1213, 332, 333, 334, 1432, 1433, 1435, 1434,
	1436, 1437, 1438, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 1439, 345, 341, 343, 1440, 346, 344,
	347, 1441, 348, 349, 350, 1442, 1443, 351, 352, 353,
	1444, 354, 355, 1445, 356, 357, 358, 1446, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 1447, 279, 1448, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	1449, 377, 378, 379, 1450, 1451, 1214, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 1452, 392, 663, 1453, 664, 393, 1454, 394, 395,
	396, 397, 398, 665, 666, 667, 482, 1216, 399, 400,
	1455, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 1456, 1215, 409, 668, 669, 1457, 670,
	1458, 410, 411, 1217, 671, 1218, 412, 413, 414, 1219,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	1459, 422, 424, 423, 1460, 425, 672, 1220, 426, 427,
	1221, 1461, 428, 429, 430, 431, 432, 433, 436, 1462,
	1463, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1222, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 1223, 478, 466, 1464,
	281, 1224, 479, 480, 1465, 673, 481, 674, 483, 484,
	1466, 0, 485, 0, 1467, 1468, 487, 488, 489, 1469,
	1470, 490, 491, 675, 1225, 492, 1226, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	1471, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 1472, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 1473, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 1474, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 1475, 570, 571, 569, 572, 573, 574, 1476,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 1477, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 1478, 602, 603, 0, 599, 590,
	1479, 604, 605, 606, 607, 608, 609, 610, 611, 1480,
	612, 686, 687, 688, 689, 1481, 621, 1482, 613, 614,
	615, 690, 616, 691, 1483, 617, 618, 619, 620, 0,
	622, 623, 1484, 1485, 624, 625, 626, 628, 629, 627,
	630, 1486, 631, 1487, 0, 632, 633, 634, 692, 693,
	694, 1488, 636, 635, 637, 695, 638, 639, 1489, 1490,
	1491, 1492, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4276, 282, 284, 283, 285, 286, 287, 288, 1414, 289,
	290, 1415, 1416, 1417, 0, 1418, 645, 1419, 1420, 1421,
	1422, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 1423, 650, 301,
	302, 303, 304, 305, 306, 1424, 1425, 0, 307, 651,
	652, 653, 1426, 308, 309, 654, 1427, 1494, 1428, 310,
	311, 312, 313, 314, 315, 316, 0, 1429, 318, 319,
	320, 317, 321, 1430, 322, 0, 323, 324, 325, 326,
	327, 328, 1431, 329, 330, 331, 1213, 332, 333, 334,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 1439, 345, 341,
	343, 1440, 346, 344, 347, 1441, 348, 349, 350, 1442,
	1443, 351, 352, 353, 1444, 354, 355, 1445, 356, 357,
	358, 1446, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 1447,
	279, 1448, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 1449, 377, 378, 379, 1450, 1451,
	1214, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 1452, 392, 663, 1453, 664,
	393, 1454, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 1216, 399, 400, 1455, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 1456, 1215, 409,
	668, 669, 1457, 670, 1458, 410, 411, 1217, 671, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 1459, 422, 424, 423, 1460, 425,
	672, 1220, 426, 427, 1221, 1461, 428, 429, 430, 431,
	432, 433, 436, 1462, 1463, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1464, 281, 1224, 479, 480, 1465, 673,
	481, 674, 483, 484, 1466, 0, 485, 0, 1467, 1468,
	487, 488, 489, 1469, 1470, 490, 491, 675, 1225, 492,
	1226, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 1471, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	1472, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 1473, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 1474, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 1475, 570, 571, 569,
	572, 573, 574, 1476, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 1477, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 1478, 602,
	603, 0, 599, 590, 1479, 604, 605, 606, 607, 608,
	609, 610, 611, 1480, 612, 686, 687, 688, 689, 1481,
	621, 1482, 613, 614, 615, 690, 616, 691, 1483, 617,
	618, 619, 620, 0, 622, 623, 1484, 1485, 624, 625,
	626, 628, 629, 627, 630, 1486, 631, 1487, 0, 632,
	633, 634, 692, 693, 694, 1488, 636, 635, 637, 695,
	638, 639, 1489, 1490, 1491, 1492, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 1408, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4122, 282, 284, 283, 285, 286,
	287, 288, 1414, 289, 290, 1415, 1416, 1417, 0, 1418,
	645, 1419, 1420, 1421, 1422, 291, 292, 1212, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 1423, 650, 301, 302, 303, 304, 305, 306, 1424,
	1425, 0, 307, 651, 652, 653, 1426, 308, 309, 654,
	1427, 1494, 1428, 310, 311, 312, 313, 314, 315, 316,
	0, 1429, 318, 319, 320, 317, 321, 1430, 322, 0,
	323, 324, 325, 326, 327, 328, 1431, 329, 330, 331,
	1213, 332, 333, 334, 1432, 1433, 1435, 1434, 1436, 1437,
	1438, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 1439, 345, 341, 343, 1440, 346, 344, 347, 1441,
	348, 349, 350, 1442, 1443, 351, 352, 353, 1444, 354,
	355, 1445, 356, 357, 358, 1446, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 1447, 279, 1448, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 1449, 377,
	378, 379, 1450, 1451, 1214, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 1452,
	392, 663, 1453, 664, 393, 1454, 394, 395, 396, 397,
	398, 665, 666, 667, 482, 1216, 399, 400, 1455, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 1456, 1215, 409, 668, 669, 1457, 670, 1458, 410,
	411, 1217, 671, 1218, 412, 413, 414, 1219, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 1459, 422,
	424, 423, 1460, 425, 672, 1220, 426, 427, 1221, 1461,
	428, 429, 430, 431, 432, 433, 436, 1462, 1463, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1222, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 1223, 478, 466, 1464, 281, 1224,
	479, 480, 1465, 673, 481, 674, 483, 484, 1466, 0,
	485, 0, 1467, 1468, 487, 488, 489, 1469, 1470, 490,
	491, 675, 1225, 492, 1226, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 1471, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 1472, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 1473, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 1474, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	1475, 570, 571, 569, 572, 573, 574, 1476, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 1477, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 1478, 602, 603, 0, 599, 590, 1479, 604,
	605, 606, 607, 608, 609, 610, 611, 1480, 612, 686,
	687, 688, 689, 1481, 621, 1482, 613, 614, 615, 690,
	616, 691, 1483, 617, 618, 619, 620, 0, 622, 623,
	1484, 1485, 624, 625, 626, 628, 629, 627, 630, 1486,
	631, 1487, 0, 632, 633, 634, 692, 693, 694, 1488,
	636, 635, 637, 695, 638, 639, 1489, 1490, 1491, 1492,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3806, 282,
	284, 283, 285, 286, 287, 288, 1414, 289, 290, 1415,
	1416, 1417, 0, 1418, 645, 1419, 1420, 1421, 1422, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 1423, 650, 301, 302, 303,
	304, 305, 306, 1424, 1425, 0, 307, 651, 652, 653,
	1426, 308, 309, 654, 1427, 1494, 1428, 310, 311, 312,
	313, 314, 315, 316, 0, 1429, 318, 319, 320, 317,
	321, 1430, 322, 0, 323, 324, 325, 326, 327, 328,
	1431, 329, 330, 331, 1213, 332, 333, 334, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 1439, 345, 341, 343, 1440,
	346, 344, 347, 1441, 348, 349, 350, 1442, 1443, 351,
	352, 353, 1444, 354, 355, 1445, 356, 357, 358, 1446,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 1447, 279, 1448,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 1449, 377, 378, 379, 1450, 1451, 1214, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 1452, 392, 663, 1453, 664, 393, 1454,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 1216,
	399, 400, 1455, 401, 402, 403, 404, 405, 0, 0,
	0, 280, 406, 407, 408, 1456, 1215, 409, 668, 669,
	1457, 670, 1458, 410, 411, 1217, 671, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 1459, 422, 424, 423, 1460, 425, 672, 1220,
	426, 427, 1221, 1461, 428, 429, 430, 431, 432, 433,
	436, 1462, 1463, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 1464, 281, 1224, 479, 480, 1465, 673, 481, 674,
	483, 484, 1466, 0, 485, 0, 1467, 1468, 487, 488,
	489, 1469, 1470, 490, 491, 675, 1225, 492, 1226, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1471, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 1472, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 1473, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1474,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1475, 570, 571, 569, 572, 573,
	574, 1476, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 1477,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 1478, 602, 603, 0,
	599, 590, 1479, 604, 605, 606, 607, 608, 609, 610,
	611, 1480, 612, 686, 687, 688, 689, 1481, 621, 1482,
	613, 614, 615, 690, 616, 691, 1483, 617, 618, 619,
	620, 0, 622, 623, 1484, 1485, 624, 625, 626, 628,
	629, 627, 630, 1486, 631, 1487, 0, 632, 633, 634,
	692, 693, 694, 1488, 636, 635, 637, 695, 638, 639,
	1489, 1490, 1491, 1492, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 1408, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3626, 282, 284, 283, 285, 286, 287, 288,
	1414, 289, 290, 1415, 1416, 1417, 0, 1418, 645, 1419,
	1420, 1421, 1422, 291, 292, 1212, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 1423,
	650, 301, 302, 303, 304, 305, 306, 1424, 1425, 0,
	307, 651, 652, 653, 1426, 308, 309, 654, 1427, 1494,
	1428, 310, 311, 312, 313, 314, 315, 316, 0, 1429,
	318, 319, 320, 317, 321, 1430, 322, 0, 323, 324,
	325, 326, 327, 328, 1431, 329, 330, 331, 1213, 332,
	333, 334, 1432, 1433, 1435, 1434, 1436, 1437, 1438, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 1439,
	345, 341, 343, 1440, 346, 344, 347, 1441, 348, 349,
	350, 1442, 1443, 351, 352, 353, 1444, 354, 355, 1445,
	356, 357, 358, 1446, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 1447, 279, 1448, 0, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 0, 376, 1449, 377, 378, 379,
	1450, 1451, 1214, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 1452, 392, 663,
	1453, 664, 393, 1454, 394, 395, 396, 397, 398, 665,
	666, 667, 482, 1216, 399, 400, 1455, 401, 402, 403,
	404, 405, 0, 0, 0, 280, 406, 407, 408, 1456,
	1215, 409, 668, 669, 1457, 670, 1458, 410, 411, 1217,
	671, 1218, 412, 413, 414, 1219, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 1459, 422, 424, 423,
	1460, 425, 672, 1220, 426, 427, 1221, 1461, 428, 429,
	430, 431, 432, 433, 436, 1462, 1463, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1222, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 1223, 478, 466, 1464, 281, 1224, 479, 480,
	1465, 673, 481, 674, 483, 484, 1466, 0, 485, 0,
	1467, 1468, 487, 488, 489, 1469, 1470, 490, 491, 675,
	1225, 492, 1226, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 1471, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 1472, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 527, 526, 528, 1473,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 1474, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 1475, 570,
	571, 569, 572, 573, 574, 1476, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 1477, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	1478, 602, 603, 0, 599, 590, 1479, 604, 605, 606,
	607, 608, 609, 610, 611, 1480, 612, 686, 687, 688,
	689, 1481, 621, 1482, 613, 614, 615, 690, 616, 691,
	1483, 617, 618, 619, 620, 0, 622, 623, 1484, 1485,
	624, 625, 626, 628, 629, 627, 630, 1486, 631, 1487,
	0, 632, 633, 634, 692, 693, 694, 1488, 636, 635,
	637, 695, 638, 639, 1489, 1490, 1491, 1492, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	1408, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2656, 282, 284, 283,
	285, 286, 287, 288, 1414, 289, 290, 1415, 1416, 1417,
	0, 1418, 645, 1419, 1420, 1421, 1422, 291, 292, 1212,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 1423, 650, 301, 302, 303, 304, 305,
	306, 1424, 1425, 0, 307, 651, 652, 653, 1426, 308,
	309, 654, 1427, 1494, 1428, 310, 311, 312, 313, 314,
	315, 316, 0, 1429, 318, 319, 320, 317, 321, 1430,
	322, 0, 323, 324, 325, 326, 327, 328, 1431, 329,
	330, 331, 1213, 332, 333, 334, 1432, 1433, 1435, 1434,
	1436, 1437, 1438, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 1439, 345, 341, 343, 1440, 346, 344,
	347, 1441, 348, 349, 350, 1442, 1443, 351, 352, 353,
	1444, 354, 355, 1445, 356, 357, 358, 1446, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 1447, 279, 1448, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	1449, 377, 378, 379, 1450, 1451, 1214, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 1452, 392, 663, 1453, 664, 393, 1454, 394, 395,
	396, 397, 398, 665, 666, 667, 482, 1216, 399, 400,
	1455, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 1456, 1215, 409, 668, 669, 1457, 670,
	1458, 410, 411, 1217, 671, 1218, 412, 413, 414, 1219,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	1459, 422, 424, 423, 1460, 425, 672, 1220, 426, 427,
	1221, 1461, 428, 429, 430, 431, 432, 433, 436, 1462,
	1463, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1222, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 1223, 478, 466, 1464,
	281, 1224, 479, 480, 1465, 673, 481, 674, 483, 484,
	1466, 0, 485, 0, 1467, 1468, 487, 488, 489, 1469,
	1470, 490, 491, 675, 1225, 492, 1226, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	1471, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 1472, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 1473, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 1474, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 1475, 570, 571, 569, 572, 573, 574, 1476,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 1477, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 1478, 602, 603, 0, 599, 590,
	1479, 604, 605, 606, 607, 608, 609, 610, 611, 1480,
	612, 686, 687, 688, 689, 1481, 621, 1482, 613, 614,
	615, 690, 616, 691, 1483, 617, 618, 619, 620, 0,
	622, 623, 1484, 1485, 624, 625, 626, 628, 629, 627,
	630, 1486, 631, 1487, 0, 632, 633, 634, 692, 693,
	694, 1488, 636, 635, 637, 695, 638, 639, 1489, 1490,
	1491, 1492, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 1505, 0, 1408, 0, 0, 0, 1513, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2281, 282, 284, 283, 285, 286, 287, 288, 1414, 289,
	290, 1415, 1416, 1417, 0, 1418, 645, 1419, 1420, 1421,
	1422, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 1423, 650, 301,
	302, 303, 304, 305, 306, 1424, 1425, 0, 307, 651,
	652, 653, 1426, 308, 309, 654, 1427, 1494, 1428, 310,
	311, 312, 313, 314, 315, 316, 0, 1429, 318, 319,
	320, 317, 321, 1430, 322, 0, 323, 324, 325, 326,
	327, 328, 1431, 329, 330, 331, 1213, 332, 333, 334,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 1439, 345, 341,
	343, 1440, 346, 344, 347, 1441, 348, 349, 350, 1442,
	1443, 351, 352, 353, 1444, 354, 355, 1445, 356, 357,
	358, 1446, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 1511, 368, 369, 370, 371, 658, 659, 372, 1447,
	279, 1448, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 1449, 377, 378, 379, 1450, 1451,
	1214, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 1452, 392, 663, 1453, 664,
	393, 1454, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 1216, 399, 400, 1455, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 1456, 1215, 409,
	668, 669, 1457, 670, 1458, 410, 411, 1217, 671, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 1459, 422, 424, 423, 1460, 425,
	672, 1220, 426, 427, 1221, 1461, 428, 429, 430, 431,
	432, 433, 436, 1462, 1463, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1464, 281, 1224, 479, 480, 1465, 673,
	481, 674, 483, 484, 1466, 0, 485, 0, 1467, 1468,
	487, 488, 489, 1469, 1470, 490, 491, 675, 1225, 492,
	1226, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 1471, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	1472, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 1473, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 1512,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 1474, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 1475, 570, 571, 569,
	572, 573, 574, 1476, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 1477, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 1478, 602,
	603, 0, 599, 590, 1479, 604, 605, 606, 607, 608,
	609, 1510, 611, 1480, 612, 686, 687, 688, 689, 1481,
	621, 1482, 613, 614, 615, 690, 616, 691, 1483, 617,
	618, 619, 620, 0, 622, 623, 1484, 1485, 624, 625,
	626, 628, 629, 627, 630, 1486, 631, 1487, 0, 632,
	633, 634, 692, 693, 694, 1488, 636, 635, 637, 695,
	638, 639, 1489, 1490, 1491, 1492, 640, 641, 696, 642,
	643, 644, 1405, 0, 1408, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 1414, 289,
	290, 1415, 1416, 1417, 0, 1418, 645, 1419, 1420, 1421,
	1422, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 1423, 650, 301,
	302, 303, 304, 305, 306, 1424, 1425, 0, 307, 651,
	652, 653, 1426, 308, 309, 654, 1427, 1494, 1428, 310,
	311, 312, 313, 314, 315, 316, 0, 1429, 318, 319,
	320, 317, 321, 1430, 322, 0, 323, 324, 325, 326,
	327, 328, 1431, 329, 330, 331, 1213, 332, 333, 334,
	1432, 1433, 1435, 1434, 1436, 1437, 1438, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 1439, 345, 341,
	343, 1440, 346, 344, 347, 1441, 348, 349, 350, 1442,
	1443, 351, 352, 353, 1444, 354, 355, 1445, 356, 357,
	358, 1446, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 1447,
	279, 1448, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 1449, 377, 378, 379, 1450, 1451,
	1214, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 1452, 392, 663, 1453, 664,
	393, 1454, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 1216, 399, 400, 1455, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 1456, 1215, 409,
	668, 669, 1457, 670, 1458, 410, 411, 1217, 671, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 1459, 422, 424, 423, 1460, 425,
	672, 1220, 426, 427, 1221, 1461, 428, 429, 430, 431,
	432, 433, 436, 1462, 1463, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1464, 281, 1224, 479, 480, 1465, 673,
	481, 674, 483, 484, 1466, 0, 485, 0, 1467, 1468,
	487, 488, 489, 1469, 1470, 490, 491, 675, 1225, 492,
	1226, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 1471, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	1472, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 1473, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 1474, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 1475, 570, 571, 569,
	572, 573, 574, 1476, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 1477, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 1478, 602,
	603, 0, 599, 590, 1479, 604, 605, 606, 607, 608,
	609, 610, 611, 1480, 612, 686, 687, 688, 689, 1481,
	621, 1482, 613, 614, 615, 690, 616, 691, 1483, 617,
	618, 619, 620, 0, 622, 623, 1484, 1485, 624, 625,
	626, 628, 629, 627, 630, 1486, 631, 1487, 0, 632,
	633, 634, 692, 693, 694, 1488, 636, 635, 637, 695,
	638, 639, 1489, 1490, 1491, 1492, 640, 641, 696, 642,
	643, 644, 1408, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 1414, 289, 290, 1415,
	1416, 1417, 0, 1418, 645, 1419, 1420, 1421, 1422, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 1423, 650, 301, 302, 303,
	304, 305, 306, 1424, 1425, 0, 307, 651, 652, 653,
	1426, 308, 309, 654, 1427, 1494, 1428, 310, 311, 312,
	313, 314, 315, 316, 0, 1429, 318, 319, 320, 317,
	321, 1430, 322, 0, 323, 324, 325, 326, 327, 328,
	1431, 329, 330, 331, 1213, 332, 333, 334, 1432, 1433,
	1435, 1434, 1436, 1437, 1438, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 1439, 345, 341, 343, 1440,
	346, 344, 347, 1441, 348, 349, 350, 1442, 1443, 351,
	352, 353, 1444, 354, 355, 1445, 356, 357, 358, 1446,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 1447, 279, 1448,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 1449, 377, 378, 379, 1450, 1451, 1214, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 1452, 392, 663, 1453, 664, 393, 1454,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 1216,
	399, 400, 1455, 401, 402, 403, 404, 405, 0, 0,
	0, 280, 406, 407, 408, 1456, 1215, 409, 668, 669,
	1457, 670, 1458, 410, 411, 1217, 671, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 1459, 422, 424, 423, 1460, 425, 672, 1220,
	426, 427, 1221, 1461, 428, 429, 430, 431, 432, 433,
	436, 1462, 1463, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 1464, 281, 1224, 479, 480, 1465, 673, 481, 674,
	483, 484, 1466, 0, 485, 0, 1467, 1468, 487, 488,
	489, 1469, 1470, 490, 491, 675, 1225, 492, 1226, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 1471, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 1472, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 1473, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 1474,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 1475, 570, 571, 569, 572, 573,
	574, 1476, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 1477,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 1478, 602, 603, 0,
	599, 590, 1479, 604, 605, 606, 607, 608, 609, 610,
	611, 1480, 612, 686, 687, 688, 689, 1481, 621, 1482,
	613, 614, 615, 690, 616, 691, 1483, 617, 618, 619,
	620, 0, 622, 623, 1484, 1485, 624, 625, 626, 628,
	629, 627, 630, 1486, 631, 1487, 0, 632, 633, 634,
	692, 693, 694, 1488, 636, 635, 637, 695, 638, 639,
	1489, 1490, 1491, 1492, 640, 641, 696, 642, 643, 644,
	2631, 0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 2628, 289, 290, 0,
	0, 0, 0, 0, 1172, 1136, 0, 0, 0, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 1185,
	0, 299, 1192, 300, 1191, 0, 1202, 301, 302, 303,
	304, 305, 306, 1138, 1171, 1103, 307, 1232, 1233, 653,
	0, 308, 309, 1178, 0, 1159, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1213, 332, 333, 334, 1162, 1160,
	1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338, 339,
	1195, 340, 342, 1189, 1188, 1108, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 2629, 0, 351,
	1180, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1114, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1203, 1204, 372, 1127, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1187, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1214, 380,
	381, 382, 1200, 1201, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1210, 0, 1137, 393, 0,
	394, 395, 396, 397, 398, 1173, 1174, 1177, 482, 1216,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 280, 406, 407, 408, 0, 1215, 409, 1182, 1183,
	0, 1143, 0, 410, 411, 1217, 1175, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1211, 1220,
	426, 427, 1221, 0, 428, 429, 430, 431, 432, 433,
	436, 1166, 1165, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 1105, 281, 1224, 479, 480, 1128, 1176, 481, 1190,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 1225, 492, 1226, 1205,
	493, 494, 1115, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 1206, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1186,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 1116,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1169, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 1184, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 1231, 593,
	594, 595, 596, 1207, 600, 601, 0, 602, 603, 1102,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 1196, 1197, 1198, 1199, 0, 621, 0,
	613, 614, 615, 1208, 616, 1209, 1126, 617, 618, 619,
	620, 0, 622, 623, 0, 1109, 624, 625, 626, 628,
	629, 627, 630, 1170, 631, 0, 0, 632, 633, 634,
	692, 1193, 1230, 2627, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1106, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1101, 0, 0, 0, 0, 0, 0,
	1099, 1100, 2630, 0, 0, 0, 0, 0, 0, 1132,
	2626, 0, 1092, 1130, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1172, 1136, 0, 0,
	0, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 1185, 0, 299, 1192, 300, 1191, 0, 1202, 301,
	302, 303, 304, 305, 306, 1138, 1171, 1103, 307, 1232,
	1233, 653, 0, 308, 309, 1178, 0, 1159, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 334,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337,
	338, 339, 1195, 340, 342, 1189, 1188, 1108, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1180, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1114, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1203, 1204, 372, 1127,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1187,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1214, 380, 381, 382, 1200, 1201, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1210, 0, 1137,
	393, 0, 394, 395, 396, 397, 398, 1173, 1174, 1177,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 1215, 409,
	1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1211, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 1166, 1165, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1105, 281, 1224, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 1206, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1186, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 241, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	1231, 593, 594, 595, 596, 1207, 600, 601, 0, 602,
	603, 1102, 599, 590, 243, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 1196, 1197, 1198, 1199, 0,
	621, 0, 613, 614, 615, 1208, 616, 1209, 1126, 617,
	618, 619, 620, 0, 622, 623, 0, 1109, 624, 625,
	626, 628, 629, 627, 630, 1170, 631, 0, 0, 632,
	633, 634, 1646, 1193, 1230, 0, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 235, 640, 641, 696, 642,
	643, 644, 1106, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 1907, 1905, 0, 0, 1130, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1172, 1136, 0, 0,
	0, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 1185, 0, 299, 1192, 300, 1191, 0, 1202, 301,
	302, 303, 304, 305, 306, 1138, 1171, 1103, 307, 1232,
	1233, 653, 0, 308, 309, 1178, 0, 1159, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 334,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337,
	338, 339, 1195, 340, 342, 1189, 1188, 1108, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1180, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1114, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1203, 1204, 372, 1127,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1187,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1214, 380, 381, 382, 1200, 1201, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1210, 0, 1137,
	393, 0, 394, 395, 396, 397, 398, 1173, 1174, 1177,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 1215, 409,
	1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1211, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 1166, 1165, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1105, 281, 1224, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 1206, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1186, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 241, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	1231, 593, 594, 595, 596, 1207, 600, 601, 0, 602,
	603, 1102, 599, 590, 243, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 1196, 1197, 1198, 1199, 0,
	621, 0, 613, 614, 615, 1208, 616, 1209, 1126, 617,
	618, 619, 620, 0, 622, 623, 0, 1109, 624, 625,
	626, 628, 629, 627, 630, 1170, 631, 0, 0, 632,
	633, 634, 1646, 1193, 1230, 0, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 235, 640, 641, 696, 642,
	643, 644, 1106, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 1907, 3263, 0, 0, 1130, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1172, 1136, 0, 0,
	0, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 1185, 0, 299, 1192, 300, 1191, 0, 1202, 301,
	302, 303, 304, 305, 306, 1138, 1171, 1103, 307, 1232,
	1233, 653, 0, 308, 309, 1178, 0, 1159, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 334,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337,
	338, 339, 1195, 340, 342, 1189, 1188, 1108, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1180, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1114, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1203, 1204, 372, 1127,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1187,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1214, 380, 381, 382, 1200, 1201, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1210, 0, 1137,
	393, 0, 394, 395, 396, 397, 398, 1173, 1174, 1177,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 1215, 409,
	1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1211, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 1166, 1165, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1105, 281, 1224, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 1206, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1186, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 241, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	1231, 593, 594, 595, 596, 1207, 600, 601, 0, 602,
	603, 1102, 599, 590, 243, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 1196, 1197, 1198, 1199, 0,
	621, 0, 613, 614, 615, 1208, 616, 1209, 1126, 617,
	618, 619, 620, 0, 622, 623, 0, 1109, 624, 625,
	626, 628, 629, 627, 630, 1170, 631, 0, 0, 632,
	633, 634, 1646, 1193, 1230, 0, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 235, 640, 641, 696, 642,
	643, 644, 1106, 0, 236, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 1907, 1905, 0, 0, 1130, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1172, 1136, 0, 0,
	0, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 1185, 0, 299, 1192, 300, 1191, 2762, 1202, 301,
	302, 303, 304, 305, 306, 1138, 1171, 1103, 307, 1232,
	1233, 653, 0, 308, 309, 1178, 0, 1159, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 334,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337,
	338, 339, 1195, 340, 342, 1189, 1188, 1108, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1180, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1114, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1203, 1204, 372, 1127,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1187,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 2767,
	1214, 380, 381, 382, 1200, 1201, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1210, 0, 1137,
	393, 0, 394, 395, 396, 397, 398, 1173, 1174, 1177,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 1215, 409,
	1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 2763, 425,
	1211, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 1166, 1165, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1105, 281, 1224, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 1206, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1186, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	1231, 593, 594, 595, 596, 1207, 600, 601, 0, 602,
	603, 1102, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 1196, 1197, 1198, 1199, 0,
	621, 2764, 613, 614, 615, 1208, 616, 1209, 1126, 617,
	618, 619, 620, 0, 622, 623, 0, 1109, 624, 625,
	626, 628, 629, 627, 630, 1170, 631, 0, 0, 632,
	633, 634, 692, 1193, 1230, 0, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1106, 0, 0, 2676, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 282, 284, 283, 285, 286, 287,
	288, 1132, 289, 290, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 291, 292, 1212, 293, 294, 295,
	296, 297, 298, 646, 1185, 0, 299, 1192, 300, 1191,
	0, 1202, 301, 302, 303, 304, 305, 306, 1138, 1171,
	1103, 307, 1232, 1233, 653, 0, 308, 309, 1178, 0,
	1159, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1213,
	332, 333, 334, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	335, 336, 337, 338, 339, 1195, 340, 342, 1189, 1188,
	1108, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1180, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1114, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1203,
	1204, 372, 1127, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 1187, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1214, 380, 381, 382, 1200, 1201, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1210, 0, 1137, 393, 0, 394, 395, 396, 397, 398,
	1173, 1174, 1177, 482, 1216, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 280, 406, 407, 408,
	0, 1215, 409, 1182, 1183, 0, 1143, 0, 410, 411,
	1217, 1175, 1218, 412, 413, 414, 1219, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 1211, 1220, 426, 427, 1221, 0, 428,
	429, 430, 431, 432, 433, 436, 1166, 1165, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1222, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 1223, 478, 466, 1105, 281, 1224, 479,
	480, 1128, 1176, 481, 1190, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 1225, 492, 1226, 1205, 493, 494, 1115, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 1206, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1186, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 1116, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1169, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 1184, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 1231, 593, 594, 595, 596, 1207, 600,
	601, 0, 602, 603, 1102, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 1196, 1197,
	1198, 1199, 0, 621, 0, 613, 614, 615, 1208, 616,
	1209, 1126, 617, 618, 619, 620, 0, 622, 623, 0,
	1109, 624, 625, 626, 628, 629, 627, 630, 1170, 631,
	0, 0, 632, 633, 634, 692, 1193, 1230, 0, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1106, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1101, 0,
	0, 0, 0, 0, 0, 1099, 1100, 0, 0, 0,
	0, 0, 0, 0, 1132, 2674, 0, 2673, 1130, 1148,
	1120, 1121, 1122, 1118, 1119, 1131, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 1172, 1136, 0, 0, 0, 291, 292, 1212, 293,
	294, 295, 296, 297, 298, 646, 1185, 0, 299, 1192,
	300, 1191, 0, 1202, 301, 302, 303, 304, 305, 306,
	1138, 1171, 1103, 307, 1232, 1233, 653, 0, 308, 309,
	1178, 0, 1159, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1213, 332, 333, 334, 1162, 1160, 1161, 1168, 1164,
	1163, 1167, 335, 336, 337, 338, 339, 1195, 340, 342,
	1189, 1188, 1108, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1180, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 1114,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1203, 1204, 372, 1127, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 1187, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1214, 380, 381, 382, 1200,
	1201, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1210, 0, 1137, 393, 0, 394, 395, 396,
	397, 398, 1173, 1174, 1177, 482, 1216, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 280, 406,
	407, 408, 0, 1215, 409, 1182, 1183, 0, 1143, 0,
	410, 411, 1217, 1175, 1218, 412, 413, 414, 1219, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 1211, 1220, 426, 427, 1221,
	0, 428, 429, 430, 431, 432, 433, 436, 1166, 1165,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1222,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 1223, 478, 466, 1105, 281,
	1224, 479, 480, 1128, 1176, 481, 1190, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 1225, 492, 1226, 1205, 493, 494, 1115,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	1206, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1186, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1227, 548, 549, 550, 551, 552, 1116, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1169, 575,
	576, 558, 559, 577, 578, 1228, 579, 580, 581, 582,
	583, 584, 585, 1184, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 1231, 593, 594, 595, 596,
	1207, 600, 601, 0, 602, 603, 1102, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	1196, 1197, 1198, 1199, 0, 621, 0, 613, 614, 615,
	1208, 616, 1209, 1126, 617, 618, 619, 620, 0, 622,
	623, 0, 1109, 624, 625, 626, 628, 629, 627, 630,
	1170, 631, 0, 0, 632, 633, 634, 692, 1193, 1230,
	0, 636, 635, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1106, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1101, 0, 0, 0, 0, 0, 0, 1099, 1100, 0,
	0, 0, 0, 0, 0, 0, 1132, 2671, 0, 2670,
	1130, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1172, 1136, 0, 0, 0, 291, 292,
	1212, 293, 294, 295, 296, 297, 298, 646, 1185, 0,
	299, 1192, 300, 1191, 0, 1202, 301, 302, 303, 304,
	305, 306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0,
	308, 309, 1178, 0, 1159, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1213, 332, 333, 334, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 335, 336, 337, 338, 339, 1195,
	340, 342, 1189, 1188, 1108, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1180,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1114, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1203, 1204, 372, 1127, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 1187, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1214, 380, 381,
	382, 1200, 1201, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1210, 0, 1137, 393, 0, 394,
	395, 396, 397, 398, 1173, 1174, 1177, 482, 1216, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 1215, 409, 1182, 1183, 0,
	1143, 0, 410, 411, 1217, 1175, 1218, 412, 413, 414,
	1219, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1211, 1220, 426,
	427, 1221, 0, 428, 429, 430, 431, 432, 433, 436,
	1166, 1165, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1222, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 1223, 478, 466,
	1105, 281, 1224, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 1206, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1186, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 1231, 593, 594,
	595, 596, 1207, 600, 601, 0, 602, 603, 1102, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 1196, 1197, 1198, 1199, 0, 621, 0, 613,
	614, 615, 1208, 616, 1209, 1126, 617, 618, 619, 620,
	0, 622, 623, 0, 1109, 624, 625, 626, 628, 629,
	627, 630, 1170, 631, 0, 0, 632, 633, 634, 692,
	1193, 1230, 0, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1106,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1101, 0, 0, 0, 0, 0, 0, 1099,
	1100, 0, 0, 0, 0, 0, 0, 0, 1132, 2668,
	0, 2667, 1130, 1148, 1120, 1121, 1122, 1118, 1119, 1131,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1172, 1136, 0, 0, 0,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 646,
	1185, 0, 299, 1192, 300, 1191, 0, 1202, 301, 302,
	303, 304, 305, 306, 1138, 1171, 1103, 307, 1232, 1233,
	653, 0, 308, 309, 1178, 0, 1159, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1213, 332, 333, 334, 1162,
	1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338,
	339, 1195, 340, 342, 1189, 1188, 1108, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1180, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1114, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1203, 1204, 372, 1127, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 1187, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1214,
	380, 381, 382, 1200, 1201, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1210, 0, 1137, 393,
	0, 394, 395, 396, 397, 398, 1173, 1174, 1177, 482,
	1216, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 1215, 409, 1182,
	1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1211,
	1220, 426, 427, 1221, 0, 428, 429, 430, 431, 432,
	433, 436, 1166, 1165, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 1105, 281, 1224, 479, 480, 1128, 1176, 481,
	1190, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 1225, 492, 1226,
	1205, 493, 494, 1115, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 1206, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1186, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	1116, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1169, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 1184, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 1231,
	593, 594, 595, 596, 1207, 600, 601, 0, 602, 603,
	1102, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 1196, 1197, 1198, 1199, 0, 621,
	0, 613, 614, 615, 1208, 616, 1209, 1126, 617, 618,
	619, 620, 0, 622, 623, 0, 1109, 624, 625, 626,
	628, 629, 627, 630, 1170, 631, 0, 0, 632, 633,
	634, 692, 1193, 1230, 0, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 1099, 1100, 0, 0, 0, 0, 0, 0, 0,
	1132, 2665, 0, 1746, 1130, 1148, 1120, 1121, 1122, 1118,
	1119, 1131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 1172, 1136, 0,
	0, 0, 291, 292, 1212, 293, 294, 295, 296, 297,
	298, 646, 1185, 0, 299, 1192, 300, 1191, 0, 1202,
	301, 302, 303, 304, 305, 306, 1138, 1171, 1103, 307,
	1232, 1233, 653, 0, 308, 309, 1178, 0, 1159, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1213, 332, 333,
	334, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336,
	337, 338, 339, 1195, 340, 342, 1189, 1188, 1108, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1180, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1114, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1203, 1204, 372,
	1127, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	1187, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1214, 380, 381, 382, 1200, 1201, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1210, 0,
	1137, 393, 0, 394, 395, 396, 397, 398, 1173, 1174,
	1177, 482, 1216, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 280, 406, 407, 408, 0, 1215,
	409, 1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175,
	1218, 412, 413, 414, 1219, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1211, 1220, 426, 427, 1221, 0, 428, 429, 430,
	431, 432, 433, 436, 1166, 1165, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1222, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 1223, 478, 466, 1105, 281, 1224, 479, 480, 1128,
	1176, 481, 1190, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 1225,
	492, 1226, 1205, 493, 494, 1115, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 1206, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1186, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 1116, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1169, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 1184,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 1231, 593, 594, 595, 596, 1207, 600, 601, 0,
	602, 603, 1102, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 1196, 1197, 1198, 1199,
	0, 621, 0, 613, 614, 615, 1208, 616, 1209, 1126,
	617, 618, 619, 620, 0, 622, 623, 0, 1109, 624,
	625, 626, 628, 629, 627, 630, 1170, 631, 0, 0,
	632, 633, 634, 692, 1193, 1230, 0, 636, 635, 637,
	695, 638, 639, 1745, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1106, 0, 0, 1095, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 282, 284, 283, 285, 286,
	287, 288, 1132, 289, 290, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 291, 292, 1212, 293, 294,
	295, 296, 297, 298, 646, 1185, 0, 299, 1192, 300,
	1191, 0, 1202, 301, 302, 303, 304, 305, 306, 1138,
	1171, 1103, 307, 1232, 1233, 653, 0, 308, 309, 1178,
	0, 1159, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1213, 332, 333, 334, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 335, 336, 337, 338, 339, 1195, 340, 342, 1189,
	1188, 1108, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1180, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1114, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1203, 1204, 372, 1127, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1187, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1214, 380, 381, 382, 1200, 1201,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1210, 0, 1137, 393, 0, 394, 395, 396, 397,
	398, 1173, 1174, 1177, 482, 1216, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 1215, 409, 1182, 1183, 0, 1143, 0, 410,
	411, 1217, 1175, 1218, 412, 413, 414, 1219, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1211, 1220, 426, 427, 1221, 0,
	428, 429, 430, 431, 432, 433, 436, 1166, 1165, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1222, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 1223, 478, 466, 1105, 281, 1224,
	479, 480, 1128, 1176, 481, 1190, 483, 484, 0, 0,
	485, 0, 1110, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 1225, 492, 1226, 1205, 493, 494, 1115, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 1206,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1186, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 1116, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 1184, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 1231, 593, 594, 595, 596, 1207,
	600, 601, 0, 602, 603, 1102, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 1196,
	1197, 1198, 1199, 0, 621, 0, 613, 614, 615, 1208,
	616, 1209, 1126, 617, 618, 619, 620, 0, 622, 623,
	0, 1109, 624, 625, 626, 628, 629, 627, 630, 1170,
	631, 0, 0, 632, 633, 634, 692, 1193, 1230, 0,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1106, 0, 0, 0,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 282, 284,
	283, 285, 286, 287, 288, 1132, 289, 290, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 291, 292,
	1212, 293, 294, 295, 296, 297, 298, 646, 1185, 0,
	299, 1192, 300, 1191, 0, 1202, 301, 302, 303, 304,
	305, 306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0,
	308, 309, 1178, 0, 1159, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 4768, 328, 0,
	329, 330, 331, 1213, 332, 333, 334, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 335, 336, 337, 338, 339, 1195,
	340, 342, 1189, 1188, 1108, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1180,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1114, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1203, 1204, 372, 1127, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 1187, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1214, 380, 381,
	382, 1200, 1201, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1210, 0, 1137, 393, 0, 394,
	395, 396, 397, 398, 1173, 1174, 1177, 482, 1216, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 1215, 409, 1182, 1183, 0,
	1143, 0, 410, 411, 1217, 1175, 1218, 412, 413, 414,
	1219, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1211, 1220, 426,
	427, 1221, 0, 428, 429, 430, 431, 432, 433, 436,
	1166, 1165, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1222, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 1223, 478, 466,
	1105, 281, 1224, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 1110, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 1206, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1186, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 1231, 593, 594,
	595, 596, 1207, 600, 601, 0, 602, 603, 1102, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 1196, 1197, 1198, 1199, 0, 621, 0, 613,
	614, 615, 1208, 616, 1209, 1126, 617, 618, 619, 620,
	0, 622, 623, 0, 1109, 624, 625, 626, 628, 629,
	627, 630, 1170, 631, 0, 0, 632, 633, 634, 692,
	1193, 1230, 0, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1106,
	0, 0, 0, 0, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 0, 1101, 0, 0, 0, 0, 0, 0, 1099,
	1100, 282, 284, 283, 285, 286, 287, 288, 1132, 289,
	290, 0, 1130, 0, 0, 0, 1172, 1136, 0, 0,
	0, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 1185, 0, 299, 1192, 300, 1191, 0, 1202, 301,
	302, 303, 304, 305, 306, 1138, 1171, 1103, 307, 1232,
	1233, 653, 0, 308, 309, 1178, 0, 1159, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 334,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337,
	338, 339, 1195, 340, 342, 1189, 1188, 1108, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1180, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1114, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1203, 1204, 372, 1127,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1187,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1214, 380, 381, 382, 1200, 1201, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1210, 0, 1137,
	393, 0, 394, 395, 396, 397, 398, 1173, 1174, 1177,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 2508, 406, 407, 408, 0, 1215, 409,
	1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1211, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 1166, 1165, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1105, 281, 1224, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 1206, 512, 680, 513, 514,
	2507, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1186, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	1231, 593, 594, 595, 596, 1207, 600, 601, 0, 602,
	603, 1102, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 1196, 1197, 1198, 1199, 0,
	621, 0, 613, 614, 615, 1208, 616, 1209, 1126, 617,
	618, 619, 620, 0, 622, 623, 0, 1109, 624, 625,
	626, 628, 629, 627, 630, 1170, 631, 0, 0, 632,
	633, 634, 692, 1193, 1230, 0, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1106, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 282, 284, 283, 285, 286, 287,
	288, 1132, 289, 290, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 291, 292, 1212, 293, 294, 295,
	296, 297, 298, 646, 1185, 0, 299, 1192, 300, 1191,
	0, 1202, 301, 302, 303, 304, 305, 306, 1138, 1171,
	1103, 307, 1232, 1233, 653, 0, 308, 309, 1178, 0,
	1159, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1213,
	332, 333, 334, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	335, 336, 337, 338, 339, 1195, 340, 342, 1189, 1188,
	1108, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1180, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1114, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1203,
	1204, 372, 1127, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 1187, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1214, 380, 381, 382, 1200, 1201, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1210, 0, 1137, 393, 0, 394, 395, 396, 397, 398,
	1173, 1174, 1177, 482, 1216, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 280, 406, 407, 408,
	0, 1215, 409, 1182, 1183, 0, 1143, 0, 410, 411,
	1217, 1175, 1218, 412, 413, 414, 1219, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 1211, 1220, 426, 427, 1221, 0, 428,
	429, 430, 431, 432, 433, 436, 1166, 1165, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1222, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 1223, 478, 466, 1105, 281, 1224, 479,
	480, 1128, 1176, 481, 1190, 483, 484, 0, 0, 485,
	0, 1110, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 1225, 492, 1226, 1205, 493, 494, 1115, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 1206, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1186, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 1116, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1169, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 1184, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 1231, 593, 594, 595, 596, 1207, 600,
	601, 0, 602, 603, 1102, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 1196, 1197,
	1198, 1199, 0, 621, 0, 613, 614, 615, 1208, 616,
	1209, 1126, 617, 618, 619, 620, 0, 622, 623, 0,
	1109, 624, 625, 626, 628, 629, 627, 630, 1170, 631,
	0, 0, 632, 633, 634, 692, 1193, 1230, 0, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1106, 0, 0, 0, 0,
	1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101, 0,
	0, 0, 0, 0, 0, 1099, 1100, 282, 284, 283,
	285, 286, 287, 288, 1132, 289, 290, 0, 1130, 0,
	0, 0, 1172, 1136, 0, 0, 0, 291, 292, 1212,
	293, 294, 295, 296, 297, 298, 646, 1185, 0, 299,
	1192, 300, 1191, 0, 1202, 301, 302, 303, 304, 305,
	306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0, 308,
	309, 1178, 0, 1159, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 4497, 328, 0, 329,
	330, 331, 1213, 332, 333, 334, 1162, 1160, 1161, 1168,
	1164, 1163, 1167, 335, 336, 337, 338, 339, 1195, 340,
	342, 1189, 1188, 1108, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1180, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1114, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1203, 1204, 372, 1127, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1187, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1214, 380, 381, 382,
	1200, 1201, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1210, 0, 1137, 393, 0, 394, 395,
	396, 397, 398, 1173, 1174, 1177, 482, 1216, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 1215, 409, 1182, 1183, 0, 1143,
	0, 410, 411, 1217, 1175, 1218, 412, 413, 414, 1219,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1211, 1220, 426, 427,
	1221, 0, 428, 429, 430, 431, 432, 433, 436, 1166,
	1165, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1222, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 1223, 478, 466, 1105,
	281, 1224, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 1110, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 1206, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1186, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 1231, 593, 594, 595,
	596, 1207, 600, 601, 0, 602, 603, 1102, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 1196, 1197, 1198, 1199, 0, 621, 0, 613, 614,
	615, 1208, 616, 1209, 1126, 617, 618, 619, 620, 0,
	622, 623, 0, 1109, 624, 625, 626, 628, 629, 627,
	630, 1170, 631, 0, 0, 632, 633, 634, 692, 1193,
	1230, 0, 636, 635, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1106, 0,
	0, 0, 0, 1148, 1120, 1121, 1122, 1118, 1119, 1131,
	0, 1101, 0, 0, 0, 0, 0, 0, 1099, 1100,
	282, 284, 283, 285, 286, 287, 288, 1132, 289, 290,
	0, 1130, 0, 0, 0, 1172, 1136, 0, 0, 0,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 646,
	1185, 0, 299, 1192, 300, 1191, 0, 1202, 301, 302,
	303, 304, 305, 306, 1138, 1171, 1103, 307, 1232, 1233,
	653, 0, 308, 309, 1178, 0, 1159, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1213, 332, 333, 334, 1162,
	1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338,
	339, 1195, 340, 342, 1189, 1188, 1108, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1180, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1114, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1203, 1204, 372, 1127, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 1187, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1214,
	380, 381, 382, 1200, 1201, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1210, 0, 1137, 393,
	0, 394, 395, 396, 397, 398, 1173, 1174, 1177, 482,
	1216, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 1215, 409, 1182,
	1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1211,
	1220, 426, 427, 1221, 0, 428, 429, 430, 431, 432,
	433, 436, 1166, 1165, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 1105, 4088, 1224, 479, 480, 1128, 1176, 481,
	1190, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 1225, 492, 1226,
	1205, 493, 494, 1115, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 1206, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1186, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	1116, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1169, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 1184, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 1231,
	593, 594, 595, 596, 1207, 600, 601, 0, 602, 603,
	1102, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 1196, 1197, 1198, 1199, 0, 621,
	0, 613, 614, 615, 1208, 616, 1209, 1126, 617, 618,
	619, 620, 0, 622, 623, 0, 1109, 624, 625, 626,
	628, 629, 627, 630, 1170, 631, 0, 0, 632, 633,
	634, 692, 1193, 1230, 0, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 1099, 1100, 1976, 0, 0, 0, 0, 0, 0,
	1132, 0, 0, 0, 1130, 1148, 1120, 1121, 1122, 1118,
	1119, 1131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 1172, 1136, 0,
	0, 0, 291, 292, 1212, 293, 294, 295, 296, 297,
	298, 646, 1185, 0, 299, 1192, 300, 1191, 0, 1202,
	301, 302, 303, 304, 305, 306, 1138, 1171, 1103, 307,
	1232, 1233, 653, 0, 308, 309, 1178, 0, 1159, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1213, 332, 333,
	334, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336,
	337, 338, 339, 1195, 340, 342, 1189, 1188, 1108, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1180, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1114, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1203, 1204, 372,
	1127, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	1187, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1214, 380, 381, 382, 1200, 1201, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1210, 0,
	1137, 393, 0, 394, 395, 396, 397, 398, 1173, 1174,
	1177, 482, 1216, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 280, 406, 407, 408, 0, 1215,
	409, 1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175,
	1218, 412, 413, 414, 1219, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1211, 1220, 426, 427, 1221, 0, 428, 429, 430,
	431, 432, 433, 436, 1166, 1165, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1222, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 1223, 478, 466, 1105, 281, 1224, 479, 480, 1128,
	1176, 481, 1190, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 1225,
	492, 1226, 1205, 493, 494, 1115, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 1206, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1186, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 1116, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1169, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 1184,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 1231, 593, 594, 595, 596, 1207, 600, 601, 0,
	602, 603, 1102, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 1196, 1197, 1198, 1199,
	0, 621, 0, 613, 614, 615, 1208, 616, 1209, 1126,
	617, 618, 619, 620, 0, 622, 623, 0, 1109, 624,
	625, 626, 628, 629, 627, 630, 1170, 631, 0, 0,
	632, 633, 634, 692, 1193, 1230, 3784, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1106, 0, 0, 0, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 282, 284, 283, 285, 286,
	287, 288, 1132, 289, 290, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 291, 292, 1212, 293, 294,
	295, 296, 297, 298, 646, 1185, 0, 299, 1192, 300,
	1191, 0, 1202, 301, 302, 303, 304, 305, 306, 1138,
	1171, 1103, 307, 1232, 1233, 653, 0, 308, 309, 1178,
	0, 1159, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1213, 332, 333, 334, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 335, 336, 337, 338, 339, 1195, 340, 342, 1189,
	1188, 1108, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1180, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1114, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1203, 1204, 372, 1127, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1187, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1214, 380, 381, 382, 1200, 1201,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1210, 0, 1137, 393, 0, 394, 395, 396, 397,
	398, 1173, 1174, 1177, 482, 1216, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 1215, 409, 1182, 1183, 0, 1143, 0, 410,
	411, 1217, 1175, 1218, 412, 413, 414, 1219, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1211, 1220, 426, 427, 1221, 0,
	428, 429, 430, 431, 432, 433, 436, 1166, 1165, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1222, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 1223, 478, 466, 1105, 281, 1224,
	479, 480, 1128, 1176, 481, 1190, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 1225, 492, 1226, 1205, 493, 494, 1115, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 1206,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1186, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 1116, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 1184, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 1231, 593, 594, 595, 596, 1207,
	600, 601, 0, 602, 603, 1102, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 1196,
	1197, 1198, 1199, 0, 621, 0, 613, 614, 615, 1208,
	616, 1209, 1126, 617, 618, 619, 620, 0, 622, 623,
	0, 1109, 624, 625, 626, 628, 629, 627, 630, 1170,
	631, 0, 0, 632, 633, 634, 692, 1193, 1230, 0,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1106, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 1976, 0,
	0, 0, 0, 0, 0, 1132, 0, 0, 0, 1130,
	1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1172, 1136, 0, 0, 0, 291, 292, 1212,
	293, 294, 295, 296, 297, 298, 646, 1185, 0, 299,
	1192, 300, 1191, 0, 1202, 301, 302, 303, 304, 305,
	306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0, 308,
	309, 1178, 0, 1159, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1213, 332, 333, 334, 1162, 1160, 1161, 1168,
	1164, 1163, 1167, 335, 336, 337, 338, 339, 1195, 340,
	342, 1189, 1188, 1108, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1180, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1114, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1203, 1204, 372, 1127, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1187, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 2767, 1214, 380, 381, 382,
	1200, 1201, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1210, 0, 1137, 393, 0, 394, 395,
	396, 397, 398, 1173, 1174, 1177, 482, 1216, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 1215, 409, 1182, 1183, 0, 1143,
	0, 410, 411, 1217, 1175, 1218, 412, 413, 414, 1219,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1211, 1220, 426, 427,
	1221, 0, 428, 429, 430, 431, 432, 433, 436, 1166,
	1165, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1222, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 1223, 478, 466, 1105,
	281, 1224, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 1206, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1186, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 1231, 593, 594, 595,
	596, 1207, 600, 601, 0, 602, 603, 1102, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 1196, 1197, 1198, 1199, 0, 621, 0, 613, 614,
	615, 1208, 616, 1209, 1126, 617, 618, 619, 620, 0,
	622, 623, 0, 1109, 624, 625, 626, 628, 629, 627,
	630, 1170, 631, 0, 0, 632, 633, 634, 692, 1193,
	1230, 0, 636, 635, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1106, 0,
	0, 0, 0, 1148, 1120, 1121, 1122, 1118, 1119, 1131,
	0, 1101, 0, 0, 0, 0, 0, 0, 1099, 1100,
	282, 284, 283, 285, 286, 287, 288, 1132, 289, 290,
	0, 1130, 0, 0, 0, 1172, 1136, 0, 0, 0,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 646,
	1185, 0, 299, 1192, 300, 1191, 0, 1202, 301, 302,
	303, 304, 305, 306, 1138, 1171, 1103, 307, 1232, 1233,
	653, 0, 308, 309, 1178, 0, 1159, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1213, 332, 333, 334, 1162,
	1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338,
	339, 1195, 340, 342, 1189, 1188, 1108, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1180, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1114, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1203, 1204, 372, 1127, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 1187, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1214,
	380, 381, 382, 1200, 1201, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1210, 0, 1137, 393,
	0, 394, 395, 396, 397, 398, 1173, 1174, 1177, 482,
	1216, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 1215, 409, 1182,
	1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1211,
	1220, 426, 427, 1221, 0, 428, 429, 430, 431, 432,
	433, 436, 1166, 1165, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 1105, 281, 1224, 479, 480, 1128, 1176, 481,
	1190, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 1225, 492, 1226,
	1205, 493, 494, 1115, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 1206, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1186, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	1116, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1169, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 1184, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 1231,
	593, 594, 595, 596, 1207, 600, 601, 0, 602, 603,
	1102, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 1196, 1197, 1198, 1199, 0, 621,
	0, 613, 614, 615, 1208, 616, 1209, 1126, 617, 618,
	619, 620, 0, 622, 623, 0, 1109, 624, 625, 626,
	628, 629, 627, 630, 1170, 631, 0, 0, 632, 633,
	634, 692, 1193, 1230, 0, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 1099, 1100, 0, 0, 0, 0, 0, 0, 0,
	1132, 1905, 0, 2772, 1130, 1148, 1120, 1121, 1122, 1118,
	1119, 1131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 1172, 1136, 0,
	0, 0, 291, 292, 1212, 293, 294, 295, 296, 297,
	298, 646, 1185, 0, 299, 1192, 300, 1191, 0, 1202,
	301, 302, 303, 304, 305, 306, 1138, 1171, 1103, 307,
	1232, 1233, 653, 0, 308, 309, 1178, 0, 1159, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1213, 332, 333,
	334, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336,
	337, 338, 339, 1195, 340, 342, 1189, 1188, 1108, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1180, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1114, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1203, 1204, 372,
	1127, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	1187, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1214, 380, 381, 382, 1200, 1201, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1210, 0,
	1137, 393, 0, 394, 395, 396, 397, 398, 1173, 1174,
	1177, 482, 1216, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 280, 406, 407, 408, 0, 1215,
	409, 1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175,
	1218, 412, 413, 414, 1219, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1211, 1220, 426, 427, 1221, 0, 428, 429, 430,
	431, 432, 433, 436, 1166, 1165, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1222, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 1223, 478, 466, 1105, 281, 1224, 479, 480, 1128,
	1176, 481, 1190, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 1225,
	492, 1226, 1205, 493, 494, 1115, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 1206, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1186, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 1116, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1169, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 1184,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 1231, 593, 594, 595, 596, 1207, 600, 601, 0,
	602, 603, 1102, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 1196, 1197, 1198, 1199,
	0, 621, 0, 613, 614, 615, 1208, 616, 1209, 1126,
	617, 618, 619, 620, 0, 622, 623, 0, 1109, 624,
	625, 626, 628, 629, 627, 630, 1170, 631, 0, 0,
	632, 633, 634, 692, 1193, 1230, 0, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1106, 0, 0, 2770, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 282, 284, 283, 285, 286,
	287, 288, 1132, 289, 290, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 291, 292, 1212, 293, 294,
	295, 296, 297, 298, 646, 1185, 0, 299, 1192, 300,
	1191, 0, 1202, 301, 302, 303, 304, 305, 306, 1138,
	1171, 1103, 307, 1232, 1233, 653, 0, 308, 309, 1178,
	0, 1159, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1213, 332, 333, 334, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 335, 336, 337, 338, 339, 1195, 340, 342, 1189,
	1188, 1108, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1180, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1114, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1203, 1204, 372, 1127, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1187, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1214, 380, 381, 382, 1200, 1201,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1210, 0, 1137, 393, 0, 394, 395, 396, 397,
	398, 1173, 1174, 1177, 482, 1216, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 1215, 409, 1182, 1183, 0, 1143, 0, 410,
	411, 1217, 1175, 1218, 412, 413, 414, 1219, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1211, 1220, 426, 427, 1221, 0,
	428, 429, 430, 431, 432, 433, 436, 1166, 1165, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1222, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 1223, 478, 466, 1105, 281, 1224,
	479, 480, 1128, 1176, 481, 1190, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 1225, 492, 1226, 1205, 493, 494, 1115, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 1206,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1186, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 1116, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 1184, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 1231, 593, 594, 595, 596, 1207,
	600, 601, 0, 602, 603, 1102, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 1196,
	1197, 1198, 1199, 0, 621, 0, 613, 614, 615, 1208,
	616, 1209, 1126, 617, 618, 619, 620, 0, 622, 623,
	0, 1109, 624, 625, 626, 628, 629, 627, 630, 1170,
	631, 0, 0, 632, 633, 634, 692, 1193, 1230, 0,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1106, 0, 0, 2758,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 282, 284,
	283, 285, 286, 287, 288, 1132, 289, 290, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 291, 292,
	1212, 293, 294, 295, 296, 297, 298, 646, 1185, 0,
	299, 1192, 300, 1191, 0, 1202, 301, 302, 303, 304,
	305, 306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0,
	308, 309, 1178, 0, 1159, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1213, 332, 333, 334, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 335, 336, 337, 338, 339, 1195,
	340, 342, 1189, 1188, 1108, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1180,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1114, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1203, 1204, 372, 1127, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 1187, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1214, 380, 381,
	382, 1200, 1201, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1210, 0, 1137, 393, 0, 394,
	395, 396, 397, 398, 1173, 1174, 1177, 482, 1216, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 1215, 409, 1182, 1183, 0,
	1143, 0, 410, 411, 1217, 1175, 1218, 412, 413, 414,
	1219, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1211, 1220, 426,
	427, 1221, 0, 428, 429, 430, 431, 432, 433, 436,
	1166, 1165, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1222, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 1223, 478, 466,
	1105, 281, 1224, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 1206, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1186, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 1231, 593, 594,
	595, 596, 1207, 600, 601, 0, 602, 603, 1102, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 1196, 1197, 1198, 1199, 0, 621, 0, 613,
	614, 615, 1208, 616, 1209, 1126, 617, 618, 619, 620,
	0, 622, 623, 0, 1109, 624, 625, 626, 628, 629,
	627, 630, 1170, 631, 0, 0, 632, 633, 634, 692,
	1193, 1230, 0, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1106,
	0, 0, 2746, 0, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 0, 1101, 0, 0, 0, 0, 0, 0, 1099,
	1100, 282, 284, 283, 285, 286, 287, 288, 1132, 289,
	290, 0, 1130, 0, 0, 0, 1172, 1136, 0, 0,
	0, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 1185, 0, 299, 1192, 300, 1191, 0, 1202, 301,
	302, 303, 304, 305, 306, 1138, 1171, 1103, 307, 1232,
	1233, 653, 0, 308, 309, 1178, 0, 1159, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 334,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337,
	338, 339, 1195, 340, 342, 1189, 1188, 1108, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1180, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1114, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1203, 1204, 372, 1127,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1187,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1214, 380, 381, 382, 1200, 1201, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1210, 0, 1137,
	393, 0, 394, 395, 396, 397, 398, 1173, 1174, 1177,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 1215, 409,
	1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1211, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 1166, 1165, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1105, 281, 1224, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 1206, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1186, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	1231, 593, 594, 595, 596, 1207, 600, 601, 0, 602,
	603, 1102, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 1196, 1197, 1198, 1199, 0,
	621, 0, 613, 614, 615, 1208, 616, 1209, 1126, 617,
	618, 619, 620, 0, 622, 623, 0, 1109, 624, 625,
	626, 628, 629, 627, 630, 1170, 631, 0, 0, 632,
	633, 634, 692, 1193, 1230, 0, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1106, 0, 0, 2744, 0, 2735, 2742, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 282, 284, 283, 285, 286, 287,
	288, 1132, 289, 290, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 291, 292, 1212, 293, 294, 295,
	296, 297, 298, 646, 1185, 0, 299, 1192, 300, 1191,
	0, 1202, 301, 302, 303, 304, 305, 306, 1138, 1171,
	1103, 307, 1232, 1233, 653, 0, 308, 309, 1178, 0,
	1159, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1213,
	332, 333, 334, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	335, 336, 337, 338, 339, 1195, 2738, 342, 1189, 1188,
	1108, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1180, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1114, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1203,
	1204, 372, 1127, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 1187, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1214, 380, 381, 382, 1200, 1201, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1210, 0, 1137, 393, 0, 394, 395, 396, 2739, 398,
	1173, 1174, 1177, 482, 1216, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 280, 406, 407, 408,
	0, 1215, 409, 1182, 1183, 0, 1143, 0, 410, 411,
	1217, 1175, 1218, 412, 413, 414, 1219, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 1211, 1220, 426, 427, 1221, 0, 428,
	429, 430, 431, 432, 433, 436, 1166, 1165, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 2740,
	446, 2737, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1222, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 1223, 478, 466, 1105, 281, 1224, 479,
	480, 1128, 1176, 481, 1190, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 1225, 492, 1226, 1205, 493, 494, 1115, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 1206, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1186, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 1116, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 2741, 0,
	570, 571, 569, 572, 573, 574, 1169, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 1184, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 1231, 593, 594, 595, 596, 1207, 600,
	601, 0, 602, 603, 1102, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 1196, 1197,
	1198, 1199, 0, 621, 0, 613, 614, 615, 1208, 616,
	1209, 1126, 617, 618, 619, 620, 0, 622, 623, 0,
	1109, 624, 625, 626, 628, 629, 627, 630, 1170, 631,
	0, 0, 632, 633, 634, 692, 1193, 1230, 0, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 2736, 644, 1106, 0, 0, 2732, 0,
	2735, 2742, 1121, 1122, 1118, 1119, 1131, 0, 1101, 0,
	0, 0, 0, 0, 0, 1099, 1100, 282, 284, 283,
	285, 286, 287, 288, 1132, 289, 290, 0, 1130, 0,
	0, 0, 1172, 1136, 0, 0, 0, 291, 292, 1212,
	293, 294, 295, 296, 297, 298, 646, 1185, 0, 299,
	1192, 300, 1191, 0, 1202, 301, 302, 303, 304, 305,
	306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0, 308,
	309, 1178, 0, 1159, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1213, 332, 333, 334, 1162, 1160, 1161, 1168,
	1164, 1163, 1167, 335, 336, 337, 338, 339, 1195, 2738,
	342, 1189, 1188, 1108, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1180, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1114, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1203, 1204, 372, 1127, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1187, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1214, 380, 381, 382,
	1200, 1201, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1210, 0, 1137, 393, 0, 394, 395,
	396, 2739, 398, 1173, 1174, 1177, 482, 1216, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 1215, 409, 1182, 1183, 0, 1143,
	0, 410, 411, 1217, 1175, 1218, 412, 413, 414, 1219,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1211, 1220, 426, 427,
	1221, 0, 428, 429, 430, 431, 432, 433, 436, 1166,
	1165, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 2740, 446, 2737, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1222, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 1223, 478, 466, 1105,
	281, 1224, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 1206, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1186, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 2741, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 1231, 593, 594, 595,
	596, 1207, 600, 601, 0, 602, 603, 1102, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 1196, 1197, 1198, 1199, 0, 621, 0, 613, 614,
	615, 1208, 616, 1209, 1126, 617, 618, 619, 620, 0,
	622, 623, 0, 1109, 624, 625, 626, 628, 629, 627,
	630, 1170, 631, 0, 0, 632, 633, 634, 692, 1193,
	1230, 0, 636, 635, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 2736, 644, 1106, 0,
	0, 0, 0, 1148, 1120, 1121, 1122, 1118, 1119, 1131,
	0, 1101, 0, 0, 0, 0, 0, 0, 1099, 1100,
	282, 284, 283, 285, 286, 287, 288, 1132, 289, 290,
	0, 1130, 0, 0, 0, 1172, 1136, 0, 0, 0,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 646,
	1185, 0, 299, 1192, 300, 1191, 0, 1202, 301, 302,
	303, 304, 305, 306, 1138, 1171, 1103, 307, 1232, 1233,
	653, 0, 308, 309, 1178, 0, 1159, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1213, 332, 333, 334, 1162,
	1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338,
	339, 1195, 340, 342, 1189, 1188, 1108, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1180, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1114, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1203, 1204, 372, 1127, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 1187, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1214,
	380, 381, 382, 1200, 1201, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1210, 0, 1137, 393,
	0, 394, 395, 396, 397, 398, 1173, 1174, 1177, 482,
	1216, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 1215, 409, 1182,
	1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1211,
	1220, 426, 427, 1221, 0, 428, 429, 430, 431, 432,
	433, 436, 1166, 1165, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 1105, 281, 1224, 479, 480, 1128, 1176, 481,
	1190, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 1225, 492, 1226,
	1205, 493, 494, 1115, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 1206, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1186, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	1116, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1169, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 1184, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 1231,
	593, 594, 595, 596, 1207, 600, 601, 0, 602, 603,
	1102, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 1196, 1197, 1198, 1199, 0, 621,
	0, 613, 614, 615, 1208, 616, 1209, 1126, 617, 618,
	619, 620, 0, 622, 623, 0, 1109, 624, 625, 626,
	628, 629, 627, 630, 1170, 631, 0, 0, 632, 633,
	634, 692, 1193, 1230, 0, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1101, 0, 0, 0, 0, 0,
	0, 1099, 1100, 0, 0, 0, 0, 0, 1913, 0,
	1132, 0, 0, 0, 1130, 1148, 1120, 1121, 1122, 1118,
	1119, 1131, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 2487,
	289, 290, 0, 0, 0, 0, 0, 1172, 1136, 0,
	0, 0, 291, 292, 1212, 293, 294, 295, 296, 297,
	298, 646, 1185, 0, 299, 1192, 300, 1191, 0, 1202,
	301, 302, 303, 304, 305, 306, 1138, 1171, 1103, 307,
	1232, 1233, 653, 0, 308, 309, 1178, 0, 1159, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1213, 332, 333,
	334, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336,
	337, 338, 339, 1195, 340, 342, 1189, 1188, 1108, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1180, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1114, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1203, 1204, 372,
	1127, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	1187, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1214, 380, 381, 382, 1200, 1201, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1210, 0,
	1137, 393, 0, 394, 395, 396, 397, 398, 1173, 1174,
	1177, 482, 1216, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 280, 406, 407, 408, 0, 1215,
	409, 1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175,
	1218, 412, 413, 414, 1219, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1211, 1220, 426, 427, 1221, 0, 428, 429, 430,
	431, 432, 433, 436, 1166, 1165, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1222, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 1223, 478, 466, 1105, 281, 1224, 479, 480, 1128,
	1176, 481, 1190, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 1225,
	492, 1226, 1205, 493, 494, 1115, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 1206, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1186, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 1116, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1169, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 1184,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 1231, 593, 594, 595, 596, 1207, 600, 601, 0,
	602, 603, 1102, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 1196, 1197, 1198, 1199,
	0, 621, 0, 613, 614, 615, 1208, 616, 1209, 1126,
	617, 618, 619, 620, 0, 622, 623, 0, 1109, 624,
	625, 626, 628, 629, 627, 630, 1170, 631, 0, 0,
	632, 633, 634, 692, 1193, 1230, 0, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1106, 0, 0, 2449, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 282, 284, 283, 285, 286,
	287, 288, 1132, 289, 290, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 291, 292, 1212, 293, 294,
	295, 296, 297, 298, 646, 1185, 0, 299, 1192, 300,
	1191, 0, 1202, 301, 302, 303, 304, 305, 306, 1138,
	1171, 1103, 307, 1232, 1233, 653, 0, 308, 309, 1178,
	0, 1159, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1213, 332, 333, 334, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 335, 336, 337, 338, 339, 1195, 340, 342, 1189,
	1188, 1108, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1180, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1114, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1203, 1204, 372, 1127, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1187, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1214, 380, 381, 382, 1200, 1201,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1210, 0, 1137, 393, 0, 394, 395, 396, 397,
	398, 1173, 1174, 1177, 482, 1216, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 1215, 409, 1182, 1183, 0, 1143, 0, 410,
	411, 1217, 1175, 1218, 412, 413, 414, 1219, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1211, 1220, 426, 427, 1221, 0,
	428, 429, 430, 431, 432, 433, 436, 1166, 1165, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1222, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 1223, 478, 466, 1105, 281, 1224,
	479, 480, 1128, 1176, 481, 1190, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 1225, 492, 1226, 1205, 493, 494, 1115, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 1206,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1186, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 1116, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 1184, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 1231, 593, 594, 595, 596, 1207,
	600, 601, 0, 602, 603, 1102, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 1196,
	1197, 1198, 1199, 0, 621, 0, 613, 614, 615, 1208,
	616, 1209, 1126, 617, 618, 619, 620, 0, 622, 623,
	0, 1109, 624, 625, 626, 628, 629, 627, 630, 1170,
	631, 0, 0, 632, 633, 634, 692, 1193, 1230, 0,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1106, 0, 0, 2422,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 282, 284,
	283, 285, 286, 287, 288, 1132, 289, 290, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 291, 292,
	1212, 293, 294, 295, 296, 297, 298, 646, 1185, 0,
	299, 1192, 300, 1191, 0, 1202, 301, 302, 303, 304,
	305, 306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0,
	308, 309, 1178, 0, 1159, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1213, 332, 333, 334, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 335, 336, 337, 338, 339, 1195,
	340, 342, 1189, 1188, 1108, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1180,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1114, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1203, 1204, 372, 1127, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 1187, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1214, 380, 381,
	382, 1200, 1201, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1210, 0, 1137, 393, 0, 394,
	395, 396, 397, 398, 1173, 1174, 1177, 482, 1216, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 1215, 409, 1182, 1183, 0,
	1143, 0, 410, 411, 1217, 1175, 1218, 412, 413, 414,
	1219, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1211, 1220, 426,
	427, 1221, 0, 428, 429, 430, 431, 432, 433, 436,
	1166, 1165, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1222, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 1223, 478, 466,
	1105, 281, 1224, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 1206, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1186, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 1231, 593, 594,
	595, 596, 1207, 600, 601, 0, 602, 603, 1102, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 1196, 1197, 1198, 1199, 0, 621, 0, 613,
	614, 615, 1208, 616, 1209, 1126, 617, 618, 619, 620,
	0, 622, 623, 0, 1109, 624, 625, 626, 628, 629,
	627, 630, 1170, 631, 0, 0, 632, 633, 634, 692,
	1193, 1230, 0, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1106,
	0, 0, 1751, 0, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 0, 1101, 0, 0, 0, 0, 0, 0, 1099,
	1100, 282, 284, 283, 285, 286, 287, 288, 1132, 289,
	290, 0, 1130, 0, 0, 0, 1172, 1136, 0, 0,
	0, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 1185, 0, 299, 1192, 300, 1191, 0, 1202, 301,
	302, 303, 304, 305, 306, 1138, 1171, 1103, 307, 1232,
	1233, 653, 0, 308, 309, 1178, 0, 1159, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 334,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337,
	338, 339, 1195, 340, 342, 1189, 1188, 1108, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1180, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1114, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1203, 1204, 372, 1127,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1187,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1214, 380, 381, 382, 1200, 1201, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1210, 0, 1137,
	393, 0, 394, 395, 396, 397, 398, 1173, 1174, 1177,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 1215, 409,
	1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1211, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 1166, 1165, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1105, 281, 1224, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 1206, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1186, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	1231, 593, 594, 595, 596, 1207, 600, 601, 0, 602,
	603, 1102, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 1196, 1197, 1198, 1199, 0,
	621, 0, 613, 614, 615, 1208, 616, 1209, 1126, 617,
	618, 619, 620, 0, 622, 623, 0, 1109, 624, 625,
	626, 628, 629, 627, 630, 1170, 631, 0, 0, 632,
	633, 634, 692, 1193, 1230, 0, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1106, 0, 0, 1680, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 282, 284, 283, 285, 286, 287,
	288, 1132, 289, 290, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 291, 292, 1212, 293, 294, 295,
	296, 297, 298, 646, 1185, 0, 299, 1192, 300, 1191,
	0, 1202, 301, 302, 303, 304, 305, 306, 1138, 1171,
	1103, 307, 1232, 1233, 653, 0, 308, 309, 1178, 0,
	1159, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1213,
	332, 333, 334, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	335, 336, 337, 338, 339, 1195, 340, 342, 1189, 1188,
	1108, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1180, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1114, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1203,
	1204, 372, 1127, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 1187, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1214, 380, 381, 382, 1200, 1201, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1210, 0, 1137, 393, 0, 394, 395, 396, 397, 398,
	1173, 1174, 1177, 482, 1216, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 280, 406, 407, 408,
	0, 1215, 409, 1182, 1183, 0, 1143, 0, 410, 411,
	1217, 1175, 1218, 412, 413, 414, 1219, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 1211, 1220, 426, 427, 1221, 0, 428,
	429, 430, 431, 432, 433, 436, 1166, 1165, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1222, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 1223, 478, 466, 1105, 281, 1224, 479,
	480, 1128, 1176, 481, 1190, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 1225, 492, 1226, 1205, 493, 494, 1115, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 1206, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1186, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 1116, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1169, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 1184, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 1231, 593, 594, 595, 596, 1207, 600,
	601, 0, 602, 603, 1102, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 1196, 1197,
	1198, 1199, 0, 621, 0, 613, 614, 615, 1208, 616,
	1209, 1126, 617, 618, 619, 620, 0, 622, 623, 0,
	1109, 624, 625, 626, 628, 629, 627, 630, 1170, 631,
	0, 0, 632, 633, 634, 692, 1193, 1230, 0, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1106, 0, 0, 1675, 0,
	1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101, 0,
	0, 0, 0, 0, 0, 1099, 1100, 282, 284, 283,
	285, 286, 287, 288, 1132, 289, 290, 0, 1130, 0,
	0, 0, 1172, 1136, 0, 0, 0, 291, 292, 1212,
	293, 294, 295, 296, 297, 298, 646, 1185, 0, 299,
	1192, 300, 1191, 0, 1202, 301, 302, 303, 304, 305,
	306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0, 308,
	309, 1178, 0, 1159, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1213, 332, 333, 334, 1162, 1160, 1161, 1168,
	1164, 1163, 1167, 335, 336, 337, 338, 339, 1195, 340,
	342, 1189, 1188, 1108, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1180, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1114, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1203, 1204, 372, 1127, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1187, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1214, 380, 381, 382,
	1200, 1201, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1210, 0, 1137, 393, 0, 394, 395,
	396, 397, 398, 1173, 1174, 1177, 482, 1216, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 1215, 409, 1182, 1183, 0, 1143,
	0, 410, 411, 1217, 1175, 1218, 412, 413, 414, 1219,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1211, 1220, 426, 427,
	1221, 0, 428, 429, 430, 431, 432, 433, 436, 1166,
	1165, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1222, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 1223, 478, 466, 1105,
	281, 1224, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 1206, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1186, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 1231, 593, 594, 595,
	596, 1207, 600, 601, 0, 602, 603, 1102, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 1196, 1197, 1198, 1199, 0, 621, 0, 613, 614,
	615, 1208, 616, 1209, 1126, 617, 618, 619, 620, 0,
	622, 623, 0, 1109, 624, 625, 626, 628, 629, 627,
	630, 1170, 631, 0, 0, 632, 633, 634, 692, 1193,
	1230, 0, 636, 635, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1106, 0,
	0, 1662, 0, 1148, 1120, 1121, 1122, 1118, 1119, 1131,
	0, 1101, 0, 0, 0, 0, 0, 0, 1099, 1100,
	282, 284, 283, 285, 286, 287, 288, 1132, 289, 290,
	0, 1130, 0, 0, 0, 1172, 1136, 0, 0, 0,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 646,
	1185, 0, 299, 1192, 300, 1191, 0, 1202, 301, 302,
	303, 304, 305, 306, 1138, 1171, 1103, 307, 1232, 1233,
	653, 0, 308, 309, 1178, 0, 1159, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1213, 332, 333, 334, 1162,
	1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338,
	339, 1195, 340, 342, 1189, 1188, 1108, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1180, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1114, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1203, 1204, 372, 1127, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 1187, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1214,
	380, 381, 382, 1200, 1201, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1210, 0, 1137, 393,
	0, 394, 395, 396, 397, 398, 1173, 1174, 1177, 482,
	1216, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 1215, 409, 1182,
	1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1211,
	1220, 426, 427, 1221, 0, 428, 429, 430, 431, 432,
	433, 436, 1166, 1165, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 1105, 281, 1224, 479, 480, 1128, 1176, 481,
	1190, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 1225, 492, 1226,
	1205, 493, 494, 1115, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 1206, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1186, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	1116, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1169, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 1184, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 1231,
	593, 594, 595, 596, 1207, 600, 601, 0, 602, 603,
	1102, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 1196, 1197, 1198, 1199, 0, 621,
	0, 613, 614, 615, 1208, 616, 1209, 1126, 617, 618,
	619, 620, 0, 622, 623, 0, 1109, 624, 625, 626,
	628, 629, 627, 630, 1170, 631, 0, 0, 632, 633,
	634, 692, 1193, 1230, 0, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1106, 0, 0, 1657, 0, 1148, 1120, 1121, 1122,
	1118, 1119, 1131, 0, 1101, 0, 0, 0, 0, 0,
	0, 1099, 1100, 282, 284, 283, 285, 286, 287, 288,
	1132, 289, 290, 0, 1130, 0, 0, 0, 1172, 1136,
	0, 0, 0, 291, 292, 1212, 293, 294, 295, 296,
	297, 298, 646, 1185, 0, 299, 1192, 300, 1191, 0,
	1202, 301, 302, 303, 304, 305, 306, 1138, 1171, 1103,
	307, 1232, 1233, 653, 0, 308, 309, 1178, 0, 1159,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1213, 332,
	333, 334, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 335,
	336, 337, 338, 339, 1195, 340, 342, 1189, 1188, 1108,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1180, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1114, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1203, 1204,
	372, 1127, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 1187, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1214, 380, 381, 382, 1200, 1201, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1210,
	0, 1137, 393, 0, 394, 395, 396, 397, 398, 1173,
	1174, 1177, 482, 1216, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 280, 406, 407, 408, 0,
	1215, 409, 1182, 1183, 0, 1143, 0, 410, 411, 1217,
	1175, 1218, 412, 413, 414, 1219, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 1211, 1220, 426, 427, 1221, 0, 428, 429,
	430, 431, 432, 433, 436, 1166, 1165, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1222, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 1223, 478, 466, 1105, 281, 1224, 479, 480,
	1128, 1176, 481, 1190, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 675,
	1225, 492, 1226, 1205, 493, 494, 1115, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 1206, 512, 680,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1186, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 1116, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1169, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	1184, 0, 586, 0, 587, 588, 589, 591, 560, 592,
	597, 598, 1231, 593, 594, 595, 596, 1207, 600, 601,
	0, 602, 603, 1102, 599, 590, 0, 604, 605, 606,
	607, 608, 609, 610, 611, 0, 612, 1196, 1197, 1198,
	1199, 0, 621, 0, 613, 614, 615, 1208, 616, 1209,
	1126, 617, 618, 619, 620, 0, 622, 623, 0, 1109,
	624, 625, 626, 628, 629, 627, 630, 1170, 631, 0,
	0, 632, 633, 634, 692, 1193, 1230, 0, 636, 635,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1106, 0, 0, 1558, 0, 1148,
	1120, 1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0,
	0, 0, 0, 0, 1099, 1100, 282, 284, 283, 285,
	286, 287, 288, 1132, 289, 290, 0, 1130, 0, 0,
	0, 1172, 1136, 0, 0, 0, 291, 292, 1212, 293,
	294, 295, 296, 297, 298, 646, 1185, 0, 299, 1192,
	300, 1191, 0, 1202, 301, 302, 303, 304, 305, 306,
	1138, 1171, 1103, 307, 1232, 1233, 653, 0, 308, 309,
	1178, 0, 1159, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1213, 332, 333, 334, 1162, 1160, 1161, 1168, 1164,
	1163, 1167, 335, 336, 337, 338, 339, 1195, 340, 342,
	1189, 1188, 1108, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1180, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 1114,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1203, 1204, 372, 1127, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 1187, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1214, 380, 381, 382, 1200,
	1201, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1210, 0, 1137, 393, 0, 394, 395, 396,
	397, 398, 1557, 1174, 1177, 482, 1216, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 280, 406,
	407, 408, 0, 1215, 409, 1182, 1183, 0, 1143, 0,
	410, 411, 1217, 1175, 1218, 412, 413, 414, 1219, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 1211, 1220, 426, 427, 1221,
	0, 428, 429, 430, 431, 432, 433, 436, 1166, 1165,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1222,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 1223, 478, 466, 1105, 281,
	1224, 479, 480, 1128, 1176, 481, 1190, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 1225, 492, 1226, 1205, 493, 494, 1115,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	1206, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1186, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1227, 548, 549, 550, 551, 552, 1116, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1169, 575,
	576, 558, 559, 577, 578, 1228, 579, 580, 581, 582,
	583, 584, 585, 1184, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 1231, 593, 594, 595, 596,
	1207, 600, 601, 0, 602, 603, 1102, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	1196, 1197, 1198, 1199, 0, 621, 0, 613, 614, 615,
	1208, 616, 1209, 1126, 617, 618, 619, 620, 0, 622,
	623, 0, 1109, 624, 625, 626, 628, 629, 627, 630,
	1170, 631, 0, 0, 632, 633, 634, 692, 1193, 1230,
	0, 636, 635, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1106, 0, 0,
	1552, 0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0,
	1101, 0, 0, 0, 0, 0, 0, 1099, 1100, 282,
	284, 283, 285, 286, 287, 288, 1132, 289, 290, 0,
	1130, 0, 0, 0, 1172, 1136, 0, 0, 0, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 1185,
	0, 299, 1192, 300, 1191, 0, 1202, 301, 302, 303,
	304, 305, 306, 1138, 1171, 1103, 307, 1232, 1233, 653,
	0, 308, 309, 1178, 0, 1159, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1213, 332, 333, 334, 1162, 1160,
	1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338, 339,
	1195, 340, 342, 1189, 1188, 1108, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1180, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1114, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1203, 1204, 372, 1127, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1187, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1214, 380,
	381, 382, 1200, 1201, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1210, 0, 1137, 393, 0,
	394, 395, 396, 397, 398, 1551, 1174, 1177, 482, 1216,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 280, 406, 407, 408, 0, 1215, 409, 1182, 1183,
	0, 1143, 0, 410, 411, 1217, 1175, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1211, 1220,
	426, 427, 1221, 0, 428, 429, 430, 431, 432, 433,
	436, 1166, 1165, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 1105, 281, 1224, 479, 480, 1128, 1176, 481, 1190,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 1225, 492, 1226, 1205,
	493, 494, 1115, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 1206, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1186,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 1116,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1169, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 1184, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 1231, 593,
	594, 595, 596, 1207, 600, 601, 0, 602, 603, 1102,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 1196, 1197, 1198, 1199, 0, 621, 0,
	613, 614, 615, 1208, 616, 1209, 1126, 617, 618, 619,
	620, 0, 622, 623, 0, 1109, 624, 625, 626, 628,
	629, 627, 630, 1170, 631, 0, 0, 632, 633, 634,
	692, 1193, 1230, 0, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1106, 0, 0, 1545, 0, 1148, 1120, 1121, 1122, 1118,
	1119, 1131, 0, 1101, 0, 0, 0, 0, 0, 0,
	1099, 1100, 282, 284, 283, 285, 286, 287, 288, 1132,
	289, 290, 0, 1130, 0, 0, 0, 1172, 1136, 0,
	0, 0, 291, 292, 1212, 293, 294, 295, 296, 297,
	298, 646, 1185, 0, 299, 1192, 300, 1191, 0, 1202,
	301, 302, 303, 304, 305, 306, 1138, 1171, 1103, 307,
	1232, 1233, 653, 0, 308, 309, 1178, 0, 1159, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1213, 332, 333,
	334, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336,
	337, 338, 339, 1195, 340, 342, 1189, 1188, 1108, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1180, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1114, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1203, 1204, 372,
	1127, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	1187, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1214, 380, 381, 382, 1200, 1201, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1210, 0,
	1137, 393, 0, 394, 395, 396, 397, 398, 1173, 1174,
	1177, 482, 1216, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 280, 406, 407, 408, 0, 1215,
	409, 1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175,
	1218, 412, 413, 414, 1219, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1211, 1220, 426, 427, 1221, 0, 428, 429, 430,
	431, 432, 433, 436, 1166, 1165, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1222, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 1223, 478, 466, 1105, 281, 1224, 479, 480, 1128,
	1176, 481, 1190, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 1225,
	492, 1226, 1205, 493, 494, 1115, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 1206, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1186, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 1116, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1169, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 1184,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 1231, 593, 594, 595, 596, 1207, 600, 601, 0,
	602, 603, 1102, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 1196, 1197, 1198, 1199,
	0, 621, 0, 613, 614, 615, 1208, 616, 1209, 1126,
	617, 618, 619, 620, 0, 622, 623, 0, 1109, 624,
	625, 626, 628, 629, 627, 630, 1170, 631, 0, 0,
	632, 633, 634, 692, 1193, 1230, 0, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1106, 0, 0, 1354, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0,
	0, 0, 0, 1099, 1100, 282, 284, 283, 285, 286,
	287, 288, 1132, 289, 290, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 291, 292, 1212, 293, 294,
	295, 296, 297, 298, 646, 1185, 0, 299, 1192, 300,
	1191, 0, 1202, 301, 302, 303, 304, 305, 306, 1138,
	1171, 1103, 307, 1232, 1233, 653, 0, 308, 309, 1178,
	0, 1159, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1213, 332, 333, 334, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 335, 336, 337, 338, 339, 1195, 340, 342, 1189,
	1188, 1108, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1180, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1114, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1203, 1204, 372, 1127, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1187, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1214, 380, 381, 382, 1200, 1201,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1210, 0, 1137, 393, 0, 394, 395, 396, 397,
	398, 1173, 1174, 1177, 482, 1216, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 1215, 409, 1182, 1183, 0, 1143, 0, 410,
	411, 1217, 1175, 1218, 412, 413, 414, 1219, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1211, 1220, 426, 427, 1221, 0,
	428, 429, 430, 431, 432, 433, 436, 1166, 1165, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1222, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 1223, 478, 466, 1105, 281, 1224,
	479, 480, 1128, 1176, 481, 1190, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 1225, 492, 1226, 1205, 493, 494, 1115, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 1206,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1186, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 1116, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 1184, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 1231, 593, 594, 595, 596, 1207,
	600, 601, 0, 602, 603, 1102, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 1196,
	1197, 1198, 1199, 0, 621, 0, 613, 614, 615, 1208,
	616, 1209, 1126, 617, 618, 619, 620, 0, 622, 623,
	0, 1109, 624, 625, 626, 628, 629, 627, 630, 1170,
	631, 0, 0, 632, 633, 634, 692, 1193, 1230, 0,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1106, 0, 0, 0,
	0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101,
	0, 0, 0, 0, 0, 0, 1099, 1100, 282, 284,
	283, 285, 286, 287, 288, 1132, 289, 290, 0, 1130,
	0, 0, 0, 1172, 1136, 0, 0, 0, 291, 292,
	1212, 293, 294, 295, 296, 297, 298, 646, 1185, 0,
	299, 1192, 300, 1191, 0, 1202, 301, 302, 303, 304,
	305, 306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0,
	308, 309, 1178, 0, 1159, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1213, 332, 333, 334, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 335, 336, 337, 338, 339, 1195,
	340, 342, 1189, 1188, 1108, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 1180,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 1114, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1203, 1204, 372, 1127, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 1187, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1214, 380, 381,
	382, 1200, 1201, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1210, 0, 1137, 393, 0, 394,
	395, 396, 397, 398, 1173, 1174, 1177, 482, 1216, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 1215, 409, 1182, 1183, 0,
	1143, 0, 410, 411, 1217, 1175, 1218, 412, 413, 414,
	1219, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 1211, 1220, 426,
	427, 1221, 0, 428, 429, 430, 431, 432, 433, 436,
	1166, 1165, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1222, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 1223, 478, 466,
	1105, 281, 1224, 479, 480, 1128, 1176, 481, 1190, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 1225, 492, 1226, 1205, 493,
	494, 1115, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 1206, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 1186, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 1116, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 1184, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 1231, 593, 594,
	595, 596, 1207, 600, 601, 0, 602, 603, 1102, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 1196, 1197, 1198, 1199, 0, 621, 0, 613,
	614, 615, 1208, 616, 1209, 1126, 617, 618, 619, 620,
	0, 622, 623, 0, 1109, 624, 625, 626, 628, 629,
	627, 630, 1170, 631, 0, 0, 632, 633, 634, 692,
	1193, 1230, 0, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1106,
	0, 0, 0, 0, 1148, 1120, 1121, 1122, 1118, 1119,
	1131, 0, 1101, 0, 0, 0, 0, 0, 0, 1099,
	1100, 282, 284, 283, 285, 286, 287, 288, 1132, 289,
	290, 0, 1130, 0, 0, 0, 1172, 1136, 0, 0,
	0, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 1185, 0, 299, 1192, 300, 1191, 0, 1202, 301,
	302, 303, 304, 305, 306, 1138, 1171, 1103, 307, 1232,
	1233, 653, 0, 308, 309, 1178, 0, 1159, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 4813,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337,
	338, 339, 1195, 340, 342, 1189, 1188, 1108, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 1180, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 1114, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1203, 1204, 372, 1127,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 1187,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1214, 380, 381, 382, 1200, 1201, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1210, 0, 1137,
	393, 0, 394, 395, 396, 397, 398, 1173, 1174, 1177,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 1215, 409,
	1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1211, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 1166, 1165, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 1105, 281, 1224, 479, 480, 1128, 1176,
	481, 1190, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 1205, 493, 494, 1115, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 1206, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 1186, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 1116, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 1184, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	1231, 593, 594, 595, 596, 1207, 600, 601, 0, 602,
	603, 1102, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 1196, 1197, 1198, 1199, 0,
	621, 0, 613, 614, 615, 1208, 616, 1209, 1126, 617,
	618, 619, 620, 0, 4812, 623, 0, 1109, 624, 625,
	626, 628, 629, 627, 630, 1170, 631, 0, 0, 632,
	633, 634, 692, 1193, 1230, 0, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1106, 0, 0, 0, 0, 1148, 1120, 1121,
	1122, 1118, 1119, 1131, 0, 1101, 0, 0, 0, 0,
	0, 0, 1099, 1100, 282, 284, 283, 285, 286, 287,
	288, 1132, 289, 290, 0, 1130, 0, 0, 0, 1172,
	1136, 0, 0, 0, 291, 292, 1212, 293, 294, 295,
	296, 297, 298, 4811, 1185, 0, 299, 1192, 300, 1191,
	0, 1202, 301, 302, 303, 304, 305, 306, 1138, 1171,
	1103, 307, 1232, 1233, 653, 0, 308, 309, 1178, 0,
	1159, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1213,
	332, 333, 4813, 1162, 1160, 1161, 1168, 1164, 1163, 1167,
	335, 336, 337, 338, 339, 1195, 340, 342, 1189, 1188,
	1108, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 1180, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 1114, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 1203,
	1204, 372, 1127, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 1187, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1214, 380, 381, 382, 1200, 1201, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	1210, 0, 1137, 393, 0, 394, 395, 396, 397, 398,
	1173, 1174, 1177, 482, 1216, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 280, 406, 407, 408,
	0, 1215, 409, 1182, 1183, 0, 1143, 0, 410, 411,
	1217, 1175, 1218, 412, 413, 414, 1219, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 1211, 1220, 426, 427, 1221, 0, 428,
	429, 430, 431, 432, 433, 436, 1166, 1165, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1222, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 1223, 478, 466, 1105, 281, 1224, 479,
	480, 1128, 1176, 481, 1190, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 1225, 492, 1226, 1205, 493, 494, 1115, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 1206, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 1186, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 1116, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1169, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 1184, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 1231, 593, 594, 595, 596, 1207, 600,
	601, 0, 602, 603, 1102, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 1196, 1197,
	1198, 1199, 0, 621, 0, 613, 614, 615, 1208, 616,
	1209, 1126, 617, 618, 619, 620, 0, 4812, 623, 0,
	1109, 624, 625, 626, 628, 629, 627, 630, 1170, 631,
	0, 0, 632, 633, 634, 692, 1193, 1230, 0, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1106, 0, 0, 0, 0,
	1148, 1120, 1121, 1122, 1118, 1119, 1131, 0, 1101, 0,
	0, 0, 0, 0, 0, 1099, 1100, 282, 284, 283,
	285, 286, 287, 288, 1132, 289, 290, 0, 1130, 0,
	0, 0, 1172, 1136, 0, 0, 0, 291, 292, 1212,
	293, 294, 295, 296, 297, 298, 646, 1185, 0, 299,
	1192, 300, 1191, 0, 1202, 301, 302, 303, 304, 305,
	306, 1138, 1171, 1103, 307, 1232, 1233, 653, 0, 308,
	309, 1178, 0, 1159, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1213, 332, 4431, 334, 1162, 1160, 1161, 1168,
	1164, 1163, 1167, 335, 336, 337, 338, 339, 1195, 340,
	342, 1189, 1188, 1108, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 1180, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	1114, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1203, 1204, 372, 1127, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 1187, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1214, 380, 381, 382,
	1200, 1201, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1210, 0, 4432, 393, 0, 394, 395,
	396, 397, 398, 1173, 1174, 1177, 482, 1216, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 1215, 409, 1182, 1183, 0, 1143,
	0, 410, 411, 1217, 1175, 1218, 412, 413, 414, 1219,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 1211, 1220, 426, 427,
	1221, 0, 428, 429, 430, 431, 432, 433, 436, 1166,
	1165, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1222, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 1223, 478, 466, 1105,
	281, 1224, 479, 480, 1128, 1176, 481, 1190, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 1225, 492, 1226, 1205, 493, 494,
	1115, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 1206, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 1186, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 4430, 552, 1116, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 1184, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 1231, 593, 594, 595,
	596, 1207, 600, 601, 0, 602, 603, 1102, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 1196, 1197, 1198, 1199, 0, 621, 0, 613, 614,
	615, 1208, 616, 1209, 1126, 617, 618, 619, 620, 0,
	622, 623, 0, 1109, 624, 625, 626, 628, 629, 627,
	630, 1170, 631, 0, 0, 632, 633, 634, 692, 1193,
	1230, 0, 636, 635, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1106, 0,
	0, 0, 0, 1148, 1120, 1121, 1122, 3230, 3231, 1131,
	0, 1101, 0, 0, 0, 0, 0, 0, 1099, 1100,
	282, 284, 283, 285, 286, 287, 288, 1132, 289, 290,
	0, 1130, 0, 0, 0, 1172, 1136, 0, 0, 0,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 646,
	1185, 0, 299, 1192, 300, 1191, 0, 1202, 301, 302,
	303, 304, 305, 306, 1138, 1171, 1103, 307, 1232, 1233,
	653, 0, 308, 309, 1178, 0, 1159, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1213, 332, 333, 334, 1162,
	1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338,
	339, 1195, 340, 342, 1189, 1188, 1108, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1180, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 1114, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1203, 1204, 372, 1127, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 1187, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1214,
	380, 381, 382, 1200, 1201, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1210, 0, 1137, 393,
	0, 394, 395, 396, 397, 398, 1173, 1174, 1177, 482,
	1216, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 1215, 409, 1182,
	1183, 0, 1143, 0, 410, 411, 1217, 1175, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1211,
	1220, 426, 427, 1221, 0, 428, 429, 430, 431, 432,
	433, 436, 1166, 1165, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 1105, 281, 1224, 479, 480, 1128, 1176, 481,
	1190, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 1225, 492, 1226,
	1205, 493, 494, 1115, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 1206, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	1186, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	1116, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1169, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 1184, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 1231,
	593, 594, 595, 596, 1207, 600, 601, 0, 602, 603,
	1102, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 1196, 1197, 1198, 1199, 0, 621,
	0, 613, 614, 615, 1208, 616, 1209, 1126, 617, 618,
	619, 620, 0, 622, 623, 0, 1109, 624, 625, 626,
	628, 629, 627, 630, 1170, 631, 0, 0, 632, 633,
	634, 692, 1193, 1230, 0, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1106, 0, 0, 0, 0, 1148, 1120, 1121, 1122,
	3228, 3229, 1131, 0, 1101, 0, 0, 0, 0, 0,
	0, 1099, 1100, 282, 284, 283, 285, 286, 287, 288,
	1132, 289, 290, 0, 1130, 0, 0, 0, 1172, 1136,
	0, 0, 0, 291, 292, 1212, 293, 294, 295, 296,
	297, 298, 646, 1185, 0, 299, 1192, 300, 1191, 0,
	1202, 301, 302, 303, 304, 305, 306, 1138, 1171, 1103,
	307, 1232, 1233, 653, 0, 308, 309, 1178, 0, 1159,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1213, 332,
	333, 334, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 335,
	336, 337, 338, 339, 1195, 340, 342, 1189, 1188, 1108,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 1180, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 1114, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 1203, 1204,
	372, 1127, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 1187, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1214, 380, 381, 382, 1200, 1201, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 1210,
	0, 1137, 393, 0, 394, 395, 396, 397, 398, 1173,
	1174, 1177, 482, 1216, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 280, 406, 407, 408, 0,
	1215, 409, 1182, 1183, 0, 1143, 0, 410, 411, 1217,
	1175, 1218, 412, 413, 414, 1219, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 1211, 1220, 426, 427, 1221, 0, 428, 429,
	430, 431, 432, 433, 436, 1166, 1165, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1222, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 1223, 478, 466, 1105, 281, 1224, 479, 480,
	1128, 1176, 481, 1190, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 675,
	1225, 492, 1226, 1205, 493, 494, 1115, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 1206, 512, 680,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 1186, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 1116, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 1169, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	1184, 0, 586, 0, 587, 588, 589, 591, 560, 592,
	597, 598, 1231, 593, 594, 595, 596, 1207, 600, 601,
	0, 602, 603, 1102, 599, 590, 0, 604, 605, 606,
	607, 608, 609, 610, 611, 0, 612, 1196, 1197, 1198,
	1199, 0, 621, 0, 613, 614, 615, 1208, 616, 1209,
	1126, 617, 618, 619, 620, 0, 622, 623, 0, 1109,
	624, 625, 626, 628, 629, 627, 630, 1170, 631, 0,
	0, 632, 633, 634, 692, 1193, 1230, 0, 636, 635,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1106, 0, 0, 0, 0, 1148,
	1120, 1121, 1122, 1118, 1119, 1131, 0, 1101, 0, 0,
	0, 0, 0, 0, 1099, 1100, 282, 284, 283, 285,
	286, 287, 288, 1132, 289, 290, 0, 1130, 0, 0,
	0, 1172, 1136, 0, 0, 0, 291, 292, 1212, 293,
	294, 295, 296, 297, 298, 646, 1185, 0, 299, 1192,
	300, 1191, 0, 1202, 301, 302, 303, 304, 305, 306,
	1138, 1171, 1103, 307, 1232, 1233, 653, 0, 308, 309,
	1178, 0, 1159, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1213, 332, 333, 334, 1162, 1160, 1161, 1168, 1164,
	1163, 1167, 335, 336, 337, 338, 339, 1195, 340, 342,
	1189, 1188, 1108, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 1180, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 1114,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1203, 1204, 372, 1127, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 1187, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1214, 380, 381, 382, 1200,
	1201, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1210, 0, 1137, 393, 0, 394, 395, 396,
	397, 398, 1173, 1174, 1177, 482, 1216, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 280, 406,
	407, 408, 0, 1215, 409, 1182, 1183, 0, 1143, 0,
	410, 411, 1217, 1175, 1218, 412, 413, 414, 1219, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 1211, 1220, 426, 427, 1221,
	0, 428, 429, 430, 431, 432, 433, 436, 1166, 1165,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1222,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 1223, 478, 466, 1105, 281,
	1224, 479, 480, 1128, 1176, 481, 1190, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 1225, 492, 1226, 1205, 493, 494, 1115,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	1206, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 1186, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1227, 548, 549, 550, 551, 552, 1116, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1169, 575,
	576, 558, 559, 577, 578, 1228, 579, 580, 581, 582,
	583, 584, 585, 1184, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 1231, 593, 594, 595, 596,
	1207, 600, 601, 0, 602, 603, 1102, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	1196, 1197, 1198, 1199, 0, 621, 0, 613, 614, 615,
	1208, 616, 1209, 1126, 617, 618, 619, 620, 0, 622,
	623, 0, 1109, 624, 625, 626, 628, 629, 627, 630,
	1170, 631, 0, 0, 632, 633, 634, 692, 1193, 1230,
	0, 636, 635, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1106, 0, 0,
	0, 0, 1148, 1120, 1121, 1122, 1118, 1119, 1131, 0,
	1101, 0, 0, 0, 0, 0, 0, 2495, 2496, 282,
	284, 283, 285, 286, 287, 288, 1132, 289, 290, 0,
	1130, 0, 0, 0, 1172, 1136, 0, 0, 0, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 1185,
	0, 299, 1192, 300, 1191, 0, 1202, 301, 302, 303,
	304, 305, 306, 1138, 1171, 0, 307, 1232, 1233, 653,
	0, 308, 309, 1178, 0, 1159, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1213, 332, 333, 334, 1162, 1160,
	1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338, 339,
	1195, 340, 342, 1189, 1188, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	1180, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 1114, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1203, 1204, 372, 1127, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 1187, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1214, 380,
	381, 382, 1200, 1201, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1210, 0, 1137, 393, 0,
	394, 395, 396, 397, 398, 1173, 1174, 1177, 482, 1216,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 280, 406, 407, 408, 0, 1215, 409, 1182, 1183,
	0, 1143, 0, 410, 411, 1217, 1175, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1211, 1220,
	426, 427, 1221, 0, 428, 429, 430, 431, 432, 433,
	436, 1166, 1165, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 0, 281, 1224, 479, 480, 1128, 1176, 481, 1190,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 1225, 492, 1226, 1205,
	493, 494, 1115, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 1206, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 1186,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 1116,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1169, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 1184, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 1231, 593,
	594, 595, 596, 1207, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 1196, 1197, 1198, 1199, 0, 621, 0,
	613, 614, 615, 1208, 616, 1209, 1126, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 1170, 631, 0, 0, 632, 633, 634,
	692, 1193, 1230, 0, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 1148, 1120, 1121, 1122, 1118,
	1119, 1131, 0, 2754, 0, 0, 0, 0, 0, 0,
	2752, 2753, 282, 284, 283, 285, 286, 287, 288, 1132,
	289, 290, 0, 1130, 0, 0, 0, 1172, 1136, 0,
	0, 0, 291, 292, 1212, 293, 294, 295, 296, 297,
	298, 646, 1185, 0, 299, 1192, 300, 1191, 0, 1202,
	301, 302, 303, 304, 305, 306, 1138, 1171, 0, 307,
	1232, 1233, 653, 0, 308, 309, 1178, 0, 1159, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1213, 332, 333,
	334, 1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336,
	337, 338, 339, 1195, 340, 342, 1189, 1188, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 1180, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 1114, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 1203, 1204, 372,
	1127, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	1187, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1214, 380, 381, 382, 1200, 1201, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 1210, 0,
	1137, 393, 0, 394, 395, 396, 397, 398, 1173, 1174,
	1177, 482, 1216, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 280, 406, 407, 408, 0, 1215,
	409, 1182, 1183, 0, 1143, 0, 410, 411, 1217, 1175,
	1218, 412, 413, 414, 1219, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 1211, 1220, 426, 427, 1221, 0, 428, 429, 430,
	431, 432, 433, 436, 1166, 1165, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1222, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 1223, 478, 466, 0, 281, 1224, 479, 480, 1128,
	1176, 481, 1190, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 1225,
	492, 1226, 1205, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 1206, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 1186, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 3223, 3224, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 1169, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 1184,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 1231, 593, 594, 595, 596, 1207, 600, 601, 0,
	602, 603, 0, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 1196, 1197, 1198, 1199,
	0, 621, 0, 613, 614, 615, 1208, 616, 1209, 1126,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 1170, 631, 0, 0,
	632, 633, 634, 692, 1193, 1230, 0, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 1148, 1120,
	1121, 1122, 1118, 1119, 1131, 0, 0, 0, 0, 0,
	0, 0, 0, 2158, 2159, 282, 284, 283, 285, 286,
	287, 288, 1132, 289, 290, 0, 1130, 0, 0, 0,
	1172, 1136, 0, 0, 0, 291, 292, 1212, 293, 294,
	295, 296, 297, 298, 0, 1185, 0, 299, 1192, 300,
	1191, 0, 1202, 301, 302, 303, 304, 305, 306, 1138,
	1171, 1103, 307, 1232, 1233, 653, 0, 308, 309, 1178,
	0, 1159, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1213, 332, 333, 4813, 1162, 1160, 1161, 1168, 1164, 1163,
	1167, 335, 336, 337, 338, 339, 1195, 340, 342, 1189,
	1188, 1108, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 1180, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 1114, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	1203, 1204, 372, 1127, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 1187, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1214, 380, 381, 382, 1200, 1201,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 1210, 0, 1137, 393, 0, 394, 395, 396, 397,
	398, 1173, 1174, 1177, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 1215, 409, 1182, 1183, 0, 1143, 0, 410,
	411, 0, 1175, 0, 412, 413, 414, 1219, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 1211, 1220, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 1166, 1165, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1222, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 1223, 478, 466, 1105, 281, 0,
	479, 480, 1128, 1176, 481, 1190, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 1225, 492, 1226, 1205, 493, 494, 1115, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 1206,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 1186, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 1116, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1169, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 1184, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 1231, 593, 594, 595, 596, 1207,
	600, 601, 0, 602, 603, 1102, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 1196,
	1197, 1198, 1199, 0, 621, 0, 613, 614, 615, 1208,
	616, 1209, 1126, 617, 618, 619, 620, 0, 4812, 623,
	0, 1109, 624, 625, 626, 628, 629, 627, 630, 1170,
	631, 0, 0, 632, 633, 634, 692, 1193, 1230, 0,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 1092,
	0, 1270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1099, 1100, 282, 284,
	283, 285, 286, 287, 288, 1132, 289, 290, 0, 1130,
	0, 0, 0, 1172, 0, 0, 0, 0, 291, 292,
	1212, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 1171, 0, 307, 651, 652, 653, 0,
	308, 309, 1178, 0, 1159, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1213, 332, 333, 334, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1203, 1204, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1214, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1210, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 1173, 1174, 1177, 482, 1216, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 1215, 409, 668, 669, 0,
	670, 0, 410, 411, 1217, 1175, 1218, 412, 413, 414,
	1219, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 1256, 422, 424, 423, 0, 425, 1211, 1220, 426,
	427, 1221, 0, 428, 429, 430, 431, 432, 433, 436,
	1166, 1165, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1222, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 1223, 478, 466,
	0, 281, 1224, 479, 480, 0, 1176, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 1262, 487, 488, 489,
	0, 0, 490, 491, 675, 1225, 492, 1226, 1205, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 1206, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 682, 1264,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 241, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 1207, 600, 601, 0, 602, 603, 0, 599,
	590, 243, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 1208, 616, 1209, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 1170, 631, 0, 0, 632, 633, 634, 1646,
	693, 694, 0, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 235, 640, 641, 696, 642, 643, 644, 1270,
	0, 236, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 1260, 0, 2000, 0,
	0, 1172, 0, 0, 0, 0, 291, 292, 1212, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 1171, 0, 307, 651, 652, 653, 0, 308, 309,
	1178, 0, 1159, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1213, 332, 333, 334, 1162, 1160, 1161, 1168, 1164,
	1163, 1167, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 1203, 1204, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1214, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 1210, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 1173, 1174, 1177, 482, 1216, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 280, 406,
	407, 408, 0, 1215, 409, 668, 669, 0, 670, 0,
	410, 411, 1217, 1175, 1218, 412, 413, 414, 1219, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 1256,
	422, 424, 423, 0, 425, 1211, 1220, 426, 427, 1221,
	0, 428, 429, 430, 431, 432, 433, 436, 1166, 1165,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1222,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 1223, 478, 466, 0, 281,
	1224, 479, 480, 0, 1176, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 1262, 487, 488, 489, 0, 0,
	490, 491, 675, 1225, 492, 1226, 1205, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	1206, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1227, 548, 549, 550, 551, 552, 682, 1264, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 241, 570, 571, 569, 572, 573, 574, 1169, 575,
	576, 558, 559, 577, 578, 1228, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	1207, 600, 601, 0, 602, 603, 0, 599, 590, 243,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	1208, 616, 1209, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	1170, 631, 0, 0, 632, 633, 634, 1646, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 0, 0, 0,
	235, 640, 641, 696, 642, 643, 644, 0, 0, 236,
	0, 0, 0, 0, 0, 0, 0, 0, 3387, 0,
	1270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1260, 0, 2000, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 1172, 0, 0, 0, 0, 291, 292, 1212,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 1171, 0, 307, 651, 652, 653, 0, 308,
	309, 1178, 0, 1159, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1213, 332, 333, 334, 1162, 1160, 1161, 1168,
	1164, 1163, 1167, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 1203, 1204, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1214, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 1210, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 1173, 1174, 1177, 482, 1216, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 1215, 409, 668, 669, 0, 670,
	0, 410, 411, 1217, 1175, 1218, 412, 413, 414, 1219,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	1256, 422, 424, 423, 0, 425, 1211, 1220, 426, 427,
	1221, 0, 428, 429, 430, 431, 432, 433, 436, 1166,
	1165, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1222, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 1223, 478, 466, 0,
	281, 1224, 479, 480, 0, 1176, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 1262, 487, 488, 489, 0,
	0, 490, 491, 675, 1225, 492, 1226, 1205, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 1206, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 682, 1264, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1169,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 1207, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 1208, 616, 1209, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 1170, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 0, 1252,
	0, 1270, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 1172, 0, 1260, 0, 1258, 291, 292,
	1212, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 1171, 0, 307, 651, 652, 653, 0,
	308, 309, 1178, 0, 1159, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1213, 332, 333, 334, 1162, 1160, 1161,
	1168, 1164, 1163, 1167, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 1203, 1204, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1214, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 1210, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 1173, 1174, 1177, 482, 1216, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 1215, 409, 668, 669, 0,
	670, 0, 410, 411, 1217, 1175, 1218, 412, 413, 414,
	1219, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 1256, 422, 424, 423, 0, 425, 1211, 1220, 426,
	427, 1221, 0, 428, 429, 430, 431, 432, 433, 436,
	1166, 1165, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1222, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 1223, 478, 466,
	0, 281, 1224, 479, 480, 0, 1176, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 1262, 487, 488, 489,
	0, 0, 490, 491, 675, 1225, 492, 1226, 1205, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 1206, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 682, 1264,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1169, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 1207, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 1208, 616, 1209, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 1170, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 0, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 1270, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 1172, 0, 1260, 0, 1258, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 1171, 0, 307, 651, 652, 653,
	0, 308, 309, 1178, 0, 1159, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1213, 332, 333, 334, 1162, 1160,
	1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1203, 1204, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1214, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1210, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 1173, 1174, 1177, 482, 1216,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 280, 406, 407, 408, 0, 1215, 409, 668, 669,
	0, 670, 0, 410, 411, 1217, 1175, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 1256, 422, 424, 423, 0, 425, 1211, 1220,
	426, 427, 1221, 0, 428, 429, 430, 431, 432, 433,
	436, 1166, 1165, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 0, 281, 1224, 479, 480, 0, 1176, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 1262, 487, 488,
	489, 0, 0, 490, 491, 675, 1225, 492, 1226, 1205,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 1206, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 682,
	1264, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1169, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 1207, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 1208, 616, 1209, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 1170, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 0, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 1270, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 1172, 0, 1260, 0, 1258,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 0, 650, 301, 302,
	303, 304, 305, 306, 0, 1171, 0, 307, 651, 652,
	653, 0, 308, 309, 1178, 0, 1159, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1213, 332, 333, 334, 1162,
	1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338,
	339, 0, 340, 342, 655, 656, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 1203, 1204, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1214,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 1210, 0, 664, 393,
	0, 394, 395, 396, 397, 398, 1173, 1174, 1177, 482,
	1216, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 1215, 409, 668,
	669, 0, 670, 0, 410, 411, 1217, 1175, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 1211,
	1220, 426, 427, 1221, 0, 428, 429, 430, 431, 432,
	433, 436, 1166, 1165, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 0, 281, 1224, 479, 480, 0, 1176, 481,
	674, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 1225, 492, 1226,
	1205, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 1206, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 1169, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 1207, 600, 601, 0, 602, 603,
	0, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 686, 687, 688, 689, 0, 621,
	0, 613, 614, 615, 1208, 616, 1209, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 0, 624, 625, 626,
	628, 629, 627, 630, 1170, 631, 0, 0, 632, 633,
	634, 692, 693, 694, 0, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 1270, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 1172, 0, 0, 0,
	4247, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 1171, 0, 307, 651,
	652, 653, 0, 308, 309, 1178, 0, 1159, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 334,
	1162, 1160, 1161, 1168, 1164, 1163, 1167, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 1203, 1204, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1214, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 1210, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 1173, 1174, 1177,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 1215, 409,
	668, 669, 0, 670, 0, 410, 411, 1217, 1175, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	1211, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 1166, 1165, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 0, 281, 1224, 479, 480, 0, 1176,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 1205, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 1206, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 682, 1264, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 1169, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 1207, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 1208, 616, 1209, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 1170, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 0, 636, 635, 637, 695,
	638, 639, 276, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 2599, 2600, 2601, 2618, 2619, 2620, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 2621, 0, 645, 0, 0, 0, 0, 291,
	292, 1897, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 0, 1882, 307, 651, 652, 653,
	0, 308, 309, 654, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 2611, 0, 318, 319, 320, 317,
	321, 0, 322, 2607, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 0, 0, 0,
	2612, 2613, 2614, 2615, 373, 374, 375, 660, 0, 0,
	2606, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 663, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 668, 669,
	0, 670, 0, 410, 411, 0, 671, 0, 412, 413,
	414, 0, 415, 0, 2616, 2617, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 672, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 2609, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 479, 480, 0, 673, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 0, 492, 0, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 682,
	553, 2610, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 0, 602, 603, 1881,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 690, 616, 691, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 0, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 1092, 0, 1572,
	2596, 2597, 2598, 2622, 2608, 2602, 0, 2604, 2605, 2603,
	2590, 2591, 2592, 2593, 2594, 2595, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 1212, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 1494, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 1213, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 1214, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 1216, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 1215, 409, 668, 669, 0, 670, 0,
	410, 411, 1217, 671, 1218, 412, 413, 414, 1219, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 1220, 426, 427, 1221,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 1222,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 1223, 478, 466, 0, 0,
	1224, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 1225, 492, 1226, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	1227, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 241, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 1228, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 243,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 1646, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 0, 0, 0,
	235, 640, 641, 696, 642, 643, 644, 0, 0, 236,
	1643, 0, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 193, 289, 290, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 651, 652, 653,
	0, 308, 309, 654, 0, 1494, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1213, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1214, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 663, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 1216,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 1215, 409, 668, 669,
	0, 670, 0, 410, 411, 1217, 671, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 672, 1220,
	426, 427, 1221, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 0, 0, 1224, 479, 480, 0, 673, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 1225, 492, 1226, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 241, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 0, 602, 603, 0,
	599, 590, 243, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 690, 616, 691, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	1646, 693, 694, 0, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 235, 640, 641, 696, 642, 643, 644,
	1572, 1571, 236, 0, 0, 0, 1569, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 193,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 1212,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 1494, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 1213, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 1214, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 665, 666, 667, 482, 1216, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 1215, 409, 668, 669, 0, 670,
	0, 410, 411, 1217, 671, 1218, 412, 413, 414, 1219,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 1220, 426, 427,
	1221, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	1222, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 1223, 478, 466, 0,
	0, 1224, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 1225, 492, 1226, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 1227, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 1228, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1572, 1571,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 1670, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 1212, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 1494, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	1213, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 1214, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 665, 666, 667, 482, 1216, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 1215, 409, 668, 669, 0, 670, 0, 410,
	411, 1217, 671, 1218, 412, 413, 414, 1219, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 1220, 426, 427, 1221, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 1222, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 1223, 478, 466, 0, 0, 1224,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 1225, 492, 1226, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 1227,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 1228, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 686,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 0,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1572, 1571, 0, 0,
	0, 0, 1569, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 3704, 0, 0, 645, 0,
	0, 0, 0, 291, 292, 1212, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 0,
	650, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 651, 652, 653, 0, 308, 309, 654, 0, 1494,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 1213, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 1214, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 663,
	0, 664, 393, 0, 394, 395, 396, 397, 398, 665,
	666, 667, 482, 1216, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	1215, 409, 668, 669, 0, 670, 0, 410, 411, 1217,
	671, 1218, 412, 413, 414, 1219, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 672, 1220, 426, 427, 1221, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 1222, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 1223, 478, 466, 0, 0, 1224, 479, 480,
	0, 673, 481, 674, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 675,
	1225, 492, 1226, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 2363, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 1227, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 1228, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 0, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	0, 602, 603, 0, 599, 590, 0, 604, 605, 606,
	607, 608, 609, 610, 611, 0, 612, 686, 687, 688,
	689, 0, 621, 0, 613, 614, 615, 690, 616, 691,
	0, 617, 618, 619, 620, 0, 622, 623, 0, 0,
	624, 625, 626, 628, 629, 627, 630, 0, 631, 0,
	0, 632, 633, 634, 692, 693, 694, 0, 636, 635,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1572, 2273, 0, 0, 0, 0,
	2274, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 1670, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 1212, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 1494, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 1213, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	1214, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 1216, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 1215, 409,
	668, 669, 0, 670, 0, 410, 411, 1217, 671, 1218,
	412, 413, 414, 1219, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 2272, 424, 423, 0, 425,
	672, 1220, 426, 427, 1221, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 1222, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	1223, 478, 466, 0, 0, 1224, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 1225, 492,
	1226, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 1227, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	1228, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 0, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1572, 1571, 0, 0, 0, 0, 1569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 1670, 0, 0, 645, 0, 0, 0, 0, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 651, 652, 653,
	0, 308, 309, 654, 0, 1494, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1213, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1214, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 663, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 1216,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 1215, 409, 668, 669,
	0, 670, 0, 410, 411, 1217, 671, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 672, 1220,
	426, 427, 1221, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 0, 0, 1224, 479, 480, 0, 673, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 1225, 492, 1226, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 690, 616, 691, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 0, 636, 635, 637, 695, 638, 639,
	0, 1092, 0, 276, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 1652,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 0, 650, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 651, 652,
	653, 0, 308, 309, 654, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 655, 656, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 658, 659, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 663, 0, 664, 393,
	0, 394, 395, 396, 397, 398, 665, 666, 667, 482,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 0, 409, 668,
	669, 0, 670, 0, 410, 411, 0, 671, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 672,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 479, 480, 0, 673, 481,
	674, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 0, 492, 0,
	676, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 679, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 241, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 685, 600, 601, 0, 602, 603,
	0, 599, 590, 243, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 686, 687, 688, 689, 0, 621,
	0, 613, 614, 615, 690, 616, 691, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 0, 624, 625, 626,
	628, 629, 627, 630, 0, 631, 0, 0, 632, 633,
	634, 1646, 693, 694, 0, 636, 635, 637, 695, 638,
	639, 276, 0, 0, 235, 640, 641, 696, 642, 643,
	644, 0, 0, 236, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	193, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 281, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 0, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 1270, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 1172, 0, 0, 0, 2014, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 1171, 0, 307, 651, 652, 653,
	0, 308, 309, 1178, 0, 1159, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1213, 332, 333, 334, 1162, 1160,
	1161, 1168, 1164, 1163, 1167, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 1203, 1204, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1214, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 1210, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 1173, 1174, 1177, 482, 1216,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 280, 406, 407, 408, 0, 1215, 409, 668, 669,
	0, 670, 0, 410, 411, 1217, 1175, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 1211, 1220,
	426, 427, 1221, 0, 428, 429, 430, 431, 432, 433,
	436, 1166, 1165, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 0, 281, 1224, 479, 480, 0, 1176, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 1225, 492, 1226, 1205,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 1206, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1169, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 1207, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 1208, 616, 1209, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 1170, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 0, 636, 635, 637, 695, 638, 639,
	276, 3137, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 665, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	0, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 276, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 4975, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 665, 666, 667, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 0, 409, 668, 669, 0, 670, 0, 410,
	411, 0, 671, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 0, 478, 466, 0, 281, 0,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 0, 492, 0, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 686,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 0,
	636, 635, 637, 695, 638, 639, 0, 276, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 3654, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	0, 650, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 651, 652, 653, 0, 308, 309, 654, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 0, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	663, 0, 664, 393, 0, 394, 395, 396, 397, 398,
	665, 666, 667, 482, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 280, 406, 407, 408,
	0, 0, 409, 668, 669, 0, 670, 0, 410, 411,
	0, 671, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 672, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 0, 478, 466, 0, 281, 0, 479,
	480, 0, 673, 481, 674, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 0, 492, 0, 676, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 681, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 682, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 686, 687,
	688, 689, 0, 621, 0, 613, 614, 615, 690, 616,
	691, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 692, 693, 694, 0, 636,
	635, 637, 695, 638, 639, 0, 276, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 1640, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 0,
	650, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 651, 652, 653, 0, 308, 309, 654, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 663,
	0, 664, 393, 0, 394, 395, 396, 397, 398, 665,
	666, 667, 482, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 668, 669, 0, 670, 0, 410, 411, 0,
	671, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 672, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 479, 480,
	0, 673, 481, 674, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 675,
	0, 492, 0, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 0, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	0, 602, 603, 0, 599, 590, 0, 604, 605, 606,
	607, 608, 609, 610, 611, 0, 612, 686, 687, 688,
	689, 0, 621, 0, 613, 614, 615, 690, 616, 691,
	0, 617, 618, 619, 620, 0, 622, 623, 0, 0,
	624, 625, 626, 628, 629, 627, 630, 0, 631, 0,
	0, 632, 633, 634, 692, 693, 694, 0, 636, 635,
	637, 695, 638, 639, 276, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 3125, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 0, 636, 635, 637, 695,
	638, 639, 276, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 291,
	292, 3809, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 651, 652, 653,
	0, 308, 309, 654, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 663, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 668, 669,
	0, 670, 0, 410, 411, 0, 671, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 672, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 479, 480, 0, 673, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 0, 492, 0, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 690, 616, 691, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 0, 636, 635, 637, 695, 638, 639,
	0, 922, 0, 823, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 2350,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 0, 650, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 651, 652,
	653, 0, 308, 309, 654, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 830,
	339, 0, 340, 342, 655, 656, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 658, 659, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 920, 0,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 663, 0, 664, 393,
	0, 394, 395, 396, 397, 398, 665, 666, 667, 482,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 0, 409, 668,
	669, 0, 670, 0, 410, 411, 0, 671, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 672,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 0,
	478, 466, 0, 281, 0, 479, 480, 0, 673, 481,
	674, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 0, 492, 0,
	676, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 679, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 685, 600, 601, 0, 602, 603,
	0, 599, 590, 828, 604, 605, 606, 607, 608, 829,
	610, 611, 0, 612, 686, 687, 688, 689, 0, 621,
	0, 613, 614, 615, 690, 616, 691, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 0, 624, 625, 626,
	628, 629, 627, 630, 0, 631, 0, 0, 632, 633,
	634, 692, 693, 694, 823, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 282, 284, 283, 285, 286, 287, 288, 2085, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 833, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	830, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 281, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 2084, 565, 566, 567, 568, 0, 2086, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 828, 604, 605, 606, 607, 608,
	829, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 2083, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 823, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 282, 284, 283, 285, 286, 287, 288, 2036,
	289, 290, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 291, 292, 833, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 830, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 665, 666,
	667, 482, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 280, 406, 407, 408, 0, 0,
	409, 668, 669, 0, 670, 0, 410, 411, 0, 671,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 0, 478, 466, 0, 281, 0, 479, 480, 0,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 0,
	492, 0, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 2035, 565, 566, 567, 568, 0, 2037, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 828, 604, 605, 606, 607,
	608, 829, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 2034, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 0, 636, 635, 637,
	695, 638, 639, 821, 0, 823, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 833, 0, 645, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 830, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 665, 666,
	667, 482, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 280, 406, 407, 408, 0, 0,
	409, 668, 669, 0, 670, 0, 410, 411, 0, 671,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 0, 478, 466, 0, 281, 0, 479, 480, 0,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 0,
	492, 0, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 828, 604, 605, 606, 607,
	608, 829, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 0, 636, 635, 637,
	695, 638, 639, 2058, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 833, 0, 0, 0, 0,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 0,
	2064, 0, 299, 2054, 300, 2070, 0, 2077, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 2080, 2081,
	0, 0, 308, 309, 0, 0, 1494, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1213, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 1195, 340, 342, 2068, 2067, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 1180, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 0, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 0, 0, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 2066, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1214,
	380, 381, 382, 2075, 2076, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 0, 0, 0, 393,
	0, 394, 395, 396, 397, 398, 0, 0, 0, 482,
	1216, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 1215, 409, 2061,
	2062, 0, 2057, 0, 410, 411, 1217, 0, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 0,
	1220, 426, 427, 1221, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 0, 0, 1224, 479, 480, 0, 0, 481,
	2069, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 0, 1225, 492, 1226,
	0, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 2051, 506, 507, 508,
	2052, 509, 510, 511, 0, 512, 0, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	2065, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	0, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 2063, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 2079,
	593, 594, 595, 596, 0, 600, 601, 0, 602, 603,
	0, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 2071, 2072, 2073, 2074, 0, 621,
	0, 613, 614, 615, 0, 616, 0, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 0, 624, 625, 626,
	628, 629, 627, 630, 0, 631, 0, 0, 632, 633,
	634, 0, 2055, 2078, 0, 636, 635, 637, 0, 638,
	639, 0, 0, 0, 0, 640, 641, 0, 642, 643,
	644, 823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 2045, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 830, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 281, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 828, 604, 605, 606, 607, 608, 829, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 823, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 291,
	292, 833, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 651, 652, 653,
	0, 308, 309, 654, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 830, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 663, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 280, 406, 407, 408, 0, 0, 409, 668, 669,
	0, 670, 0, 410, 411, 0, 671, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 672, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 0, 478,
	466, 0, 281, 0, 479, 480, 0, 673, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 0, 492, 0, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 2401, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 2402,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 0, 602, 603, 0,
	599, 590, 828, 604, 605, 606, 607, 608, 829, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 690, 616, 691, 0, 617, 618, 2403,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 276, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	291, 292, 833, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 0, 650, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 651, 652,
	653, 0, 308, 309, 654, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 655, 656, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 658, 659, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 663, 0, 664, 393,
	0, 394, 395, 396, 397, 398, 665, 666, 667, 482,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 0, 409, 668,
	669, 0, 670, 0, 410, 411, 0, 671, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 672,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 0,
	478, 466, 0, 281, 0, 479, 480, 0, 673, 481,
	674, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 0, 492, 0,
	676, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 679, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 685, 600, 601, 0, 602, 603,
	0, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 686, 687, 688, 689, 0, 621,
	0, 613, 614, 615, 690, 616, 691, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 0, 624, 625, 626,
	628, 629, 627, 630, 0, 631, 0, 0, 632, 633,
	634, 692, 693, 694, 0, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 1572, 1571, 0,
	0, 0, 0, 1569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 833, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 291, 292, 1212, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	0, 650, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 651, 652, 653, 0, 308, 309, 654, 0,
	1494, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 1213,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 0, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 1214, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	663, 0, 664, 393, 0, 394, 395, 396, 397, 398,
	665, 666, 667, 482, 1216, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 1215, 409, 668, 669, 0, 670, 0, 410, 411,
	1217, 671, 1218, 412, 413, 414, 1219, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 672, 1220, 426, 427, 1221, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 1222, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 1223, 478, 466, 0, 0, 1224, 479,
	480, 4012, 673, 481, 674, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 1225, 492, 1226, 676, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 681, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 1227, 548,
	549, 550, 551, 552, 682, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 1228, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 686, 687,
	688, 689, 0, 621, 0, 613, 614, 615, 690, 616,
	691, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 692, 693, 694, 0, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1572, 1571, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 291, 292, 1212, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 1494, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1213, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1214, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 665, 666,
	667, 482, 1216, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 1215,
	409, 668, 669, 0, 670, 0, 410, 411, 1217, 671,
	1218, 412, 413, 414, 1219, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 1220, 426, 427, 1221, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1222, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 1223, 478, 466, 0, 0, 1224, 479, 480, 3604,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 1225,
	492, 1226, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 0, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1700, 0, 1572, 1571, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 291, 292, 1212, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 1494, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1213, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 279, 0, 0, 0, 0, 0, 1699, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1214, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 665, 666,
	667, 482, 1216, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 1215,
	409, 668, 669, 0, 670, 0, 410, 411, 1217, 671,
	1218, 412, 413, 414, 1219, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 1220, 426, 427, 1221, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1222, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 1223, 478, 466, 0, 0, 1224, 479, 480, 0,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 1225,
	492, 1226, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	1698, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 1697, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 0, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1565, 0, 1572, 1571, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 291, 292, 1212, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 1494, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 1213, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 1214, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 1567, 666,
	667, 482, 1216, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 1215,
	409, 668, 669, 0, 670, 0, 410, 411, 1217, 671,
	1218, 412, 413, 414, 1219, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 1220, 426, 427, 1221, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 1222, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 1223, 478, 466, 0, 0, 1224, 479, 480, 0,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 1225,
	492, 1226, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 1227, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 1228, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 0, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1572, 1571, 0, 0, 0, 0, 1569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	291, 292, 1212, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 0, 650, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 651, 652,
	653, 0, 308, 309, 654, 0, 1494, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 1213, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 655, 656, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 658, 659, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 1214,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 663, 0, 664, 393,
	0, 394, 395, 396, 397, 398, 665, 666, 667, 482,
	1216, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 1215, 409, 668,
	669, 0, 670, 0, 410, 411, 1217, 671, 1218, 412,
	413, 414, 1219, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 672,
	1220, 426, 427, 1221, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 1222, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 1223,
	478, 466, 0, 0, 1224, 479, 480, 0, 673, 481,
	674, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 1225, 492, 1226,
	676, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 679, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 1227, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 1228,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 685, 600, 601, 0, 602, 603,
	0, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 686, 687, 688, 689, 0, 621,
	0, 613, 614, 615, 690, 616, 691, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 0, 624, 625, 626,
	628, 629, 627, 630, 0, 631, 0, 0, 632, 633,
	634, 692, 693, 694, 0, 636, 635, 637, 695, 638,
	639, 1572, 1571, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	1212, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 1494, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 1213, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 1214, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 1216, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 1215, 409, 668, 669, 0,
	670, 0, 410, 411, 1217, 671, 1218, 412, 413, 414,
	1219, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 1220, 426,
	427, 1221, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 1222, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 1223, 478, 466,
	0, 0, 1224, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 1225, 492, 1226, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 1227, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 1228, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 1572, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 291,
	292, 1212, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 651, 652, 653,
	0, 308, 309, 654, 0, 1494, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 1213, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 0, 279, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 1214, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 663, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 1216,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 1215, 409, 668, 669,
	0, 670, 0, 410, 411, 1217, 671, 1218, 412, 413,
	414, 1219, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 672, 1220,
	426, 427, 1221, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 1222, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 1223, 478,
	466, 0, 0, 1224, 479, 480, 0, 673, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 1225, 492, 1226, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 1227, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 1228, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 690, 616, 691, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 276, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 0, 650, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 651, 652,
	653, 2924, 308, 309, 654, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 3646, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 655, 656, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 2928, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 658, 659, 372, 0, 3645,
	0, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 0, 377, 378, 379, 2927, 0, 0,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 663, 0, 664, 393,
	0, 394, 395, 396, 397, 398, 665, 666, 667, 482,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 3642, 406, 407, 408, 0, 0, 409, 668,
	669, 0, 670, 0, 410, 3644, 0, 671, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 672,
	0, 426, 427, 3641, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 479, 480, 0, 673, 481,
	674, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 0, 492, 0,
	676, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 679, 512, 680, 513, 514, 2926,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 685, 600, 601, 0, 602, 603,
	0, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 686, 687, 688, 689, 0, 621,
	0, 613, 614, 615, 690, 616, 691, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 3643, 624, 625, 626,
	628, 629, 627, 630, 0, 631, 0, 0, 632, 633,
	634, 692, 693, 694, 276, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 2924, 308, 309, 654, 0, 0, 2918, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 2920, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 2928, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 2927, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 2917, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	2926, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 2925, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 0, 636, 635, 637, 695,
	638, 639, 1777, 0, 276, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 1776, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	1775, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 281, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 1778,
	557, 564, 565, 566, 567, 568, 0, 1774, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 1772, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 0, 1773, 635, 637, 695,
	638, 639, 1498, 0, 276, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 1500, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 281, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 1262,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 0, 636, 635, 637, 695,
	638, 639, 1495, 0, 276, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 1497, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 281, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 1262,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 0, 636, 635, 637, 695,
	638, 639, 1401, 0, 276, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 1403, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 281, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 1262,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 0, 636, 635, 637, 695,
	638, 639, 728, 0, 276, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 727, 287, 288, 717, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 720, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 721, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 722, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 0, 636, 635, 637, 695,
	638, 639, 716, 0, 276, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 282, 284, 283, 285, 286, 287, 288, 717, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 720, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 721, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 722, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 276, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 282, 284, 283, 285, 286, 287, 288, 717,
	289, 290, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 720, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 721, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 665, 666,
	667, 482, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 668, 669, 0, 670, 0, 410, 411, 0, 671,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 0, 478, 466, 0, 0, 0, 479, 480, 0,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 0,
	492, 0, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 722, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 276, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 282, 284, 283, 285, 286, 287, 288,
	717, 289, 290, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 0,
	650, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 651, 652, 653, 0, 308, 309, 654, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 720, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 4023, 392, 663,
	0, 664, 393, 0, 394, 395, 396, 397, 398, 665,
	666, 667, 482, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 668, 669, 0, 670, 0, 410, 411, 0,
	671, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 672, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 479, 480,
	0, 673, 481, 674, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 675,
	0, 492, 0, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 722, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 0, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	0, 602, 603, 0, 599, 590, 0, 604, 605, 606,
	607, 608, 609, 610, 611, 0, 612, 686, 687, 688,
	689, 0, 621, 0, 613, 614, 615, 690, 616, 691,
	0, 617, 618, 619, 620, 0, 622, 623, 0, 0,
	624, 625, 626, 628, 629, 627, 630, 0, 631, 0,
	0, 632, 633, 634, 692, 693, 694, 276, 636, 635,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	0, 650, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 651, 652, 653, 0, 308, 309, 654, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 0, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	663, 0, 664, 393, 0, 394, 395, 396, 397, 398,
	665, 666, 667, 482, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 280, 406, 407, 408,
	0, 0, 409, 668, 669, 0, 670, 0, 410, 411,
	0, 671, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 672, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 0, 478, 466, 0, 281, 0, 479,
	480, 0, 673, 481, 674, 483, 484, 0, 0, 485,
	0, 0, 1262, 487, 488, 489, 0, 0, 490, 491,
	675, 0, 492, 0, 676, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 681, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 682, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 686, 687,
	688, 689, 0, 621, 0, 613, 614, 615, 690, 616,
	691, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 692, 693, 694, 276, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 665, 666, 667, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 0, 409, 668, 669, 0, 670, 0, 410,
	411, 0, 671, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 3546, 478, 466, 0, 281, 0,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 0, 492, 0, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 686,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 0,
	636, 635, 637, 695, 638, 639, 3095, 0, 276, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 3094, 666, 667, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 0, 409, 668, 669, 0, 670, 0, 410,
	411, 0, 671, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 0, 478, 466, 0, 281, 0,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 0, 492, 0, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 686,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 0,
	636, 635, 637, 695, 638, 639, 2370, 0, 276, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 665, 666, 667, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 0, 409, 668, 669, 0, 670, 0, 410,
	411, 0, 671, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 0, 478, 466, 0, 281, 0,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 0, 492, 0, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 686,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 276,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 280, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 281,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 2308,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 2315, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 2314, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 280, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 281,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 2301, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 279, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 2303, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 280, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 281,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	276, 636, 635, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 2266, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 1262, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 1618, 0,
	276, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 1617, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 1521, 0,
	276, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 665, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 1514, 0,
	276, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 1516, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 1337, 0,
	276, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 1336, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 1327, 0,
	276, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 1326, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 1324, 0,
	276, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 1323, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 1319, 0,
	276, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 1318, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 698, 0,
	276, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 665, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 0, 636, 635, 637, 695, 638, 639, 267, 0,
	276, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 279, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 665, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 280,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	281, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 276, 636, 635, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 279, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	280, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 281, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 276, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 651, 652, 653,
	0, 308, 309, 654, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	720, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 721, 392, 663, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 668, 669,
	0, 670, 0, 410, 411, 0, 671, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 672, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 479, 480, 0, 673, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 0, 492, 0, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 722, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 690, 616, 691, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 276, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 0, 650, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 651, 652,
	653, 0, 308, 309, 654, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 2410,
	339, 0, 340, 342, 655, 656, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 658, 659, 372, 0, 279,
	0, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 663, 0, 664, 393,
	0, 394, 395, 396, 397, 398, 665, 666, 667, 482,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 280, 406, 407, 408, 0, 0, 409, 668,
	669, 0, 670, 0, 410, 411, 0, 671, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 672,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 0,
	478, 466, 0, 281, 0, 479, 480, 0, 673, 481,
	674, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 0, 492, 0,
	676, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 679, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 685, 600, 601, 0, 602, 603,
	0, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 686, 687, 688, 689, 0, 621,
	0, 613, 614, 615, 690, 616, 691, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 0, 624, 625, 626,
	628, 629, 627, 630, 0, 631, 0, 0, 632, 633,
	634, 692, 693, 694, 276, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	2408, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	279, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 280, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 281, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 276, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 2406, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 279, 0, 0, 0, 0, 0, 373, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 665, 666,
	667, 482, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 280, 406, 407, 408, 0, 0,
	409, 668, 669, 0, 670, 0, 410, 411, 0, 671,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 0, 478, 466, 0, 281, 0, 479, 480, 0,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 0,
	492, 0, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 276, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 0,
	650, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 651, 652, 653, 0, 308, 309, 654, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 0, 279, 0, 0, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 663,
	0, 664, 393, 0, 394, 395, 396, 397, 398, 2321,
	666, 667, 482, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 280, 406, 407, 408, 0,
	0, 409, 668, 669, 0, 670, 0, 410, 411, 0,
	671, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 672, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 0, 478, 466, 0, 281, 0, 479, 480,
	0, 673, 481, 674, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 675,
	0, 492, 0, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 0, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	0, 602, 603, 0, 599, 590, 0, 604, 605, 606,
	607, 608, 609, 610, 611, 0, 612, 686, 687, 688,
	689, 0, 621, 0, 613, 614, 615, 690, 616, 691,
	0, 617, 618, 619, 620, 0, 622, 623, 0, 0,
	624, 625, 626, 628, 629, 627, 630, 0, 631, 0,
	0, 632, 633, 634, 692, 693, 694, 276, 636, 635,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	0, 650, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 651, 652, 653, 0, 308, 309, 654, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 0, 279, 0, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	663, 0, 664, 393, 0, 394, 395, 396, 397, 398,
	2109, 666, 667, 482, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 280, 406, 407, 408,
	0, 0, 409, 668, 669, 0, 670, 0, 410, 411,
	0, 671, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 672, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 0, 478, 466, 0, 281, 0, 479,
	480, 0, 673, 481, 674, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 0, 492, 0, 676, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 681, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 682, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 686, 687,
	688, 689, 0, 621, 0, 613, 614, 615, 690, 616,
	691, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 692, 693, 694, 276, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 279, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 2103, 666, 667, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 280, 406, 407,
	408, 0, 0, 409, 668, 669, 0, 670, 0, 410,
	411, 0, 671, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 0, 478, 466, 0, 281, 0,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 0, 492, 0, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 686,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 0,
	636, 635, 637, 695, 638, 639, 907, 0, 276, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 665, 666, 667, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 668, 669, 0, 670, 906, 410,
	411, 0, 671, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 0, 492, 0, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 905, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 686,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 276,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 3645, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 4330, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1365, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 1368, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 1366, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 788, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 787, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 786, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 1369, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	784, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1365, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 1368, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 1366, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 788, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 787, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 786, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 1369, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	784, 687, 688, 689, 0, 621, 0, 613, 1367, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 707, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 706, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 705, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 276, 3137, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	0, 650, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 651, 652, 653, 0, 308, 309, 654, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	663, 0, 664, 393, 0, 394, 395, 396, 397, 398,
	665, 666, 667, 482, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 668, 669, 0, 670, 0, 410, 411,
	0, 671, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 672, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 479,
	480, 0, 673, 481, 674, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 0, 492, 0, 676, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 681, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 682, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 686, 687,
	688, 689, 0, 621, 0, 613, 614, 615, 690, 616,
	691, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 692, 693, 694, 0, 636,
	635, 637, 695, 638, 639, 276, 4346, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 665, 666,
	667, 482, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 668, 669, 0, 670, 0, 410, 411, 0, 671,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 0, 478, 466, 0, 0, 0, 479, 480, 0,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 0,
	492, 0, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 276, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 0,
	650, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 651, 652, 653, 0, 308, 309, 654, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 663,
	0, 664, 393, 0, 394, 395, 396, 397, 398, 665,
	666, 667, 482, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 668, 669, 0, 670, 0, 410, 411, 0,
	671, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 672, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 479, 480,
	0, 673, 481, 674, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 675,
	0, 492, 0, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 4618, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 0, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	0, 602, 603, 0, 599, 590, 0, 604, 605, 606,
	607, 608, 609, 610, 611, 0, 612, 686, 687, 688,
	689, 0, 621, 0, 613, 614, 615, 690, 616, 691,
	0, 617, 618, 619, 620, 0, 622, 623, 0, 0,
	624, 625, 626, 628, 629, 627, 630, 0, 631, 0,
	0, 632, 633, 634, 692, 693, 694, 276, 636, 635,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	0, 650, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 651, 652, 653, 0, 308, 309, 654, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	663, 0, 664, 393, 0, 394, 395, 396, 397, 398,
	665, 666, 667, 482, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 668, 669, 0, 670, 0, 410, 411,
	0, 671, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 672, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 479,
	480, 0, 673, 481, 674, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 0, 492, 0, 676, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 4219, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 681, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 682, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 686, 687,
	688, 689, 0, 621, 0, 613, 614, 615, 690, 616,
	691, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 692, 693, 694, 276, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 3972, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 665, 666, 667, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 668, 669, 0, 670, 0, 410,
	411, 0, 671, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 0, 492, 0, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 686,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 276,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 2807, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 276, 3137, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	0, 650, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 651, 652, 653, 0, 308, 309, 654, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	663, 0, 664, 393, 0, 394, 395, 396, 397, 398,
	665, 666, 667, 482, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 668, 669, 0, 670, 0, 410, 411,
	0, 671, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 672, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 479,
	480, 0, 673, 481, 674, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 3134, 0, 0, 490, 491,
	675, 0, 492, 0, 676, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 681, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 682, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 686, 687,
	688, 689, 0, 621, 0, 613, 614, 615, 690, 616,
	691, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 692, 693, 694, 276, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 665, 666, 667, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 668, 669, 0, 670, 0, 410,
	411, 0, 671, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 0, 492, 0, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 2227, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	787, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 786, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 784,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 276,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 282, 284, 283, 285,
	286, 287, 288, 2380, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 2368, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1673, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1666, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 778, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 774,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 779, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 788, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 787, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 786, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 1651, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	784, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1624, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 1623, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1608, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 1606, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1601, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1578, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 1576, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1563, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1526, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1503, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1371, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 665, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 787, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 786, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	784, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1342, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 1341, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	0, 636, 635, 637, 695, 638, 639, 1333, 0, 276,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 1332, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	276, 636, 635, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 282, 284, 283,
	285, 286, 287, 288, 1286, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 665, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	0, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 276, 636, 635, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 282, 284,
	283, 285, 286, 287, 288, 793, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 0, 636, 635, 637, 695, 638, 639, 778,
	0, 276, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 774, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 773, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 779, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	788, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 787, 549, 550, 551, 552, 775, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 786, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 776, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 784, 687, 688, 689, 0, 621, 0, 613,
	780, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 0, 636, 635, 637, 695, 638, 639, 767,
	0, 276, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 768, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 0, 636, 635, 637, 695, 638, 639, 730,
	0, 276, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 0, 636, 635, 637, 695, 638, 639, 724,
	0, 276, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 0, 636, 635, 637, 695, 638, 639, 702,
	0, 276, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 665, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 276, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 651, 652, 653,
	0, 308, 309, 654, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 663, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 665, 666, 667, 482, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 668, 669,
	0, 670, 0, 410, 411, 0, 671, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 672, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 479, 480, 0, 673, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 0, 492, 0, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 690, 616, 691, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 276, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 0, 650, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 651, 652,
	653, 0, 308, 309, 654, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 655, 656, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 658, 659, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 663, 0, 664, 393,
	0, 394, 395, 396, 397, 398, 3674, 666, 667, 482,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 0, 409, 668,
	669, 0, 670, 0, 410, 411, 0, 671, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 672,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 479, 480, 0, 673, 481,
	674, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 0, 492, 0,
	676, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 679, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 561, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 685, 600, 601, 0, 602, 603,
	0, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 686, 687, 688, 689, 0, 621,
	0, 613, 614, 615, 690, 616, 691, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 0, 624, 625, 626,
	628, 629, 627, 630, 0, 631, 0, 0, 632, 633,
	634, 692, 693, 694, 276, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 787, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 786, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 575, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 784, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 276, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 3590, 666,
	667, 482, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 668, 669, 0, 670, 0, 410, 411, 0, 671,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 0, 478, 466, 0, 0, 0, 479, 480, 0,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 0,
	492, 0, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 276, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 0,
	650, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 651, 652, 653, 0, 308, 309, 654, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 663,
	0, 664, 393, 0, 394, 395, 396, 397, 398, 3562,
	666, 667, 482, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 668, 669, 0, 670, 0, 410, 411, 0,
	671, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 672, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 479, 480,
	0, 673, 481, 674, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 675,
	0, 492, 0, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 527, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 0, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	0, 602, 603, 0, 599, 590, 0, 604, 605, 606,
	607, 608, 609, 610, 611, 0, 612, 686, 687, 688,
	689, 0, 621, 0, 613, 614, 615, 690, 616, 691,
	0, 617, 618, 619, 620, 0, 622, 623, 0, 0,
	624, 625, 626, 628, 629, 627, 630, 0, 631, 0,
	0, 632, 633, 634, 692, 693, 694, 276, 636, 635,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	0, 650, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 651, 652, 653, 0, 308, 309, 654, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	663, 0, 664, 393, 0, 394, 395, 396, 397, 398,
	3559, 666, 667, 482, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 668, 669, 0, 670, 0, 410, 411,
	0, 671, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 672, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 479,
	480, 0, 673, 481, 674, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 0, 492, 0, 676, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 681, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 682, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 686, 687,
	688, 689, 0, 621, 0, 613, 614, 615, 690, 616,
	691, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 692, 693, 694, 276, 636,
	635, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 646, 647, 0, 299, 648, 300,
	649, 0, 650, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 651, 652, 653, 0, 308, 309, 654,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	0, 335, 336, 337, 338, 339, 0, 340, 342, 655,
	656, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 657, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	658, 659, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 660, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 661, 662,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 663, 0, 664, 393, 0, 394, 395, 396, 397,
	398, 3511, 666, 667, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 668, 669, 0, 670, 0, 410,
	411, 0, 671, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 672, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	479, 480, 0, 673, 481, 674, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 675, 0, 492, 0, 676, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 677, 506, 507, 508, 678, 509, 510, 511, 679,
	512, 680, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 681, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 682, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 0, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 683, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 684, 593, 594, 595, 596, 685,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 686,
	687, 688, 689, 0, 621, 0, 613, 614, 615, 690,
	616, 691, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 692, 693, 694, 276,
	636, 635, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 646, 647, 0, 299, 648,
	300, 649, 0, 650, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 651, 652, 653, 0, 308, 309,
	654, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 0, 335, 336, 337, 338, 339, 0, 340, 342,
	655, 656, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 657,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 658, 659, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 660, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 661,
	662, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 663, 0, 664, 393, 0, 394, 395, 396,
	397, 398, 3509, 666, 667, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 668, 669, 0, 670, 0,
	410, 411, 0, 671, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 672, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 673, 481, 674, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 675, 0, 492, 0, 676, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 677, 506, 507, 508, 678, 509, 510, 511,
	679, 512, 680, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 681, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 682, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 0, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 683, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 684, 593, 594, 595, 596,
	685, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	686, 687, 688, 689, 0, 621, 0, 613, 614, 615,
	690, 616, 691, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 692, 693, 694,
	276, 636, 635, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 646, 647, 0, 299,
	648, 300, 649, 0, 650, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 651, 652, 653, 0, 308,
	309, 654, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 0, 335, 336, 337, 338, 339, 0, 340,
	342, 655, 656, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	657, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 658, 659, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 660, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	661, 662, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 663, 0, 664, 393, 0, 394, 395,
	396, 397, 398, 3497, 666, 667, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 668, 669, 0, 670,
	0, 410, 411, 0, 671, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 672, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	0, 0, 479, 480, 0, 673, 481, 674, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 675, 0, 492, 0, 676, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 677, 506, 507, 508, 678, 509, 510,
	511, 679, 512, 680, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 681, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 682, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 0,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 683, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 684, 593, 594, 595,
	596, 685, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 686, 687, 688, 689, 0, 621, 0, 613, 614,
	615, 690, 616, 691, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 692, 693,
	694, 276, 636, 635, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 646, 647, 0,
	299, 648, 300, 649, 0, 650, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 651, 652, 653, 0,
	308, 309, 654, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 0, 335, 336, 337, 338, 339, 0,
	340, 342, 655, 656, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 657, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 658, 659, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 660, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 661, 662, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 663, 0, 664, 393, 0, 394,
	395, 396, 397, 398, 3494, 666, 667, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 668, 669, 0,
	670, 0, 410, 411, 0, 671, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 672, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 479, 480, 0, 673, 481, 674, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 675, 0, 492, 0, 676, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 677, 506, 507, 508, 678, 509,
	510, 511, 679, 512, 680, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 681, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 682, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	0, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 683, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 684, 593, 594,
	595, 596, 685, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 686, 687, 688, 689, 0, 621, 0, 613,
	614, 615, 690, 616, 691, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 692,
	693, 694, 276, 636, 635, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 646, 647,
	0, 299, 648, 300, 649, 0, 650, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 651, 652, 653,
	0, 308, 309, 654, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 0, 335, 336, 337, 338, 339,
	0, 340, 342, 655, 656, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 657, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 658, 659, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 660, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 661, 662, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 663, 0, 664, 393, 0,
	394, 395, 396, 397, 398, 3105, 666, 667, 482, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 668, 669,
	0, 670, 0, 410, 411, 0, 671, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 672, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 479, 480, 0, 673, 481, 674,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 675, 0, 492, 0, 676,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 677, 506, 507, 508, 678,
	509, 510, 511, 679, 512, 680, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 681,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 682,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 0, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 683, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 684, 593,
	594, 595, 596, 685, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 686, 687, 688, 689, 0, 621, 0,
	613, 614, 615, 690, 616, 691, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	692, 693, 694, 276, 636, 635, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	282, 284, 283, 285, 286, 287, 288, 0, 289, 290,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	291, 292, 0, 293, 294, 295, 296, 297, 298, 646,
	647, 0, 299, 648, 300, 649, 0, 650, 301, 302,
	303, 304, 305, 306, 0, 0, 0, 307, 651, 652,
	653, 0, 308, 309, 654, 0, 0, 0, 310, 311,
	312, 313, 314, 315, 316, 0, 0, 318, 319, 320,
	317, 321, 0, 322, 0, 323, 324, 325, 326, 327,
	328, 0, 329, 330, 331, 0, 332, 333, 334, 0,
	0, 0, 0, 0, 0, 0, 335, 336, 337, 338,
	339, 0, 340, 342, 655, 656, 0, 345, 341, 343,
	0, 346, 344, 347, 0, 348, 349, 350, 0, 0,
	351, 352, 353, 0, 354, 355, 0, 356, 357, 358,
	0, 359, 360, 657, 361, 362, 363, 365, 367, 364,
	366, 368, 369, 370, 371, 658, 659, 372, 0, 0,
	0, 0, 0, 0, 0, 373, 374, 375, 660, 0,
	0, 0, 376, 0, 377, 378, 379, 0, 0, 0,
	380, 381, 382, 661, 662, 383, 384, 385, 386, 387,
	388, 389, 390, 391, 0, 392, 663, 0, 664, 393,
	0, 394, 395, 396, 397, 398, 665, 666, 667, 482,
	0, 399, 400, 0, 401, 402, 403, 404, 405, 0,
	0, 0, 0, 406, 407, 408, 0, 0, 409, 668,
	669, 0, 670, 0, 410, 411, 0, 671, 0, 412,
	413, 414, 0, 415, 0, 0, 0, 416, 417, 418,
	419, 420, 421, 0, 422, 424, 423, 0, 425, 672,
	0, 426, 427, 0, 0, 428, 429, 430, 431, 432,
	433, 436, 0, 0, 434, 435, 437, 438, 0, 439,
	440, 442, 445, 441, 443, 444, 446, 459, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 457, 458,
	461, 0, 460, 0, 462, 463, 464, 465, 472, 474,
	475, 470, 471, 473, 476, 477, 467, 468, 469, 0,
	478, 466, 0, 0, 0, 479, 480, 0, 673, 481,
	674, 483, 484, 0, 0, 485, 0, 0, 0, 487,
	488, 489, 0, 0, 490, 491, 675, 0, 492, 0,
	676, 493, 494, 486, 495, 496, 497, 498, 499, 500,
	501, 502, 503, 0, 504, 505, 677, 506, 507, 508,
	678, 509, 510, 511, 679, 512, 680, 513, 514, 0,
	515, 516, 0, 517, 518, 519, 520, 521, 522, 523,
	681, 524, 525, 527, 526, 528, 0, 529, 0, 530,
	531, 532, 0, 0, 0, 0, 0, 533, 535, 0,
	536, 537, 538, 539, 534, 540, 541, 542, 543, 544,
	0, 545, 546, 547, 0, 548, 549, 550, 551, 552,
	682, 553, 0, 554, 555, 768, 562, 563, 556, 557,
	564, 565, 566, 567, 568, 0, 570, 571, 569, 572,
	573, 574, 0, 575, 576, 558, 559, 577, 578, 0,
	579, 580, 581, 582, 583, 584, 585, 683, 0, 586,
	0, 587, 588, 589, 591, 560, 592, 597, 598, 684,
	593, 594, 595, 596, 685, 600, 601, 0, 602, 603,
	0, 599, 590, 0, 604, 605, 606, 607, 608, 609,
	610, 611, 0, 612, 686, 687, 688, 689, 0, 621,
	0, 613, 614, 615, 690, 616, 691, 0, 617, 618,
	619, 620, 0, 622, 623, 0, 0, 624, 625, 626,
	628, 629, 627, 630, 0, 631, 0, 0, 632, 633,
	634, 692, 693, 694, 276, 636, 635, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 282, 284, 283, 285, 286, 287, 288, 0, 289,
	290, 0, 0, 0, 0, 0, 645, 0, 2339, 0,
	0, 291, 292, 0, 293, 294, 295, 296, 297, 298,
	646, 647, 0, 299, 648, 300, 649, 0, 650, 301,
	302, 303, 304, 305, 306, 0, 0, 0, 307, 651,
	652, 653, 0, 308, 309, 654, 0, 0, 0, 310,
	311, 312, 313, 314, 315, 316, 0, 0, 318, 319,
	320, 317, 321, 0, 322, 0, 323, 324, 325, 326,
	327, 328, 0, 329, 330, 331, 0, 332, 333, 334,
	0, 0, 0, 0, 0, 0, 0, 335, 336, 337,
	338, 339, 0, 340, 342, 655, 656, 0, 345, 341,
	343, 0, 346, 344, 347, 0, 348, 349, 350, 0,
	0, 351, 352, 353, 0, 354, 355, 0, 356, 357,
	358, 0, 359, 360, 657, 361, 362, 363, 365, 367,
	364, 366, 368, 369, 370, 371, 658, 659, 372, 0,
	0, 0, 0, 0, 0, 0, 373, 374, 375, 660,
	0, 0, 0, 376, 0, 377, 378, 379, 0, 0,
	0, 380, 381, 382, 661, 662, 383, 384, 385, 386,
	387, 388, 389, 390, 391, 0, 392, 663, 0, 664,
	393, 0, 394, 395, 396, 397, 398, 665, 666, 667,
	482, 0, 399, 400, 0, 401, 402, 403, 404, 405,
	0, 0, 0, 0, 406, 407, 408, 0, 0, 409,
	668, 669, 0, 670, 0, 410, 411, 0, 671, 0,
	412, 413, 414, 0, 415, 0, 0, 0, 416, 417,
	418, 419, 420, 421, 0, 422, 424, 423, 0, 425,
	672, 0, 426, 427, 0, 0, 428, 429, 430, 431,
	432, 433, 436, 0, 0, 434, 435, 437, 438, 0,
	439, 440, 442, 445, 441, 443, 444, 446, 459, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 457,
	458, 461, 0, 460, 0, 462, 463, 464, 465, 472,
	474, 475, 470, 471, 473, 476, 477, 467, 468, 469,
	0, 478, 466, 0, 0, 0, 479, 480, 0, 673,
	481, 674, 483, 484, 0, 0, 485, 0, 0, 0,
	487, 488, 489, 0, 0, 490, 491, 675, 0, 492,
	0, 676, 493, 494, 486, 495, 496, 497, 498, 499,
	500, 501, 502, 503, 0, 504, 505, 677, 506, 507,
	508, 678, 509, 510, 511, 679, 512, 680, 513, 514,
	0, 515, 516, 0, 517, 518, 519, 520, 521, 522,
	523, 681, 524, 525, 527, 526, 528, 0, 529, 0,
	530, 531, 532, 0, 0, 0, 0, 0, 533, 535,
	0, 536, 537, 538, 539, 534, 540, 541, 542, 543,
	544, 0, 545, 546, 547, 0, 548, 549, 550, 551,
	552, 682, 553, 0, 554, 555, 561, 562, 563, 556,
	557, 564, 565, 566, 567, 568, 0, 570, 571, 569,
	572, 573, 574, 0, 0, 576, 558, 559, 577, 578,
	0, 579, 580, 581, 582, 583, 584, 585, 683, 0,
	586, 0, 587, 588, 589, 591, 560, 592, 597, 598,
	684, 593, 594, 595, 596, 685, 600, 601, 0, 602,
	603, 0, 599, 590, 0, 604, 605, 606, 607, 608,
	609, 610, 611, 0, 612, 686, 687, 688, 689, 0,
	621, 0, 613, 614, 615, 690, 616, 691, 0, 617,
	618, 619, 620, 0, 622, 623, 0, 0, 624, 625,
	626, 628, 629, 627, 630, 0, 631, 0, 0, 632,
	633, 634, 692, 693, 694, 276, 636, 635, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 282, 284, 283, 285, 286, 287, 288, 0,
	289, 290, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 291, 292, 0, 293, 294, 295, 296, 297,
	298, 646, 647, 0, 299, 648, 300, 649, 0, 650,
	301, 302, 303, 304, 305, 306, 0, 0, 0, 307,
	651, 652, 653, 0, 308, 309, 654, 0, 0, 0,
	310, 311, 312, 313, 314, 315, 316, 0, 0, 318,
	319, 320, 317, 321, 0, 322, 0, 323, 324, 325,
	326, 327, 328, 0, 329, 330, 331, 0, 332, 333,
	334, 0, 0, 0, 0, 0, 0, 0, 335, 336,
	337, 338, 339, 0, 340, 342, 655, 656, 0, 345,
	341, 343, 0, 346, 344, 347, 0, 348, 349, 350,
	0, 0, 351, 352, 353, 0, 354, 355, 0, 356,
	357, 358, 0, 359, 360, 657, 361, 362, 363, 365,
	367, 364, 366, 368, 369, 370, 371, 658, 659, 372,
	0, 0, 0, 0, 0, 0, 0, 373, 374, 375,
	660, 0, 0, 0, 376, 0, 377, 378, 379, 0,
	0, 0, 380, 381, 382, 661, 662, 383, 384, 385,
	386, 387, 388, 389, 390, 391, 0, 392, 663, 0,
	664, 393, 0, 394, 395, 396, 397, 398, 1304, 666,
	667, 482, 0, 399, 400, 0, 401, 402, 403, 404,
	405, 0, 0, 0, 0, 406, 407, 408, 0, 0,
	409, 668, 669, 0, 670, 0, 410, 411, 0, 671,
	0, 412, 413, 414, 0, 415, 0, 0, 0, 416,
	417, 418, 419, 420, 421, 0, 422, 424, 423, 0,
	425, 672, 0, 426, 427, 0, 0, 428, 429, 430,
	431, 432, 433, 436, 0, 0, 434, 435, 437, 438,
	0, 439, 440, 442, 445, 441, 443, 444, 446, 459,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	457, 458, 461, 0, 460, 0, 462, 463, 464, 465,
	472, 474, 475, 470, 471, 473, 476, 477, 467, 468,
	469, 0, 478, 466, 0, 0, 0, 479, 480, 0,
	673, 481, 674, 483, 484, 0, 0, 485, 0, 0,
	0, 487, 488, 489, 0, 0, 490, 491, 675, 0,
	492, 0, 676, 493, 494, 486, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 0, 504, 505, 677, 506,
	507, 508, 678, 509, 510, 511, 679, 512, 680, 513,
	514, 0, 515, 516, 0, 517, 518, 519, 520, 521,
	522, 523, 681, 524, 525, 527, 526, 528, 0, 529,
	0, 530, 531, 532, 0, 0, 0, 0, 0, 533,
	535, 0, 536, 537, 538, 539, 534, 540, 541, 542,
	543, 544, 0, 545, 546, 547, 0, 548, 549, 550,
	551, 552, 682, 553, 0, 554, 555, 561, 562, 563,
	556, 557, 564, 565, 566, 567, 568, 0, 570, 571,
	569, 572, 573, 574, 0, 575, 576, 558, 559, 577,
	578, 0, 579, 580, 581, 582, 583, 584, 585, 683,
	0, 586, 0, 587, 588, 589, 591, 560, 592, 597,
	598, 684, 593, 594, 595, 596, 685, 600, 601, 0,
	602, 603, 0, 599, 590, 0, 604, 605, 606, 607,
	608, 609, 610, 611, 0, 612, 686, 687, 688, 689,
	0, 621, 0, 613, 614, 615, 690, 616, 691, 0,
	617, 618, 619, 620, 0, 622, 623, 0, 0, 624,
	625, 626, 628, 629, 627, 630, 0, 631, 0, 0,
	632, 633, 634, 692, 693, 694, 276, 636, 635, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 282, 284, 283, 285, 286, 287, 288,
	0, 289, 290, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 291, 292, 0, 293, 294, 295, 296,
	297, 298, 646, 647, 0, 299, 648, 300, 649, 0,
	650, 301, 302, 303, 304, 305, 306, 0, 0, 0,
	307, 651, 652, 653, 0, 308, 309, 654, 0, 0,
	0, 310, 311, 312, 313, 314, 315, 316, 0, 0,
	318, 319, 320, 317, 321, 0, 322, 0, 323, 324,
	325, 326, 327, 328, 0, 329, 330, 331, 0, 332,
	333, 334, 0, 0, 0, 0, 0, 0, 0, 335,
	336, 337, 338, 339, 0, 340, 342, 655, 656, 0,
	345, 341, 343, 0, 346, 344, 347, 0, 348, 349,
	350, 0, 0, 351, 352, 353, 0, 354, 355, 0,
	356, 357, 358, 0, 359, 360, 657, 361, 362, 363,
	365, 367, 364, 366, 368, 369, 370, 371, 658, 659,
	372, 0, 0, 0, 0, 0, 0, 0, 373, 374,
	375, 660, 0, 0, 0, 376, 0, 377, 378, 379,
	0, 0, 0, 380, 381, 382, 661, 662, 383, 384,
	385, 386, 387, 388, 389, 390, 391, 0, 392, 663,
	0, 664, 393, 0, 394, 395, 396, 397, 398, 665,
	666, 667, 482, 0, 399, 400, 0, 401, 402, 403,
	404, 405, 0, 0, 0, 0, 406, 407, 408, 0,
	0, 409, 668, 669, 0, 670, 0, 410, 411, 0,
	671, 0, 412, 413, 414, 0, 415, 0, 0, 0,
	416, 417, 418, 419, 420, 421, 0, 422, 424, 423,
	0, 425, 672, 0, 426, 427, 0, 0, 428, 429,
	430, 431, 432, 433, 436, 0, 0, 434, 435, 437,
	438, 0, 439, 440, 442, 445, 441, 443, 444, 446,
	459, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 457, 458, 461, 0, 460, 0, 462, 463, 464,
	465, 472, 474, 475, 470, 471, 473, 476, 477, 467,
	468, 469, 0, 478, 466, 0, 0, 0, 479, 480,
	0, 673, 481, 674, 483, 484, 0, 0, 485, 0,
	0, 0, 487, 488, 489, 0, 0, 490, 491, 675,
	0, 492, 0, 676, 493, 494, 486, 495, 496, 497,
	498, 499, 500, 501, 502, 503, 0, 504, 505, 677,
	506, 507, 508, 678, 509, 510, 511, 679, 512, 680,
	513, 514, 0, 515, 516, 0, 517, 518, 519, 520,
	521, 522, 523, 681, 524, 525, 1235, 526, 528, 0,
	529, 0, 530, 531, 532, 0, 0, 0, 0, 0,
	533, 535, 0, 536, 537, 538, 539, 534, 540, 541,
	542, 543, 544, 0, 545, 546, 547, 0, 548, 549,
	550, 551, 552, 682, 553, 0, 554, 555, 561, 562,
	563, 556, 557, 564, 565, 566, 567, 568, 0, 570,
	571, 569, 572, 573, 574, 0, 575, 576, 558, 559,
	577, 578, 0, 579, 580, 581, 582, 583, 584, 585,
	683, 0, 586, 0, 587, 588, 589, 591, 560, 592,
	597, 598, 684, 593, 594, 595, 596, 685, 600, 601,
	0, 602, 603, 0, 599, 590, 0, 604, 605, 606,
	607, 608, 609, 610, 611, 0, 612, 686, 687, 688,
	689, 0, 621, 0, 613, 614, 615, 690, 616, 691,
	0, 617, 618, 619, 620, 0, 622, 623, 0, 0,
	624, 625, 626, 628, 629, 627, 630, 0, 631, 0,
	0, 632, 633, 634, 692, 693, 694, 276, 636, 635,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 646, 647, 0, 299, 648, 300, 649,
	0, 650, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 651, 652, 653, 0, 308, 309, 654, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 0,
	335, 336, 337, 338, 339, 0, 340, 342, 655, 656,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 657, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 658,
	659, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 660, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 661, 662, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	663, 0, 664, 0, 0, 394, 395, 396, 397, 398,
	665, 666, 667, 482, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 668, 669, 0, 670, 0, 410, 411,
	0, 671, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 672, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 479,
	480, 0, 673, 481, 674, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	675, 0, 492, 0, 676, 493, 494, 486, 495, 496,
	0, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	677, 506, 507, 508, 678, 509, 510, 511, 679, 512,
	680, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 0, 522, 523, 681, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 682, 0, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 0, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 683, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 684, 593, 594, 595, 596, 685, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 686, 687,
	688, 689, 0, 621, 0, 613, 614, 615, 690, 616,
	691, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 692, 693, 694, 0, 636,
	635, 637, 695, 638, 639, 1614, 0, 1349, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 282, 284, 283, 285, 286, 287,
	288, 0, 289, 290, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 291, 292, 0, 293, 294, 295,
	296, 297, 298, 0, 0, 0, 299, 0, 300, 0,
	0, 0, 301, 302, 303, 304, 305, 306, 0, 0,
	0, 307, 0, 0, 0, 0, 308, 309, 0, 0,
	0, 0, 310, 311, 312, 313, 314, 315, 316, 0,
	0, 318, 319, 320, 317, 321, 0, 322, 0, 323,
	324, 325, 326, 327, 328, 0, 329, 330, 331, 0,
	332, 333, 334, 0, 0, 0, 0, 0, 0, 1351,
	335, 336, 337, 338, 339, 0, 340, 342, 0, 0,
	0, 345, 341, 343, 0, 346, 344, 347, 0, 348,
	349, 350, 0, 0, 351, 352, 353, 0, 354, 355,
	0, 356, 357, 358, 0, 359, 360, 0, 361, 362,
	363, 365, 367, 364, 366, 368, 369, 370, 371, 0,
	0, 372, 0, 0, 0, 0, 0, 0, 0, 373,
	374, 375, 0, 0, 0, 0, 376, 0, 377, 378,
	379, 0, 0, 0, 380, 381, 382, 0, 0, 383,
	384, 385, 386, 387, 388, 389, 390, 391, 0, 392,
	0, 0, 0, 393, 0, 394, 395, 396, 397, 398,
	1613, 0, 0, 482, 0, 399, 400, 0, 401, 402,
	403, 404, 405, 0, 0, 0, 0, 406, 407, 408,
	0, 0, 409, 0, 0, 0, 0, 0, 410, 411,
	0, 0, 0, 412, 413, 414, 0, 415, 0, 0,
	0, 416, 417, 418, 419, 420, 421, 0, 422, 424,
	423, 0, 425, 0, 0, 426, 427, 0, 0, 428,
	429, 430, 431, 432, 433, 436, 0, 0, 434, 435,
	437, 438, 0, 439, 440, 442, 445, 441, 443, 444,
	446, 459, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 457, 458, 461, 0, 460, 0, 462, 463,
	464, 465, 472, 474, 475, 470, 471, 473, 476, 477,
	467, 468, 469, 0, 478, 466, 0, 0, 0, 479,
	480, 0, 0, 481, 0, 483, 484, 0, 0, 485,
	0, 0, 0, 487, 488, 489, 0, 0, 490, 491,
	0, 0, 492, 0, 0, 493, 494, 486, 495, 496,
	497, 498, 499, 500, 501, 502, 503, 0, 504, 505,
	0, 506, 507, 508, 0, 509, 510, 511, 0, 512,
	0, 513, 514, 0, 515, 516, 0, 517, 518, 519,
	520, 521, 522, 523, 0, 524, 525, 527, 526, 528,
	0, 529, 0, 530, 531, 532, 0, 0, 0, 0,
	0, 533, 535, 0, 536, 537, 538, 539, 534, 540,
	541, 542, 543, 544, 0, 545, 546, 547, 0, 548,
	549, 550, 551, 552, 0, 553, 0, 554, 555, 561,
	562, 563, 556, 557, 564, 565, 566, 567, 568, 0,
	570, 571, 569, 572, 573, 574, 1352, 575, 576, 558,
	559, 577, 578, 0, 579, 580, 581, 582, 583, 584,
	585, 0, 0, 586, 0, 587, 588, 589, 591, 560,
	592, 597, 598, 0, 593, 594, 595, 596, 0, 600,
	601, 0, 602, 603, 0, 599, 590, 0, 604, 605,
	606, 607, 608, 609, 610, 611, 0, 612, 0, 0,
	0, 0, 0, 621, 0, 613, 614, 615, 0, 616,
	0, 0, 617, 618, 619, 620, 0, 622, 623, 0,
	0, 624, 625, 626, 628, 629, 627, 630, 0, 631,
	0, 0, 632, 633, 634, 0, 1529, 0, 1349, 636,
	635, 637, 0, 638, 639, 0, 0, 0, 0, 640,
	641, 0, 642, 643, 644, 282, 284, 283, 285, 286,
	287, 288, 0, 289, 290, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 291, 292, 0, 293, 294,
	295, 296, 297, 298, 0, 0, 0, 299, 0, 300,
	0, 0, 0, 301, 302, 303, 304, 305, 306, 0,
	0, 0, 307, 0, 0, 0, 0, 308, 309, 0,
	0, 0, 0, 310, 311, 312, 313, 314, 315, 316,
	0, 0, 318, 319, 320, 317, 321, 0, 322, 0,
	323, 324, 325, 326, 327, 328, 0, 329, 330, 331,
	0, 332, 333, 334, 0, 0, 0, 0, 0, 0,
	1351, 335, 336, 337, 338, 339, 0, 340, 342, 0,
	0, 0, 345, 341, 343, 0, 346, 344, 347, 0,
	348, 349, 350, 0, 0, 351, 352, 353, 0, 354,
	355, 0, 356, 357, 358, 0, 359, 360, 0, 361,
	362, 363, 365, 367, 364, 366, 368, 369, 370, 371,
	0, 0, 372, 0, 0, 0, 0, 0, 0, 0,
	373, 374, 375, 0, 0, 0, 0, 376, 0, 377,
	378, 379, 0, 0, 0, 380, 381, 382, 0, 0,
	383, 384, 385, 386, 387, 388, 389, 390, 391, 0,
	392, 0, 0, 0, 393, 0, 394, 395, 396, 397,
	398, 1528, 0, 0, 482, 0, 399, 400, 0, 401,
	402, 403, 404, 405, 0, 0, 0, 0, 406, 407,
	408, 0, 0, 409, 0, 0, 0, 0, 0, 410,
	411, 0, 0, 0, 412, 413, 414, 0, 415, 0,
	0, 0, 416, 417, 418, 419, 420, 421, 0, 422,
	424, 423, 0, 425, 0, 0, 426, 427, 0, 0,
	428, 429, 430, 431, 432, 433, 436, 0, 0, 434,
	435, 437, 438, 0, 439, 440, 442, 445, 441, 443,
	444, 446, 459, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 461, 0, 460, 0, 462,
	463, 464, 465, 472, 474, 475, 470, 471, 473, 476,
	477, 467, 468, 469, 0, 478, 466, 0, 0, 0,
	479, 480, 0, 0, 481, 0, 483, 484, 0, 0,
	485, 0, 0, 0, 487, 488, 489, 0, 0, 490,
	491, 0, 0, 492, 0, 0, 493, 494, 486, 495,
	496, 497, 498, 499, 500, 501, 502, 503, 0, 504,
	505, 0, 506, 507, 508, 0, 509, 510, 511, 0,
	512, 0, 513, 514, 0, 515, 516, 0, 517, 518,
	519, 520, 521, 522, 523, 0, 524, 525, 527, 526,
	528, 0, 529, 0, 530, 531, 532, 0, 0, 0,
	0, 0, 533, 535, 0, 536, 537, 538, 539, 534,
	540, 541, 542, 543, 544, 0, 545, 546, 547, 0,
	548, 549, 550, 551, 552, 0, 553, 0, 554, 555,
	561, 562, 563, 556, 557, 564, 565, 566, 567, 568,
	0, 570, 571, 569, 572, 573, 574, 1352, 575, 576,
	558, 559, 577, 578, 0, 579, 580, 581, 582, 583,
	584, 585, 0, 0, 586, 0, 587, 588, 589, 591,
	560, 592, 597, 598, 0, 593, 594, 595, 596, 0,
	600, 601, 0, 602, 603, 0, 599, 590, 0, 604,
	605, 606, 607, 608, 609, 610, 611, 0, 612, 0,
	0, 0, 0, 0, 621, 0, 613, 614, 615, 0,
	616, 0, 0, 617, 618, 619, 620, 0, 622, 623,
	0, 0, 624, 625, 626, 628, 629, 627, 630, 0,
	631, 0, 0, 632, 633, 634, 0, 1347, 0, 1349,
	636, 635, 637, 0, 638, 639, 0, 0, 0, 0,
	640, 641, 0, 642, 643, 644, 282, 284, 283, 285,
	286, 287, 288, 0, 289, 290, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 291, 292, 0, 293,
	294, 295, 296, 297, 298, 0, 0, 0, 299, 0,
	300, 0, 0, 0, 301, 302, 303, 304, 305, 306,
	0, 0, 0, 307, 0, 0, 0, 0, 308, 309,
	0, 0, 0, 0, 310, 311, 312, 313, 314, 315,
	316, 0, 0, 318, 319, 320, 317, 321, 0, 322,
	0, 323, 324, 325, 326, 327, 328, 0, 329, 330,
	331, 0, 332, 333, 334, 0, 0, 0, 0, 0,
	0, 1351, 335, 336, 337, 338, 339, 0, 340, 342,
	0, 0, 0, 345, 341, 343, 0, 346, 344, 347,
	0, 348, 349, 350, 0, 0, 351, 352, 353, 0,
	354, 355, 0, 356, 357, 358, 0, 359, 360, 0,
	361, 362, 363, 365, 367, 364, 366, 368, 369, 370,
	371, 0, 0, 372, 0, 0, 0, 0, 0, 0,
	0, 373, 374, 375, 0, 0, 0, 0, 376, 0,
	377, 378, 379, 0, 0, 0, 380, 381, 382, 0,
	0, 383, 384, 385, 386, 387, 388, 389, 390, 391,
	0, 392, 0, 0, 0, 393, 0, 394, 395, 396,
	397, 398, 1346, 0, 0, 482, 0, 399, 400, 0,
	401, 402, 403, 404, 405, 0, 0, 0, 0, 406,
	407, 408, 0, 0, 409, 0, 0, 0, 0, 0,
	410, 411, 0, 0, 0, 412, 413, 414, 0, 415,
	0, 0, 0, 416, 417, 418, 419, 420, 421, 0,
	422, 424, 423, 0, 425, 0, 0, 426, 427, 0,
	0, 428, 429, 430, 431, 432, 433, 436, 0, 0,
	434, 435, 437, 438, 0, 439, 440, 442, 445, 441,
	443, 444, 446, 459, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 457, 458, 461, 0, 460, 0,
	462, 463, 464, 465, 472, 474, 475, 470, 471, 473,
	476, 477, 467, 468, 469, 0, 478, 466, 0, 0,
	0, 479, 480, 0, 0, 481, 0, 483, 484, 0,
	0, 485, 0, 0, 0, 487, 488, 489, 0, 0,
	490, 491, 0, 0, 492, 0, 0, 493, 494, 486,
	495, 496, 497, 498, 499, 500, 501, 502, 503, 0,
	504, 505, 0, 506, 507, 508, 0, 509, 510, 511,
	0, 512, 0, 513, 514, 0, 515, 516, 0, 517,
	518, 519, 520, 521, 522, 523, 0, 524, 525, 527,
	526, 528, 0, 529, 0, 530, 531, 532, 0, 0,
	0, 0, 0, 533, 535, 0, 536, 537, 538, 539,
	534, 540, 541, 542, 543, 544, 0, 545, 546, 547,
	0, 548, 549, 550, 551, 552, 0, 553, 0, 554,
	555, 561, 562, 563, 556, 557, 564, 565, 566, 567,
	568, 0, 570, 571, 569, 572, 573, 574, 1352, 575,
	576, 558, 559, 577, 578, 0, 579, 580, 581, 582,
	583, 584, 585, 0, 0, 586, 0, 587, 588, 589,
	591, 560, 592, 597, 598, 0, 593, 594, 595, 596,
	0, 600, 601, 0, 602, 603, 0, 599, 590, 0,
	604, 605, 606, 607, 608, 609, 610, 611, 0, 612,
	0, 0, 0, 0, 0, 621, 0, 613, 614, 615,
	0, 616, 0, 0, 617, 618, 619, 620, 0, 622,
	623, 0, 0, 624, 625, 626, 628, 629, 627, 630,
	0, 631, 0, 0, 632, 633, 634, 0, 2123, 0,
	1349, 636, 635, 637, 0, 638, 639, 0, 0, 0,
	0, 640, 641, 0, 642, 643, 644, 282, 284, 283,
	285, 286, 287, 288, 0, 289, 290, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 291, 292, 0,
	293, 294, 295, 296, 297, 298, 0, 0, 0, 299,
	0, 300, 0, 0, 0, 301, 302, 303, 304, 305,
	306, 0, 0, 0, 307, 0, 0, 0, 0, 308,
	309, 0, 0, 0, 0, 310, 311, 312, 313, 314,
	315, 316, 0, 0, 318, 319, 320, 317, 321, 0,
	322, 0, 323, 324, 325, 326, 327, 328, 0, 329,
	330, 331, 0, 332, 333, 334, 0, 0, 0, 0,
	0, 0, 1351, 335, 336, 337, 338, 339, 0, 340,
	342, 0, 0, 0, 345, 341, 343, 0, 346, 344,
	347, 0, 348, 349, 350, 0, 0, 351, 352, 353,
	0, 354, 355, 0, 356, 357, 358, 0, 359, 360,
	0, 361, 362, 363, 365, 367, 364, 366, 368, 369,
	370, 371, 0, 0, 372, 0, 0, 0, 0, 0,
	0, 0, 373, 374, 375, 0, 0, 0, 0, 376,
	0, 377, 378, 379, 0, 0, 0, 380, 381, 382,
	0, 0, 383, 384, 385, 386, 387, 388, 389, 390,
	391, 0, 392, 0, 0, 0, 393, 0, 394, 395,
	396, 397, 398, 0, 0, 0, 482, 0, 399, 400,
	0, 401, 402, 403, 404, 405, 0, 0, 0, 0,
	406, 407, 408, 0, 0, 409, 0, 0, 0, 0,
	0, 410, 411, 0, 0, 0, 412, 413, 414, 0,
	415, 0, 0, 0, 416, 417, 418, 419, 420, 421,
	0, 422, 424, 423, 0, 425, 0, 0, 426, 427,
	0, 0, 428, 429, 430, 431, 432, 433, 436, 0,
	0, 434, 435, 437, 438, 0, 439, 440, 442, 445,
	441, 443, 444, 446, 459, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 457, 458, 461, 0, 460,
	0, 462, 463, 464, 465, 472, 474, 475, 470, 471,
	473, 476, 477, 467, 468, 469, 0, 478, 466, 0,
	0, 0, 479, 480, 0, 0, 481, 0, 483, 484,
	0, 0, 485, 0, 0, 0, 487, 488, 489, 0,
	0, 490, 491, 0, 0, 492, 0, 0, 493, 494,
	486, 495, 496, 497, 498, 499, 500, 501, 502, 503,
	0, 504, 505, 0, 506, 507, 508, 0, 509, 510,
	511, 0, 512, 0, 513, 514, 0, 515, 516, 0,
	517, 518, 519, 520, 521, 522, 523, 0, 524, 525,
	527, 526, 528, 0, 529, 0, 530, 531, 532, 0,
	0, 0, 0, 0, 533, 535, 0, 536, 537, 538,
	539, 534, 540, 541, 542, 543, 544, 0, 545, 546,
	547, 0, 548, 549, 550, 551, 552, 0, 553, 0,
	554, 555, 561, 562, 563, 556, 557, 564, 565, 566,
	567, 568, 0, 570, 571, 569, 572, 573, 574, 1352,
	575, 576, 558, 559, 577, 578, 0, 579, 580, 581,
	582, 583, 584, 585, 0, 0, 586, 0, 587, 588,
	589, 591, 560, 592, 597, 598, 0, 593, 594, 595,
	596, 0, 600, 601, 0, 602, 603, 0, 599, 590,
	0, 604, 605, 606, 607, 608, 609, 610, 611, 0,
	612, 0, 0, 0, 0, 0, 621, 0, 613, 614,
	615, 0, 616, 0, 0, 617, 618, 619, 620, 0,
	622, 623, 0, 0, 624, 625, 626, 628, 629, 627,
	630, 0, 631, 0, 0, 632, 633, 634, 0, 2090,
	0, 1349, 636, 635, 637, 0, 638, 639, 0, 0,
	0, 0, 640, 641, 0, 642, 643, 644, 282, 284,
	283, 285, 286, 287, 288, 0, 289, 290, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 291, 292,
	0, 293, 294, 295, 296, 297, 298, 0, 0, 0,
	299, 0, 300, 0, 0, 0, 301, 302, 303, 304,
	305, 306, 0, 0, 0, 307, 0, 0, 0, 0,
	308, 309, 0, 0, 0, 0, 310, 311, 312, 313,
	314, 315, 316, 0, 0, 318, 319, 320, 317, 321,
	0, 322, 0, 323, 324, 325, 326, 327, 328, 0,
	329, 330, 331, 0, 332, 333, 334, 0, 0, 0,
	0, 0, 0, 1351, 335, 336, 337, 338, 339, 0,
	340, 342, 0, 0, 0, 345, 341, 343, 0, 346,
	344, 347, 0, 348, 349, 350, 0, 0, 351, 352,
	353, 0, 354, 355, 0, 356, 357, 358, 0, 359,
	360, 0, 361, 362, 363, 365, 367, 364, 366, 368,
	369, 370, 371, 0, 0, 372, 0, 0, 0, 0,
	0, 0, 0, 373, 374, 375, 0, 0, 0, 0,
	376, 0, 377, 378, 379, 0, 0, 0, 380, 381,
	382, 0, 0, 383, 384, 385, 386, 387, 388, 389,
	390, 391, 0, 392, 0, 0, 0, 393, 0, 394,
	395, 396, 397, 398, 0, 0, 0, 482, 0, 399,
	400, 0, 401, 402, 403, 404, 405, 0, 0, 0,
	0, 406, 407, 408, 0, 0, 409, 0, 0, 0,
	0, 0, 410, 411, 0, 0, 0, 412, 413, 414,
	0, 415, 0, 0, 0, 416, 417, 418, 419, 420,
	421, 0, 422, 424, 423, 0, 425, 0, 0, 426,
	427, 0, 0, 428, 429, 430, 431, 432, 433, 436,
	0, 0, 434, 435, 437, 438, 0, 439, 440, 442,
	445, 441, 443, 444, 446, 459, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 457, 458, 461, 0,
	460, 0, 462, 463, 464, 465, 472, 474, 475, 470,
	471, 473, 476, 477, 467, 468, 469, 0, 478, 466,
	0, 0, 0, 479, 480, 0, 0, 481, 0, 483,
	484, 0, 0, 485, 0, 0, 0, 487, 488, 489,
	0, 0, 490, 491, 0, 0, 492, 0, 0, 493,
	494, 486, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 0, 504, 505, 0, 506, 507, 508, 0, 509,
	510, 511, 0, 512, 0, 513, 514, 0, 515, 516,
	0, 517, 518, 519, 520, 521, 522, 523, 0, 524,
	525, 527, 526, 528, 0, 529, 0, 530, 531, 532,
	0, 0, 0, 0, 0, 533, 535, 0, 536, 537,
	538, 539, 534, 540, 541, 542, 543, 544, 0, 545,
	546, 547, 0, 548, 549, 550, 551, 552, 0, 553,
	0, 554, 555, 561, 562, 563, 556, 557, 564, 565,
	566, 567, 568, 0, 570, 571, 569, 572, 573, 574,
	1352, 575, 576, 558, 559, 577, 578, 0, 579, 580,
	581, 582, 583, 584, 585, 0, 0, 586, 0, 587,
	588, 589, 591, 560, 592, 597, 598, 0, 593, 594,
	595, 596, 0, 600, 601, 0, 602, 603, 0, 599,
	590, 0, 604, 605, 606, 607, 608, 609, 610, 611,
	0, 612, 0, 0, 0, 0, 0, 621, 0, 613,
	614, 615, 0, 616, 0, 0, 617, 618, 619, 620,
	0, 622, 623, 0, 0, 624, 625, 626, 628, 629,
	627, 630, 0, 631, 0, 0, 632, 633, 634, 0,
	0, 0, 1349, 636, 635, 637, 0, 638, 639, 0,
	0, 0, 0, 640, 641, 0, 642, 643, 644, 282,
	284, 283, 285, 286, 287, 288, 0, 289, 290, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	292, 0, 293, 294, 295, 296, 297, 298, 0, 0,
	0, 299, 0, 300, 0, 0, 0, 301, 302, 303,
	304, 305, 306, 0, 0, 0, 307, 0, 0, 0,
	0, 308, 309, 0, 0, 0, 0, 310, 311, 312,
	313, 314, 315, 316, 0, 0, 318, 319, 320, 317,
	321, 0, 322, 0, 323, 324, 325, 326, 327, 328,
	0, 329, 330, 331, 0, 332, 333, 334, 0, 0,
	0, 0, 0, 0, 1351, 335, 336, 337, 338, 339,
	0, 340, 342, 0, 0, 0, 345, 341, 343, 0,
	346, 344, 347, 0, 348, 349, 350, 0, 0, 351,
	352, 353, 0, 354, 355, 0, 356, 357, 358, 0,
	359, 360, 0, 361, 362, 363, 365, 367, 364, 366,
	368, 369, 370, 371, 0, 0, 372, 0, 0, 0,
	0, 0, 0, 0, 373, 374, 375, 0, 0, 0,
	0, 376, 0, 377, 378, 379, 0, 0, 0, 380,
	381, 382, 0, 0, 383, 384, 385, 386, 387, 388,
	389, 390, 391, 0, 392, 0, 0, 0, 393, 0,
	394, 395, 396, 397, 398, 0, 0, 0, 482, 0,
	399, 400, 0, 401, 402, 403, 404, 405, 0, 0,
	0, 0, 406, 407, 408, 0, 0, 409, 0, 0,
	0, 0, 0, 410, 411, 0, 0, 0, 412, 413,
	414, 0, 415, 0, 0, 0, 416, 417, 418, 419,
	420, 421, 0, 422, 424, 423, 0, 425, 0, 0,
	426, 427, 0, 0, 428, 429, 430, 431, 432, 433,
	436, 0, 0, 434, 435, 437, 438, 0, 439, 440,
	442, 445, 441, 443, 444, 446, 459, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 457, 458, 461,
	0, 460, 0, 462, 463, 464, 465, 472, 474, 475,
	470, 471, 473, 476, 477, 467, 468, 469, 0, 478,
	466, 0, 0, 0, 479, 480, 0, 0, 481, 0,
	483, 484, 0, 0, 485, 0, 0, 0, 487, 488,
	489, 0, 0, 490, 491, 0, 0, 492, 0, 0,
	493, 494, 486, 495, 496, 497, 498, 499, 500, 501,
	502, 503, 0, 504, 505, 0, 506, 507, 508, 0,
	509, 510, 511, 0, 512, 0, 513, 514, 0, 515,
	516, 0, 517, 518, 519, 520, 521, 522, 523, 0,
	524, 525, 527, 526, 528, 0, 529, 0, 530, 531,
	532, 0, 0, 0, 0, 0, 533, 535, 0, 536,
	537, 538, 539, 534, 540, 541, 542, 543, 544, 0,
	545, 546, 547, 0, 548, 549, 550, 551, 552, 0,
	553, 0, 554, 555, 561, 562, 563, 556, 557, 564,
	565, 566, 567, 568, 0, 570, 571, 569, 572, 573,
	574, 1352, 575, 576, 558, 559, 577, 578, 0, 579,
	580, 581, 582, 583, 584, 585, 0, 0, 586, 0,
	587, 588, 589, 591, 560, 592, 597, 598, 0, 593,
	594, 595, 596, 0, 600, 601, 0, 602, 603, 0,
	599, 590, 0, 604, 605, 606, 607, 608, 609, 610,
	611, 0, 612, 0, 0, 0, 0, 0, 621, 0,
	613, 614, 615, 0, 616, 0, 0, 617, 618, 619,
	620, 0, 622, 623, 0, 0, 624, 625, 626, 628,
	629, 627, 630, 0, 631, 0, 0, 632, 633, 634,
	0, 0, 0, 0, 636, 635, 637, 0, 638, 639,
	0, 0, 0, 0, 640, 641, 0, 642, 643, 644,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 1826, 1827, 1876,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 1863,
	1857, 0, 0, 0, 0, 1828, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 1848, 1876, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 0, 0, 1834, 0,
	1867, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 1874, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1867, 0, 0,
	1877, 0, 0, 0, 0, 0, 0, 1856, 1858, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 1874, 0, 0, 1849, 0,
	0, 0, 1843, 1844, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 1849, 0, 0, 0, 0,
	1829, 0, 0, 0, 1875, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 1879, 0, 1828, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 1868,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 1868, 1863, 1857, 0,
	1867, 0, 0, 1877, 0, 1829, 0, 0, 0, 0,
	1856, 1858, 0, 0, 1876, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 1881, 1874, 0,
	0, 1882, 0, 0, 0, 1843, 1844, 0, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 1865, 0, 0, 0, 0, 0, 1845,
	0, 1866, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 4740, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 1875, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 0, 4644, 0,
	0, 0, 1864, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 0, 1879, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 1877, 0,
	0, 0, 1863, 1857, 0, 1856, 1858, 0, 0, 1855,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 1873, 0, 1874, 0, 0, 0, 0, 0, 0,
	1843, 1844, 1850, 0, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 1868,
	0, 0, 0, 1849, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	1867, 4601, 0, 1877, 1855, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 1850, 1874, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 1865, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1857, 0, 1849, 0,
	0, 0, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 4600, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 1850, 0, 0, 0, 0, 0, 1826, 1827,
	0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	1863, 1857, 0, 1867, 0, 0, 1877, 0, 1829, 0,
	0, 0, 0, 1856, 1858, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	1881, 1874, 0, 0, 1882, 0, 0, 0, 1843, 1844,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 1865, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 1875, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 4415, 0, 0, 0, 1864, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 1879, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 1877, 0, 0, 0, 1863, 1857, 0, 1856, 1858,
	0, 0, 1855, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 1873, 0, 1874, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 1865, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 1868, 0, 0, 0, 1849, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 1867, 4243, 0, 1877, 1855, 0, 0,
	0, 0, 0, 1856, 1858, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	1850, 1874, 0, 0, 0, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 1865, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 1849, 0, 0, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 4169,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 1850, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1868, 1863, 1857, 0, 1867, 0, 0, 1877,
	0, 1829, 0, 0, 0, 0, 1856, 1858, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 1881, 1874, 0, 0, 1882, 0, 0,
	0, 1843, 1844, 0, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 1865,
	0, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	1875, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 4168, 0, 0, 0, 1864, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 1879,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 1877, 0, 0, 0, 1863, 1857,
	0, 1856, 1858, 0, 0, 1855, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1873, 0, 1874,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 1868, 0, 0, 0, 1849,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 1867, 4167, 0, 1877,
	1855, 0, 0, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 1850, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 0, 0, 0, 0, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 1865,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 1857, 0, 1849, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 3814, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1868, 1863, 1857, 0, 1867,
	0, 0, 1877, 0, 1829, 0, 0, 0, 0, 1856,
	1858, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 1881, 1874, 0, 0,
	1882, 0, 0, 0, 1843, 1844, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 1865, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 1875, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 3305, 0, 0,
	0, 1864, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 1879, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 1877, 0, 0,
	0, 1863, 1857, 0, 1856, 1858, 0, 0, 1855, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 0,
	1873, 0, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 1850, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 1868, 0,
	0, 0, 1849, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 0, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 1867,
	3304, 0, 1877, 1855, 0, 0, 0, 0, 0, 1856,
	1858, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 1850, 1874, 0, 0,
	0, 0, 0, 0, 1843, 1844, 0, 0, 0, 0,
	0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 1865, 1868, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1863, 1857, 0, 1849, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 3303, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 1863,
	1857, 0, 1867, 0, 0, 1877, 0, 1829, 0, 0,
	0, 0, 1856, 1858, 0, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 1881,
	1874, 0, 0, 1882, 0, 0, 0, 1843, 1844, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 1865, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 1875, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	3302, 0, 0, 0, 1864, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 1879, 0, 0, 1834, 4886,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 1867, 0, 0,
	1877, 0, 1863, 1857, 0, 0, 0, 1856, 1858, 0,
	1829, 1855, 0, 0, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 1873, 0, 1874, 0, 0, 0, 0,
	0, 0, 1843, 1844, 1850, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	1865, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 1868, 0, 0, 1845, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 3367, 0, 0, 0, 0, 3366, 0,
	0, 0, 4885, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	1867, 3267, 0, 1877, 0, 0, 1855, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 1874, 1850,
	0, 0, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 1865, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1857, 0, 1849, 0,
	0, 3238, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 3239, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 2780, 1850, 0, 0, 0, 0, 0, 1826, 1827,
	0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1868,
	1863, 1857, 0, 1867, 0, 2779, 1877, 0, 1829, 0,
	0, 0, 0, 1856, 1858, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	1881, 1874, 0, 0, 1882, 0, 0, 0, 1843, 1844,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 1865, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 1875, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 1879, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 1877, 0, 1863, 1857, 0, 0, 0, 1856, 1858,
	0, 1829, 1855, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 1873, 0, 1874, 0, 0, 0,
	0, 0, 0, 1843, 1844, 1850, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 1868, 0, 0, 1845, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 1867, 0, 0, 1877, 0, 0, 1855, 0, 0,
	0, 1856, 1858, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	1850, 0, 0, 0, 0, 0, 1843, 1844, 0, 0,
	0, 0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 1865, 0, 0, 1868, 0, 0,
	0, 0, 0, 0, 0, 0, 1863, 1857, 0, 1849,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 1864, 1089, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 1863, 1857, 0, 1867, 0, 0, 1877, 0, 1829,
	0, 0, 0, 0, 1856, 1858, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 1881, 1874, 0, 0, 1882, 0, 0, 0, 1843,
	1844, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 1865, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 1875, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 1879, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 3373, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 0, 0, 0, 0, 0, 1867,
	0, 0, 1877, 0, 0, 0, 1863, 1857, 0, 1856,
	1858, 3368, 0, 1855, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 1873, 0, 1874, 0, 0,
	0, 0, 0, 0, 1843, 1844, 1850, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 0, 1865, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 1868, 0, 0, 0, 1849, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3795, 0, 0, 0,
	0, 0, 0, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 1867, 0, 0, 1877, 1855, 0,
	0, 0, 0, 0, 1856, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 1850, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 1865, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	1857, 0, 1849, 0, 0, 0, 0, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1868, 1863, 1857, 0, 1867, 0, 3306,
	1877, 0, 1829, 0, 0, 0, 0, 1856, 1858, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 1881, 1874, 0, 0, 1882, 0,
	0, 0, 1843, 1844, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	1865, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 1875, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	1879, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	3333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 1877, 0, 1863, 1857, 0,
	0, 0, 1856, 1858, 0, 1829, 1855, 0, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 1873, 0,
	1874, 0, 0, 0, 0, 0, 0, 1843, 1844, 1850,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 1868, 0, 0, 1845,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 1851, 1852, 1853, 1854,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 1867, 0, 0, 1877, 0,
	0, 1855, 0, 0, 0, 1856, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 1874, 1850, 0, 0, 0, 0, 0,
	1843, 1844, 0, 0, 0, 0, 0, 0, 1826, 1827,
	0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 1865, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	1863, 1857, 0, 1849, 0, 0, 0, 0, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 1848, 0, 0, 0, 0, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1868, 1863, 1857, 0, 1867, 0,
	0, 1877, 0, 1829, 0, 0, 0, 0, 1856, 1858,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 1881, 1874, 0, 0, 1882,
	0, 0, 0, 1843, 1844, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 1865, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2352,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 1875, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 1879, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	0, 0, 0, 1867, 0, 0, 1877, 0, 0, 1857,
	0, 0, 0, 1856, 1858, 0, 1829, 1855, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 1873,
	0, 1874, 0, 0, 0, 0, 0, 0, 1843, 1844,
	1850, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 1868, 0, 0,
	1845, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 1867, 0, 0, 1877,
	0, 0, 1855, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 1850, 0, 0, 0, 0,
	0, 1843, 1844, 0, 972, 0, 1021, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	980, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 995, 0, 978, 977,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	997, 0, 0, 0, 0, 0, 979, 0, 0, 0,
	1875, 982, 0, 0, 0, 0, 1032, 0, 0, 0,
	0, 0, 0, 0, 0, 992, 993, 0, 0, 0,
	0, 0, 0, 0, 1010, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1022, 984, 1866, 0, 0, 0, 0, 985,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 986, 0, 0, 0, 0, 0, 0, 0, 0,
	1019, 0, 0, 0, 0, 1855, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 1020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 988, 0,
	0, 0, 0, 0, 0, 1868, 976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 989, 990, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 998, 996, 0, 0, 0, 0, 0,
	0, 991, 0, 0, 0, 1007, 0, 0, 1027, 1026,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1029, 1018, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1023, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	983, 0, 0, 1031, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 981, 0, 0, 0,
	1014, 1015, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1017, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1024, 1012,
	0, 0, 0, 0, 0, 0, 0, 1030, 1008, 0,
	0, 1001, 999, 0, 1004, 0, 0, 0, 0, 0,
	1005, 0, 0, 974, 0, 1025, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 975, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1016,
	0, 1006, 0, 0, 0, 0, 0, 1003, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1028, 0, 0,
	0, 0, 0, 0, 0, 1009, 0, 0, 0, 0,
	0, 0, 0, 0, 987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1011, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1013,
}

var sqlPact = [...]int{
	365, -1000, -1000, -1000, -1000, 160, -1000, -1000, 158, 150,
	148, 147, 146, 144, 143, 142, 141, 140, 139, -1000,
	-1000, -1000, -1000, -1000, -1000, 138, -1000, -1000, 137, -1000,
	135, 134, 128, -1000, -1000, 125, -1000, 124, -1000, -1000,
	-1000, -1000, 123, 122, 120, 90656, 90096, 91207, 2389, 114577,
	97855, 2106, 80070, 114017, 79510, 113457, 2254, 9729, 112897, 2820,
	119, -1000, 112337, 116, 114, 113, -1000, 111777, -1000, 2122,
	-1000, 112, -1000, 4932, 69421, 111, 110, 109, 107, 2661,
	106, -1000, 105, 104, -1000, -1000, 103, -1000, 15219, 1793,
	-1000, 102, 101, -1000, 4996, 95624, 100, 99, 98, 2680,
	97, 95, 67759, 94, 93, 92, 2656, 2931, -1000, -1000,
	2178, -1000, -1000, 90, 89, 88, 87, 86, 85, 84,
	83, 81, 80, 79, 78, 77, -1000, 73, 72, 71,
	64, 63, -1000, 58, 57, 50, -1000, 48, -1000, 47,
	45, 44, 43, 42, 41, 39, 38, 35, 34, 33,
	32, 26, 25, 133252, -1000, -1000, 24, 2086, 1741, 1739,
	1738, 1737, 1733, 1016, 23, 15, 14, 11, 10, 9,
	8, 7, 6, 5, 4, 3, 2, 1, -11, -12,
	-13, -15, 121, -17, -18, -19, -20, -21, -26, -28,
	2771, -1000, 1746, 1207, 31764, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 122842, 115128, -29, -97, -31,
	-1000, 3434, 1030, 55937, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 243, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 471,
	2114, 756, -1000, -1000, -1000, 111226, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2388, -38, -1000, 2149, -1000, -1000,
	-1000, -1000, -1000, 752, -1000, 2387, 326, 2347, -1000, -1000,
	-1000, 3523, 2525, 3934, 3933, 3932, 3930, 3929, 122291, 1965,
	3928, 2579, 3927, 3926, 3925, 3924, 3923, 3922, 3921, -1000,
	89536, 1080, 88976, 88416, 3508, 110675, 87856, 110115, 125055, 47924,
	1162, 3518, -1000, -1000, -1000, -1000, -1000, -1000, 115128, -1000,
	1077, -1000, -1000, 3920, 2217, 751, 97295, -1000, -1000, 109555,
	1774, -1000, -1000, -1000, 954, 1228, 33483, 33483, 33483, 234,
	-1000, -1000, -1000, -1000, -1000, -1000, 3918, 3916, 3914, 3913,
	3910, -1000, -1000, 78950, 24700, 78390, 77830, 108995, 24130, 87296,
	86736, 3909, 3908, 3906, 108435, 124504, 3633, 3628, 1076, 2133,
	1518, -1000, -1000, -1000, -1000, -1000, -1000, -53, 71649, 3666,
	115128, -1000, 203, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	47351, 1078, 46778, 810, 46205, 747, 107875, -1000, -1000, -1000,
	-1000, 73931, -1000, 107315, 2522, 3903, 3902, 1203, 3901, 3388,
	1963, 3898, 1992, 1288, 3897, 3896, 3895, 3894, 3892, 3891,
	3889, 1608, 106755, 3079, 1656, 106195, 1835, 123953, 1073, 86176,
	91207, 2703, 105635, 1551, 1541, -1000, -1000, -1000, -1000, 3193,
	2903, 2901, 1354, -1000, -1000, -1000, -1000, 59328, 6430, 5020,
	-1000, -1000, 12241, 105075, 62168, 91207, 91207, -1000, -1000, -1000,
	-1000, -1000, -1000, 45632, 772, 45059, 1152, 104515, -1000, -1000,
	59896, 3016, -1000, -1000, -1000, -1000, -1000, 103955, 44486, 406,
	43913, 946, 115128, -1000, 3075, 2096, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 3097, 1646, 3711, 2827, 73361, 2186,
	1429, 3464, 3188, 3187, 1576, 2131, 3186, 3888, 2707, 3184,
	3146, 3140, 3138, 3136, 1578, 2637, 321, 2626, 31191, 3057,
	1794, 43340, 1641, 1544, 3135, 3117, 3751, 2121, 2128, 2137,
	77270, 3887, 3885, 3414, 3116, 3113, 2885, 3106, -1000, 3015,
	1593, 197, -1000, -1000, -1000, -1000, -1000, -1000, 1502, -1000,
	-1000, -1000, -1000, -1000, 81723, -1000, -1000, 1375, -1000, -1000,
	1375, -1000, -1000, -1000, -1000, -1000, 1512, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1746,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3288, -1000, 2171, -1000, -1000, 2573, 3412, 3412, 3412, 3511,
	445, 429, -1000, 121, -1000, -1000, 132617, -1000, -1000, 48497,
	48497, 48497, 48497, 48497, 48497, 48497, 48497, 2265, -1000, 749,
	-1000, -1000, 792, -1000, 738, 654, 587, -1000, -1000, -1000,
	-1000, -1000, -1000, 735, -1000, -1000, -1000, -1000, -1000, -1000,
	3666, -1000, 27620, -1000, -1000, -1000, 361, 721, 48497, -1000,
	-1000, 3759, 3757, 996, -1000, 194, 983, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3074,
	717, 715, -1000, 712, 709, 708, 707, 705, -1000, 704,
	-1000, 701, 699, 692, 689, 686, 685, 682, 674, -1000,
	2162, -1000, -1000, -1000, -1000, -1000, -1000, 624, 623, 623,
	623, -1000, 1067, -1000, -1000, -1000, 257, 622, 227, 621,
	616, 615, -1000, 672, 671, 670, 669, 667, 664, 663,
	662, 660, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1066,
	-1000, -1000, -1000, -1000, -54, 115128, -1000, 471, -54, -1000,
	-1000, 657, -1000, 35804, 35804, 35804, -1000, -1000, 2386, 48497,
	-1000, 2849, -1000, -48, -48, 926, 57620, -1000, 54795, 926,
	556, 815, 63287, -1000, 3008, -1000, -1000, 655, 193, -1000,
	-1000, -1000, -1000, 25268, 3003, 115128, 115128, 115128, 91207, 91207,
	91207, 115128, 3882, 3299, 48497, -1000, -1000, 68861, 126708, 91758,
	-1000, -1000, 3608, 69979, 68310, 126708, 3066, 126157, 3881, -1000,
	-1000, -1000, -1000, -1000, 3270, 3878, 3874, 3873, -1000, 115128,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 236, 3269, -1000,
	-1000, 95064, 236, 3268, -1000, 236, 3267, -1000, 94513, -1000,
	-1000, 2374, 3266, -1000, -1000, 242, 3265, -1000, -1000, -1000,
	238, 3264, -1000, -1000, 183, -90, 3261, -1000, -1000, -1000,
	-1000, -1000, -1000, 132617, -1000, -1000, -1000, 125606, -1000, 3425,
	-1000, 115128, -1000, 48497, -1000, -1000, 3607, 1663, 3445, 3559,
	-1000, -1000, -61, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2561, 2569, 1177, 2403, -1000, 3313, 1916, 33483, 3372, -1000,
	-1000, -1000, -1000, -1000, 182, 25268, -1000, -1000, -1000, -1000,
	-1000, -1000, 2431, 3260, 1655, -1000, 2401, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2021, 3259, -1000, 2049,
	3258, 2012, -1000, -1000, 2229, -1000, 3410, 1465, 1919, -1000,
	-1000, -1000, -1000, -1000, -1000, 2045, 3257, -47, -1000, -1000,
	2583, -1000, -1000, -1000, -1000, 2080, -1000, 1328, 3255, -1000,
	2825, 2825, 85616, 3207, 61600, 59896, 71649, -57, -1000, -1000,
	-1000, -176, -1000, 23556, 132617, -1000, -1000, -1000, -1000, 1877,
	132617, 898, -1000, -1000, 3253, -1000, 132617, 890, -1000, -1000,
	3252, -1000, 2635, -1000, 3062, -1000, -1000, 2481, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2479, -1000, -1000, 3868,
	-1000, -1000, 3866, -1000, 3865, 3863, 3861, -1000, 1913, 2126,
	3860, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 85065,
	2385, -1000, -1000, 83945, 3061, -1000, 2478, 3557, -1000, 84505,
	1072, -1000, 1024, 2476, -1000, 93962, 1005, 2475, -1000, 3859,
	3507, 2761, 1024, 2473, -1000, -1000, -1000, -1000, -1000, 1028,
	-1000, 65523, -1000, 65523, -1000, 1719, -1000, 121740, -48, 91207,
	3666, -1000, -92, -1000, -1000, -1000, 1030, -1000, 58755, -1000,
	58755, 96735, 74499, 1004, 2998, 67198, 132364, -1000, 1048, -1000,
	-1000, 132617, -1000, -1000, -1000, 2629, -1000, -180, 2821, -1000,
	74499, 61032, 2623, -1000, 132617, -1000, -1000, -1000, -1000, 132617,
	-1000, -1000, -1000, 74499, 83945, -1000, 103395, 83394, -1000, -1000,
	1592, 2602, -1000, -1000, -1000, 74499, 1334, 74499, 74499, 74499,
	-1000, 102835, -1000, -1000, 2198, 1492, 3419, 2180, 91207, -1000,
	2007, -1000, -1000, -1000, 3449, 3206, 115128, -1000, -1000, 3058,
	-1000, 71098, 93411, -1000, 92860, -1000, 92309, -1000, 91207, -1000,
	91207, -1000, 3853, 3850, 3849, -1000, -1000, 3847, -1000, 3844,
	3440, -1000, 678, 42767, 132617, 3438, -1000, 3840, 2111, 3057,
	132617, -1000, 3204, 1750, 1747, 115128, -1000, -1000, 115128, -1000,
	115128, -1000, -1000, -1000, 1670, -1000, -1000, 2559, -1000, -1000,
	-1000, -1000, 91207, 91207, 91207, 91207, 1530, -1000, 42194, -1000,
	-1000, 3107, 3837, 1882, -1000, 1957, -1000, 2996, 3442, -1000,
	1591, 1847, 181, 3766, -1000, -1000, 244, -1000, -1000, -61,
	-1000, 121189, -1000, 2573, -1000, 115128, -1000, 2598, 3035, 3056,
	1484, 2395, 2662, -1000, 41621, 2658, 51935, 2400, 121, -1000,
	-1000, 121, 121, 32910, -1000, -1000, 69979, 69979, 25268, 1529,
	48497, 48497, 48497, 48497, 48497, 48497, 48497, 48497, 48497, 48497,
	48497, 48497, 48497, 48497, 48497, 48497, 48497, 48497, 48497, 48497,
	48497, 48497, 48497, 48497, 48497, 48497, 48497, 48497, 48497, 48497,
	48497, 48497, 48497, 48497, 48497, 48497, 2260, 48497, 1509, 48497,
	48497, 48497, 48497, 2193, -1000, -1000, 2098, 493, 2151, 654,
	-1000, -1000, -1000, 3669, 3669, 3669, 331, 331, 331, 132995,
	132995, 526, 3836, 792, -1000, 48497, -1000, 70, 58178, 48497,
	25838, -1000, 429, 10142, 2640, -1000, 422, 26440, -1000, -1000,
	-1000, 27620, 587, 41019, 48497, 1049, 132617, -1000, -1000, 1494,
	3691, 22982, 3087, 2873, 653, 796, 791, 30589, 29987, 29385,
	28783, 780, 651, 48497, 48497, 48497, 48497, 48497, 48497, 48497,
	48497, -1000, -1000, 3714, -1000, 3691, -1000, -1000, -1000, -1000,
	3691, 1526, 1521, 3691, -1000, 3691, 3691, 7761, 7761, 40446,
	39873, 39300, 52508, 38727, 48497, 28210, 38154, 37581, -1000, 115128,
	-54, 3604, 48497, 262, -1000, 130907, -1000, 262, 262, 647,
	-102, 132617, 2607, 2607, 56498, 2469, 2282, 2282, 2282, -1000,
	926, 17782, 926, 101175, 2288, 926, 926, 178, 249, 420,
	54227, 2849, 101175, 776, 632, -32, -33, -35, -1000, -1000,
	-41, -42, -1000, -1000, 91207, 628, 25838, 25268, 177, 2140,
	-104, 2681, 2674, -1000, 2672, 2671, -1000, 2655, 2384, -1000,
	-1000, 1895, -105, 1508, 91207, 115128, 1548, 3834, -69, -1000,
	851, -113, -1000, 1119, 176, 3691, -1000, -1000, -1000, -1000,
	-1000, 3833, 3832, -1000, 1058, 626, 625, 367, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 624, 623, 623, 623,
	-1000, 257, 622, 227, 621, 616, 615, -1000, -1000, -1000,
	-1000, -1000, 2992, 91207, 115128, 1542, 3830, -90, 91758, -115,
	-1000, -1000, 115128, -1000, -1000, -1000, 3825, -1000, 91207, -1000,
	-1000, 91207, 236, 3251, -1000, 91207, -1000, 91207, 232, 3250,
	-1000, -1000, 115128, -1000, 91207, 91207, -1000, 115128, 115128, 115128,
	126708, 126708, 230, -1000, 91207, 894, -114, 1225, -61, -1000,
	-1000, -1000, -1000, 1375, -1000, 2176, -1000, -1000, -1000, -1000,
	-1000, -1000, 1617, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 996, -1000, -1000, -1000, -1000, -1000, -1000, 3687, 3679,
	-55, -1000, -1000, 25268, -1000, -62, 1710, 1972, 1504, -1000,
	76710, 2470, 3427, 3824, 2722, 3398, 1714, -1000, 1667, -1000,
	3521, 81723, 3575, 3582, 1447, -1000, 2991, -1000, -1000, -1000,
	953, 1859, 1832, 1503, 1501, 81723, 2049, -1000, 69979, -1000,
	2749, 3510, 1397, 1420, 1397, 1397, 1386, -1000, 81723, 1826,
	1500, 1495, 1486, -1000, -1000, 2038, 2034, -1000, -1000, 102284,
	-1000, 1474, 1472, 3621, 3288, 2298, 838, 2029, -1000, 1468,
	2990, 2988, -1000, 1446, -64, 3574, 3581, 1366, -1000, 2982,
	1462, -1000, -1000, -1000, 3499, 91207, 25268, 1598, 1596, 1580,
	1822, 1458, -56, -1000, 3566, 1457, 1453, -1000, 1086, 5336,
	3338, -1000, 126708, 1086, 1086, 2010, 3249, 2787, 1786, -1000,
	2817, 857, 2799, -1000, -1000, -1000, 857, -57, 71649, 115128,
	175, -1000, 70, 48497, 48497, 70, 48497, 70, -1000, 3547,
	3245, 3241, -1000, -1000, -1000, -1000, -1000, 3823, 2064, 2576,
	-1000, -1000, 612, 2472, 2981, 115128, 2690, -58, 91207, -1000,
	70547, 3240, 126708, 2049, 2471, -1000, -1000, 82834, -1000, 3239,
	471, 2468, -1000, 613, 3821, 3238, -1000, 120638, -1000, 3425,
	1275, 3232, 1129, 845, 3603, -1000, 845, 66082, -1000, 115128,
	-1000, -48, 477, 75608, -119, -120, 416, -1000, 101733, 115128,
	115128, 3357, 2105, 2089, -1000, 1022, 59896, -1000, 59896, -122,
	-1000, -180, 2795, 1652, -1000, 1004, 1004, 857, -1000, 857,
	-1000, 91207, 3055, -1000, -1000, 74499, 1004, 1004, 1004, -1000,
	-1000, -1000, -1000, 3819, 3818, 3817, 3816, -1000, -1000, 1023,
	91207, 115128, 91207, -1000, -1000, 1776, -1000, 173, -1000, 126708,
	-1000, 126708, 115128, 91207, -1000, 1023, 115128, 1023, 115128, 1023,
	115128, 1023, 1023, -1000, -1000, -1000, -1000, -1000, 70, -1000,
	-1000, 132617, -1000, 48497, -1000, -1000, 1666, 3814, 1767, -1000,
	3037, -1000, 3036, -1000, 0, -1000, -1000, 1967, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3812, 132617, -1000,
	2085, -1000, -1000, -1000, -1000, 91207, 91207, 91207, 91207, 115128,
	3333, -1000, 115128, 3330, 91207, -1000, 3761, -1000, -1000, 81723,
	-1000, 2598, 3035, -1000, -1000, -1000, -1000, -1000, -1000, 1565,
	2356, -1000, 2610, -1000, 1700, -1000, -1000, -1000, 132617, 53081,
	-1000, -1000, 132617, 1867, -1000, 51362, 50789, -1000, -1000, 1821,
	91207, 2699, -1000, 2699, -163, -1000, 130722, 2605, 91207, -1000,
	-1000, -1000, -1000, -1000, 951, 555, 555, 1208, 1208, 1208,
	1208, 3520, 6369, 2634, 7134, 11034, 11034, 6258, 6258, 6258,
	6258, 6258, 11034, 6861, 331, 331, 6861, 6861, 6861, 6861,
	6861, 331, 331, 331, 11034, 11034, 11034, 331, 132995, 132802,
	14588, 48497, 48497, 1436, 2084, 493, 13750, 48497, 645, 645,
	645, 645, -1000, 2164, -1000, -1000, -1000, -1000, 2980, 610,
	52508, 52508, -1000, -1000, -1000, -1000, 27030, 48497, -1000, -1000,
	-1000, -1000, 36979, -1000, -1000, 130091, -318, 415, -1000, 172,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 414, -107, 49, -1000, 48497, 48497, 48497,
	408, -1000, 169, 48497, 115128, -1000, 16338, 774, -121, -1000,
	-128, 1449, -1000, 48497, -1000, -1000, 1414, -1000, 1399, 1398,
	1392, -1000, 609, 403, -1000, 167, -1000, 2277, 607, 606,
	48497, -1000, -1000, -1000, -1000, -1000, 129838, -1000, -1000, 129643,
	-1000, -1000, 129458, -1000, -1000, 129205, -1000, -1000, -1000, -1000,
	-1000, 132171, 15384, 14135, 13405, 8819, 12803, 11827, -130, 396,
	-131, 395, 948, 944, 393, 391, 388, -133, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-136, 387, -1000, 2979, -107, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 382, -1000, 376, -1000, 131986, -107, 375,
	8113, -1000, 52508, 52508, 52508, 52508, -1000, 372, -1000, 130469,
	-1000, 131733, 36406, 36406, 36406, 363, 131538, 48497, -107, -142,
	-1000, -143, -1000, -1000, 480, -144, 1032, 35804, 55376, 25268,
	-1000, 1032, 1032, 48497, -1000, 48497, 2619, -1000, -1000, -1000,
	-1000, 2618, 1923, 2607, 56498, -1000, -1000, -1000, -1000, 101175,
	-1000, 3666, 3530, -1000, 101175, -1000, -1000, 115128, 471, -1000,
	101175, 101175, 25268, 926, -1000, 926, 101175, 596, -1000, -1000,
	-1000, -1000, -1000, 359, 63848, 49, 166, 25268, 1024, -1000,
	-1000, 2772, 2772, 2772, 2772, 2772, 91207, -1000, -1000, 126708,
	1367, -59, -129, 2792, -1000, 3641, -1000, 2182, -1000, 69979,
	-1000, 790, 1046, 25268, -1000, -1000, -1000, 605, -1000, 3691,
	3691, -1000, 3691, 126708, 2978, 220, 2789, -1000, 204, 126708,
	3811, -1000, -1000, 236, -1000, 91207, 236, 236, -1000, 91207,
	91207, 2374, -1000, 242, -1000, 238, -1000, -1000, -90, -1000,
	1044, 33483, -1000, 1375, -1000, -1000, 1642, -1000, 2088, -1000,
	1379, -1000, -1000, -1000, -1000, 33483, -1000, 2526, 115128, 115128,
	91207, -1000, 115128, -1000, 2246, 126708, -1000, 2467, 120087, 2433,
	119536, 69979, -1000, -1000, 604, 962, 2604, 2603, 1127, 115128,
	115128, 2600, 118985, 118434, -1000, 3808, 115128, 2187, 48497, 3496,
	2326, 2221, 70, 70, -1000, 70, 70, 70, 601, 1385,
	91207, 91207, 115128, 126708, 91207, 1982, -1000, -1000, -1000, -1000,
	-1000, 82274, -1000, -1000, 3712, 3710, -1000, 1397, -1000, -1000,
	-1000, 1397, 2049, 1918, 115128, 126708, 91207, 126708, 117883, 117332,
	-1000, -1000, 1817, 115128, -1000, -1000, -1000, -1000, 1471, -1000,
	838, 3666, 3666, 3666, 1307, 2977, 2975, 2184, 70, 70,
	-1000, 70, 70, 70, 598, 25268, 2095, -1000, 3049, 115128,
	3756, 116781, 3752, 115128, 115128, 115128, 126708, 3409, 115128, 115128,
	126708, -1000, 116230, 5336, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 72791, 1102, 115128, 1328, -1000,
	-1000, 1816, 1302, 1300, 81723, 2240, 1815, 1943, 126708, 59896,
	1021, 59896, 2769, -1000, -1000, 22408, -1000, 132617, 132617, -1000,
	132617, -1000, 70547, 74499, 115128, -1000, 1070, 115128, 76159, 978,
	3230, 64964, -176, 1004, 74499, 91207, -58, 2690, 115128, -1000,
	-1000, 2049, 3229, 471, 2464, -1000, 126708, 3600, 3226, 595,
	3807, 3806, -1000, 91207, 2381, 2463, -1000, -1000, 115679, 3289,
	838, 115128, 1032, 56498, 2056, -1000, 62729, 1087, 115128, 1959,
	157, -1000, -1000, -1000, -23, 115128, -1000, 814, -1000, -1000,
	477, 477, 1004, -183, 591, -1000, 909, 904, 60464, -145,
	-1000, 164, 590, 903, 902, -1000, 3877, -1000, -180, -1000,
	74499, 1022, 59896, 2973, 2972, -1000, -1000, 1042, -1000, 1586,
	1004, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -49, 1940, 115128, -90, -90, -71, -59, -1000,
	1023, -1000, 1023, -1000, 1023, -1000, -1000, -1000, 132617, -1000,
	-1000, -1000, 1752, 1740, 115128, -1000, -1000, 115128, -1000, 25268,
	115128, 91207, 25268, 91207, 3034, 3032, -1000, -1000, -1000, 115128,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1172, -1000,
	1867, 2354, -1000, 587, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2539, -1000, -60, 32910, 928, -1000, -1000,
	91207, -50, 48497, 48497, 10429, 7860, 48497, 52508, 52508, -1000,
	48497, 7733, -1000, -1000, -1000, -1000, -1000, 2969, 586, 48497,
	69979, 6463, 6079, -1000, 355, 11546, 6861, -1000, 48497, -1000,
	5660, -1000, 350, 35231, -1000, 131100, 17, -152, -1000, 18369,
	-107, -153, -1000, -1000, 784, -1000, 3283, -1000, 48497, 131353,
	2495, 2060, 1961, 1756, 3691, 3750, 21834, -1000, 66640, 1051,
	2308, 129010, -1000, -1000, -1000, -1000, 69979, 69979, 48497, 48497,
	-1000, 48497, 48497, 48497, -1000, -1000, -1000, 3691, 935, -1000,
	-1000, -1000, 935, -1000, -1000, 1397, -1000, 1397, -1000, 48497,
	-1000, -1000, 2963, 48497, -1000, 69979, 69979, 52508, 52508, 52508,
	52508, 52508, 52508, 52508, 52508, 52508, 52508, 52508, 52508, 52508,
	52508, 52508, 52508, 52508, 52508, 52508, 52508, 2611, 52508, 3665,
	3665, 3665, 548, -1000, 3029, 2963, 48497, 48497, 69979, 349,
	343, 342, -1000, 48497, -107, -1000, -1000, 5064, 585, -1000,
	2530, -1000, 2863, -1000, 48497, -1000, -174, -1000, 2849, -1000,
	-1000, 2863, 2863, -154, 132617, 56498, 56498, -1000, 582, 48497,
	2616, -1000, -1000, 769, -316, -1000, 901, -1000, -1000, -1000,
	-1000, -1000, -1000, 900, -1000, 471, -1000, -1000, -1000, 163,
	101175, 101175, 768, -1000, -160, -1000, -1000, -162, -1000, 3599,
	341, 25268, -1000, 1032, 2876, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2653, -90, 126708, 126708, 1814, 2345, 3744, -1000,
	3701, 782, 767, 131, 3691, 340, 336, 333, -90, 126708,
	126708, 1808, 126708, -1000, -1000, -1000, 236, -1000, -1000, -1000,
	232, -1000, -1000, -1000, -1000, 2696, -1000, -61, -1000, -1000,
	-1000, 48497, -1000, -1000, 3421, 1294, 1292, -1000, -1000, -1000,
	2941, -1000, 3224, -1000, 2459, -1000, 1095, 2456, 1962, -1000,
	48497, 580, 2754, 570, 562, 3803, 2157, 3802, 1128, 3217,
	2374, 3178, 2374, -1000, -1000, -1000, 958, -1000, 132617, 2326,
	-1000, 560, 559, -1000, -62, 1691, 1970, 1291, 1033, -1000,
	-1000, -1000, -1000, 48497, 48497, 100624, -1000, 453, 3410, -51,
	-1000, -1000, -1000, 1800, 1290, 1278, -1000, -1000, -1000, -1000,
	2049, 1797, 1274, 1270, -1000, -1000, -1000, -1000, -1000, 2455,
	-1000, -1000, 3177, 1031, -1000, 3104, 3103, 942, 115128, 3031,
	1268, 1266, 3666, 3666, 3666, -1000, 1027, -1000, -1000, -1000,
	-1000, 48497, -1000, -64, 1263, 3565, 2452, 91207, -1000, 2374,
	3174, 1255, -1000, 1252, -1000, -1000, -1000, 3561, 3556, 1264,
	-1000, -1000, -1000, -1000, -1000, 72223, -1000, -1000, 1086, 115128,
	126708, 91207, 1915, -1000, -1000, 80621, 81172, 115128, 2787, -90,
	857, -1000, 2558, 857, 1021, 2961, -1000, 2667, -1000, 1026,
	91207, 3800, 318, -165, -65, 69979, -1000, -1000, -1000, -1000,
	2433, 91207, 115128, 1315, 2741, 115128, 115128, 3597, -1000, 2392,
	594, 91207, 932, -1000, 3666, -1000, -1000, -1000, 1025, -1000,
	3554, 91207, 3596, 3172, 1024, 70, 91207, 3720, -1000, -1000,
	3595, 91207, 3169, 2380, 2450, 2564, 838, 75057, 1024, 2295,
	-75, -1000, 1959, 34629, 3405, -167, -1000, -1000, -1000, 1032,
	66082, 56498, 48497, 3799, -177, -1000, -1000, -1000, -1000, -1000,
	98413, 98413, 74499, 74499, 74499, 1004, 115128, 115128, 3798, 74499,
	74499, 74499, -66, 557, -1000, 899, 897, 893, -1000, -1000,
	-1000, -1000, -1000, -1000, 887, 886, 1022, -1000, -1000, -180,
	59896, 70, -1000, 2335, 91207, -1000, 21260, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1023, -176, -1000, -1000, 2200, 2399,
	2200, 1933, 1930, -1000, -1000, 2351, -1000, -1000, -1000, -1000,
	2664, 3402, 25268, 3555, 645, 48497, 48497, 7611, 5795, 971,
	645, 48497, 48497, 69979, 6847, -178, 48497, 48497, -1000, 48497,
	766, 132617, -1000, 3739, 48497, 317, 313, -1000, -1000, -1000,
	3677, -1000, -1000, -1000, 132617, 48497, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 309, -1000, 18, -1000, -1000, -1000, 123393,
	-1000, 48497, 306, 3493, -1000, 304, 298, 11100, 583, 128825,
	128572, 128377, 297, -1000, -1000, 294, 291, 132617, 3029, 132617,
	-1000, -1000, 879, 879, 1389, 1389, 1389, 1389, 3665, 1008,
	1065, 980, 444, 444, 444, 848, 548, 548, 444, 444,
	444, 548, 2939, 2628, 546, 8176, -1000, -1000, 132617, 132617,
	290, -1000, -1000, -1000, -107, 286, 5064, -1000, 2859, 3484,
	132617, -1000, 56498, 2859, 2859, -1000, -1000, 1923, 115128, 132617,
	56498, -1000, 3530, -1000, 19533, 18954, -1000, 25268, -1000, -1000,
	-1000, -1000, 3666, -1000, 63848, -1000, 535, -1000, -22, -1000,
	2876, -1000, 884, -1000, -1000, 74499, 74499, 2772, -90, -173,
	115128, -1000, -1000, 765, 3797, 779, 25268, 279, -1000, -1000,
	-1000, -90, -90, 115128, -90, -1000, -1000, -1000, 3355, 132617,
	115128, 115128, 1644, 100073, 115128, 3168, -1000, 3167, -1000, 1127,
	3512, 128192, 57059, -1000, 57059, 115128, -1000, -1000, -1000, -1000,
	2227, 1611, 3796, 1192, -1000, 3451, 115128, -1000, 115128, -1000,
	-1000, -1000, 115128, 115128, 91207, 115128, -1000, 126708, 3119, -184,
	132617, -68, -1000, 883, -1000, 1377, -1000, 20686, 115128, 126708,
	91207, 115128, 126708, 91207, 3166, 115128, 2244, -1000, -1000, 3102,
	-1000, 70, 3666, 3666, -1000, 1248, 1246, 3114, -185, 25268,
	-1000, 3737, 3733, 3157, 3460, -1000, 115128, 3729, 115128, 91207,
	3347, -1000, -1000, -1000, -1000, -1000, -1000, 1782, 1245, 1241,
	2375, -70, 2371, 2340, -71, 2240, 1021, -72, 531, -1000,
	876, -1000, -1000, 875, 872, 1021, -1000, 74499, 59896, 3795,
	471, -1000, 2717, -1000, 96175, 76159, 2362, -1000, -1000, 528,
	115128, 115128, 525, -1000, 70, -1000, 3793, 98971, 524, -1000,
	2329, -1000, 763, -1000, 2562, 126708, 2049, 70, 91207, -1000,
	-1000, 471, 277, -73, -1000, 3279, 1103, 25268, 91207, 3149,
	2571, 838, 75057, -1000, 1275, 2662, -1000, -74, -1000, 534,
	70, 2295, -1000, -75, 132617, -1000, 871, -1000, -186, -1000,
	-1000, 272, -1000, 3346, -1000, -1000, -187, -1000, -1000, 3732,
	3732, 74499, 59896, 74499, 74499, 74499, -1000, 1022, 857, -1000,
	2518, -1000, -1000, -1000, -1000, -1000, 25268, 1574, -1000, 521,
	518, -1000, -1000, -1000, -1000, 3402, 645, 645, 48497, 48497,
	48497, 645, 6847, -196, -1000, 645, 645, -107, -1000, -1000,
	131100, -1000, -1000, -1000, 132617, -1000, 20112, 2203, -1000, 127939,
	-1000, 32910, -1000, -1000, 48497, 48497, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 52508, 2937, 517, 69979, -1000, -1000,
	265, 1017, 48497, 50216, 2849, 1017, 1017, -1000, -204, -1000,
	-1000, -1000, 3666, -1000, 3666, -22, -1000, -1000, 3792, 25268,
	-1000, 74499, -1000, -1000, -1000, 3791, -194, 126, -1000, 3790,
	-1000, -1000, 130, -1000, -1000, -1000, 2781, 3592, -1000, 2017,
	-1000, 115128, 115128, -1000, 115128, -1000, 25268, 115128, 2886, 1335,
	-1000, 962, 2589, 516, 52508, 1160, 91207, 868, 2847, 2837,
	-1000, 3617, 3481, 2807, -215, -1000, 115128, 48497, 115128, -217,
	-218, 2421, -1000, -1000, 1144, 1332, 48497, 1137, -1000, -1000,
	-1000, 69979, 514, 2374, 2374, -223, -224, -1000, -1000, -1000,
	48497, 1238, 115128, 34056, -1000, 3789, 3410, -1000, -1000, -1000,
	-1000, -1000, -1000, 115128, -1000, 115128, -1000, -1000, 3028, 3027,
	3666, 3666, 48497, 1235, -1000, -1000, -1000, 3728, 2374, 25268,
	2374, -1000, 2374, 3460, 1188, 115128, 126708, 91207, 1783, 1783,
	3026, -1000, -1000, -1000, 2487, 2487, 74499, 59896, 59896, -1000,
	-79, 1021, -1000, 3591, 2201, 3787, -1000, -1000, -1000, -1000,
	2588, -1000, -1000, -1000, 115128, 2585, 2854, 57059, 510, 498,
	115128, 1014, -1000, -225, -1000, 852, 850, 76159, 978, 976,
	-1000, -81, 497, -1000, 849, -1000, -1000, -1000, -1000, 471,
	3590, -1000, 3722, 496, 495, 115128, 2370, 494, 25268, 3400,
	838, 75057, -1000, 3289, 1959, -1000, 2426, 115128, 3396, -1000,
	2662, 493, -1000, 1004, 492, 1004, -1000, -226, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -82, -1000, 856, 847, -1000,
	-1000, 91207, 91207, 48497, 48497, -1000, 645, 645, 645, -1000,
	264, -1000, -1000, 2295, 3480, -1000, -85, 127744, 127559, 1098,
	52508, 69979, -232, -1000, -1000, 115128, 132617, -87, -1000, 132617,
	491, 490, 399, -1000, -1000, -1000, 761, 759, -1000, -1000,
	-1000, 126708, 3786, -1000, 126708, 99522, 115128, -1000, -1000, 1962,
	1753, -1000, -1000, -1000, 115128, 2441, -1000, -1000, -1000, 1121,
	48497, 8176, 52508, 489, 48497, -1000, 488, 486, 3588, 3320,
	-1000, 2713, 2935, 2018, 57059, -1000, 3402, -1000, 127306, -1000,
	1100, 2046, -1000, -1000, -1000, -1000, 132617, 52508, 3460, 57059,
	-1000, -1000, 485, 484, 132617, 482, 840, 2928, -1000, -1000,
	-1000, -1000, -1000, 70, 70, -1000, -1000, 132617, 481, 3565,
	-1000, -1000, -1000, -1000, 2374, 91207, -1000, -1000, -1000, 1232,
	-1000, -1000, -1000, -1000, 3784, 3782, 2924, 80621, -1000, -233,
	-1000, -1000, -1000, 2054, 70, 978, -1000, -1000, 2362, 478,
	-1000, -1000, 2802, 2802, -238, 57059, 57059, -239, 2363, 2684,
	-1000, 98971, 33483, 33483, 263, 3587, 976, -1000, 3611, -1000,
	3331, 3331, 48497, 3583, 70, -1000, 3720, 57059, -1000, 91207,
	57059, 2365, 2139, 2554, 75057, -1000, 2564, -1000, -1000, -240,
	115128, 1959, -1000, -1000, 74499, -1000, -1000, 2518, -1000, 115128,
	-1000, 115128, -1000, -1000, -245, -246, -1000, 2222, 48497, 32910,
	-1000, -1000, 1098, -247, -1000, -88, -1000, 3580, 50216, 3781,
	3780, 3779, -1000, -1000, -90, -1000, -90, -1000, 2016, -1000,
	2433, -1000, -1000, 3125, 2857, 127269, 8176, 2533, 115128, 16715,
	2049, 2049, -1000, 3579, 2894, -1000, -1000, 2184, 474, -1000,
	-1000, -1000, -1000, 928, 115128, -1000, 2853, 91207, 8176, 1120,
	-248, 2200, 2200, 48497, 32337, 2239, -1000, -1000, 48497, -1000,
	-1000, 3460, 126708, -1000, -1000, 126708, 2364, -1000, 2905, 3681,
	-1000, 2363, 115128, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1100, -253, -254, -1000, -1000, 3444,
	-1000, 3340, -1000, -1000, -1000, 2717, 70, -1000, -1000, -1000,
	-255, 132617, 70, -1000, 261, -261, 1103, -262, 91207, 2067,
	-1000, 838, -1000, 2571, 1032, -1000, -1000, -267, -1000, -268,
	-269, -1000, -1000, 259, 49643, 49643, 49643, -107, -163, -1000,
	115128, 472, -1000, -1000, -1000, -1000, -1000, -1000, 3098, 1020,
	-1000, 854, 1994, 254, 1148, 233, 231, -1000, -1000, -1000,
	2807, -1000, 115128, -1000, -1000, 1018, 471, -1000, 48497, 1100,
	-274, -1000, 1085, -275, -1000, 1082, -276, -1000, 2923, -1000,
	-282, 2374, -256, 230, 1783, 1015, 3544, -1000, -1000, -1000,
	2545, -284, -1000, -1000, 2018, 1100, 2184, 2460, -1000, 2201,
	1014, -1000, -1000, -1000, 1100, 467, 2018, 463, 1624, 838,
	-1000, -1000, 1397, 3400, 3295, 1004, -1000, -1000, -1000, 3209,
	-1000, 53654, 2360, 1909, 130276, 3209, 3209, -1000, -1000, 115128,
	3534, -1000, 914, 882, 1553, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 1032, -285, 3513, 2533, 132617, -1000, -1000,
	2200, 2779, -1000, 2200, 2915, -1000, 2236, -1000, -1000, -1000,
	2877, -1000, 2907, -1000, 1840, 3643, -1000, -1000, -1000, 115128,
	2184, 2018, 994, 1878, 1854, 3777, 978, 2363, 2018, 57059,
	2184, 57059, 2188, -1000, 115128, -1000, 2139, 1378, -1000, -1000,
	1937, 3586, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	837, -1000, 3310, -1000, 1136, 2153, 2153, -1000, -1000, 831,
	854, -1000, 461, -1000, 458, -1000, 2339, 126708, 2328, -1000,
	-1000, -1000, 994, 2184, 1032, 455, -1000, 3769, -1000, 2363,
	-1000, 2184, -290, 994, -291, -1000, -1000, -1000, -176, 2067,
	-1000, 1706, 1905, -1000, -1000, 2285, 49070, 48497, -1000, 3645,
	-1000, -1000, 2654, -1000, 48497, 2807, 48497, 48497, -1000, 230,
	64406, 1032, 994, -1000, -1000, 2545, 994, 1100, 1032, 2018,
	1624, 66082, -1000, -1000, -1000, 132617, -1000, -1000, -1000, 132617,
	-1000, -292, -299, -1000, -183, 98413, -1000, 1032, -1000, 1032,
	2018, -1000, 2184, 2188, -270, 2184, 1231, -301, -1000, -1000,
	2184, 994, -1000, -1000, -1000, -1000, 454, -1000, 994, 1032,
	48497, 1032, -1000, -307, -1000, 2184, -1000,
}

var sqlPgo = [...]int{
	0, 4638, 4635, 4634, 4624, 4622, 4621, 4617, 4614, 4613,
	4612, 4610, 4604, 149, 4603, 4602, 4598, 4596, 4595, 4593,
	4591, 4589, 4588, 4587, 4582, 4581, 4580, 4579, 4578, 4577,
	4576, 4574, 4570, 4569, 4567, 4566, 4565, 4564, 4562, 4560,
	4559, 4556, 4555, 4551, 4549, 4548, 4545, 4543, 4542, 4539,
	4538, 4536, 4534, 4533, 4531, 4526, 4525, 4524, 4523, 4521,
	4520, 4518, 4515, 4514, 4513, 4512, 4509, 4506, 4505, 4504,
	61, 4502, 4498, 4497, 4495, 4494, 4493, 4492, 4489, 4486,
	4483, 4481, 4478, 4472, 4471, 4469, 4462, 4460, 4459, 4454,
	4450, 69, 4449, 281, 4444, 4443, 4441, 4438, 4437, 4436,
	4430, 4428, 4427, 4425, 4423, 4420, 279, 4395, 144, 167,
	4394, 4393, 3937, 4392, 4391, 277, 4390, 4388, 4386, 4385,
	4383, 285, 4378, 4374, 4368, 4367, 4365, 4349, 4347, 4346,
	4345, 4344, 4342, 4341, 84, 207, 4339, 4337, 1453, 4336,
	4335, 4334, 4333, 4332, 4330, 4329, 4328, 4327, 4324, 4322,
	251, 179, 4321, 276, 4320, 4316, 4315, 4313, 4312, 4311,
	4309, 4308, 4304, 4302, 4299, 4298, 4295, 4294, 4292, 4291,
	4290, 4289, 4288, 4287, 4283, 4281, 4280, 4279, 4278, 4277,
	4276, 4273, 4272, 4270, 4269, 4265, 4264, 4263, 4261, 4260,
	4259, 4256, 4255, 252, 222, 127, 4254, 4253, 272, 270,
	4252, 4251, 4250, 4249, 4247, 132, 6, 40, 4246, 4245,
	107, 92, 100, 102, 112, 108, 4244, 115, 4242, 130,
	71, 4241, 21, 5, 171, 253, 11460, 248, 4239, 4238,
	4237, 247, 200, 4236, 246, 4234, 4233, 4232, 4231, 4230,
	4228, 81, 54, 182, 192, 178, 176, 2, 56, 106,
	94, 67, 48, 14, 95, 215, 20, 7, 265, 4226,
	263, 11, 148, 13, 33, 4224, 4223, 4221, 4215, 3604,
	122, 4214, 266, 250, 175, 4213, 4212, 4211, 273, 4210,
	4204, 55, 4203, 188, 101, 116, 15, 136, 4201, 153,
	174, 36, 4199, 163, 59, 4198, 162, 98, 87, 9072,
	5017, 4196, 4195, 114, 74, 199, 313, 194, 184, 206,
	111, 173, 166, 117, 221, 219, 181, 60, 4194, 257,
	4192, 3585, 79, 197, 158, 5849, 4190, 4189, 4188, 83,
	4187, 110, 4186, 4185, 72, 19, 3, 1, 151, 43,
	41, 29, 4182, 30, 126, 50, 23, 4177, 25, 4176,
	4173, 4172, 4170, 4163, 88, 168, 4161, 4158, 275, 4156,
	89, 52, 37, 4155, 35, 225, 4153, 230, 139, 4152,
	4151, 261, 212, 196, 4150, 42, 240, 4148, 4144, 4142,
	4138, 4136, 4132, 140, 9, 137, 4131, 4130, 150, 4128,
	51, 245, 205, 4126, 64, 4124, 4121, 183, 58, 143,
	282, 134, 232, 129, 229, 185, 235, 4119, 4118, 4117,
	201, 4111, 4110, 228, 191, 4109, 4108, 256, 286, 93,
	49, 85, 243, 86, 198, 160, 4107, 208, 4105, 4102,
	288, 189, 227, 10, 4, 109, 113, 4100, 8, 242,
	159, 237, 125, 4099, 7644, 2514, 2859, 4097, 4096, 155,
	133, 82, 135, 154, 268, 97, 4095, 4094, 2776, 4092,
	4091, 4087, 4086, 193, 4082, 4080, 4079, 156, 177, 234,
	4076, 96, 77, 57, 24, 131, 255, 271, 120, 231,
	169, 260, 4075, 4074, 4073, 202, 4072, 90, 124, 164,
	210, 258, 63, 4070, 238, 4069, 157, 211, 76, 152,
	4068, 236, 4067, 4065, 4064, 4062, 4061, 4059, 4058, 170,
	239, 4057, 4055, 4054, 44, 204, 4053, 267, 172, 187,
	2270, 66, 4052, 104, 3222, 4051, 118, 218, 62, 2440,
	34, 4050, 2030, 65, 4047, 0, 13379, 9227, 12189, 13131,
	4046, 6096, 4045, 4043, 4040, 224, 80, 4037, 4036, 4033,
	119, 4032, 91, 4030, 4026, 78, 4025, 28, 16, 18,
	31, 27, 190, 161, 4021, 4020, 26, 138, 146, 4019,
	274, 233, 4017, 4006, 4002, 3997, 99, 3996, 47, 3995,
	45, 3994, 3993, 53, 12, 32, 3991, 3990, 226, 3989,
	223, 262, 3988, 165, 3984, 73, 142, 3979, 3976, 3974,
	68, 70, 264, 105, 3973, 289, 3970, 209, 3967, 3966,
	22, 3964, 3963, 249, 123, 121, 3961, 254, 141, 46,
	220, 186, 216, 3960, 3959, 180, 3958, 3957, 3956, 284,
	3954, 3953, 39, 3952, 3951, 3950, 17, 3949, 3948, 214,
	3402, 3942, 3940, 38, 3939, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 54, 54, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 39, 41, 40,
	34, 34, 35, 35, 36, 37, 37, 10, 10, 10,
	10, 6, 6, 6, 6, 6, 6, 6, 6, 6,
	20, 20, 42, 42, 21, 21, 44, 44, 22, 22,
	45, 45, 602, 602, 602, 620, 620, 25, 25, 47,
	47, 26, 48, 17, 18, 18, 19, 19, 19, 19,
	603, 603, 603, 603, 38, 27, 49, 31, 31, 31,
	31, 31, 208, 208, 208, 208, 24, 24, 43, 43,
	244, 244, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	243, 243, 243, 243, 243, 243, 243, 243, 243, 243,
	598, 598, 246, 246, 245, 238, 238, 239, 239, 240,
	240, 604, 604, 247, 247, 247, 248, 248, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 498, 498,
	498, 529, 529, 529, 529, 530, 530, 624, 624, 625,
	625, 625, 625, 625, 137, 137, 396, 396, 396, 58,
	58, 58, 58, 58, 593, 593, 210, 210, 210, 212,
	212, 211, 211, 211, 211, 211, 82, 82, 610, 610,
	609, 608, 608, 608, 611, 611, 611, 209, 209, 209,
	133, 133, 133, 133, 133, 133, 134, 134, 135, 135,
	213, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	214, 214, 214, 214, 214, 214, 219, 16, 16, 16,
	116, 116, 116, 116, 116, 116, 116, 111, 111, 532,
	532, 533, 533, 204, 204, 205, 205, 205, 205, 206,
	206, 207, 207, 207, 73, 73, 216, 216, 218, 218,
	217, 217, 217, 217, 217, 60, 60, 60, 60, 60,
	60, 60, 60, 60, 61, 61, 61, 61, 61, 62,
	62, 62, 62, 62, 62, 63, 63, 63, 63, 63,
	63, 64, 64, 71, 71, 71, 71, 71, 71, 71,
	195, 195, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 79, 79, 79, 79, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 626, 626,
	626, 626, 626, 626, 626, 626, 626, 626, 627, 627,
	628, 628, 629, 629, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 630, 630, 630,
	630, 630, 630, 77, 77, 77, 77, 77, 77, 77,
	77, 77, 77, 77, 77, 77, 77, 77, 77, 77,
	88, 88, 356, 356, 320, 320, 89, 89, 89, 90,
	90, 91, 91, 75, 75, 591, 591, 372, 372, 489,
	489, 76, 599, 599, 599, 601, 601, 600, 600, 93,
	93, 395, 395, 94, 94, 94, 94, 94, 94, 95,
	95, 95, 95, 95, 95, 95, 96, 96, 96, 96,
	96, 96, 96, 96, 96, 96, 96, 96, 96, 96,
	103, 103, 103, 103, 103, 104, 104, 104, 101, 101,
	101, 98, 98, 98, 97, 97, 97, 102, 102, 102,
	590, 309, 309, 100, 100, 100, 99, 99, 99, 373,
	373, 105, 105, 105, 105, 321, 106, 106, 106, 106,
	106, 106, 106, 106, 109, 109, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 108, 108, 108,
	108, 108, 108, 108, 108, 108, 108, 110, 110, 110,
	110, 110, 110, 110, 110, 110, 110, 110, 110, 491,
	491, 107, 107, 107, 456, 456, 112, 112, 112, 411,
	411, 113, 113, 113, 113, 113, 114, 114, 114, 114,
	114, 114, 114, 114, 114, 136, 136, 136, 136, 136,
	136, 136, 136, 595, 595, 365, 365, 272, 272, 272,
	272, 125, 125, 125, 125, 126, 126, 126, 127, 127,
	200, 200, 143, 143, 143, 143, 142, 142, 142, 142,
	142, 142, 142, 142, 65, 65, 65, 66, 66, 67,
	67, 68, 68, 69, 69, 70, 70, 70, 70, 70,
	146, 146, 621, 621, 148, 145, 145, 145, 145, 145,
	144, 144, 147, 147, 147, 147, 149, 151, 151, 151,
	151, 151, 150, 150, 150, 150, 150, 152, 152, 523,
	523, 381, 381, 521, 521, 542, 542, 522, 522, 327,
	327, 327, 327, 327, 328, 328, 328, 531, 531, 531,
	531, 531, 531, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 153, 153, 153, 153,
	153, 153, 153, 153, 153, 153, 201, 201, 202, 203,
	203, 203, 203, 203, 178, 178, 178, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 382, 382,
	181, 181, 181, 165, 165, 154, 154, 154, 154, 154,
	154, 154, 159, 159, 159, 159, 159, 159, 159, 159,
	155, 155, 167, 167, 167, 167, 167, 160, 160, 161,
	161, 161, 162, 162, 162, 162, 188, 188, 164, 164,
	166, 166, 166, 166, 166, 166, 166, 166, 166, 156,
	156, 156, 156, 169, 169, 169, 169, 418, 418, 418,
	193, 193, 168, 168, 168, 168, 168, 168, 168, 168,
	168, 168, 168, 168, 168, 168, 168, 168, 191, 191,
	191, 191, 191, 191, 612, 612, 613, 613, 613, 185,
	185, 185, 185, 185, 185, 470, 470, 179, 179, 179,
	179, 184, 184, 184, 184, 187, 187, 187, 187, 401,
	401, 176, 176, 176, 177, 177, 177, 182, 182, 183,
	357, 357, 180, 180, 186, 186, 186, 186, 157, 157,
	157, 157, 157, 157, 157, 157, 157, 158, 158, 158,
	158, 189, 189, 175, 175, 190, 190, 190, 190, 190,
	190, 190, 190, 190, 190, 190, 631, 631, 171, 171,
	171, 170, 170, 170, 170, 173, 173, 174, 174, 174,
	174, 174, 174, 172, 163, 192, 592, 592, 588, 588,
	588, 588, 588, 588, 588, 588, 589, 589, 589, 589,
	594, 594, 117, 117, 117, 117, 117, 117, 117, 128,
	128, 128, 128, 128, 128, 128, 131, 131, 118, 118,
	118, 118, 118, 118, 118, 121, 121, 119, 119, 119,
	119, 120, 120, 83, 83, 83, 83, 83, 15, 15,
	15, 84, 84, 263, 263, 222, 222, 222, 345, 345,
	223, 223, 335, 335, 335, 335, 220, 220, 221, 221,
	85, 85, 632, 632, 632, 605, 605, 605, 606, 606,
	606, 606, 606, 606, 329, 329, 330, 330, 436, 436,
	436, 436, 436, 333, 333, 333, 334, 334, 334, 334,
	334, 334, 334, 334, 334, 343, 344, 344, 336, 336,
	342, 341, 341, 340, 340, 339, 339, 337, 338, 338,
	338, 347, 347, 346, 349, 349, 348, 435, 551, 551,
	553, 553, 553, 553, 553, 553, 553, 555, 555, 555,
	555, 555, 555, 555, 555, 555, 555, 555, 555, 555,
	555, 555, 555, 555, 419, 419, 633, 633, 634, 635,
	549, 549, 549, 550, 545, 545, 546, 546, 546, 546,
	546, 331, 331, 332, 332, 332, 332, 547, 548, 363,
	363, 474, 552, 552, 554, 554, 556, 636, 636, 636,
	636, 636, 636, 637, 637, 637, 434, 434, 433, 433,
	354, 354, 557, 557, 557, 557, 558, 558, 558, 558,
	558, 561, 560, 559, 559, 559, 559, 559, 87, 87,
	87, 398, 398, 397, 397, 399, 399, 399, 399, 399,
	399, 399, 399, 399, 399, 399, 399, 399, 399, 399,
	197, 197, 275, 275, 81, 81, 81, 12, 12, 12,
	12, 12, 12, 12, 290, 290, 13, 13, 13, 607,
	607, 607, 86, 86, 86, 86, 86, 86, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 274, 274,
	274, 274, 274, 274, 274, 274, 274, 274, 597, 597,
	596, 596, 276, 276, 639, 639, 92, 92, 92, 92,
	92, 92, 92, 92, 492, 492, 493, 493, 80, 80,
	80, 80, 80, 420, 420, 417, 417, 416, 416, 362,
	362, 472, 472, 472, 473, 280, 280, 281, 281, 241,
	241, 241, 33, 32, 23, 23, 28, 28, 29, 29,
	262, 262, 262, 262, 262, 262, 262, 262, 262, 30,
	30, 51, 51, 51, 51, 52, 52, 52, 52, 55,
	55, 56, 56, 50, 50, 50, 50, 53, 53, 46,
	46, 57, 57, 57, 57, 57, 614, 616, 616, 615,
	615, 619, 619, 619, 619, 619, 619, 617, 617, 618,
	618, 622, 622, 623, 623, 124, 124, 129, 129, 129,
	129, 129, 130, 130, 130, 130, 132, 132, 132, 132,
	141, 141, 196, 196, 196, 196, 196, 196, 196, 59,
	59, 59, 59, 72, 72, 72, 72, 139, 641, 641,
	641, 140, 140, 140, 640, 640, 273, 273, 430, 430,
	431, 431, 642, 642, 432, 432, 432, 432, 432, 266,
	265, 267, 267, 268, 268, 78, 78, 78, 256, 256,
	255, 257, 257, 258, 258, 253, 253, 534, 534, 260,
	260, 260, 261, 261, 249, 249, 250, 250, 251, 251,
	252, 252, 264, 264, 643, 643, 115, 115, 115, 199,
	199, 319, 319, 319, 427, 427, 427, 355, 355, 287,
	287, 429, 429, 429, 429, 394, 394, 394, 198, 198,
	370, 370, 384, 384, 385, 385, 486, 486, 386, 122,
	122, 123, 123, 138, 138, 226, 226, 224, 224, 224,
	224, 224, 224, 224, 224, 231, 231, 232, 232, 233,
	233, 234, 235, 235, 235, 235, 374, 374, 236, 236,
	236, 225, 225, 225, 227, 227, 227, 227, 227, 227,
	227, 230, 230, 230, 230, 237, 237, 237, 229, 229,
	568, 568, 568, 570, 570, 572, 572, 571, 571, 567,
	567, 569, 569, 638, 638, 400, 400, 400, 352, 353,
	350, 350, 351, 351, 360, 360, 358, 359, 359, 361,
	361, 471, 471, 471, 242, 242, 242, 391, 391, 391,
	391, 392, 392, 423, 423, 421, 421, 421, 421, 422,
	422, 424, 424, 424, 425, 425, 426, 426, 388, 388,
	389, 389, 390, 390, 390, 390, 452, 452, 228, 228,
	228, 367, 367, 367, 368, 368, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 443, 443, 441,
	441, 441, 441, 475, 475, 475, 475, 475, 475, 475,
	475, 475, 476, 477, 477, 369, 369, 478, 428, 428,
	586, 586, 586, 587, 587, 469, 469, 479, 479, 479,
	479, 479, 479, 467, 467, 468, 468, 487, 488, 488,
	404, 404, 404, 404, 402, 402, 405, 405, 405, 405,
	405, 403, 403, 480, 480, 480, 480, 393, 393, 481,
	481, 481, 481, 482, 483, 483, 484, 484, 437, 438,
	438, 494, 494, 494, 494, 496, 366, 366, 366, 366,
	366, 544, 543, 543, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 510, 510, 510, 510, 510,
	510, 510, 510, 510, 510, 511, 511, 511, 511, 511,
	511, 511, 497, 497, 497, 497, 497, 501, 501, 501,
	500, 500, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 502, 502, 507, 507, 508, 508, 508, 503, 504,
	509, 509, 509, 509, 644, 644, 513, 513, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 499, 499, 499,
	506, 506, 506, 413, 413, 413, 413, 413, 413, 413,
	413, 413, 413, 413, 413, 413, 412, 412, 414, 414,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	444, 444, 444, 444, 444, 444, 444, 444, 444, 444,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 446, 446, 446, 446, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	447, 447, 447, 447, 447, 447, 447, 447, 447, 447,
	562, 562, 562, 562, 562, 562, 562, 562, 448, 448,
	565, 565, 566, 566, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 563, 563, 563,
	563, 563, 563, 563, 563, 563, 563, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 564, 564, 564, 564, 564,
	564, 564, 564, 564, 564, 573, 573, 574, 574, 576,
	576, 577, 577, 578, 579, 579, 579, 580, 581, 581,
	575, 575, 582, 582, 582, 582, 583, 583, 584, 584,
	584, 584, 584, 585, 585, 585, 585, 585, 458, 458,
	459, 459, 465, 465, 465, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	326, 326, 325, 277, 277, 277, 277, 277, 277, 379,
	379, 377, 377, 377, 380, 380, 378, 378, 376, 376,
	375, 375, 455, 455, 453, 453, 457, 457, 406, 406,
	512, 512, 512, 512, 512, 512, 512, 512, 407, 407,
	407, 415, 408, 408, 409, 409, 409, 409, 409, 449,
	450, 410, 410, 410, 451, 451, 460, 464, 464, 463,
	462, 462, 461, 461, 439, 439, 440, 440, 387, 387,
	645, 645, 383, 383, 485, 485, 485, 485, 323, 323,
	371, 371, 322, 322, 314, 314, 315, 315, 315, 315,
	364, 364, 466, 466, 514, 514, 515, 515, 516, 516,
	517, 517, 518, 519, 520, 454, 454, 298, 297, 284,
	285, 296, 295, 294, 283, 286, 291, 292, 293, 288,
	289, 305, 304, 303, 254, 259, 310, 311, 311, 313,
	313, 312, 312, 300, 301, 302, 490, 282, 316, 316,
	317, 317, 317, 318, 318, 318, 318, 278, 278, 279,
	279, 306, 306, 307, 308, 308, 299, 299, 299, 269,
	269, 269, 270, 270, 271, 271, 528, 528, 525, 525,
	525, 526, 526, 526, 527, 527, 527, 527, 524, 524,
	524, 524, 524, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 539, 539,
	539, 539, 539, 539, 539, 539, 539, 539, 536, 536,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 538, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 540,
	540, 540, 540, 540, 540, 540, 540, 540, 540, 541,
	541,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 1, 1,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	4, 6, 4, 6, 6, 9, 6, 9, 6, 5,
	6, 5, 1, 1, 1, 1, 0, 6, 6, 6,
	6, 6, 6, 4, 8, 7, 10, 9, 10, 9,
	4, 4, 4, 3, 4, 4, 4, 7, 7, 9,
	8, 9, 5, 3, 5, 7, 4, 12, 4, 12,
	1, 3, 5, 5, 2, 5, 3, 6, 4, 4,
	4, 6, 5, 6, 5, 6, 4, 8, 3, 8,
	4, 2, 3, 9, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 3, 1, 3, 6,
	4, 6, 7, 9, 6, 2, 2, 3, 0, 8,
	6, 8, 7, 2, 0, 1, 2, 5, 0, 1,
	3, 3, 1, 1, 3, 3, 12, 3, 1, 1,
	2, 1, 4, 0, 3, 3, 0, 4, 6, 0,
	5, 7, 6, 8, 8, 2, 1, 3, 1, 3,
	2, 5, 0, 1, 3, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 3, 3, 1, 3, 3, 3,
	6, 4, 9, 7, 12, 9, 2, 7, 2, 1,
	1, 1, 3, 3, 0, 3, 1, 3, 1, 1,
	3, 2, 5, 0, 7, 5, 2, 0, 1, 2,
	3, 1, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 2, 3, 3, 3, 3, 3, 3,
	5, 3, 3, 5, 3, 3, 5, 3, 3, 5,
	3, 4, 3, 6, 6, 6, 6, 6, 8, 4,
	1, 1, 1, 2, 1, 1, 2, 1, 2, 1,
	1, 1, 2, 1, 2, 6, 3, 8, 3, 4,
	3, 3, 4, 3, 4, 4, 4, 3, 5, 7,
	3, 3, 4, 3, 3, 3, 3, 3, 2, 0,
	1, 0, 1, 0, 4, 3, 3, 3, 3, 3,
	6, 4, 4, 4, 3, 5, 3, 3, 3, 3,
	3, 3, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 1, 2, 1, 2, 1, 2,
	7, 3, 2, 0, 1, 3, 3, 1, 0, 1,
	2, 2, 1, 6, 5, 1, 2, 1, 3, 2,
	0, 7, 2, 5, 0, 1, 3, 3, 1, 9,
	3, 2, 0, 2, 2, 2, 2, 2, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	4, 6, 5, 7, 3, 4, 6, 3, 4, 6,
	3, 5, 7, 3, 4, 6, 3, 4, 6, 3,
	1, 1, 3, 4, 6, 3, 3, 5, 3, 1,
	3, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 2, 1,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 2, 1, 1, 2, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 2, 1,
	3, 5, 7, 2, 3, 0, 3, 5, 2, 3,
	0, 2, 3, 2, 3, 2, 6, 4, 7, 7,
	7, 9, 10, 5, 2, 6, 4, 7, 7, 7,
	10, 5, 2, 2, 1, 1, 3, 1, 1, 1,
	1, 1, 2, 1, 2, 2, 3, 2, 4, 3,
	2, 2, 1, 2, 1, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 3, 5, 4, 6,
	4, 3, 0, 1, 3, 2, 4, 2, 4, 1,
	6, 3, 1, 1, 5, 3, 3, 2, 2, 6,
	3, 3, 3, 3, 4, 4, 3, 1, 3, 3,
	2, 2, 1, 3, 3, 3, 1, 2, 1, 1,
	2, 2, 3, 1, 1, 1, 1, 1, 3, 2,
	2, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 2, 1, 1, 1, 2, 2, 2, 1, 3,
	3, 3, 3, 3, 2, 3, 3, 1, 2, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 2, 3,
	5, 7, 3, 3, 3, 4, 4, 6, 5, 5,
	5, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	5, 3, 5, 5, 5, 7, 3, 3, 3, 4,
	6, 4, 2, 6, 4, 3, 2, 3, 4, 3,
	5, 3, 6, 5, 6, 3, 5, 6, 3, 5,
	3, 5, 3, 3, 4, 4, 5, 0, 1, 1,
	1, 1, 3, 2, 3, 4, 3, 4, 3, 5,
	3, 4, 4, 3, 4, 5, 3, 4, 3, 4,
	4, 5, 3, 3, 1, 1, 0, 2, 3, 5,
	4, 6, 4, 6, 4, 1, 0, 3, 4, 4,
	5, 7, 5, 3, 3, 3, 4, 4, 5, 2,
	0, 4, 2, 3, 4, 2, 3, 3, 3, 5,
	2, 0, 3, 3, 4, 3, 3, 3, 3, 4,
	4, 4, 4, 4, 4, 4, 3, 4, 5, 4,
	4, 2, 3, 2, 3, 6, 6, 7, 9, 7,
	9, 4, 3, 4, 4, 5, 1, 1, 10, 10,
	3, 5, 5, 5, 3, 5, 6, 4, 4, 5,
	5, 2, 3, 2, 5, 4, 2, 0, 1, 1,
	1, 1, 3, 2, 2, 2, 2, 2, 2, 1,
	2, 0, 1, 2, 1, 2, 1, 2, 2, 1,
	2, 1, 2, 1, 2, 2, 4, 3, 3, 7,
	3, 3, 7, 3, 3, 3, 3, 3, 3, 3,
	3, 4, 3, 3, 6, 5, 8, 3, 6, 6,
	3, 12, 15, 1, 0, 1, 2, 3, 0, 2,
	0, 4, 0, 4, 5, 4, 3, 3, 1, 3,
	10, 13, 0, 2, 3, 1, 1, 0, 1, 2,
	2, 2, 2, 1, 1, 0, 1, 3, 1, 1,
	1, 2, 3, 3, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 0, 1, 0,
	1, 1, 0, 1, 4, 1, 0, 3, 7, 7,
	1, 1, 3, 7, 1, 3, 11, 3, 2, 0,
	3, 1, 2, 2, 3, 2, 6, 2, 1, 2,
	2, 2, 8, 4, 2, 3, 5, 5, 5, 2,
	5, 5, 2, 2, 2, 0, 1, 1, 3, 4,
	10, 11, 9, 5, 3, 1, 5, 9, 6, 11,
	3, 3, 0, 2, 4, 3, 3, 1, 5, 1,
	3, 1, 2, 0, 1, 2, 2, 0, 1, 3,
	3, 2, 2, 1, 1, 1, 4, 0, 6, 0,
	3, 0, 2, 2, 2, 0, 1, 1, 2, 2,
	0, 3, 3, 2, 1, 1, 2, 2, 5, 8,
	4, 1, 0, 1, 2, 2, 1, 2, 3, 3,
	2, 2, 3, 2, 2, 2, 2, 2, 3, 1,
	4, 2, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 7, 10, 5, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	2, 0, 3, 3, 0, 1, 8, 11, 3, 6,
	6, 5, 3, 4, 1, 0, 1, 3, 16, 19,
	15, 18, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 9, 6, 6, 8, 6, 8, 5, 7,
	2, 6, 7, 4, 4, 5, 2, 4, 6, 6,
	8, 6, 7, 8, 9, 6, 7, 8, 9, 6,
	8, 6, 8, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 6, 8, 8, 4, 7, 3, 0, 7,
	10, 1, 1, 1, 1, 2, 2, 3, 0, 3,
	0, 1, 0, 2, 0, 2, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 1, 2, 1, 2, 1, 2, 1, 3,
	2, 3, 2, 2, 2, 2, 2, 2, 1, 1,
	0, 2, 4, 2, 1, 0, 2, 1, 1, 0,
	1, 3, 1, 0, 1, 1, 1, 1, 1, 2,
	3, 2, 2, 1, 2, 13, 16, 3, 1, 0,
	4, 1, 0, 2, 2, 3, 0, 1, 1, 4,
	4, 5, 1, 0, 3, 0, 3, 0, 3, 0,
	3, 0, 4, 0, 1, 0, 6, 7, 3, 6,
	3, 1, 3, 1, 1, 4, 2, 1, 3, 1,
	3, 4, 8, 11, 5, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 2, 4, 4, 4, 2, 2,
	2, 2, 3, 1, 3, 1, 2, 6, 7, 1,
	0, 1, 0, 1, 0, 1, 1, 0, 1, 5,
	1, 0, 1, 0, 1, 0, 3, 3, 5, 1,
	3, 3, 4, 5, 2, 2, 0, 2, 2, 1,
	1, 1, 0, 1, 0, 2, 2, 5, 4, 2,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 0,
	1, 3, 1, 3, 3, 3, 2, 0, 4, 2,
	5, 3, 2, 0, 1, 3, 3, 5, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 1, 3, 2,
	4, 4, 0, 4, 4, 3, 4, 1, 5, 3,
	4, 5, 5, 1, 5, 1, 3, 2, 0, 3,
	0, 2, 3, 1, 3, 2, 0, 3, 5, 6,
	4, 6, 4, 3, 2, 1, 0, 5, 1, 0,
	2, 2, 2, 1, 1, 0, 1, 1, 1, 1,
	0, 4, 2, 1, 2, 2, 4, 1, 3, 1,
	2, 3, 2, 4, 1, 0, 1, 0, 2, 1,
	0, 2, 5, 7, 2, 1, 2, 4, 3, 5,
	0, 1, 3, 5, 1, 2, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 4,
	6, 6, 1, 1, 1, 1, 1, 3, 5, 0,
	1, 1, 1, 1, 1, 2, 2, 2, 2, 2,
	1, 3, 0, 5, 4, 1, 2, 1, 4, 1,
	1, 2, 1, 1, 1, 1, 1, 0, 1, 2,
	5, 1, 4, 2, 5, 1, 4, 3, 3, 0,
	1, 2, 4, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 1, 0, 1, 4,
	1, 3, 3, 3, 5, 2, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 3, 3, 2, 2, 3, 5,
	4, 6, 3, 5, 4, 6, 4, 6, 5, 7,
	3, 3, 3, 3, 3, 4, 3, 2, 4, 2,
	3, 3, 4, 3, 4, 3, 4, 5, 6, 6,
	7, 6, 7, 6, 7, 3, 4, 4, 1, 3,
	1, 3, 3, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 3, 5, 6, 6,
	7, 1, 2, 1, 2, 1, 1, 1, 1, 1,
	6, 1, 1, 1, 1, 1, 1, 2, 1, 5,
	5, 6, 3, 1, 1, 1, 2, 2, 2, 4,
	3, 5, 6, 8, 6, 5, 4, 3, 2, 2,
	4, 1, 1, 1, 5, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 6, 6, 8, 8,
	6, 4, 6, 6, 6, 4, 1, 3, 3, 3,
	3, 3, 4, 3, 3, 4, 3, 3, 4, 3,
	3, 4, 3, 3, 3, 3, 3, 4, 3, 4,
	3, 4, 3, 4, 4, 3, 6, 5, 5, 5,
	4, 4, 3, 4, 3, 5, 0, 5, 0, 2,
	0, 1, 3, 3, 2, 2, 0, 6, 1, 0,
	3, 0, 3, 3, 3, 0, 1, 4, 2, 2,
	2, 2, 2, 3, 2, 2, 3, 0, 4, 1,
	1, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 3, 2, 1, 1, 1, 3,
	1, 3, 3, 1, 1, 1, 1, 5, 3, 1,
	1, 3, 1, 1, 1, 1, 2, 2, 1, 1,
	2, 2, 1, 1, 1, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 3, 1,
	3, 1, 0, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 7, 1, 7, 5, 3, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 1, 1, 1, 1,
	1, 1, 1, 0, 3, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 604, -108, -105, -73, -71, -112, -113,
	-94, -114, -107, -136, -141, -122, -123, -124, -137, -143,
	-196, -201, -202, -203, -3, -58, -60, -74, -93, -95,
	-106, -116, -115, -117, -125, -133, -128, -111, -65, -138,
	-142, -153, -197, -198, -199, 32, 31, 100, 80, 155,
	129, 138, 205, 388, 434, 446, 403, 143, 425, 408,
	-147, -148, 464, -59, -72, -140, -139, 73, 130, 418,
	-4, -12, -16, 29, 46, -61, -62, -63, -64, 62,
	-81, -77, -88, -82, -75, -76, -79, -626, 102, -569,
	-96, -99, -132, -630, 163, 223, -118, -119, -120, 370,
	-126, -127, 427, -129, -130, -131, 430, 164, -67, -66,
	157, -224, -226, -145, -144, -146, -200, -154, -155, -156,
	-157, -158, -159, -160, -162, -188, -163, -164, -165, -166,
	-167, -168, -172, -191, -169, -170, -171, -174, -173, -175,
	-180, -176, -177, -178, -179, -181, -182, -184, -185, -186,
	-187, -189, -190, 469, -183, -192, -161, 529, 49, 484,
	82, 147, 438, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -57, -78, -80, -83, -84, -85, -92,
	-86, -87, -568, -97, -98, -101, -103, -104, -100, -102,
	426, -227, -225, 601, 544, -20, -25, -26, -21, -22,
	-24, -27, -23, -28, -29, -30, -42, -47, -48, -44,
	-45, -43, -46, -49, -50, -51, -52, -53, -54, -55,
	-56, -32, -38, -39, -33, -34, -35, -36, -37, -40,
	-41, -17, -18, -19, -31, 565, 574, -230, -228, -229,
	-237, 456, 552, 504, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, -321, 2, -300, -306,
	-307, -308, -299, -269, -538, -541, 4, -535, -539, 170,
	233, 334, 21, 23, 22, 24, 25, 26, 27, 29,
	30, 41, 42, 44, 45, 46, 47, 48, 49, 53,
	55, 59, 60, 61, 62, 63, 64, 68, 73, 74,
	79, 80, 81, 82, 83, 84, 85, 91, 88, 89,
	90, 92, 94, 96, 97, 98, 99, 100, 101, 103,
	104, 105, 107, 108, 109, 117, 118, 119, 120, 121,
	123, 129, 124, 130, 133, 128, 132, 134, 136, 137,
	138, 141, 142, 143, 145, 146, 148, 149, 150, 152,
	153, 155, 156, 157, 160, 158, 161, 159, 162, 163,
	164, 165, 168, 176, 177, 178, 183, 185, 186, 187,
	191, 192, 193, 196, 197, 198, 199, 200, 201, 202,
	203, 204, 206, 210, 212, 213, 214, 215, 216, 222,
	223, 225, 226, 227, 228, 229, 234, 235, 236, 239,
	245, 246, 250, 251, 252, 254, 258, 259, 260, 261,
	262, 263, 265, 267, 266, 269, 272, 273, 276, 277,
	278, 279, 280, 281, 285, 286, 282, 287, 288, 290,
	291, 294, 292, 295, 296, 293, 297, 299, 300, 301,
	302, 303, 304, 305, 306, 307, 308, 309, 310, 298,
	313, 311, 315, 316, 317, 318, 332, 327, 328, 329,
	322, 323, 319, 324, 320, 321, 325, 326, 331, 336,
	337, 340, 220, 342, 343, 346, 364, 350, 351, 352,
	355, 356, 359, 362, 363, 365, 366, 367, 368, 369,
	370, 371, 372, 373, 375, 376, 378, 379, 380, 382,
	383, 384, 386, 388, 389, 391, 392, 394, 395, 396,
	397, 398, 399, 400, 402, 403, 405, 404, 406, 408,
	410, 411, 412, 418, 425, 419, 421, 422, 423, 424,
	426, 427, 428, 429, 430, 432, 433, 434, 436, 437,
	438, 439, 440, 442, 444, 445, 449, 450, 466, 467,
	486, 446, 447, 448, 451, 452, 453, 454, 455, 459,
	457, 458, 460, 461, 462, 464, 465, 468, 469, 471,
	472, 473, 474, 475, 476, 477, 480, 482, 483, 484,
	503, 485, 487, 491, 492, 493, 494, 488, 489, 502,
	496, 497, 499, 500, 505, 506, 507, 508, 509, 510,
	511, 512, 514, 522, 523, 524, 526, 529, 530, 531,
	532, 520, 534, 535, 538, 539, 540, 543, 541, 542,
	544, 546, 549, 550, 551, 557, 556, 558, 560, 561,
	566, 567, 569, 570, 571, 36, 50, 51, 54, 56,
	58, 69, 70, 71, 75, 125, 126, 154, 166, 167,
	179, 194, 195, 207, 209, 217, 218, 219, 240, 241,
	243, 248, 270, 339, 341, 357, 361, 377, 381, 385,
	387, 401, 441, 478, 490, 495, 515, 516, 517, 518,
	525, 527, 552, 553, 554, 559, 568, -321, 2, -300,
	348, -293, 2, -269, -269, 388, 28, 2, 28, 376,
	458, 507, 509, 2, -595, -365, 2, 28, -272, -269,
	102, 205, 456, -293, 2, -595, -365, 25, 2, -269,
	2, 362, 22, 27, 66, 77, 98, 141, 165, 188,
	191, -629, 364, 395, 444, 460, 502, 512, 526, 2,
	556, 291, 457, 504, 233, 120, 531, 451, -607, 449,
	450, 362, 393, 436, 208, 545, -273, 2, 446, -269,
	291, 2, 604, 94, 74, 441, 461, -150, 2, 281,
	523, -151, -152, -149, 515, -523, 451, 436, 313, -269,
	604, 604, 604, 28, -282, -269, 504, 233, 451, 120,
	500, 604, 2, 504, 367, 556, 457, 120, 398, 233,
	531, 191, 141, 27, 451, -607, 579, 580, 291, 127,
	-593, 2, -588, 4, -539, -535, -315, -314, 504, 510,
	120, -308, -299, 594, -307, 604, 604, 604, 604, 2,
	251, 252, 397, 396, 461, 462, 28, 604, 604, 604,
	604, 449, 2, 165, 22, 27, 66, 93, 98, 127,
	188, 191, 353, -627, 364, 395, 460, 502, 506, 512,
	526, -606, 485, 68, 424, 451, -605, -607, 291, 531,
	141, -416, 120, 281, 203, 539, 509, 507, 537, 133,
	239, 542, 541, 604, 604, -109, 2, 601, 32, 31,
	-108, -112, 143, 464, -219, 504, 244, 2, -269, 604,
	604, 604, 2, 251, 252, 449, 450, 28, 604, 604,
	189, -588, 2, 604, 604, 604, 2, 28, 251, 252,
	449, 450, 244, 2, 68, 453, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 2, -194, 461, 485, 214, 47, 46, 74,
	28, 394, 79, 368, 121, 127, 149, 532, 206, 233,
	234, 259, 93, 94, -418, 44, 252, 68, 251, 450,
	-612, 449, -470, 505, 452, 458, 499, 263, 446, 523,
	102, 546, 437, 571, 398, 399, 497, 412, 282, 158,
	190, 4, 120, 313, 436, 463, 267, 266, 515, 281,
	445, 371, 84, 604, -638, 2, 504, -640, 2, 523,
	523, 2, -640, 2, -640, 2, -640, 2, -641, 523,
	568, 604, 604, 604, 604, 604, 604, 604, 604, 604,
	604, 604, 604, 604, 604, 604, 604, 604, 604, -225,
	-227, -226, 604, 604, 604, 604, 604, 604, 604, -194,
	461, 2, 74, 28, -358, -360, 536, 242, 151, 354,
	-224, -226, 2, -568, -521, 2, -444, -542, -446, 592,
	593, 585, 501, 67, -325, 333, 572, -458, 127, 537,
	348, -541, -447, -460, 154, 364, 441, -380, 8, 9,
	5, 6, 7, -278, -448, -454, 528, 169, 338, -318,
	605, 10, 601, -565, -226, -459, 37, 209, 65, -525,
	-317, -279, -497, 243, -316, -299, -562, -563, 4, -535,
	-536, -526, -500, -508, -504, -505, -511, -269, -538, 77,
	111, 112, 110, 115, 114, 284, 283, 116, 113, 463,
	545, 66, 36, 217, 218, 248, 339, 219, 75, -564,
	142, -537, 240, 241, 478, 51, 401, 179, 126, 125,
	341, 56, 54, 553, -509, 122, 515, 516, 517, 518,
	194, 195, 58, 166, 167, 361, 385, 495, 525, 527,
	207, 270, 43, 106, 190, 238, 221, 247, 249, 253,
	271, 274, 314, 330, 335, 358, 360, 435, 470, -644,
	554, 490, 69, 70, -570, 404, -571, -293, -570, 604,
	604, 606, 604, -350, -352, -353, 2, 28, 139, 601,
	2, -475, 2, -476, -480, -226, 264, -479, 601, -477,
	599, -300, 349, -566, 442, -562, -563, -278, -299, -317,
	4, -535, -537, 603, -354, 601, 120, 451, 504, 78,
	233, 93, 165, -411, 601, -269, 28, 348, 519, 606,
	-351, 392, -456, 601, 348, 189, 351, 60, 295, 2,
	2, 2, 2, 2, 217, -269, 504, 119, 2, 262,
	2, 2, 2, 2, 2, 2, 2, -373, 217, 2,
	-300, 556, -373, 217, 2, -373, 217, 2, -417, 2,
	87, -283, 217, 2, -269, -309, 217, 2, -304, -306,
	-313, 217, 2, -311, -269, -530, 217, 2, -529, 4,
	-535, 116, 463, -444, 2, -138, 2, 60, -269, 556,
	2, 466, 2, 601, -150, 2, 71, 523, 43, 461,
	-151, 2, -431, 2, -432, -265, -266, -267, -487, -268,
	250, 391, 400, 575, 131, 333, 571, -621, 189, 584,
	519, -521, -521, -521, -381, 603, 2, 2, 2, 2,
	2, 2, -480, 217, -300, 2, -297, -524, 4, -535,
	-539, -536, -540, -538, 28, 31, 32, 33, 35, 37,
	38, 39, 40, 57, 65, 66, 72, 76, 78, 87,
	93, 102, 110, 111, 113, 112, 114, 115, 116, 127,
	131, 135, 139, 140, 144, 147, 151, 169, 171, 184,
	188, 189, 205, 208, 211, 224, 237, 242, 244, 264,
	268, 275, 283, 284, 333, 338, 344, 348, 349, 353,
	354, 374, 390, 407, 431, 456, 463, 481, 498, 504,
	513, 519, 521, 528, 536, 537, 545, 547, 555, 562,
	563, 564, 565, -541, 77, 2, -480, 217, 2, -303,
	217, -480, -306, 2, -283, 2, -296, -602, -520, -524,
	511, 161, 419, 8, 2, -322, 217, -300, -302, -306,
	-304, 2, 2, 2, 2, -311, 2, -529, 217, 2,
	28, 28, 556, 392, 244, 519, 606, -371, -314, -315,
	-520, -364, -269, 603, -444, 2, -138, -121, 2, 184,
	-444, 217, 2, -138, 217, 2, -444, 217, 2, -138,
	217, 2, -269, 2, -608, 2, -532, 217, -528, 10,
	-527, 5, 4, -535, -539, -536, 217, -269, 2, 295,
	2, 2, 526, 2, 98, 504, 119, 2, 423, -628,
	444, 530, 2, 2, 2, 2, 2, 2, 2, 504,
	-288, 2, -269, 184, 488, -311, 217, -312, 2, 457,
	-639, 404, -529, 217, 2, 556, -304, 217, 2, -304,
	233, 246, -283, 217, 2, 509, 507, 509, 507, 189,
	2, 244, 2, 244, 2, -481, 2, -482, -476, -483,
	599, 349, -491, 2, -490, -527, 552, -109, 601, -109,
	601, 461, 601, -532, -300, -300, -444, 2, -138, -121,
	2, -444, 2, -138, 2, -269, 2, -135, -532, -134,
	601, 189, -269, 2, -444, 2, -138, -121, 2, -444,
	2, -138, 2, -219, 184, 2, 120, 504, -194, 2,
	184, 547, 2, 8, 2, 224, -532, 452, 399, 176,
	2, 466, 2, 467, 74, -418, 571, 74, 189, 2,
	189, 2, -401, 2, 565, 392, 189, 2, 2, -592,
	2, 348, 189, 2, 189, 2, 189, 2, 189, 2,
	189, 2, -193, 462, 524, 503, 396, 252, 2, -138,
	562, -121, 252, 251, -444, 562, 2, -613, 184, 450,
	-444, 2, 522, 261, 159, 189, -401, 2, 189, 2,
	189, 2, 5, 2, 397, 486, 2, 250, 391, 486,
	2, -300, 504, 556, 457, 120, 28, 2, 449, 2,
	2, 88, 89, 189, 2, 189, 2, 204, 189, 2,
	189, 504, -382, 603, 571, 2, -393, -480, -430, -431,
	-430, 519, -358, -360, -194, 466, 2, -231, -391, -233,
	184, -421, -422, -234, 275, 171, 344, -235, -400, 28,
	139, -400, -400, 60, 602, 602, 11, 12, 76, 41,
	592, 593, 594, 595, 182, 596, 597, 590, 591, 589,
	582, 583, 587, 256, 257, 95, 586, 584, 86, 289,
	443, 172, 173, 174, 175, 420, 231, 34, 232, 14,
	15, 16, -325, 33, 353, 274, 572, 221, 470, 585,
	17, 18, 19, 247, 249, 335, 50, 224, -277, 364,
	-324, 501, 67, -444, -444, -444, -444, -444, -444, -444,
	-444, 360, 601, -387, -439, 599, -226, 601, 601, 601,
	601, -520, -226, -444, -458, 602, -378, 601, -226, -458,
	-453, 601, 441, 599, 601, -461, -444, 5, 5, 5,
	601, 603, -573, 566, 184, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 601, 601,
	601, 387, -502, 601, -501, 601, -501, -501, 557, -499,
	601, 574, 567, 601, -499, 601, 601, 601, 601, 601,
	601, 601, 601, 601, 601, 601, 601, 601, 557, 606,
	-570, -354, 601, -383, -485, -444, 594, -383, -383, 348,
	-375, -444, 106, -404, 253, 314, 190, 271, 435, 238,
	-441, 605, -441, -469, 574, -226, -477, -299, -226, -479,
	601, -475, -469, -110, -520, -93, -106, -115, -138, -153,
	-198, -199, 594, -300, 601, 189, 601, 603, -524, 189,
	-364, -283, -310, -269, -300, -316, -317, -322, -294, -269,
	2, 138, -375, -588, 531, 451, 28, 457, -530, -272,
	38, -455, -494, -495, -544, 605, -543, -497, -507, -503,
	-506, 377, 381, -526, 54, 553, -509, 243, 4, -535,
	-537, 240, 241, 478, 51, 401, 179, 126, 125, 341,
	56, 515, 516, 517, 518, 194, 195, 58, 554, 490,
	69, 70, -588, 531, 451, 28, 457, -530, 184, -530,
	2, 2, 154, 2, 2, 2, -269, -247, 606, 64,
	428, 154, -373, 217, -247, 154, -247, 154, -323, 217,
	-322, -247, 154, -247, 606, 154, -247, 606, 154, 603,
	606, 154, -530, 2, -417, -523, -375, 38, -431, 2,
	127, 4, 5, -642, 606, 273, -328, 288, 332, 213,
	349, 569, 342, 131, -531, 5, 4, -454, -466, 127,
	281, 243, -514, -516, 8, -515, 9, -517, 592, 593,
	-522, -521, 109, 603, -524, -244, 421, 464, 363, -243,
	24, 29, 143, 235, 318, 550, 160, -340, 236, -337,
	367, 154, 482, 540, -602, -603, 448, 511, 161, 419,
	90, 342, 464, 363, 421, 154, -397, -399, 38, 118,
	318, 362, 61, 227, 293, 294, 484, 559, 154, 464,
	363, 421, 363, -13, -258, 24, 143, -260, -255, 464,
	-603, 99, 421, 578, 426, 373, 496, 390, -603, 269,
	-620, 331, 561, -602, -246, 482, 540, -602, -603, 448,
	421, -245, -342, -337, 367, 154, 605, 24, 143, 421,
	464, 363, -624, -625, 29, 421, 363, -596, -290, -567,
	224, 565, 154, -290, -290, -480, 217, -617, 184, 2,
	-610, -134, 265, 5, 10, -532, -134, -371, 606, 606,
	-524, 594, 450, 449, 154, 154, 154, 154, 252, 184,
	333, 333, 2, 2, 2, 2, 2, 191, -605, -629,
	2, 2, -300, 217, -356, 348, -591, -372, 504, -300,
	184, 333, 43, -303, 217, 2, -306, 556, -596, 333,
	-305, 217, -300, 38, 601, 333, 2, -417, 2, 233,
	-567, 333, -481, -319, -300, -476, -319, 464, -293, 38,
	-441, -300, 602, 606, -491, -491, -532, -207, 565, 189,
	601, -219, 565, 565, 252, -488, 606, -487, 224, -533,
	-532, -135, -532, 424, 252, -532, -591, -283, 2, -300,
	2, 504, 254, -532, -207, 224, -532, -532, -532, -523,
	28, 467, 2, -193, 462, 524, 89, 467, 2, -300,
	504, 120, 233, 80, -617, 184, 2, -269, -594, 184,
	-589, 436, 451, 531, -588, -300, 120, -300, 120, -300,
	120, -300, -300, 2, 2, 2, 2, 2, 85, 2,
	-138, -444, 2, 85, 2, 46, 483, -613, 184, 2,
	522, 2, 522, 2, -269, -269, -269, 485, 273, -300,
	-300, -300, -301, -306, 452, 505, 532, 450, -444, 2,
	-631, 2, 189, 184, 2, 504, 233, 504, 233, 120,
	189, 74, 120, 28, 504, 447, 603, 4, -247, 606,
	-273, -231, -391, -523, -392, -391, -232, -231, -234, 184,
	400, 541, 318, 468, 258, -422, -421, 28, -444, -426,
	178, 317, -444, -424, -446, 592, 593, -515, -517, -374,
	342, -225, -225, -225, -361, -471, -444, 390, 233, -496,
	-494, -494, -298, -524, 515, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, -444, -444, -444, -444, -444, -444, -444, -444, -444,
	-444, 274, 221, 470, 50, 224, -444, 519, -444, -444,
	-444, -444, 311, 333, 338, 528, 169, 538, 139, 342,
	-645, 498, 40, -451, -226, -379, 601, -465, 35, 481,
	28, -458, 601, 2, -439, -444, -440, -326, -324, -269,
	592, 593, 594, 595, 596, 597, 582, 583, 584, 14,
	15, 16, 587, 591, 589, 590, 182, 95, 586, 289,
	443, 86, 172, 173, 174, 175, 256, 257, 17, 18,
	19, 34, 585, -376, -375, -375, 602, 555, 28, 139,
	594, 2, 602, 606, 38, 602, -444, -376, -457, -453,
	-375, -464, -463, 562, -412, -413, 570, 298, 123, 215,
	296, -414, 455, -518, 8, -524, 594, -574, 177, 208,
	601, 602, 2, 602, 2, 602, -444, 2, 602, -444,
	2, 602, -444, 2, 602, -444, 2, 602, 2, 602,
	2, -444, -444, -444, -444, -444, -444, -444, -375, 8,
	-518, -518, 515, 515, -518, -518, -518, -510, 377, 378,
	379, 380, 276, 277, 278, 279, 381, 382, 383, 384,
	303, 304, 305, 306, 299, 300, 301, 302, 307, 308,
	309, 310, 199, 200, 201, 202, 195, 196, 197, 198,
	-510, -406, 2, -512, -375, 4, 570, 298, 123, 215,
	296, 455, 5, -406, 2, -407, 2, -444, -375, -408,
	-445, -446, 592, 593, 585, -325, -458, -409, 2, -444,
	-376, -444, 57, 268, 521, -410, -444, 189, -375, -375,
	2, -375, 2, -571, 38, -375, -367, 606, 189, 38,
	4, -367, -367, 601, 602, 606, -405, 212, 292, 287,
	246, -405, -475, -404, 253, -402, 358, -402, -402, -469,
	-284, 599, 607, -524, -469, -468, -467, 38, -293, 355,
	-469, -469, 603, 602, -468, 600, -586, 601, 604, 604,
	604, 604, 604, -300, 601, -375, -524, 603, 487, 2,
	602, 247, 247, 247, 247, 247, 348, 442, 602, 519,
	-590, -309, -313, 505, 2, 565, -108, 350, 602, 606,
	-366, 37, 599, 603, -518, 2, 2, -513, 557, 601,
	601, -413, 601, 189, -590, -313, 505, 2, -365, 519,
	-269, 2, -300, -373, -247, 154, -373, -373, -247, 606,
	154, -283, -304, -309, -311, -313, -269, -529, -530, -247,
	-305, -621, 602, 523, -432, -327, 400, 480, 422, 459,
	500, 8, 9, 8, 9, 606, -524, 606, -622, 93,
	519, 78, 451, -262, 282, 519, -435, 217, 78, -545,
	93, -286, -546, -269, 72, 537, 390, 188, 152, -622,
	93, 390, -622, 93, 2, 235, 93, 464, 485, 28,
	60, -480, 41, 41, 28, -620, 331, 269, 189, 571,
	504, 233, 451, 519, 519, -480, -399, -494, 118, 293,
	294, 60, -519, -514, 592, 593, -519, 60, -519, -519,
	-519, 565, -303, -480, 451, 519, 519, 519, 410, 410,
	-255, -151, 519, 519, 28, -194, 429, 127, -643, 584,
	410, 519, 189, 189, 269, -620, 331, 606, 41, 41,
	28, -620, 331, 269, 189, 519, -322, -284, 551, 42,
	551, 42, 551, 519, 42, 451, 519, 606, 42, 519,
	519, -13, 464, -597, -274, 105, 324, 286, 325, 97,
	321, 96, 320, 103, 322, 104, 323, 558, 336, 63,
	319, 297, 326, -275, -276, 369, 549, 120, -529, -13,
	-13, 464, 363, 421, 154, -618, 224, 28, -607, 224,
	-488, 224, -488, -314, -269, 603, -138, -444, -444, -138,
	-444, -138, 46, 154, 154, 2, -639, 262, 601, -331,
	333, 189, -364, -489, 244, 606, -372, -588, 154, -529,
	-398, -397, 333, -305, 217, 2, 154, -354, 333, 148,
	601, 398, 2, 154, -285, 217, -270, -269, -417, -249,
	508, 154, -395, 547, -427, -138, 601, 127, 38, -427,
	-384, -385, -486, -386, -286, 601, -293, -441, -109, -490,
	602, 602, 602, -206, 352, -205, -269, 5, -219, -355,
	-287, -286, 119, 402, 402, -213, 565, -134, -135, 602,
	606, -488, 224, 488, -207, -207, -488, -488, -300, 184,
	-532, -207, -207, -207, 2, 2, 2, 2, -401, -300,
	-283, -322, -300, 28, 603, -530, -530, -313, -309, -401,
	-283, -401, -283, -401, -283, -401, -401, -138, -444, 485,
	2, 461, 184, 184, 603, -401, -357, 431, 2, 398,
	120, 504, 367, 233, -300, -322, -300, -322, -283, 120,
	-283, 121, -300, 4, -480, -392, -232, 349, 258, 468,
	-424, -425, -446, 441, 442, -425, 441, 442, 8, 9,
	8, 9, -236, 472, 337, -373, 606, -241, 39, 135,
	258, -300, 571, 150, -444, -444, 519, -645, 498, -451,
	150, -444, 311, 338, 528, 169, 538, 139, 342, 189,
	601, -445, -445, 602, -377, -444, -444, 600, 609, 602,
	603, 602, -360, 606, -358, -444, -375, -375, 602, 603,
	-375, -364, 600, 600, 606, 602, -462, -463, 144, -444,
	519, 519, 519, 519, 601, 602, 603, -579, 359, 601,
	601, -444, 602, 602, 602, 602, 38, 606, 606, 606,
	602, 606, 606, 606, 602, 602, 602, 606, 602, 571,
	571, 602, 602, 602, 602, 606, 602, 606, 602, 189,
	602, 602, -415, 374, 602, 11, 12, 592, 593, 594,
	595, 182, 596, 597, 590, 591, 589, 582, 583, 584,
	86, 289, 443, 14, 15, 16, -325, 247, 224, -445,
	-445, -445, -445, 602, -449, -450, 189, 184, 38, -410,
	-410, -410, 602, 189, -375, 602, 602, 601, -572, 291,
	333, 602, -438, -437, 563, -485, -368, 2, -475, -295,
	-524, -438, -438, -375, -444, 253, 253, -403, 547, 348,
	-405, -475, -468, -520, -443, -442, 186, 39, 135, 327,
	328, 329, 220, 187, -468, -293, -354, -468, -468, -524,
	-469, -469, -467, 602, -587, -520, 602, -369, -478, -566,
	-360, 603, -524, -216, -567, -195, 5, 338, -195, -195,
	-195, -195, -300, -530, 519, 519, 224, 25, 375, -494,
	599, 600, 8, -524, 601, -518, -518, -518, -530, 189,
	189, 224, 189, -529, 2, -247, -373, -247, -247, -322,
	-323, -247, -247, -247, -396, 565, -521, -431, 535, 83,
	400, 515, -521, -243, 421, -286, -286, -300, -310, 203,
	411, -529, 333, -435, 217, -248, 333, 217, -294, -494,
	601, -419, 567, 258, 258, 547, -286, -294, 258, 217,
	-286, 217, -294, 2, -294, -598, 400, 343, -444, 60,
	-338, 280, 398, 334, -244, 421, 464, 363, -138, -138,
	-138, -138, -138, 601, -621, 547, 138, -300, -322, -300,
	-310, -529, -305, 464, 363, 421, 330, -316, -519, -519,
	-397, 464, 363, 421, -310, -529, -303, -529, -254, 217,
	-269, -254, 217, 451, -283, 410, 571, 45, -643, -520,
	-520, -520, 519, 189, 189, -245, -138, -138, -138, -138,
	-138, 601, -284, -246, 421, 5, 217, -286, 5, -286,
	217, 5, -269, -286, -310, -529, -625, 24, 143, -286,
	-310, -529, -274, -532, 338, 543, -283, -596, -290, 451,
	519, 519, -480, -614, -615, 205, 434, 451, 437, -530,
	-134, -210, 565, -134, -204, 228, 594, -593, -532, -269,
	556, -269, -329, -332, -330, -286, -436, -435, -549, -550,
	-545, 274, 233, 537, 246, 170, 93, -222, -223, 567,
	565, 154, -320, -300, 599, -207, -532, -300, -489, -311,
	-312, 154, -354, 333, -529, 38, 154, 601, 2, 2,
	-304, 348, 333, -285, 217, -250, 145, -643, -283, -438,
	-368, -394, -429, 431, 348, -355, 552, -293, -394, -370,
	606, 189, 584, 603, -355, -484, 594, -109, -109, -207,
	606, 601, 584, 584, 601, -532, 602, 606, 603, 601,
	584, 584, -215, 352, -214, 146, 260, 245, 474, 475,
	476, 477, 137, 473, 124, 316, -488, -532, -213, -135,
	189, 189, -68, 565, 504, -207, 605, 437, -269, -401,
	-401, -401, 461, 461, -269, -364, -296, -283, -300, -297,
	-322, 184, 184, -283, 541, -425, 349, 285, -471, -242,
	573, -300, 605, -444, -444, 150, 150, -444, -445, -445,
	-444, 150, 189, 601, -444, -455, 33, 33, 602, 606,
	-440, -444, -324, 602, 555, -360, -360, 602, 594, -524,
	605, 602, -453, 147, -444, 513, 298, 215, 296, -414,
	296, -414, -414, -518, 5, -524, 594, -580, -289, 601,
	-269, 563, -359, 354, 602, -496, -494, -444, -444, -444,
	-444, -444, -518, -499, -499, -514, -514, -444, -449, -444,
	-496, -494, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, -445, -445, -445, -445, -445, -445, -445, -445,
	-445, -445, 139, 333, 342, -445, -450, -449, -444, -444,
	-494, 602, 602, 602, -375, -108, 601, 291, -388, 208,
	-444, -488, 606, -388, -388, 602, -475, -475, 601, -444,
	253, 600, 606, 608, 584, 584, -354, 603, -467, -468,
	600, 602, 606, 602, 606, -428, 38, 602, -524, -438,
	-218, -217, 136, 53, 107, 134, 338, 247, -530, -530,
	451, 351, 5, 8, 599, 600, 603, -518, 602, 602,
	602, -530, -530, 451, -530, -247, -247, 119, 318, -444,
	519, 519, 60, 224, 154, 333, 549, 333, -546, 152,
	-551, -444, 601, 233, 601, 601, 2, -238, -239, -240,
	143, 464, 24, -623, 2, 547, 154, -247, 154, -247,
	569, -338, 601, 601, 519, 451, -262, 519, 565, -375,
	-444, -208, 127, -523, -603, 605, -603, 605, 451, 519,
	519, 451, 519, 519, 333, 154, 565, 168, 168, 571,
	-254, 184, 519, 519, -520, -520, -520, 565, -375, 519,
	-498, 48, 26, 333, -304, -247, 154, 519, 519, 531,
	464, -532, 338, -13, -310, -529, -305, 464, 363, 421,
	-595, -365, -595, 205, -313, -618, -488, -212, 352, -211,
	146, 433, 137, 260, 229, -488, -210, 189, 244, 565,
	-305, 2, 602, 602, 606, 606, -552, -248, -300, -285,
	233, 233, -292, -270, 38, 346, 346, 601, -300, -89,
	565, -487, -520, -599, 565, 43, -303, 38, 154, -596,
	-138, -305, -492, -493, 5, 38, -300, 154, 348, 333,
	-251, 267, -643, -528, -567, -360, -394, -383, 334, 91,
	602, -438, -385, -368, -444, 2, 602, -205, -206, -532,
	-532, -532, -207, -219, -287, 2, -533, -532, -532, 606,
	601, 584, 584, 584, 584, 584, -213, -488, -134, -138,
	352, -300, 594, -401, -344, -343, 367, 342, -344, 441,
	441, 349, 178, 263, -241, -284, -444, -444, 150, 33,
	33, -444, -444, -455, 602, -444, -444, -375, 600, 5,
	-444, 602, 602, 8, -444, 602, 603, -581, -269, -444,
	602, 60, 602, 602, 606, 606, 602, 602, 602, 602,
	602, 602, 602, -450, 189, 139, 342, 601, 602, 602,
	-108, -452, 211, 60, -475, -452, -452, -403, -364, -475,
	-442, -284, 599, -284, 599, -524, -520, -478, 601, 603,
	-217, 584, -532, -532, -195, 565, -313, 600, 2, 599,
	-524, 602, -313, 119, -286, -286, 504, 441, -254, 390,
	-435, 154, 154, -553, 93, -555, 76, 170, 102, 333,
	338, 537, 390, 72, 127, 348, 407, -633, -634, -635,
	38, 576, 577, 602, -362, -472, -566, 601, -269, -362,
	-364, 333, 493, 127, 348, 333, 127, 348, 560, 119,
	2, 531, 79, -286, -294, -364, -364, -300, -310, -529,
	162, 602, 606, 584, 2, 594, 594, -310, -529, -305,
	-310, -529, -303, 154, -254, 365, 168, -138, -520, -520,
	519, 519, 162, 602, -284, 5, 5, 154, -281, 76,
	-286, 5, -286, -304, 119, 451, 519, 519, 348, 348,
	351, -614, -615, -210, 606, 601, 584, 584, 584, -210,
	-533, -134, 2, -354, -345, 235, -286, -550, -547, -548,
	390, -436, -554, -556, 170, 390, -333, 601, -285, -270,
	601, -138, 2, -221, -220, -269, 5, 601, -331, 352,
	600, -601, 352, -600, 117, 137, -529, -398, -138, -305,
	-354, 602, 606, 148, -420, 547, -284, -300, 154, -252,
	266, -643, -528, -249, -423, -421, 140, 601, 348, -138,
	-360, 584, 602, 602, 119, 602, -214, -215, -532, -134,
	-532, -532, -532, -213, -488, -69, -70, 233, 93, 372,
	-297, 504, 233, 601, 601, -241, -444, -444, -444, 602,
	-360, -524, 594, -575, 367, 602, -471, -444, -444, -445,
	189, 601, -455, 602, -576, 564, -444, -389, -390, -444,
	439, 108, 209, -576, -576, 602, -520, -520, 2, -532,
	2, 519, 599, 2, 189, 224, 38, 410, -435, -294,
	-294, -298, -291, -269, 170, 217, 338, 560, -419, 258,
	601, -445, 541, -300, 601, 2, 216, 216, 30, 60,
	-636, 131, 237, 602, 606, -473, -280, -269, -444, -473,
	602, 602, 338, 541, 338, 560, -444, 541, -494, 601,
	-247, -247, 602, 602, -444, 519, -523, 100, -521, 2,
	-603, -254, -283, 184, 184, -520, -520, -444, 519, 5,
	-247, -298, -247, -247, -281, 531, -310, -529, -305, -619,
	505, 458, 532, 452, 192, 440, -619, 184, -211, -212,
	-532, -134, -134, -210, 38, -339, -340, 2, -552, 258,
	-291, 258, 226, 153, -362, 601, 601, -364, -632, 565,
	602, 606, 584, 584, -329, -222, -90, -91, 520, -487,
	606, 601, 584, -354, 38, 5, 601, 601, -269, 348,
	601, -284, -264, 92, -643, -528, -250, -394, 334, -364,
	93, -423, -451, -207, 601, -207, 602, 606, 28, 601,
	28, 601, -300, -322, -375, -375, 602, -360, 60, 606,
	602, 602, -445, -455, 602, -577, -578, -289, 606, 601,
	601, 465, 600, 600, -530, 2, -530, -254, 390, -269,
	-546, -555, -291, 333, 547, -444, -445, -271, 601, -444,
	601, 601, 38, 127, 237, 132, 222, -434, -637, 101,
	494, 225, -472, -241, 602, -433, 547, 407, -445, -281,
	-362, 601, 601, 601, 584, 189, -138, -138, 601, -498,
	-247, -304, 519, 2, 2, 189, -595, 602, -609, 405,
	-138, -222, 601, -334, 81, 94, 128, 216, 193, 234,
	485, 491, 28, -334, 602, -362, -362, 602, -335, 348,
	119, 318, -220, -521, -521, 602, 38, -91, 9, -600,
	-601, -444, 38, -138, -492, -362, -300, -362, 348, -256,
	-255, 275, -528, -251, 602, -294, -394, -533, -70, -364,
	-364, 602, 602, -582, 398, 442, 210, -375, -361, 602,
	606, 38, -390, 2, 2, 2, 410, -248, 154, 212,
	602, -557, 290, -269, 602, -398, -398, 38, 132, 222,
	-341, -337, 601, -242, -473, 212, -300, -604, 547, 602,
	-347, -346, -343, -349, -348, -343, -375, -521, 100, 365,
	-375, -281, -530, -530, 348, -611, 190, -610, 5, 10,
	-335, -363, -474, -286, -433, 602, 602, 82, 119, -345,
	-138, 602, -138, 602, 602, -420, 602, -300, -253, -534,
	410, 412, -643, -252, -438, 602, 602, 602, 602, -583,
	-584, 50, 534, 109, -444, -583, -583, -578, -580, 170,
	565, -558, -561, -560, 581, 471, 190, 366, 602, 493,
	559, 602, 602, -636, -364, 565, -354, -444, -433, 602,
	606, 552, 602, 606, 552, 602, 189, 602, -247, -616,
	565, -247, -619, -209, 565, 46, -263, -262, 602, 606,
	-434, -433, -341, 389, 133, 143, -339, -632, -433, 601,
	-434, 601, -261, -260, -643, -514, -264, 140, -207, -585,
	152, -584, 386, 183, 441, 386, 183, -585, -585, -291,
	55, -560, 581, -561, 581, 541, 133, -438, 602, 55,
	-557, -346, 224, -348, 189, 365, 205, 189, 449, -610,
	30, -474, -341, -434, -223, 565, 442, 442, 2, -222,
	-335, -434, -362, -341, -362, -257, -258, -259, -364, -256,
	334, 541, 109, 208, 514, 318, 33, 584, -559, 318,
	428, 64, 464, -559, 584, -558, 601, 601, 351, -530,
	352, -223, -341, -438, 2, -335, -341, 602, -223, 602,
	-253, 464, 441, 356, -584, -444, 23, 338, 127, -444,
	-636, -375, -375, -247, -206, 601, -438, -223, -263, -223,
	-433, -438, -434, -261, -384, 602, 602, -206, -438, -438,
	-434, -341, -257, -438, -336, -337, 519, 602, -341, -223,
	601, -223, -438, -375, -438, 602, -336,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 566, 567, 569, 570, 571, 573,
	574, 576, 578, 580, 581, 582, 584, 585, 587, 588,
	589, 590, 591, 593, 595, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	662, 664, 0, 1432, 1434, 1436, 1438, 0, 818, 0,
	36, 37, 39, 0, -2, 345, 347, 349, 351, 0,
	382, 384, 385, 387, 389, 390, 391, 393, -2, 0,
	499, 500, 502, 504, -2, 0, 1032, 1034, 1036, 0,
	651, 653, 0, 1039, 1041, 1043, 0, 0, 674, 675,
	0, 1543, -2, 666, 668, 670, 672, 743, 745, 747,
	749, 751, 753, 755, 757, 759, 761, 762, 764, 766,
	768, 770, 772, 773, 775, 777, 779, 780, 782, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 809, -2, 812, 813, 814, -2, -2, 0,
	-2, -2, -2, 1450, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 443, 445, 447, 449, 451, 454,
	456, 458, 1601, 506, 508, 510, 512, 514, 516, 518,
	0, -2, 1615, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 111, 112, 113, 114,
	115, 116, 117, 118, 75, 76, 77, 79, 80, 81,
	82, 86, 87, 88, 89, 90, 91, 92, 93, 94,
	95, 107, 108, 109, 73, 0, 0, 1574, 1576, 1578,
	1580, -2, 0, 0, 5, 9, 11, 13, 15, 17,
	19, 21, 23, 25, 27, 29, 568, 572, 575, 577,
	579, 583, 586, 592, 594, 596, 551, 552, 555, 2313,
	2331, 2332, 2333, 2336, 2337, 2338, 2339, 2340, 2341, 2798,
	2879, 2880, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740,
	2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750,
	2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760,
	2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770,
	2771, 2772, 2773, 2774, 2775, 2776, 2777, 553, 554, 1221,
	0, 620, 618, 2298, 621, 2594, 623, 625, 493, 494,
	495, 496, 497, 498, 0, 644, 634, 1613, 645, 647,
	648, 649, 650, 615, 613, 0, 644, 2367, 642, 1430,
	1431, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 505,
	0, 0, 0, 0, -2, 0, 0, 0, 0, 0,
	0, 0, 422, 1279, 1280, 1281, 1415, 1416, 2642, 1457,
	0, 245, 663, -2, -2, 2763, -2, 697, 698, -2,
	-2, 712, 716, 707, 2767, 0, 2645, 2629, -2, 719,
	1433, 1435, 1437, 816, 817, 2317, 0, 0, 0, 0,
	0, 38, 40, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 253, 255, -2, -2, -2, -2, 0, 0, 2690,
	2419, 2266, 2333, 2269, 2264, 346, 348, 350, 352, 353,
	0, 0, 0, 0, 0, 0, 0, 383, 386, 388,
	392, -2, 394, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, -2, 0, 0, 0,
	0, 0, 0, 0, 0, 1103, 1095, 1096, 1337, 0,
	0, 0, -2, 501, 503, 556, 557, 0, 1602, 1602,
	564, 565, -2, 0, 0, 0, 0, 316, 306, 1033,
	1035, 1037, 1038, 0, 0, 0, 0, 0, 652, 654,
	0, 0, 285, 1040, 1042, 1044, 1045, 0, 0, 0,
	0, 0, 0, 318, 0, 0, 667, 669, 671, 673,
	744, 746, 748, 750, 752, 754, 756, 758, 760, 763,
	765, 767, 769, 771, 774, 776, 778, 781, 784, 786,
	788, 790, 792, 794, 796, 798, 800, 802, 804, 806,
	808, 810, 811, 824, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, -2, 0, -2, -2, -2, 0,
	0, 0, 0, 0, 0, 0, -2, 0, 0, 926,
	0, 0, 0, -2, -2, -2, 0, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 0, -2, 1013, 0,
	0, 827, 830, 831, 832, 833, 834, 835, 0, 899,
	924, 925, 935, 815, 0, 1261, 1603, 1459, 1440, 1454,
	1459, 1442, 1443, 1444, 1445, 1446, 1451, 1453, 1447, 1448,
	1449, 42, 44, 46, 48, 50, 52, 54, 56, 58,
	60, 444, 446, 448, 450, 452, 455, 457, 459, -2,
	1572, 1573, 507, 509, 511, 513, 515, 517, 519, 655,
	0, 657, 0, 829, -2, 0, 1607, 1607, 1607, 0,
	0, 1573, 1571, 0, 660, 661, 723, 724, 1880, 0,
	0, 0, 0, 0, 0, 0, 0, 2140, 1968, 0,
	725, -2, 2001, 2003, 2738, 2567, 2763, 2139, 2005, 2006,
	2007, 2008, 2009, 0, 2011, 2012, 2013, 2014, 2015, 2016,
	0, 2018, 0, 2023, 2024, 2025, 0, 2745, 2243, 2327,
	-2, 0, 0, 2751, 2323, 0, 2106, 2041, -2, -2,
	2350, 2329, 1812, 1813, 1814, 1815, 1816, -2, -2, 2781,
	2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054,
	2055, 0, 2726, 2746, 2747, 2752, 2754, 2748, 2735, 2066,
	2433, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, 1839, 1848, -2, -2, -2, -2,
	-2, -2, -2, 2739, 2740, 2757, 2760, 2766, 2771, 2772,
	2744, 2753, 2780, 2782, 2783, 2784, 2785, 2786, 2787, 2788,
	2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 1840,
	-2, -2, -2, -2, 1590, 2608, 1593, 1221, 1591, 1575,
	1577, 0, 1579, 0, 0, 0, 1584, 1610, 1608, 0,
	1659, 1588, 1589, 1682, 1682, 1706, 0, 1687, 0, 1706,
	1602, 1733, 0, 1693, 2634, 2042, 2043, 0, 2333, 2328,
	-2, -2, 2778, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 616, 0, 622, 624, 0, 0, 0,
	643, 1612, 0, 0, 0, 0, 0, 0, 0, 425,
	426, 427, 428, 429, 2746, 0, 0, 0, 434, 0,
	436, 437, 438, 439, 440, 441, 442, 215, 2746, 524,
	549, 0, 215, 2746, 527, 215, 2746, 530, 0, 533,
	1335, 215, 2746, 536, 2294, 215, 2746, 539, 541, 2302,
	215, 2746, 545, 2309, 2307, 546, 0, 548, 235, 231,
	232, 233, 234, 1426, 1427, 1428, 1429, 0, 1456, 1336,
	665, 0, 691, 0, 695, 696, 2734, -2, 0, 2654,
	700, 701, -2, 703, 1460, 1464, 1465, 1466, 1467, 1468,
	0, 0, 0, 0, 1473, 0, 0, 0, 0, 692,
	693, 710, 711, 717, 720, 0, 819, 820, 821, 822,
	823, 72, 0, 2746, 1733, 74, 0, 2288, 2358, 2359,
	2360, 2361, 2362, 2779, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834,
	2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844,
	2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854,
	2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864,
	2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874,
	2875, 2876, 2877, 2878, 2781, 78, 0, 2746, 83, 0,
	2746, 0, -2, 96, 0, 110, 0, 136, 0, 2291,
	-2, -2, -2, 2284, 119, 0, 2746, 0, 2263, -2,
	0, 227, 307, 308, 309, 0, 1070, -2, 0, 1273,
	1275, 1275, 0, -2, 0, 0, 0, 1023, 2260, 2265,
	1024, 1025, 2270, 0, 354, 355, 356, 357, 358, 0,
	359, 2746, 361, 362, 0, 364, 365, 2746, 367, 368,
	0, 370, 0, 372, 0, 267, 271, 2746, 319, 320,
	2346, 2347, 2354, 2355, 2356, 2357, 2746, 396, 398, 0,
	400, 401, 0, 403, 0, 0, 0, 407, -2, 423,
	0, 420, 410, 411, 413, 414, 415, 416, 417, 0,
	463, 461, 2299, 0, 0, -2, 2746, 0, 1067, 0,
	0, 1315, -2, 0, 1266, 0, 1322, 2746, 1318, 0,
	-2, 0, 1600, 2746, 1477, 1099, 1100, 1101, 1102, 1745,
	490, 0, 1508, 0, 1510, 0, 1529, 1739, 1682, 0,
	0, 1744, 0, -2, 609, 2316, -2, 559, 0, 560,
	0, -2, 0, 333, 0, 0, 1048, 1050, 1051, 1053,
	1054, 1057, 1058, 1059, 1060, 0, 1062, 1719, 286, 288,
	0, 0, 0, 1047, 1417, 1418, 1419, 1420, 1421, 1422,
	1423, 1424, 1425, 0, 0, 676, 0, 0, 825, 826,
	0, 0, 842, 843, 844, 0, 333, 2646, 2603, 2454,
	851, 0, 854, 857, -2, 0, 0, 0, 0, 861,
	0, 866, 867, 868, 0, -2, 0, 875, 877, 1031,
	879, 0, 0, 881, 0, 885, 0, 888, 0, 890,
	0, 892, -2, -2, -2, 900, 901, -2, 906, -2,
	0, 910, -2, 0, 913, 0, 916, -2, 0, 926,
	922, 923, 0, 0, 0, 0, 943, 944, 0, 953,
	0, 956, 957, 958, 0, 962, 963, 0, 965, 966,
	967, 968, 0, 2717, 2651, 2419, 0, 976, -2, 982,
	984, 0, -2, 0, 1000, 0, 1004, 0, 0, 1012,
	0, 0, 828, 0, 836, 837, 215, 1737, 1439, -2,
	1441, 0, -2, 0, 656, 0, 659, 1632, 1558, 1555,
	0, 1629, 1630, 1559, 0, 0, 0, 1566, 0, 1605,
	1606, 0, 0, 0, 1545, 1546, 0, 0, 0, 0,
	2145, 2146, 2147, 2148, 2161, 2149, 2150, 2160, 2158, 2159,
	2151, 2152, 2157, 2171, 2172, 2162, 2163, 2153, 2166, 2164,
	2165, 2167, 2168, 2169, 2170, 0, 0, 2176, 0, 2154,
	2155, 2156, 2184, 0, 0, 2185, 0, 2187, 0, 2177,
	2173, 2174, 2175, 0, 1947, 1949, 2251, 0, 0, 0,
	2183, 2178, 2179, 1885, 1886, 1887, 1888, 1889, 1922, 1926,
	1927, 0, 0, 2002, 2248, 2247, 2004, 0, 0, 2199,
	0, 2017, -2, 0, 2140, 2194, 0, 0, 2026, 2027,
	2028, 0, 0, 2199, 0, 0, 2242, 2038, 2039, 1877,
	0, 0, 2108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1825, 0, 1827, 0, 1828, 1829, 1836, 1849,
	0, 0, 0, 0, 1853, 0, 0, 0, 0, 0,
	0, 0, 2223, -2, 0, 0, 0, 0, 1841, 0,
	1592, 0, 0, 1663, 2252, 2256, 2257, 1663, 1663, 0,
	0, 2200, 1730, 1730, 0, 0, 1725, 1725, 1725, 1723,
	1706, 0, 1706, 1716, 0, 1706, 1706, 0, -2, 1687,
	0, 0, 1716, 0, 1700, 597, 599, 601, 603, 604,
	605, 607, 1734, 1735, 0, 0, 0, 0, 2334, 0,
	0, 0, 0, 2306, 0, 0, 2319, 0, 0, 2293,
	379, 0, 0, 0, 2700, 2645, 0, -2, 627, 646,
	1602, 0, 2202, 1760, 1764, 0, 1766, 1767, 1768, 1769,
	1770, 0, 0, 1761, -2, 1837, 1839, 1860, 2351, 2352,
	2353, 1820, 1821, 1822, 1823, 1824, 1832, 1819, 1819, 1819,
	1830, 1859, 1851, 1859, 1855, 1805, 1806, 1807, 1842, 1843,
	1844, 1845, 0, 2700, 2645, 0, -2, 636, 0, 0,
	1540, 424, 0, 431, 432, 433, 0, 520, 0, 213,
	214, 0, 215, 2746, 525, 0, 528, 0, 215, 2746,
	2258, 534, 0, 537, 0, 0, 543, 0, 0, 0,
	0, 0, 215, 1542, 0, 0, 0, 0, -2, 705,
	713, 714, 715, 0, 1462, 0, 1469, 734, 735, 736,
	1471, 1472, 0, 1474, 708, 737, 738, 739, 740, 741,
	742, 0, 2272, 2273, 2274, 2275, 2278, 2279, 0, 0,
	706, 727, 709, 0, 721, 120, 1412, 0, 0, 170,
	0, 1412, 1412, 0, 0, 0, 0, 198, 0, 1133,
	0, 0, 0, 0, 136, 155, 166, 132, 133, 134,
	0, 0, 0, 0, 0, 0, 84, 1243, 0, 1246,
	0, 0, 0, 0, 0, 0, 0, 1259, 0, 0,
	0, 0, 0, 98, 99, 0, 0, 104, 105, 0,
	154, 0, 0, 0, 0, 0, 1505, 0, 143, 0,
	0, 0, 135, 136, 122, 0, 0, 136, 156, 168,
	0, 202, 204, 1130, 0, 0, 0, 0, 0, 0,
	0, 0, 226, 237, 0, 0, 0, 1267, 0, 0,
	0, 1599, 0, 0, 0, 0, 2746, 1410, 0, 1395,
	0, 1719, 2503, -2, -2, 286, 1719, 1022, 0, 0,
	2334, 2268, 0, 0, 0, 0, 0, 0, 371, 0,
	0, 0, 399, 402, 404, 405, 406, 0, 1314, 0,
	412, 453, 1192, 2746, 0, 0, 480, 475, 0, 477,
	0, 0, 0, 1242, 2746, 1240, 2303, 0, 1264, 0,
	1221, 2746, 2301, 0, 0, 0, 1323, 2343, 1332, 1336,
	1495, 0, 492, 0, 1511, 1513, 0, 0, 1740, 0,
	1742, 1682, 1602, 0, 0, 0, 0, 311, 0, 0,
	0, 0, 0, 0, 1061, 292, 0, 1718, 0, 0,
	321, 1719, 286, 2620, 1046, 333, 333, 1719, 678, 1719,
	680, 0, 0, 845, 846, 0, 333, 333, 333, 852,
	853, 855, 856, -2, -2, -2, -2, 858, 859, 950,
	0, 0, 0, 949, 869, 0, 871, 874, 878, 0,
	1016, 2629, 2645, 2700, 1029, 950, 2419, 950, 2419, 950,
	2419, 950, 950, 894, 938, 946, 905, 912, 0, 907,
	911, 914, 917, 0, 919, 927, 0, -2, 0, 930,
	0, 932, 0, 934, 950, 951, 954, 961, 964, 969,
	970, 971, 972, 2314, 973, 974, 975, -2, 979, 980,
	0, 991, 996, 997, 993, 0, 0, 0, 0, 0,
	0, 1007, 1008, 0, 0, 1015, 0, 838, 1260, 0,
	1452, 1632, 1558, 658, 1549, 1631, 1550, 1557, 1560, 0,
	0, 1562, 0, 1564, 0, 1627, 1628, 1635, 1636, 0,
	1646, 1647, 1639, 0, -2, 0, 0, 1642, 1643, 1568,
	0, 1585, 1586, 1587, 1616, 1619, 1351, 0, 2879, 1881,
	1755, 1882, 1883, 2287, 0, 1890, 1891, 1892, 1893, 1894,
	1895, 1896, 1897, 1898, 1899, -2, -2, -2, -2, -2,
	-2, -2, -2, 1908, 1909, 1910, 1911, 1912, 1913, 1914,
	1915, 1916, 1917, 1918, -2, -2, -2, 1923, 1924, 1925,
	-2, 2186, 2188, 0, 2251, 0, -2, 0, -2, -2,
	-2, -2, 1944, 0, 1946, 1951, 1953, 1955, 0, 0,
	0, 0, 2250, 1965, 2234, 2235, 0, 0, 2142, 2143,
	2144, 1950, 0, 1969, 2249, 2246, 0, 0, 2180, 0,
	2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154,
	2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164,
	2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174,
	2175, 2176, 2177, 0, 2198, 1615, 2030, 0, 0, 0,
	0, 2037, 2022, 2196, 0, 2195, 0, 0, 0, 2206,
	0, 2241, 2237, 0, 2285, 1876, 1863, 1864, 1865, 1866,
	1867, 1868, 1878, 0, 2282, 2320, 2326, 2116, 0, 0,
	0, 2067, 2068, 2069, 2070, 2071, 0, 2073, 2074, 0,
	2076, 2077, 0, 2079, 2080, 0, 2082, 2083, 2084, 2085,
	2086, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1773, 1774,
	1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784,
	1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794,
	1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804,
	0, 0, 2088, 0, 2209, -2, -2, -2, -2, -2,
	-2, -2, -2, 0, 2090, 0, 2092, 2200, 2220, 0,
	0, 1970, 0, 0, 0, 0, 2140, 0, 2095, 2200,
	2228, 0, 0, 0, 0, 0, 2200, 0, 2233, 0,
	2102, 0, 2104, 1594, 0, 0, 1750, 0, 0, 0,
	2255, 1750, 1750, 0, 1658, 0, 0, 1726, 1727, 1728,
	1729, 0, 0, 1730, 0, 1720, 1724, 1721, 1722, 1716,
	1679, 0, 0, 2289, 1716, 1685, 1715, 0, 1221, 1705,
	1716, 1716, 0, -2, 1689, 1706, 0, 0, 598, 600,
	602, 606, 608, 0, 0, 1615, -2, 0, -2, 335,
	1220, 0, 0, 0, 0, 0, 0, 617, 619, 0,
	0, 540, 0, 0, 633, 0, 611, 0, 614, 0,
	1751, 1754, 0, 0, 1765, 1771, 1772, 0, -2, 0,
	0, 1861, 0, 0, 0, 0, 0, 641, 0, 0,
	0, 435, 550, 215, 522, 0, 215, 215, 531, 0,
	0, 215, 542, 215, 2310, 215, 2308, 236, 547, 1541,
	248, 0, 694, 0, 1461, 1470, 0, 731, 0, 733,
	0, 2276, 2280, 2277, 2281, 0, 722, 0, 0, 0,
	0, 1411, 0, 1358, 0, 0, 174, 2746, 0, 217,
	0, 0, 1185, 2295, 0, 1175, 0, 0, 2440, 0,
	0, 0, 0, 0, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 129, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1244, 1245, 1247, 1254,
	1256, 0, 1250, 2283, 0, 0, 1251, 0, 1253, 1255,
	1257, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	106, 1276, 0, 0, 1277, 1278, 1483, 1484, 0, 1504,
	1505, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	131, 0, 0, 0, 0, 0, 0, 2262, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1269, 0, 1310, 1308, 1288, 1289, 1290, 1291, 1292,
	1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302,
	1303, 1304, 1305, 1306, 1307, 0, 0, 0, -2, 1271,
	1272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	258, 0, 324, 2261, 2271, 0, 1055, 1056, 360, 363,
	366, 369, 254, 0, 0, 408, 0, 0, 1105, 1080,
	0, 0, 462, 333, 0, 0, 476, 480, 2312, 1065,
	1238, 1241, 0, 1221, 2746, 1287, 0, 0, 0, 0,
	0, 0, 1321, 0, 0, 2746, 2290, 2342, 2343, 1497,
	1505, 0, 1750, 0, 1527, 1514, 0, 0, 0, 1527,
	1531, 1532, 1534, 1535, 0, 0, 1741, 1747, 558, 610,
	1602, 1602, 333, 331, 2570, 329, 326, 328, 0, 0,
	1517, 1519, 0, 0, 0, 280, 0, 289, 1719, 287,
	0, 292, 0, 0, 0, 474, 677, 682, 840, 0,
	333, 848, 849, 850, 896, 940, 948, 995, 860, 862,
	863, 864, 0, 0, 0, 1030, 1026, 1027, 1028, 880,
	950, 883, 950, 886, 950, 889, 891, 909, 915, 928,
	921, 929, 0, 0, 0, 942, 959, 0, 978, 0,
	0, 0, 0, 0, 0, 0, 1001, 1002, 1003, 1005,
	1010, 1009, 1014, 839, 1738, 1553, 1554, 1556, 0, 1565,
	0, 0, 1641, -2, -2, 1640, 1644, 1645, -2, -2,
	-2, -2, 1561, 0, 1570, 1567, 0, 1626, 1349, 1350,
	0, 0, 0, 0, -2, -2, 0, 0, 0, 1966,
	0, -2, 1945, 1948, 1952, 1954, 1956, 0, 0, 0,
	0, 0, 0, 2189, 0, 2191, 1967, 2244, 2247, 2182,
	0, 2138, 0, 0, 1614, 1615, 1615, 0, 2036, 0,
	2197, 0, 2204, 2205, 0, 2029, 0, 2238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2040, 0, 0,
	0, 0, 2072, 2075, 2078, 2081, 0, 0, 0, 0,
	2061, 0, 0, 0, 2065, 1831, 1817, 0, 1859, 1857,
	1858, 1852, 1859, 1856, 1809, 0, 1808, 0, 2087, 0,
	2089, 2091, 0, 0, 2093, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1973,
	1974, 1975, 1995, 2094, 2226, 2227, 0, 0, 0, 0,
	0, 0, 2100, 0, 2232, 2101, 2103, 1602, 0, 1595,
	0, 1660, 1649, 1749, 0, 2253, 1719, 1662, 1664, 2254,
	2292, 1649, 1649, 0, 2201, 0, 0, 1710, 0, 0,
	0, 1712, 1683, 0, 0, 1677, 0, 1668, 1669, 1670,
	1671, 1672, 1673, 1674, 1684, 1221, 1714, 1686, 1690, 2320,
	0, 1716, 0, 1701, 0, 1703, 1736, 0, 1695, 1698,
	0, 0, 2335, 1750, 0, 373, 380, 381, 374, 375,
	376, 377, 0, 626, 0, 0, 0, 0, 0, 2203,
	0, 1756, 0, 1762, 0, 0, 0, 0, 635, 0,
	0, 0, 0, 1539, 430, 521, 215, 526, 529, 2259,
	215, 535, 538, 544, 244, 0, 690, -2, 729, 730,
	732, 0, 728, 171, 1412, 0, 0, 1354, 1356, 1360,
	1366, 1369, 0, 176, 2746, 188, 0, 2746, 0, 1149,
	0, 0, 0, 0, 0, 0, 1414, 0, 0, 2746,
	215, 2746, 215, 192, 194, 197, 0, 201, 199, 0,
	1137, 0, 0, 1140, 121, 1412, 0, 0, 124, 128,
	137, 138, 141, 0, 0, 0, 153, 0, 0, 0,
	1371, 1375, 1383, 0, 0, 0, 1248, 1249, 1252, 1258,
	85, 0, 0, 0, 1379, 1381, 1387, 97, 100, 2746,
	2304, 102, 2746, 0, 1353, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 203, 126, 130, 139, 140,
	142, 0, 1389, 123, 0, 230, 0, 0, 220, 215,
	2746, 0, 222, 0, 223, 224, 238, 0, 0, 0,
	1068, 1069, 1309, 1262, 1263, 0, 1274, 1268, 0, 0,
	0, 0, 0, 1391, 1392, 0, 0, 0, 1410, 1407,
	1719, 250, 0, 1719, 258, 0, 2267, 0, 272, 395,
	0, 0, 0, 0, 1104, 1203, 1106, 1108, 1109, 1110,
	217, 0, 2343, 1175, 2492, 2343, 0, 0, 1075, 0,
	0, 0, 468, 464, 0, 473, 479, 478, 484, -2,
	0, 0, 0, 0, -2, 0, 0, 1325, 1319, 1320,
	0, 0, 0, 0, 2746, 1499, 1505, 0, 1600, 1615,
	491, 1506, 1527, 0, 0, 0, 1516, 1512, 1509, 1750,
	0, 0, 0, 0, 0, 1743, 1746, 561, 562, 310,
	0, 0, 0, 0, 0, 333, 0, 0, 0, 0,
	0, 0, 290, 0, 293, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 0, 0, 292, 322, 282, 1719,
	0, 0, 679, 0, 0, 847, 0, 870, 873, 882,
	884, 887, 931, 933, 950, 960, 985, 986, 1127, 0,
	1127, 0, 0, 1006, 1563, 0, 1638, 1569, 1620, 1621,
	0, 1351, 0, 1884, 1929, 0, 0, -2, 0, 0,
	1933, 0, 0, 0, -2, 0, 0, 0, 2190, 2192,
	0, 2246, 2181, 2031, 0, 0, 0, 2035, 2019, 2020,
	0, 2141, 2207, 2236, 2240, 0, 1869, 1870, 1871, 1872,
	1873, 1874, 1875, 0, 2286, 2321, 2325, 2114, 2115, 2119,
	2300, 0, 0, 0, 2044, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 1854, 0, 0, 2208, 2219, 2221,
	1971, 1972, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983,
	1984, 1985, -2, -2, -2, 1989, 1990, 1991, -2, -2,
	-2, 1996, 0, 0, 0, 2222, 2224, 2225, 2229, 2230,
	0, 2097, 2098, 2099, 2231, 0, 1602, 1596, 1657, 0,
	1748, 1661, 0, 1657, 1657, 1609, 1708, 0, 0, 1732,
	0, 1680, 0, 1681, 0, 0, 1713, 0, 1688, 1691,
	1692, 1702, 0, 1694, 0, 1697, 0, 2031, -2, 334,
	336, 338, 0, 341, 342, 0, 0, 0, 629, 630,
	0, 628, 612, 0, 0, 1758, 0, 0, 1834, 1838,
	1862, 638, 639, 0, 637, 523, 532, 246, 0, 1717,
	0, 0, 0, 0, 0, 0, 216, 0, 1184, 0,
	1147, 0, 0, 1174, 0, 0, 1190, 178, 179, 180,
	0, 0, 0, 0, 190, 0, 0, 186, 0, 196,
	200, 1134, 0, 0, 0, 0, 1359, 0, 0, 0,
	150, 151, 152, 0, 157, 0, 158, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1489, 1490, 0,
	1480, 0, 0, 0, 145, 0, 0, 0, 0, 0,
	218, 0, 0, 0, 1348, 240, 0, 0, 0, 0,
	0, 1312, 1313, 1270, 1372, 1376, 1384, 0, 0, 0,
	0, 644, 0, 649, 1409, 0, 258, 256, 0, 259,
	0, 262, 263, 0, 0, 258, 252, 0, 0, 0,
	1221, 409, 1078, 1191, 0, 0, 1193, 1111, 1115, 0,
	2343, 2343, 0, 2297, 0, 1076, 0, 0, 1192, 460,
	0, 467, 0, 481, 0, 0, 1242, 0, 0, 1265,
	1285, 1221, 0, 1324, 1326, 0, 1334, 0, 0, 0,
	1501, 1505, 0, 1494, 1495, 1634, 1507, 1525, -2, 0,
	0, 1615, 1533, 1530, 1536, 1537, 0, 330, 0, 325,
	327, 0, 313, 0, 1518, 1520, 0, 1049, 1052, 0,
	0, 0, 0, 0, 0, 0, 281, 292, 1719, 317,
	0, 841, 865, 941, 987, 1126, 0, 0, 989, 0,
	0, 1637, 1624, 1625, 1622, 1351, 1931, 1935, 0, 0,
	0, 1937, -2, 0, 1959, -2, -2, 2193, 2245, 2010,
	1615, 2032, 2034, 2021, 2239, 1879, 0, 2121, 2118, 0,
	2105, 0, 2056, 2057, 0, 0, 2060, 2062, 2063, 2064,
	1818, 1811, 1810, 2218, 0, 0, 0, 0, 2096, 1597,
	0, 2110, 0, 0, 1665, 2110, 2110, 1709, 0, 1711,
	1678, 1666, 0, 1675, 0, 2321, 1704, 1696, 0, 0,
	339, 0, 343, 344, 378, 0, 0, 1752, 1757, 0,
	1763, 1833, 0, 247, 172, 173, 1363, 1367, 1364, 0,
	175, 0, 0, 1148, 0, 1151, 0, 0, 0, 0,
	1158, 1175, 0, 0, 0, 0, 0, 0, 1177, 0,
	1176, 0, 0, 1207, 0, 1339, 1346, 0, -2, 0,
	0, 0, 182, 206, 0, 0, 0, 0, 209, 1413,
	184, 0, 0, 215, 215, 0, 0, 1355, 1357, 1370,
	0, 0, 0, 0, 160, 0, 0, 1373, 1377, 1385,
	1380, 1382, 1388, 0, 103, 0, 1491, 144, 0, 0,
	0, 0, 0, 0, 1390, 228, 229, 0, 215, 0,
	215, 221, 215, 1348, 0, 0, 0, 0, 0, 0,
	0, 1393, 1394, 249, 0, 0, 0, 0, 0, 251,
	323, 258, 397, 0, 1136, 0, 1203, 1195, 1196, 1197,
	0, 1107, 1202, 1204, 0, 0, 1112, 0, 0, 0,
	0, 1092, 1077, 0, 1088, 0, 0, 1105, 1080, 0,
	465, 482, 0, 485, 0, 488, 1066, 1239, 1282, 1221,
	0, 1316, 0, 0, 0, 0, 0, 0, 0, 1503,
	1505, 0, 1496, 1497, 1527, 1633, 0, 0, 0, 1515,
	1634, 0, 332, 333, 0, 333, 294, 0, 295, 296,
	297, 304, 305, 283, 284, 681, 683, 0, 0, 689,
	1125, 0, 0, 0, 0, 1623, 1939, -2, -2, 1960,
	0, 2322, 2324, 1615, 0, 2107, 1617, 0, 0, -2,
	0, 0, 0, 1598, 1581, 0, 1656, 1648, 1650, 1652,
	2632, 2414, 2745, 1582, 1583, 1731, 0, 0, 1699, 340,
	631, 0, 0, 1759, 0, 0, 0, 1365, 177, 0,
	0, 1152, 1153, 2296, 1155, 0, 1157, 1159, 1160, 1161,
	0, 1164, 0, 2345, 0, 1169, 1172, 1173, 0, 0,
	1186, 1208, 0, 1217, 0, 1341, 1351, 1345, 0, 1343,
	1219, 0, 181, 208, 183, 210, 205, 0, 1348, 0,
	185, 195, 0, 0, 125, 0, 0, 2408, 163, 161,
	159, 101, 1352, 0, 0, 147, 149, 127, 0, 230,
	239, 1347, 241, 225, 215, 0, 1374, 1378, 1386, 0,
	1401, 1402, 1403, 1404, 0, 0, 0, 0, 260, 0,
	261, 264, 265, 0, 0, 1080, 1135, 1079, 1194, 0,
	1205, 1206, 0, 0, 0, 0, 0, 0, 1082, 0,
	1081, 0, 0, 0, 0, 0, 466, 469, 0, 472,
	0, 0, 0, 0, 0, 1327, 1325, 0, 1333, 0,
	0, 0, 1479, 0, 0, 1498, 1499, 489, 1521, 0,
	0, 1527, 1538, 312, 0, 315, 291, 0, 685, 0,
	687, 0, 988, 990, 0, 0, 2033, 2125, 0, 0,
	2058, 2059, -2, 0, 1999, 2109, 2111, 0, 0, 0,
	0, 0, 1667, 1676, 632, 1753, 640, 1361, 0, 1368,
	217, 1150, 1154, 0, 0, 0, 1165, 1225, 0, 0,
	1242, 1242, 1178, 0, 0, 1211, 1212, 1132, 0, 1213,
	1214, 1215, 1340, 1626, 1346, 1188, 0, 0, 207, 212,
	0, 0, 0, 0, 0, 0, 146, 148, 0, 219,
	242, 1348, 0, 1405, 1406, 0, 0, 257, 276, 0,
	1283, 1082, 0, 1113, 1116, 1117, 1118, 1119, 1120, 1121,
	1122, 1123, 1124, 1114, 1219, 0, 0, 1183, 1090, 0,
	1093, 0, 1089, 1086, 1087, 1078, 0, 470, 471, 486,
	0, 487, 0, 1286, 0, 0, 1334, 0, 0, 1486,
	1478, 1505, 1500, 1501, 1750, 1524, 1528, 0, 684, 0,
	0, 998, 999, 0, 0, 0, 0, 2120, 1618, 2000,
	0, 0, 1651, 1653, 1654, 1655, 1362, 189, 0, 0,
	1163, 1230, 0, 0, 0, 0, 0, 1179, 1209, 1210,
	1207, 1131, 0, 1344, 1342, 0, 1221, 187, 0, 1219,
	0, 1141, 0, 0, 1144, 0, 0, 164, 2408, 162,
	0, 215, 1398, 215, 0, 279, 0, 270, 268, 269,
	1074, 0, 1199, 1201, 1217, 1219, 1132, 0, 1094, 1136,
	1092, 483, 1284, 1317, 1219, 0, 1217, 0, 1493, 1505,
	1487, 1488, 0, 1503, 0, 333, 686, 688, 2117, 2137,
	2126, -2, 2703, 2415, 0, 2137, 2137, 2112, 2113, 0,
	0, 1166, 1226, 1227, 0, 1222, 1223, 1224, 2344, 1167,
	1168, 1170, 1171, 1750, 0, 0, 1225, 211, 193, 1138,
	0, 0, 1139, 0, 0, 167, 0, 169, 243, 1396,
	0, 1399, 0, 266, 0, 0, 1071, 1073, 1198, 0,
	1132, 1217, 1080, 0, 0, 0, 1080, 1082, 1217, 0,
	1132, 0, 1482, 1492, 0, 1502, 1479, 0, 314, 2122,
	0, 0, 2128, 2129, 2130, 2131, 2132, 2123, 2124, 1156,
	0, 1228, 0, 1229, 0, 0, 0, 1187, 1216, 0,
	1230, 1142, 0, 1145, 0, 165, 0, 0, 0, 274,
	275, 1200, 1080, 1132, 1750, 0, 1083, 0, 1085, 1082,
	1091, 1132, 0, 1080, 0, 1475, 1481, 1485, 2305, 1486,
	1522, 0, 0, 2134, 2135, 0, 0, 0, 1231, 0,
	1234, 1235, 0, 1232, 0, 1207, 0, 0, 1397, 215,
	0, 1750, 1080, 1182, 1084, 1074, 1080, 1219, 1750, 1217,
	1493, 0, 2133, 2136, 2127, 1162, 1233, 1236, 1237, 1218,
	1189, 0, 0, 1400, 277, 0, 1180, 1750, 1072, 1750,
	1217, 1330, 1132, 1482, 1750, 1129, 0, 0, 1181, 1328,
	1132, 1080, 1476, 1523, 1143, 1128, 0, 278, 1080, 1750,
	0, 1750, 1331, 0, 1329, 1129, 1146,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 590, 3, 596, 591, 3,
	601, 602, 594, 592, 606, 593, 603, 595, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 609, 3,
	582, 584, 583, 587, 605, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 599, 3, 600, 597, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 607, 589, 608, 585,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 586,
	57925, 588, 57926, 598, 57927, 604, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1480
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1491
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1492
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1507
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1522
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1523
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1590
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1616
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1630
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1649
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1653
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1657
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1687
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1691
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1698
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1710
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1720
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1727
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1737
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1744
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1754
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1763
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1770
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1800
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1832
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1836
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1840
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1846
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1850
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1856
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1865
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1876
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1880
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1886
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1894
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 130:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1904
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 131:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1908
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1918
		{
		}
	case 136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1919
		{
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1932
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1944
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1949
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1956
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1968
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1975
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 144:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[8].union.slct(),
				ToStoreID:         sqlDollar[6].union.int64(),
				RelocateLease:     true,
				RelocateNonVoters: false,
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:1992
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				ToStoreID:         sqlDollar[7].union.int64(),
				RelocateLease:     true,
				RelocateNonVoters: false,
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[10].union.slct(),
				FromStoreID:       sqlDollar[6].union.int64(),
				ToStoreID:         sqlDollar[8].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: false,
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2015
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				FromStoreID:       sqlDollar[7].union.int64(),
				ToStoreID:         sqlDollar[9].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: false,
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2027
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:              sqlDollar[10].union.slct(),
				FromStoreID:       sqlDollar[6].union.int64(),
				ToStoreID:         sqlDollar[8].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: true,
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2037
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{tree.NewDInt(tree.DInt(sqlDollar[3].union.int64()))}}},
				},
				FromStoreID:       sqlDollar[7].union.int64(),
				ToStoreID:         sqlDollar[9].union.int64(),
				RelocateLease:     false,
				RelocateNonVoters: true,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2051
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2056
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2060
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2065
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2071
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 155:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2079
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 156:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2090
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 157:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2100
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 158:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2110
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 159:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2119
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 160:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2130
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 161:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2136
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 162:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2144
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2152
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 165:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2156
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2162
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2167
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2178
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2182
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2188
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2192
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 172:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2199
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2204
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2209
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2214
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2219
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2224
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2229
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2234
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2239
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2244
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2249
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2254
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2258
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2263
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2272
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2284
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2294
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2302
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2315
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 192:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2321
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 193:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2335
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2342
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2351
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2360
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2365
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2372
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2381
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2385
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2389
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2395
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2403
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2407
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2413
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2417
		{
			sqlVAL.union.val = nil
		}
	case 209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2423
		{
			sqlVAL.union.val = true
		}
	case 210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2427
		{
			sqlVAL.union.val = false
		}
	case 211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2433
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 212:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2437
		{
			sqlVAL.union.val = nil
		}
	case 213:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2444
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2452
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 216:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 218:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2487
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2498
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2509
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 221:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2518
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2528
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2537
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2546
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2555
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 226:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2559
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2562
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2566
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2586
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2600
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2606
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2618
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2646
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2650
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2658
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 249:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2701
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2713
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2723
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2743
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 254:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2747
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2751
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 257:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2763
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2767
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 260:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2778
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2787
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2791
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2795
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2799
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2803
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2885
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2896
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2901
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2905
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 270:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2915
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2921
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2946
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 277:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2952
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 278:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2956
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = nil
		}
	case 280:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3022
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3039
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3043
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3053
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3064
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3068
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3072
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3092
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3096
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3100
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3104
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3108
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3112
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3116
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3124
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3132
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3138
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 307:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3144
		{
			return unimplemented(sqllex, "alter function")
		}
	case 308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3148
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3152
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 310:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3189
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3194
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3198
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3209
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3214
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3218
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 317:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3238
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 319:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3242
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3246
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 324:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3274
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3278
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3302
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3306
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3310
		{
			sqlVAL.union.val = nil
		}
	case 334:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3322
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3336
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3352
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3356
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3364
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3368
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3372
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3376
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3388
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3389
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 350:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3390
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3391
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3392
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3410
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3412
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3416
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3446
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3452
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3465
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3488
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3491
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3506
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3510
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3514
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3518
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3531
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3536
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3539
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 380:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3543
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3548
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3560
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3562
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3563
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3566
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3567
		{
		}
	case 394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3568
		{
			return helpWith(sqllex, "CREATE")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3575
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 397:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3582
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplemented(sqllex, "create access method")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplemented(sqllex, "create cast")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 405:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 406:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3594
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3595
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3596
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			return unimplemented(sqllex, "create publication")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3598
		{
			return unimplemented(sqllex, "create rule")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3599
		{
			return unimplemented(sqllex, "create server")
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3600
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3601
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3602
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3603
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3606
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3607
		{
		}
	case 420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3610
		{
		}
	case 421:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3611
		{
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3614
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3615
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 432:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3627
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3628
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3629
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3630
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3632
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3633
		{
			return unimplemented(sqllex, "drop server")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3634
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3635
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3636
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3639
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3640
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3641
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3642
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3643
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3645
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3646
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3648
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 460:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3666
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3674
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3680
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3684
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3693
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3700
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3706
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3712
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3716
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3727
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3739
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3754
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 474:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3762
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3793
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 480:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3797
		{

			sqlVAL.union.val = nil
		}
	case 481:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3814
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3825
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 483:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3829
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3833
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3840
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3844
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3857
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3880
		{
			return helpWith(sqllex, "DELETE")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3883
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3884
		{
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3895
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3896
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3897
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 501:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3910
		{
		}
	case 505:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3911
		{
			return helpWith(sqllex, "DROP")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3914
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 509:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3915
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3916
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3917
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3918
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3919
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3920
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3945
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3953
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3961
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3965
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3968
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 528:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3976
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3980
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3983
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 531:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3991
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4000
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4008
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4016
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4031
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4038
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 538:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4046
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4053
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4063
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 543:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4076
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4099
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4103
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4106
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4110
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4115
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4128
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4133
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4140
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4144
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4167
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4174
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4176
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4184
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4192
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4200
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4208
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4219
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 568:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4230
		{
			return helpWith(sqllex, "DELETE")
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4232
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4233
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4234
		{
			return helpWith(sqllex, "INSERT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4242
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4247
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4248
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4249
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4254
		{
			return helpWith(sqllex, "DELETE")
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4255
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4256
		{
			return helpWith(sqllex, "INSERT")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4258
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4262
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4263
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4267
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4289
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4297
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4301
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4322
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4330
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4334
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4348
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4356
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4360
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4363
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4386
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4390
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4394
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4398
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 630:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4402
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4412
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4416
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4427
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4430
		{
			return helpWith(sqllex, "GRANT")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList()}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.roleSpecList(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.roleSpecList(),
			}
		}
	case 641:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4490
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4493
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4498
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4502
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 646:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 652:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			return helpWith(sqllex, "RESET")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4531
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4539
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4543
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4546
		{
			return helpWith(sqllex, "RESET")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4554
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4568
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4571
		{
			return helpWith(sqllex, "USE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4576
		{
		}
	case 665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4577
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4581
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4584
		{
			return helpWith(sqllex, "USE")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4600
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4615
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4618
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4636
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4648
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4652
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4658
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4668
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4672
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4676
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4680
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4695
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4698
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4708
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4727
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4729
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4732
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4749
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4754
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 703:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4774
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4776
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4779
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4783
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4802
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4806
		{
			return unimplemented(sqllex, "set from current")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4810
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 711:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4824
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4829
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 715:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4833
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4850
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4857
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4861
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4867
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4878
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4903
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4917
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4921
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = tree.Low
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.Normal
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = tree.High
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4950
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4954
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4958
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4967
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 744:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4982
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4983
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4984
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 750:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4985
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4986
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4987
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4988
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4989
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 760:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4992
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4993
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 767:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4994
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4995
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4996
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4998
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4999
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5000
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5002
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5004
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5005
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5006
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5007
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 796:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 806:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5017
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
		}
	case 817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5027
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5030
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5034
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5039
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5044
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5049
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 824:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5064
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5066
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5071
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5081
		{
			sqlVAL.str = "client_encoding"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5087
		{
			sqlVAL.str = "timezone"
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5096
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 840:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5112
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5116
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5120
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5131
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5139
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5147
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5153
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5161
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5170
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5179
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5188
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5196
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5210
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5213
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5215
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5218
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5220
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5224
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5227
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 860:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5235
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5238
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5254
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5258
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5269
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5283
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 871:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 872:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5299
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5318
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5341
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5349
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5357
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5360
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 882:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5370
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5373
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5375
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5379
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5382
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5390
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5393
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5398
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5406
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5409
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5411
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5414
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5418
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5420
		{
			sqlVAL.union.val = true
		}
	case 899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5422
		{
			sqlVAL.union.val = false
		}
	case 902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5443
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5447
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5450
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5451
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5452
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5458
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5462
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5466
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5469
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5471
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5479
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5487
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5496
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5506
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5512
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5520
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5522
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5528
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5536
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 926:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5542
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5546
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5550
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5564
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5566
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5569
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5571
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5575
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5578
		{
			sqlVAL.union.val = true
		}
	case 936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5579
		{
			sqlVAL.union.val = false
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5590
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5595
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5603
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5623
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5626
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5633
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5636
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 947:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5638
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5641
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = true
		}
	case 950:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5645
		{
			sqlVAL.union.val = false
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5652
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5656
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5666
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5673
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5680
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5684
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5688
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5695
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 961:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5699
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5713
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5721
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5726
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5731
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5751
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5756
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5761
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5766
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5771
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5775
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5779
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5782
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 977:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5795
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5800
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5808
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5811
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 983:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5819
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5822
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5832
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5836
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5840
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5848
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5856
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5863
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5869
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5871
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5874
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 994:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5876
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5879
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 997:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5883
		{
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5892
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5900
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5906
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5915
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5920
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5924
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5927
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5936
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5940
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5956
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5968
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5974
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5981
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5986
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5996
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6003
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6009
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6014
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6134
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6138
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6142
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6181
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6185
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6190
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6194
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6211
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6215
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6219
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6226
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6230
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6243
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6244
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6246
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6256
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6257
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6258
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6259
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6267
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6280
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6289
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6298
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6304
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6308
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6311
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6335
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6345
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6351
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6359
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6362
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6377
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6384
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6391
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6398
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6409
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6426
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6462
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6477
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6498
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6505
		{

			sqlVAL.union.val = nil
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6511
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6517
		{
			sqlVAL.str = ""
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6521
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = nil
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6536
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6540
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6544
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6548
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6554
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6558
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6564
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6568
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6574
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6587
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6601
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6602
		{
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6603
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6622
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6627
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6630
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6631
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6636
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6642
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6646
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6652
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6658
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6671
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6680
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6684
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6690
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6695
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6698
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6699
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6701
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6702
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6703
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6715
		{
			sqlVAL.str = ""
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6736
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6742
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6764
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6770
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6776
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6783
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6800
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6820
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6840
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6851
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6855
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6869
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6873
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6885
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6915
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6921
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6925
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6932
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6936
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6940
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6944
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6954
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6967
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6973
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6979
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6983
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6989
		{

			sqlVAL.union.val = true
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6994
		{
			sqlVAL.union.val = false
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6999
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7003
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7006
		{
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7049
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7061
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7066
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7072
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7079
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7091
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7102
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7113
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7124
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7130
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7140
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7151
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7155
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7162
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7168
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7179
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7183
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7195
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7199
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7220
		{
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7221
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7222
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7223
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7224
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7225
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7243
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7247
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7253
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7289
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7293
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7297
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7301
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7310
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7332
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7338
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7346
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7350
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7354
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7362
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7382
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7391
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7399
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7403
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7410
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7421
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7422
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7423
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7435
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7437
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7441
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7442
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7444
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7445
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7447
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7449
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7457
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7460
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7478
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7482
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7485
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7519
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7523
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7527
		{
			sqlVAL.str = ""
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7533
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7537
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7541
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = true
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7553
		{

			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7558
		{
			sqlVAL.union.val = false
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7568
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7582
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7594
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7606
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7616
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7626
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7630
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7634
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7638
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7642
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7646
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7654
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7662
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7674
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7678
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7694
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7698
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7706
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7710
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = nil
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7726
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7730
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7735
		{
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7745
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7753
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7761
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7763
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7765
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7767
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7769
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7771
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7775
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7779
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7785
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7789
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7806
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7823
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7841
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7857
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7873
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7877
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = false
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7898
		{
			sqlVAL.union.val = true
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7902
		{
			sqlVAL.union.val = false
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7908
		{
			sqlVAL.union.val = true
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7912
		{
			sqlVAL.union.val = false
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7918
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7922
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7937
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7943
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7951
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.str = ""
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7979
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7980
		{
			sqlVAL.str = ""
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7984
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7988
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7992
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7998
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8004
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8010
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8016
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8024
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8062
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8069
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8075
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8081
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8088
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8094
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8106
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8115
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8133
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8139
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8149
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8155
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8167
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8176
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8186
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8213
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8241
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8247
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8259
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8265
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8279
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8285
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8293
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8297
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8309
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8318
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8336
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8344
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			sqlVAL.union.val = true
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = false
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8369
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8377
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8388
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8396
		{
			sqlVAL.union.val = tree.Types
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8404
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8408
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8414
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8427
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8433
		{
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8436
		{
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8437
		{
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8448
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8466
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8472
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8488
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8496
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8498
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8504
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8517
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8525
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8527
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8533
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8541
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8544
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8548
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8549
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8550
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8566
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8569
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8574
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8584
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8587
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8589
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8592
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8601
		{
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8602
		{
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8603
		{
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8613
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8617
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8620
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8623
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8624
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8628
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8632
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8648
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8652
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8665
		{
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8667
		{
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8671
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8676
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8680
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8684
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8688
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8694
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8700
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8706
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8710
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8716
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8720
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8745
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8760
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.str = ""
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8777
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8783
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8788
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8795
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8805
		{

		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8812
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8816
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8820
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8829
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8839
		{
			sqlVAL.str = ""
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8845
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.str = ""
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8855
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8859
		{
			sqlVAL.str = ""
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8865
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8869
		{
			sqlVAL.str = ""
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8875
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8888
		{
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8889
		{
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8904
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8911
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8918
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8936
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8940
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8949
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8960
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8964
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8968
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8974
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8998
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9009
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9017
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9025
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9029
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9034
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9038
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9067
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9070
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9096
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9103
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9114
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9120
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9129
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9135
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9176
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9182
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9186
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9201
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9205
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9209
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9213
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9217
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9221
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9229
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9234
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9235
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9238
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9243
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9253
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9262
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9264
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9265
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9269
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9272
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9273
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9279
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9314
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9315
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9338
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9351
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9365
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9377
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9381
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9390
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9399
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9414
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9421
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9433
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9437
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9442
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9458
		{
			sqlVAL.union.val = true
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9462
		{
			sqlVAL.union.val = false
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9490
		{
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9491
		{
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9495
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9499
		{
			sqlVAL.union.val = nil
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9504
		{
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9505
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = true
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = false
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = false
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9523
		{
			sqlVAL.union.val = true
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9529
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9534
		{
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9535
		{
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9538
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9539
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9543
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9547
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9559
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9570
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9580
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9592
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9597
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9609
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9623
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9632
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9643
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9644
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9648
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9656
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9670
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9674
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9682
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9711
		{
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9712
		{
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9715
		{
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9716
		{
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9733
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9737
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9742
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9749
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9750
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9751
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9752
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9756
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9760
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9779
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9782
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9784
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9799
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9807
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9811
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9817
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9821
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9826
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9831
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9837
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9842
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9852
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9858
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9863
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9868
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9880
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9895
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9899
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9907
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9941
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9951
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9978
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9982
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9986
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9997
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10021
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10027
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10038
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10042
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10048
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10050
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10060
		{
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10062
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = nil
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10066
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10067
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = true
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10085
		{
			sqlVAL.union.val = false
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10105
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10109
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10131
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10142
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10148
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10155
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10161
		{
			sqlVAL.str = tree.AstFull
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10165
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10169
		{
			sqlVAL.str = tree.AstRight
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10173
		{
			sqlVAL.str = tree.AstInner
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10179
		{
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10180
		{
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10204
		{
			sqlVAL.str = tree.AstHash
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10208
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10212
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10216
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.str = ""
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10233
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10237
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10242
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10243
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10245
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10249
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10254
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10268
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10272
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10278
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10284
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10294
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = true
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = false
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = true
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = false
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10331
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10343
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10356
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10364
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10365
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10375
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10382
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10383
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10385
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10393
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10394
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10406
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10413
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10422
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10462
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10467
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10474
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10475
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10478
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10480
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10481
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10482
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10483
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10485
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10486
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10487
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10489
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10490
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10491
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10493
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10494
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10495
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10496
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10497
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10498
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10499
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10500
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10501
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10502
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10503
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10504
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10505
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10507
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10508
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10509
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10512
		{
			sqlVAL.union.val = types.Geography
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10513
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10514
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10524
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10532
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10558
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10566
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = nil
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10581
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10585
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10589
		{
			sqlVAL.union.val = types.Int2
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10593
		{
			sqlVAL.union.val = types.Int
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10597
		{
			sqlVAL.union.val = types.Float4
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = types.Float
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10609
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10617
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10625
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = types.Bool
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10639
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10652
		{
			sqlVAL.union.val = types.Float
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10658
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10664
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10672
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10676
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10680
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10686
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10698
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10704
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10708
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10712
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10716
		{
			sqlVAL.union.val = types.String
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10725
		{
			sqlVAL.union.val = true
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = false
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10731
		{
			sqlVAL.union.val = types.Date
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10735
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10743
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10755
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10757
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10766
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10774
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10787
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10791
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = true
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10802
		{
			sqlVAL.union.val = false
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10803
		{
			sqlVAL.union.val = false
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10807
		{
			sqlVAL.union.val = types.Interval
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10811
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10815
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10826
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10834
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10842
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10850
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10858
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10866
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10890
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10899
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10914
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10930
		{
			sqlVAL.union.val = nil
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10936
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10944
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10981
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10985
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10989
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10993
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11004
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11009
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11013
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11017
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11021
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11025
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11029
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11033
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11037
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11041
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11045
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11049
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11053
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11057
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11061
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11065
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11069
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11073
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11077
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11081
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11085
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11089
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11093
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11097
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11101
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11105
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11109
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11113
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11117
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11121
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11125
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11129
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11133
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11137
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11141
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11145
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11149
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11153
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11161
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11207
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11211
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11215
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11219
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11223
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11227
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11231
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11235
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11239
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11243
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11247
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11251
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11255
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11259
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11263
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11267
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11271
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11276
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11280
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11284
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11288
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11292
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11296
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11316
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11320
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11324
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11328
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11332
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11336
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11340
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11357
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11362
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11402
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11406
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11410
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11414
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11418
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11422
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11426
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11430
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11434
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11438
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11442
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11446
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11450
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11454
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11458
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11462
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11466
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11470
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11478
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11514
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11522
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11566
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11570
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11574
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11579
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11581
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11589
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11593
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11597
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11601
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11605
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11621
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11625
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11629
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11659
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11670
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11671
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11673
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11679
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11686
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11695
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11748
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11761
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11773
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11782
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11783
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11796
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11802
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11818
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11828
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11832
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11836
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11840
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11844
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11852
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11860
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11864
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11883
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11886
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11891
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11893
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11897
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11900
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11909
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11911
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11915
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11918
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11920
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11924
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11927
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11932
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11937
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11942
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11944
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11947
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11952
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11958
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11961
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11962
		{
			return unimplemented(sqllex, "treat")
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11964
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11976
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11980
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11983
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11988
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11994
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12004
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12019
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12025
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12029
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12035
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12043
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12047
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12078
		{
			sqlVAL.str = ""
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12094
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12118
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12124
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12137
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12165
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12169
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12173
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12177
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12193
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12197
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12201
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12205
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12223
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12234
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12246
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12272
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12273
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12275
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12277
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12278
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12279
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12280
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12281
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12283
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12285
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12286
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12287
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12288
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12290
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12291
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12292
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12295
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12296
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12297
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12299
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12300
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12301
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12303
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12304
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12305
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12310
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12326
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12333
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12334
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12335
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12373
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12377
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12388
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12398
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12409
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12415
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12445
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12449
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12455
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12459
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12482
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12496
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12503
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12507
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12528
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12532
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12536
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12540
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12546
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12558
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12572
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12584
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12591
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12595
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12607
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12611
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12635
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12641
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12645
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12650
		{
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12651
		{
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12655
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12659
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12665
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12674
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12678
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12682
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12700
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12704
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12723
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12731
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12754
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12763
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12767
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12775
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12781
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12785
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12804
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12816
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12820
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12829
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12840
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12849
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12857
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12874
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12959
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12967
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12971
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12977
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12981
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12989
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13016
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13023
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13031
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13045
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13049
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13053
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13066
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13093
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13106
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13113
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13138
		{
			sqlVAL.str = ""
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13144
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13148
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
