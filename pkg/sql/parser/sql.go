// Code generated by goyacc -p sql -o bazel-out/darwin_arm64-fastbuild/bin/pkg/sql/parser/sql.go sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import __yyfmt__ "fmt"

//line sql-gen.y:24

import (
	"fmt"
	"math"
	"strings"

	"go/constant"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/security/username"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgcode"
	"github.com/cockroachdb/cockroach/pkg/sql/pgwire/pgerror"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treebin"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treecmp"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree/treewindow"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case treebin.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case treecmp.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: treecmp.ComparisonOperator{
					Symbol:             treecmp.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case treebin.BinaryOperator:

		switch op.Symbol {
		case treebin.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case treebin.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case treecmp.ComparisonOperator:
		switch op.Symbol {
		case treecmp.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:168

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() username.SQLUsername {
	return u.val.(username.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *username.SQLUsername {
	return u.val.(*username.SQLUsername)
}
func (u *sqlSymUnion) users() []username.SQLUsername {
	return u.val.([]username.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) compositeTypeList() []tree.CompositeTypeElem {
	return u.val.([]tree.CompositeTypeElem)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colTableDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) colDef() tree.ColumnDef {
	return u.val.(tree.ColumnDef)
}
func (u *sqlSymUnion) colDefList() tree.ColumnDefList {
	return u.val.(tree.ColumnDefList)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) storageParamKeys() []tree.Name {
	if params, ok := u.val.([]tree.Name); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) tenantCapability() tree.TenantCapability {
	return u.val.(tree.TenantCapability)
}
func (u *sqlSymUnion) tenantCapabilities() []tree.TenantCapability {
	if capabilities, ok := u.val.([]tree.TenantCapability); ok {
		return capabilities
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) batch() *tree.Batch {
	if batch, ok := u.val.(*tree.Batch); ok {
		return batch
	}
	return nil
}
func (u *sqlSymUnion) batchParam() tree.BatchParam {
	return u.val.(tree.BatchParam)
}
func (u *sqlSymUnion) batchParams() []tree.BatchParam {
	return u.val.([]tree.BatchParam)
}
func (u *sqlSymUnion) superRegion() tree.SuperRegion {
	return u.val.(tree.SuperRegion)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) backupTargetList() tree.BackupTargetList {
	return u.val.(tree.BackupTargetList)
}
func (u *sqlSymUnion) backupTargetListPtr() *tree.BackupTargetList {
	return u.val.(*tree.BackupTargetList)
}
func (u *sqlSymUnion) grantTargetList() tree.GrantTargetList {
	return u.val.(tree.GrantTargetList)
}
func (u *sqlSymUnion) grantTargetListPtr() *tree.GrantTargetList {
	return u.val.(*tree.GrantTargetList)
}
func (u *sqlSymUnion) changefeedTargets() tree.ChangefeedTargets {
	return u.val.(tree.ChangefeedTargets)
}
func (u *sqlSymUnion) changefeedTarget() tree.ChangefeedTarget {
	return u.val.(tree.ChangefeedTarget)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() treewindow.WindowFrameExclusion {
	return u.val.(treewindow.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterChangefeedCmd() tree.AlterChangefeedCmd {
	return u.val.(tree.AlterChangefeedCmd)
}
func (u *sqlSymUnion) alterChangefeedCmds() tree.AlterChangefeedCmds {
	return u.val.(tree.AlterChangefeedCmds)
}
func (u *sqlSymUnion) backupKMS() tree.BackupKMS {
	return u.val.(tree.BackupKMS)
}
func (u *sqlSymUnion) alterBackupCmd() tree.AlterBackupCmd {
	return u.val.(tree.AlterBackupCmd)
}
func (u *sqlSymUnion) alterBackupCmds() tree.AlterBackupCmds {
	return u.val.(tree.AlterBackupCmds)
}
func (u *sqlSymUnion) alterBackupScheduleCmd() tree.AlterBackupScheduleCmd {
	return u.val.(tree.AlterBackupScheduleCmd)
}
func (u *sqlSymUnion) alterBackupScheduleCmds() tree.AlterBackupScheduleCmds {
	return u.val.(tree.AlterBackupScheduleCmds)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) indexInvisibility() tree.IndexInvisibility {
	return u.val.(tree.IndexInvisibility)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() treecmp.ComparisonOperator {
	return u.val.(treecmp.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) showJobOptions() *tree.ShowJobOptions {
	return u.val.(*tree.ShowJobOptions)
}
func (u *sqlSymUnion) showBackupDetails() tree.ShowBackupDetails {
	return u.val.(tree.ShowBackupDetails)
}
func (u *sqlSymUnion) showBackupOptions() *tree.ShowBackupOptions {
	return u.val.(*tree.ShowBackupOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) resolvableFuncRef() tree.ResolvableFunctionReference {
	return u.val.(tree.ResolvableFunctionReference)
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) scheduleLabelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}
func (u *sqlSymUnion) labelSpec() *tree.LabelSpec {
	return u.val.(*tree.LabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) targetObjectType() privilege.TargetObjectType {
	return u.val.(privilege.TargetObjectType)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}
func (u *sqlSymUnion) cursorSensitivity() tree.CursorSensitivity {
	return u.val.(tree.CursorSensitivity)
}
func (u *sqlSymUnion) cursorScrollOption() tree.CursorScrollOption {
	return u.val.(tree.CursorScrollOption)
}
func (u *sqlSymUnion) cursorStmt() tree.CursorStmt {
	return u.val.(tree.CursorStmt)
}
func (u *sqlSymUnion) asTenantClause() tree.TenantID {
	return u.val.(tree.TenantID)
}
func (u *sqlSymUnion) routineOptions() tree.RoutineOptions {
	return u.val.(tree.RoutineOptions)
}
func (u *sqlSymUnion) functionOption() tree.RoutineOption {
	return u.val.(tree.RoutineOption)
}
func (u *sqlSymUnion) routineParams() tree.RoutineParams {
	return u.val.(tree.RoutineParams)
}
func (u *sqlSymUnion) routineParam() tree.RoutineParam {
	return u.val.(tree.RoutineParam)
}
func (u *sqlSymUnion) routineParamClass() tree.RoutineParamClass {
	return u.val.(tree.RoutineParamClass)
}
func (u *sqlSymUnion) stmts() tree.Statements {
	return u.val.(tree.Statements)
}
func (u *sqlSymUnion) routineBody() *tree.RoutineBody {
	return u.val.(*tree.RoutineBody)
}
func (u *sqlSymUnion) functionObj() tree.RoutineObj {
	return u.val.(tree.RoutineObj)
}
func (u *sqlSymUnion) routineObjs() tree.RoutineObjs {
	return u.val.(tree.RoutineObjs)
}
func (u *sqlSymUnion) tenantReplicationOptions() *tree.TenantReplicationOptions {
	return u.val.(*tree.TenantReplicationOptions)
}
func (u *sqlSymUnion) showRangesOpts() *tree.ShowRangesOptions {
	return u.val.(*tree.ShowRangesOptions)
}
func (u *sqlSymUnion) tenantSpec() *tree.TenantSpec {
	return u.val.(*tree.TenantSpec)
}
func (u *sqlSymUnion) likeTenantSpec() *tree.LikeTenantSpec {
	return u.val.(*tree.LikeTenantSpec)
}
func (u *sqlSymUnion) cteMaterializeClause() tree.CTEMaterializeClause {
	return u.val.(tree.CTEMaterializeClause)
}
func (u *sqlSymUnion) showTenantOpts() tree.ShowTenantOptions {
	return u.val.(tree.ShowTenantOptions)
}
func (u *sqlSymUnion) showCreateFormatOption() tree.ShowCreateFormatOption {
	return u.val.(tree.ShowCreateFormatOption)
}
func (u *sqlSymUnion) beginTransaction() *tree.BeginTransaction {
	return u.val.(*tree.BeginTransaction)
}
func (u *sqlSymUnion) showFingerprintOptions() *tree.ShowFingerprintOptions {
	return u.val.(*tree.ShowFingerprintOptions)
}

//line sql-gen.y:1047
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = 57346
const SCONST = 57347
const BCONST = 57348
const BITCONST = 57349
const ICONST = 57350
const FCONST = 57351
const PLACEHOLDER = 57352
const TYPECAST = 57353
const TYPEANNOTATE = 57354
const DOT_DOT = 57355
const LESS_EQUALS = 57356
const GREATER_EQUALS = 57357
const NOT_EQUALS = 57358
const NOT_REGMATCH = 57359
const REGIMATCH = 57360
const NOT_REGIMATCH = 57361
const ERROR = 57362
const ABORT = 57363
const ABSOLUTE = 57364
const ACCESS = 57365
const ACTION = 57366
const ADD = 57367
const ADMIN = 57368
const AFTER = 57369
const AGGREGATE = 57370
const ALL = 57371
const ALTER = 57372
const ALWAYS = 57373
const ANALYSE = 57374
const ANALYZE = 57375
const AND = 57376
const AND_AND = 57377
const ANY = 57378
const ANNOTATE_TYPE = 57379
const ARRAY = 57380
const AS = 57381
const ASC = 57382
const AS_JSON = 57383
const AT_AT = 57384
const ASENSITIVE = 57385
const ASYMMETRIC = 57386
const AT = 57387
const ATOMIC = 57388
const ATTRIBUTE = 57389
const AUTHORIZATION = 57390
const AUTOMATIC = 57391
const AVAILABILITY = 57392
const BACKUP = 57393
const BACKUPS = 57394
const BACKWARD = 57395
const BATCH = 57396
const BEFORE = 57397
const BEGIN = 57398
const BETWEEN = 57399
const BIGINT = 57400
const BIGSERIAL = 57401
const BINARY = 57402
const BIT = 57403
const BUCKET_COUNT = 57404
const BOOLEAN = 57405
const BOTH = 57406
const BOX2D = 57407
const BUNDLE = 57408
const BY = 57409
const CACHE = 57410
const CALL = 57411
const CALLED = 57412
const CANCEL = 57413
const CANCELQUERY = 57414
const CAPABILITIES = 57415
const CAPABILITY = 57416
const CASCADE = 57417
const CASE = 57418
const CAST = 57419
const CBRT = 57420
const CHANGEFEED = 57421
const CHAR = 57422
const CHARACTER = 57423
const CHARACTERISTICS = 57424
const CHECK = 57425
const CHECK_FILES = 57426
const CLOSE = 57427
const CLUSTER = 57428
const CLUSTERS = 57429
const COALESCE = 57430
const COLLATE = 57431
const COLLATION = 57432
const COLUMN = 57433
const COLUMNS = 57434
const COMMENT = 57435
const COMMENTS = 57436
const COMMIT = 57437
const COMMITTED = 57438
const COMPACT = 57439
const COMPLETE = 57440
const COMPLETIONS = 57441
const CONCAT = 57442
const CONCURRENTLY = 57443
const CONFIGURATION = 57444
const CONFIGURATIONS = 57445
const CONFIGURE = 57446
const CONFLICT = 57447
const CONNECTION = 57448
const CONNECTIONS = 57449
const CONSTRAINT = 57450
const CONSTRAINTS = 57451
const CONTAINS = 57452
const CONTROLCHANGEFEED = 57453
const CONTROLJOB = 57454
const CONVERSION = 57455
const CONVERT = 57456
const COPY = 57457
const COST = 57458
const COVERING = 57459
const CREATE = 57460
const CREATEDB = 57461
const CREATELOGIN = 57462
const CREATEROLE = 57463
const CROSS = 57464
const CSV = 57465
const CUBE = 57466
const CURRENT = 57467
const CURRENT_CATALOG = 57468
const CURRENT_DATE = 57469
const CURRENT_SCHEMA = 57470
const CURRENT_ROLE = 57471
const CURRENT_TIME = 57472
const CURRENT_TIMESTAMP = 57473
const CURRENT_USER = 57474
const CURSOR = 57475
const CYCLE = 57476
const DATA = 57477
const DATABASE = 57478
const DATABASES = 57479
const DATE = 57480
const DAY = 57481
const DEBUG_IDS = 57482
const DEBUG_PAUSE_ON = 57483
const DEC = 57484
const DEBUG_DUMP_METADATA_SST = 57485
const DECIMAL = 57486
const DEFAULT = 57487
const DEFAULTS = 57488
const DEFINER = 57489
const DEALLOCATE = 57490
const DECLARE = 57491
const DEFERRABLE = 57492
const DEFERRED = 57493
const DELETE = 57494
const DELIMITER = 57495
const DEPENDS = 57496
const DESC = 57497
const DESTINATION = 57498
const DETACHED = 57499
const DETAILS = 57500
const DISCARD = 57501
const DISTINCT = 57502
const DO = 57503
const DOMAIN = 57504
const DOUBLE = 57505
const DROP = 57506
const ELSE = 57507
const ENCODING = 57508
const ENCRYPTED = 57509
const ENCRYPTION_INFO_DIR = 57510
const ENCRYPTION_PASSPHRASE = 57511
const END = 57512
const ENUM = 57513
const ENUMS = 57514
const ESCAPE = 57515
const EXCEPT = 57516
const EXCLUDE = 57517
const EXCLUDING = 57518
const EXISTS = 57519
const EXECUTE = 57520
const EXECUTION = 57521
const EXPERIMENTAL = 57522
const EXPERIMENTAL_FINGERPRINTS = 57523
const EXPERIMENTAL_REPLICA = 57524
const EXPERIMENTAL_AUDIT = 57525
const EXPERIMENTAL_RELOCATE = 57526
const EXPIRATION = 57527
const EXPLAIN = 57528
const EXPORT = 57529
const EXTENSION = 57530
const EXTERNAL = 57531
const EXTRACT = 57532
const EXTRACT_DURATION = 57533
const EXTREMES = 57534
const FAILURE = 57535
const FALSE = 57536
const FAMILY = 57537
const FETCH = 57538
const FETCHVAL = 57539
const FETCHTEXT = 57540
const FETCHVAL_PATH = 57541
const FETCHTEXT_PATH = 57542
const FILES = 57543
const FILTER = 57544
const FIRST = 57545
const FLOAT = 57546
const FLOAT4 = 57547
const FLOAT8 = 57548
const FLOORDIV = 57549
const FOLLOWING = 57550
const FOR = 57551
const FORCE = 57552
const FORCE_INDEX = 57553
const FORCE_INVERTED_INDEX = 57554
const FORCE_NOT_NULL = 57555
const FORCE_NULL = 57556
const FORCE_QUOTE = 57557
const FORCE_ZIGZAG = 57558
const FOREIGN = 57559
const FORMAT = 57560
const FORWARD = 57561
const FREEZE = 57562
const FROM = 57563
const FULL = 57564
const FUNCTION = 57565
const FUNCTIONS = 57566
const GENERATED = 57567
const GEOGRAPHY = 57568
const GEOMETRY = 57569
const GEOMETRYM = 57570
const GEOMETRYZ = 57571
const GEOMETRYZM = 57572
const GEOMETRYCOLLECTION = 57573
const GEOMETRYCOLLECTIONM = 57574
const GEOMETRYCOLLECTIONZ = 57575
const GEOMETRYCOLLECTIONZM = 57576
const GLOBAL = 57577
const GOAL = 57578
const GRANT = 57579
const GRANTEE = 57580
const GRANTS = 57581
const GREATEST = 57582
const GROUP = 57583
const GROUPING = 57584
const GROUPS = 57585
const HAVING = 57586
const HASH = 57587
const HEADER = 57588
const HIGH = 57589
const HISTOGRAM = 57590
const HOLD = 57591
const HOUR = 57592
const IDENTITY = 57593
const IF = 57594
const IFERROR = 57595
const IFNULL = 57596
const IGNORE_FOREIGN_KEYS = 57597
const ILIKE = 57598
const IMMEDIATE = 57599
const IMMEDIATELY = 57600
const IMMUTABLE = 57601
const IMPORT = 57602
const IN = 57603
const INCLUDE = 57604
const INCLUDING = 57605
const INCLUDE_ALL_SECONDARY_TENANTS = 57606
const INCLUDE_ALL_VIRTUAL_CLUSTERS = 57607
const INCREMENT = 57608
const INCREMENTAL = 57609
const INCREMENTAL_LOCATION = 57610
const INET = 57611
const INET_CONTAINED_BY_OR_EQUALS = 57612
const INET_CONTAINS_OR_EQUALS = 57613
const INDEX = 57614
const INDEXES = 57615
const INHERITS = 57616
const INJECT = 57617
const INITIALLY = 57618
const INDEX_BEFORE_PAREN = 57619
const INDEX_BEFORE_NAME_THEN_PAREN = 57620
const INDEX_AFTER_ORDER_BY_BEFORE_AT = 57621
const INNER = 57622
const INOUT = 57623
const INPUT = 57624
const INSENSITIVE = 57625
const INSERT = 57626
const INT = 57627
const INTEGER = 57628
const INTERSECT = 57629
const INTERVAL = 57630
const INTO = 57631
const INTO_DB = 57632
const INVERTED = 57633
const INVOKER = 57634
const IS = 57635
const ISERROR = 57636
const ISNULL = 57637
const ISOLATION = 57638
const JOB = 57639
const JOBS = 57640
const JOIN = 57641
const JSON = 57642
const JSONB = 57643
const JSON_SOME_EXISTS = 57644
const JSON_ALL_EXISTS = 57645
const KEY = 57646
const KEYS = 57647
const KMS = 57648
const KV = 57649
const LABEL = 57650
const LANGUAGE = 57651
const LAST = 57652
const LATERAL = 57653
const LATEST = 57654
const LC_CTYPE = 57655
const LC_COLLATE = 57656
const LEADING = 57657
const LEASE = 57658
const LEAST = 57659
const LEAKPROOF = 57660
const LEFT = 57661
const LESS = 57662
const LEVEL = 57663
const LIKE = 57664
const LIMIT = 57665
const LINESTRING = 57666
const LINESTRINGM = 57667
const LINESTRINGZ = 57668
const LINESTRINGZM = 57669
const LIST = 57670
const LOCAL = 57671
const LOCALITY = 57672
const LOCALTIME = 57673
const LOCALTIMESTAMP = 57674
const LOCKED = 57675
const LOGIN = 57676
const LOOKUP = 57677
const LOW = 57678
const LSHIFT = 57679
const MATCH = 57680
const MATERIALIZED = 57681
const MERGE = 57682
const MINVALUE = 57683
const MAXVALUE = 57684
const METHOD = 57685
const MINUTE = 57686
const MODIFYCLUSTERSETTING = 57687
const MODIFYSQLCLUSTERSETTING = 57688
const MONTH = 57689
const MOVE = 57690
const MULTILINESTRING = 57691
const MULTILINESTRINGM = 57692
const MULTILINESTRINGZ = 57693
const MULTILINESTRINGZM = 57694
const MULTIPOINT = 57695
const MULTIPOINTM = 57696
const MULTIPOINTZ = 57697
const MULTIPOINTZM = 57698
const MULTIPOLYGON = 57699
const MULTIPOLYGONM = 57700
const MULTIPOLYGONZ = 57701
const MULTIPOLYGONZM = 57702
const NAN = 57703
const NAME = 57704
const NAMES = 57705
const NATURAL = 57706
const NEVER = 57707
const NEW_DB_NAME = 57708
const NEW_KMS = 57709
const NEXT = 57710
const NO = 57711
const NOCANCELQUERY = 57712
const NOCONTROLCHANGEFEED = 57713
const NOCONTROLJOB = 57714
const NOCREATEDB = 57715
const NOCREATELOGIN = 57716
const NOCREATEROLE = 57717
const NODE = 57718
const NOLOGIN = 57719
const NOMODIFYCLUSTERSETTING = 57720
const NOREPLICATION = 57721
const NOSQLLOGIN = 57722
const NO_INDEX_JOIN = 57723
const NO_ZIGZAG_JOIN = 57724
const NO_FULL_SCAN = 57725
const NONE = 57726
const NONVOTERS = 57727
const NORMAL = 57728
const NOT = 57729
const NOTHING = 57730
const NOTHING_AFTER_RETURNING = 57731
const NOTNULL = 57732
const NOVIEWACTIVITY = 57733
const NOVIEWACTIVITYREDACTED = 57734
const NOVIEWCLUSTERSETTING = 57735
const NOWAIT = 57736
const NULL = 57737
const NULLIF = 57738
const NULLS = 57739
const NUMERIC = 57740
const OF = 57741
const OFF = 57742
const OFFSET = 57743
const OID = 57744
const OIDS = 57745
const OIDVECTOR = 57746
const OLD_KMS = 57747
const ON = 57748
const ONLY = 57749
const OPT = 57750
const OPTION = 57751
const OPTIONS = 57752
const OR = 57753
const ORDER = 57754
const ORDINALITY = 57755
const OTHERS = 57756
const OUT = 57757
const OUTER = 57758
const OVER = 57759
const OVERLAPS = 57760
const OVERLAY = 57761
const OWNED = 57762
const OWNER = 57763
const OPERATOR = 57764
const PARALLEL = 57765
const PARENT = 57766
const PARTIAL = 57767
const PARTITION = 57768
const PARTITIONS = 57769
const PASSWORD = 57770
const PAUSE = 57771
const PAUSED = 57772
const PER = 57773
const PHYSICAL = 57774
const PLACEMENT = 57775
const PLACING = 57776
const PLAN = 57777
const PLANS = 57778
const POINT = 57779
const POINTM = 57780
const POINTZ = 57781
const POINTZM = 57782
const POLYGON = 57783
const POLYGONM = 57784
const POLYGONZ = 57785
const POLYGONZM = 57786
const POSITION = 57787
const PRECEDING = 57788
const PRECISION = 57789
const PREPARE = 57790
const PRESERVE = 57791
const PRIMARY = 57792
const PRIOR = 57793
const PRIORITY = 57794
const PRIVILEGES = 57795
const PROCEDURAL = 57796
const PROCEDURE = 57797
const PROCEDURES = 57798
const PUBLIC = 57799
const PUBLICATION = 57800
const QUERIES = 57801
const QUERY = 57802
const QUOTE = 57803
const RANGE = 57804
const RANGES = 57805
const READ = 57806
const REAL = 57807
const REASON = 57808
const REASSIGN = 57809
const RECURSIVE = 57810
const RECURRING = 57811
const REDACT = 57812
const REF = 57813
const REFERENCES = 57814
const REFRESH = 57815
const REGCLASS = 57816
const REGION = 57817
const REGIONAL = 57818
const REGIONS = 57819
const REGNAMESPACE = 57820
const REGPROC = 57821
const REGPROCEDURE = 57822
const REGROLE = 57823
const REGTYPE = 57824
const REINDEX = 57825
const RELATIVE = 57826
const RELOCATE = 57827
const REMOVE_PATH = 57828
const REMOVE_REGIONS = 57829
const RENAME = 57830
const REPEATABLE = 57831
const REPLACE = 57832
const REPLICATION = 57833
const RELEASE = 57834
const RESET = 57835
const RESTART = 57836
const RESTORE = 57837
const RESTRICT = 57838
const RESTRICTED = 57839
const RESUME = 57840
const RETENTION = 57841
const RETURNING = 57842
const RETURN = 57843
const RETURNS = 57844
const RETRY = 57845
const REVISION_HISTORY = 57846
const REVOKE = 57847
const RIGHT = 57848
const ROLE = 57849
const ROLES = 57850
const ROLLBACK = 57851
const ROLLUP = 57852
const ROUTINES = 57853
const ROW = 57854
const ROWS = 57855
const RSHIFT = 57856
const RULE = 57857
const RUNNING = 57858
const SAVEPOINT = 57859
const SCANS = 57860
const SCATTER = 57861
const SCHEDULE = 57862
const SCHEDULES = 57863
const SCROLL = 57864
const SCHEMA = 57865
const SCHEMA_ONLY = 57866
const SCHEMAS = 57867
const SCRUB = 57868
const SEARCH = 57869
const SECOND = 57870
const SECONDARY = 57871
const SECURITY = 57872
const SELECT = 57873
const SEQUENCE = 57874
const SEQUENCES = 57875
const SERIALIZABLE = 57876
const SERVER = 57877
const SERVICE = 57878
const SESSION = 57879
const SESSIONS = 57880
const SESSION_USER = 57881
const SET = 57882
const SETOF = 57883
const SETS = 57884
const SETTING = 57885
const SETTINGS = 57886
const SHARE = 57887
const SHARED = 57888
const SHOW = 57889
const SIMILAR = 57890
const SIMPLE = 57891
const SIZE = 57892
const SKIP = 57893
const SKIP_LOCALITIES_CHECK = 57894
const SKIP_MISSING_FOREIGN_KEYS = 57895
const SKIP_MISSING_SEQUENCES = 57896
const SKIP_MISSING_SEQUENCE_OWNERS = 57897
const SKIP_MISSING_VIEWS = 57898
const SKIP_MISSING_UDFS = 57899
const SMALLINT = 57900
const SMALLSERIAL = 57901
const SNAPSHOT = 57902
const SOME = 57903
const SPLIT = 57904
const SQL = 57905
const SQLLOGIN = 57906
const STABLE = 57907
const START = 57908
const STATE = 57909
const STATISTICS = 57910
const STATUS = 57911
const STDIN = 57912
const STDOUT = 57913
const STOP = 57914
const STRAIGHT = 57915
const STREAM = 57916
const STRICT = 57917
const STRING = 57918
const STORAGE = 57919
const STORE = 57920
const STORED = 57921
const STORING = 57922
const SUBJECT = 57923
const SUBSTRING = 57924
const SUPER = 57925
const SUPPORT = 57926
const SURVIVE = 57927
const SURVIVAL = 57928
const SYMMETRIC = 57929
const SYNTAX = 57930
const SYSTEM = 57931
const SQRT = 57932
const SUBSCRIPTION = 57933
const STATEMENTS = 57934
const TABLE = 57935
const TABLES = 57936
const TABLESPACE = 57937
const TEMP = 57938
const TEMPLATE = 57939
const TEMPORARY = 57940
const TENANT = 57941
const TENANT_NAME = 57942
const TENANTS = 57943
const TESTING_RELOCATE = 57944
const TEXT = 57945
const THEN = 57946
const TIES = 57947
const TIME = 57948
const TIMETZ = 57949
const TIMESTAMP = 57950
const TIMESTAMPTZ = 57951
const TO = 57952
const THROTTLING = 57953
const TRAILING = 57954
const TRACE = 57955
const TRANSACTION = 57956
const TRANSACTIONS = 57957
const TRANSFER = 57958
const TRANSFORM = 57959
const TREAT = 57960
const TRIGGER = 57961
const TRIM = 57962
const TRUE = 57963
const TRUNCATE = 57964
const TRUSTED = 57965
const TYPE = 57966
const TYPES = 57967
const TRACING = 57968
const UNBOUNDED = 57969
const UNCOMMITTED = 57970
const UNION = 57971
const UNIQUE = 57972
const UNKNOWN = 57973
const UNLISTEN = 57974
const UNLOGGED = 57975
const UNSAFE_RESTORE_INCOMPATIBLE_VERSION = 57976
const UNSPLIT = 57977
const UPDATE = 57978
const UPDATES_CLUSTER_MONITORING_METRICS = 57979
const UPSERT = 57980
const UNSET = 57981
const UNTIL = 57982
const USE = 57983
const USER = 57984
const USERS = 57985
const USING = 57986
const UUID = 57987
const VALID = 57988
const VALIDATE = 57989
const VALUE = 57990
const VALUES = 57991
const VARBIT = 57992
const VARCHAR = 57993
const VARIADIC = 57994
const VERIFY_BACKUP_TABLE_DATA = 57995
const VIEW = 57996
const VARIABLES = 57997
const VARYING = 57998
const VIEWACTIVITY = 57999
const VIEWACTIVITYREDACTED = 58000
const VIEWDEBUG = 58001
const VIEWCLUSTERMETADATA = 58002
const VIEWCLUSTERSETTING = 58003
const VIRTUAL = 58004
const VISIBLE = 58005
const INVISIBLE = 58006
const VISIBILITY = 58007
const VOLATILE = 58008
const VOTERS = 58009
const VIRTUAL_CLUSTER_NAME = 58010
const VIRTUAL_CLUSTER = 58011
const WHEN = 58012
const WHERE = 58013
const WINDOW = 58014
const WITH = 58015
const WITHIN = 58016
const WITHOUT = 58017
const WORK = 58018
const WRITE = 58019
const YEAR = 58020
const ZONE = 58021
const NOT_LA = 58022
const NULLS_LA = 58023
const WITH_LA = 58024
const AS_LA = 58025
const GENERATED_ALWAYS = 58026
const GENERATED_BY_DEFAULT = 58027
const RESET_ALL = 58028
const ROLE_ALL = 58029
const USER_ALL = 58030
const ON_LA = 58031
const TENANT_ALL = 58032
const CLUSTER_ALL = 58033
const SET_TRACING = 58034
const CONTAINED_BY = 58035
const POSTFIXOP = 58036
const INTERVAL_SIMPLE = 58037
const UMINUS = 58038
const HELPTOKEN = 58039

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ABSOLUTE",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"AS_JSON",
	"AT_AT",
	"ASENSITIVE",
	"ASYMMETRIC",
	"AT",
	"ATOMIC",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BACKWARD",
	"BATCH",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CALL",
	"CALLED",
	"CANCEL",
	"CANCELQUERY",
	"CAPABILITIES",
	"CAPABILITY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CHECK_FILES",
	"CLOSE",
	"CLUSTER",
	"CLUSTERS",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"COMPLETIONS",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONNECTIONS",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COST",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_IDS",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DEBUG_DUMP_METADATA_SST",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEFINER",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DEPENDS",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DETAILS",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_INFO_DIR",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTERNAL",
	"EXTRACT",
	"EXTRACT_DURATION",
	"EXTREMES",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_INVERTED_INDEX",
	"FORCE_NOT_NULL",
	"FORCE_NULL",
	"FORCE_QUOTE",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FORMAT",
	"FORWARD",
	"FREEZE",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTEE",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HEADER",
	"HIGH",
	"HISTOGRAM",
	"HOLD",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMMEDIATELY",
	"IMMUTABLE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCLUDE_ALL_SECONDARY_TENANTS",
	"INCLUDE_ALL_VIRTUAL_CLUSTERS",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_LOCATION",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INDEX_BEFORE_PAREN",
	"INDEX_BEFORE_NAME_THEN_PAREN",
	"INDEX_AFTER_ORDER_BY_BEFORE_AT",
	"INNER",
	"INOUT",
	"INPUT",
	"INSENSITIVE",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"INVOKER",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LABEL",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEAKPROOF",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MODIFYSQLCLUSTERSETTING",
	"MONTH",
	"MOVE",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEW_KMS",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NODE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NOREPLICATION",
	"NOSQLLOGIN",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTHING_AFTER_RETURNING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOVIEWCLUSTERSETTING",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"OLD_KMS",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARALLEL",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PER",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIOR",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PROCEDURE",
	"PROCEDURES",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"QUOTE",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REDACT",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELATIVE",
	"RELOCATE",
	"REMOVE_PATH",
	"REMOVE_REGIONS",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTART",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETENTION",
	"RETURNING",
	"RETURN",
	"RETURNS",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCROLL",
	"SCHEMA",
	"SCHEMA_ONLY",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SECONDARY",
	"SECURITY",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SERVICE",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETOF",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHARED",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SIZE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SKIP_MISSING_UDFS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"SQLLOGIN",
	"STABLE",
	"START",
	"STATE",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STDOUT",
	"STOP",
	"STRAIGHT",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBJECT",
	"SUBSTRING",
	"SUPER",
	"SUPPORT",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TENANT_NAME",
	"TENANTS",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TRANSFER",
	"TRANSFORM",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLISTEN",
	"UNLOGGED",
	"UNSAFE_RESTORE_INCOMPATIBLE_VERSION",
	"UNSPLIT",
	"UPDATE",
	"UPDATES_CLUSTER_MONITORING_METRICS",
	"UPSERT",
	"UNSET",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VERIFY_BACKUP_TABLE_DATA",
	"VIEW",
	"VARIABLES",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIEWDEBUG",
	"VIEWCLUSTERMETADATA",
	"VIEWCLUSTERSETTING",
	"VIRTUAL",
	"VISIBLE",
	"INVISIBLE",
	"VISIBILITY",
	"VOLATILE",
	"VOTERS",
	"VIRTUAL_CLUSTER_NAME",
	"VIRTUAL_CLUSTER",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"TENANT_ALL",
	"CLUSTER_ALL",
	"SET_TRACING",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"';'",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:18305

//line yacctab:1
var sqlExca = [...]int16{
	-1, 0,
	1, 5,
	-2, 2221,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 67,
	309, 695,
	-2, 0,
	-1, 79,
	8, 1267,
	29, 1267,
	703, 1267,
	704, 1267,
	-2, 0,
	-1, 80,
	8, 1267,
	29, 1267,
	703, 1267,
	704, 1267,
	-2, 0,
	-1, 83,
	182, 1439,
	307, 1439,
	459, 1393,
	538, 1393,
	592, 1393,
	613, 1439,
	615, 1393,
	-2, 0,
	-1, 84,
	1, 2066,
	150, 2066,
	296, 2066,
	387, 2066,
	452, 2066,
	464, 2066,
	683, 2066,
	716, 2066,
	-2, 0,
	-1, 85,
	1, 2066,
	716, 2066,
	-2, 0,
	-1, 91,
	289, 331,
	610, 331,
	-2, 0,
	-1, 106,
	223, 585,
	272, 1938,
	291, 1938,
	309, 585,
	454, 585,
	455, 585,
	468, 1666,
	515, 585,
	532, 1666,
	593, 1666,
	623, 585,
	654, 1666,
	-2, 0,
	-1, 114,
	152, 2221,
	284, 2221,
	636, 2221,
	638, 2221,
	-2, 0,
	-1, 132,
	174, 2193,
	196, 2193,
	209, 2193,
	287, 2193,
	323, 2193,
	401, 2193,
	412, 2193,
	629, 2193,
	-2, 2164,
	-1, 183,
	4, 2223,
	21, 2223,
	22, 2223,
	23, 2223,
	24, 2223,
	25, 2223,
	26, 2223,
	27, 2223,
	28, 2223,
	30, 2223,
	31, 2223,
	37, 2223,
	41, 2223,
	43, 2223,
	45, 2223,
	46, 2223,
	47, 2223,
	49, 2223,
	50, 2223,
	51, 2223,
	52, 2223,
	53, 2223,
	54, 2223,
	55, 2223,
	56, 2223,
	57, 2223,
	58, 2223,
	60, 2223,
	61, 2223,
	62, 2223,
	63, 2223,
	65, 2223,
	66, 2223,
	67, 2223,
	68, 2223,
	69, 2223,
	70, 2223,
	71, 2223,
	72, 2223,
	73, 2223,
	74, 2223,
	75, 2223,
	79, 2223,
	80, 2223,
	81, 2223,
	82, 2223,
	84, 2223,
	85, 2223,
	86, 2223,
	87, 2223,
	88, 2223,
	92, 2223,
	93, 2223,
	94, 2223,
	95, 2223,
	96, 2223,
	97, 2223,
	98, 2223,
	99, 2223,
	102, 2223,
	103, 2223,
	104, 2223,
	105, 2223,
	106, 2223,
	107, 2223,
	109, 2223,
	111, 2223,
	112, 2223,
	113, 2223,
	114, 2223,
	115, 2223,
	116, 2223,
	117, 2223,
	119, 2223,
	120, 2223,
	121, 2223,
	123, 2223,
	124, 2223,
	125, 2223,
	133, 2223,
	134, 2223,
	135, 2223,
	136, 2223,
	137, 2223,
	139, 2223,
	140, 2223,
	141, 2223,
	142, 2223,
	143, 2223,
	144, 2223,
	146, 2223,
	147, 2223,
	148, 2223,
	149, 2223,
	151, 2223,
	152, 2223,
	153, 2223,
	154, 2223,
	156, 2223,
	157, 2223,
	158, 2223,
	159, 2223,
	162, 2223,
	163, 2223,
	164, 2223,
	166, 2223,
	167, 2223,
	168, 2223,
	169, 2223,
	171, 2223,
	172, 2223,
	173, 2223,
	175, 2223,
	176, 2223,
	177, 2223,
	178, 2223,
	179, 2223,
	180, 2223,
	181, 2223,
	182, 2223,
	183, 2223,
	184, 2223,
	185, 2223,
	186, 2223,
	187, 2223,
	188, 2223,
	189, 2223,
	190, 2223,
	191, 2223,
	192, 2223,
	193, 2223,
	195, 2223,
	201, 2223,
	202, 2223,
	203, 2223,
	204, 2223,
	208, 2223,
	210, 2223,
	211, 2223,
	212, 2223,
	213, 2223,
	214, 2223,
	215, 2223,
	216, 2223,
	218, 2223,
	219, 2223,
	220, 2223,
	223, 2223,
	224, 2223,
	225, 2223,
	226, 2223,
	227, 2223,
	228, 2223,
	229, 2223,
	230, 2223,
	231, 2223,
	232, 2223,
	233, 2223,
	234, 2223,
	235, 2223,
	236, 2223,
	238, 2223,
	239, 2223,
	240, 2223,
	242, 2223,
	243, 2223,
	245, 2223,
	246, 2223,
	247, 2223,
	248, 2223,
	249, 2223,
	250, 2223,
	251, 2223,
	252, 2223,
	253, 2223,
	254, 2223,
	255, 2223,
	257, 2223,
	258, 2223,
	259, 2223,
	260, 2223,
	262, 2223,
	263, 2223,
	264, 2223,
	265, 2223,
	266, 2223,
	267, 2223,
	268, 2223,
	272, 2223,
	273, 2223,
	274, 2223,
	275, 2223,
	277, 2223,
	278, 2223,
	279, 2223,
	281, 2223,
	282, 2223,
	283, 2223,
	284, 2223,
	285, 2223,
	286, 2223,
	288, 2223,
	290, 2223,
	291, 2223,
	292, 2223,
	294, 2223,
	296, 2223,
	297, 2223,
	298, 2223,
	300, 2223,
	304, 2223,
	305, 2223,
	306, 2223,
	307, 2223,
	308, 2223,
	309, 2223,
	310, 2223,
	312, 2223,
	313, 2223,
	314, 2223,
	316, 2223,
	317, 2223,
	318, 2223,
	320, 2223,
	321, 2223,
	324, 2223,
	325, 2223,
	326, 2223,
	327, 2223,
	328, 2223,
	329, 2223,
	330, 2223,
	333, 2223,
	334, 2223,
	335, 2223,
	336, 2223,
	338, 2223,
	339, 2223,
	340, 2223,
	341, 2223,
	342, 2223,
	343, 2223,
	344, 2223,
	345, 2223,
	346, 2223,
	347, 2223,
	348, 2223,
	349, 2223,
	350, 2223,
	351, 2223,
	352, 2223,
	353, 2223,
	354, 2223,
	355, 2223,
	356, 2223,
	357, 2223,
	358, 2223,
	359, 2223,
	360, 2223,
	361, 2223,
	363, 2223,
	365, 2223,
	366, 2223,
	367, 2223,
	368, 2223,
	369, 2223,
	370, 2223,
	371, 2223,
	372, 2223,
	373, 2223,
	374, 2223,
	375, 2223,
	376, 2223,
	377, 2223,
	378, 2223,
	379, 2223,
	380, 2223,
	381, 2223,
	382, 2223,
	383, 2223,
	385, 2223,
	386, 2223,
	388, 2223,
	389, 2223,
	391, 2223,
	392, 2223,
	393, 2223,
	394, 2223,
	396, 2223,
	397, 2223,
	398, 2223,
	399, 2223,
	400, 2223,
	403, 2223,
	405, 2223,
	407, 2223,
	408, 2223,
	409, 2223,
	410, 2223,
	413, 2223,
	414, 2223,
	415, 2223,
	417, 2223,
	419, 2223,
	420, 2223,
	421, 2223,
	422, 2223,
	423, 2223,
	424, 2223,
	425, 2223,
	426, 2223,
	427, 2223,
	428, 2223,
	429, 2223,
	430, 2223,
	431, 2223,
	432, 2223,
	433, 2223,
	435, 2223,
	436, 2223,
	437, 2223,
	438, 2223,
	439, 2223,
	440, 2223,
	441, 2223,
	442, 2223,
	443, 2223,
	444, 2223,
	445, 2223,
	446, 2223,
	447, 2223,
	448, 2223,
	449, 2223,
	451, 2223,
	452, 2223,
	453, 2223,
	455, 2223,
	456, 2223,
	457, 2223,
	458, 2223,
	459, 2223,
	460, 2223,
	461, 2223,
	462, 2223,
	463, 2223,
	464, 2223,
	465, 2223,
	466, 2223,
	467, 2223,
	468, 2223,
	469, 2223,
	470, 2223,
	471, 2223,
	473, 2223,
	475, 2223,
	476, 2223,
	477, 2223,
	483, 2223,
	484, 2223,
	485, 2223,
	487, 2223,
	488, 2223,
	489, 2223,
	490, 2223,
	491, 2223,
	492, 2223,
	493, 2223,
	494, 2223,
	495, 2223,
	496, 2223,
	497, 2223,
	498, 2223,
	499, 2223,
	501, 2223,
	502, 2223,
	503, 2223,
	504, 2223,
	505, 2223,
	507, 2223,
	508, 2223,
	509, 2223,
	510, 2223,
	511, 2223,
	512, 2223,
	513, 2223,
	515, 2223,
	516, 2223,
	517, 2223,
	518, 2223,
	519, 2223,
	520, 2223,
	521, 2223,
	522, 2223,
	523, 2223,
	524, 2223,
	525, 2223,
	526, 2223,
	527, 2223,
	528, 2223,
	529, 2223,
	530, 2223,
	532, 2223,
	533, 2223,
	534, 2223,
	535, 2223,
	536, 2223,
	537, 2223,
	538, 2223,
	540, 2223,
	541, 2223,
	542, 2223,
	543, 2223,
	544, 2223,
	545, 2223,
	546, 2223,
	547, 2223,
	549, 2223,
	550, 2223,
	551, 2223,
	552, 2223,
	553, 2223,
	554, 2223,
	555, 2223,
	556, 2223,
	557, 2223,
	558, 2223,
	560, 2223,
	562, 2223,
	563, 2223,
	564, 2223,
	565, 2223,
	566, 2223,
	567, 2223,
	568, 2223,
	569, 2223,
	570, 2223,
	571, 2223,
	572, 2223,
	573, 2223,
	574, 2223,
	575, 2223,
	576, 2223,
	577, 2223,
	578, 2223,
	579, 2223,
	580, 2223,
	581, 2223,
	582, 2223,
	583, 2223,
	584, 2223,
	585, 2223,
	586, 2223,
	588, 2223,
	589, 2223,
	591, 2223,
	592, 2223,
	594, 2223,
	595, 2223,
	596, 2223,
	597, 2223,
	598, 2223,
	599, 2223,
	600, 2223,
	601, 2223,
	602, 2223,
	603, 2223,
	605, 2223,
	606, 2223,
	607, 2223,
	608, 2223,
	609, 2223,
	611, 2223,
	613, 2223,
	614, 2223,
	615, 2223,
	616, 2223,
	617, 2223,
	618, 2223,
	619, 2223,
	620, 2223,
	622, 2223,
	623, 2223,
	624, 2223,
	625, 2223,
	626, 2223,
	627, 2223,
	628, 2223,
	631, 2223,
	632, 2223,
	633, 2223,
	634, 2223,
	635, 2223,
	636, 2223,
	637, 2223,
	638, 2223,
	639, 2223,
	640, 2223,
	641, 2223,
	643, 2223,
	646, 2223,
	647, 2223,
	648, 2223,
	649, 2223,
	650, 2223,
	651, 2223,
	653, 2223,
	654, 2223,
	655, 2223,
	656, 2223,
	657, 2223,
	658, 2223,
	659, 2223,
	660, 2223,
	661, 2223,
	662, 2223,
	663, 2223,
	664, 2223,
	665, 2223,
	666, 2223,
	667, 2223,
	668, 2223,
	669, 2223,
	674, 2223,
	675, 2223,
	676, 2223,
	677, 2223,
	678, 2223,
	679, 2223,
	-2, 0,
	-1, 185,
	1, 2066,
	716, 2066,
	719, 2066,
	-2, 0,
	-1, 186,
	1, 2066,
	610, 2066,
	716, 2066,
	719, 2066,
	-2, 0,
	-1, 233,
	174, 2192,
	196, 2192,
	209, 2192,
	287, 2192,
	323, 2192,
	401, 2192,
	412, 2192,
	629, 2192,
	-2, 2167,
	-1, 876,
	713, 2987,
	-2, 4229,
	-1, 877,
	713, 3007,
	-2, 2998,
	-1, 878,
	713, 3008,
	-2, 2999,
	-1, 882,
	713, 4128,
	-2, 2996,
	-1, 962,
	4, 1936,
	21, 1936,
	22, 1936,
	23, 1936,
	24, 1936,
	25, 1936,
	26, 1936,
	27, 1936,
	28, 1936,
	30, 1936,
	31, 1936,
	37, 1936,
	41, 1936,
	43, 1936,
	45, 1936,
	46, 1936,
	47, 1936,
	49, 1936,
	50, 1936,
	51, 1936,
	52, 1936,
	53, 1936,
	54, 1936,
	55, 1936,
	56, 1936,
	57, 1936,
	58, 1936,
	60, 1936,
	61, 1936,
	62, 1936,
	63, 1936,
	65, 1936,
	66, 1936,
	67, 1936,
	68, 1936,
	69, 1936,
	70, 1936,
	71, 1936,
	72, 1936,
	73, 1936,
	74, 1936,
	75, 1936,
	79, 1936,
	80, 1936,
	81, 1936,
	82, 1936,
	84, 1936,
	85, 1936,
	86, 1936,
	87, 1936,
	88, 1936,
	92, 1936,
	93, 1936,
	94, 1936,
	95, 1936,
	96, 1936,
	97, 1936,
	98, 1936,
	99, 1936,
	102, 1936,
	103, 1936,
	104, 1936,
	105, 1936,
	106, 1936,
	107, 1936,
	109, 1936,
	111, 1936,
	112, 1936,
	113, 1936,
	114, 1936,
	115, 1936,
	116, 1936,
	117, 1936,
	119, 1936,
	120, 1936,
	121, 1936,
	123, 1936,
	124, 1936,
	125, 1936,
	133, 1936,
	134, 1936,
	135, 1936,
	136, 1936,
	137, 1936,
	139, 1936,
	140, 1936,
	141, 1936,
	142, 1936,
	143, 1936,
	144, 1936,
	146, 1936,
	147, 1936,
	148, 1936,
	149, 1936,
	151, 1936,
	152, 1936,
	153, 1936,
	154, 1936,
	156, 1936,
	157, 1936,
	158, 1936,
	159, 1936,
	162, 1936,
	163, 1936,
	164, 1936,
	166, 1936,
	167, 1936,
	168, 1936,
	169, 1936,
	171, 1936,
	172, 1936,
	173, 1936,
	175, 1936,
	176, 1936,
	177, 1936,
	178, 1936,
	179, 1936,
	180, 1936,
	181, 1936,
	182, 1936,
	183, 1936,
	184, 1936,
	185, 1936,
	186, 1936,
	187, 1936,
	188, 1936,
	189, 1936,
	190, 1936,
	191, 1936,
	192, 1936,
	193, 1936,
	195, 1936,
	201, 1936,
	202, 1936,
	203, 1936,
	204, 1936,
	208, 1936,
	210, 1936,
	211, 1936,
	212, 1936,
	213, 1936,
	214, 1936,
	215, 1936,
	216, 1936,
	218, 1936,
	219, 1936,
	220, 1936,
	223, 1936,
	224, 1936,
	225, 1936,
	226, 1936,
	227, 1936,
	228, 1936,
	229, 1936,
	230, 1936,
	231, 1936,
	232, 1936,
	233, 1936,
	234, 1936,
	235, 1936,
	236, 1936,
	238, 1936,
	239, 1936,
	240, 1936,
	242, 1936,
	243, 1936,
	245, 1936,
	246, 1936,
	247, 1936,
	248, 1936,
	249, 1936,
	250, 1936,
	251, 1936,
	252, 1936,
	253, 1936,
	254, 1936,
	255, 1936,
	257, 1936,
	258, 1936,
	259, 1936,
	260, 1936,
	262, 1936,
	263, 1936,
	264, 1936,
	265, 1936,
	266, 1936,
	267, 1936,
	268, 1936,
	272, 1936,
	273, 1936,
	274, 1936,
	275, 1936,
	277, 1936,
	278, 1936,
	279, 1936,
	281, 1936,
	282, 1936,
	283, 1936,
	284, 1936,
	285, 1936,
	286, 1936,
	288, 1936,
	290, 1936,
	291, 1936,
	292, 1936,
	294, 1936,
	296, 1936,
	297, 1936,
	298, 1936,
	300, 1936,
	304, 1936,
	305, 1936,
	306, 1936,
	307, 1936,
	308, 1936,
	309, 1936,
	310, 1936,
	312, 1936,
	313, 1936,
	314, 1936,
	316, 1936,
	317, 1936,
	318, 1936,
	320, 1936,
	321, 1936,
	324, 1936,
	325, 1936,
	326, 1936,
	327, 1936,
	328, 1936,
	329, 1936,
	330, 1936,
	333, 1936,
	334, 1936,
	335, 1936,
	336, 1936,
	338, 1936,
	339, 1936,
	340, 1936,
	341, 1936,
	342, 1936,
	343, 1936,
	344, 1936,
	345, 1936,
	346, 1936,
	347, 1936,
	348, 1936,
	349, 1936,
	350, 1936,
	351, 1936,
	352, 1936,
	353, 1936,
	354, 1936,
	355, 1936,
	356, 1936,
	357, 1936,
	358, 1936,
	359, 1936,
	360, 1936,
	361, 1936,
	363, 1936,
	365, 1936,
	366, 1936,
	367, 1936,
	368, 1936,
	369, 1936,
	370, 1936,
	371, 1936,
	372, 1936,
	373, 1936,
	374, 1936,
	375, 1936,
	376, 1936,
	377, 1936,
	378, 1936,
	379, 1936,
	380, 1936,
	381, 1936,
	382, 1936,
	383, 1936,
	385, 1936,
	386, 1936,
	388, 1936,
	389, 1936,
	391, 1936,
	392, 1936,
	393, 1936,
	394, 1936,
	396, 1936,
	397, 1936,
	398, 1936,
	399, 1936,
	400, 1936,
	403, 1936,
	405, 1936,
	408, 1936,
	409, 1936,
	410, 1936,
	413, 1936,
	414, 1936,
	415, 1936,
	417, 1936,
	419, 1936,
	420, 1936,
	421, 1936,
	422, 1936,
	423, 1936,
	424, 1936,
	425, 1936,
	426, 1936,
	427, 1936,
	428, 1936,
	429, 1936,
	430, 1936,
	431, 1936,
	432, 1936,
	433, 1936,
	435, 1936,
	436, 1936,
	437, 1936,
	438, 1936,
	439, 1936,
	440, 1936,
	441, 1936,
	442, 1936,
	443, 1936,
	444, 1936,
	445, 1936,
	446, 1936,
	447, 1936,
	448, 1936,
	449, 1936,
	451, 1936,
	452, 1936,
	453, 1936,
	455, 1936,
	456, 1936,
	457, 1936,
	458, 1936,
	459, 1936,
	460, 1936,
	461, 1936,
	462, 1936,
	463, 1936,
	464, 1936,
	465, 1936,
	466, 1936,
	467, 1936,
	468, 1936,
	469, 1936,
	470, 1936,
	471, 1936,
	473, 1936,
	475, 1936,
	476, 1936,
	477, 1936,
	483, 1936,
	484, 1936,
	485, 1936,
	487, 1936,
	488, 1936,
	489, 1936,
	490, 1936,
	491, 1936,
	492, 1936,
	493, 1936,
	494, 1936,
	495, 1936,
	496, 1936,
	497, 1936,
	498, 1936,
	499, 1936,
	501, 1936,
	502, 1936,
	503, 1936,
	504, 1936,
	505, 1936,
	507, 1936,
	508, 1936,
	509, 1936,
	510, 1936,
	511, 1936,
	512, 1936,
	513, 1936,
	515, 1936,
	516, 1936,
	517, 1936,
	518, 1936,
	519, 1936,
	520, 1936,
	521, 1936,
	522, 1936,
	523, 1936,
	524, 1936,
	525, 1936,
	526, 1936,
	527, 1936,
	528, 1936,
	529, 1936,
	530, 1936,
	532, 1936,
	533, 1936,
	534, 1936,
	535, 1936,
	536, 1936,
	537, 1936,
	538, 1936,
	540, 1936,
	541, 1936,
	542, 1936,
	543, 1936,
	544, 1936,
	545, 1936,
	546, 1936,
	547, 1936,
	549, 1936,
	550, 1936,
	551, 1936,
	552, 1936,
	553, 1936,
	554, 1936,
	555, 1936,
	556, 1936,
	557, 1936,
	558, 1936,
	560, 1936,
	562, 1936,
	563, 1936,
	564, 1936,
	565, 1936,
	566, 1936,
	567, 1936,
	568, 1936,
	569, 1936,
	570, 1936,
	571, 1936,
	572, 1936,
	573, 1936,
	574, 1936,
	575, 1936,
	576, 1936,
	577, 1936,
	578, 1936,
	579, 1936,
	580, 1936,
	581, 1936,
	582, 1936,
	583, 1936,
	584, 1936,
	585, 1936,
	586, 1936,
	588, 1936,
	589, 1936,
	591, 1936,
	592, 1936,
	594, 1936,
	595, 1936,
	596, 1936,
	597, 1936,
	598, 1936,
	599, 1936,
	600, 1936,
	601, 1936,
	602, 1936,
	603, 1936,
	605, 1936,
	606, 1936,
	607, 1936,
	608, 1936,
	609, 1936,
	611, 1936,
	613, 1936,
	614, 1936,
	615, 1936,
	616, 1936,
	617, 1936,
	618, 1936,
	619, 1936,
	620, 1936,
	622, 1936,
	623, 1936,
	624, 1936,
	625, 1936,
	626, 1936,
	627, 1936,
	628, 1936,
	631, 1936,
	632, 1936,
	633, 1936,
	634, 1936,
	635, 1936,
	636, 1936,
	637, 1936,
	638, 1936,
	639, 1936,
	640, 1936,
	641, 1936,
	643, 1936,
	646, 1936,
	647, 1936,
	648, 1936,
	649, 1936,
	650, 1936,
	651, 1936,
	653, 1936,
	654, 1936,
	655, 1936,
	656, 1936,
	657, 1936,
	658, 1936,
	659, 1936,
	660, 1936,
	661, 1936,
	662, 1936,
	663, 1936,
	664, 1936,
	665, 1936,
	666, 1936,
	667, 1936,
	668, 1936,
	669, 1936,
	674, 1936,
	675, 1936,
	676, 1936,
	677, 1936,
	678, 1936,
	679, 1936,
	-2, 0,
	-1, 984,
	221, 3077,
	610, 3077,
	695, 3077,
	715, 3077,
	-2, 0,
	-1, 985,
	221, 3061,
	610, 3061,
	695, 3061,
	715, 3061,
	-2, 0,
	-1, 987,
	221, 3387,
	610, 3387,
	695, 3387,
	715, 3387,
	-2, 0,
	-1, 990,
	221, 3218,
	610, 3218,
	695, 3218,
	715, 3218,
	-2, 0,
	-1, 991,
	221, 3443,
	610, 3443,
	695, 3443,
	715, 3443,
	-2, 0,
	-1, 999,
	221, 3247,
	610, 3247,
	695, 3247,
	715, 3247,
	-2, 1122,
	-1, 1015,
	8, 1266,
	29, 1266,
	703, 1266,
	704, 1266,
	-2, 1271,
	-1, 1019,
	1, 3140,
	716, 3140,
	719, 3140,
	-2, 1271,
	-1, 1020,
	1, 3205,
	716, 3205,
	719, 3205,
	-2, 1271,
	-1, 1023,
	1, 3252,
	716, 3252,
	719, 3252,
	-2, 1264,
	-1, 1024,
	1, 3313,
	716, 3313,
	719, 3313,
	-2, 1265,
	-1, 1025,
	1, 3150,
	716, 3150,
	719, 3150,
	-2, 1268,
	-1, 1026,
	1, 3042,
	716, 3042,
	719, 3042,
	-2, 1269,
	-1, 1045,
	221, 1313,
	-2, 0,
	-1, 1046,
	459, 1394,
	538, 1394,
	592, 1394,
	615, 1394,
	-2, 0,
	-1, 1047,
	459, 1393,
	538, 1393,
	592, 1393,
	615, 1393,
	-2, 1284,
	-1, 1051,
	1, 1461,
	712, 1461,
	714, 1461,
	716, 1461,
	719, 1461,
	-2, 0,
	-1, 1053,
	1, 1366,
	712, 1366,
	714, 1366,
	716, 1366,
	719, 1366,
	-2, 0,
	-1, 1054,
	1, 1370,
	712, 1370,
	714, 1370,
	716, 1370,
	719, 1370,
	-2, 0,
	-1, 1055,
	1, 1570,
	209, 1570,
	712, 1570,
	714, 1570,
	716, 1570,
	719, 1570,
	-2, 0,
	-1, 1065,
	1, 1399,
	712, 1399,
	714, 1399,
	716, 1399,
	719, 1399,
	-2, 0,
	-1, 1072,
	1, 1461,
	712, 1461,
	714, 1461,
	716, 1461,
	719, 1461,
	-2, 0,
	-1, 1073,
	1, 1450,
	712, 1450,
	714, 1450,
	716, 1450,
	719, 1450,
	-2, 0,
	-1, 1074,
	1, 1454,
	712, 1454,
	714, 1454,
	716, 1454,
	719, 1454,
	-2, 0,
	-1, 1075,
	1, 1463,
	712, 1463,
	714, 1463,
	716, 1463,
	719, 1463,
	-2, 0,
	-1, 1076,
	1, 1466,
	712, 1466,
	714, 1466,
	716, 1466,
	719, 1466,
	-2, 0,
	-1, 1084,
	1, 1506,
	712, 1506,
	714, 1506,
	716, 1506,
	719, 1506,
	-2, 0,
	-1, 1085,
	1, 1512,
	712, 1512,
	714, 1512,
	716, 1512,
	719, 1512,
	-2, 0,
	-1, 1088,
	1, 1538,
	712, 1538,
	714, 1538,
	716, 1538,
	719, 1538,
	-2, 0,
	-1, 1090,
	1, 1556,
	712, 1556,
	714, 1556,
	716, 1556,
	719, 1556,
	-2, 0,
	-1, 1146,
	715, 2998,
	718, 2998,
	-2, 1582,
	-1, 1147,
	715, 3000,
	718, 3000,
	-2, 1583,
	-1, 1148,
	715, 2999,
	718, 2999,
	-2, 1584,
	-1, 1149,
	718, 2919,
	-2, 1585,
	-1, 1155,
	4, 558,
	8, 558,
	-2, 3435,
	-1, 1178,
	209, 374,
	-2, 0,
	-1, 1201,
	48, 2970,
	-2, 0,
	-1, 1202,
	654, 1909,
	-2, 1667,
	-1, 1216,
	221, 771,
	-2, 0,
	-1, 1219,
	4, 2391,
	21, 2391,
	22, 2391,
	23, 2391,
	24, 2391,
	25, 2391,
	26, 2391,
	27, 2391,
	28, 2391,
	30, 2391,
	31, 2391,
	37, 2391,
	41, 2391,
	43, 2391,
	45, 2391,
	46, 2391,
	47, 2391,
	49, 2391,
	50, 2391,
	51, 2391,
	52, 2391,
	53, 2391,
	54, 2391,
	55, 2391,
	56, 2391,
	57, 2391,
	58, 2391,
	60, 2391,
	61, 2391,
	62, 2391,
	63, 2391,
	65, 2391,
	66, 2391,
	67, 2391,
	68, 2391,
	69, 2391,
	70, 2391,
	71, 2391,
	72, 2391,
	73, 2391,
	74, 2391,
	75, 2391,
	79, 2391,
	80, 2391,
	81, 2391,
	82, 2391,
	84, 2391,
	85, 2391,
	86, 2391,
	87, 2391,
	88, 2391,
	92, 2391,
	93, 2391,
	94, 2391,
	95, 2391,
	96, 2391,
	97, 2391,
	98, 2391,
	99, 2391,
	102, 2391,
	103, 2391,
	104, 2391,
	105, 2391,
	106, 2391,
	107, 2391,
	109, 2391,
	111, 2391,
	112, 2391,
	113, 2391,
	114, 2391,
	115, 2391,
	116, 2391,
	117, 2391,
	119, 2391,
	120, 2391,
	121, 2391,
	123, 2391,
	124, 2391,
	125, 2391,
	133, 2391,
	134, 2391,
	135, 2391,
	136, 2391,
	137, 2391,
	139, 2391,
	140, 2391,
	141, 2391,
	142, 2391,
	143, 2391,
	144, 2391,
	146, 2391,
	147, 2391,
	148, 2391,
	149, 2391,
	151, 2391,
	152, 2391,
	153, 2391,
	154, 2391,
	156, 2391,
	157, 2391,
	158, 2391,
	159, 2391,
	162, 2391,
	163, 2391,
	164, 2391,
	166, 2391,
	167, 2391,
	168, 2391,
	169, 2391,
	171, 2391,
	172, 2391,
	173, 2391,
	175, 2391,
	176, 2391,
	177, 2391,
	178, 2391,
	179, 2391,
	180, 2391,
	181, 2391,
	182, 2391,
	183, 2391,
	184, 2391,
	185, 2391,
	186, 2391,
	187, 2391,
	188, 2391,
	189, 2391,
	190, 2391,
	191, 2391,
	192, 2391,
	193, 2391,
	195, 2391,
	201, 2391,
	202, 2391,
	203, 2391,
	204, 2391,
	208, 2391,
	210, 2391,
	211, 2391,
	212, 2391,
	213, 2391,
	214, 2391,
	215, 2391,
	216, 2391,
	218, 2391,
	219, 2391,
	220, 2391,
	223, 2391,
	224, 2391,
	225, 2391,
	226, 2391,
	227, 2391,
	228, 2391,
	229, 2391,
	230, 2391,
	231, 2391,
	232, 2391,
	233, 2391,
	234, 2391,
	235, 2391,
	236, 2391,
	238, 2391,
	239, 2391,
	240, 2391,
	242, 2391,
	243, 2391,
	245, 2391,
	246, 2391,
	247, 2391,
	248, 2391,
	249, 2391,
	250, 2391,
	251, 2391,
	252, 2391,
	253, 2391,
	254, 2391,
	255, 2391,
	257, 2391,
	258, 2391,
	259, 2391,
	260, 2391,
	262, 2391,
	263, 2391,
	264, 2391,
	265, 2391,
	266, 2391,
	267, 2391,
	268, 2391,
	272, 2391,
	273, 2391,
	274, 2391,
	275, 2391,
	277, 2391,
	278, 2391,
	279, 2391,
	281, 2391,
	282, 2391,
	283, 2391,
	284, 2391,
	285, 2391,
	286, 2391,
	288, 2391,
	290, 2391,
	291, 2391,
	292, 2391,
	294, 2391,
	296, 2391,
	297, 2391,
	298, 2391,
	300, 2391,
	304, 2391,
	305, 2391,
	306, 2391,
	307, 2391,
	308, 2391,
	309, 2391,
	310, 2391,
	312, 2391,
	313, 2391,
	314, 2391,
	316, 2391,
	317, 2391,
	318, 2391,
	320, 2391,
	321, 2391,
	324, 2391,
	325, 2391,
	326, 2391,
	327, 2391,
	328, 2391,
	329, 2391,
	330, 2391,
	333, 2391,
	334, 2391,
	335, 2391,
	336, 2391,
	338, 2391,
	339, 2391,
	340, 2391,
	341, 2391,
	342, 2391,
	343, 2391,
	344, 2391,
	345, 2391,
	346, 2391,
	347, 2391,
	348, 2391,
	349, 2391,
	350, 2391,
	351, 2391,
	352, 2391,
	353, 2391,
	354, 2391,
	355, 2391,
	356, 2391,
	357, 2391,
	358, 2391,
	359, 2391,
	360, 2391,
	361, 2391,
	363, 2391,
	365, 2391,
	366, 2391,
	367, 2391,
	368, 2391,
	369, 2391,
	370, 2391,
	371, 2391,
	372, 2391,
	373, 2391,
	374, 2391,
	375, 2391,
	376, 2391,
	377, 2391,
	378, 2391,
	379, 2391,
	380, 2391,
	381, 2391,
	382, 2391,
	383, 2391,
	385, 2391,
	386, 2391,
	388, 2391,
	389, 2391,
	391, 2391,
	392, 2391,
	393, 2391,
	394, 2391,
	396, 2391,
	397, 2391,
	398, 2391,
	399, 2391,
	400, 2391,
	403, 2391,
	405, 2391,
	408, 2391,
	409, 2391,
	410, 2391,
	413, 2391,
	414, 2391,
	415, 2391,
	417, 2391,
	419, 2391,
	420, 2391,
	421, 2391,
	422, 2391,
	423, 2391,
	424, 2391,
	425, 2391,
	426, 2391,
	427, 2391,
	428, 2391,
	429, 2391,
	430, 2391,
	431, 2391,
	432, 2391,
	433, 2391,
	435, 2391,
	436, 2391,
	437, 2391,
	438, 2391,
	439, 2391,
	440, 2391,
	441, 2391,
	442, 2391,
	443, 2391,
	444, 2391,
	445, 2391,
	446, 2391,
	447, 2391,
	448, 2391,
	449, 2391,
	451, 2391,
	452, 2391,
	453, 2391,
	455, 2391,
	456, 2391,
	457, 2391,
	458, 2391,
	459, 2391,
	460, 2391,
	461, 2391,
	462, 2391,
	463, 2391,
	464, 2391,
	465, 2391,
	466, 2391,
	467, 2391,
	468, 2391,
	469, 2391,
	470, 2391,
	471, 2391,
	473, 2391,
	475, 2391,
	476, 2391,
	477, 2391,
	483, 2391,
	484, 2391,
	485, 2391,
	487, 2391,
	488, 2391,
	489, 2391,
	490, 2391,
	491, 2391,
	492, 2391,
	493, 2391,
	494, 2391,
	495, 2391,
	496, 2391,
	497, 2391,
	498, 2391,
	499, 2391,
	501, 2391,
	502, 2391,
	503, 2391,
	504, 2391,
	505, 2391,
	507, 2391,
	508, 2391,
	509, 2391,
	510, 2391,
	511, 2391,
	512, 2391,
	513, 2391,
	515, 2391,
	516, 2391,
	517, 2391,
	518, 2391,
	519, 2391,
	520, 2391,
	521, 2391,
	522, 2391,
	523, 2391,
	524, 2391,
	525, 2391,
	526, 2391,
	527, 2391,
	528, 2391,
	529, 2391,
	530, 2391,
	532, 2391,
	533, 2391,
	534, 2391,
	535, 2391,
	536, 2391,
	537, 2391,
	538, 2391,
	540, 2391,
	541, 2391,
	542, 2391,
	543, 2391,
	544, 2391,
	545, 2391,
	546, 2391,
	547, 2391,
	549, 2391,
	550, 2391,
	551, 2391,
	552, 2391,
	553, 2391,
	554, 2391,
	555, 2391,
	556, 2391,
	557, 2391,
	558, 2391,
	560, 2391,
	562, 2391,
	563, 2391,
	564, 2391,
	565, 2391,
	566, 2391,
	567, 2391,
	568, 2391,
	569, 2391,
	570, 2391,
	571, 2391,
	572, 2391,
	573, 2391,
	574, 2391,
	575, 2391,
	576, 2391,
	577, 2391,
	578, 2391,
	579, 2391,
	580, 2391,
	581, 2391,
	582, 2391,
	583, 2391,
	584, 2391,
	585, 2391,
	586, 2391,
	588, 2391,
	589, 2391,
	591, 2391,
	592, 2391,
	594, 2391,
	595, 2391,
	596, 2391,
	597, 2391,
	598, 2391,
	599, 2391,
	600, 2391,
	601, 2391,
	602, 2391,
	603, 2391,
	605, 2391,
	606, 2391,
	607, 2391,
	608, 2391,
	609, 2391,
	611, 2391,
	613, 2391,
	614, 2391,
	615, 2391,
	616, 2391,
	617, 2391,
	618, 2391,
	619, 2391,
	620, 2391,
	622, 2391,
	623, 2391,
	624, 2391,
	625, 2391,
	626, 2391,
	627, 2391,
	628, 2391,
	631, 2391,
	632, 2391,
	633, 2391,
	634, 2391,
	635, 2391,
	636, 2391,
	637, 2391,
	638, 2391,
	639, 2391,
	640, 2391,
	641, 2391,
	643, 2391,
	646, 2391,
	647, 2391,
	648, 2391,
	649, 2391,
	650, 2391,
	651, 2391,
	653, 2391,
	654, 2391,
	655, 2391,
	656, 2391,
	657, 2391,
	658, 2391,
	659, 2391,
	660, 2391,
	661, 2391,
	662, 2391,
	663, 2391,
	664, 2391,
	665, 2391,
	666, 2391,
	667, 2391,
	668, 2391,
	669, 2391,
	674, 2391,
	675, 2391,
	676, 2391,
	677, 2391,
	678, 2391,
	679, 2391,
	-2, 0,
	-1, 1233,
	309, 695,
	-2, 0,
	-1, 1234,
	182, 1439,
	307, 1439,
	459, 1393,
	538, 1393,
	592, 1393,
	613, 1439,
	615, 1393,
	-2, 0,
	-1, 1357,
	196, 2234,
	209, 2234,
	323, 2234,
	401, 2234,
	-2, 2171,
	-1, 1375,
	196, 2233,
	209, 2233,
	323, 2233,
	401, 2233,
	-2, 2168,
	-1, 1404,
	5, 4141,
	713, 4141,
	-2, 1130,
	-1, 1405,
	715, 2997,
	-2, 1131,
	-1, 1440,
	5, 2989,
	713, 2986,
	-2, 2977,
	-1, 1449,
	715, 2995,
	-2, 2976,
	-1, 1471,
	5, 3010,
	713, 3007,
	-2, 2998,
	-1, 1472,
	5, 3011,
	713, 3008,
	-2, 2999,
	-1, 1473,
	5, 3012,
	38, 3012,
	145, 3012,
	695, 3012,
	711, 3012,
	714, 3012,
	715, 3012,
	718, 3012,
	-2, 4127,
	-1, 1474,
	5, 2466,
	-2, 4097,
	-1, 1475,
	5, 2467,
	-2, 4098,
	-1, 1476,
	5, 2468,
	-2, 4113,
	-1, 1477,
	5, 2469,
	-2, 4075,
	-1, 1478,
	5, 2470,
	-2, 4110,
	-1, 1479,
	5, 2478,
	-2, 4088,
	-1, 1481,
	5, 2465,
	-2, 4084,
	-1, 1482,
	5, 2465,
	-2, 4083,
	-1, 1483,
	5, 2465,
	-2, 4103,
	-1, 1484,
	5, 2476,
	-2, 4077,
	-1, 1485,
	5, 2481,
	713, 2493,
	-2, 4076,
	-1, 1486,
	5, 2483,
	-2, 4123,
	-1, 1489,
	5, 2505,
	-2, 4116,
	-1, 1490,
	5, 2497,
	-2, 4117,
	-1, 1491,
	5, 2505,
	-2, 4118,
	-1, 1492,
	5, 2501,
	-2, 4119,
	-1, 1493,
	5, 2449,
	-2, 4089,
	-1, 1494,
	5, 2450,
	-2, 4090,
	-1, 1495,
	5, 2451,
	-2, 4078,
	-1, 1506,
	5, 2488,
	713, 2488,
	-2, 4124,
	-1, 1507,
	5, 2489,
	713, 2489,
	-2, 4114,
	-1, 1508,
	5, 2490,
	656, 2490,
	713, 2490,
	-2, 4079,
	-1, 1509,
	5, 2491,
	656, 2491,
	713, 2491,
	-2, 4080,
	-1, 1669,
	221, 3443,
	610, 3443,
	695, 3443,
	715, 3443,
	-2, 0,
	-1, 1674,
	1, 1106,
	716, 1106,
	719, 1106,
	-2, 2074,
	-1, 1733,
	221, 1314,
	-2, 3376,
	-1, 1734,
	221, 1315,
	-2, 3138,
	-1, 1735,
	221, 1316,
	-2, 3324,
	-1, 1736,
	221, 1317,
	-2, 3468,
	-1, 1751,
	1, 1538,
	712, 1538,
	714, 1538,
	716, 1538,
	719, 1538,
	-2, 0,
	-1, 1752,
	459, 1394,
	538, 1394,
	592, 1394,
	615, 1394,
	-2, 0,
	-1, 1763,
	1, 2013,
	261, 2013,
	712, 2013,
	714, 2013,
	716, 2013,
	719, 2013,
	-2, 0,
	-1, 1783,
	1, 1389,
	712, 1389,
	714, 1389,
	716, 1389,
	719, 1389,
	-2, 0,
	-1, 1784,
	1, 1440,
	712, 1440,
	714, 1440,
	716, 1440,
	719, 1440,
	-2, 0,
	-1, 1785,
	1, 1456,
	712, 1456,
	714, 1456,
	716, 1456,
	719, 1456,
	-2, 0,
	-1, 1788,
	1, 1398,
	712, 1398,
	714, 1398,
	716, 1398,
	719, 1398,
	-2, 0,
	-1, 1791,
	1, 1405,
	712, 1405,
	714, 1405,
	716, 1405,
	719, 1405,
	-2, 0,
	-1, 1795,
	1, 1401,
	712, 1401,
	714, 1401,
	716, 1401,
	719, 1401,
	-2, 0,
	-1, 1800,
	1, 1420,
	712, 1420,
	714, 1420,
	716, 1420,
	719, 1420,
	-2, 0,
	-1, 1842,
	1, 3365,
	673, 3365,
	712, 3365,
	714, 3365,
	715, 3365,
	716, 3365,
	719, 3365,
	-2, 0,
	-1, 1847,
	1, 1521,
	712, 1521,
	714, 1521,
	716, 1521,
	719, 1521,
	-2, 0,
	-1, 1871,
	1, 2069,
	716, 2069,
	719, 2069,
	-2, 2074,
	-1, 1971,
	421, 2971,
	488, 2971,
	540, 2971,
	705, 2971,
	-2, 2957,
	-1, 1981,
	221, 178,
	316, 178,
	385, 178,
	667, 178,
	-2, 3438,
	-1, 1982,
	221, 179,
	316, 179,
	385, 179,
	667, 179,
	-2, 3129,
	-1, 1983,
	221, 180,
	316, 180,
	385, 180,
	667, 180,
	-2, 3339,
	-1, 1989,
	717, 2971,
	-2, 2973,
	-1, 1992,
	25, 3365,
	261, 3365,
	-2, 0,
	-1, 2005,
	1, 1904,
	493, 1855,
	540, 1855,
	686, 1855,
	692, 1855,
	712, 1904,
	714, 1904,
	716, 1904,
	719, 1904,
	-2, 2219,
	-1, 2011,
	237, 2013,
	261, 2013,
	505, 2013,
	-2, 0,
	-1, 2082,
	48, 2969,
	-2, 1629,
	-1, 2089,
	1, 1904,
	712, 1904,
	714, 1904,
	716, 1904,
	719, 1904,
	-2, 2219,
	-1, 2092,
	468, 1666,
	654, 1666,
	-2, 584,
	-1, 2098,
	4, 1936,
	21, 1936,
	22, 1936,
	23, 1936,
	24, 1936,
	25, 1936,
	26, 1936,
	27, 1936,
	28, 1936,
	30, 1936,
	31, 1936,
	37, 1936,
	41, 1936,
	43, 1936,
	45, 1936,
	46, 1936,
	47, 1936,
	49, 1936,
	50, 1936,
	51, 1936,
	52, 1936,
	53, 1936,
	54, 1936,
	55, 1936,
	56, 1936,
	57, 1936,
	58, 1936,
	60, 1936,
	61, 1936,
	62, 1936,
	63, 1936,
	65, 1936,
	66, 1936,
	67, 1936,
	68, 1936,
	69, 1936,
	70, 1936,
	71, 1936,
	72, 1936,
	73, 1936,
	74, 1936,
	75, 1936,
	79, 1936,
	80, 1936,
	81, 1936,
	82, 1936,
	84, 1936,
	85, 1936,
	86, 1936,
	87, 1936,
	88, 1936,
	92, 1936,
	93, 1936,
	94, 1936,
	95, 1936,
	96, 1936,
	97, 1936,
	98, 1936,
	99, 1936,
	102, 1936,
	103, 1936,
	104, 1936,
	105, 1936,
	106, 1936,
	107, 1936,
	109, 1936,
	111, 1936,
	112, 1936,
	113, 1936,
	114, 1936,
	115, 1936,
	116, 1936,
	117, 1936,
	119, 1936,
	120, 1936,
	121, 1936,
	123, 1936,
	124, 1936,
	125, 1936,
	133, 1936,
	134, 1936,
	135, 1936,
	136, 1936,
	137, 1936,
	139, 1936,
	140, 1936,
	141, 1936,
	142, 1936,
	143, 1936,
	144, 1936,
	146, 1936,
	147, 1936,
	148, 1936,
	149, 1936,
	151, 1936,
	152, 1936,
	153, 1936,
	154, 1936,
	156, 1936,
	157, 1936,
	158, 1936,
	159, 1936,
	162, 1936,
	163, 1936,
	164, 1936,
	166, 1936,
	167, 1936,
	168, 1936,
	169, 1936,
	171, 1936,
	172, 1936,
	173, 1936,
	175, 1936,
	176, 1936,
	177, 1936,
	178, 1936,
	179, 1936,
	180, 1936,
	181, 1936,
	182, 1936,
	183, 1936,
	184, 1936,
	185, 1936,
	186, 1936,
	187, 1936,
	188, 1936,
	189, 1936,
	190, 1936,
	191, 1936,
	192, 1936,
	193, 1936,
	201, 1936,
	202, 1936,
	203, 1936,
	204, 1936,
	208, 1936,
	210, 1936,
	211, 1936,
	212, 1936,
	213, 1936,
	214, 1936,
	215, 1936,
	216, 1936,
	218, 1936,
	219, 1936,
	220, 1936,
	223, 1936,
	224, 1936,
	225, 1936,
	226, 1936,
	227, 1936,
	228, 1936,
	229, 1936,
	230, 1936,
	231, 1936,
	232, 1936,
	233, 1936,
	234, 1936,
	235, 1936,
	236, 1936,
	238, 1936,
	239, 1936,
	240, 1936,
	242, 1936,
	243, 1936,
	245, 1936,
	246, 1936,
	247, 1936,
	248, 1936,
	249, 1936,
	250, 1936,
	251, 1936,
	252, 1936,
	253, 1936,
	254, 1936,
	255, 1936,
	257, 1936,
	258, 1936,
	259, 1936,
	260, 1936,
	262, 1936,
	263, 1936,
	264, 1936,
	265, 1936,
	266, 1936,
	267, 1936,
	268, 1936,
	272, 1936,
	273, 1936,
	274, 1936,
	275, 1936,
	281, 1936,
	282, 1936,
	283, 1936,
	284, 1936,
	285, 1936,
	286, 1936,
	288, 1936,
	290, 1936,
	291, 1936,
	292, 1936,
	294, 1936,
	296, 1936,
	297, 1936,
	298, 1936,
	300, 1936,
	304, 1936,
	305, 1936,
	306, 1936,
	307, 1936,
	308, 1936,
	309, 1936,
	310, 1936,
	312, 1936,
	313, 1936,
	314, 1936,
	316, 1936,
	317, 1936,
	318, 1936,
	320, 1936,
	321, 1936,
	324, 1936,
	325, 1936,
	326, 1936,
	327, 1936,
	328, 1936,
	329, 1936,
	330, 1936,
	333, 1936,
	334, 1936,
	335, 1936,
	336, 1936,
	338, 1936,
	339, 1936,
	340, 1936,
	341, 1936,
	342, 1936,
	343, 1936,
	344, 1936,
	345, 1936,
	346, 1936,
	347, 1936,
	348, 1936,
	349, 1936,
	350, 1936,
	351, 1936,
	352, 1936,
	353, 1936,
	354, 1936,
	355, 1936,
	356, 1936,
	357, 1936,
	358, 1936,
	359, 1936,
	360, 1936,
	361, 1936,
	363, 1936,
	365, 1936,
	366, 1936,
	367, 1936,
	368, 1936,
	369, 1936,
	370, 1936,
	371, 1936,
	372, 1936,
	373, 1936,
	374, 1936,
	375, 1936,
	376, 1936,
	377, 1936,
	378, 1936,
	379, 1936,
	380, 1936,
	381, 1936,
	382, 1936,
	383, 1936,
	385, 1936,
	386, 1936,
	388, 1936,
	391, 1936,
	392, 1936,
	393, 1936,
	394, 1936,
	396, 1936,
	397, 1936,
	398, 1936,
	399, 1936,
	400, 1936,
	403, 1936,
	405, 1936,
	406, 1936,
	408, 1936,
	409, 1936,
	410, 1936,
	413, 1936,
	414, 1936,
	415, 1936,
	417, 1936,
	419, 1936,
	420, 1936,
	421, 1936,
	422, 1936,
	423, 1936,
	424, 1936,
	425, 1936,
	426, 1936,
	427, 1936,
	428, 1936,
	429, 1936,
	430, 1936,
	431, 1936,
	432, 1936,
	433, 1936,
	435, 1936,
	436, 1936,
	437, 1936,
	438, 1936,
	439, 1936,
	440, 1936,
	441, 1936,
	442, 1936,
	443, 1936,
	444, 1936,
	445, 1936,
	446, 1936,
	447, 1936,
	448, 1936,
	449, 1936,
	451, 1936,
	452, 1936,
	453, 1936,
	455, 1936,
	456, 1936,
	457, 1936,
	458, 1936,
	459, 1936,
	460, 1936,
	461, 1936,
	462, 1936,
	463, 1936,
	464, 1936,
	465, 1936,
	466, 1936,
	467, 1936,
	468, 1936,
	469, 1936,
	470, 1936,
	471, 1936,
	473, 1936,
	475, 1936,
	476, 1936,
	477, 1936,
	483, 1936,
	484, 1936,
	485, 1936,
	487, 1936,
	488, 1936,
	489, 1936,
	490, 1936,
	491, 1936,
	492, 1936,
	493, 1936,
	494, 1936,
	495, 1936,
	496, 1936,
	497, 1936,
	498, 1936,
	499, 1936,
	501, 1936,
	502, 1936,
	503, 1936,
	504, 1936,
	505, 1936,
	507, 1936,
	508, 1936,
	509, 1936,
	510, 1936,
	511, 1936,
	512, 1936,
	513, 1936,
	515, 1936,
	516, 1936,
	517, 1936,
	518, 1936,
	519, 1936,
	520, 1936,
	521, 1936,
	522, 1936,
	523, 1936,
	524, 1936,
	525, 1936,
	526, 1936,
	527, 1936,
	528, 1936,
	529, 1936,
	530, 1936,
	532, 1936,
	533, 1936,
	534, 1936,
	535, 1936,
	536, 1936,
	537, 1936,
	538, 1936,
	540, 1936,
	541, 1936,
	542, 1936,
	543, 1936,
	544, 1936,
	545, 1936,
	546, 1936,
	547, 1936,
	549, 1936,
	550, 1936,
	551, 1936,
	552, 1936,
	553, 1936,
	554, 1936,
	555, 1936,
	556, 1936,
	557, 1936,
	558, 1936,
	560, 1936,
	562, 1936,
	563, 1936,
	564, 1936,
	565, 1936,
	566, 1936,
	567, 1936,
	568, 1936,
	569, 1936,
	570, 1936,
	571, 1936,
	572, 1936,
	573, 1936,
	574, 1936,
	575, 1936,
	576, 1936,
	577, 1936,
	578, 1936,
	579, 1936,
	580, 1936,
	581, 1936,
	582, 1936,
	583, 1936,
	584, 1936,
	585, 1936,
	586, 1936,
	588, 1936,
	589, 1936,
	591, 1936,
	592, 1936,
	594, 1936,
	595, 1936,
	596, 1936,
	597, 1936,
	598, 1936,
	599, 1936,
	600, 1936,
	601, 1936,
	602, 1936,
	603, 1936,
	605, 1936,
	606, 1936,
	607, 1936,
	608, 1936,
	609, 1936,
	611, 1936,
	613, 1936,
	614, 1936,
	615, 1936,
	616, 1936,
	617, 1936,
	618, 1936,
	619, 1936,
	620, 1936,
	622, 1936,
	623, 1936,
	624, 1936,
	625, 1936,
	626, 1936,
	627, 1936,
	628, 1936,
	631, 1936,
	632, 1936,
	633, 1936,
	634, 1936,
	635, 1936,
	636, 1936,
	637, 1936,
	638, 1936,
	639, 1936,
	640, 1936,
	641, 1936,
	643, 1936,
	646, 1936,
	647, 1936,
	648, 1936,
	649, 1936,
	650, 1936,
	651, 1936,
	653, 1936,
	654, 1936,
	655, 1936,
	656, 1936,
	657, 1936,
	658, 1936,
	659, 1936,
	660, 1936,
	661, 1936,
	662, 1936,
	663, 1936,
	664, 1936,
	665, 1936,
	666, 1936,
	667, 1936,
	668, 1936,
	669, 1936,
	674, 1936,
	675, 1936,
	676, 1936,
	677, 1936,
	678, 1936,
	679, 1936,
	-2, 0,
	-1, 2122,
	1, 863,
	712, 863,
	714, 863,
	716, 863,
	719, 863,
	-2, 2191,
	-1, 2125,
	4, 4122,
	11, 4122,
	12, 4122,
	14, 4122,
	15, 4122,
	16, 4122,
	17, 4122,
	18, 4122,
	19, 4122,
	21, 4122,
	22, 4122,
	23, 4122,
	24, 4122,
	25, 4122,
	26, 4122,
	27, 4122,
	28, 4122,
	30, 4122,
	31, 4122,
	34, 4122,
	35, 4122,
	37, 4122,
	39, 4122,
	41, 4122,
	42, 4122,
	43, 4122,
	45, 4122,
	46, 4122,
	47, 4122,
	49, 4122,
	50, 4122,
	51, 4122,
	52, 4122,
	53, 4122,
	54, 4122,
	55, 4122,
	56, 4122,
	57, 4122,
	58, 4122,
	60, 4122,
	61, 4122,
	62, 4122,
	63, 4122,
	65, 4122,
	66, 4122,
	67, 4122,
	68, 4122,
	69, 4122,
	70, 4122,
	71, 4122,
	72, 4122,
	73, 4122,
	74, 4122,
	75, 4122,
	78, 4122,
	79, 4122,
	80, 4122,
	81, 4122,
	82, 4122,
	84, 4122,
	85, 4122,
	86, 4122,
	87, 4122,
	88, 4122,
	89, 4122,
	92, 4122,
	93, 4122,
	94, 4122,
	95, 4122,
	96, 4122,
	97, 4122,
	98, 4122,
	99, 4122,
	100, 4122,
	102, 4122,
	103, 4122,
	104, 4122,
	105, 4122,
	106, 4122,
	107, 4122,
	109, 4122,
	110, 4122,
	111, 4122,
	112, 4122,
	113, 4122,
	114, 4122,
	115, 4122,
	116, 4122,
	117, 4122,
	119, 4122,
	120, 4122,
	121, 4122,
	122, 4122,
	123, 4122,
	124, 4122,
	125, 4122,
	133, 4122,
	134, 4122,
	135, 4122,
	136, 4122,
	137, 4122,
	139, 4122,
	140, 4122,
	141, 4122,
	142, 4122,
	143, 4122,
	144, 4122,
	146, 4122,
	147, 4122,
	148, 4122,
	149, 4122,
	151, 4122,
	152, 4122,
	153, 4122,
	154, 4122,
	156, 4122,
	157, 4122,
	158, 4122,
	159, 4122,
	162, 4122,
	163, 4122,
	164, 4122,
	166, 4122,
	167, 4122,
	168, 4122,
	169, 4122,
	171, 4122,
	172, 4122,
	173, 4122,
	175, 4122,
	176, 4122,
	177, 4122,
	178, 4122,
	179, 4122,
	180, 4122,
	181, 4122,
	182, 4122,
	183, 4122,
	184, 4122,
	185, 4122,
	186, 4122,
	187, 4122,
	188, 4122,
	189, 4122,
	190, 4122,
	191, 4122,
	192, 4122,
	193, 4122,
	197, 4122,
	198, 4122,
	199, 4122,
	200, 4122,
	201, 4122,
	202, 4122,
	203, 4122,
	204, 4122,
	207, 4122,
	208, 4122,
	210, 4122,
	211, 4122,
	212, 4122,
	213, 4122,
	214, 4122,
	215, 4122,
	216, 4122,
	218, 4122,
	219, 4122,
	220, 4122,
	222, 4122,
	223, 4122,
	224, 4122,
	225, 4122,
	226, 4122,
	227, 4122,
	228, 4122,
	229, 4122,
	230, 4122,
	231, 4122,
	232, 4122,
	233, 4122,
	234, 4122,
	235, 4122,
	236, 4122,
	238, 4122,
	239, 4122,
	240, 4122,
	242, 4122,
	243, 4122,
	245, 4122,
	246, 4122,
	247, 4122,
	248, 4122,
	249, 4122,
	250, 4122,
	251, 4122,
	252, 4122,
	253, 4122,
	254, 4122,
	255, 4122,
	256, 4122,
	257, 4122,
	258, 4122,
	259, 4122,
	260, 4122,
	261, 4122,
	262, 4122,
	263, 4122,
	264, 4122,
	265, 4122,
	266, 4122,
	267, 4122,
	268, 4122,
	270, 4122,
	271, 4122,
	272, 4122,
	273, 4122,
	274, 4122,
	275, 4122,
	280, 4122,
	281, 4122,
	282, 4122,
	283, 4122,
	284, 4122,
	285, 4122,
	286, 4122,
	288, 4122,
	290, 4122,
	291, 4122,
	292, 4122,
	293, 4122,
	294, 4122,
	295, 4122,
	296, 4122,
	297, 4122,
	298, 4122,
	299, 4122,
	300, 4122,
	302, 4122,
	303, 4122,
	304, 4122,
	305, 4122,
	306, 4122,
	307, 4122,
	308, 4122,
	309, 4122,
	310, 4122,
	312, 4122,
	313, 4122,
	314, 4122,
	316, 4122,
	317, 4122,
	318, 4122,
	319, 4122,
	320, 4122,
	321, 4122,
	322, 4122,
	324, 4122,
	325, 4122,
	326, 4122,
	327, 4122,
	328, 4122,
	329, 4122,
	330, 4122,
	333, 4122,
	334, 4122,
	335, 4122,
	336, 4122,
	337, 4122,
	338, 4122,
	339, 4122,
	340, 4122,
	341, 4122,
	342, 4122,
	343, 4122,
	344, 4122,
	345, 4122,
	346, 4122,
	347, 4122,
	348, 4122,
	349, 4122,
	350, 4122,
	351, 4122,
	352, 4122,
	353, 4122,
	354, 4122,
	355, 4122,
	356, 4122,
	357, 4122,
	358, 4122,
	359, 4122,
	360, 4122,
	361, 4122,
	363, 4122,
	364, 4122,
	365, 4122,
	366, 4122,
	367, 4122,
	368, 4122,
	369, 4122,
	370, 4122,
	371, 4122,
	372, 4122,
	373, 4122,
	374, 4122,
	375, 4122,
	376, 4122,
	377, 4122,
	378, 4122,
	379, 4122,
	380, 4122,
	381, 4122,
	382, 4122,
	383, 4122,
	385, 4122,
	386, 4122,
	388, 4122,
	390, 4122,
	391, 4122,
	392, 4122,
	393, 4122,
	394, 4122,
	396, 4122,
	397, 4122,
	398, 4122,
	399, 4122,
	400, 4122,
	403, 4122,
	405, 4122,
	408, 4122,
	409, 4122,
	410, 4122,
	411, 4122,
	413, 4122,
	414, 4122,
	415, 4122,
	417, 4122,
	419, 4122,
	420, 4122,
	421, 4122,
	422, 4122,
	423, 4122,
	424, 4122,
	425, 4122,
	426, 4122,
	427, 4122,
	428, 4122,
	429, 4122,
	430, 4122,
	431, 4122,
	432, 4122,
	433, 4122,
	435, 4122,
	436, 4122,
	437, 4122,
	438, 4122,
	439, 4122,
	440, 4122,
	441, 4122,
	442, 4122,
	443, 4122,
	444, 4122,
	445, 4122,
	446, 4122,
	447, 4122,
	448, 4122,
	449, 4122,
	451, 4122,
	452, 4122,
	453, 4122,
	455, 4122,
	456, 4122,
	457, 4122,
	458, 4122,
	459, 4122,
	460, 4122,
	461, 4122,
	462, 4122,
	463, 4122,
	464, 4122,
	465, 4122,
	466, 4122,
	467, 4122,
	468, 4122,
	469, 4122,
	470, 4122,
	471, 4122,
	473, 4122,
	475, 4122,
	476, 4122,
	477, 4122,
	483, 4122,
	484, 4122,
	485, 4122,
	486, 4122,
	487, 4122,
	488, 4122,
	489, 4122,
	490, 4122,
	491, 4122,
	492, 4122,
	493, 4122,
	494, 4122,
	495, 4122,
	496, 4122,
	497, 4122,
	498, 4122,
	499, 4122,
	501, 4122,
	502, 4122,
	503, 4122,
	504, 4122,
	505, 4122,
	506, 4122,
	507, 4122,
	508, 4122,
	509, 4122,
	510, 4122,
	511, 4122,
	512, 4122,
	513, 4122,
	514, 4122,
	515, 4122,
	516, 4122,
	517, 4122,
	518, 4122,
	519, 4122,
	520, 4122,
	521, 4122,
	522, 4122,
	523, 4122,
	524, 4122,
	525, 4122,
	526, 4122,
	527, 4122,
	528, 4122,
	529, 4122,
	530, 4122,
	532, 4122,
	533, 4122,
	534, 4122,
	535, 4122,
	536, 4122,
	537, 4122,
	538, 4122,
	540, 4122,
	541, 4122,
	542, 4122,
	543, 4122,
	544, 4122,
	545, 4122,
	546, 4122,
	547, 4122,
	548, 4122,
	549, 4122,
	550, 4122,
	551, 4122,
	552, 4122,
	553, 4122,
	554, 4122,
	555, 4122,
	556, 4122,
	557, 4122,
	558, 4122,
	560, 4122,
	562, 4122,
	563, 4122,
	564, 4122,
	565, 4122,
	566, 4122,
	567, 4122,
	568, 4122,
	569, 4122,
	570, 4122,
	571, 4122,
	572, 4122,
	573, 4122,
	574, 4122,
	575, 4122,
	576, 4122,
	577, 4122,
	578, 4122,
	579, 4122,
	580, 4122,
	581, 4122,
	582, 4122,
	583, 4122,
	584, 4122,
	585, 4122,
	586, 4122,
	588, 4122,
	589, 4122,
	590, 4122,
	591, 4122,
	592, 4122,
	594, 4122,
	595, 4122,
	596, 4122,
	597, 4122,
	598, 4122,
	599, 4122,
	600, 4122,
	601, 4122,
	602, 4122,
	603, 4122,
	605, 4122,
	606, 4122,
	607, 4122,
	608, 4122,
	609, 4122,
	611, 4122,
	613, 4122,
	614, 4122,
	615, 4122,
	616, 4122,
	617, 4122,
	618, 4122,
	619, 4122,
	620, 4122,
	622, 4122,
	623, 4122,
	624, 4122,
	625, 4122,
	626, 4122,
	627, 4122,
	628, 4122,
	631, 4122,
	632, 4122,
	633, 4122,
	634, 4122,
	635, 4122,
	636, 4122,
	637, 4122,
	638, 4122,
	639, 4122,
	640, 4122,
	641, 4122,
	643, 4122,
	646, 4122,
	647, 4122,
	648, 4122,
	649, 4122,
	650, 4122,
	651, 4122,
	653, 4122,
	654, 4122,
	655, 4122,
	656, 4122,
	657, 4122,
	658, 4122,
	659, 4122,
	660, 4122,
	661, 4122,
	662, 4122,
	663, 4122,
	664, 4122,
	665, 4122,
	666, 4122,
	667, 4122,
	668, 4122,
	669, 4122,
	674, 4122,
	675, 4122,
	676, 4122,
	677, 4122,
	678, 4122,
	679, 4122,
	680, 4122,
	682, 4122,
	693, 4122,
	694, 4122,
	695, 4122,
	696, 4122,
	697, 4122,
	698, 4122,
	700, 4122,
	701, 4122,
	702, 4122,
	703, 4122,
	704, 4122,
	705, 4122,
	706, 4122,
	707, 4122,
	708, 4122,
	711, 4122,
	714, 4122,
	715, 4122,
	717, 4122,
	718, 4122,
	-2, 0,
	-1, 2130,
	221, 3387,
	610, 3387,
	695, 3387,
	715, 3387,
	-2, 0,
	-1, 2172,
	196, 2233,
	209, 2233,
	323, 2233,
	401, 2233,
	-2, 2172,
	-1, 2275,
	174, 2193,
	196, 2193,
	209, 2193,
	287, 2193,
	323, 2193,
	401, 2193,
	412, 2193,
	629, 2193,
	-2, 2671,
	-1, 2322,
	713, 2492,
	-2, 2482,
	-1, 2339,
	714, 2849,
	-2, 0,
	-1, 2376,
	174, 2193,
	196, 2193,
	209, 2193,
	287, 2193,
	323, 2193,
	401, 2193,
	412, 2193,
	629, 2193,
	-2, 2345,
	-1, 2430,
	715, 2998,
	718, 2998,
	-2, 1571,
	-1, 2431,
	715, 3000,
	718, 3000,
	-2, 1572,
	-1, 2432,
	715, 2999,
	718, 2999,
	-2, 1573,
	-1, 2433,
	718, 2919,
	-2, 1574,
	-1, 2470,
	713, 2493,
	-2, 2481,
	-1, 2487,
	221, 3383,
	715, 3383,
	718, 3383,
	-2, 0,
	-1, 2545,
	1, 1108,
	716, 1108,
	719, 1108,
	-2, 2074,
	-1, 2616,
	1, 1391,
	712, 1391,
	714, 1391,
	716, 1391,
	719, 1391,
	-2, 0,
	-1, 2617,
	1, 1442,
	712, 1442,
	714, 1442,
	716, 1442,
	719, 1442,
	-2, 0,
	-1, 2618,
	1, 1458,
	712, 1458,
	714, 1458,
	716, 1458,
	719, 1458,
	-2, 0,
	-1, 2619,
	1, 1523,
	712, 1523,
	714, 1523,
	716, 1523,
	719, 1523,
	-2, 0,
	-1, 2670,
	1, 1422,
	712, 1422,
	714, 1422,
	716, 1422,
	719, 1422,
	-2, 0,
	-1, 2701,
	1, 1498,
	712, 1498,
	714, 1498,
	716, 1498,
	719, 1498,
	-2, 0,
	-1, 2907,
	261, 368,
	-2, 3006,
	-1, 2908,
	261, 369,
	-2, 439,
	-1, 3039,
	512, 2270,
	513, 2270,
	-2, 2526,
	-1, 3073,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2546,
	-1, 3074,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2547,
	-1, 3075,
	110, 0,
	302, 0,
	303, 0,
	697, 0,
	698, 0,
	-2, 2548,
	-1, 3076,
	110, 0,
	302, 0,
	303, 0,
	697, 0,
	698, 0,
	-2, 2549,
	-1, 3077,
	110, 0,
	302, 0,
	303, 0,
	697, 0,
	698, 0,
	-2, 2550,
	-1, 3078,
	110, 0,
	302, 0,
	303, 0,
	697, 0,
	698, 0,
	-2, 2551,
	-1, 3079,
	110, 0,
	302, 0,
	303, 0,
	697, 0,
	698, 0,
	-2, 2552,
	-1, 3080,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2553,
	-1, 3093,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2566,
	-1, 3094,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2567,
	-1, 3095,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2568,
	-1, 3099,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2575,
	-1, 3105,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2579,
	-1, 3107,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2587,
	-1, 3108,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2588,
	-1, 3109,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2589,
	-1, 3110,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2590,
	-1, 3282,
	5, 3010,
	221, 2860,
	713, 3007,
	-2, 2998,
	-1, 3283,
	221, 2861,
	-2, 3488,
	-1, 3284,
	221, 2862,
	-2, 3245,
	-1, 3285,
	221, 2863,
	-2, 3096,
	-1, 3286,
	221, 2864,
	-2, 3172,
	-1, 3287,
	221, 2865,
	-2, 3229,
	-1, 3288,
	221, 2866,
	-2, 3379,
	-1, 3289,
	221, 2867,
	-2, 2654,
	-1, 3332,
	29, 2835,
	36, 2835,
	561, 2835,
	-2, 3753,
	-1, 3333,
	29, 2837,
	36, 2837,
	561, 2837,
	-2, 3695,
	-1, 3336,
	1, 3522,
	2, 3522,
	174, 3522,
	196, 3522,
	209, 3522,
	221, 3522,
	241, 3522,
	244, 3522,
	287, 3522,
	323, 3522,
	401, 3522,
	406, 3522,
	412, 3522,
	500, 3522,
	629, 3522,
	671, 3522,
	672, 3522,
	673, 3522,
	712, 3522,
	714, 3522,
	716, 3522,
	718, 3522,
	719, 3522,
	-2, 2901,
	-1, 3948,
	1, 2346,
	2, 2346,
	122, 2346,
	174, 2346,
	196, 2346,
	209, 2346,
	222, 2346,
	241, 2346,
	244, 2346,
	280, 2346,
	287, 2346,
	299, 2346,
	319, 2346,
	323, 2346,
	364, 2346,
	401, 2346,
	406, 2346,
	412, 2346,
	500, 2346,
	506, 2346,
	629, 2346,
	644, 2346,
	671, 2346,
	672, 2346,
	673, 2346,
	683, 2346,
	712, 2346,
	714, 2346,
	716, 2346,
	718, 2346,
	719, 2346,
	-2, 2345,
	-1, 3963,
	713, 2978,
	-2, 2993,
	-1, 3975,
	1, 462,
	671, 462,
	719, 462,
	-2, 2219,
	-1, 3977,
	1, 462,
	719, 462,
	-2, 2219,
	-1, 4046,
	38, 3010,
	145, 3010,
	695, 3010,
	711, 3010,
	714, 3010,
	715, 3010,
	718, 3010,
	-2, 3007,
	-1, 4047,
	38, 3011,
	145, 3011,
	695, 3011,
	711, 3011,
	714, 3011,
	715, 3011,
	718, 3011,
	-2, 3008,
	-1, 4179,
	1, 1502,
	712, 1502,
	714, 1502,
	716, 1502,
	719, 1502,
	-2, 0,
	-1, 4417,
	1, 1904,
	493, 1855,
	540, 1855,
	686, 1855,
	692, 1855,
	712, 1904,
	714, 1904,
	716, 1904,
	719, 1904,
	-2, 2219,
	-1, 4438,
	289, 331,
	-2, 0,
	-1, 4439,
	4, 761,
	21, 761,
	22, 761,
	23, 761,
	24, 761,
	25, 761,
	26, 761,
	27, 761,
	28, 761,
	30, 761,
	31, 761,
	37, 761,
	41, 761,
	43, 761,
	45, 761,
	46, 761,
	47, 761,
	49, 761,
	50, 761,
	51, 761,
	52, 761,
	53, 761,
	54, 761,
	55, 761,
	56, 761,
	57, 761,
	58, 761,
	60, 761,
	61, 761,
	62, 761,
	63, 761,
	65, 761,
	66, 761,
	67, 761,
	68, 761,
	69, 761,
	70, 761,
	71, 761,
	72, 761,
	73, 761,
	74, 761,
	75, 761,
	79, 761,
	80, 761,
	81, 761,
	82, 761,
	84, 761,
	85, 761,
	86, 761,
	87, 761,
	88, 761,
	92, 761,
	93, 761,
	94, 761,
	95, 761,
	96, 761,
	97, 761,
	98, 761,
	99, 761,
	102, 761,
	103, 761,
	104, 761,
	105, 761,
	106, 761,
	107, 761,
	109, 761,
	111, 761,
	112, 761,
	113, 761,
	114, 761,
	115, 761,
	116, 761,
	117, 761,
	119, 761,
	120, 761,
	121, 761,
	123, 761,
	124, 761,
	125, 761,
	133, 761,
	134, 761,
	135, 761,
	136, 761,
	137, 761,
	139, 761,
	140, 761,
	141, 761,
	142, 761,
	143, 761,
	144, 761,
	146, 761,
	147, 761,
	148, 761,
	149, 761,
	151, 761,
	152, 761,
	153, 761,
	154, 761,
	156, 761,
	157, 761,
	158, 761,
	159, 761,
	162, 761,
	163, 761,
	164, 761,
	166, 761,
	167, 761,
	168, 761,
	169, 761,
	171, 761,
	172, 761,
	173, 761,
	175, 761,
	176, 761,
	177, 761,
	178, 761,
	179, 761,
	180, 761,
	181, 761,
	182, 761,
	183, 761,
	184, 761,
	185, 761,
	186, 761,
	187, 761,
	188, 761,
	189, 761,
	190, 761,
	191, 761,
	192, 761,
	193, 761,
	195, 761,
	201, 761,
	202, 761,
	203, 761,
	204, 761,
	208, 761,
	210, 761,
	211, 761,
	212, 761,
	213, 761,
	214, 761,
	215, 761,
	216, 761,
	218, 761,
	219, 761,
	220, 761,
	223, 761,
	224, 761,
	225, 761,
	226, 761,
	227, 761,
	228, 761,
	229, 761,
	230, 761,
	231, 761,
	232, 761,
	233, 761,
	234, 761,
	235, 761,
	236, 761,
	238, 761,
	239, 761,
	240, 761,
	242, 761,
	243, 761,
	245, 761,
	246, 761,
	247, 761,
	248, 761,
	249, 761,
	250, 761,
	251, 761,
	252, 761,
	253, 761,
	254, 761,
	255, 761,
	257, 761,
	258, 761,
	259, 761,
	260, 761,
	262, 761,
	263, 761,
	264, 761,
	265, 761,
	266, 761,
	267, 761,
	268, 761,
	272, 761,
	273, 761,
	274, 761,
	275, 761,
	277, 761,
	278, 761,
	279, 761,
	281, 761,
	282, 761,
	283, 761,
	284, 761,
	285, 761,
	286, 761,
	288, 761,
	290, 761,
	291, 761,
	292, 761,
	294, 761,
	296, 761,
	297, 761,
	298, 761,
	300, 761,
	304, 761,
	305, 761,
	306, 761,
	307, 761,
	308, 761,
	309, 761,
	310, 761,
	312, 761,
	313, 761,
	314, 761,
	316, 761,
	317, 761,
	318, 761,
	320, 761,
	321, 761,
	324, 761,
	325, 761,
	326, 761,
	327, 761,
	328, 761,
	329, 761,
	330, 761,
	333, 761,
	334, 761,
	335, 761,
	336, 761,
	338, 761,
	339, 761,
	340, 761,
	341, 761,
	342, 761,
	343, 761,
	344, 761,
	345, 761,
	346, 761,
	347, 761,
	348, 761,
	349, 761,
	350, 761,
	351, 761,
	352, 761,
	353, 761,
	354, 761,
	355, 761,
	356, 761,
	357, 761,
	358, 761,
	359, 761,
	360, 761,
	361, 761,
	363, 761,
	365, 761,
	366, 761,
	367, 761,
	368, 761,
	369, 761,
	370, 761,
	371, 761,
	372, 761,
	373, 761,
	374, 761,
	375, 761,
	376, 761,
	377, 761,
	378, 761,
	379, 761,
	380, 761,
	381, 761,
	382, 761,
	383, 761,
	385, 761,
	386, 761,
	388, 761,
	389, 761,
	391, 761,
	392, 761,
	393, 761,
	394, 761,
	396, 761,
	397, 761,
	398, 761,
	399, 761,
	400, 761,
	403, 761,
	405, 761,
	408, 761,
	409, 761,
	410, 761,
	413, 761,
	414, 761,
	415, 761,
	417, 761,
	419, 761,
	420, 761,
	421, 761,
	422, 761,
	423, 761,
	424, 761,
	425, 761,
	426, 761,
	427, 761,
	428, 761,
	429, 761,
	430, 761,
	431, 761,
	432, 761,
	433, 761,
	435, 761,
	436, 761,
	437, 761,
	438, 761,
	439, 761,
	440, 761,
	441, 761,
	442, 761,
	443, 761,
	444, 761,
	445, 761,
	446, 761,
	447, 761,
	448, 761,
	449, 761,
	451, 761,
	452, 761,
	453, 761,
	455, 761,
	456, 761,
	457, 761,
	458, 761,
	459, 761,
	460, 761,
	461, 761,
	462, 761,
	463, 761,
	464, 761,
	465, 761,
	466, 761,
	467, 761,
	468, 761,
	469, 761,
	470, 761,
	471, 761,
	473, 761,
	475, 761,
	476, 761,
	477, 761,
	483, 761,
	484, 761,
	485, 761,
	487, 761,
	488, 761,
	489, 761,
	490, 761,
	491, 761,
	492, 761,
	493, 761,
	494, 761,
	495, 761,
	496, 761,
	497, 761,
	498, 761,
	499, 761,
	501, 761,
	502, 761,
	503, 761,
	504, 761,
	505, 761,
	507, 761,
	508, 761,
	509, 761,
	510, 761,
	511, 761,
	512, 761,
	513, 761,
	515, 761,
	516, 761,
	517, 761,
	518, 761,
	519, 761,
	520, 761,
	521, 761,
	522, 761,
	523, 761,
	524, 761,
	525, 761,
	526, 761,
	527, 761,
	528, 761,
	529, 761,
	530, 761,
	532, 761,
	533, 761,
	534, 761,
	535, 761,
	536, 761,
	537, 761,
	538, 761,
	540, 761,
	541, 761,
	542, 761,
	543, 761,
	544, 761,
	545, 761,
	546, 761,
	547, 761,
	549, 761,
	550, 761,
	551, 761,
	552, 761,
	553, 761,
	554, 761,
	555, 761,
	556, 761,
	557, 761,
	558, 761,
	560, 761,
	562, 761,
	563, 761,
	564, 761,
	565, 761,
	566, 761,
	567, 761,
	568, 761,
	569, 761,
	570, 761,
	571, 761,
	572, 761,
	573, 761,
	574, 761,
	575, 761,
	576, 761,
	577, 761,
	578, 761,
	579, 761,
	580, 761,
	581, 761,
	582, 761,
	583, 761,
	584, 761,
	585, 761,
	586, 761,
	588, 761,
	589, 761,
	591, 761,
	592, 761,
	594, 761,
	595, 761,
	596, 761,
	597, 761,
	598, 761,
	599, 761,
	600, 761,
	601, 761,
	602, 761,
	603, 761,
	605, 761,
	606, 761,
	607, 761,
	608, 761,
	609, 761,
	611, 761,
	613, 761,
	614, 761,
	615, 761,
	616, 761,
	617, 761,
	618, 761,
	619, 761,
	620, 761,
	622, 761,
	623, 761,
	624, 761,
	625, 761,
	626, 761,
	627, 761,
	628, 761,
	631, 761,
	632, 761,
	633, 761,
	634, 761,
	635, 761,
	636, 761,
	637, 761,
	638, 761,
	639, 761,
	640, 761,
	641, 761,
	643, 761,
	646, 761,
	647, 761,
	648, 761,
	649, 761,
	650, 761,
	651, 761,
	653, 761,
	654, 761,
	655, 761,
	656, 761,
	657, 761,
	658, 761,
	659, 761,
	660, 761,
	661, 761,
	662, 761,
	663, 761,
	664, 761,
	665, 761,
	666, 761,
	667, 761,
	668, 761,
	669, 761,
	674, 761,
	675, 761,
	676, 761,
	677, 761,
	678, 761,
	679, 761,
	-2, 0,
	-1, 4540,
	407, 2273,
	-2, 4111,
	-1, 4541,
	407, 2274,
	-2, 3362,
	-1, 4545,
	512, 2930,
	513, 2930,
	-2, 2652,
	-1, 4546,
	512, 2934,
	513, 2934,
	-2, 2653,
	-1, 4547,
	512, 2931,
	513, 2931,
	-2, 2652,
	-1, 4548,
	512, 2935,
	513, 2935,
	-2, 2653,
	-1, 4562,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2577,
	-1, 4563,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2581,
	-1, 4569,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2583,
	-1, 4762,
	1, 462,
	719, 462,
	-2, 2219,
	-1, 4825,
	1, 1103,
	712, 1103,
	714, 1103,
	716, 1103,
	719, 1103,
	-2, 2074,
	-1, 5149,
	48, 2969,
	-2, 1630,
	-1, 5154,
	1, 1904,
	712, 1904,
	714, 1904,
	716, 1904,
	719, 1904,
	-2, 2219,
	-1, 5255,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2585,
	-1, 5262,
	293, 0,
	295, 0,
	390, 0,
	-2, 2604,
	-1, 5327,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2633,
	-1, 5328,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2634,
	-1, 5329,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2635,
	-1, 5333,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2639,
	-1, 5334,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2640,
	-1, 5335,
	14, 0,
	15, 0,
	16, 0,
	693, 0,
	694, 0,
	695, 0,
	-2, 2641,
	-1, 5385,
	713, 2979,
	-2, 2994,
	-1, 5713,
	715, 4231,
	-2, 2146,
	-1, 5759,
	293, 0,
	295, 0,
	390, 0,
	-2, 2605,
	-1, 5762,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2608,
	-1, 5763,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2610,
	-1, 5925,
	715, 2995,
	-2, 1946,
	-1, 5942,
	2, 1821,
	-2, 278,
	-1, 6144,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2609,
	-1, 6145,
	17, 0,
	18, 0,
	19, 0,
	57, 0,
	256, 0,
	261, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 2611,
	-1, 6155,
	293, 0,
	-2, 2644,
	-1, 6273,
	2, 1822,
	-2, 279,
	-1, 6274,
	2, 1830,
	-2, 284,
	-1, 6275,
	2, 1832,
	-2, 286,
	-1, 6276,
	2, 1825,
	-2, 280,
	-1, 6277,
	2, 1827,
	-2, 281,
	-1, 6279,
	2, 1829,
	-2, 283,
	-1, 6280,
	2, 1831,
	-2, 285,
	-1, 6281,
	2, 1833,
	-2, 287,
	-1, 6427,
	293, 0,
	-2, 2645,
	-1, 6497,
	2, 1828,
	-2, 282,
	-1, 6498,
	2, 1834,
	-2, 288,
	-1, 6696,
	57, 0,
	256, 0,
	322, 0,
	548, 0,
	680, 0,
	696, 0,
	-2, 4074,
}

const sqlPrivate = 57344

const sqlLast = 187410

var sqlAct = [...]int16{
	340, 6880, 6620, 6931, 6302, 6924, 6490, 6909, 4312, 1649,
	6838, 6754, 6301, 4497, 6523, 6772, 6252, 6695, 5136, 6682,
	4352, 5043, 6515, 6482, 6710, 6851, 6571, 6663, 6868, 6619,
	6554, 6633, 6711, 6352, 5475, 5061, 5921, 5135, 6636, 1406,
	6398, 6376, 6610, 5680, 2747, 3174, 2950, 6712, 6361, 6353,
	2904, 1706, 1229, 6, 1548, 1529, 4, 878, 6382, 6781,
	1231, 11, 1384, 221, 1230, 10, 5291, 4698, 6708, 1232,
	8, 6431, 6045, 6106, 6694, 6334, 6057, 6101, 4039, 6093,
	4916, 5998, 4463, 2576, 5247, 6257, 5703, 6164, 3001, 3049,
	6137, 1641, 1148, 5692, 6537, 2352, 5674, 2496, 917, 5575,
	1440, 4699, 5922, 4919, 2999, 1634, 4554, 1539, 3122, 5819,
	5902, 2445, 3965, 5177, 4217, 2447, 5159, 4517, 6403, 5672,
	5168, 5119, 2181, 1148, 4329, 4782, 1739, 5633, 5656, 3060,
	1646, 6047, 5635, 2768, 4922, 2756, 5481, 3050, 5124, 5483,
	5376, 3051, 6160, 5204, 2148, 2962, 4451, 996, 5206, 1376,
	5096, 4478, 4903, 5123, 2522, 4483, 874, 875, 5115, 5126,
	5062, 5515, 2382, 929, 4353, 5066, 5090, 5089, 5916, 4905,
	4045, 1968, 5915, 4850, 4904, 1877, 4848, 221, 3990, 4721,
	5395, 5794, 1236, 2997, 4748, 4512, 2603, 4764, 1034, 4713,
	4680, 4701, 4488, 4498, 2891, 4480, 2924, 4908, 2863, 5105,
	4424, 2021, 4943, 2146, 6755, 5474, 4129, 4100, 1689, 5116,
	4102, 4759, 4342, 2810, 3949, 2893, 2348, 5353, 4679, 3942,
	4703, 4739, 2426, 3183, 3057, 6432, 2253, 2403, 4538, 3135,
	2325, 1627, 1224, 3196, 2016, 1760, 2017, 334, 1472, 4511,
	3941, 2084, 2947, 1644, 5113, 2946, 1438, 1143, 3944, 333,
	5065, 992, 2861, 4382, 1530, 2857, 2837, 2833, 2735, 2653,
	2841, 2892, 1871, 2739, 1436, 1851, 2528, 2520, 4037, 1610,
	4038, 4464, 2372, 967, 3997, 3921, 2353, 3311, 3187, 1613,
	3119, 1620, 2572, 2575, 1708, 3038, 3021, 1741, 3019, 2977,
	2123, 2369, 4490, 2114, 1624, 2087, 2080, 135, 2866, 4241,
	878, 4242, 6572, 870, 1417, 1040, 6925, 4202, 904, 6052,
	5127, 2652, 927, 2879, 2565, 1635, 3991, 1012, 1676, 121,
	2686, 1387, 1616, 1572, 3190, 1533, 1150, 1587, 1149, 1156,
	131, 1584, 3931, 2362, 3326, 1513, 2317, 2267, 3278, 2183,
	3181, 1159, 2182, 3244, 3020, 977, 988, 1202, 233, 3022,
	6383, 2929, 6773, 2121, 949, 2045, 234, 1150, 1800, 1149,
	1156, 871, 2627, 2632, 1138, 1783, 1701, 6839, 1419, 50,
	922, 53, 1159, 52, 41, 1980, 37, 39, 1511, 1535,
	1203, 1865, 1793, 2188, 6112, 1870, 918, 1063, 931, 1152,
	4216, 5367, 4586, 2498, 5368, 1005, 1008, 6821, 2498, 6950,
	875, 90, 4700, 3920, 2498, 2498, 2498, 2498, 6917, 6916,
	2198, 2199, 3920, 3920, 6896, 6706, 6879, 6877, 5052, 5397,
	6256, 6256, 91, 6860, 4650, 4651, 6804, 5612, 6756, 4783,
	2912, 6738, 6757, 6736, 2229, 3920, 6733, 3920, 5107, 6730,
	6734, 2230, 96, 6731, 2201, 6705, 6692, 6704, 6691, 5186,
	2912, 6690, 2912, 3968, 6680, 4522, 4595, 965, 6256, 4130,
	2198, 2199, 4596, 2232, 2233, 2234, 2243, 2244, 2245, 6206,
	6654, 6678, 6669, 1038, 2537, 6256, 6256, 2255, 6215, 6212,
	1134, 6667, 5398, 2236, 2229, 6256, 6631, 6211, 2200, 106,
	6256, 2230, 4650, 4651, 2201, 6205, 1181, 6591, 6577, 2220,
	6553, 4009, 2912, 6551, 2912, 6549, 2249, 6256, 6204, 6256,
	6521, 6210, 5399, 6458, 6034, 5396, 6209, 5886, 6457, 6456,
	1527, 6203, 3920, 3920, 6429, 5407, 6413, 2255, 4009, 6378,
	5730, 6086, 5405, 5488, 5187, 1233, 4800, 1369, 2200, 6370,
	1514, 1514, 2081, 6256, 6292, 2040, 1541, 1685, 2912, 2220,
	6291, 130, 6263, 4774, 2912, 2020, 2912, 114, 127, 2217,
	6262, 6255, 5847, 6220, 6256, 6256, 1381, 5458, 6179, 5406,
	1358, 6171, 6180, 4793, 1685, 2912, 6146, 2534, 1357, 5402,
	4009, 6121, 2998, 6087, 5993, 4522, 5966, 5052, 3920, 5875,
	3920, 5809, 3968, 4841, 3327, 5810, 2223, 2224, 2225, 2226,
	2951, 6507, 5052, 2534, 871, 5403, 2206, 2537, 5761, 5357,
	4650, 4651, 4009, 4668, 4669, 4670, 2534, 5721, 5715, 1375,
	4656, 5199, 5199, 4031, 2537, 5612, 5653, 4650, 4651, 2534,
	5654, 115, 5524, 5757, 5487, 5382, 5525, 5380, 5488, 5383,
	5360, 5381, 4553, 3920, 3920, 4456, 2223, 2224, 2225, 2226,
	5275, 5198, 1569, 5174, 2912, 5199, 2206, 5175, 1517, 6592,
	1518, 2534, 3148, 3149, 3150, 3167, 3168, 3169, 4803, 2228,
	2231, 1515, 4804, 6533, 1579, 4757, 3193, 4650, 4651, 3920,
	4668, 4669, 4670, 3170, 4004, 4697, 6433, 4695, 4656, 3920,
	3171, 4696, 4691, 4690, 4641, 6424, 3920, 3920, 4642, 4665,
	5756, 6423, 4639, 4628, 4626, 2240, 4640, 4629, 3920, 1704,
	2250, 6416, 297, 4597, 4650, 4651, 4665, 3920, 4521, 2228,
	2231, 4508, 4522, 4507, 4073, 2986, 2255, 2986, 3920, 2537,
	4008, 2537, 332, 114, 4009, 3988, 2221, 3979, 4522, 3920,
	5357, 2912, 2246, 3919, 2247, 2985, 3328, 3920, 3160, 2986,
	4666, 2215, 2216, 6097, 5400, 6034, 2534, 5967, 3156, 3920,
	1570, 5886, 5401, 5815, 5730, 5696, 4665, 5655, 5647, 5615,
	1546, 2238, 4319, 4201, 299, 2761, 2912, 5458, 2551, 4007,
	2911, 4084, 4456, 2198, 2199, 2158, 2221, 3194, 5039, 4151,
	2526, 4841, 2497, 4339, 4193, 2039, 4093, 3998, 2198, 2199,
	119, 2346, 2513, 1570, 2014, 5542, 4656, 2229, 5250, 4854,
	2370, 2850, 3960, 5188, 2499, 1036, 1762, 2201, 4666, 2499,
	5404, 2252, 3959, 4656, 3958, 2499, 2499, 2499, 2499, 3957,
	298, 3956, 2201, 5189, 297, 2252, 2413, 2412, 2411, 2248,
	2410, 1519, 1516, 1368, 1367, 3161, 3162, 3163, 3164, 1366,
	2255, 1365, 1364, 1363, 291, 3155, 1362, 1361, 4165, 5391,
	2237, 2200, 1360, 292, 231, 5770, 122, 4456, 1356, 126,
	1355, 2252, 1354, 4656, 1353, 1352, 2200, 1351, 1350, 1349,
	1348, 3195, 1347, 1346, 3192, 2227, 1345, 4493, 1344, 1343,
	1342, 1341, 4672, 1340, 235, 1339, 299, 5423, 3966, 1338,
	1337, 1336, 297, 2252, 1335, 1334, 1333, 1332, 1331, 1330,
	4656, 1235, 2534, 2222, 2020, 1329, 2537, 1790, 1234, 1328,
	1327, 1326, 1325, 1324, 1311, 48, 1310, 4667, 1309, 1308,
	1307, 1306, 1305, 1304, 1303, 2227, 4666, 1302, 1301, 2660,
	4473, 1300, 2534, 1439, 2534, 1299, 1298, 1297, 1296, 1295,
	3165, 3166, 298, 4666, 1294, 1293, 2034, 1292, 1291, 4672,
	1290, 1289, 1288, 2222, 299, 221, 1472, 3328, 1651, 1472,
	1287, 4456, 1286, 3224, 5200, 2534, 2534, 1285, 1284, 2206,
	1283, 1282, 6727, 1281, 2534, 3158, 1280, 1279, 1278, 2254,
	1277, 2139, 1794, 183, 2206, 4667, 1276, 2241, 1472, 1472,
	1472, 1275, 1274, 4666, 1273, 1638, 6726, 1272, 2534, 1271,
	1270, 4863, 237, 2534, 1269, 1258, 235, 1257, 1571, 4209,
	298, 2252, 1256, 1251, 1250, 1243, 6721, 1242, 3328, 4209,
	1241, 5186, 1581, 1570, 3222, 1223, 2537, 1222, 2252, 2254,
	4666, 4058, 2228, 2231, 291, 6247, 1744, 2534, 2526, 2497,
	3014, 1221, 1220, 292, 1177, 1176, 1175, 232, 1174, 1173,
	1172, 1163, 1162, 236, 1161, 3197, 1160, 1118, 1472, 1003,
	2534, 1472, 5394, 2028, 297, 5668, 1002, 1001, 297, 983,
	328, 1693, 1694, 1695, 235, 327, 326, 6113, 2252, 6720,
	325, 3328, 324, 323, 1234, 322, 1680, 321, 1472, 2211,
	2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 320, 2221,
	319, 318, 2162, 4667, 4659, 4660, 4652, 4653, 4654, 4655,
	4657, 4658, 1880, 317, 1794, 2252, 316, 315, 1472, 2239,
	4667, 1744, 314, 313, 1472, 1472, 299, 1638, 312, 1651,
	299, 311, 2212, 2213, 2219, 2242, 2218, 2214, 2005, 2211,
	2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 310, 309,
	308, 307, 3159, 5780, 306, 4750, 1472, 5779, 1472, 4608,
	1472, 1570, 305, 304, 1638, 303, 302, 301, 300, 1744,
	4667, 4591, 1472, 4660, 4652, 4653, 4654, 4655, 4657, 4658,
	4588, 4433, 298, 4168, 2252, 4167, 298, 4135, 1794, 4013,
	3974, 2328, 3964, 3208, 1651, 3206, 2033, 2328, 2327, 2252,
	2733, 2578, 5530, 2089, 2327, 3191, 291, 4667, 1680, 2143,
	291, 2049, 4207, 2373, 2536, 292, 2394, 1744, 2294, 292,
	2023, 4475, 1866, 1697, 1547, 1990, 1544, 1744, 2254, 2331,
	1619, 1623, 1672, 1542, 6717, 2326, 1472, 6693, 1472, 6677,
	4018, 2198, 2199, 1744, 1674, 2195, 235, 6436, 1657, 6566,
	235, 1526, 1472, 6558, 1472, 2285, 4650, 4651, 6419, 6176,
	6159, 6119, 1589, 297, 1555, 2117, 1554, 1552, 6096, 1551,
	1794, 1631, 5792, 1985, 6099, 2201, 2222, 5786, 4650, 4651,
	221, 221, 4662, 4663, 4664, 5785, 5784, 5777, 5776, 4661,
	4659, 4660, 4652, 4653, 4654, 4655, 4657, 4658, 1809, 5774,
	5769, 5695, 2094, 2097, 297, 2018, 4661, 4659, 4660, 4652,
	4653, 4654, 4655, 4657, 4658, 5652, 5650, 5646, 5424, 2200,
	2285, 1700, 6115, 5390, 1666, 299, 5389, 5348, 5347, 5346,
	5307, 3145, 3146, 3147, 3172, 3157, 3151, 1723, 3153, 3154,
	3152, 3139, 3140, 3141, 3142, 3143, 3144, 5271, 1977, 4662,
	4663, 4664, 2254, 5266, 1383, 4752, 4661, 4659, 4660, 4652,
	4653, 4654, 4655, 4657, 4658, 1873, 299, 1965, 1970, 4746,
	2292, 2003, 1703, 4687, 4678, 5669, 1713, 1714, 5540, 1156,
	4649, 298, 4646, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1159, 4206, 4661, 4659, 4660, 4652, 4653, 4654, 4655,
	4657, 4658, 4206, 1861, 4645, 291, 4643, 2965, 90, 4638,
	1680, 4637, 4636, 4633, 292, 4632, 2015, 1472, 2287, 2917,
	4650, 4651, 298, 1472, 4631, 1753, 4627, 4607, 4589, 91,
	4587, 2100, 4509, 3972, 3948, 2082, 297, 2206, 2163, 3179,
	2000, 2195, 1973, 1975, 2926, 4492, 291, 2409, 2915, 96,
	2126, 2128, 4656, 2530, 2286, 292, 2284, 6940, 297, 2194,
	6859, 6858, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207,
	2208, 6771, 4474, 6769, 4656, 297, 6740, 1549, 1867, 5293,
	2202, 2203, 2204, 2205, 2207, 2208, 235, 6621, 5669, 6535,
	2120, 6509, 6504, 6503, 6502, 6495, 106, 2173, 299, 2116,
	6494, 6476, 6475, 6473, 2124, 6435, 6434, 6418, 6411, 3125,
	297, 1472, 1472, 1472, 6396, 6393, 1472, 6391, 6374, 6372,
	299, 3131, 6288, 878, 6242, 878, 6157, 6079, 6075, 6073,
	6071, 6035, 5887, 5885, 5884, 1880, 1472, 299, 1880, 2027,
	5791, 5731, 1233, 5659, 5528, 5527, 5503, 1381, 5502, 5500,
	4206, 5459, 4740, 2349, 298, 5363, 1472, 2169, 130, 2432,
	1651, 2359, 5350, 5261, 114, 127, 2272, 2458, 2432, 5201,
	1651, 5158, 299, 1651, 1744, 1792, 298, 2274, 1789, 5148,
	5019, 2397, 4666, 4954, 2196, 4921, 4842, 292, 2271, 221,
	4612, 4611, 297, 298, 4606, 4578, 4450, 4448, 4447, 4234,
	291, 2425, 2334, 2333, 4788, 2332, 2329, 2356, 2357, 292,
	4743, 2323, 2318, 965, 1038, 2315, 4656, 291, 235, 2138,
	3962, 3955, 3918, 875, 3235, 875, 292, 3204, 298, 6114,
	1472, 297, 2975, 2502, 2350, 2157, 2343, 2342, 115, 2341,
	235, 2340, 2339, 2338, 2283, 2337, 2336, 2335, 2324, 1651,
	2418, 2313, 291, 2312, 299, 2420, 1472, 235, 2311, 2310,
	2309, 292, 1588, 1588, 2308, 2307, 2174, 2252, 2306, 2305,
	2304, 2303, 2302, 2301, 6439, 3223, 2300, 2503, 2299, 2298,
	1472, 1614, 2287, 1614, 1614, 2273, 2270, 1036, 1880, 2265,
	2441, 2170, 235, 299, 2115, 1665, 3939, 1576, 2511, 1565,
	2489, 2543, 1545, 2492, 2516, 2419, 6438, 6437, 2518, 6085,
	298, 2178, 2330, 5853, 5765, 2523, 2177, 1711, 1712, 2525,
	5422, 1744, 5379, 1358, 1744, 1744, 1744, 1744, 1744, 2533,
	2569, 1357, 2172, 5366, 291, 4594, 3221, 2446, 297, 4011,
	3973, 2408, 3953, 292, 1707, 2379, 6246, 1381, 6207, 298,
	5855, 1514, 2191, 2192, 5808, 5421, 2286, 4786, 2268, 4667,
	1707, 2432, 5969, 5192, 1680, 2198, 2199, 4650, 4651, 1541,
	2308, 1541, 2390, 291, 235, 5648, 1690, 297, 2414, 2539,
	1707, 4957, 292, 1707, 2571, 1707, 4313, 1472, 1707, 1692,
	2483, 2415, 6850, 2435, 2119, 2433, 1156, 6514, 2380, 2201,
	299, 2542, 2435, 6505, 2433, 1156, 6323, 119, 1159, 2319,
	2320, 6227, 2371, 235, 2417, 6132, 6100, 1159, 1553, 6278,
	6118, 1707, 6022, 6012, 1707, 6011, 6009, 871, 1707, 871,
	6008, 2252, 6007, 1472, 6006, 6005, 5968, 5833, 5739, 299,
	5738, 5737, 5736, 2200, 4261, 5735, 1971, 1588, 1588, 1705,
	2377, 1989, 1036, 1472, 5734, 1381, 298, 5733, 5732, 2823,
	5613, 5489, 5462, 5461, 5460, 2599, 2750, 5371, 5370, 5369,
	5203, 231, 5202, 122, 1691, 2514, 126, 5054, 5053, 5050,
	291, 2347, 4847, 297, 4846, 1656, 2610, 4845, 6713, 292,
	2345, 4844, 1638, 1862, 1864, 298, 2387, 1659, 2389, 6800,
	2388, 2385, 2375, 2383, 2384, 3207, 4380, 3205, 6798, 297,
	1685, 5566, 5248, 5935, 2328, 6709, 2373, 5009, 1235, 291,
	235, 2327, 2545, 4635, 1322, 1234, 4634, 5675, 292, 1036,
	1036, 2442, 1869, 1752, 4560, 2204, 2205, 2207, 2208, 4245,
	1688, 5523, 6420, 4923, 2296, 299, 2541, 5661, 4652, 4653,
	4654, 4655, 4657, 4658, 5138, 2308, 5137, 6469, 2546, 235,
	5677, 5446, 1525, 5447, 1852, 2761, 6524, 2557, 6516, 1810,
	2894, 299, 4654, 4655, 4657, 4658, 6468, 2951, 2847, 6377,
	975, 1791, 1675, 2638, 2308, 6094, 1323, 4700, 4518, 2308,
	2656, 5097, 2602, 6016, 2604, 2435, 2690, 2433, 1156, 1685,
	183, 298, 2895, 1744, 1744, 6469, 5645, 2612, 2613, 2583,
	1159, 2584, 1761, 5675, 1880, 5572, 5563, 5533, 1762, 237,
	5240, 2591, 2592, 4896, 1853, 291, 4823, 298, 1514, 2687,
	4119, 2563, 2562, 2995, 292, 1707, 2571, 2928, 4600, 1744,
	2685, 4700, 1721, 6161, 5614, 2759, 5677, 2564, 5295, 3188,
	4243, 291, 2822, 6901, 6269, 6718, 6238, 2728, 2821, 4315,
	292, 2585, 2586, 972, 232, 235, 2829, 5044, 2589, 2590,
	236, 4326, 1744, 4700, 972, 5673, 2322, 2344, 2293, 2630,
	5155, 2966, 2026, 2958, 2032, 1685, 2038, 2093, 2010, 1661,
	1615, 235, 4336, 6943, 6735, 6732, 5985, 5981, 5182, 2120,
	5494, 6491, 4333, 2818, 4331, 2827, 1686, 6102, 2151, 2616,
	6630, 2838, 4652, 4653, 4654, 4655, 4657, 4658, 1744, 2832,
	1744, 4926, 1744, 5518, 5173, 2639, 973, 5079, 2832, 6802,
	1686, 6801, 1727, 6272, 5041, 2832, 4426, 973, 6719, 6842,
	1744, 1744, 6266, 6244, 5241, 2859, 4827, 2905, 2909, 2197,
	6316, 2670, 5953, 5040, 1744, 1386, 2978, 6320, 2978, 5585,
	6191, 2063, 2137, 1320, 2142, 1692, 4074, 2406, 2731, 2990,
	6778, 6933, 2566, 6517, 3029, 1472, 1109, 1472, 2156, 2676,
	2161, 1318, 2012, 1850, 1472, 2674, 1316, 1472, 1808, 2458,
	2458, 1880, 6309, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	2767, 1472, 1692, 1472, 1472, 1472, 1472, 2558, 2729, 3027,
	4853, 2755, 1156, 5584, 1385, 4205, 974, 6294, 2955, 1117,
	1691, 3029, 1682, 6027, 1159, 2899, 3013, 1379, 6026, 1472,
	2897, 2898, 4203, 1472, 1472, 4132, 4956, 4205, 1686, 1114,
	2815, 1472, 2830, 2790, 2959, 1472, 1682, 1472, 1472, 2910,
	5583, 1216, 5582, 1989, 4203, 1880, 3193, 5574, 2883, 2883,
	2867, 1472, 1472, 1472, 1472, 3031, 5549, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 2884, 2972, 2993, 4787, 3175,
	2882, 2882, 4853, 3018, 5046, 2568, 3027, 1691, 5548, 2055,
	2814, 6869, 6270, 3185, 6239, 5649, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 2811, 1472, 5545, 1614, 1725,
	5544, 1472, 5007, 1687, 3003, 2828, 2760, 1989, 975, 3232,
	4923, 2836, 5532, 5888, 878, 2981, 2567, 5486, 2761, 3058,
	3059, 1880, 4484, 5485, 2901, 5045, 4219, 1687, 5087, 878,
	1378, 3281, 3281, 3295, 5086, 1638, 1807, 3314, 3315, 3317,
	2757, 976, 2895, 2969, 5060, 1880, 3325, 6843, 3009, 1472,
	1472, 1472, 2702, 5055, 2922, 5011, 3056, 3194, 2932, 2983,
	3008, 2831, 2934, 2119, 2604, 2124, 4773, 2124, 1683, 6282,
	2831, 3025, 4012, 1217, 1682, 3028, 3106, 2831, 6779, 4605,
	1684, 2067, 4604, 2753, 4603, 4602, 4860, 4861, 4564, 2868,
	2961, 4378, 1683, 4377, 1651, 3970, 3971, 4358, 2759, 1709,
	1710, 4338, 4325, 4317, 1684, 5955, 4306, 4305, 1381, 6339,
	1381, 2976, 2386, 2979, 875, 1709, 1710, 1778, 5497, 3043,
	4293, 3042, 2208, 2758, 4658, 5970, 1542, 1666, 1542, 875,
	3055, 2987, 4292, 2988, 4131, 1709, 1710, 975, 2573, 2574,
	1709, 1710, 1651, 1709, 1710, 3936, 4267, 4006, 3137, 4265,
	4290, 3195, 3028, 4047, 3192, 1380, 2754, 221, 1863, 4575,
	4222, 1806, 2002, 2013, 4279, 1687, 3026, 3015, 3017, 3023,
	3992, 3198, 4277, 3016, 3030, 4272, 1709, 1710, 5042, 1709,
	1710, 1472, 4271, 1709, 1710, 4250, 1754, 1358, 1651, 1651,
	1358, 1358, 4249, 4573, 4210, 3046, 3234, 4068, 3047, 3048,
	1601, 3236, 3237, 3188, 3238, 3989, 5008, 3241, 3980, 3242,
	3243, 2056, 2443, 2171, 6019, 6017, 2407, 2691, 2693, 4829,
	1638, 2696, 2697, 1724, 4005, 1099, 2390, 4021, 6845, 1880,
	1683, 3062, 2624, 1787, 3928, 3240, 3239, 4027, 1214, 5917,
	1213, 5883, 1684, 3026, 6319, 1514, 2949, 6190, 1400, 2379,
	1373, 1381, 1744, 1744, 3133, 5918, 5919, 6871, 6870, 6872,
	1541, 1381, 4053, 3173, 2106, 1381, 2105, 1787, 4057, 1868,
	4282, 2058, 4030, 6801, 974, 1541, 2104, 4066, 2103, 3952,
	5106, 4849, 4061, 5910, 1651, 1313, 1651, 4070, 3927, 4000,
	4838, 2597, 3935, 5894, 3940, 1853, 2075, 3946, 3947, 1685,
	1762, 2842, 1859, 4650, 4651, 1680, 4668, 4669, 4670, 4044,
	1472, 3319, 2617, 4020, 5865, 4335, 1472, 4247, 871, 4069,
	2712, 2655, 1156, 1685, 1156, 3290, 5265, 4014, 3277, 5608,
	3306, 4081, 3321, 871, 1159, 3197, 1159, 4071, 4826, 1853,
	2848, 3916, 3917, 1762, 6846, 5911, 1784, 2842, 3929, 3933,
	3934, 5611, 4294, 4334, 2377, 2330, 1744, 1100, 2165, 1381,
	4570, 3999, 4036, 4332, 2825, 4330, 1786, 6911, 2625, 3121,
	4024, 2661, 1377, 5592, 5893, 1156, 4763, 4233, 4138, 2059,
	1472, 4304, 6185, 4160, 2701, 5590, 2848, 1159, 2698, 2618,
	2573, 2574, 4665, 4221, 4571, 5595, 6340, 4099, 4576, 2760,
	1786, 4072, 2840, 974, 4183, 4852, 4060, 1032, 3995, 976,
	6338, 5448, 4296, 3121, 4136, 4851, 4137, 4094, 6336, 1638,
	2458, 4002, 4003, 1785, 5529, 1219, 1391, 1218, 4065, 2683,
	4127, 4017, 4051, 2839, 1726, 1115, 6484, 6182, 2931, 2931,
	1824, 4551, 4114, 4115, 4116, 4117, 4204, 1619, 5023, 1623,
	2675, 4056, 5484, 1115, 2319, 2320, 2673, 2699, 1315, 3976,
	4295, 1685, 3978, 4489, 4029, 2869, 4298, 1805, 6351, 2691,
	4843, 6715, 6848, 2716, 5931, 4032, 2834, 4852, 1878, 6335,
	5598, 5599, 4033, 2715, 5594, 3191, 4048, 4851, 2700, 1828,
	4055, 3129, 2166, 1830, 4062, 4536, 4063, 5482, 3127, 4656,
	6183, 1880, 3117, 2667, 2569, 2569, 4126, 2621, 4124, 3297,
	6337, 1664, 5057, 1744, 2176, 6529, 2758, 4188, 4189, 4075,
	4297, 1115, 5593, 4144, 5516, 4146, 4143, 4148, 4145, 4211,
	4147, 2669, 4149, 4150, 1105, 1104, 3115, 6883, 976, 2066,
	4186, 1115, 6844, 1030, 2615, 4232, 5866, 1651, 2980, 2835,
	1749, 4252, 4133, 4089, 4090, 4890, 4417, 4091, 4092, 4869,
	4868, 4344, 5882, 4166, 2870, 4162, 1472, 5107, 1472, 2088,
	5937, 4360, 6347, 4220, 5147, 6926, 1472, 2844, 2843, 2845,
	5929, 6486, 1763, 4891, 1101, 4672, 3103, 5906, 4363, 4283,
	4253, 4077, 4208, 3922, 3197, 5907, 4376, 4191, 4550, 5281,
	6455, 6454, 4025, 4268, 4142, 1651, 5912, 4195, 4650, 4651,
	2885, 4668, 4669, 4670, 4462, 1638, 4079, 4153, 6453, 2713,
	4572, 5284, 4459, 2844, 2843, 2845, 4158, 2720, 5610, 4666,
	4574, 5264, 4192, 2086, 4303, 6025, 1164, 1744, 4246, 3925,
	3996, 2711, 4650, 4651, 2361, 4668, 4669, 4670, 916, 1744,
	5909, 1744, 5509, 5484, 4328, 2722, 1744, 4237, 1600, 4174,
	4175, 4080, 5547, 1171, 5543, 5625, 1764, 4471, 5430, 5917,
	4889, 4251, 5913, 1441, 6716, 911, 5429, 1267, 5428, 4023,
	2117, 2877, 6854, 3924, 5864, 1472, 4269, 4078, 3923, 2623,
	5427, 1472, 1472, 5282, 4185, 4199, 5416, 4665, 221, 4224,
	4227, 4214, 4892, 3111, 4527, 4528, 5415, 1472, 6847, 5414,
	4345, 5413, 5093, 5910, 2252, 5085, 5928, 3993, 4301, 5903,
	5591, 4975, 4356, 4307, 5005, 4965, 4855, 4337, 1102, 3112,
	4182, 4665, 5626, 4291, 4278, 5932, 4270, 3113, 5901, 4428,
	4022, 3118, 2719, 4430, 2365, 4274, 4248, 4832, 5905, 1802,
	4088, 1472, 1472, 6653, 4466, 2730, 4379, 1472, 2659, 2658,
	1103, 4418, 4419, 4350, 4351, 4543, 4544, 4287, 4288, 4299,
	1472, 1472, 6830, 4300, 2721, 5911, 1472, 1472, 3994, 4309,
	4316, 6885, 1472, 1825, 5624, 3101, 4323, 6829, 4976, 3987,
	3104, 5508, 4966, 4519, 1031, 5094, 4431, 4454, 6714, 1156,
	6786, 5480, 2368, 2812, 4656, 3197, 4667, 5479, 2817, 4857,
	1036, 1159, 5179, 6354, 4349, 4171, 4311, 5064, 2498, 6349,
	2880, 2363, 1588, 1588, 4510, 5904, 4133, 1107, 1472, 5091,
	5908, 5449, 5064, 2092, 4834, 1472, 2883, 4523, 4656, 1472,
	4974, 2366, 5180, 4529, 4964, 4530, 4421, 1106, 1259, 2595,
	5110, 3100, 4375, 5597, 4520, 1472, 4366, 1434, 2882, 4525,
	1033, 4184, 4365, 4567, 1029, 4367, 4364, 1036, 4505, 5058,
	4095, 2949, 1857, 4592, 2890, 1260, 1314, 3197, 5003, 5001,
	1588, 4503, 2761, 1588, 5918, 5919, 2364, 1588, 6927, 1108,
	4672, 4443, 2819, 4455, 6605, 1614, 4052, 6230, 5002, 6485,
	1614, 2395, 1614, 4087, 2405, 5000, 6587, 4470, 5930, 1036,
	1036, 6492, 3120, 4422, 2116, 2769, 4482, 4542, 4486, 4531,
	4495, 3926, 4496, 4343, 2124, 4999, 4504, 4506, 4715, 1559,
	4996, 1165, 1166, 6684, 4666, 6685, 5179, 4173, 4590, 1826,
	2714, 2889, 2813, 4314, 2773, 4762, 1561, 2808, 5046, 2167,
	1472, 1472, 1472, 1472, 4533, 4532, 4566, 1542, 2088, 1472,
	1472, 1472, 4910, 3114, 1472, 4420, 4516, 3043, 4666, 3042,
	4537, 2783, 1542, 3116, 1556, 1623, 6852, 4552, 878, 1472,
	6184, 1472, 1472, 1472, 1472, 4662, 4663, 4664, 4828, 1880,
	4559, 4888, 4661, 4659, 4660, 4652, 4653, 4654, 4655, 4657,
	4658, 2764, 4515, 4938, 3314, 3314, 3314, 1823, 1989, 4689,
	2770, 1751, 2875, 1822, 2806, 2668, 971, 5906, 2011, 2252,
	1036, 4501, 6067, 3128, 1574, 5907, 1562, 3975, 2367, 2826,
	4593, 3977, 1244, 4513, 4565, 187, 5912, 2316, 2784, 4784,
	5841, 6048, 6647, 6785, 90, 2824, 55, 54, 5842, 2620,
	2198, 2199, 1663, 2252, 2579, 2175, 1827, 2851, 1829, 1249,
	4361, 1563, 2858, 2718, 5074, 91, 2807, 4937, 2765, 6811,
	84, 2872, 2792, 1371, 2229, 1099, 2871, 3102, 875, 2769,
	5909, 2876, 912, 56, 2201, 96, 2614, 2886, 2881, 6641,
	2782, 1748, 1750, 1168, 1167, 1989, 1989, 5092, 2848, 77,
	1373, 2886, 5913, 6853, 6764, 4359, 1381, 58, 5944, 185,
	1560, 4667, 2365, 4630, 5840, 4599, 6765, 2255, 2802, 5004,
	2763, 5516, 4362, 2878, 1268, 6585, 5476, 1099, 2200, 57,
	4944, 5063, 106, 4258, 2887, 4260, 4262, 4263, 4264, 4266,
	2751, 4205, 2775, 1261, 1262, 4667, 5063, 6855, 2887, 2873,
	6149, 6546, 1373, 5987, 6881, 2874, 937, 1372, 4225, 2264,
	3178, 4610, 60, 78, 1971, 3932, 4714, 5513, 4310, 4809,
	2368, 1169, 1170, 61, 5942, 5952, 6586, 6886, 67, 913,
	3945, 6140, 3968, 1380, 85, 5939, 5297, 6746, 5748, 3930,
	4946, 2798, 59, 6082, 130, 5747, 2852, 6030, 5852, 2809,
	114, 127, 5601, 4911, 5417, 1580, 1578, 1100, 5243, 2366,
	79, 2824, 4835, 4534, 1640, 6555, 6538, 2776, 2777, 6748,
	1769, 2361, 6650, 6570, 1541, 6395, 1225, 2596, 2826, 6348,
	6029, 6539, 1989, 4155, 4156, 6028, 4684, 4685, 4686, 2499,
	6018, 6326, 914, 5701, 915, 2771, 2206, 5164, 4985, 4983,
	4798, 62, 4833, 4281, 90, 4704, 1228, 1227, 6355, 1100,
	5908, 2795, 3986, 2945, 4945, 2358, 2820, 2594, 6540, 1577,
	4368, 2823, 1568, 903, 115, 91, 5667, 6068, 2185, 2186,
	2682, 6784, 871, 6527, 5643, 5789, 5337, 5477, 5059, 6264,
	4662, 4663, 4664, 56, 3045, 96, 2772, 4661, 4659, 4660,
	4652, 4653, 4654, 4655, 4657, 4658, 5945, 2774, 2762, 2228,
	2231, 6049, 2559, 6891, 5918, 5919, 6200, 58, 2816, 4765,
	2800, 2365, 5552, 4984, 4662, 4663, 4664, 1245, 1246, 4282,
	2185, 4661, 4659, 4660, 4652, 4653, 4654, 4655, 4657, 4658,
	2556, 6405, 106, 2180, 5077, 6138, 1640, 6542, 4917, 5078,
	6139, 4693, 6466, 5702, 5578, 5553, 5495, 5493, 5165, 5153,
	4913, 1557, 80, 2825, 4472, 4465, 1263, 1264, 4452, 2973,
	2779, 2967, 2740, 6541, 2960, 2953, 2221, 2741, 2927, 2368,
	2913, 5946, 5947, 1640, 1105, 1104, 2921, 4259, 1233, 2801,
	4348, 3035, 6556, 6387, 5442, 6543, 2367, 2060, 2363, 4694,
	5280, 6763, 59, 1592, 130, 2184, 5351, 6611, 5244, 5943,
	114, 127, 6573, 4209, 6010, 5740, 2185, 982, 2366, 2925,
	4286, 2684, 2552, 5704, 6273, 2805, 6107, 5938, 1614, 2554,
	1640, 1558, 6367, 5592, 1101, 2598, 1105, 1104, 4449, 5749,
	1602, 6365, 2778, 119, 6241, 5590, 5940, 4929, 4925, 4254,
	4924, 4557, 4535, 2855, 5365, 5595, 4712, 2184, 4711, 3006,
	2772, 2252, 63, 2364, 2822, 2996, 1796, 1795, 2919, 1788,
	2821, 2774, 5409, 4986, 3985, 3984, 3983, 3982, 3981, 2555,
	2098, 66, 2079, 2186, 115, 2113, 1101, 69, 4284, 2111,
	5639, 1266, 4435, 1378, 4437, 5979, 2582, 81, 5551, 2099,
	4226, 6479, 6058, 2740, 2793, 6141, 68, 231, 2741, 122,
	2695, 2742, 126, 5338, 4230, 2803, 5662, 5663, 6253, 64,
	2853, 4103, 5501, 186, 5790, 5339, 2971, 5100, 2761, 6369,
	2746, 65, 2799, 2864, 2779, 2186, 6808, 5490, 2780, 2264,
	5598, 5599, 4276, 2184, 5594, 297, 5750, 6228, 1021, 6218,
	1247, 1248, 4491, 2222, 72, 4491, 3036, 3061, 6217, 6216,
	4425, 83, 2081, 6890, 4104, 4130, 5237, 2796, 4839, 1472,
	4797, 1472, 2854, 4796, 4795, 5603, 5048, 2794, 1102, 4794,
	184, 878, 5593, 4778, 4777, 4776, 2804, 6617, 1022, 4775,
	4524, 4429, 4427, 3000, 2894, 1730, 6265, 2529, 6480, 5871,
	5557, 6236, 5024, 6268, 5870, 2367, 5948, 299, 1370, 6267,
	1103, 6249, 5047, 878, 4709, 1880, 6368, 1472, 4987, 6050,
	4107, 2743, 2748, 4113, 1770, 1880, 6557, 6386, 5443, 2254,
	1102, 6274, 6275, 4285, 4707, 4708, 183, 6248, 6625, 6608,
	1651, 5795, 2742, 5354, 6254, 3203, 82, 1771, 4112, 4110,
	5418, 3199, 1854, 119, 6202, 237, 4255, 4256, 6237, 2707,
	2458, 2746, 1103, 298, 1880, 1546, 6652, 6813, 2797, 1856,
	1651, 6810, 1849, 1818, 6051, 2277, 1816, 1107, 6737, 2282,
	6519, 875, 1651, 1814, 1812, 5562, 5634, 291, 4047, 2458,
	6544, 4801, 1782, 6618, 6506, 6214, 292, 1106, 6156, 6545,
	232, 1780, 2780, 5941, 6481, 1777, 236, 1775, 2903, 4766,
	1773, 6042, 5861, 875, 5788, 1766, 2744, 231, 5638, 122,
	4749, 1759, 126, 1472, 5950, 5951, 1757, 235, 5435, 1107,
	3, 5491, 4755, 4756, 5076, 1472, 2581, 4681, 5260, 1108,
	2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 4108, 1106,
	4719, 3963, 2743, 2748, 981, 297, 5238, 5012, 4792, 4644,
	4577, 4453, 4442, 4324, 1235, 4318, 4806, 4808, 4745, 2862,
	4772, 1234, 2112, 2751, 4244, 4177, 2110, 4799, 1265, 4019,
	5591, 4802, 1651, 3327, 1651, 3005, 4109, 2991, 2974, 2727,
	2723, 1108, 2694, 4837, 2601, 2491, 4810, 2393, 2150, 4812,
	4791, 4717, 1858, 4814, 4815, 2672, 4824, 2629, 4818, 6342,
	4819, 4734, 4723, 5869, 4821, 4682, 4884, 299, 4830, 4883,
	4767, 4768, 4769, 4770, 4742, 4873, 4718, 1541, 2180, 1680,
	4785, 4732, 4164, 1880, 4163, 4898, 1880, 4735, 4736, 4761,
	2749, 4760, 4733, 4760, 4044, 4134, 183, 2744, 4097, 5025,
	4738, 3024, 2920, 4780, 2750, 4716, 1801, 2633, 2490, 1541,
	2488, 1651, 2297, 4816, 2164, 237, 2709, 2458, 1510, 5988,
	4912, 4737, 6707, 298, 4106, 3202, 4741, 6084, 2708, 5146,
	5565, 5564, 5550, 5992, 1472, 871, 1156, 4899, 1855, 5418,
	2750, 1848, 1817, 4154, 5965, 1815, 4790, 291, 1159, 4950,
	1651, 6782, 1813, 1811, 2751, 6607, 292, 6493, 6105, 4962,
	232, 1781, 4856, 5597, 4858, 2902, 236, 871, 5997, 5983,
	1779, 1542, 1651, 4779, 1776, 5980, 1774, 4724, 5899, 1772,
	1651, 4978, 5898, 4111, 1765, 4085, 4840, 1226, 5700, 4982,
	1758, 5687, 5581, 1651, 1651, 1756, 5555, 5521, 5519, 4992,
	1113, 4997, 4990, 4991, 5492, 5157, 5151, 4807, 4805, 5139,
	4485, 4477, 4469, 4461, 4445, 4444, 4948, 4731, 1472, 1472,
	4440, 2749, 2847, 5010, 4813, 4423, 1880, 4817, 4059, 4928,
	4820, 2847, 4933, 4722, 4729, 4935, 4054, 4825, 4730, 1651,
	2918, 4882, 2916, 2896, 2745, 2849, 2781, 2766, 5034, 2752,
	2538, 2535, 4914, 2527, 2524, 2519, 2517, 2512, 2418, 1472,
	2506, 4881, 2671, 2504, 2628, 2500, 5277, 5169, 4949, 6777,
	5036, 6689, 2424, 4874, 5872, 2858, 2189, 4728, 4152, 1651,
	4864, 4105, 4865, 1523, 4866, 4836, 1116, 4920, 5072, 4280,
	6802, 4555, 5741, 2560, 6499, 6478, 4963, 5051, 5056, 4196,
	2548, 2549, 4959, 2726, 4941, 4416, 4197, 4194, 4859, 1372,
	6671, 4867, 6563, 6120, 6004, 4879, 1744, 5868, 4514, 4831,
	2577, 1145, 6133, 2065, 6407, 4231, 4893, 4179, 1744, 4894,
	1744, 6399, 4001, 2705, 1880, 4205, 2048, 1583, 5714, 1148,
	2761, 1744, 1744, 2619, 4979, 1472, 4961, 2970, 4047, 4047,
	5020, 1626, 4203, 1625, 4955, 4885, 4886, 4887, 4357, 2665,
	2724, 1640, 6670, 4205, 5075, 4897, 1846, 1847, 4977, 2657,
	1651, 2626, 5956, 2198, 2199, 2745, 4981, 5999, 4367, 5154,
	4228, 2198, 2199, 1372, 5111, 1659, 1317, 1319, 5822, 4989,
	1472, 5820, 1755, 5170, 5070, 1010, 4947, 5068, 4969, 4438,
	6422, 5832, 5143, 4725, 4726, 4727, 4556, 2190, 5828, 5037,
	2725, 1744, 4374, 6285, 1524, 2201, 4371, 5067, 6796, 4235,
	5067, 5152, 4968, 1744, 6251, 1744, 1702, 4439, 5796, 5684,
	5775, 4942, 4754, 4236, 4257, 5033, 2193, 1699, 5006, 4373,
	4973, 2547, 1658, 4370, 1253, 1582, 1626, 329, 5830, 5831,
	5829, 2200, 1626, 5821, 1472, 5825, 5195, 4236, 6745, 2200,
	5600, 1472, 1472, 5577, 2108, 1472, 1472, 1472, 2954, 1472,
	221, 221, 5095, 1670, 5098, 5071, 1027, 4333, 1472, 2458,
	5015, 5826, 4331, 5163, 4372, 5022, 5021, 1472, 4369, 4340,
	6530, 5576, 1880, 4900, 4901, 5035, 2792, 4322, 4252, 5049,
	2455, 1472, 4320, 868, 4044, 4044, 1013, 1013, 4238, 1880,
	5184, 4240, 5083, 4321, 1821, 4927, 2109, 6616, 4931, 2458,
	2458, 1472, 1472, 5069, 1472, 1472, 1472, 4239, 6593, 6561,
	6559, 6477, 4301, 6388, 5166, 5073, 6385, 6229, 6040, 5698,
	5686, 5234, 2802, 5666, 5156, 1472, 4494, 4458, 5082, 1472,
	4441, 2458, 2458, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472, 1472,
	1472, 1472, 1472, 1150, 1472, 1149, 1156, 3322, 5088, 5084,
	2544, 2444, 1472, 1472, 2458, 5104, 5102, 6849, 1159, 1472,
	5263, 5245, 5310, 5117, 5311, 5246, 6284, 5077, 6250, 5144,
	6417, 1472, 5078, 5150, 5232, 5149, 5470, 5469, 4308, 5236,
	2888, 2732, 878, 878, 2009, 2798, 1472, 5171, 2008, 2001,
	5077, 4781, 5026, 6815, 5028, 5078, 1860, 5032, 5235, 1374,
	5823, 5038, 5181, 2864, 5349, 6889, 4650, 4651, 5824, 6902,
	5193, 5194, 5190, 5183, 2198, 2199, 6013, 5077, 6083, 2446,
	4327, 1880, 5078, 2020, 1472, 1472, 2588, 4083, 2587, 4082,
	2019, 2860, 1729, 5767, 2020, 5420, 5242, 2020, 1728, 2404,
	4169, 3233, 2588, 2587, 1651, 1651, 1820, 6660, 5694, 1819,
	6389, 6358, 6310, 6197, 2451, 2795, 6193, 1614, 6192, 3058,
	5300, 1989, 1989, 1651, 1651, 6001, 5827, 5996, 5995, 2432,
	5843, 1651, 5839, 5838, 5766, 4047, 2458, 5473, 2458, 5419,
	5288, 5030, 875, 875, 5027, 5270, 5268, 4172, 2291, 2290,
	5276, 3058, 5316, 1381, 4200, 2734, 6874, 5392, 6831, 6675,
	1472, 6597, 6596, 6595, 5287, 6518, 5292, 5283, 5285, 5286,
	1744, 5122, 6446, 5299, 2800, 1744, 1744, 1744, 1744, 6441,
	6363, 6298, 6283, 6208, 5345, 1880, 6201, 5306, 6199, 6196,
	1651, 6195, 6194, 3130, 5308, 6189, 5313, 6188, 5309, 5467,
	5341, 6077, 6043, 5854, 1542, 5315, 5837, 5836, 5726, 2277,
	5720, 5651, 5517, 4513, 5438, 5356, 5439, 5504, 5162, 4934,
	4876, 4811, 5388, 4513, 4476, 4446, 4229, 4178, 5410, 5342,
	4161, 4123, 4122, 4121, 5411, 5412, 1542, 4120, 4050, 4016,
	4015, 5440, 3132, 2801, 2968, 5441, 2940, 2939, 2938, 1989,
	2937, 2936, 1472, 5425, 5426, 5358, 5359, 2935, 2710, 2666,
	2651, 5436, 5361, 5362, 2740, 2650, 2649, 1640, 2648, 2741,
	2509, 2508, 2507, 2505, 1640, 2423, 2422, 2074, 2073, 2805,
	5372, 2072, 2071, 2070, 2069, 1472, 1472, 5373, 1541, 1541,
	5374, 4044, 2068, 3039, 5384, 2064, 2062, 2061, 1996, 1995,
	1845, 4970, 1844, 1767, 5408, 4971, 1722, 4972, 4760, 1719,
	1989, 1718, 5378, 1717, 5451, 1716, 1715, 1662, 1609, 5454,
	5455, 1608, 1607, 1606, 1605, 1604, 1603, 1597, 3952, 1596,
	5534, 5554, 1595, 1594, 5556, 2691, 1593, 5559, 1505, 2550,
	5558, 1321, 1472, 1472, 5437, 5567, 871, 871, 1312, 6483,
	1472, 5431, 4275, 5914, 2706, 2948, 113, 2057, 2793, 5520,
	4273, 5522, 105, 2435, 5496, 2433, 1156, 5221, 5220, 2803,
	5596, 1744, 1744, 2856, 5514, 4706, 5511, 5510, 1159, 2717,
	5453, 1744, 5452, 5464, 1744, 1744, 2799, 6532, 6659, 6750,
	1472, 2785, 6046, 5465, 5466, 5573, 4276, 6657, 4034, 2501,
	5114, 6357, 2789, 2742, 6528, 6350, 1183, 1069, 6651, 2043,
	1744, 1198, 6629, 4936, 4381, 1768, 2634, 1651, 5478, 4744,
	3954, 2796, 2746, 6584, 5539, 5541, 5622, 5602, 5771, 5609,
	4609, 2794, 6430, 6148, 5538, 3201, 5472, 4252, 1744, 2295,
	2804, 4692, 107, 5397, 1427, 3298, 1470, 6066, 6065, 5900,
	5498, 5125, 6062, 2458, 6061, 5617, 5580, 2448, 2450, 1640,
	1390, 1883, 5579, 3339, 3342, 6683, 2561, 2570, 2321, 5560,
	5561, 3280, 1448, 1487, 1443, 5526, 1444, 2452, 1472, 1447,
	1445, 1446, 5641, 2314, 5531, 1442, 5160, 5693, 5145, 4499,
	5191, 2118, 2458, 1071, 4951, 4952, 3950, 4953, 3126, 5683,
	3186, 1744, 4598, 2288, 878, 5589, 5398, 1407, 5705, 1429,
	1472, 3182, 4103, 2743, 2748, 5630, 5588, 1575, 878, 1472,
	5627, 5628, 2797, 1418, 4720, 5604, 5178, 1744, 3323, 5375,
	3034, 1208, 1744, 1744, 1744, 1037, 5399, 4647, 5657, 5396,
	1036, 3189, 1564, 3303, 3296, 3292, 5512, 5605, 4487, 5407,
	4822, 5172, 2455, 2455, 2168, 4104, 5405, 6163, 2266, 4500,
	2351, 1696, 1411, 5623, 3124, 2279, 4582, 3044, 1744, 5185,
	5708, 4747, 5678, 5682, 5723, 5676, 5016, 5017, 4345, 5018,
	5637, 1880, 5586, 5716, 1472, 1472, 2107, 4010, 6662, 5387,
	1472, 1472, 2458, 5406, 5296, 1472, 1472, 3967, 1472, 4170,
	2944, 1522, 1521, 5402, 875, 5712, 5616, 5697, 2744, 5632,
	1472, 4107, 5636, 5621, 4113, 1573, 1520, 6635, 875, 6632,
	5727, 2846, 5711, 4920, 6069, 5631, 1472, 5706, 5620, 5403,
	5120, 5689, 5121, 5691, 5640, 5679, 2553, 4076, 5644, 4112,
	4110, 3136, 5140, 5764, 1423, 4139, 4140, 1988, 2692, 4877,
	4705, 5664, 2076, 5685, 6258, 1433, 872, 2251, 1640, 5665,
	2738, 4409, 4408, 4407, 6472, 2751, 1681, 1679, 1678, 1677,
	6910, 4347, 4341, 2865, 5507, 5506, 5505, 296, 4549, 5688,
	5742, 2187, 2179, 293, 5744, 295, 5751, 294, 878, 4940,
	5818, 5393, 4118, 1731, 5536, 5709, 878, 5099, 5710, 28,
	1880, 1880, 1014, 5760, 1015, 5752, 1016, 4086, 2458, 5718,
	5717, 5724, 2580, 1698, 878, 5725, 5445, 5707, 27, 26,
	25, 24, 1880, 136, 29, 51, 32, 2736, 31, 5,
	1744, 1744, 2749, 5793, 23, 182, 2451, 2451, 180, 4108,
	156, 178, 177, 221, 176, 146, 175, 174, 173, 5743,
	1541, 172, 2593, 1720, 1880, 171, 170, 179, 169, 168,
	163, 167, 2446, 166, 1541, 165, 1651, 164, 162, 160,
	161, 5745, 155, 159, 158, 157, 154, 4109, 5400, 2737,
	153, 152, 151, 150, 149, 148, 5401, 4895, 875, 147,
	145, 1744, 1744, 1472, 181, 144, 875, 143, 238, 142,
	141, 140, 139, 30, 138, 137, 993, 1880, 871, 994,
	71, 70, 133, 134, 875, 22, 49, 17, 75, 76,
	1472, 4749, 871, 21, 5804, 5806, 5895, 5873, 16, 5814,
	44, 878, 110, 878, 5787, 5848, 5849, 5850, 5851, 125,
	124, 123, 45, 120, 5404, 43, 20, 19, 18, 5857,
	5858, 5859, 5860, 118, 1640, 5863, 2455, 117, 116, 42,
	40, 14, 12, 1651, 46, 4106, 1550, 5845, 5846, 5926,
	5798, 5799, 5964, 1880, 5812, 1651, 2381, 5803, 5811, 1651,
	15, 4101, 5800, 7, 5973, 112, 2745, 230, 5976, 229,
	5982, 226, 225, 5984, 228, 5801, 5867, 5986, 5813, 224,
	227, 109, 1472, 5892, 5817, 1880, 223, 4501, 5797, 111,
	222, 108, 38, 13, 214, 5671, 5802, 99, 218, 217,
	4513, 216, 215, 103, 4111, 213, 212, 5844, 211, 202,
	220, 875, 97, 875, 1541, 210, 102, 101, 5923, 209,
	5923, 5862, 1541, 98, 1472, 219, 100, 1472, 104, 36,
	9, 74, 6136, 5239, 128, 5958, 129, 47, 95, 94,
	1541, 5897, 5876, 1640, 93, 92, 5877, 35, 5874, 1744,
	1744, 73, 34, 289, 1472, 290, 288, 5949, 4047, 1472,
	1472, 6014, 5881, 6021, 287, 1542, 1542, 285, 286, 284,
	878, 283, 871, 5891, 197, 263, 262, 261, 260, 259,
	871, 4751, 258, 257, 5936, 256, 255, 250, 5934, 5546,
	254, 4758, 5933, 6041, 252, 1651, 251, 6039, 871, 253,
	6003, 5974, 4105, 249, 6088, 5959, 6070, 279, 278, 5994,
	6024, 1880, 277, 276, 275, 5927, 1744, 274, 273, 272,
	2451, 266, 265, 6108, 271, 270, 269, 268, 1640, 1640,
	4789, 5977, 267, 6056, 264, 282, 208, 6037, 5963, 5960,
	5961, 207, 206, 1744, 1744, 1744, 1744, 1744, 1744, 1744,
	1744, 5972, 203, 205, 6092, 5975, 6095, 1541, 204, 1541,
	88, 248, 247, 246, 244, 240, 1472, 1472, 1472, 1036,
	875, 243, 245, 5067, 242, 241, 6015, 5923, 6089, 6081,
	239, 1880, 281, 6020, 5678, 280, 1472, 5676, 201, 1472,
	1472, 6023, 200, 6033, 6038, 89, 195, 6036, 196, 1472,
	87, 1449, 2458, 2455, 194, 193, 1472, 1472, 6032, 6031,
	192, 191, 190, 189, 4044, 871, 6053, 871, 188, 6064,
	86, 4539, 199, 6072, 6060, 198, 1472, 6080, 33, 2,
	1, 1744, 6078, 1744, 1744, 6103, 0, 0, 0, 0,
	0, 0, 6109, 6091, 1744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 336, 336, 336,
	0, 906, 907, 0, 923, 906, 923, 935, 6111, 6142,
	980, 6134, 1651, 6110, 1000, 0, 6117, 0, 0, 1007,
	1007, 1007, 1007, 0, 336, 6123, 5889, 5890, 6125, 6122,
	0, 0, 6129, 336, 2691, 1472, 1472, 0, 0, 4878,
	0, 0, 1878, 0, 0, 0, 3298, 3298, 1640, 1640,
	1640, 1640, 0, 6158, 1880, 0, 1541, 1240, 0, 0,
	5957, 0, 1472, 6151, 336, 0, 0, 6152, 0, 0,
	0, 0, 0, 0, 0, 1472, 0, 0, 0, 6135,
	6223, 6224, 0, 0, 0, 0, 0, 0, 0, 0,
	1472, 6169, 6170, 0, 0, 0, 0, 0, 6235, 0,
	0, 6175, 0, 6177, 2458, 0, 0, 6178, 0, 0,
	0, 0, 2446, 0, 871, 0, 1472, 0, 6172, 1472,
	6173, 6174, 6000, 0, 6002, 0, 0, 2451, 0, 4579,
	4580, 0, 0, 0, 0, 6300, 0, 0, 0, 0,
	1472, 0, 6213, 1472, 0, 0, 0, 0, 6303, 0,
	1880, 0, 0, 6232, 0, 6233, 1744, 1472, 0, 1744,
	1744, 6261, 1472, 1472, 0, 0, 0, 0, 1472, 1472,
	1472, 0, 0, 1472, 6226, 0, 6225, 1651, 0, 0,
	0, 0, 0, 6234, 0, 0, 6332, 6231, 6222, 0,
	0, 0, 0, 6240, 0, 6059, 0, 0, 0, 0,
	1744, 0, 6297, 0, 0, 6289, 6290, 0, 6328, 0,
	2750, 6346, 6330, 0, 0, 0, 0, 0, 0, 0,
	0, 5949, 878, 0, 878, 0, 3298, 3298, 3298, 3298,
	0, 0, 5690, 906, 906, 6315, 0, 0, 0, 0,
	6360, 336, 0, 0, 0, 0, 6311, 0, 6313, 2458,
	6314, 0, 6362, 0, 0, 6341, 1880, 6299, 6371, 1744,
	6373, 6366, 0, 0, 0, 6295, 6400, 1542, 6380, 0,
	0, 0, 6304, 0, 6286, 0, 0, 0, 0, 6312,
	0, 1542, 0, 1744, 0, 0, 0, 0, 0, 0,
	4751, 0, 2978, 0, 0, 0, 6384, 0, 0, 0,
	0, 0, 0, 6321, 6322, 0, 0, 1472, 2458, 4674,
	4675, 4676, 4677, 6344, 5746, 1036, 6410, 6343, 6412, 0,
	0, 0, 875, 6333, 875, 0, 6359, 0, 6356, 5923,
	0, 5923, 0, 0, 5678, 0, 0, 5676, 6364, 6345,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 6379, 6381, 0, 1651, 1651, 1651, 1651, 0, 0,
	1651, 1651, 1651, 1651, 6390, 1651, 1651, 6392, 0, 6305,
	0, 0, 0, 6331, 0, 0, 5954, 6409, 1472, 0,
	6397, 6402, 0, 6460, 6404, 6401, 6408, 0, 0, 0,
	6404, 0, 0, 1472, 0, 1472, 0, 1472, 0, 0,
	0, 0, 0, 6415, 0, 0, 0, 878, 0, 0,
	6467, 6421, 0, 0, 0, 0, 0, 6459, 0, 6428,
	0, 0, 0, 1472, 0, 0, 0, 6375, 0, 0,
	6465, 0, 2691, 0, 0, 0, 0, 0, 0, 878,
	6440, 0, 0, 0, 0, 0, 0, 0, 5273, 0,
	0, 1542, 0, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 0, 0, 0, 5289, 6406, 1036, 1541, 0,
	1541, 0, 0, 0, 1744, 6501, 0, 1542, 2446, 0,
	0, 0, 0, 0, 6442, 6443, 6444, 6445, 0, 0,
	6447, 6448, 6449, 6450, 6464, 6451, 6452, 6463, 1472, 1472,
	0, 0, 0, 0, 0, 0, 1472, 875, 0, 6487,
	0, 0, 0, 0, 5923, 6488, 0, 6522, 6500, 0,
	0, 0, 0, 878, 0, 878, 871, 6548, 871, 0,
	0, 0, 0, 0, 0, 0, 6536, 0, 6526, 875,
	0, 0, 0, 0, 878, 0, 5923, 878, 0, 6534,
	0, 1744, 0, 0, 0, 0, 0, 0, 0, 6550,
	6510, 6552, 1744, 6511, 0, 0, 0, 0, 0, 0,
	0, 0, 6512, 1472, 1472, 1472, 0, 0, 0, 0,
	6567, 0, 0, 6569, 1472, 0, 0, 0, 0, 0,
	0, 6520, 0, 6525, 1542, 0, 1542, 0, 0, 0,
	6560, 0, 0, 0, 0, 0, 0, 5385, 0, 0,
	0, 0, 0, 0, 6547, 0, 0, 0, 6588, 0,
	5122, 0, 0, 875, 0, 875, 0, 0, 6081, 0,
	5923, 0, 5923, 5678, 0, 6565, 5676, 0, 0, 6575,
	0, 0, 0, 0, 875, 0, 5990, 875, 0, 0,
	6580, 5923, 0, 1541, 5923, 1472, 1472, 6581, 0, 6624,
	1472, 6578, 6642, 6589, 6590, 1744, 0, 6576, 1651, 0,
	1651, 6594, 6579, 0, 0, 0, 0, 6574, 1472, 2458,
	0, 0, 0, 0, 0, 1541, 0, 6634, 6637, 0,
	0, 0, 0, 0, 6606, 6602, 6603, 6604, 0, 6655,
	6638, 0, 6646, 0, 0, 6643, 6666, 0, 6614, 6615,
	0, 871, 0, 0, 0, 6661, 0, 6656, 6598, 6599,
	6600, 6601, 6665, 6622, 0, 6623, 0, 6627, 6628, 0,
	0, 6668, 6686, 0, 0, 0, 1472, 1472, 1472, 6639,
	0, 0, 6076, 871, 6644, 0, 0, 0, 0, 0,
	0, 0, 0, 1542, 0, 0, 0, 6658, 0, 0,
	0, 0, 6090, 0, 0, 0, 1989, 0, 0, 1541,
	6582, 1541, 6583, 0, 0, 0, 0, 0, 0, 0,
	0, 1472, 0, 0, 0, 6672, 6722, 0, 6729, 0,
	1541, 6116, 0, 1541, 6676, 6688, 6679, 0, 6648, 6687,
	6649, 0, 0, 0, 6276, 6277, 6279, 6280, 6281, 6645,
	6703, 6700, 6701, 0, 6702, 6287, 6744, 0, 0, 0,
	0, 0, 0, 0, 6760, 2750, 0, 871, 0, 871,
	0, 6725, 0, 0, 0, 6768, 0, 6761, 0, 0,
	6759, 0, 6774, 0, 6724, 6758, 0, 1472, 871, 6762,
	1566, 871, 0, 0, 6770, 1651, 1651, 1651, 0, 6753,
	2978, 923, 6, 6747, 6783, 6767, 6752, 6362, 0, 0,
	11, 6766, 221, 0, 10, 923, 6743, 6795, 6776, 8,
	6749, 336, 336, 0, 0, 0, 0, 6780, 6775, 1599,
	0, 0, 6739, 0, 0, 6799, 0, 6742, 6806, 1472,
	336, 6794, 336, 336, 0, 1630, 336, 2769, 1645, 6797,
	6789, 6790, 0, 6807, 0, 0, 6634, 6816, 6805, 6637,
	878, 1660, 878, 6809, 6741, 6822, 6812, 6824, 0, 1000,
	0, 6828, 1000, 6820, 6826, 6823, 5944, 6840, 6819, 6825,
	6803, 0, 6834, 0, 0, 6219, 6814, 0, 6833, 0,
	6836, 0, 0, 6841, 6832, 1007, 6835, 0, 6837, 0,
	0, 0, 0, 0, 1651, 6818, 0, 0, 0, 0,
	0, 0, 0, 6723, 0, 0, 0, 0, 6856, 6827,
	6857, 6048, 0, 0, 0, 6791, 6792, 6793, 6862, 0,
	6863, 0, 6864, 0, 6866, 0, 0, 0, 0, 0,
	1472, 1472, 5942, 0, 0, 6878, 6867, 0, 6884, 1472,
	1472, 6882, 2792, 6875, 6876, 0, 0, 6887, 0, 0,
	875, 0, 875, 0, 6892, 336, 0, 5923, 6897, 5923,
	0, 0, 0, 0, 6906, 0, 6900, 6904, 0, 0,
	6912, 0, 6865, 0, 6898, 6905, 6873, 6914, 6913, 2198,
	2199, 0, 6903, 6908, 6893, 6894, 0, 0, 2802, 0,
	0, 0, 336, 1651, 336, 336, 336, 336, 1630, 6932,
	336, 336, 6928, 2229, 6929, 0, 6664, 0, 6918, 1645,
	6921, 6939, 6938, 2201, 6899, 0, 6922, 0, 6923, 0,
	0, 1472, 6937, 336, 6861, 2022, 6907, 6944, 6934, 6935,
	6949, 6936, 6915, 6932, 6952, 6941, 6948, 1640, 0, 6895,
	0, 0, 0, 2041, 0, 0, 2255, 0, 6919, 0,
	0, 6947, 0, 6920, 2053, 6951, 0, 2200, 0, 0,
	0, 2798, 6930, 0, 5945, 0, 6945, 0, 6497, 0,
	0, 2078, 6498, 1645, 0, 0, 0, 0, 336, 336,
	0, 1630, 0, 0, 0, 6942, 0, 0, 0, 6946,
	0, 0, 0, 0, 0, 1542, 1541, 1542, 1541, 0,
	0, 0, 0, 0, 0, 0, 0, 1000, 0, 336,
	336, 0, 0, 2455, 0, 0, 0, 0, 0, 0,
	0, 2144, 0, 1640, 0, 0, 0, 0, 0, 1036,
	0, 2795, 2152, 0, 0, 0, 0, 1240, 0, 5946,
	5947, 2455, 2455, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 871, 0, 871, 4650, 4651, 0,
	4668, 4669, 4670, 0, 0, 2198, 2199, 5943, 0, 0,
	0, 0, 0, 0, 0, 2206, 0, 0, 5816, 0,
	0, 6049, 0, 0, 336, 0, 0, 0, 0, 2229,
	2800, 0, 0, 0, 0, 0, 0, 0, 0, 2201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5856, 0, 0, 0, 0, 0, 0, 0, 2772, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 6664, 2774,
	0, 0, 2255, 0, 0, 0, 0, 0, 2228, 2231,
	0, 0, 0, 2200, 1640, 1640, 4665, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2801,
	0, 0, 0, 1878, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1542, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2779, 0, 0, 2805, 0, 2451, 0, 0,
	0, 0, 0, 0, 0, 2221, 0, 0, 0, 0,
	0, 0, 1542, 6508, 0, 4501, 0, 0, 0, 0,
	2455, 0, 0, 0, 0, 2451, 2451, 0, 0, 0,
	0, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640,
	1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640, 1640,
	1640, 0, 1640, 4656, 4501, 0, 0, 0, 0, 0,
	0, 2206, 0, 0, 5948, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 6044, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 906, 2803, 0, 0, 0, 0,
	2252, 6562, 0, 0, 6564, 0, 1542, 0, 1542, 0,
	0, 0, 2799, 0, 336, 0, 336, 4673, 0, 0,
	336, 0, 4276, 0, 0, 0, 0, 1542, 0, 0,
	1542, 2022, 3298, 3298, 2228, 2231, 0, 0, 1630, 1645,
	336, 0, 336, 2421, 0, 0, 0, 2796, 0, 4672,
	336, 0, 923, 0, 0, 0, 0, 2794, 0, 336,
	0, 0, 0, 0, 0, 0, 2804, 0, 0, 0,
	2780, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2510, 0, 0, 0, 0, 0,
	0, 0, 2222, 4666, 0, 0, 0, 336, 0, 6050,
	0, 2221, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 2451, 5256, 5257, 0, 0, 3298,
	3298, 3298, 3298, 3298, 3298, 3298, 3298, 3298, 3298, 3298,
	3298, 3298, 3298, 3298, 3298, 3298, 3298, 3298, 3298, 0,
	3298, 0, 0, 0, 0, 1000, 0, 0, 2797, 0,
	0, 0, 0, 0, 6051, 0, 0, 0, 0, 0,
	0, 2455, 2455, 0, 0, 0, 0, 5816, 2254, 0,
	0, 0, 0, 0, 0, 6673, 0, 6674, 2252, 0,
	0, 0, 0, 1007, 0, 1007, 2252, 0, 0, 0,
	0, 0, 0, 0, 0, 1007, 1007, 0, 0, 0,
	0, 0, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 5324,
	5325, 5326, 5327, 5328, 5329, 5330, 5331, 5332, 5333, 5334,
	5335, 5336, 0, 5340, 0, 0, 0, 1119, 0, 0,
	1000, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 2792, 0, 0, 0, 0, 0, 2631, 0, 0,
	0, 0, 336, 1132, 336, 0, 336, 0, 336, 0,
	0, 336, 0, 336, 0, 0, 0, 0, 0, 0,
	4667, 906, 0, 0, 0, 0, 1130, 0, 2222, 0,
	2210, 2202, 2203, 2204, 2205, 2207, 2208, 2802, 0, 0,
	2677, 0, 2455, 2678, 0, 2679, 0, 2680, 0, 2681,
	3061, 0, 0, 0, 1133, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 336, 336, 336, 336, 0, 0,
	336, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2455, 2455, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2451, 2451, 0, 1640, 0,
	0, 0, 0, 0, 2254, 2198, 2199, 0, 0, 0,
	2798, 1126, 0, 0, 2455, 2455, 0, 0, 0, 0,
	1142, 0, 0, 0, 0, 0, 0, 0, 0, 2229,
	0, 0, 0, 0, 0, 0, 2230, 1131, 0, 2201,
	0, 0, 0, 0, 0, 0, 3061, 2455, 0, 0,
	0, 0, 0, 1542, 0, 1542, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2255, 0, 0, 0, 0, 0, 0, 0,
	2795, 0, 0, 2200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2220, 0, 0, 0, 1124, 4662,
	4663, 4664, 0, 0, 2217, 0, 4661, 4659, 4660, 4652,
	4653, 4654, 4655, 4657, 4658, 0, 975, 2202, 2203, 2204,
	2205, 2207, 2208, 0, 1537, 0, 2451, 0, 2198, 2199,
	0, 2232, 2233, 2234, 2243, 2244, 2245, 0, 0, 2800,
	0, 0, 336, 0, 0, 0, 336, 1128, 0, 0,
	0, 2236, 2229, 0, 0, 0, 0, 0, 0, 2230,
	0, 0, 2201, 0, 0, 0, 2451, 2451, 2455, 2455,
	0, 2455, 0, 0, 2249, 0, 0, 0, 0, 331,
	331, 0, 901, 0, 0, 0, 0, 336, 336, 0,
	2791, 2223, 2224, 2225, 2226, 2255, 0, 0, 2451, 2451,
	0, 2206, 0, 0, 0, 0, 2200, 336, 2801, 0,
	0, 0, 0, 0, 1141, 0, 0, 2220, 336, 0,
	0, 0, 0, 0, 0, 336, 0, 2217, 0, 0,
	0, 2451, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2788, 0, 2805, 0, 0, 0, 906, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1000, 0, 2228, 2231, 1240, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2215, 2216, 1630, 336,
	0, 1121, 0, 980, 0, 0, 0, 1000, 0, 2786,
	0, 0, 0, 0, 2223, 2224, 2225, 2226, 0, 0,
	0, 0, 0, 2793, 2206, 0, 0, 0, 0, 0,
	1125, 2221, 0, 0, 2803, 0, 0, 1127, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2799, 2451, 2451, 0, 2451, 0, 0, 0, 0,
	0, 2787, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2240, 0, 0, 0, 0, 2250, 0,
	0, 0, 974, 0, 0, 0, 2796, 2228, 2231, 0,
	0, 0, 0, 0, 0, 0, 2794, 0, 1137, 0,
	0, 0, 0, 3138, 0, 2804, 0, 1123, 0, 0,
	2246, 0, 2247, 0, 0, 0, 2252, 0, 0, 2215,
	2216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1120, 0,
	0, 0, 0, 0, 972, 0, 0, 0, 906, 0,
	2227, 3324, 0, 0, 0, 0, 2455, 2797, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 2600, 1129,
	0, 0, 0, 0, 906, 0, 0, 2248, 2222, 0,
	336, 0, 906, 0, 0, 0, 0, 976, 0, 0,
	0, 0, 0, 0, 336, 2455, 0, 0, 2237, 1122,
	0, 0, 0, 0, 0, 0, 0, 1136, 0, 2252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 0, 0, 0, 0, 0, 336,
	1645, 0, 1139, 1140, 0, 1135, 336, 0, 336, 2022,
	0, 336, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1640, 0, 2254, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 1645, 0, 336,
	923, 0, 923, 0, 0, 2455, 0, 0, 0, 336,
	0, 2222, 336, 0, 0, 0, 336, 0, 4049, 0,
	0, 0, 0, 0, 336, 336, 0, 0, 0, 336,
	0, 336, 0, 0, 0, 0, 1630, 0, 336, 336,
	0, 0, 0, 0, 0, 2241, 1645, 1645, 4067, 0,
	2451, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244,
	2245, 2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204,
	2205, 2207, 2208, 0, 0, 2236, 2229, 2254, 0, 2451,
	0, 0, 0, 2230, 0, 0, 2201, 1007, 1007, 0,
	0, 1007, 1007, 0, 0, 0, 0, 1640, 2249, 336,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2455, 0, 0, 0, 0, 0, 0, 0, 2255,
	0, 0, 0, 0, 0, 336, 1630, 336, 0, 0,
	2200, 0, 0, 0, 0, 0, 0, 0, 4141, 336,
	0, 2220, 0, 1630, 1397, 1630, 0, 1630, 0, 0,
	0, 2217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2239, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2451,
	2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209, 2210,
	2202, 2203, 2204, 2205, 2207, 2208, 336, 0, 0, 0,
	0, 4622, 0, 0, 0, 4623, 0, 0, 0, 0,
	0, 0, 0, 336, 336, 336, 336, 1630, 0, 0,
	1640, 0, 0, 0, 0, 0, 0, 1630, 0, 0,
	336, 0, 0, 0, 0, 0, 0, 0, 2223, 2224,
	2225, 2226, 4218, 0, 0, 0, 0, 0, 2206, 0,
	0, 0, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 3298, 0, 0, 0, 0,
	0, 0, 0, 336, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2451, 0, 2240, 0, 0,
	0, 90, 2250, 0, 0, 0, 4289, 0, 0, 0,
	0, 2228, 2231, 0, 0, 0, 0, 0, 1000, 0,
	0, 0, 91, 1000, 0, 0, 0, 1640, 0, 0,
	0, 1640, 0, 0, 2246, 0, 2247, 0, 0, 0,
	56, 0, 96, 2215, 2216, 0, 0, 0, 0, 0,
	0, 336, 0, 0, 0, 0, 0, 0, 6155, 0,
	0, 0, 0, 2238, 58, 0, 0, 0, 0, 0,
	0, 4354, 2022, 0, 0, 0, 0, 0, 2221, 0,
	0, 2455, 0, 0, 0, 0, 0, 0, 0, 106,
	0, 0, 0, 0, 0, 0, 0, 0, 3298, 2198,
	2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0, 0,
	0, 0, 0, 336, 4432, 0, 0, 0, 0, 0,
	0, 0, 2236, 2229, 0, 0, 0, 0, 0, 0,
	2230, 2248, 0, 2201, 0, 1233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2249, 0, 2022, 0, 59,
	336, 130, 2237, 4354, 0, 0, 0, 114, 127, 0,
	336, 0, 0, 2252, 0, 1640, 2255, 0, 0, 0,
	0, 4481, 0, 0, 0, 0, 0, 2200, 0, 0,
	0, 6243, 4218, 0, 906, 0, 0, 0, 2220, 0,
	0, 0, 0, 1240, 4218, 0, 0, 0, 2217, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 2455, 0, 2227, 0, 0,
	0, 115, 0, 0, 0, 0, 1640, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 336, 0, 0,
	0, 0, 0, 1640, 0, 2222, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 2451, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1831, 0,
	0, 0, 0, 0, 0, 2223, 2224, 2225, 2226, 2241,
	0, 0, 0, 0, 0, 2206, 2198, 2199, 0, 2232,
	2233, 2234, 2243, 2244, 2245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 2236,
	2229, 0, 0, 1987, 0, 0, 0, 2230, 0, 0,
	2201, 2254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2249, 3298, 2240, 0, 0, 0, 0, 2250,
	0, 4650, 4651, 0, 4668, 4669, 4670, 1640, 2228, 2231,
	0, 0, 0, 2255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2200, 0, 0, 0, 0, 0,
	2022, 2246, 0, 2247, 0, 2220, 0, 2455, 0, 0,
	2215, 2216, 0, 0, 0, 2217, 0, 0, 0, 0,
	119, 0, 0, 0, 0, 0, 0, 0, 0, 2451,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2239, 0, 0, 0, 2221, 6427, 0, 0, 0,
	0, 3298, 2133, 2134, 2212, 2213, 2219, 2242, 2218, 2214,
	4665, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208,
	0, 0, 0, 0, 0, 3176, 0, 0, 0, 3177,
	0, 0, 0, 0, 231, 0, 122, 0, 0, 126,
	0, 0, 0, 0, 0, 0, 0, 0, 2248, 0,
	0, 0, 2223, 2224, 2225, 2226, 0, 0, 0, 0,
	0, 0, 2206, 0, 0, 0, 0, 0, 90, 2237,
	0, 0, 297, 0, 0, 0, 0, 0, 0, 0,
	2252, 1235, 0, 0, 6471, 0, 0, 0, 1234, 91,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 2455, 0, 0, 0, 1640, 56, 0, 96,
	0, 2240, 0, 0, 0, 0, 2250, 4656, 0, 0,
	0, 0, 0, 0, 0, 2228, 2231, 0, 0, 0,
	0, 58, 0, 0, 299, 0, 0, 0, 0, 0,
	0, 2451, 0, 0, 2227, 0, 0, 0, 2246, 0,
	2247, 0, 0, 0, 0, 0, 106, 2215, 2216, 0,
	0, 2455, 0, 183, 0, 0, 0, 0, 0, 0,
	0, 0, 2222, 0, 0, 0, 0, 2238, 0, 0,
	0, 0, 237, 0, 1732, 0, 0, 0, 0, 0,
	298, 0, 2221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1233, 4672, 0, 0, 2241, 0, 0, 0,
	0, 0, 0, 0, 291, 0, 59, 0, 130, 0,
	0, 0, 0, 292, 114, 127, 0, 232, 0, 0,
	0, 0, 0, 236, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2248, 0, 4666, 2254, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2237, 0, 0, 1993,
	0, 0, 0, 0, 0, 0, 0, 2252, 0, 0,
	0, 0, 0, 0, 0, 0, 2451, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 2391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2046, 0, 0,
	0, 0, 0, 2416, 0, 1987, 0, 1640, 0, 0,
	0, 0, 2252, 0, 0, 0, 0, 0, 2239, 0,
	0, 2227, 0, 0, 0, 2451, 0, 0, 0, 0,
	0, 2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209,
	2210, 2202, 2203, 2204, 2205, 2207, 2208, 0, 0, 2222,
	0, 0, 0, 0, 0, 2132, 5778, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1987,
	0, 2147, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2241, 0, 2198, 2199, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4667, 0, 0, 0, 0, 2229,
	0, 0, 0, 0, 0, 0, 2230, 0, 0, 2201,
	0, 0, 0, 0, 0, 2254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 119, 0, 0,
	0, 0, 2255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2622, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 231, 2455, 122, 0, 2239, 126, 2640, 0, 2642,
	0, 2644, 0, 0, 2646, 0, 2647, 0, 2212, 2213,
	2219, 2242, 2218, 2214, 0, 2211, 2209, 2210, 2202, 2203,
	2204, 2205, 2207, 2208, 0, 0, 0, 5755, 0, 297,
	0, 0, 0, 5267, 0, 0, 0, 0, 1235, 0,
	0, 0, 0, 0, 0, 1234, 0, 0, 0, 0,
	0, 2223, 2224, 2225, 2226, 0, 0, 2688, 2689, 0,
	0, 2206, 0, 4662, 4663, 4664, 0, 0, 0, 0,
	4661, 4659, 4660, 4652, 4653, 4654, 4655, 4657, 4658, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 299, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	183, 0, 0, 0, 2228, 2231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 237,
	0, 0, 0, 0, 0, 0, 0, 298, 0, 0,
	0, 0, 0, 0, 0, 0, 2215, 2216, 0, 0,
	0, 0, 336, 0, 0, 0, 0, 906, 0, 0,
	0, 291, 906, 0, 0, 906, 2451, 0, 906, 906,
	292, 0, 2494, 906, 232, 0, 906, 0, 0, 0,
	236, 2221, 0, 0, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2129, 0, 0, 0, 0, 0, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	336, 0, 0, 2022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	923, 5215, 0, 0, 2235, 0, 0, 0, 0, 0,
	0, 0, 0, 5207, 0, 0, 2252, 0, 0, 0,
	0, 0, 0, 5225, 5226, 0, 336, 0, 0, 0,
	336, 336, 0, 0, 0, 0, 0, 0, 0, 0,
	2942, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2964, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2605, 2606, 2607, 2608, 2609, 0, 0, 0,
	2227, 0, 0, 2984, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4862, 2222, 0,
	0, 0, 5219, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3011, 0, 5209, 0, 0, 4870, 0, 4871,
	4872, 0, 0, 2022, 0, 0, 0, 0, 0, 336,
	5208, 0, 0, 0, 0, 1630, 336, 0, 336, 0,
	0, 0, 0, 0, 0, 0, 1630, 0, 0, 1630,
	0, 0, 0, 0, 4218, 4218, 336, 0, 4906, 4909,
	0, 0, 0, 0, 2254, 4218, 0, 2421, 0, 0,
	0, 0, 0, 0, 0, 0, 4218, 2421, 0, 4218,
	2421, 0, 0, 2421, 0, 0, 4906, 0, 0, 0,
	5218, 0, 0, 0, 0, 0, 0, 0, 336, 336,
	4909, 0, 336, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4909, 0, 336, 0, 0, 0, 0, 4980,
	4909, 0, 0, 0, 5205, 0, 0, 0, 0, 0,
	0, 0, 4988, 4909, 0, 0, 4994, 0, 4994, 2235,
	0, 0, 0, 0, 0, 0, 0, 0, 1630, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204,
	2205, 2207, 2208, 4218, 0, 4218, 0, 5031, 4218, 4909,
	0, 0, 4218, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 5227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1000, 0, 90, 1000, 0, 0, 0, 0, 4909,
	0, 0, 1000, 0, 0, 0, 0, 3961, 0, 0,
	0, 0, 0, 0, 91, 0, 0, 0, 5222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 56, 0, 96, 0, 0, 2046, 1630, 0,
	0, 0, 0, 0, 0, 336, 5216, 5210, 5211, 5212,
	5213, 5214, 0, 0, 0, 0, 58, 0, 0, 0,
	336, 0, 2235, 0, 0, 0, 0, 5112, 2235, 0,
	2952, 5118, 4218, 0, 0, 336, 0, 0, 0, 0,
	0, 106, 0, 1645, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5230, 5228, 0, 5161, 0, 0, 336,
	0, 0, 0, 0, 4481, 0, 0, 1630, 0, 0,
	0, 0, 0, 0, 4218, 0, 906, 0, 0, 0,
	2989, 0, 0, 0, 4218, 0, 0, 1233, 5224, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3002, 3004,
	0, 59, 0, 130, 0, 0, 0, 5223, 0, 114,
	127, 0, 3007, 0, 0, 0, 2964, 0, 0, 0,
	0, 0, 5229, 5231, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 0, 0, 0, 0, 0, 2198, 2199, 0,
	2232, 2233, 2234, 2243, 2244, 2245, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2236, 2229, 4096, 0, 0, 0, 0, 0, 2230, 0,
	0, 2201, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 5294, 2249, 0, 0, 0, 0, 4125, 0,
	4128, 0, 0, 0, 2235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2255, 0, 0, 0, 0, 0,
	0, 0, 2235, 0, 0, 2200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2217, 0, 0, 2235,
	0, 0, 0, 0, 2235, 0, 0, 0, 0, 0,
	2235, 0, 0, 0, 0, 0, 0, 0, 0, 4176,
	0, 0, 0, 0, 0, 0, 0, 0, 5352, 0,
	0, 0, 0, 0, 0, 0, 4187, 1987, 1987, 4190,
	0, 0, 0, 336, 336, 0, 0, 0, 0, 0,
	0, 0, 0, 4198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 906,
	0, 0, 5377, 906, 0, 0, 0, 0, 0, 0,
	0, 906, 0, 2223, 2224, 2225, 2226, 0, 0, 0,
	0, 0, 0, 2206, 0, 0, 0, 0, 0, 0,
	0, 0, 119, 0, 0, 0, 0, 0, 0, 0,
	2235, 0, 0, 0, 0, 2235, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2235,
	336, 0, 0, 0, 2235, 0, 0, 0, 0, 0,
	0, 0, 2240, 0, 0, 1405, 0, 2250, 0, 0,
	0, 0, 0, 0, 0, 0, 2228, 2231, 2360, 0,
	0, 0, 0, 0, 0, 0, 231, 0, 122, 0,
	336, 126, 0, 0, 1987, 0, 0, 0, 0, 2246,
	0, 2247, 0, 0, 0, 0, 0, 4909, 2215, 2216,
	0, 0, 0, 0, 0, 4067, 0, 0, 0, 0,
	0, 0, 0, 0, 297, 0, 0, 0, 2238, 0,
	0, 0, 0, 1235, 0, 0, 0, 0, 0, 0,
	1234, 0, 0, 2221, 0, 0, 0, 0, 0, 5217,
	0, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 0,
	0, 0, 0, 0, 0, 5215, 0, 0, 0, 0,
	0, 2235, 0, 0, 0, 0, 0, 5207, 0, 0,
	0, 0, 0, 0, 2235, 0, 299, 5225, 5226, 0,
	0, 0, 0, 4457, 0, 0, 2248, 0, 0, 0,
	0, 0, 0, 2964, 0, 0, 0, 0, 1000, 0,
	0, 0, 0, 0, 0, 183, 0, 2237, 0, 0,
	4098, 0, 0, 0, 0, 0, 0, 0, 2252, 0,
	0, 0, 0, 3302, 237, 0, 0, 0, 0, 0,
	0, 0, 298, 0, 0, 0, 0, 0, 4994, 2235,
	0, 4994, 0, 0, 4994, 2235, 0, 0, 0, 0,
	0, 0, 4994, 0, 0, 0, 291, 0, 0, 0,
	0, 0, 0, 0, 0, 292, 5219, 0, 336, 232,
	0, 0, 0, 0, 0, 236, 0, 0, 0, 0,
	0, 0, 2227, 0, 0, 0, 0, 0, 5209, 4558,
	0, 0, 0, 0, 4354, 0, 2127, 0, 0, 0,
	0, 0, 0, 0, 5208, 0, 1389, 0, 0, 0,
	2222, 0, 0, 0, 4180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4909, 0, 336,
	0, 0, 0, 923, 923, 1645, 0, 0, 0, 0,
	0, 0, 0, 0, 2241, 0, 0, 0, 0, 0,
	0, 0, 0, 2198, 2199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5218, 0, 0, 0, 0, 0,
	336, 0, 5660, 0, 0, 4481, 2421, 2229, 0, 0,
	0, 336, 0, 0, 2230, 0, 2254, 2201, 5681, 0,
	4354, 0, 0, 336, 0, 0, 0, 336, 0, 336,
	0, 0, 0, 0, 0, 0, 336, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 2235, 0, 0, 0,
	2255, 0, 0, 0, 0, 0, 0, 0, 4218, 336,
	0, 2200, 0, 0, 0, 0, 0, 0, 0, 0,
	1240, 4218, 2220, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4346, 0, 0, 0, 0, 2239, 0, 0, 0,
	0, 0, 0, 0, 0, 5227, 0, 0, 0, 2212,
	2213, 2219, 2242, 2218, 2214, 0, 2211, 2209, 2210, 2202,
	2203, 2204, 2205, 2207, 2208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4625, 5259, 0, 0, 0, 0,
	0, 0, 5222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 5772, 0, 0, 0, 2223,
	2224, 2225, 2226, 0, 0, 0, 0, 2235, 0, 2206,
	5216, 5210, 5211, 5212, 5213, 5214, 0, 0, 0, 0,
	0, 0, 0, 3273, 3274, 3275, 3276, 3269, 3270, 3271,
	3272, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2235, 0,
	0, 0, 0, 0, 0, 0, 0, 5230, 5228, 336,
	0, 0, 0, 0, 0, 2022, 0, 336, 0, 0,
	0, 0, 2228, 2231, 4526, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 336, 0, 0, 0, 0,
	0, 0, 5224, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2215, 2216, 0, 0, 0, 0,
	0, 5223, 0, 0, 0, 1645, 1645, 1645, 1645, 0,
	3249, 3250, 3251, 3252, 0, 0, 5229, 5231, 0, 1645,
	1645, 1645, 1645, 0, 336, 1645, 0, 0, 0, 2221,
	0, 0, 0, 0, 0, 3261, 3262, 3263, 3264, 3257,
	3258, 3259, 3260, 3265, 3266, 3267, 3268, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4218, 4218, 0,
	4906, 0, 0, 4994, 4218, 0, 0, 0, 0, 0,
	0, 0, 5925, 0, 5925, 2022, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4218, 0, 2421, 2252, 0, 0, 4906, 0, 2022,
	2022, 336, 4909, 3245, 3246, 3247, 3248, 3253, 3254, 3255,
	3256, 0, 0, 0, 0, 4909, 0, 336, 0, 4909,
	0, 336, 5978, 0, 0, 0, 0, 4994, 0, 0,
	4994, 0, 0, 0, 4994, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1405, 1405, 1405, 0, 0,
	0, 0, 0, 4218, 0, 4218, 336, 0, 2227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4354, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2222, 1000, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4218, 4218, 0, 0,
	0, 5925, 0, 4481, 0, 6074, 0, 0, 0, 0,
	0, 4906, 0, 0, 0, 0, 0, 0, 2235, 0,
	0, 0, 2235, 0, 0, 0, 0, 0, 0, 336,
	0, 0, 2254, 0, 0, 0, 0, 2235, 6098, 1963,
	0, 0, 0, 336, 0, 0, 0, 0, 2235, 2235,
	2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235,
	2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235,
	2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235, 2235,
	2235, 2235, 2235, 2235, 2235, 0, 0, 0, 0, 0,
	2235, 0, 2235, 2235, 2235, 2235, 0, 0, 0, 0,
	0, 0, 0, 0, 3302, 3302, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1654, 0, 2218,
	2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207,
	2208, 0, 5377, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2235, 1389, 1389, 1389, 0,
	0, 0, 0, 0, 0, 2198, 2199, 0, 0, 0,
	0, 2243, 2244, 2245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2235, 0, 0, 2235, 2229,
	0, 2235, 0, 0, 2235, 0, 2230, 0, 0, 2201,
	2235, 2235, 2235, 2235, 2235, 2235, 2235, 0, 0, 0,
	0, 2249, 0, 0, 336, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1797, 0, 0, 1803,
	4218, 2421, 2255, 2421, 0, 0, 5681, 0, 0, 0,
	0, 0, 0, 2200, 0, 336, 0, 0, 0, 0,
	0, 0, 0, 0, 2220, 6259, 0, 6259, 0, 0,
	0, 0, 0, 0, 2217, 0, 0, 0, 0, 2235,
	0, 0, 4671, 0, 3302, 3302, 3302, 3302, 0, 0,
	2235, 0, 2235, 0, 0, 0, 1979, 2235, 0, 0,
	0, 0, 1997, 0, 0, 0, 0, 0, 0, 1000,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4771, 4994, 4994, 0, 0, 0, 4994, 0, 1630,
	0, 0, 0, 0, 2024, 0, 2029, 0, 2035, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2223, 2224, 2225, 2226, 0, 0, 4909, 0, 336,
	0, 2206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1987, 1987, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 5681,
	0, 0, 0, 5925, 2135, 5925, 2140, 2022, 0, 0,
	2240, 4218, 0, 0, 0, 2250, 0, 0, 0, 0,
	2154, 0, 2159, 0, 2228, 2231, 0, 0, 0, 0,
	0, 0, 5161, 0, 6394, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2022, 0, 0, 0,
	0, 0, 1963, 0, 0, 1963, 2215, 2216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4399, 0, 2238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2221, 0, 5294, 0, 0, 0, 0, 0, 0,
	0, 0, 4875, 0, 0, 0, 0, 0, 0, 4880,
	0, 1987, 0, 4389, 4387, 0, 0, 0, 0, 0,
	0, 4391, 4393, 4383, 0, 0, 0, 0, 0, 4902,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 0,
	4994, 6462, 0, 0, 0, 0, 0, 0, 5681, 4412,
	0, 4958, 4960, 0, 0, 2964, 2252, 0, 0, 0,
	0, 0, 0, 0, 0, 2276, 0, 0, 5925, 0,
	0, 2289, 0, 0, 0, 0, 0, 1405, 0, 0,
	0, 0, 0, 0, 0, 1963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1473,
	5925, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2227, 0, 0, 0, 2236, 2229, 0, 0, 336, 0,
	0, 0, 2230, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2249, 2222, 0,
	0, 0, 0, 0, 923, 0, 881, 0, 0, 2354,
	2354, 2354, 0, 0, 0, 0, 0, 0, 2255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2200,
	0, 0, 2241, 0, 5925, 0, 5925, 0, 0, 0,
	2220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 0, 0, 0, 0, 5925, 0, 336, 5925, 0,
	0, 0, 0, 0, 0, 0, 4385, 0, 0, 2421,
	0, 0, 0, 0, 2254, 0, 0, 4401, 0, 0,
	2022, 0, 2022, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4400, 4390, 4388, 4392, 4394, 4384, 5141, 4386,
	4402, 4411, 4404, 0, 0, 1645, 1645, 1645, 0, 0,
	0, 0, 0, 4396, 4398, 4406, 0, 0, 2531, 0,
	0, 0, 0, 0, 0, 6612, 0, 2223, 2224, 2225,
	2226, 0, 0, 0, 0, 0, 0, 2206, 0, 0,
	0, 6259, 0, 0, 336, 0, 0, 0, 0, 0,
	4413, 0, 0, 0, 2239, 0, 0, 0, 0, 4994,
	0, 0, 0, 0, 0, 0, 0, 0, 1389, 0,
	2242, 2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204,
	2205, 2207, 2208, 0, 0, 0, 2240, 4218, 0, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 2231, 5249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4410, 0, 0, 0, 0, 0, 0,
	0, 0, 336, 2246, 0, 2247, 0, 0, 0, 0,
	0, 0, 2215, 2216, 0, 0, 0, 0, 0, 881,
	0, 0, 0, 0, 5294, 0, 0, 0, 0, 0,
	0, 1963, 2238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2235, 0, 0, 2221, 0, 0,
	0, 0, 0, 2022, 0, 2662, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4403, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2248, 2703, 0, 2198, 2199, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2237, 0, 0, 0, 0, 0, 2229, 0, 0,
	0, 0, 2252, 0, 2230, 0, 0, 2201, 0, 5681,
	0, 0, 0, 0, 0, 0, 0, 0, 4414, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4395,
	4397, 0, 0, 4405, 0, 0, 0, 0, 0, 0,
	2255, 0, 0, 0, 0, 0, 0, 0, 4354, 0,
	0, 2200, 0, 0, 0, 0, 0, 0, 0, 4218,
	0, 0, 2220, 0, 0, 0, 2227, 0, 0, 0,
	0, 5925, 2217, 5925, 1405, 0, 4994, 0, 1963, 0,
	0, 0, 0, 0, 5080, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2222, 0, 0, 0, 0, 0,
	0, 0, 2235, 0, 2235, 0, 0, 0, 0, 5108,
	5109, 0, 0, 0, 0, 0, 0, 0, 0, 4354,
	0, 0, 0, 0, 0, 0, 0, 0, 2241, 0,
	0, 0, 0, 5450, 0, 5254, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4218, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2223,
	2224, 2225, 2226, 0, 0, 0, 0, 0, 0, 2206,
	2254, 0, 1963, 0, 0, 0, 0, 0, 0, 5197,
	0, 0, 0, 0, 0, 4218, 0, 0, 0, 0,
	0, 5233, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244,
	2245, 0, 0, 0, 0, 0, 0, 0, 0, 4994,
	0, 0, 2228, 2231, 0, 2236, 2229, 0, 0, 0,
	0, 0, 0, 2230, 0, 4994, 2201, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2249, 0,
	2239, 0, 0, 0, 2215, 2216, 0, 0, 0, 0,
	0, 0, 1963, 2212, 2213, 2219, 2242, 2218, 2214, 2255,
	2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0,
	2200, 0, 0, 0, 0, 0, 0, 0, 4624, 2221,
	0, 2220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 0, 3033, 0, 3037, 0, 0, 0, 0,
	0, 0, 3052, 0, 0, 1389, 0, 0, 0, 0,
	0, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071,
	3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081,
	3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091,
	3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 0, 3105,
	0, 3107, 3108, 3109, 3110, 0, 0, 0, 0, 2235,
	0, 2235, 2964, 0, 2252, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3134, 2223, 2224,
	2225, 2226, 0, 0, 0, 0, 0, 0, 2206, 2276,
	0, 0, 0, 3180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 5658, 0, 0, 0, 0, 0, 3210,
	3213, 3216, 3219, 0, 5670, 3225, 3226, 3227, 3228, 3229,
	3230, 3231, 0, 0, 0, 0, 0, 0, 2227, 0,
	2964, 0, 2964, 0, 0, 0, 1963, 2240, 0, 5699,
	0, 0, 2250, 0, 0, 0, 3294, 0, 3305, 3307,
	3312, 2228, 2231, 0, 0, 0, 2222, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2246, 0, 2247, 0, 0, 0,
	0, 0, 0, 2215, 2216, 0, 0, 2235, 2235, 0,
	3302, 3302, 0, 0, 2235, 5456, 5457, 0, 0, 0,
	0, 0, 0, 2238, 4671, 4671, 0, 3969, 2235, 2235,
	0, 0, 0, 0, 0, 0, 0, 0, 2221, 0,
	0, 0, 0, 0, 0, 0, 2235, 0, 0, 0,
	0, 0, 2254, 0, 0, 0, 0, 0, 2235, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2248, 0, 0, 0, 0, 0, 3302, 3302, 3302,
	3302, 3302, 3302, 3302, 3302, 3302, 3302, 3302, 3302, 3302,
	3302, 3302, 3302, 3302, 3302, 3302, 3302, 0, 3302, 4671,
	4671, 4671, 4671, 2252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2235, 0, 0, 0, 2218,
	2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207,
	2208, 0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244,
	2245, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 2236, 2229, 0, 0, 0,
	0, 0, 0, 2230, 0, 0, 2201, 0, 0, 5587,
	0, 881, 0, 0, 0, 2222, 0, 0, 2249, 0,
	881, 0, 5606, 5607, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2255,
	0, 0, 0, 0, 0, 0, 0, 0, 5618, 2241,
	2200, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2220, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 2217, 0, 0, 0, 0, 5642, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4157, 0,
	0, 2254, 0, 0, 4159, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 0,
	0, 0, 0, 0, 5962, 0, 881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2964, 0, 881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2223, 2224,
	2225, 2226, 0, 0, 0, 5722, 0, 0, 2206, 0,
	3002, 5728, 5729, 0, 0, 0, 0, 0, 0, 0,
	0, 2239, 0, 0, 2235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214,
	0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208,
	0, 0, 0, 0, 0, 0, 0, 2240, 0, 0,
	0, 0, 2250, 0, 0, 0, 0, 0, 0, 0,
	0, 2228, 2231, 0, 1405, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2246, 0, 2247, 0, 2235, 2235,
	0, 0, 0, 2215, 2216, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2964, 2238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 6104, 0, 2221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4434, 0, 4436, 0, 0, 0,
	0, 2248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5834, 5835,
	0, 0, 2237, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1437, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2235, 881, 0, 881, 0, 0, 0, 0, 5878,
	5879, 0, 0, 0, 881, 0, 0, 881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 335, 335, 880, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2459, 0, 0, 2256,
	2257, 0, 0, 881, 0, 2222, 0, 6221, 1987, 335,
	0, 0, 0, 0, 0, 1389, 0, 0, 1157, 0,
	0, 0, 0, 0, 0, 0, 2235, 2235, 0, 0,
	2235, 4671, 4671, 2235, 0, 0, 0, 2235, 6245, 2241,
	0, 0, 0, 0, 2235, 0, 1963, 0, 0, 1157,
	0, 0, 0, 2235, 0, 0, 0, 0, 0, 4562,
	4563, 0, 0, 0, 0, 4569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2235, 2235, 2235, 2235,
	2235, 2254, 0, 0, 4583, 4584, 0, 2235, 0, 2235,
	3180, 0, 4671, 4671, 4671, 4671, 4671, 4671, 4671, 4671,
	4671, 4671, 4671, 4671, 4671, 4671, 4671, 4671, 4671, 4671,
	4671, 4671, 0, 0, 0, 4671, 0, 881, 2235, 2235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2235, 0, 0, 0, 0, 0, 0, 3002, 0, 2235,
	0, 957, 0, 0, 0, 0, 0, 4601, 0, 0,
	881, 0, 2964, 881, 881, 881, 881, 881, 0, 0,
	0, 2235, 941, 4613, 0, 0, 0, 942, 0, 0,
	0, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214,
	0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4621,
	0, 0, 0, 0, 0, 0, 943, 0, 0, 2235,
	0, 0, 0, 0, 0, 0, 1543, 0, 0, 944,
	0, 6124, 0, 6126, 6127, 6128, 0, 6130, 6131, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 945, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2198, 2199, 0, 3312, 3312, 3312,
	0, 0, 0, 0, 2235, 963, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2354, 2229, 3097,
	3098, 3099, 3105, 0, 0, 2230, 0, 0, 2201, 0,
	0, 946, 0, 0, 0, 0, 0, 0, 0, 0,
	2235, 0, 0, 0, 0, 0, 0, 0, 0, 6181,
	0, 6186, 6187, 0, 0, 0, 0, 947, 938, 0,
	0, 2255, 6198, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2200, 2235, 2235, 0, 0, 0, 0, 0,
	0, 0, 0, 2220, 0, 0, 948, 0, 0, 0,
	0, 0, 939, 2217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	975, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1428, 132, 0,
	0, 962, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 5253, 0, 0, 0,
	0, 0, 881, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 0,
	2223, 2224, 2225, 2226, 0, 0, 0, 0, 0, 0,
	2206, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 959, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2235, 0, 0, 0, 0, 0,
	0, 881, 0, 0, 6317, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	6568, 0, 132, 2228, 2231, 0, 0, 0, 2235, 2235,
	0, 0, 0, 2235, 2235, 0, 0, 2235, 2235, 0,
	0, 0, 0, 2235, 0, 0, 0, 881, 2235, 881,
	0, 881, 0, 0, 0, 2215, 2216, 0, 0, 970,
	0, 950, 0, 3302, 0, 0, 0, 0, 0, 881,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 0,
	2221, 0, 0, 971, 940, 0, 0, 951, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 6626, 2459, 2459,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 1359,
	0, 6414, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1382, 0, 0, 974, 0, 0, 0,
	0, 0, 0, 0, 952, 2235, 0, 0, 0, 968,
	969, 0, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 960, 1963, 0, 953, 2252, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 3302, 0, 0, 0,
	0, 0, 0, 0, 0, 6681, 0, 187, 0, 0,
	0, 0, 0, 0, 0, 0, 90, 1531, 55, 54,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 91, 0, 0,
	954, 0, 961, 0, 0, 0, 0, 0, 972, 2227,
	0, 0, 955, 0, 0, 56, 0, 96, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 956, 0,
	0, 77, 0, 964, 0, 0, 2235, 2222, 0, 58,
	0, 185, 0, 0, 0, 0, 0, 0, 0, 0,
	1405, 976, 0, 881, 0, 0, 0, 0, 0, 0,
	881, 57, 1405, 958, 106, 0, 0, 0, 881, 0,
	0, 973, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 6513, 0, 60, 78, 0, 0, 0, 2235,
	2235, 0, 0, 0, 0, 61, 0, 0, 0, 0,
	67, 0, 0, 2254, 0, 0, 6751, 0, 0, 0,
	0, 0, 0, 0, 59, 0, 130, 0, 0, 0,
	0, 0, 114, 127, 0, 0, 335, 335, 0, 0,
	0, 0, 79, 0, 0, 0, 0, 0, 0, 4710,
	0, 0, 0, 0, 0, 335, 0, 335, 335, 0,
	1963, 335, 0, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3002, 0, 0, 62, 0, 0, 0, 0, 2235, 2235,
	2235, 0, 0, 0, 0, 4710, 0, 0, 2235, 2235,
	4671, 3302, 0, 0, 0, 0, 115, 2235, 0, 0,
	2235, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205,
	2207, 2208, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 4671, 3302,
	0, 881, 881, 0, 80, 0, 0, 0, 0, 0,
	0, 1389, 0, 1963, 0, 2235, 0, 0, 0, 0,
	0, 2198, 2199, 1389, 0, 0, 2235, 335, 0, 335,
	335, 335, 335, 0, 0, 335, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 2229, 0, 0, 2235, 0,
	0, 0, 2230, 0, 0, 2201, 0, 0, 1157, 0,
	0, 2235, 0, 2235, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2235, 0, 0, 0, 0, 0, 2235,
	2235, 0, 2235, 0, 2235, 119, 0, 0, 2255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2200,
	0, 0, 0, 0, 63, 881, 0, 0, 0, 0,
	2220, 0, 0, 335, 335, 0, 0, 0, 0, 0,
	2217, 1963, 0, 66, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 81,
	0, 0, 0, 0, 335, 335, 0, 0, 68, 231,
	0, 122, 0, 0, 126, 0, 0, 6355, 0, 0,
	0, 64, 0, 0, 0, 186, 0, 0, 0, 2459,
	0, 0, 4939, 65, 0, 0, 0, 0, 0, 0,
	0, 0, 4671, 4568, 0, 0, 0, 297, 0, 0,
	0, 0, 0, 0, 0, 0, 72, 0, 0, 0,
	0, 0, 0, 83, 0, 0, 0, 2223, 2224, 2225,
	2226, 0, 0, 0, 0, 0, 0, 2206, 0, 335,
	0, 0, 184, 0, 0, 2235, 4671, 0, 0, 2235,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 299,
	881, 2235, 0, 0, 0, 0, 5013, 5014, 0, 0,
	0, 0, 881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 183, 1963,
	2228, 2231, 0, 0, 2198, 2199, 2235, 0, 82, 0,
	132, 0, 0, 0, 0, 0, 1963, 237, 0, 0,
	0, 0, 0, 0, 0, 298, 0, 0, 2229, 0,
	0, 0, 2215, 2216, 0, 2230, 0, 0, 2201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 291,
	0, 0, 0, 0, 0, 0, 0, 0, 292, 0,
	0, 0, 232, 0, 0, 0, 0, 2221, 236, 0,
	0, 2255, 0, 0, 0, 0, 0, 132, 0, 0,
	0, 0, 2200, 0, 0, 0, 0, 0, 0, 235,
	0, 0, 0, 2220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2217, 0, 0, 881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	881, 0, 0, 0, 0, 881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5176, 0,
	0, 0, 2252, 0, 0, 0, 0, 0, 1963, 880,
	0, 1543, 0, 0, 0, 335, 4561, 0, 0, 0,
	0, 0, 0, 132, 2235, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 880, 335, 0, 0,
	2223, 2224, 2225, 2226, 0, 1157, 0, 0, 0, 0,
	2206, 0, 0, 2235, 1157, 0, 0, 0, 0, 0,
	0, 0, 3052, 0, 0, 0, 2227, 0, 0, 5251,
	5252, 0, 0, 5255, 0, 0, 0, 5258, 0, 0,
	0, 0, 0, 0, 0, 0, 5262, 0, 0, 0,
	0, 0, 335, 0, 2222, 5269, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 5278,
	0, 0, 1963, 2228, 2231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 132, 0, 132, 5301,
	5302, 0, 5303, 5304, 5305, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2215, 2216, 0, 0, 0,
	0, 0, 0, 5312, 0, 0, 0, 5314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2254, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2221, 0, 0, 0, 1382, 132, 132, 0, 0, 0,
	5343, 5344, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 132, 0, 0, 5355,
	0, 0, 0, 2235, 0, 0, 0, 0, 0, 0,
	132, 0, 132, 0, 5364, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1157, 0, 335,
	0, 335, 0, 335, 0, 0, 335, 0, 335, 0,
	0, 0, 5386, 3052, 0, 2252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2218, 2214, 0,
	2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0,
	0, 0, 0, 0, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 881, 335,
	335, 335, 335, 0, 0, 335, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 5444, 0,
	2198, 2199, 1359, 2232, 2233, 2234, 2243, 2244, 2245, 0,
	0, 0, 0, 0, 0, 0, 0, 2222, 0, 0,
	0, 0, 0, 2236, 2229, 0, 2269, 0, 0, 0,
	0, 2230, 0, 0, 2201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2275, 0, 2249, 0, 2281, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2220,
	5499, 0, 0, 2254, 0, 0, 0, 0, 0, 2217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 5535, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 335, 0, 0,
	2374, 1157, 2376, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	5568, 5569, 0, 0, 0, 0, 2223, 2224, 2225, 2226,
	0, 0, 335, 335, 0, 0, 2206, 0, 0, 0,
	2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205,
	2207, 2208, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2240, 0, 0, 0, 0,
	2250, 0, 0, 0, 0, 335, 0, 0, 0, 2228,
	2231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2246, 0, 2247, 0, 0, 1963, 1963, 0,
	0, 2215, 2216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 1963,
	0, 2238, 0, 0, 0, 0, 2354, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 2354, 0,
	0, 0, 0, 0, 0, 0, 0, 5719, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1963, 0, 0, 0, 0, 0,
	2237, 0, 0, 0, 0, 0, 0, 1405, 0, 0,
	0, 2252, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 5753, 5754, 0, 0, 0, 0, 5758, 5759,
	0, 0, 0, 5762, 5763, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 5768, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1963, 0, 0, 0, 5773, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1963, 0, 0, 0, 0, 0, 0, 0,
	1543, 0, 0, 2222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1543, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 1405, 0, 0, 2241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	881, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 1157, 0, 1157, 0, 0, 335, 335, 0, 2254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1963, 0,
	0, 335, 0, 0, 1157, 0, 0, 0, 0, 0,
	0, 5880, 0, 0, 335, 0, 0, 335, 0, 2459,
	0, 335, 0, 881, 0, 0, 0, 0, 0, 335,
	335, 0, 0, 0, 335, 0, 335, 0, 1389, 0,
	0, 0, 0, 335, 335, 0, 0, 0, 2459, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 1963, 2211,
	2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4620, 2198, 2199,
	0, 2232, 2233, 2234, 2243, 2244, 2245, 0, 0, 0,
	0, 0, 0, 1180, 0, 0, 0, 0, 0, 0,
	0, 0, 2229, 0, 335, 0, 0, 0, 0, 2230,
	5991, 0, 2201, 0, 1184, 1382, 0, 1382, 0, 1185,
	0, 0, 0, 0, 2249, 0, 0, 0, 0, 0,
	335, 0, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 2255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1389, 2200, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2220, 1186, 0,
	1200, 0, 0, 0, 0, 0, 1359, 2217, 0, 1359,
	1359, 0, 881, 0, 0, 881, 0, 6054, 6055, 0,
	0, 1963, 0, 0, 0, 0, 0, 0, 0, 1187,
	0, 335, 0, 0, 1188, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2459, 0, 335, 335,
	335, 335, 0, 0, 0, 0, 0, 1209, 0, 0,
	0, 0, 0, 0, 0, 335, 1189, 0, 3123, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1207, 0, 0, 1405, 0, 1382, 335,
	0, 0, 0, 0, 2223, 2224, 2225, 2226, 2275, 0,
	0, 0, 2275, 335, 2206, 0, 0, 0, 0, 1182,
	1179, 0, 0, 0, 0, 0, 0, 1963, 335, 0,
	0, 0, 0, 0, 6143, 6144, 6145, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1190, 0,
	0, 0, 0, 0, 3052, 0, 0, 6153, 6154, 0,
	0, 0, 0, 2240, 0, 881, 1211, 0, 2250, 0,
	0, 0, 975, 0, 6162, 6165, 0, 2228, 2231, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1531, 0, 0, 3052, 0, 335, 0, 0, 0,
	2246, 0, 2247, 0, 0, 0, 2376, 0, 0, 2215,
	2216, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2238,
	0, 0, 0, 1963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 881, 0, 0, 1157, 0,
	1210, 0, 0, 0, 0, 0, 0, 881, 0, 881,
	1205, 0, 132, 881, 0, 0, 0, 0, 0, 0,
	881, 881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 0, 2248, 0, 0,
	0, 0, 0, 6260, 0, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 6271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2252,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1204, 0, 6293, 0, 0, 1389, 0, 0,
	881, 0, 0, 1191, 0, 0, 0, 0, 0, 0,
	0, 335, 881, 0, 881, 0, 0, 0, 6306, 0,
	0, 6308, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 6318, 0, 0, 0, 1192,
	6324, 6325, 335, 2227, 0, 0, 6327, 0, 6329, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2459, 0,
	0, 2222, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 881, 0, 0, 0, 0, 0, 0, 974, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 881, 0,
	0, 1178, 0, 0, 1201, 2241, 0, 0, 2459, 2459,
	0, 0, 0, 0, 0, 0, 1193, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 132, 0, 0, 0,
	2459, 2459, 0, 0, 0, 0, 0, 2254, 0, 1199,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1194, 2459, 0, 0, 1195, 1214, 0, 1213,
	972, 0, 0, 0, 1196, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1197, 881, 881, 0, 0, 1206, 0, 0, 0, 0,
	0, 1215, 0, 0, 1212, 0, 0, 0, 0, 0,
	0, 0, 0, 976, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2239, 0, 0,
	881, 0, 0, 973, 0, 0, 0, 0, 0, 0,
	2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209, 2210,
	2202, 2203, 2204, 2205, 2207, 2208, 0, 0, 0, 0,
	0, 6470, 0, 0, 0, 6474, 0, 0, 0, 0,
	0, 0, 0, 1405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2459, 0, 2459, 0, 0,
	0, 6496, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 881,
	0, 0, 0, 0, 881, 881, 881, 881, 0, 0,
	0, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2354, 0, 0, 0,
	0, 0, 0, 0, 6531, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 132, 2198, 2199, 0,
	2232, 2233, 2234, 2243, 2244, 2245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2236, 2229, 0, 0, 0, 0, 0, 0, 2230, 0,
	0, 2201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2249, 0, 0, 0, 0, 0, 0,
	0, 0, 3052, 3052, 132, 0, 0, 132, 0, 0,
	0, 0, 6165, 132, 2255, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	881, 881, 0, 0, 1389, 0, 0, 0, 0, 0,
	881, 0, 0, 881, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 882, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3123, 2223, 2224, 2225, 2226, 0, 0, 0,
	0, 0, 0, 2206, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 2275, 0, 0, 0, 0, 337, 337,
	0, 337, 2459, 0, 6699, 6699, 6699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 2240, 0, 0, 337, 0, 2250, 0, 957,
	0, 2459, 0, 0, 0, 0, 2228, 2231, 0, 6728,
	881, 0, 0, 881, 0, 0, 0, 0, 0, 0,
	941, 0, 0, 0, 0, 942, 337, 881, 0, 2246,
	0, 2247, 0, 0, 0, 0, 881, 0, 2215, 2216,
	0, 881, 881, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2221, 943, 6699, 0, 881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 944, 0, 0,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2459, 0, 0, 0, 0, 0, 0, 0, 0,
	945, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2248, 0, 0, 0,
	0, 0, 0, 963, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2237, 0, 0,
	0, 0, 0, 0, 0, 1531, 0, 0, 2252, 946,
	0, 0, 0, 0, 0, 3123, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 947, 938, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 881, 0, 0,
	0, 0, 0, 0, 0, 881, 0, 0, 0, 881,
	881, 0, 0, 0, 948, 0, 0, 2459, 0, 0,
	939, 0, 2227, 881, 0, 0, 0, 0, 6699, 6888,
	0, 881, 0, 0, 0, 0, 0, 0, 975, 881,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 962,
	0, 0, 0, 0, 0, 0, 0, 1543, 0, 0,
	0, 0, 0, 0, 2241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	881, 881, 0, 0, 0, 0, 0, 0, 0, 880,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2254, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 959, 0, 0, 0,
	881, 0, 881, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 335, 335, 0, 0, 0,
	0, 0, 0, 0, 881, 0, 2239, 0, 0, 950,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2212,
	2213, 2219, 2242, 2218, 2214, 0, 2211, 2209, 2210, 2202,
	2203, 2204, 2205, 2207, 2208, 0, 0, 0, 0, 0,
	0, 971, 940, 0, 4619, 951, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 881, 881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 881,
	0, 0, 0, 0, 974, 0, 0, 0, 0, 0,
	0, 0, 952, 0, 0, 0, 0, 968, 969, 0,
	966, 0, 0, 0, 335, 0, 0, 0, 0, 960,
	0, 335, 953, 335, 0, 0, 0, 0, 0, 0,
	881, 0, 0, 0, 0, 881, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 881, 881, 881, 881, 881, 881, 881,
	0, 0, 0, 0, 0, 0, 0, 0, 954, 0,
	961, 0, 0, 335, 335, 0, 972, 335, 0, 0,
	955, 0, 0, 0, 880, 0, 0, 0, 0, 0,
	881, 0, 0, 0, 0, 0, 956, 0, 0, 335,
	0, 964, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2459, 0, 0, 0, 0, 0, 0, 0, 976,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 958, 0, 0, 0, 0, 0, 0, 0, 973,
	881, 0, 881, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1531, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1157, 0, 0, 0, 0,
	0, 0, 0, 2459, 0, 0, 0, 0, 0, 0,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 881,
	0, 0, 0, 337, 337, 881, 0, 0, 881, 881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 337, 337, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 2198, 2199, 0, 2232, 2233,
	2234, 2243, 2244, 2245, 0, 0, 0, 0, 0, 881,
	0, 0, 0, 0, 0, 0, 0, 0, 2236, 2229,
	0, 0, 0, 0, 335, 0, 2230, 0, 0, 2201,
	0, 881, 0, 881, 0, 0, 0, 0, 0, 0,
	0, 2249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2459, 0,
	0, 0, 2255, 0, 0, 881, 0, 0, 881, 1747,
	0, 0, 0, 2200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2220, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 2217, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2459, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 1747, 337, 337, 337, 337,
	0, 0, 337, 337, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 1543, 1543,
	0, 2223, 2224, 2225, 2226, 0, 132, 132, 0, 132,
	0, 2206, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	2240, 0, 0, 0, 0, 2250, 0, 0, 881, 0,
	1747, 0, 0, 0, 2228, 2231, 341, 0, 0, 0,
	1747, 337, 337, 0, 0, 1157, 0, 0, 132, 132,
	0, 132, 0, 0, 0, 0, 1747, 2246, 0, 2247,
	0, 0, 0, 881, 0, 0, 2215, 2216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 335, 2238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 881, 0, 881, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1147, 0,
	0, 0, 0, 881, 0, 0, 881, 0, 0, 0,
	881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 881, 0, 0, 2248, 0, 0, 0, 0, 1147,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1382, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 132, 132, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2227, 0, 0, 0, 881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2459, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 2222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 335, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 1747, 0,
	0, 1747, 0, 0, 2254, 0, 0, 0, 0, 0,
	0, 0, 337, 337, 337, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 335, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 335, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	0, 0, 335, 0, 335, 0, 0, 0, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 337,
	1543, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 1531,
	1531, 0, 0, 0, 2239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2212, 2213, 2219,
	2242, 2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204,
	2205, 2207, 2208, 0, 0, 0, 0, 0, 0, 0,
	879, 0, 3177, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 881,
	0, 881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 1747, 1747, 1747,
	1747, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 337, 0, 337, 0,
	337, 0, 0, 337, 0, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1543, 0, 0, 0, 0, 0,
	0, 0, 1543, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 0, 0, 0, 0, 337, 337, 337, 337,
	0, 0, 337, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2198, 2199,
	0, 2232, 2233, 2234, 2243, 2244, 2245, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2236, 2229, 0, 0, 0, 0, 0, 0, 2230,
	0, 0, 2201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2200, 880, 0, 880,
	0, 0, 0, 0, 0, 0, 0, 2220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2217, 0, 0,
	0, 0, 0, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 335, 0, 0, 0, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 1747, 1747, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 2223, 2224, 2225, 2226, 0, 337,
	337, 0, 0, 0, 2206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 337,
	0, 0, 0, 0, 132, 1747, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 1531, 0, 0, 0, 0, 880, 0, 0, 0,
	0, 0, 0, 2240, 0, 1531, 0, 0, 2250, 0,
	0, 0, 337, 0, 0, 0, 0, 2228, 2231, 0,
	0, 1747, 0, 1747, 335, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	2246, 0, 2247, 1747, 1747, 0, 0, 0, 0, 2215,
	2216, 0, 0, 0, 0, 0, 132, 1747, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 2238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2221, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2237, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 132, 2252,
	0, 0, 1745, 0, 0, 1531, 0, 0, 0, 0,
	0, 0, 0, 1531, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 335,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	335, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 2222, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 1747, 0,
	0, 0, 0, 0, 0, 2241, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 337, 0,
	337, 0, 0, 337, 337, 0, 0, 2254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1745, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 1745,
	0, 337, 0, 0, 0, 0, 0, 0, 132, 0,
	0, 337, 0, 0, 337, 0, 1747, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 337, 337, 880, 0,
	880, 337, 0, 337, 0, 0, 0, 0, 0, 0,
	337, 337, 0, 0, 0, 0, 0, 2239, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 0,
	2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209, 2210,
	2202, 2203, 2204, 2205, 2207, 2208, 0, 0, 0, 0,
	0, 6613, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 1747, 1747, 0, 0, 0,
	0, 0, 0, 0, 132, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 880, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 337, 337, 337, 337, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 337, 0, 0, 880, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 335, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 1881, 337, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 132, 0, 0,
	0, 0, 1882, 0, 0, 2431, 0, 0, 0, 0,
	0, 1746, 0, 0, 2431, 0, 0, 0, 0, 880,
	1745, 880, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	880, 0, 335, 880, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 1747, 0, 0, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 1747, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 1746, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 1881, 0, 0, 0, 0, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 1745, 0, 0,
	1745, 1745, 1745, 1745, 1745, 0, 0, 2198, 2199, 0,
	2232, 2233, 2234, 2243, 2244, 2245, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2236, 2229, 1747, 0, 1747, 0, 0, 2431, 2230, 1747,
	0, 2201, 0, 0, 0, 0, 0, 335, 337, 0,
	0, 0, 0, 2249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2255, 0, 3123, 0, 0, 337,
	0, 0, 0, 0, 0, 2200, 0, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2223, 2224, 2225, 2226, 0, 0, 0,
	0, 0, 0, 2206, 2198, 2199, 0, 2232, 2233, 2234,
	2243, 2244, 2245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2236, 2229, 0,
	0, 0, 0, 0, 0, 2230, 0, 0, 2201, 0,
	0, 0, 0, 0, 0, 0, 880, 0, 880, 0,
	2249, 0, 2240, 0, 0, 1882, 0, 2250, 1882, 0,
	0, 0, 0, 0, 0, 132, 2228, 2231, 0, 0,
	0, 2255, 0, 0, 0, 0, 0, 0, 0, 1745,
	1745, 0, 2200, 0, 0, 0, 0, 0, 0, 2246,
	1881, 2247, 0, 2220, 1746, 0, 0, 0, 2215, 2216,
	0, 0, 0, 2217, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 0, 0, 2238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 132, 0, 0, 132, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2248, 0, 0, 0,
	2223, 2224, 2225, 2226, 1745, 0, 1745, 0, 1745, 0,
	2206, 0, 0, 0, 0, 0, 0, 2237, 1882, 0,
	0, 0, 0, 0, 0, 0, 1745, 1745, 2252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1746, 1746, 1746, 1746, 1746, 2240,
	0, 0, 0, 0, 2250, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 2231, 0, 0, 1881, 0, 0,
	2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0,
	0, 0, 2227, 0, 0, 0, 2246, 0, 2247, 0,
	0, 0, 0, 2236, 2229, 2215, 2216, 0, 0, 0,
	0, 2230, 0, 0, 2201, 0, 0, 0, 0, 0,
	2222, 0, 0, 0, 0, 2238, 2249, 132, 0, 132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2221, 0, 0, 0, 0, 0, 0, 2255, 0, 0,
	0, 0, 0, 0, 2241, 0, 0, 0, 2200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2220,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 2217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2248, 0, 0, 2254, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2237, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2252, 0, 132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2223, 2224, 2225, 2226,
	0, 1881, 0, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2239, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2212,
	2213, 2219, 2242, 2218, 2214, 0, 2211, 2209, 2210, 2202,
	2203, 2204, 2205, 2207, 2208, 0, 0, 2222, 0, 0,
	6609, 0, 0, 0, 0, 2240, 0, 0, 0, 0,
	2250, 0, 0, 1746, 1746, 0, 0, 0, 0, 2228,
	2231, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 2241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2246, 0, 2247, 0, 0, 0, 0, 1746,
	0, 2215, 2216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2238, 0, 2254, 0, 0, 0, 0, 0, 0,
	0, 0, 1746, 0, 0, 0, 2221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	1746, 0, 1746, 0, 0, 1881, 0, 0, 0, 2248,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 1746, 0, 0, 0, 0, 0, 0, 1745, 1745,
	2237, 0, 0, 2239, 1746, 0, 0, 0, 0, 0,
	0, 2252, 0, 0, 0, 0, 2212, 2213, 2219, 2242,
	2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205,
	2207, 2208, 0, 0, 0, 0, 0, 6489, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2227, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1745, 2222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 1882, 0, 2241, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 2254,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 337, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0, 2211,
	2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0, 0,
	0, 0, 0, 6426, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 1747, 0, 337, 1747,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 337, 0,
	2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0,
	0, 0, 0, 1745, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2236, 2229, 1745, 0, 1745, 0, 0,
	0, 2230, 1745, 0, 2201, 0, 0, 0, 0, 0,
	337, 337, 0, 0, 337, 0, 2249, 0, 0, 1882,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 2255, 0, 0,
	0, 0, 1746, 1746, 0, 0, 0, 0, 2200, 2198,
	2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0, 2220,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2217,
	0, 0, 2236, 2229, 0, 0, 0, 0, 0, 0,
	2230, 0, 0, 2201, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 2249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2220, 0,
	0, 0, 0, 0, 0, 0, 1746, 0, 2217, 0,
	0, 0, 0, 0, 0, 0, 2223, 2224, 2225, 2226,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1747,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 1747, 0, 1747, 0, 0, 0, 1747, 0, 0,
	0, 0, 337, 0, 1747, 1747, 0, 0, 0, 0,
	0, 1747, 1747, 0, 0, 2240, 0, 337, 0, 0,
	2250, 0, 0, 0, 0, 0, 0, 0, 0, 2228,
	2231, 0, 0, 0, 0, 2223, 2224, 2225, 2226, 0,
	0, 337, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 0, 2246, 0, 2247, 0, 0, 0, 0, 0,
	0, 2215, 2216, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 2238, 0, 0, 0, 0, 1747, 0, 1747, 0,
	0, 1882, 0, 0, 2240, 0, 2221, 0, 0, 2250,
	0, 0, 0, 1746, 0, 0, 0, 0, 2228, 2231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2246, 0, 2247, 0, 1881, 0, 0, 0, 0,
	2215, 2216, 0, 0, 0, 0, 0, 0, 0, 2248,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 0,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2237, 0, 1747, 0, 0, 2221, 0, 0, 0, 0,
	0, 2252, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1746, 2248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1746,
	0, 1746, 0, 0, 0, 2227, 1746, 0, 0, 2237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2241, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2254,
	0, 0, 2222, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2241, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 337, 1747, 0, 0, 0, 0, 1747, 1747,
	1747, 1747, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2254, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0, 2211,
	2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0, 0,
	0, 0, 0, 6425, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209,
	2210, 2202, 2203, 2204, 2205, 2207, 2208, 0, 0, 0,
	0, 0, 6150, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 2198, 2199,
	337, 2232, 2233, 2234, 2243, 2244, 2245, 0, 0, 0,
	0, 0, 0, 0, 1747, 1747, 0, 0, 0, 0,
	0, 2236, 2229, 0, 1747, 0, 0, 1747, 1747, 2230,
	0, 0, 2201, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2249, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 2255, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2200, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 2220, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2217, 0, 0,
	0, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 337, 0, 0, 0, 337,
	0, 337, 0, 0, 0, 0, 0, 0, 337, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 1881, 0, 0, 0, 1747, 1747, 1747, 0, 0,
	0, 1881, 0, 0, 2223, 2224, 2225, 2226, 0, 0,
	0, 0, 0, 0, 2206, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1747, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0,
	0, 0, 0, 2240, 0, 0, 0, 0, 2250, 0,
	0, 0, 0, 2236, 2229, 0, 0, 2228, 2231, 0,
	0, 2230, 0, 0, 2201, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2249, 0, 0, 0,
	2246, 0, 2247, 0, 0, 0, 0, 0, 0, 2215,
	2216, 0, 0, 0, 0, 0, 0, 2255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2200, 2238,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2220,
	0, 0, 0, 0, 2221, 0, 0, 0, 0, 2217,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 0,
	0, 0, 0, 1747, 1747, 0, 0, 2248, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 1881, 0, 0, 0, 0, 1747, 2237, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 2252,
	0, 0, 0, 0, 0, 0, 2223, 2224, 2225, 2226,
	0, 0, 0, 0, 0, 0, 2206, 0, 0, 0,
	0, 0, 0, 0, 1747, 1747, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1747, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2227, 0, 2240, 0, 0, 0, 0,
	2250, 0, 0, 0, 0, 0, 0, 0, 0, 2228,
	2231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2222, 0, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 2246, 0, 2247, 0, 1747, 0, 0, 337,
	0, 2215, 2216, 337, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 2241, 0, 0, 0, 0,
	0, 2238, 0, 0, 0, 0, 0, 0, 1747, 0,
	0, 0, 0, 0, 0, 0, 2221, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2254, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2248,
	0, 0, 1747, 1747, 0, 1882, 0, 0, 0, 0,
	0, 1747, 1745, 0, 0, 1882, 0, 0, 0, 0,
	2237, 0, 0, 0, 1745, 0, 1745, 0, 0, 0,
	1881, 2252, 0, 0, 0, 1147, 0, 1745, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 1882, 0, 0, 2239, 0, 0,
	0, 0, 0, 0, 1747, 337, 0, 0, 0, 1747,
	2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209, 2210,
	2202, 2203, 2204, 2205, 2207, 2208, 0, 0, 0, 0,
	0, 5920, 0, 0, 0, 2227, 1747, 1747, 1747, 1747,
	1747, 1747, 1747, 1747, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 1745, 0, 2222, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1747, 0, 1747, 1747, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 2254,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 1882, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1747, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 337, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2239,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0, 2211,
	2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0, 0,
	0, 0, 0, 5783, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 0, 1882, 0, 0, 1747,
	0, 0, 1747, 1747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 337, 0, 0, 0, 2431, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1747, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	0, 1745, 1745, 1745, 1745, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 1747,
	1746, 0, 1747, 0, 1882, 0, 0, 0, 0, 0,
	0, 1746, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1747, 2198, 2199, 0,
	2232, 2233, 2234, 2243, 2244, 2245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2236, 2229, 0, 0, 0, 0, 0, 0, 2230, 0,
	0, 2201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2249, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 2255, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2200, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 0, 1745, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 1882,
	1745, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1745, 0, 0, 0,
	337, 0, 0, 2223, 2224, 2225, 2226, 1747, 0, 0,
	0, 0, 0, 2206, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2240, 0, 0, 0, 0, 2250, 0, 0,
	0, 0, 0, 0, 0, 0, 2228, 2231, 0, 337,
	0, 0, 0, 0, 1747, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 1747, 0, 0, 0, 2246,
	0, 2247, 0, 0, 0, 0, 0, 0, 2215, 2216,
	0, 1882, 0, 1745, 0, 0, 0, 0, 1745, 1745,
	1745, 0, 0, 0, 0, 0, 0, 0, 2238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2221, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1745, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2248, 0, 1747, 0,
	1746, 0, 0, 0, 0, 1746, 1746, 1746, 1746, 0,
	0, 0, 0, 0, 0, 1882, 0, 2237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 1881, 0, 0,
	0, 0, 2227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 1745, 1745, 0, 0,
	2222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2241, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 2254, 0, 0, 0,
	0, 1746, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 1746, 1746, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2239, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 2212,
	2213, 2219, 2242, 2218, 2214, 0, 2211, 2209, 2210, 2202,
	2203, 2204, 2205, 2207, 2208, 0, 0, 0, 0, 0,
	5782, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1745, 1745, 1746, 0, 0,
	0, 0, 1746, 1746, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1746, 0,
	0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245,
	0, 1882, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 1745, 0, 2236, 2229, 0, 0, 0, 0,
	0, 0, 2230, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2249, 0, 1745,
	1745, 1745, 1745, 1745, 1745, 1745, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2200,
	0, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	2220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244,
	2245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2236, 2229, 0, 0, 0,
	1882, 1882, 0, 2230, 0, 0, 2201, 1745, 0, 1745,
	1745, 0, 0, 0, 0, 0, 0, 0, 2249, 0,
	1745, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	1746, 1746, 0, 0, 0, 0, 0, 0, 0, 2255,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2200, 0, 0, 0, 1882, 0, 0, 2223, 2224, 2225,
	2226, 2220, 0, 0, 0, 0, 0, 2206, 0, 0,
	0, 2217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 1746, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 0, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2246, 0, 2247, 0, 0, 2223, 2224,
	2225, 2226, 2215, 2216, 0, 0, 0, 0, 2206, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 2238, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 1745, 0, 0, 1745, 1745, 2221, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2240, 0, 0,
	0, 0, 2250, 0, 0, 0, 0, 0, 0, 0,
	0, 2228, 2231, 0, 0, 0, 1745, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2248, 0, 0, 0, 2246, 0, 2247, 0, 0, 0,
	0, 0, 0, 2215, 2216, 0, 0, 0, 0, 1746,
	1746, 2237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2252, 2238, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 1745, 0, 0, 2221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1745,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 1746, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 2248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 1746, 1746, 1746, 1746, 1746, 1746,
	1746, 0, 2237, 0, 2222, 0, 0, 0, 0, 0,
	0, 0, 0, 2252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 0, 0, 0, 0, 2241, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	2254, 1746, 0, 1746, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2241,
	1745, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	2239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2254, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0,
	2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0,
	0, 0, 0, 0, 5781, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1745, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1745, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 1746, 0, 0, 1746,
	1746, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214,
	0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208,
	0, 0, 0, 0, 0, 5298, 0, 0, 0, 0,
	1746, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1745, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 1746,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1746, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1746, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1746, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 1746, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 350, 349,
	351, 352, 353, 354, 1884, 355, 356, 1885, 1886, 1887,
	0, 1888, 814, 1889, 1890, 1891, 358, 0, 357, 1892,
	359, 360, 361, 883, 362, 363, 364, 365, 366, 367,
	368, 369, 815, 816, 0, 370, 817, 371, 818, 1893,
	819, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 1894, 1895, 0, 382, 820, 821, 822, 1896, 383,
	384, 385, 386, 823, 1897, 884, 1898, 387, 388, 389,
	390, 391, 392, 393, 394, 0, 1899, 396, 397, 398,
	395, 399, 400, 1900, 401, 1746, 402, 403, 404, 405,
	406, 407, 408, 1901, 409, 410, 411, 885, 412, 413,
	414, 1902, 1903, 1905, 1904, 1906, 1907, 1908, 415, 416,
	417, 418, 419, 0, 420, 422, 423, 824, 424, 825,
	1909, 427, 429, 421, 425, 1910, 428, 426, 430, 431,
	1911, 432, 433, 434, 435, 1912, 1913, 436, 437, 438,
	1914, 439, 440, 442, 441, 1915, 443, 444, 445, 1916,
	446, 447, 826, 448, 449, 450, 452, 454, 451, 453,
	455, 456, 457, 458, 459, 827, 828, 460, 461, 1917,
	342, 1918, 0, 0, 0, 0, 462, 463, 464, 829,
	0, 0, 0, 465, 1919, 467, 471, 472, 468, 469,
	470, 473, 1920, 466, 474, 475, 1921, 886, 476, 477,
	478, 830, 831, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 1922, 488, 489, 832, 1923, 833, 490, 1924,
	491, 492, 493, 494, 495, 496, 497, 834, 835, 836,
	600, 888, 498, 499, 500, 501, 1925, 502, 503, 504,
	505, 506, 507, 508, 0, 0, 0, 509, 510, 511,
	512, 1926, 344, 343, 345, 887, 837, 513, 601, 514,
	838, 839, 1927, 840, 1928, 515, 516, 519, 889, 841,
	890, 518, 520, 521, 891, 522, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 1929, 530, 532, 531,
	1930, 534, 842, 533, 892, 535, 536, 893, 1931, 537,
	538, 539, 540, 541, 542, 545, 1932, 1933, 543, 544,
	546, 547, 0, 548, 549, 551, 554, 550, 552, 553,
	555, 556, 569, 570, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 572, 0, 571, 894,
	573, 574, 575, 576, 577, 585, 587, 588, 583, 584,
	586, 589, 590, 591, 593, 594, 580, 581, 582, 895,
	592, 578, 1934, 579, 346, 896, 595, 596, 597, 598,
	1935, 843, 599, 844, 602, 603, 1936, 0, 604, 0,
	605, 1937, 1938, 607, 608, 609, 1939, 1940, 610, 611,
	845, 897, 612, 898, 846, 613, 614, 606, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 1941,
	626, 627, 847, 628, 629, 630, 848, 631, 632, 633,
	849, 634, 850, 635, 636, 1942, 637, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	851, 650, 651, 653, 652, 654, 655, 1943, 656, 0,
	657, 658, 659, 0, 0, 0, 0, 0, 660, 661,
	663, 0, 664, 665, 666, 667, 668, 662, 669, 670,
	671, 672, 673, 674, 675, 1944, 677, 678, 676, 679,
	680, 899, 681, 682, 683, 684, 685, 852, 686, 0,
	687, 688, 696, 697, 698, 689, 690, 692, 699, 691,
	700, 701, 702, 703, 705, 704, 1945, 707, 708, 706,
	709, 710, 711, 712, 1946, 713, 853, 714, 693, 694,
	715, 716, 717, 900, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 854, 0, 727, 1947, 728, 729, 730,
	731, 732, 733, 735, 695, 736, 737, 738, 743, 744,
	745, 855, 739, 740, 741, 742, 747, 856, 748, 749,
	750, 751, 1948, 752, 753, 0, 746, 734, 1949, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 1950,
	764, 857, 858, 859, 860, 1951, 776, 1952, 765, 767,
	768, 769, 770, 861, 771, 862, 1953, 772, 773, 774,
	775, 766, 777, 778, 1954, 1955, 779, 780, 781, 782,
	784, 786, 787, 788, 783, 785, 789, 1956, 790, 1957,
	0, 791, 792, 793, 863, 864, 865, 1958, 796, 797,
	794, 795, 798, 799, 802, 800, 801, 866, 805, 517,
	806, 807, 808, 803, 804, 1959, 1960, 1961, 1962, 809,
	810, 867, 811, 812, 813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 0, 0, 0, 3937, 0, 0, 0,
	0, 0, 0, 0, 0, 3938, 347, 348, 350, 349,
	351, 352, 353, 354, 1884, 355, 356, 1885, 1886, 1887,
	0, 1888, 814, 1889, 1890, 1891, 358, 0, 357, 1892,
	359, 360, 361, 883, 362, 363, 364, 365, 366, 367,
	368, 369, 815, 816, 0, 370, 817, 371, 818, 1893,
	819, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 1894, 1895, 0, 382, 820, 821, 822, 1896, 383,
	384, 385, 386, 823, 1897, 884, 1898, 387, 388, 389,
	390, 391, 392, 393, 394, 0, 1899, 396, 397, 398,
	395, 399, 400, 1900, 401, 0, 402, 403, 404, 405,
	406, 407, 408, 1901, 409, 410, 411, 885, 412, 413,
	414, 1902, 1903, 1905, 1904, 1906, 1907, 1908, 415, 416,
	417, 418, 419, 0, 420, 422, 423, 824, 424, 825,
	1909, 427, 429, 421, 425, 1910, 428, 426, 430, 431,
	1911, 432, 433, 434, 435, 1912, 1913, 436, 437, 438,
	1914, 439, 440, 442, 441, 1915, 443, 444, 445, 1916,
	446, 447, 826, 448, 449, 450, 452, 454, 451, 453,
	455, 456, 457, 458, 459, 827, 828, 460, 461, 1917,
	342, 1918, 0, 0, 0, 0, 462, 463, 464, 829,
	0, 0, 0, 465, 1919, 467, 471, 472, 468, 469,
	470, 473, 1920, 466, 474, 475, 1921, 886, 476, 477,
	478, 830, 831, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 1922, 488, 489, 832, 1923, 833, 490, 1924,
	491, 492, 493, 494, 495, 496, 497, 834, 835, 836,
	600, 888, 498, 499, 500, 501, 1925, 502, 503, 504,
	505, 506, 507, 508, 0, 0, 0, 509, 510, 511,
	512, 1926, 344, 343, 345, 887, 837, 513, 601, 514,
	838, 839, 1927, 840, 1928, 515, 516, 519, 889, 841,
	890, 518, 520, 521, 891, 522, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 1929, 530, 532, 531,
	1930, 534, 842, 533, 892, 535, 536, 893, 1931, 537,
	538, 539, 540, 541, 542, 545, 1932, 1933, 543, 544,
	546, 547, 0, 548, 549, 551, 554, 550, 552, 553,
	555, 556, 569, 570, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 572, 0, 571, 894,
	573, 574, 575, 576, 577, 585, 587, 588, 583, 584,
	586, 589, 590, 591, 593, 594, 580, 581, 582, 895,
	592, 578, 1934, 579, 346, 896, 595, 596, 597, 598,
	1935, 843, 599, 844, 602, 603, 1936, 0, 604, 0,
	605, 1937, 1938, 607, 608, 609, 1939, 1940, 610, 611,
	845, 897, 612, 898, 846, 613, 614, 606, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 1941,
	626, 627, 847, 628, 629, 630, 848, 631, 632, 633,
	849, 634, 850, 635, 636, 1942, 637, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	851, 650, 651, 653, 652, 654, 655, 1943, 656, 0,
	657, 658, 659, 0, 0, 0, 0, 0, 660, 661,
	663, 0, 664, 665, 666, 667, 668, 662, 669, 670,
	671, 672, 673, 674, 675, 1944, 677, 678, 676, 679,
	680, 899, 681, 682, 683, 684, 685, 852, 686, 0,
	687, 688, 696, 697, 698, 689, 690, 692, 699, 691,
	700, 701, 702, 703, 705, 704, 1945, 707, 708, 706,
	709, 710, 711, 712, 1946, 713, 853, 714, 693, 694,
	715, 716, 717, 900, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 854, 0, 727, 1947, 728, 729, 730,
	731, 732, 733, 735, 695, 736, 737, 738, 743, 744,
	745, 855, 739, 740, 741, 742, 747, 856, 748, 749,
	750, 751, 1948, 752, 753, 0, 746, 734, 1949, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 1950,
	764, 857, 858, 859, 860, 1951, 776, 1952, 765, 767,
	768, 769, 770, 861, 771, 862, 1953, 772, 773, 774,
	775, 766, 777, 778, 1954, 1955, 779, 780, 781, 782,
	784, 786, 787, 788, 783, 785, 789, 1956, 790, 1957,
	0, 791, 792, 793, 863, 864, 865, 1958, 796, 797,
	794, 795, 798, 799, 802, 800, 801, 866, 805, 517,
	806, 807, 808, 803, 804, 1959, 1960, 1961, 1962, 809,
	810, 867, 811, 812, 813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3341, 0, 0, 0,
	5272, 0, 0, 2198, 2199, 0, 2232, 2233, 2234, 2243,
	2244, 2245, 5274, 3343, 3344, 3345, 3346, 3347, 3348, 3349,
	3350, 3351, 3352, 3353, 3354, 3355, 3330, 2229, 3357, 3356,
	0, 3338, 3358, 3361, 2230, 3359, 3360, 3329, 3362, 3363,
	3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3336,
	3373, 0, 3374, 3375, 3379, 3376, 3377, 3378, 3380, 3381,
	3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391,
	2255, 3392, 0, 0, 3393, 3394, 3395, 3396, 3397, 3398,
	3399, 2200, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407,
	3408, 3409, 2220, 3410, 3411, 3412, 3413, 3414, 3415, 3416,
	3417, 3418, 2217, 3419, 3420, 3421, 3422, 3423, 3424, 3425,
	0, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434,
	3436, 3435, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444,
	0, 0, 3447, 3448, 3449, 3446, 3450, 3452, 3453, 3456,
	3445, 3451, 3454, 3455, 3457, 3458, 3459, 3460, 3461, 3462,
	3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472,
	3473, 3474, 3475, 3476, 3477, 3478, 0, 3479, 3480, 3483,
	3481, 3482, 3484, 3486, 3488, 3485, 3487, 3489, 3490, 3491,
	3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 0, 2223,
	2224, 2225, 2226, 3500, 0, 3501, 3502, 0, 0, 2206,
	3503, 0, 3504, 3508, 3509, 3505, 3506, 3507, 3510, 3511,
	3512, 3513, 3514, 0, 3515, 3516, 3517, 3518, 3519, 3520,
	3525, 3526, 3527, 3521, 3522, 3523, 3524, 3528, 3529, 0,
	3530, 3531, 3532, 0, 3533, 3534, 0, 3535, 3536, 3537,
	3538, 3539, 0, 3540, 3541, 3542, 3543, 3544, 3333, 3545,
	3546, 3547, 3548, 3337, 3549, 3552, 3550, 3551, 3553, 3554,
	3555, 0, 2228, 2231, 3556, 3557, 3561, 3563, 3562, 3560,
	3559, 3558, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 0,
	3571, 0, 3572, 3573, 3575, 3335, 3576, 2247, 3577, 3578,
	3579, 3580, 3581, 0, 2215, 2216, 3582, 3583, 3584, 3585,
	3586, 3587, 3588, 3589, 3590, 3592, 3591, 3593, 3595, 3596,
	3594, 3597, 3598, 3599, 3332, 0, 3600, 3601, 3602, 3603,
	3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 2221,
	3613, 3614, 3616, 3618, 3615, 3617, 0, 3619, 3620, 0,
	3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630,
	3631, 3632, 3633, 3635, 0, 3634, 3636, 3637, 3638, 3639,
	3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649,
	3650, 3654, 3655, 3664, 3665, 3663, 3651, 3652, 3653, 3656,
	3657, 3658, 2248, 3659, 3660, 3661, 3662, 3666, 3667, 3668,
	3669, 3670, 3671, 0, 0, 3672, 0, 3673, 0, 3674,
	3675, 3676, 3677, 3331, 0, 3678, 3679, 3680, 3681, 0,
	0, 3682, 3683, 3684, 3340, 3685, 3686, 3687, 3688, 3689,
	3690, 3691, 3692, 3693, 3694, 3695, 3696, 3697, 3698, 3699,
	3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 0,
	3709, 3710, 3711, 3712, 3713, 3714, 0, 3715, 3716, 3717,
	3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727,
	3729, 3728, 3730, 3731, 3732, 3733, 0, 3734, 3735, 3736,
	0, 0, 0, 0, 0, 3737, 3738, 3740, 2227, 3741,
	3742, 3743, 3744, 3745, 3739, 3746, 3747, 3748, 3749, 3750,
	3751, 3752, 0, 3754, 3755, 3753, 3756, 3757, 3758, 3759,
	3760, 3761, 3762, 3763, 3764, 3765, 2222, 3766, 3767, 3768,
	3769, 3770, 3771, 3772, 3776, 3773, 3775, 3774, 3777, 3778,
	0, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787,
	3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797,
	3334, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3806, 3805,
	3807, 0, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815,
	3817, 3818, 3819, 3820, 3821, 3826, 3827, 3828, 3829, 3822,
	3823, 3824, 3825, 3832, 3831, 3833, 3834, 3836, 3835, 3837,
	3838, 3839, 2254, 3830, 3816, 3840, 3841, 3842, 3843, 3844,
	3845, 3846, 3848, 3847, 3849, 3850, 3851, 3853, 3854, 3857,
	3855, 3856, 0, 3852, 3860, 3858, 3861, 3862, 3863, 3864,
	3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3859, 3873,
	3874, 0, 3875, 3876, 3877, 3878, 3879, 3881, 3883, 3884,
	3885, 3880, 3882, 3886, 3887, 3888, 3889, 0, 3890, 3891,
	3892, 3893, 3894, 3895, 3897, 3898, 3899, 3896, 0, 3900,
	3901, 3904, 3902, 3903, 3905, 3908, 3574, 3909, 3910, 3911,
	3906, 3907, 3912, 0, 0, 0, 0, 0, 3913, 3914,
	0, 3915, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 2212, 2213, 2219, 2242, 2218,
	2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207,
	2208, 347, 348, 350, 349, 351, 352, 353, 354, 1884,
	355, 356, 1885, 1886, 1887, 0, 1888, 814, 1889, 1890,
	1891, 358, 0, 357, 1892, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 1893, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1894, 1895, 0, 382,
	820, 821, 822, 1896, 383, 384, 385, 386, 823, 1897,
	884, 1898, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 1899, 396, 397, 398, 395, 399, 400, 1900, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 1901, 409,
	410, 411, 885, 412, 413, 414, 1902, 1903, 1905, 1904,
	1906, 1907, 1908, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 1909, 427, 429, 421, 425,
	1910, 428, 426, 430, 431, 1911, 432, 433, 434, 435,
	1912, 1913, 436, 437, 438, 1914, 439, 440, 442, 441,
	1915, 443, 444, 445, 1916, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 1917, 342, 1918, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 1919,
	467, 471, 472, 468, 469, 470, 473, 1920, 466, 474,
	475, 1921, 886, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 1922, 488, 489,
	832, 1923, 833, 490, 1924, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 888, 498, 499, 500,
	501, 1925, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 1926, 344, 343, 345,
	887, 837, 513, 601, 514, 838, 839, 1927, 840, 1928,
	515, 516, 519, 889, 841, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 1929, 530, 532, 531, 1930, 534, 842, 533, 892,
	535, 536, 893, 1931, 537, 538, 539, 540, 541, 542,
	545, 1932, 1933, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1934, 579, 346,
	896, 595, 596, 597, 598, 1935, 843, 599, 844, 602,
	603, 1936, 0, 604, 0, 605, 1937, 1938, 607, 608,
	609, 1939, 1940, 610, 611, 845, 897, 612, 898, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 1941, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	1942, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 1943, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	1944, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 1945, 707, 708, 706, 709, 710, 711, 712, 1946,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 1947, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 1948, 752, 753,
	0, 746, 734, 1949, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 1950, 764, 857, 858, 859, 860,
	1951, 776, 1952, 765, 767, 768, 769, 770, 861, 771,
	862, 1953, 772, 773, 774, 775, 766, 777, 778, 1954,
	1955, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1956, 790, 1957, 0, 791, 792, 793, 863,
	864, 865, 1958, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	1959, 1960, 1961, 1962, 809, 810, 867, 811, 812, 813,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 1884, 355, 356, 1885, 1886,
	1887, 5807, 1888, 814, 1889, 1890, 1891, 358, 0, 357,
	1892, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	1893, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1894, 1895, 0, 382, 820, 821, 822, 1896,
	383, 384, 385, 386, 823, 1897, 884, 1898, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 1899, 396, 397,
	398, 395, 399, 400, 1900, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 1901, 409, 410, 411, 885, 412,
	413, 414, 1902, 1903, 1905, 1904, 1906, 1907, 1908, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 1909, 427, 429, 421, 425, 1910, 428, 426, 430,
	431, 1911, 432, 433, 434, 435, 1912, 1913, 436, 437,
	438, 1914, 439, 440, 442, 441, 1915, 443, 444, 445,
	1916, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	1917, 342, 1918, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 1919, 467, 471, 472, 468,
	469, 470, 473, 1920, 466, 474, 475, 1921, 886, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 1922, 488, 489, 832, 1923, 833, 490,
	1924, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 888, 498, 499, 500, 501, 1925, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 1926, 344, 343, 345, 887, 837, 513, 601,
	514, 838, 839, 1927, 840, 1928, 515, 516, 519, 889,
	841, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 1929, 530, 532,
	531, 1930, 534, 842, 533, 892, 535, 536, 893, 1931,
	537, 538, 539, 540, 541, 542, 545, 1932, 1933, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 1934, 579, 346, 896, 595, 596, 597,
	598, 1935, 843, 599, 844, 602, 603, 1936, 0, 604,
	0, 605, 1937, 1938, 607, 608, 609, 1939, 1940, 610,
	611, 845, 897, 612, 898, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	1941, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 1942, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 1943, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 1944, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 1945, 707, 708,
	706, 709, 710, 711, 712, 1946, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 1947, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 1948, 752, 753, 0, 746, 734, 1949,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	1950, 764, 857, 858, 859, 860, 1951, 776, 1952, 765,
	767, 768, 769, 770, 861, 771, 862, 1953, 772, 773,
	774, 775, 766, 777, 778, 1954, 1955, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1956, 790,
	1957, 0, 791, 792, 793, 863, 864, 865, 1958, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 1959, 1960, 1961, 1962,
	809, 810, 867, 811, 812, 813, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 1884, 355, 356, 1885, 1886, 1887, 5805, 1888, 814,
	1889, 1890, 1891, 358, 0, 357, 1892, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 1893, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1894, 1895,
	0, 382, 820, 821, 822, 1896, 383, 384, 385, 386,
	823, 1897, 884, 1898, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 1899, 396, 397, 398, 395, 399, 400,
	1900, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	1901, 409, 410, 411, 885, 412, 413, 414, 1902, 1903,
	1905, 1904, 1906, 1907, 1908, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 1909, 427, 429,
	421, 425, 1910, 428, 426, 430, 431, 1911, 432, 433,
	434, 435, 1912, 1913, 436, 437, 438, 1914, 439, 440,
	442, 441, 1915, 443, 444, 445, 1916, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 1917, 342, 1918, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 1919, 467, 471, 472, 468, 469, 470, 473, 1920,
	466, 474, 475, 1921, 886, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 1922,
	488, 489, 832, 1923, 833, 490, 1924, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 888, 498,
	499, 500, 501, 1925, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 1926, 344,
	343, 345, 887, 837, 513, 601, 514, 838, 839, 1927,
	840, 1928, 515, 516, 519, 889, 841, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 1929, 530, 532, 531, 1930, 534, 842,
	533, 892, 535, 536, 893, 1931, 537, 538, 539, 540,
	541, 542, 545, 1932, 1933, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1934,
	579, 346, 896, 595, 596, 597, 598, 1935, 843, 599,
	844, 602, 603, 1936, 0, 604, 0, 605, 1937, 1938,
	607, 608, 609, 1939, 1940, 610, 611, 845, 897, 612,
	898, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 1941, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 1942, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 1943, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 1944, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 1945, 707, 708, 706, 709, 710, 711,
	712, 1946, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 1947, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 1948,
	752, 753, 0, 746, 734, 1949, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 1950, 764, 857, 858,
	859, 860, 1951, 776, 1952, 765, 767, 768, 769, 770,
	861, 771, 862, 1953, 772, 773, 774, 775, 766, 777,
	778, 1954, 1955, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1956, 790, 1957, 0, 791, 792,
	793, 863, 864, 865, 1958, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 1959, 1960, 1961, 1962, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 6147, 347, 348,
	350, 349, 351, 352, 353, 354, 1884, 355, 356, 1885,
	1886, 1887, 0, 1888, 814, 1889, 1890, 1891, 358, 0,
	357, 1892, 359, 360, 361, 883, 362, 363, 364, 365,
	366, 367, 368, 369, 815, 816, 0, 370, 817, 371,
	818, 1893, 819, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 1894, 1895, 0, 382, 820, 821, 822,
	1896, 383, 384, 385, 386, 823, 1897, 884, 1898, 387,
	388, 389, 390, 391, 392, 393, 394, 0, 1899, 396,
	397, 398, 395, 399, 400, 1900, 401, 0, 402, 403,
	404, 405, 406, 407, 408, 1901, 409, 410, 411, 885,
	412, 413, 414, 1902, 1903, 1905, 1904, 1906, 1907, 1908,
	415, 416, 417, 418, 419, 0, 420, 422, 423, 824,
	424, 825, 1909, 427, 429, 421, 425, 1910, 428, 426,
	430, 431, 1911, 432, 433, 434, 435, 1912, 1913, 436,
	437, 438, 1914, 439, 440, 442, 441, 1915, 443, 444,
	445, 1916, 446, 447, 826, 448, 449, 450, 452, 454,
	451, 453, 455, 456, 457, 458, 459, 827, 828, 460,
	461, 1917, 342, 1918, 0, 0, 0, 0, 462, 463,
	464, 829, 0, 0, 0, 465, 1919, 467, 471, 472,
	468, 469, 470, 473, 1920, 466, 474, 475, 1921, 886,
	476, 477, 478, 830, 831, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 1922, 488, 489, 832, 1923, 833,
	490, 1924, 491, 492, 493, 494, 495, 496, 497, 834,
	835, 836, 600, 888, 498, 499, 500, 501, 1925, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 509,
	510, 511, 512, 1926, 344, 343, 345, 887, 837, 513,
	601, 514, 838, 839, 1927, 840, 1928, 515, 516, 519,
	889, 841, 890, 518, 520, 521, 891, 522, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 1929, 530,
	532, 531, 1930, 534, 842, 533, 892, 535, 536, 893,
	1931, 537, 538, 539, 540, 541, 542, 545, 1932, 1933,
	543, 544, 546, 547, 0, 548, 549, 551, 554, 550,
	552, 553, 555, 556, 569, 570, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 572, 0,
	571, 894, 573, 574, 575, 576, 577, 585, 587, 588,
	583, 584, 586, 589, 590, 591, 593, 594, 580, 581,
	582, 895, 592, 578, 1934, 579, 346, 896, 595, 596,
	597, 598, 1935, 843, 599, 844, 602, 603, 1936, 0,
	604, 0, 605, 1937, 1938, 607, 608, 609, 1939, 1940,
	610, 611, 845, 897, 612, 898, 846, 613, 614, 606,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 1941, 626, 627, 847, 628, 629, 630, 848, 631,
	632, 633, 849, 634, 850, 635, 636, 1942, 637, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 851, 650, 651, 653, 652, 654, 655, 1943,
	656, 0, 657, 658, 659, 0, 0, 0, 0, 0,
	660, 661, 663, 0, 664, 665, 666, 667, 668, 662,
	669, 670, 671, 672, 673, 674, 675, 1944, 677, 678,
	676, 679, 680, 899, 681, 682, 683, 684, 685, 852,
	686, 0, 687, 688, 696, 697, 698, 689, 690, 692,
	699, 691, 700, 701, 702, 703, 705, 704, 1945, 707,
	708, 706, 709, 710, 711, 712, 1946, 713, 853, 714,
	693, 694, 715, 716, 717, 900, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 854, 0, 727, 1947, 728,
	729, 730, 731, 732, 733, 735, 695, 736, 737, 738,
	743, 744, 745, 855, 739, 740, 741, 742, 747, 856,
	748, 749, 750, 751, 1948, 752, 753, 0, 746, 734,
	1949, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 1950, 764, 857, 858, 859, 860, 1951, 776, 1952,
	765, 767, 768, 769, 770, 861, 771, 862, 1953, 772,
	773, 774, 775, 766, 777, 778, 1954, 1955, 779, 780,
	781, 782, 784, 786, 787, 788, 783, 785, 789, 1956,
	790, 1957, 0, 791, 792, 793, 863, 864, 865, 1958,
	796, 797, 794, 795, 798, 799, 802, 800, 801, 866,
	805, 517, 806, 807, 808, 803, 804, 1959, 1960, 1961,
	1962, 809, 810, 867, 811, 812, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5971, 347, 348, 350, 349, 351, 352, 353,
	354, 1884, 355, 356, 1885, 1886, 1887, 0, 1888, 814,
	1889, 1890, 1891, 358, 0, 357, 1892, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 1893, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1894, 1895,
	0, 382, 820, 821, 822, 1896, 383, 384, 385, 386,
	823, 1897, 884, 1898, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 1899, 396, 397, 398, 395, 399, 400,
	1900, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	1901, 409, 410, 411, 885, 412, 413, 414, 1902, 1903,
	1905, 1904, 1906, 1907, 1908, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 1909, 427, 429,
	421, 425, 1910, 428, 426, 430, 431, 1911, 432, 433,
	434, 435, 1912, 1913, 436, 437, 438, 1914, 439, 440,
	442, 441, 1915, 443, 444, 445, 1916, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 1917, 342, 1918, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 1919, 467, 471, 472, 468, 469, 470, 473, 1920,
	466, 474, 475, 1921, 886, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 1922,
	488, 489, 832, 1923, 833, 490, 1924, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 888, 498,
	499, 500, 501, 1925, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 1926, 344,
	343, 345, 887, 837, 513, 601, 514, 838, 839, 1927,
	840, 1928, 515, 516, 519, 889, 841, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 1929, 530, 532, 531, 1930, 534, 842,
	533, 892, 535, 536, 893, 1931, 537, 538, 539, 540,
	541, 542, 545, 1932, 1933, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1934,
	579, 346, 896, 595, 596, 597, 598, 1935, 843, 599,
	844, 602, 603, 1936, 0, 604, 0, 605, 1937, 1938,
	607, 608, 609, 1939, 1940, 610, 611, 845, 897, 612,
	898, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 1941, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 1942, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 1943, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 1944, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 1945, 707, 708, 706, 709, 710, 711,
	712, 1946, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 1947, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 1948,
	752, 753, 0, 746, 734, 1949, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 1950, 764, 857, 858,
	859, 860, 1951, 776, 1952, 765, 767, 768, 769, 770,
	861, 771, 862, 1953, 772, 773, 774, 775, 766, 777,
	778, 1954, 1955, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1956, 790, 1957, 0, 791, 792,
	793, 863, 864, 865, 1958, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 1959, 1960, 1961, 1962, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5463, 347, 348,
	350, 349, 351, 352, 353, 354, 1884, 355, 356, 1885,
	1886, 1887, 0, 1888, 814, 1889, 1890, 1891, 358, 0,
	357, 1892, 359, 360, 361, 883, 362, 363, 364, 365,
	366, 367, 368, 369, 815, 816, 0, 370, 817, 371,
	818, 1893, 819, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 1894, 1895, 0, 382, 820, 821, 822,
	1896, 383, 384, 385, 386, 823, 1897, 884, 1898, 387,
	388, 389, 390, 391, 392, 393, 394, 0, 1899, 396,
	397, 398, 395, 399, 400, 1900, 401, 0, 402, 403,
	404, 405, 406, 407, 408, 1901, 409, 410, 411, 885,
	412, 413, 414, 1902, 1903, 1905, 1904, 1906, 1907, 1908,
	415, 416, 417, 418, 419, 0, 420, 422, 423, 824,
	424, 825, 1909, 427, 429, 421, 425, 1910, 428, 426,
	430, 431, 1911, 432, 433, 434, 435, 1912, 1913, 436,
	437, 438, 1914, 439, 440, 442, 441, 1915, 443, 444,
	445, 1916, 446, 447, 826, 448, 449, 450, 452, 454,
	451, 453, 455, 456, 457, 458, 459, 827, 828, 460,
	461, 1917, 342, 1918, 0, 0, 0, 0, 462, 463,
	464, 829, 0, 0, 0, 465, 1919, 467, 471, 472,
	468, 469, 470, 473, 1920, 466, 474, 475, 1921, 886,
	476, 477, 478, 830, 831, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 1922, 488, 489, 832, 1923, 833,
	490, 1924, 491, 492, 493, 494, 495, 496, 497, 834,
	835, 836, 600, 888, 498, 499, 500, 501, 1925, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 509,
	510, 511, 512, 1926, 344, 343, 345, 887, 837, 513,
	601, 514, 838, 839, 1927, 840, 1928, 515, 516, 519,
	889, 841, 890, 518, 520, 521, 891, 522, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 1929, 530,
	532, 531, 1930, 534, 842, 533, 892, 535, 536, 893,
	1931, 537, 538, 539, 540, 541, 542, 545, 1932, 1933,
	543, 544, 546, 547, 0, 548, 549, 551, 554, 550,
	552, 553, 555, 556, 569, 570, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 572, 0,
	571, 894, 573, 574, 575, 576, 577, 585, 587, 588,
	583, 584, 586, 589, 590, 591, 593, 594, 580, 581,
	582, 895, 592, 578, 1934, 579, 346, 896, 595, 596,
	597, 598, 1935, 843, 599, 844, 602, 603, 1936, 0,
	604, 0, 605, 1937, 1938, 607, 608, 609, 1939, 1940,
	610, 611, 845, 897, 612, 898, 846, 613, 614, 606,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 1941, 626, 627, 847, 628, 629, 630, 848, 631,
	632, 633, 849, 634, 850, 635, 636, 1942, 637, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 851, 650, 651, 653, 652, 654, 655, 1943,
	656, 0, 657, 658, 659, 0, 0, 0, 0, 0,
	660, 661, 663, 0, 664, 665, 666, 667, 668, 662,
	669, 670, 671, 672, 673, 674, 675, 1944, 677, 678,
	676, 679, 680, 899, 681, 682, 683, 684, 685, 852,
	686, 0, 687, 688, 696, 697, 698, 689, 690, 692,
	699, 691, 700, 701, 702, 703, 705, 704, 1945, 707,
	708, 706, 709, 710, 711, 712, 1946, 713, 853, 714,
	693, 694, 715, 716, 717, 900, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 854, 0, 727, 1947, 728,
	729, 730, 731, 732, 733, 735, 695, 736, 737, 738,
	743, 744, 745, 855, 739, 740, 741, 742, 747, 856,
	748, 749, 750, 751, 1948, 752, 753, 0, 746, 734,
	1949, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 1950, 764, 857, 858, 859, 860, 1951, 776, 1952,
	765, 767, 768, 769, 770, 861, 771, 862, 1953, 772,
	773, 774, 775, 766, 777, 778, 1954, 1955, 779, 780,
	781, 782, 784, 786, 787, 788, 783, 785, 789, 1956,
	790, 1957, 0, 791, 792, 793, 863, 864, 865, 1958,
	796, 797, 794, 795, 798, 799, 802, 800, 801, 866,
	805, 517, 806, 807, 808, 803, 804, 1959, 1960, 1961,
	1962, 809, 810, 867, 811, 812, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 5290, 347, 348, 350, 349, 351, 352, 353,
	354, 1884, 355, 356, 1885, 1886, 1887, 0, 1888, 814,
	1889, 1890, 1891, 358, 0, 357, 1892, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 1893, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1894, 1895,
	0, 382, 820, 821, 822, 1896, 383, 384, 385, 386,
	823, 1897, 884, 1898, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 1899, 396, 397, 398, 395, 399, 400,
	1900, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	1901, 409, 410, 411, 885, 412, 413, 414, 1902, 1903,
	1905, 1904, 1906, 1907, 1908, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 1909, 427, 429,
	421, 425, 1910, 428, 426, 430, 431, 1911, 432, 433,
	434, 435, 1912, 1913, 436, 437, 438, 1914, 439, 440,
	442, 441, 1915, 443, 444, 445, 1916, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 1917, 342, 1918, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 1919, 467, 471, 472, 468, 469, 470, 473, 1920,
	466, 474, 475, 1921, 886, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 1922,
	488, 489, 832, 1923, 833, 490, 1924, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 888, 498,
	499, 500, 501, 1925, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 1926, 344,
	343, 345, 887, 837, 513, 601, 514, 838, 839, 1927,
	840, 1928, 515, 516, 519, 889, 841, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 1929, 530, 532, 531, 1930, 534, 842,
	533, 892, 535, 536, 893, 1931, 537, 538, 539, 540,
	541, 542, 545, 1932, 1933, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1934,
	579, 346, 896, 595, 596, 597, 598, 1935, 843, 599,
	844, 602, 603, 1936, 0, 604, 0, 605, 1937, 1938,
	607, 608, 609, 1939, 1940, 610, 611, 845, 897, 612,
	898, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 1941, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 1942, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 1943, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 1944, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 1945, 707, 708, 706, 709, 710, 711,
	712, 1946, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 1947, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 1948,
	752, 753, 0, 746, 734, 1949, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 1950, 764, 857, 858,
	859, 860, 1951, 776, 1952, 765, 767, 768, 769, 770,
	861, 771, 862, 1953, 772, 773, 774, 775, 766, 777,
	778, 1954, 1955, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1956, 790, 1957, 0, 791, 792,
	793, 863, 864, 865, 1958, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 1959, 1960, 1961, 1962, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 5101, 347, 348,
	350, 349, 351, 352, 353, 354, 1884, 355, 356, 1885,
	1886, 1887, 0, 1888, 814, 1889, 1890, 1891, 358, 0,
	357, 1892, 359, 360, 361, 883, 362, 363, 364, 365,
	366, 367, 368, 369, 815, 816, 0, 370, 817, 371,
	818, 1893, 819, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 1894, 1895, 0, 382, 820, 821, 822,
	1896, 383, 384, 385, 386, 823, 1897, 884, 1898, 387,
	388, 389, 390, 391, 392, 393, 394, 0, 1899, 396,
	397, 398, 395, 399, 400, 1900, 401, 0, 402, 403,
	404, 405, 406, 407, 408, 1901, 409, 410, 411, 885,
	412, 413, 414, 1902, 1903, 1905, 1904, 1906, 1907, 1908,
	415, 416, 417, 418, 419, 0, 420, 422, 423, 824,
	424, 825, 1909, 427, 429, 421, 425, 1910, 428, 426,
	430, 431, 1911, 432, 433, 434, 435, 1912, 1913, 436,
	437, 438, 1914, 439, 440, 442, 441, 1915, 443, 444,
	445, 1916, 446, 447, 826, 448, 449, 450, 452, 454,
	451, 453, 455, 456, 457, 458, 459, 827, 828, 460,
	461, 1917, 342, 1918, 0, 0, 0, 0, 462, 463,
	464, 829, 0, 0, 0, 465, 1919, 467, 471, 472,
	468, 469, 470, 473, 1920, 466, 474, 475, 1921, 886,
	476, 477, 478, 830, 831, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 1922, 488, 489, 832, 1923, 833,
	490, 1924, 491, 492, 493, 494, 495, 496, 497, 834,
	835, 836, 600, 888, 498, 499, 500, 501, 1925, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 509,
	510, 511, 512, 1926, 344, 343, 345, 887, 837, 513,
	601, 514, 838, 839, 1927, 840, 1928, 515, 516, 519,
	889, 841, 890, 518, 520, 521, 891, 522, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 1929, 530,
	532, 531, 1930, 534, 842, 533, 892, 535, 536, 893,
	1931, 537, 538, 539, 540, 541, 542, 545, 1932, 1933,
	543, 544, 546, 547, 0, 548, 549, 551, 554, 550,
	552, 553, 555, 556, 569, 570, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 572, 0,
	571, 894, 573, 574, 575, 576, 577, 585, 587, 588,
	583, 584, 586, 589, 590, 591, 593, 594, 580, 581,
	582, 895, 592, 578, 1934, 579, 346, 896, 595, 596,
	597, 598, 1935, 843, 599, 844, 602, 603, 1936, 0,
	604, 0, 605, 1937, 1938, 607, 608, 609, 1939, 1940,
	610, 611, 845, 897, 612, 898, 846, 613, 614, 606,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 1941, 626, 627, 847, 628, 629, 630, 848, 631,
	632, 633, 849, 634, 850, 635, 636, 1942, 637, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 851, 650, 651, 653, 652, 654, 655, 1943,
	656, 0, 657, 658, 659, 0, 0, 0, 0, 0,
	660, 661, 663, 0, 664, 665, 666, 667, 668, 662,
	669, 670, 671, 672, 673, 674, 675, 1944, 677, 678,
	676, 679, 680, 899, 681, 682, 683, 684, 685, 852,
	686, 0, 687, 688, 696, 697, 698, 689, 690, 692,
	699, 691, 700, 701, 702, 703, 705, 704, 1945, 707,
	708, 706, 709, 710, 711, 712, 1946, 713, 853, 714,
	693, 694, 715, 716, 717, 900, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 854, 0, 727, 1947, 728,
	729, 730, 731, 732, 733, 735, 695, 736, 737, 738,
	743, 744, 745, 855, 739, 740, 741, 742, 747, 856,
	748, 749, 750, 751, 1948, 752, 753, 0, 746, 734,
	1949, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 1950, 764, 857, 858, 859, 860, 1951, 776, 1952,
	765, 767, 768, 769, 770, 861, 771, 862, 1953, 772,
	773, 774, 775, 766, 777, 778, 1954, 1955, 779, 780,
	781, 782, 784, 786, 787, 788, 783, 785, 789, 1956,
	790, 1957, 0, 791, 792, 793, 863, 864, 865, 1958,
	796, 797, 794, 795, 798, 799, 802, 800, 801, 866,
	805, 517, 806, 807, 808, 803, 804, 1959, 1960, 1961,
	1962, 809, 810, 867, 811, 812, 813, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3200, 347, 348, 350, 349, 351, 352, 353,
	354, 1884, 355, 356, 1885, 1886, 1887, 0, 1888, 814,
	1889, 1890, 1891, 358, 0, 357, 1892, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 1893, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1894, 1895,
	0, 382, 820, 821, 822, 1896, 383, 384, 385, 386,
	823, 1897, 884, 1898, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 1899, 396, 397, 398, 395, 399, 400,
	1900, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	1901, 409, 410, 411, 885, 412, 413, 414, 1902, 1903,
	1905, 1904, 1906, 1907, 1908, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 1909, 427, 429,
	421, 425, 1910, 428, 426, 430, 431, 1911, 432, 433,
	434, 435, 1912, 1913, 436, 437, 438, 1914, 439, 440,
	442, 441, 1915, 443, 444, 445, 1916, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 1917, 342, 1918, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 1919, 467, 471, 472, 468, 469, 470, 473, 1920,
	466, 474, 475, 1921, 886, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 1922,
	488, 489, 832, 1923, 833, 490, 1924, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 888, 498,
	499, 500, 501, 1925, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 1926, 344,
	343, 345, 887, 837, 513, 601, 514, 838, 839, 1927,
	840, 1928, 515, 516, 519, 889, 841, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 1929, 530, 532, 531, 1930, 534, 842,
	533, 892, 535, 536, 893, 1931, 537, 538, 539, 540,
	541, 542, 545, 1932, 1933, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1934,
	579, 346, 896, 595, 596, 597, 598, 1935, 843, 599,
	844, 602, 603, 1936, 0, 604, 0, 605, 1937, 1938,
	607, 608, 609, 1939, 1940, 610, 611, 845, 897, 612,
	898, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 1941, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 1942, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 1943, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 1944, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 1945, 707, 708, 706, 709, 710, 711,
	712, 1946, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 1947, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 1948,
	752, 753, 0, 746, 734, 1949, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 1950, 764, 857, 858,
	859, 860, 1951, 776, 1952, 765, 767, 768, 769, 770,
	861, 771, 862, 1953, 772, 773, 774, 775, 766, 777,
	778, 1954, 1955, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1956, 790, 1957, 0, 791, 792,
	793, 863, 864, 865, 1958, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 1959, 1960, 1961, 1962, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 1383,
	0, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2914, 347, 348,
	350, 349, 351, 352, 353, 354, 0, 355, 356, 0,
	0, 0, 0, 0, 1463, 1430, 0, 0, 358, 0,
	357, 0, 359, 360, 361, 883, 362, 363, 364, 365,
	366, 367, 368, 369, 815, 1477, 0, 370, 1485, 371,
	1484, 0, 1495, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822,
	0, 383, 384, 385, 386, 1469, 0, 1450, 0, 387,
	388, 389, 390, 391, 392, 393, 394, 0, 0, 396,
	397, 398, 395, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 411, 885,
	412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458,
	415, 416, 417, 418, 419, 1488, 420, 422, 423, 1482,
	424, 1481, 1401, 427, 429, 421, 425, 0, 428, 426,
	430, 431, 0, 432, 433, 434, 435, 0, 0, 436,
	1480, 438, 0, 439, 440, 442, 441, 0, 443, 444,
	445, 0, 446, 447, 1408, 448, 449, 450, 452, 454,
	451, 453, 455, 456, 457, 458, 459, 1496, 1497, 460,
	461, 1421, 342, 0, 0, 0, 0, 0, 462, 463,
	464, 1479, 0, 0, 0, 465, 0, 467, 471, 472,
	468, 469, 470, 473, 0, 466, 474, 475, 0, 886,
	476, 477, 478, 1493, 1494, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 0, 488, 489, 1503, 0, 1431,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1464,
	1465, 1468, 600, 888, 498, 499, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 509,
	510, 511, 512, 0, 876, 343, 345, 887, 837, 513,
	601, 514, 1474, 1475, 0, 1435, 0, 515, 516, 519,
	889, 1466, 890, 518, 520, 521, 891, 522, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 0, 530,
	532, 531, 0, 534, 1504, 533, 892, 535, 536, 893,
	0, 537, 538, 539, 540, 541, 542, 545, 1457, 1456,
	543, 544, 546, 547, 0, 548, 549, 551, 554, 550,
	552, 553, 555, 556, 569, 570, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 572, 0,
	571, 894, 573, 574, 575, 576, 577, 585, 587, 588,
	583, 584, 586, 589, 590, 591, 593, 594, 580, 581,
	582, 895, 592, 578, 1398, 579, 346, 896, 595, 596,
	597, 598, 1422, 1467, 599, 1483, 602, 603, 0, 0,
	604, 0, 605, 0, 0, 607, 608, 609, 0, 0,
	610, 611, 845, 897, 612, 898, 1498, 613, 614, 1409,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 0, 626, 627, 847, 628, 629, 630, 848, 631,
	632, 633, 1499, 634, 850, 635, 636, 0, 637, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 1478, 650, 651, 653, 652, 654, 655, 0,
	656, 0, 657, 658, 659, 0, 0, 0, 0, 0,
	660, 661, 663, 0, 664, 665, 666, 667, 668, 662,
	669, 670, 671, 672, 673, 674, 675, 0, 677, 678,
	676, 679, 680, 899, 681, 682, 683, 684, 685, 1410,
	686, 0, 687, 688, 696, 697, 698, 689, 690, 692,
	699, 691, 700, 701, 702, 703, 705, 704, 297, 707,
	708, 706, 709, 710, 711, 712, 1460, 713, 853, 714,
	693, 694, 715, 716, 717, 900, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 1476, 0, 727, 0, 728,
	729, 730, 731, 732, 733, 735, 695, 736, 737, 738,
	743, 744, 745, 1507, 739, 740, 741, 742, 747, 1500,
	748, 749, 750, 751, 0, 752, 753, 1395, 746, 734,
	299, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 0, 764, 1489, 1490, 1491, 1492, 0, 776, 0,
	765, 767, 768, 769, 770, 1501, 771, 1502, 1420, 772,
	773, 774, 775, 766, 777, 778, 0, 1402, 779, 780,
	781, 782, 784, 786, 787, 788, 783, 785, 789, 1461,
	790, 0, 0, 791, 792, 793, 2125, 1486, 1506, 0,
	796, 797, 794, 795, 798, 799, 802, 800, 801, 866,
	805, 517, 806, 807, 808, 803, 804, 0, 0, 0,
	291, 809, 810, 867, 811, 812, 813, 1399, 0, 292,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1394, 0, 0, 0, 0, 0, 0,
	1392, 1393, 0, 0, 0, 0, 0, 0, 873, 0,
	2280, 2278, 0, 2402, 1424, 1471, 1414, 1415, 1416, 1412,
	1413, 1425, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 350, 349, 351, 352, 353, 354,
	2399, 355, 356, 0, 0, 0, 0, 0, 1463, 1430,
	0, 0, 358, 0, 357, 0, 359, 360, 361, 883,
	362, 363, 364, 365, 366, 367, 368, 369, 815, 1477,
	0, 370, 1485, 371, 1484, 0, 1495, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 1432, 1462, 1396,
	382, 1508, 1509, 822, 0, 383, 384, 385, 386, 1469,
	0, 1450, 0, 387, 388, 389, 390, 391, 392, 393,
	394, 0, 0, 396, 397, 398, 395, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 411, 885, 412, 413, 414, 1453, 1451, 1452,
	1459, 1455, 1454, 1458, 415, 416, 417, 418, 419, 1488,
	420, 422, 423, 1482, 424, 1481, 1401, 427, 429, 421,
	425, 0, 428, 426, 430, 431, 0, 432, 433, 434,
	435, 2400, 0, 436, 1480, 438, 0, 439, 440, 442,
	441, 0, 443, 444, 445, 0, 446, 447, 1408, 448,
	449, 450, 452, 454, 451, 453, 455, 456, 457, 458,
	459, 1496, 1497, 460, 461, 1421, 342, 0, 0, 0,
	0, 0, 462, 463, 464, 1479, 0, 0, 0, 465,
	0, 467, 471, 472, 468, 469, 470, 473, 0, 466,
	474, 475, 0, 886, 476, 477, 478, 1493, 1494, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 0, 488,
	489, 1503, 0, 1431, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1464, 1465, 1468, 600, 888, 498, 499,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 509, 510, 511, 512, 0, 876, 343,
	345, 887, 837, 513, 601, 514, 1474, 1475, 0, 1435,
	0, 515, 516, 519, 889, 1466, 890, 518, 520, 521,
	891, 522, 0, 0, 0, 523, 524, 525, 526, 527,
	528, 529, 0, 530, 532, 531, 0, 534, 1504, 533,
	892, 535, 536, 893, 0, 537, 538, 539, 540, 541,
	542, 545, 1457, 1456, 543, 544, 546, 547, 0, 548,
	549, 551, 554, 550, 552, 553, 555, 556, 569, 570,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 572, 0, 571, 894, 573, 574, 575, 576,
	577, 585, 587, 588, 583, 584, 586, 589, 590, 591,
	593, 594, 580, 581, 582, 895, 592, 578, 1398, 579,
	346, 896, 595, 596, 597, 598, 1422, 1467, 599, 1483,
	602, 603, 0, 0, 604, 0, 605, 0, 0, 607,
	608, 609, 0, 0, 610, 611, 845, 897, 612, 898,
	1498, 613, 614, 1409, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 0, 626, 627, 847, 628,
	629, 630, 848, 631, 632, 633, 1499, 634, 850, 635,
	636, 0, 637, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 1478, 650, 651, 653,
	652, 654, 655, 0, 656, 0, 657, 658, 659, 0,
	0, 0, 0, 0, 660, 661, 663, 0, 664, 665,
	666, 667, 668, 662, 669, 670, 671, 672, 673, 674,
	675, 0, 677, 678, 676, 679, 680, 899, 681, 682,
	683, 684, 685, 1410, 686, 0, 687, 688, 696, 697,
	698, 689, 690, 692, 699, 691, 700, 701, 702, 703,
	705, 704, 0, 707, 708, 706, 709, 710, 711, 712,
	1460, 713, 853, 714, 693, 694, 715, 716, 717, 900,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 1476,
	0, 727, 0, 728, 729, 730, 731, 732, 733, 735,
	695, 736, 737, 738, 743, 744, 745, 1507, 739, 740,
	741, 742, 747, 1500, 748, 749, 750, 751, 0, 752,
	753, 1395, 746, 734, 0, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 0, 764, 1489, 1490, 1491,
	1492, 0, 776, 0, 765, 767, 768, 769, 770, 1501,
	771, 1502, 1420, 772, 773, 774, 775, 766, 777, 778,
	0, 1402, 779, 780, 781, 782, 784, 786, 787, 788,
	783, 785, 789, 1461, 790, 0, 0, 791, 792, 793,
	863, 1486, 1506, 2398, 796, 797, 794, 795, 798, 799,
	802, 800, 801, 866, 805, 517, 806, 807, 808, 803,
	804, 0, 0, 0, 0, 809, 810, 867, 811, 812,
	813, 1399, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1394, 0, 0,
	1876, 0, 1879, 0, 1392, 1393, 2401, 0, 0, 0,
	0, 0, 873, 0, 1426, 2396, 0, 0, 1424, 347,
	348, 350, 349, 351, 352, 353, 354, 1884, 355, 356,
	1885, 1886, 1887, 0, 1888, 814, 1889, 1890, 1891, 358,
	0, 357, 1892, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 1893, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1894, 1895, 0, 382, 820, 821,
	822, 1896, 383, 384, 385, 386, 823, 1897, 884, 1898,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 1899,
	396, 397, 398, 395, 399, 400, 1900, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 1901, 409, 410, 411,
	885, 412, 413, 414, 1902, 1903, 1905, 1904, 1906, 1907,
	1908, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 1909, 427, 429, 421, 425, 1910, 428,
	426, 430, 431, 1911, 432, 433, 434, 435, 1912, 1913,
	436, 437, 438, 1914, 439, 440, 442, 441, 1915, 443,
	444, 445, 1916, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 1917, 342, 1918, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 1919, 467, 471,
	472, 468, 469, 470, 473, 1920, 466, 474, 475, 1921,
	886, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 1922, 488, 489, 832, 1923,
	833, 490, 1924, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 888, 498, 499, 500, 501, 1925,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 1926, 344, 343, 345, 887, 837,
	513, 601, 514, 838, 839, 1927, 840, 1928, 515, 516,
	519, 889, 841, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 1929,
	530, 532, 531, 1930, 534, 842, 533, 892, 535, 536,
	893, 1931, 537, 538, 539, 540, 541, 542, 545, 1932,
	1933, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1934, 579, 346, 896, 595,
	596, 597, 598, 1935, 843, 599, 844, 602, 603, 1936,
	0, 604, 0, 605, 1937, 1938, 607, 608, 609, 1939,
	1940, 610, 611, 845, 897, 612, 898, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 1941, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 1942, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	1943, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 1944, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 1945,
	707, 708, 706, 709, 710, 711, 712, 1946, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 1947,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 1948, 752, 753, 0, 746,
	734, 1949, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 1950, 764, 857, 858, 859, 860, 1951, 776,
	1952, 765, 767, 768, 769, 770, 861, 771, 862, 1953,
	772, 773, 774, 775, 766, 777, 778, 1954, 1955, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1956, 790, 1957, 0, 791, 792, 793, 863, 864, 865,
	1958, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 1959, 1960,
	1961, 1962, 809, 810, 867, 811, 812, 813, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 1884, 355, 356, 1885, 1886, 1887, 0,
	1888, 814, 1889, 1890, 1891, 358, 0, 357, 1892, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 1893, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1894, 1895, 0, 382, 820, 821, 822, 1896, 383, 384,
	385, 386, 823, 1897, 884, 1898, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 1899, 396, 397, 398, 395,
	399, 400, 1900, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 1901, 409, 410, 411, 885, 412, 413, 414,
	1902, 1903, 1905, 1904, 1906, 1907, 1908, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 1909,
	427, 429, 421, 425, 1910, 428, 426, 430, 431, 1911,
	432, 433, 434, 435, 1912, 1913, 436, 437, 438, 1914,
	439, 440, 442, 441, 1915, 443, 444, 445, 1916, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 1917, 342,
	1918, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 1919, 467, 471, 472, 468, 469, 470,
	473, 1920, 466, 474, 475, 1921, 886, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 1922, 488, 489, 832, 1923, 833, 490, 1924, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	888, 498, 499, 500, 501, 1925, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	1926, 344, 343, 345, 887, 837, 513, 601, 514, 838,
	839, 1927, 840, 1928, 515, 516, 519, 889, 841, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 1929, 530, 532, 531, 1930,
	534, 842, 533, 892, 535, 536, 893, 1931, 537, 538,
	539, 540, 541, 542, 545, 1932, 1933, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1934, 579, 346, 896, 595, 596, 597, 598, 1935,
	843, 599, 844, 602, 603, 1936, 0, 604, 0, 605,
	1937, 1938, 607, 608, 609, 1939, 1940, 610, 611, 845,
	897, 612, 898, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 1941, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 1942, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 1943, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 1944, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 1945, 707, 708, 706, 709,
	710, 711, 712, 1946, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 1947, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 1948, 752, 753, 0, 746, 734, 1949, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 1950, 764,
	857, 858, 859, 860, 1951, 776, 1952, 765, 767, 768,
	769, 770, 861, 771, 862, 1953, 772, 773, 774, 775,
	766, 777, 778, 1954, 1955, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1956, 790, 1957, 0,
	791, 792, 793, 863, 864, 865, 1958, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 1959, 1960, 1961, 1962, 809, 810,
	867, 811, 812, 813, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 297, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 299, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 2125,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 291, 809, 810, 867, 811, 812, 813,
	1399, 0, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 2280, 4581, 0, 0, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 297, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 299, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 2125, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 291, 809, 810,
	867, 811, 812, 813, 1399, 0, 292, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1392, 1393, 0,
	0, 0, 0, 0, 0, 873, 0, 2280, 2278, 0,
	0, 1424, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 3308, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 3313,
	886, 476, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1464, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 3309, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	3310, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 873,
	0, 1426, 0, 0, 3220, 1424, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	1396, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 1401, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1398,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 1395, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 1402, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 3218, 0, 3217, 1424,
	1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 1401, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 1398, 579, 346, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 1409, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 1410, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 1395, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 777, 778, 0, 1402, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1392,
	1393, 0, 0, 0, 0, 0, 0, 873, 0, 1426,
	3215, 0, 3214, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 1426, 3212, 0, 3211, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1392, 1393, 0,
	0, 0, 0, 0, 0, 873, 0, 1426, 3209, 0,
	1799, 1424, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1464, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 1798, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 873,
	0, 1426, 0, 0, 1388, 1424, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	1396, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 1401, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 1404, 592, 578, 1398,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 1403, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 1395, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 1402, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 0, 0, 0, 1424,
	1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 6640, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 1401, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	1404, 592, 578, 1398, 579, 346, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 1403, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 1409, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 1410, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 1395, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 777, 778, 0, 1402, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1392,
	1393, 0, 0, 0, 0, 0, 0, 873, 0, 1426,
	0, 0, 0, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 3054,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	3053, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 1426, 0, 0, 0, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1392, 1393, 2355,
	0, 0, 0, 0, 0, 873, 0, 1426, 0, 0,
	0, 1424, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 6296, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1464, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 1404, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 1403, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 873,
	0, 1426, 0, 0, 0, 1424, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	1396, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 1401, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 1404, 592, 578, 1398,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 1403, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 1395, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 1402, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 0, 0, 0, 1424,
	1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 1401, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 1398, 579, 5713, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 1409, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 1410, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 1395, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 777, 778, 0, 1402, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1392,
	1393, 2355, 0, 0, 0, 0, 0, 873, 0, 1426,
	0, 0, 0, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 4753, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 1426, 0, 0, 0, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 3313, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1392, 1393, 0,
	0, 0, 0, 0, 0, 873, 0, 1426, 0, 0,
	0, 1424, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1464, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 873,
	0, 1426, 2278, 0, 3318, 1424, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	1396, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 1401, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1398,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 1395, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 1402, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 0, 0, 3316, 1424,
	1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 1401, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 1398, 579, 346, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 1409, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 1410, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 1395, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 777, 778, 0, 1402, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1392,
	1393, 0, 0, 0, 0, 0, 0, 873, 0, 1426,
	0, 0, 3304, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 1426, 0, 0, 3293, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1392, 1393, 0,
	0, 0, 0, 0, 0, 873, 0, 1426, 0, 0,
	3291, 1424, 3282, 3289, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 3285, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 3286, 497,
	1464, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 3287, 555, 556, 3284, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 3288, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 3283, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 873,
	0, 1426, 0, 0, 3279, 1424, 3282, 3289, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	1396, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 3285, 422, 423, 1482, 424, 1481, 1401, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 3286, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 3287, 555, 556, 3284,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1398,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	3288, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 1395, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 1402, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	3283, 813, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 0, 0, 0, 1424,
	1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 3032, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 1401, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 1398, 579, 346, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 1409, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 1410, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 1395, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 777, 778, 0, 1402, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1392,
	1393, 0, 0, 0, 0, 0, 0, 873, 0, 1426,
	0, 0, 2704, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 1426, 0, 0, 2663, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1392, 1393, 0,
	0, 0, 0, 0, 0, 873, 0, 1426, 0, 0,
	2160, 1424, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1464, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 873,
	0, 1426, 0, 0, 2155, 1424, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	1396, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 1401, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1398,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 1395, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 1402, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 0, 0, 2141, 1424,
	1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 1401, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 1398, 579, 346, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 1409, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 1410, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 1395, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 777, 778, 0, 1402, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1392,
	1393, 0, 0, 0, 0, 0, 0, 873, 0, 1426,
	0, 0, 2136, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 1426, 0, 0, 2037, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 2036, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1392, 1393, 0,
	0, 0, 0, 0, 0, 873, 0, 1426, 0, 0,
	2031, 1424, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	2030, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 873,
	0, 1426, 0, 0, 2025, 1424, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	1396, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 1401, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1398,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 1395, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 1402, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 0, 0, 1998, 1424,
	1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 1401, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 1398, 579, 346, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 1409, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 1410, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 1395, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 777, 778, 0, 1402, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1392,
	1393, 0, 0, 0, 0, 0, 0, 873, 0, 1426,
	0, 0, 1978, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 1982, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 1983, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 1981, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 1426, 0, 0, 1804, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1392, 1393, 0,
	0, 0, 0, 0, 0, 873, 0, 1426, 0, 0,
	1655, 1424, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1464, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 873,
	0, 1426, 0, 0, 0, 1424, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	1396, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 1401, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1398,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 1395, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 1402, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 0, 0, 0, 1424,
	1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 6698, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 1401, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 1398, 579, 346, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 1409, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 1410, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 1395, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 6697, 778, 0, 1402, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1392,
	1393, 0, 0, 0, 0, 0, 0, 873, 0, 1426,
	0, 0, 0, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 6696, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 6698, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 6697, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 1426, 0, 0, 0, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 6167, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 6168, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 6166, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 1392, 1393, 0,
	0, 0, 0, 0, 0, 873, 0, 1426, 0, 0,
	0, 1424, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 2532, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1464, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 3184,
	0, 1426, 0, 0, 0, 1424, 1471, 1414, 1415, 1416,
	4547, 4548, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	1396, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 1401, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 1398,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 1395, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 1402, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1399, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1394, 0,
	0, 0, 0, 0, 0, 1392, 1393, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 0, 0, 0, 1424,
	1471, 1414, 1415, 1416, 4545, 4546, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 1396, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 1401, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 1398, 579, 346, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 1409, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 1410, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 1395, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 777, 778, 0, 1402, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1394, 0, 0, 0, 0, 0, 0, 1392,
	1393, 0, 0, 0, 0, 0, 0, 873, 0, 1426,
	0, 0, 0, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1399, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1394, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 3184, 0, 1426, 0, 0, 0, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	1432, 1462, 1396, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 1401,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 1408, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 1398, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 1409, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 1395, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 1402, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1399, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1394, 0, 0, 0, 0, 0, 0, 3040, 3041, 0,
	0, 0, 0, 0, 0, 873, 0, 1426, 0, 0,
	0, 1424, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 1463, 1430, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 1432, 1462, 1396, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 1401, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 1408, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 2532, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1464, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 1398, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	1409, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 1395, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 1402, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1399, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1394, 0, 0, 0, 0, 0,
	0, 1392, 1393, 0, 0, 0, 0, 0, 0, 873,
	0, 1426, 0, 0, 0, 1424, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	1430, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 1432, 1462,
	0, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 1408,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 0,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 1409, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3301, 0,
	0, 0, 0, 0, 0, 3299, 3300, 0, 0, 0,
	0, 0, 0, 873, 0, 1426, 0, 0, 0, 1424,
	1471, 1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 1463, 1430, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 1477, 0, 370, 1485, 371, 1484,
	0, 1495, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 1432, 1462, 0, 382, 1508, 1509, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 1482, 424,
	1481, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 1408, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	1421, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	1479, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 1493, 1494, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 1431, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 1474, 1475, 0, 1435, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 0, 579, 346, 896, 595, 596, 597,
	598, 1422, 1467, 599, 1483, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 1478, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 4540, 4541,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 1476, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 1507, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 1489, 1490, 1491, 1492, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 1420, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 1486, 1506, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2573,
	2574, 0, 0, 0, 0, 0, 0, 873, 0, 1426,
	0, 0, 0, 1424, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 1463, 1430, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 1432, 1462, 1396, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 6698, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 1401, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 1408, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 0, 1466, 0, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 1398, 579, 346,
	0, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 1409, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	1395, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 6697, 778, 0,
	1402, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1392, 1393, 0, 0, 0, 0, 0,
	0, 873, 0, 1426, 0, 0, 3320, 1424, 1471, 1414,
	1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 1430, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 1477, 0, 370, 1485, 371, 1484, 0, 1495,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 1462, 0, 382, 1508, 1509, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 1482, 424, 1481, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 1421, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 1479, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	1493, 1494, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 1431, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 1474,
	1475, 0, 1435, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 0, 579, 346, 896, 595, 596, 597, 598, 1422,
	1467, 599, 1483, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 1478,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 1410, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 1476, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	1507, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	1489, 1490, 1491, 1492, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 1420, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 1486, 1506, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 2051, 0, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 1639, 0, 1426, 0, 1463,
	1430, 1424, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 1462,
	0, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 2050, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 0,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1999, 0, 1471, 1414, 1415, 1416, 1412, 1413,
	1425, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 873, 0, 1426, 0, 1463, 1430, 1424,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 1477, 0,
	370, 1485, 371, 1484, 0, 1495, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 1462, 0, 382,
	1508, 1509, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 1488, 420,
	422, 423, 1482, 424, 1481, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 1480, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 1421, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 1479, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 1493, 1494, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 1431, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 1474, 1475, 0, 1435, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 0, 579, 346,
	896, 595, 596, 597, 598, 1422, 1467, 599, 1483, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 1478, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 1410, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 1476, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 1507, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 1489, 1490, 1491, 1492,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 1420, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 863,
	1486, 1506, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	1637, 0, 1471, 1414, 1415, 1416, 1412, 1413, 1425, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 1639, 0, 1426, 0, 1463, 1430, 1424, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 1477, 0, 370, 1485,
	371, 1484, 0, 1495, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 1462, 0, 382, 1508, 1509,
	822, 0, 383, 384, 385, 386, 1469, 0, 1450, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454,
	1458, 415, 416, 417, 418, 419, 1488, 420, 422, 423,
	1482, 424, 1481, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 1480, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 1496, 1497,
	460, 461, 1421, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 1479, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 1493, 1494, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 1503, 0,
	1431, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1636, 1465, 1468, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 876, 343, 345, 887, 837,
	513, 601, 514, 1474, 1475, 0, 1435, 0, 515, 516,
	519, 889, 1466, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 1504, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 1457,
	1456, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 0, 579, 346, 896, 595,
	596, 597, 598, 1422, 1467, 599, 1483, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 1498, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 1499, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 1478, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	1410, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1460, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 1476, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 1507, 739, 740, 741, 742, 747,
	1500, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 1489, 1490, 1491, 1492, 0, 776,
	0, 765, 767, 768, 769, 770, 1501, 771, 1502, 1420,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	1461, 790, 0, 0, 791, 792, 793, 863, 1486, 1506,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 1471,
	1414, 1415, 1416, 1412, 1413, 1425, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 350, 349,
	351, 352, 353, 354, 0, 355, 356, 0, 0, 1639,
	0, 1426, 1463, 1430, 0, 1424, 358, 0, 357, 0,
	359, 360, 361, 883, 362, 363, 364, 365, 366, 367,
	368, 369, 815, 1477, 0, 370, 1485, 371, 1484, 0,
	1495, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 1462, 0, 382, 1508, 1509, 822, 0, 383,
	384, 385, 386, 1469, 0, 1450, 0, 387, 388, 389,
	390, 391, 392, 393, 394, 0, 0, 396, 397, 398,
	395, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 411, 885, 412, 413,
	414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416,
	417, 418, 419, 1488, 420, 422, 423, 1482, 424, 1481,
	0, 427, 429, 421, 425, 0, 428, 426, 430, 431,
	0, 432, 433, 434, 435, 0, 0, 436, 1480, 438,
	0, 439, 440, 442, 441, 0, 443, 444, 445, 0,
	446, 447, 826, 448, 449, 450, 452, 454, 451, 453,
	455, 456, 457, 458, 459, 1496, 1497, 460, 461, 1421,
	342, 0, 0, 0, 0, 0, 462, 463, 464, 1479,
	0, 0, 0, 465, 0, 467, 471, 472, 468, 469,
	470, 473, 0, 466, 474, 475, 0, 886, 476, 477,
	478, 1493, 1494, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 0, 488, 489, 1503, 0, 1431, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1464, 1465, 1468,
	600, 888, 498, 499, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 0, 0, 0, 509, 510, 511,
	512, 0, 876, 343, 345, 887, 837, 513, 601, 514,
	1474, 1475, 0, 1435, 0, 515, 516, 519, 889, 1466,
	890, 518, 520, 521, 891, 522, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 0, 530, 532, 531,
	0, 534, 1504, 533, 892, 535, 536, 893, 0, 537,
	538, 539, 540, 541, 542, 545, 1457, 1456, 543, 544,
	546, 547, 0, 548, 549, 551, 554, 550, 552, 553,
	555, 556, 569, 570, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 572, 0, 571, 894,
	573, 574, 575, 576, 577, 585, 587, 588, 583, 584,
	586, 589, 590, 591, 593, 594, 580, 581, 582, 895,
	592, 578, 0, 579, 346, 896, 595, 596, 597, 598,
	1422, 1467, 599, 1483, 602, 603, 0, 0, 604, 0,
	605, 0, 0, 607, 608, 609, 0, 0, 610, 611,
	845, 897, 612, 898, 1498, 613, 614, 606, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 0,
	626, 627, 847, 628, 629, 630, 848, 631, 632, 633,
	1499, 634, 850, 635, 636, 0, 637, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	1478, 650, 651, 653, 652, 654, 655, 0, 656, 0,
	657, 658, 659, 0, 0, 0, 0, 0, 660, 661,
	663, 0, 664, 665, 666, 667, 668, 662, 669, 670,
	671, 672, 673, 674, 675, 0, 677, 678, 676, 679,
	680, 899, 681, 682, 683, 684, 685, 1410, 686, 0,
	687, 688, 696, 697, 698, 689, 690, 692, 699, 691,
	700, 701, 702, 703, 705, 704, 0, 707, 708, 706,
	709, 710, 711, 712, 1460, 713, 853, 714, 693, 694,
	715, 716, 717, 900, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 1476, 0, 727, 0, 728, 729, 730,
	731, 732, 733, 735, 695, 736, 737, 738, 743, 744,
	745, 1507, 739, 740, 741, 742, 747, 1500, 748, 749,
	750, 751, 0, 752, 753, 0, 746, 734, 0, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 0,
	764, 1489, 1490, 1491, 1492, 0, 776, 0, 765, 767,
	768, 769, 770, 1501, 771, 1502, 1420, 772, 773, 774,
	775, 766, 777, 778, 0, 0, 779, 780, 781, 782,
	784, 786, 787, 788, 783, 785, 789, 1461, 790, 0,
	0, 791, 792, 793, 863, 1486, 1506, 0, 796, 797,
	794, 795, 798, 799, 802, 800, 801, 866, 805, 517,
	806, 807, 808, 803, 804, 0, 0, 0, 0, 809,
	810, 867, 811, 812, 813, 0, 1471, 1414, 1415, 1416,
	1412, 1413, 1425, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 873, 0, 1426, 1463,
	1430, 0, 1424, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	1477, 0, 370, 1485, 371, 1484, 0, 1495, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 1462,
	0, 382, 1508, 1509, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	1488, 420, 422, 423, 1482, 424, 1481, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 1480, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 1421, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 1479, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 1493, 1494,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 1431, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 1474, 1475, 0,
	1435, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 0,
	579, 346, 896, 595, 596, 597, 598, 1422, 1467, 599,
	1483, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 1478, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 1410, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	1476, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 1507, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 1489, 1490,
	1491, 1492, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 1420, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 1486, 1506, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1383, 0, 877, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 1639, 0, 1426, 0, 1463, 0, 1424,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 1462, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 1469, 0,
	1450, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 1453, 1451, 1452, 1459,
	1455, 1454, 1458, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	1496, 1497, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	1503, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1464, 1465, 1468, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 876, 343, 345,
	887, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 889, 1466, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 1532, 530, 532, 531, 0, 534, 1504, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 1457, 1456, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 0, 579, 346,
	896, 595, 596, 597, 598, 0, 1467, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 1538, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 1498,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 1499, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 852, 1540, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 297, 707, 708, 706, 709, 710, 711, 712, 1460,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 1500, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 299, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 1501, 771,
	1502, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 1461, 790, 0, 0, 791, 792, 793, 2125,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 291, 809, 810, 867, 811, 812, 813,
	0, 877, 292, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 347, 348,
	350, 349, 351, 352, 353, 354, 0, 355, 356, 0,
	0, 1536, 0, 2378, 1463, 0, 0, 0, 358, 0,
	357, 0, 359, 360, 361, 883, 362, 363, 364, 365,
	366, 367, 368, 369, 815, 816, 0, 370, 817, 371,
	818, 0, 819, 372, 373, 374, 375, 376, 377, 378,
	379, 380, 381, 0, 1462, 0, 382, 820, 821, 822,
	0, 383, 384, 385, 386, 1469, 0, 1450, 0, 387,
	388, 389, 390, 391, 392, 393, 394, 0, 0, 396,
	397, 398, 395, 399, 400, 0, 401, 0, 402, 403,
	404, 405, 406, 407, 408, 0, 409, 410, 411, 885,
	412, 413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458,
	415, 416, 417, 418, 419, 0, 420, 422, 423, 824,
	424, 825, 0, 427, 429, 421, 425, 0, 428, 426,
	430, 431, 0, 432, 433, 434, 435, 0, 0, 436,
	437, 438, 0, 439, 440, 442, 441, 0, 443, 444,
	445, 0, 446, 447, 826, 448, 449, 450, 452, 454,
	451, 453, 455, 456, 457, 458, 459, 1496, 1497, 460,
	461, 0, 342, 0, 0, 0, 0, 0, 462, 463,
	464, 829, 0, 0, 0, 465, 0, 467, 471, 472,
	468, 469, 470, 473, 0, 466, 474, 475, 0, 886,
	476, 477, 478, 830, 831, 479, 480, 481, 482, 483,
	484, 485, 486, 487, 0, 488, 489, 1503, 0, 833,
	490, 0, 491, 492, 493, 494, 495, 496, 497, 1464,
	1465, 1468, 600, 888, 498, 499, 500, 501, 0, 502,
	503, 504, 505, 506, 507, 508, 0, 0, 0, 509,
	510, 511, 512, 0, 876, 343, 345, 887, 837, 513,
	601, 514, 838, 839, 0, 840, 0, 515, 516, 519,
	889, 1466, 890, 518, 520, 521, 891, 522, 0, 0,
	0, 523, 524, 525, 526, 527, 528, 529, 1532, 530,
	532, 531, 0, 534, 1504, 533, 892, 535, 536, 893,
	0, 537, 538, 539, 540, 541, 542, 545, 1457, 1456,
	543, 544, 546, 547, 0, 548, 549, 551, 554, 550,
	552, 553, 555, 556, 569, 570, 557, 558, 559, 560,
	561, 562, 563, 564, 565, 566, 567, 568, 572, 0,
	571, 894, 573, 574, 575, 576, 577, 585, 587, 588,
	583, 584, 586, 589, 590, 591, 593, 594, 580, 581,
	582, 895, 592, 578, 0, 579, 346, 896, 595, 596,
	597, 598, 0, 1467, 599, 844, 602, 603, 0, 0,
	604, 0, 605, 0, 1538, 607, 608, 609, 0, 0,
	610, 611, 845, 897, 612, 898, 1498, 613, 614, 606,
	615, 616, 617, 618, 619, 620, 621, 622, 623, 624,
	625, 0, 626, 627, 847, 628, 629, 630, 848, 631,
	632, 633, 1499, 634, 850, 635, 636, 0, 637, 638,
	639, 0, 640, 641, 642, 643, 644, 645, 646, 647,
	648, 649, 851, 650, 651, 653, 652, 654, 655, 0,
	656, 0, 657, 658, 659, 0, 0, 0, 0, 0,
	660, 661, 663, 0, 664, 665, 666, 667, 668, 662,
	669, 670, 671, 672, 673, 674, 675, 0, 677, 678,
	676, 679, 680, 899, 681, 682, 683, 684, 685, 852,
	1540, 0, 687, 688, 696, 697, 698, 689, 690, 692,
	699, 691, 700, 701, 702, 703, 705, 704, 297, 707,
	708, 706, 709, 710, 711, 712, 1460, 713, 853, 714,
	693, 694, 715, 716, 717, 900, 718, 719, 720, 721,
	722, 723, 724, 725, 726, 854, 0, 727, 0, 728,
	729, 730, 731, 732, 733, 735, 695, 736, 737, 738,
	743, 744, 745, 855, 739, 740, 741, 742, 747, 1500,
	748, 749, 750, 751, 0, 752, 753, 0, 746, 734,
	299, 754, 755, 756, 757, 758, 759, 760, 761, 762,
	763, 0, 764, 857, 858, 859, 860, 0, 776, 0,
	765, 767, 768, 769, 770, 1501, 771, 1502, 0, 772,
	773, 774, 775, 766, 777, 778, 0, 0, 779, 780,
	781, 782, 784, 786, 787, 788, 783, 785, 789, 1461,
	790, 0, 0, 791, 792, 793, 2125, 864, 865, 0,
	796, 797, 794, 795, 798, 799, 802, 800, 801, 866,
	805, 517, 806, 807, 808, 803, 804, 0, 0, 0,
	291, 809, 810, 867, 811, 812, 813, 0, 4702, 292,
	877, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 1536, 0,
	2378, 0, 0, 1463, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 1462, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 1469, 0, 1450, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 1496, 1497, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 1503, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1464, 1465,
	1468, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 876, 343, 345, 887, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 889,
	1466, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 1532, 530, 532,
	531, 0, 534, 1504, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 1457, 1456, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 0, 579, 346, 896, 595, 596, 597,
	598, 0, 1467, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 1538, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 1498, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 1499, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 852, 1540,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1460, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 1500, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 1501, 771, 1502, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 1461, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 1528, 0, 877,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 350, 349,
	351, 352, 353, 354, 0, 355, 356, 0, 0, 0,
	0, 0, 1463, 0, 0, 0, 358, 1536, 357, 1534,
	359, 360, 361, 883, 362, 363, 364, 365, 366, 367,
	368, 369, 815, 816, 0, 370, 817, 371, 818, 0,
	819, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 1462, 0, 382, 820, 821, 822, 0, 383,
	384, 385, 386, 1469, 0, 1450, 0, 387, 388, 389,
	390, 391, 392, 393, 394, 0, 0, 396, 397, 398,
	395, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 411, 885, 412, 413,
	414, 1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416,
	417, 418, 419, 0, 420, 422, 423, 824, 424, 825,
	0, 427, 429, 421, 425, 0, 428, 426, 430, 431,
	0, 432, 433, 434, 435, 0, 0, 436, 437, 438,
	0, 439, 440, 442, 441, 0, 443, 444, 445, 0,
	446, 447, 826, 448, 449, 450, 452, 454, 451, 453,
	455, 456, 457, 458, 459, 1496, 1497, 460, 461, 0,
	342, 0, 0, 0, 0, 0, 462, 463, 464, 829,
	0, 0, 0, 465, 0, 467, 471, 472, 468, 469,
	470, 473, 0, 466, 474, 475, 0, 886, 476, 477,
	478, 830, 831, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 0, 488, 489, 1503, 0, 833, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 1464, 1465, 1468,
	600, 888, 498, 499, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 0, 0, 0, 509, 510, 511,
	512, 0, 876, 343, 345, 887, 837, 513, 601, 514,
	838, 839, 0, 840, 0, 515, 516, 519, 889, 1466,
	890, 518, 520, 521, 891, 522, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 1532, 530, 532, 531,
	0, 534, 1504, 533, 892, 535, 536, 893, 0, 537,
	538, 539, 540, 541, 542, 545, 1457, 1456, 543, 544,
	546, 547, 0, 548, 549, 551, 554, 550, 552, 553,
	555, 556, 569, 570, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 572, 0, 571, 894,
	573, 574, 575, 576, 577, 585, 587, 588, 583, 584,
	586, 589, 590, 591, 593, 594, 580, 581, 582, 895,
	592, 578, 0, 579, 346, 896, 595, 596, 597, 598,
	0, 1467, 599, 844, 602, 603, 0, 0, 604, 0,
	605, 0, 1538, 607, 608, 609, 0, 0, 610, 611,
	845, 897, 612, 898, 1498, 613, 614, 606, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 0,
	626, 627, 847, 628, 629, 630, 848, 631, 632, 633,
	1499, 634, 850, 635, 636, 0, 637, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	851, 650, 651, 653, 652, 654, 655, 0, 656, 0,
	657, 658, 659, 0, 0, 0, 0, 0, 660, 661,
	663, 0, 664, 665, 666, 667, 668, 662, 669, 670,
	671, 672, 673, 674, 675, 0, 677, 678, 676, 679,
	680, 899, 681, 682, 683, 684, 685, 852, 1540, 0,
	687, 688, 696, 697, 698, 689, 690, 692, 699, 691,
	700, 701, 702, 703, 705, 704, 0, 707, 708, 706,
	709, 710, 711, 712, 1460, 713, 853, 714, 693, 694,
	715, 716, 717, 900, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 854, 0, 727, 0, 728, 729, 730,
	731, 732, 733, 735, 695, 736, 737, 738, 743, 744,
	745, 855, 739, 740, 741, 742, 747, 1500, 748, 749,
	750, 751, 0, 752, 753, 0, 746, 734, 0, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 0,
	764, 857, 858, 859, 860, 0, 776, 0, 765, 767,
	768, 769, 770, 1501, 771, 1502, 0, 772, 773, 774,
	775, 766, 777, 778, 0, 0, 779, 780, 781, 782,
	784, 786, 787, 788, 783, 785, 789, 1461, 790, 0,
	0, 791, 792, 793, 863, 864, 865, 0, 796, 797,
	794, 795, 798, 799, 802, 800, 801, 866, 805, 517,
	806, 807, 808, 803, 804, 0, 0, 0, 877, 809,
	810, 867, 811, 812, 813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 1463, 0, 0, 0, 358, 1536, 357, 1534, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 1462, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 1469, 0, 1450, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	1453, 1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 1496, 1497, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 1503, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1464, 1465, 1468, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 889, 1466, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 1532, 530, 532, 531, 0,
	534, 1504, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 1457, 1456, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 0, 579, 346, 896, 595, 596, 597, 598, 0,
	1467, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 1538, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 1498, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 1499,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 852, 1540, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1460, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 1500, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 1501, 771, 1502, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 1461, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 877, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 350, 349, 351, 352,
	353, 354, 0, 355, 356, 0, 0, 0, 0, 0,
	1463, 0, 0, 0, 358, 1536, 357, 1534, 359, 360,
	361, 883, 362, 363, 364, 365, 366, 367, 368, 369,
	815, 816, 0, 370, 817, 371, 818, 0, 819, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	1462, 0, 382, 820, 821, 822, 0, 383, 384, 385,
	386, 1469, 0, 1450, 0, 387, 388, 389, 390, 391,
	392, 393, 394, 0, 0, 396, 397, 398, 395, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 411, 885, 412, 413, 414, 1453,
	1451, 1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418,
	419, 0, 420, 422, 423, 824, 424, 825, 0, 427,
	429, 421, 425, 0, 428, 426, 430, 431, 0, 432,
	433, 434, 435, 0, 0, 436, 437, 438, 0, 439,
	440, 442, 441, 0, 443, 444, 445, 0, 446, 447,
	826, 448, 449, 450, 452, 454, 451, 453, 455, 456,
	457, 458, 459, 1496, 1497, 460, 461, 0, 342, 0,
	0, 0, 0, 0, 462, 463, 464, 829, 0, 0,
	0, 465, 0, 467, 471, 472, 468, 469, 470, 473,
	0, 466, 474, 475, 0, 886, 476, 477, 478, 830,
	831, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	0, 488, 489, 1503, 0, 833, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 1464, 1465, 1468, 600, 888,
	498, 499, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 0, 0, 0, 509, 510, 511, 512, 0,
	876, 343, 345, 887, 837, 513, 601, 514, 838, 839,
	0, 840, 0, 515, 516, 519, 889, 1466, 890, 518,
	520, 521, 891, 522, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 0, 530, 532, 531, 0, 534,
	1504, 533, 892, 535, 536, 893, 0, 537, 538, 539,
	540, 541, 542, 545, 1457, 1456, 543, 544, 546, 547,
	0, 548, 549, 551, 554, 550, 552, 553, 555, 556,
	569, 570, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 572, 0, 571, 894, 573, 574,
	575, 576, 577, 585, 587, 588, 583, 584, 586, 589,
	590, 591, 593, 594, 580, 581, 582, 895, 592, 578,
	0, 579, 346, 896, 595, 596, 597, 598, 0, 1467,
	599, 844, 602, 603, 0, 0, 604, 0, 605, 0,
	0, 607, 608, 609, 0, 0, 610, 611, 845, 897,
	612, 898, 1498, 613, 614, 606, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 0, 626, 627,
	847, 628, 629, 630, 848, 631, 632, 633, 1499, 634,
	850, 635, 636, 0, 637, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 851, 650,
	651, 653, 652, 654, 655, 0, 656, 0, 657, 658,
	659, 0, 0, 0, 0, 0, 660, 661, 663, 0,
	664, 665, 666, 667, 668, 662, 669, 670, 671, 672,
	673, 674, 675, 0, 677, 678, 676, 679, 680, 899,
	681, 682, 683, 684, 685, 852, 686, 0, 687, 688,
	696, 697, 698, 689, 690, 692, 699, 691, 700, 701,
	702, 703, 705, 704, 0, 707, 708, 706, 709, 710,
	711, 712, 1460, 713, 853, 714, 693, 694, 715, 716,
	717, 900, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 854, 0, 727, 0, 728, 729, 730, 731, 732,
	733, 735, 695, 736, 737, 738, 743, 744, 745, 855,
	739, 740, 741, 742, 747, 1500, 748, 749, 750, 751,
	0, 752, 753, 0, 746, 734, 0, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 0, 764, 857,
	858, 859, 860, 0, 776, 0, 765, 767, 768, 769,
	770, 1501, 771, 1502, 0, 772, 773, 774, 775, 766,
	777, 778, 0, 0, 779, 780, 781, 782, 784, 786,
	787, 788, 783, 785, 789, 1461, 790, 0, 0, 791,
	792, 793, 863, 864, 865, 0, 796, 797, 794, 795,
	798, 799, 802, 800, 801, 866, 805, 517, 806, 807,
	808, 803, 804, 0, 0, 0, 877, 809, 810, 867,
	811, 812, 813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 1463,
	0, 0, 0, 358, 873, 357, 5924, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 1462,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	1469, 0, 1450, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 1453, 1451,
	1452, 1459, 1455, 1454, 1458, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 1496, 1497, 460, 461, 0, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 1503, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1464, 1465, 1468, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 876,
	343, 345, 887, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 889, 1466, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 1504,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 1457, 1456, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 0,
	579, 346, 896, 595, 596, 597, 598, 0, 1467, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 1498, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 1499, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 852, 1540, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1460, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 1500, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	1501, 771, 1502, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 1461, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 877, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 350, 349, 351, 352, 353, 354,
	0, 355, 356, 0, 0, 0, 0, 0, 1463, 0,
	0, 0, 358, 873, 357, 2270, 359, 360, 361, 883,
	362, 363, 364, 365, 366, 367, 368, 369, 815, 816,
	0, 370, 817, 371, 818, 0, 819, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 1462, 0,
	382, 820, 821, 822, 0, 383, 384, 385, 386, 1469,
	0, 1450, 0, 387, 388, 389, 390, 391, 392, 393,
	394, 0, 0, 396, 397, 398, 395, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 411, 885, 412, 413, 414, 1453, 1451, 1452,
	1459, 1455, 1454, 1458, 415, 416, 417, 418, 419, 0,
	420, 422, 423, 824, 424, 825, 0, 427, 429, 421,
	425, 0, 428, 426, 430, 431, 0, 432, 433, 434,
	435, 0, 0, 436, 437, 438, 0, 439, 440, 442,
	441, 0, 443, 444, 445, 0, 446, 447, 826, 448,
	449, 450, 452, 454, 451, 453, 455, 456, 457, 458,
	459, 1496, 1497, 460, 461, 0, 342, 0, 0, 0,
	0, 0, 462, 463, 464, 829, 0, 0, 0, 465,
	0, 467, 471, 472, 468, 469, 470, 473, 0, 466,
	474, 475, 0, 886, 476, 477, 478, 830, 831, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 0, 488,
	489, 1503, 0, 833, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 1464, 1465, 1468, 600, 888, 498, 499,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 509, 510, 511, 512, 0, 876, 343,
	345, 887, 837, 513, 601, 514, 838, 839, 0, 840,
	0, 515, 516, 519, 889, 1466, 890, 518, 520, 521,
	891, 522, 0, 0, 0, 523, 524, 525, 526, 527,
	528, 529, 0, 530, 532, 531, 0, 534, 1504, 533,
	892, 535, 536, 893, 0, 537, 538, 539, 540, 541,
	542, 545, 1457, 1456, 543, 544, 546, 547, 0, 548,
	549, 551, 554, 550, 552, 553, 555, 556, 569, 570,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 572, 0, 571, 894, 573, 574, 575, 576,
	577, 585, 587, 588, 583, 584, 586, 589, 590, 591,
	593, 594, 580, 581, 582, 895, 592, 578, 0, 579,
	346, 896, 595, 596, 597, 598, 0, 1467, 599, 844,
	602, 603, 0, 0, 604, 0, 605, 0, 0, 607,
	608, 609, 0, 0, 610, 611, 845, 897, 612, 898,
	1498, 613, 614, 606, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 0, 626, 627, 847, 628,
	629, 630, 848, 631, 632, 633, 1499, 634, 850, 635,
	636, 0, 637, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 851, 650, 651, 653,
	652, 654, 655, 0, 656, 0, 657, 658, 659, 0,
	0, 0, 0, 0, 660, 661, 663, 0, 664, 665,
	666, 667, 668, 662, 669, 670, 671, 672, 673, 674,
	675, 0, 677, 678, 676, 679, 680, 899, 681, 682,
	683, 684, 685, 852, 686, 0, 687, 688, 696, 697,
	698, 689, 690, 692, 699, 691, 700, 701, 702, 703,
	705, 704, 0, 707, 708, 706, 709, 710, 711, 712,
	1460, 713, 853, 714, 693, 694, 715, 716, 717, 900,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 854,
	0, 727, 0, 728, 729, 730, 731, 732, 733, 735,
	695, 736, 737, 738, 743, 744, 745, 855, 739, 740,
	741, 742, 747, 1500, 748, 749, 750, 751, 0, 752,
	753, 0, 746, 734, 0, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 0, 764, 857, 858, 859,
	860, 0, 776, 0, 765, 767, 768, 769, 770, 1501,
	771, 1502, 0, 772, 773, 774, 775, 766, 777, 778,
	0, 0, 779, 780, 781, 782, 784, 786, 787, 788,
	783, 785, 789, 1461, 790, 0, 0, 791, 792, 793,
	863, 864, 865, 0, 796, 797, 794, 795, 798, 799,
	802, 800, 801, 866, 805, 517, 806, 807, 808, 803,
	804, 0, 339, 0, 0, 809, 810, 867, 811, 812,
	813, 0, 3148, 3149, 3150, 3167, 3168, 3169, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 3170, 0, 814, 0, 0, 0, 358,
	3171, 357, 873, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 2255, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 3160, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 3156, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 3161, 3162, 3163, 3164, 462,
	463, 464, 829, 0, 0, 3155, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	3165, 3166, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 3158, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 3159, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 2254, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1383, 0,
	1743, 3145, 3146, 3147, 3172, 3157, 3151, 0, 3153, 3154,
	3152, 3139, 3140, 3141, 3142, 3143, 3144, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 884, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 887, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 889,
	841, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 0, 579, 0, 896, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 297, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 299,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 2125, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 291,
	809, 810, 867, 811, 812, 813, 0, 2122, 292, 1743,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 350, 349,
	351, 352, 353, 354, 0, 355, 356, 0, 0, 235,
	0, 0, 814, 0, 0, 0, 358, 0, 357, 0,
	359, 360, 361, 883, 362, 363, 364, 365, 366, 367,
	368, 369, 815, 816, 0, 370, 817, 371, 818, 0,
	819, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 0, 0, 382, 820, 821, 822, 0, 383,
	384, 385, 386, 823, 0, 884, 0, 387, 388, 389,
	390, 391, 392, 393, 394, 0, 0, 396, 397, 398,
	395, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 411, 885, 412, 413,
	414, 0, 0, 0, 0, 0, 0, 0, 415, 416,
	417, 418, 419, 0, 420, 422, 423, 824, 424, 825,
	0, 427, 429, 421, 425, 0, 428, 426, 430, 431,
	0, 432, 433, 434, 435, 0, 0, 436, 437, 438,
	0, 439, 440, 442, 441, 0, 443, 444, 445, 0,
	446, 447, 826, 448, 449, 450, 452, 454, 451, 453,
	455, 456, 457, 458, 459, 827, 828, 460, 461, 0,
	342, 0, 0, 0, 0, 0, 462, 463, 464, 829,
	0, 0, 0, 465, 0, 467, 471, 472, 468, 469,
	470, 473, 0, 466, 474, 475, 0, 886, 476, 477,
	478, 830, 831, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 0, 488, 489, 832, 0, 833, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 834, 835, 836,
	600, 888, 498, 499, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 0, 0, 0, 509, 510, 511,
	512, 0, 0, 0, 0, 887, 837, 513, 601, 514,
	838, 839, 0, 840, 0, 515, 516, 519, 889, 841,
	890, 518, 520, 521, 891, 522, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 0, 530, 532, 531,
	0, 534, 842, 533, 892, 535, 536, 893, 0, 537,
	538, 539, 540, 541, 542, 545, 0, 0, 543, 544,
	546, 547, 0, 548, 549, 551, 554, 550, 552, 553,
	555, 556, 569, 570, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 572, 0, 571, 894,
	573, 574, 575, 576, 577, 585, 587, 588, 583, 584,
	586, 589, 590, 591, 593, 594, 580, 581, 582, 895,
	592, 578, 0, 579, 0, 896, 595, 596, 597, 598,
	0, 843, 599, 844, 602, 603, 0, 0, 604, 0,
	605, 0, 0, 607, 608, 609, 0, 0, 610, 611,
	845, 897, 612, 898, 846, 613, 614, 606, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 0,
	626, 627, 847, 628, 629, 630, 848, 631, 632, 633,
	849, 634, 850, 635, 636, 0, 637, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	851, 650, 651, 653, 652, 654, 655, 0, 656, 0,
	657, 658, 659, 0, 0, 0, 0, 0, 660, 661,
	663, 0, 664, 665, 666, 667, 668, 662, 669, 670,
	671, 672, 673, 674, 675, 0, 677, 678, 676, 679,
	680, 899, 681, 682, 683, 684, 685, 852, 686, 0,
	687, 688, 696, 697, 698, 689, 690, 692, 699, 691,
	700, 701, 702, 703, 705, 704, 297, 707, 708, 706,
	709, 710, 711, 712, 0, 713, 853, 714, 693, 694,
	715, 716, 717, 900, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 854, 0, 727, 0, 728, 729, 730,
	731, 732, 733, 735, 695, 736, 737, 738, 743, 744,
	745, 855, 739, 740, 741, 742, 747, 856, 748, 749,
	750, 751, 0, 752, 753, 0, 746, 734, 299, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 0,
	764, 857, 858, 859, 860, 0, 776, 0, 765, 767,
	768, 769, 770, 861, 771, 862, 0, 772, 773, 774,
	775, 766, 777, 778, 0, 0, 779, 780, 781, 782,
	784, 786, 787, 788, 783, 785, 789, 0, 790, 0,
	0, 791, 792, 793, 2125, 864, 865, 0, 796, 797,
	794, 795, 798, 799, 802, 800, 801, 866, 805, 517,
	806, 807, 808, 803, 804, 0, 0, 0, 291, 809,
	810, 867, 811, 812, 813, 0, 0, 292, 1743, 1742,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 235, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 884, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 887, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 889, 841, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 0, 579, 0, 896, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 1743, 1742, 0, 0, 0,
	0, 1740, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 350, 349, 351, 352, 353, 354,
	0, 355, 356, 0, 0, 0, 0, 2149, 814, 0,
	0, 0, 358, 0, 357, 0, 359, 360, 361, 883,
	362, 363, 364, 365, 366, 367, 368, 369, 815, 816,
	0, 370, 817, 371, 818, 0, 819, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 0, 0,
	382, 820, 821, 822, 0, 383, 384, 385, 386, 823,
	0, 884, 0, 387, 388, 389, 390, 391, 392, 393,
	394, 0, 0, 396, 397, 398, 395, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 411, 885, 412, 413, 414, 0, 0, 0,
	0, 0, 0, 0, 415, 416, 417, 418, 419, 0,
	420, 422, 423, 824, 424, 825, 0, 427, 429, 421,
	425, 0, 428, 426, 430, 431, 0, 432, 433, 434,
	435, 0, 0, 436, 437, 438, 0, 439, 440, 442,
	441, 0, 443, 444, 445, 0, 446, 447, 826, 448,
	449, 450, 452, 454, 451, 453, 455, 456, 457, 458,
	459, 827, 828, 460, 461, 0, 342, 0, 0, 0,
	0, 0, 462, 463, 464, 829, 0, 0, 0, 465,
	0, 467, 471, 472, 468, 469, 470, 473, 0, 466,
	474, 475, 0, 886, 476, 477, 478, 830, 831, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 0, 488,
	489, 832, 0, 833, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 834, 835, 836, 600, 888, 498, 499,
	500, 501, 0, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 509, 510, 511, 512, 0, 0, 0,
	0, 887, 837, 513, 601, 514, 838, 839, 0, 840,
	0, 515, 516, 519, 889, 841, 890, 518, 520, 521,
	891, 522, 0, 0, 0, 523, 524, 525, 526, 527,
	528, 529, 0, 530, 532, 531, 0, 534, 842, 533,
	892, 535, 536, 893, 0, 537, 538, 539, 540, 541,
	542, 545, 0, 0, 543, 544, 546, 547, 0, 548,
	549, 551, 554, 550, 552, 553, 555, 556, 569, 570,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 572, 0, 571, 894, 573, 574, 575, 576,
	577, 585, 587, 588, 583, 584, 586, 589, 590, 591,
	593, 594, 580, 581, 582, 895, 592, 578, 0, 579,
	0, 896, 595, 596, 597, 598, 0, 843, 599, 844,
	602, 603, 0, 0, 604, 0, 605, 0, 0, 607,
	608, 609, 0, 0, 610, 611, 845, 897, 612, 898,
	846, 613, 614, 606, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 0, 626, 627, 847, 628,
	629, 630, 848, 631, 632, 633, 849, 634, 850, 635,
	636, 0, 637, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 851, 650, 651, 653,
	652, 654, 655, 0, 656, 0, 657, 658, 659, 0,
	0, 0, 0, 0, 660, 661, 663, 0, 664, 665,
	666, 667, 668, 662, 669, 670, 671, 672, 673, 674,
	675, 0, 677, 678, 676, 679, 680, 899, 681, 682,
	683, 684, 685, 852, 686, 0, 687, 688, 696, 697,
	698, 689, 690, 692, 699, 691, 700, 701, 702, 703,
	705, 704, 0, 707, 708, 706, 709, 710, 711, 712,
	0, 713, 853, 714, 693, 694, 715, 716, 717, 900,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 854,
	0, 727, 0, 728, 729, 730, 731, 732, 733, 735,
	695, 736, 737, 738, 743, 744, 745, 855, 739, 740,
	741, 742, 747, 856, 748, 749, 750, 751, 0, 752,
	753, 0, 746, 734, 0, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 0, 764, 857, 858, 859,
	860, 0, 776, 0, 765, 767, 768, 769, 770, 861,
	771, 862, 0, 772, 773, 774, 775, 766, 777, 778,
	0, 0, 779, 780, 781, 782, 784, 786, 787, 788,
	783, 785, 789, 0, 790, 0, 0, 791, 792, 793,
	863, 864, 865, 0, 796, 797, 794, 795, 798, 799,
	802, 800, 801, 866, 805, 517, 806, 807, 808, 803,
	804, 0, 0, 0, 0, 809, 810, 867, 811, 812,
	813, 0, 1743, 2907, 0, 0, 0, 0, 2908, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 5196, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 884, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 887, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 889, 841, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	2906, 532, 531, 0, 534, 842, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 0, 579, 0, 896, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 1743,
	1742, 0, 0, 0, 0, 1740, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 350, 349,
	351, 352, 353, 354, 0, 355, 356, 0, 0, 0,
	0, 2149, 814, 0, 0, 0, 358, 0, 357, 0,
	359, 360, 361, 883, 362, 363, 364, 365, 366, 367,
	368, 369, 815, 816, 0, 370, 817, 371, 818, 0,
	819, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 0, 0, 382, 820, 821, 822, 0, 383,
	384, 385, 386, 823, 0, 884, 0, 387, 388, 389,
	390, 391, 392, 393, 394, 0, 0, 396, 397, 398,
	395, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 411, 885, 412, 413,
	414, 0, 0, 0, 0, 0, 0, 0, 415, 416,
	417, 418, 419, 0, 420, 422, 423, 824, 424, 825,
	0, 427, 429, 421, 425, 0, 428, 426, 430, 431,
	0, 432, 433, 434, 435, 0, 0, 436, 437, 438,
	0, 439, 440, 442, 441, 0, 443, 444, 445, 0,
	446, 447, 826, 448, 449, 450, 452, 454, 451, 453,
	455, 456, 457, 458, 459, 827, 828, 460, 461, 0,
	342, 0, 0, 0, 0, 0, 462, 463, 464, 829,
	0, 0, 0, 465, 0, 467, 471, 472, 468, 469,
	470, 473, 0, 466, 474, 475, 0, 886, 476, 477,
	478, 830, 831, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 0, 488, 489, 832, 0, 833, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 834, 835, 836,
	600, 888, 498, 499, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 0, 0, 0, 509, 510, 511,
	512, 0, 0, 0, 0, 887, 837, 513, 601, 514,
	838, 839, 0, 840, 0, 515, 516, 519, 889, 841,
	890, 518, 520, 521, 891, 522, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 0, 530, 532, 531,
	0, 534, 842, 533, 892, 535, 536, 893, 0, 537,
	538, 539, 540, 541, 542, 545, 0, 0, 543, 544,
	546, 547, 0, 548, 549, 551, 554, 550, 552, 553,
	555, 556, 569, 570, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 572, 0, 571, 894,
	573, 574, 575, 576, 577, 585, 587, 588, 583, 584,
	586, 589, 590, 591, 593, 594, 580, 581, 582, 895,
	592, 578, 0, 579, 0, 896, 595, 596, 597, 598,
	0, 843, 599, 844, 602, 603, 0, 0, 604, 0,
	605, 0, 0, 607, 608, 609, 0, 0, 610, 611,
	845, 897, 612, 898, 846, 613, 614, 606, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 0,
	626, 627, 847, 628, 629, 630, 848, 631, 632, 633,
	849, 634, 850, 635, 636, 0, 637, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	851, 650, 651, 653, 652, 654, 655, 0, 656, 0,
	657, 658, 659, 0, 0, 0, 0, 0, 660, 661,
	663, 0, 664, 665, 666, 667, 668, 662, 669, 670,
	671, 672, 673, 674, 675, 0, 677, 678, 676, 679,
	680, 899, 681, 682, 683, 684, 685, 852, 686, 0,
	687, 688, 696, 697, 698, 689, 690, 692, 699, 691,
	700, 701, 702, 703, 705, 704, 0, 707, 708, 706,
	709, 710, 711, 712, 0, 713, 853, 714, 693, 694,
	715, 716, 717, 900, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 854, 0, 727, 0, 728, 729, 730,
	731, 732, 733, 735, 695, 736, 737, 738, 743, 744,
	745, 855, 739, 740, 741, 742, 747, 856, 748, 749,
	750, 751, 0, 752, 753, 0, 746, 734, 0, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 0,
	764, 857, 858, 859, 860, 0, 776, 0, 765, 767,
	768, 769, 770, 861, 771, 862, 0, 772, 773, 774,
	775, 766, 777, 778, 0, 0, 779, 780, 781, 782,
	784, 786, 787, 788, 783, 785, 789, 0, 790, 0,
	0, 791, 792, 793, 863, 864, 865, 0, 796, 797,
	794, 795, 798, 799, 802, 800, 801, 866, 805, 517,
	806, 807, 808, 803, 804, 0, 0, 0, 877, 809,
	810, 867, 811, 812, 813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 2131, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 884, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 876, 343, 345, 887, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 889, 841, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 0, 579, 346, 896, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 1383, 0, 339, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 350, 349, 351, 352,
	353, 354, 0, 355, 356, 0, 0, 0, 0, 0,
	814, 0, 0, 0, 358, 873, 357, 0, 359, 360,
	361, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	815, 816, 0, 370, 817, 371, 818, 0, 819, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	0, 0, 382, 820, 821, 822, 0, 383, 384, 385,
	386, 823, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 393, 394, 0, 0, 396, 397, 398, 395, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 414, 0,
	0, 0, 0, 0, 0, 0, 415, 416, 417, 418,
	419, 0, 420, 422, 423, 824, 424, 825, 0, 427,
	429, 421, 425, 0, 428, 426, 430, 431, 0, 432,
	433, 434, 435, 0, 0, 436, 437, 438, 0, 439,
	440, 442, 441, 0, 443, 444, 445, 0, 446, 447,
	826, 448, 449, 450, 452, 454, 451, 453, 455, 456,
	457, 458, 459, 827, 828, 460, 461, 0, 0, 0,
	0, 0, 0, 0, 462, 463, 464, 829, 0, 0,
	0, 465, 0, 467, 471, 472, 468, 469, 470, 473,
	0, 466, 474, 475, 0, 0, 476, 477, 478, 830,
	831, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	0, 488, 489, 832, 0, 833, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 834, 835, 836, 600, 0,
	498, 499, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 0, 0, 0, 509, 510, 511, 512, 0,
	0, 0, 0, 0, 837, 513, 601, 514, 838, 839,
	0, 840, 0, 515, 516, 519, 0, 841, 0, 518,
	520, 521, 0, 522, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 0, 530, 532, 531, 0, 534,
	842, 533, 0, 535, 536, 0, 0, 537, 538, 539,
	540, 541, 542, 545, 0, 0, 543, 544, 546, 547,
	0, 548, 549, 551, 554, 550, 552, 553, 555, 556,
	569, 570, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 572, 0, 571, 0, 573, 574,
	575, 576, 577, 585, 587, 588, 583, 584, 586, 589,
	590, 591, 593, 594, 580, 581, 582, 0, 592, 578,
	0, 579, 0, 0, 595, 596, 597, 598, 0, 843,
	599, 844, 602, 603, 0, 0, 604, 0, 605, 0,
	0, 607, 608, 609, 0, 0, 610, 611, 845, 0,
	612, 0, 846, 613, 614, 606, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 0, 626, 627,
	847, 628, 629, 630, 848, 631, 632, 633, 849, 634,
	850, 635, 636, 0, 637, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 851, 650,
	651, 653, 652, 654, 655, 0, 656, 0, 657, 658,
	659, 0, 0, 0, 0, 0, 660, 661, 663, 0,
	664, 665, 666, 667, 668, 662, 669, 670, 671, 672,
	673, 674, 675, 0, 677, 678, 676, 679, 680, 0,
	681, 682, 683, 684, 685, 852, 686, 0, 687, 688,
	696, 697, 698, 689, 690, 692, 699, 691, 700, 701,
	702, 703, 705, 704, 297, 707, 708, 706, 709, 710,
	711, 712, 0, 713, 853, 714, 693, 694, 715, 716,
	717, 0, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 854, 0, 727, 0, 728, 729, 730, 731, 732,
	733, 735, 695, 736, 737, 738, 743, 744, 745, 855,
	739, 740, 741, 742, 747, 856, 748, 749, 750, 751,
	0, 752, 753, 0, 746, 734, 299, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 0, 764, 857,
	858, 859, 860, 0, 776, 0, 765, 767, 768, 769,
	770, 861, 771, 862, 0, 772, 773, 774, 775, 766,
	777, 778, 0, 0, 779, 780, 781, 782, 784, 786,
	787, 788, 783, 785, 789, 0, 790, 0, 0, 791,
	792, 793, 2125, 864, 865, 0, 796, 797, 794, 795,
	798, 799, 802, 800, 801, 866, 805, 517, 806, 807,
	808, 803, 804, 0, 0, 0, 291, 809, 810, 867,
	811, 812, 813, 0, 339, 292, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 235, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 339, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 350, 349, 351, 352, 353, 354, 0, 355,
	356, 0, 0, 0, 0, 0, 814, 0, 0, 0,
	358, 0, 357, 2392, 359, 360, 361, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 815, 816, 0, 370,
	817, 371, 818, 0, 819, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 0, 0, 382, 820,
	821, 822, 0, 383, 384, 385, 386, 823, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 393, 394, 0,
	0, 396, 397, 398, 395, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 414, 0, 0, 0, 0, 0,
	0, 0, 415, 416, 417, 418, 419, 0, 420, 422,
	423, 824, 424, 825, 0, 427, 429, 421, 425, 0,
	428, 426, 430, 431, 0, 432, 433, 434, 435, 0,
	0, 436, 437, 438, 0, 439, 440, 442, 441, 0,
	443, 444, 445, 0, 446, 447, 826, 448, 449, 450,
	452, 454, 451, 453, 455, 456, 457, 458, 459, 827,
	828, 460, 461, 0, 342, 0, 0, 0, 0, 0,
	462, 463, 464, 829, 0, 0, 0, 465, 0, 467,
	471, 472, 468, 469, 470, 473, 0, 466, 474, 475,
	0, 0, 476, 477, 478, 830, 831, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 0, 488, 489, 832,
	0, 833, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 834, 835, 836, 600, 0, 498, 499, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 0, 0,
	0, 509, 510, 511, 512, 0, 344, 343, 345, 0,
	837, 513, 601, 514, 838, 839, 0, 840, 0, 515,
	516, 519, 0, 841, 0, 518, 520, 521, 0, 522,
	0, 0, 0, 523, 524, 525, 526, 527, 528, 529,
	0, 530, 532, 531, 0, 534, 842, 533, 0, 535,
	536, 0, 0, 537, 538, 539, 540, 541, 542, 545,
	0, 0, 543, 544, 546, 547, 0, 548, 549, 551,
	554, 550, 552, 553, 555, 556, 569, 570, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	572, 0, 571, 0, 573, 574, 575, 576, 577, 585,
	587, 588, 583, 584, 586, 589, 590, 591, 593, 594,
	580, 581, 582, 0, 592, 578, 0, 579, 346, 0,
	595, 596, 597, 598, 0, 843, 599, 844, 602, 603,
	0, 0, 604, 0, 605, 0, 0, 607, 608, 609,
	0, 0, 610, 611, 845, 0, 612, 0, 846, 613,
	614, 606, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 0, 626, 627, 847, 628, 629, 630,
	848, 631, 632, 633, 849, 634, 850, 635, 636, 0,
	637, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 851, 650, 651, 653, 652, 654,
	655, 0, 656, 0, 657, 658, 659, 0, 0, 0,
	0, 0, 660, 661, 663, 0, 664, 665, 666, 667,
	668, 662, 669, 670, 671, 672, 673, 674, 675, 0,
	677, 678, 676, 679, 680, 0, 681, 682, 683, 684,
	685, 852, 686, 0, 687, 688, 696, 697, 698, 689,
	690, 692, 699, 691, 700, 701, 702, 703, 705, 704,
	0, 707, 708, 706, 709, 710, 711, 712, 0, 713,
	853, 714, 693, 694, 715, 716, 717, 0, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 854, 0, 727,
	0, 728, 729, 730, 731, 732, 733, 735, 695, 736,
	737, 738, 743, 744, 745, 855, 739, 740, 741, 742,
	747, 856, 748, 749, 750, 751, 0, 752, 753, 0,
	746, 734, 0, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 0, 764, 857, 858, 859, 860, 0,
	776, 0, 765, 767, 768, 769, 770, 861, 771, 862,
	0, 772, 773, 774, 775, 766, 777, 778, 0, 0,
	779, 780, 781, 782, 784, 786, 787, 788, 783, 785,
	789, 0, 790, 0, 0, 791, 792, 793, 863, 864,
	865, 0, 796, 797, 794, 795, 798, 799, 802, 800,
	801, 866, 805, 517, 806, 807, 808, 803, 804, 0,
	0, 0, 339, 809, 810, 867, 811, 812, 813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 902, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 339,
	4355, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 347, 348, 350, 349,
	351, 352, 353, 354, 0, 355, 356, 0, 0, 0,
	0, 0, 814, 0, 0, 0, 358, 0, 357, 5142,
	359, 360, 361, 0, 362, 363, 364, 365, 366, 367,
	368, 369, 815, 816, 0, 370, 817, 371, 818, 0,
	819, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 0, 0, 0, 382, 820, 821, 822, 0, 383,
	384, 385, 386, 823, 0, 0, 0, 387, 388, 389,
	390, 391, 392, 393, 394, 0, 0, 396, 397, 398,
	395, 399, 400, 0, 401, 0, 402, 403, 404, 405,
	406, 407, 408, 0, 409, 410, 411, 0, 412, 413,
	414, 0, 0, 0, 0, 0, 0, 0, 415, 416,
	417, 418, 419, 0, 420, 422, 423, 824, 424, 825,
	0, 427, 429, 421, 425, 0, 428, 426, 430, 431,
	0, 432, 433, 434, 435, 0, 0, 436, 437, 438,
	0, 439, 440, 442, 441, 0, 443, 444, 445, 0,
	446, 447, 826, 448, 449, 450, 452, 454, 451, 453,
	455, 456, 457, 458, 459, 827, 828, 460, 461, 0,
	0, 0, 0, 0, 0, 0, 462, 463, 464, 829,
	0, 0, 0, 465, 0, 467, 471, 472, 468, 469,
	470, 473, 0, 466, 474, 475, 0, 0, 476, 477,
	478, 830, 831, 479, 480, 481, 482, 483, 484, 485,
	486, 487, 0, 488, 489, 832, 0, 833, 490, 0,
	491, 492, 493, 494, 495, 496, 497, 834, 835, 836,
	600, 0, 498, 499, 500, 501, 0, 502, 503, 504,
	505, 506, 507, 508, 0, 0, 0, 509, 510, 511,
	512, 0, 0, 0, 0, 0, 837, 513, 601, 514,
	838, 839, 0, 840, 0, 515, 516, 519, 0, 841,
	0, 518, 520, 521, 0, 522, 0, 0, 0, 523,
	524, 525, 526, 527, 528, 529, 0, 530, 532, 531,
	0, 534, 842, 533, 0, 535, 536, 0, 0, 537,
	538, 539, 540, 541, 542, 545, 0, 0, 543, 544,
	546, 547, 0, 548, 549, 551, 554, 550, 552, 553,
	555, 556, 569, 570, 557, 558, 559, 560, 561, 562,
	563, 564, 565, 566, 567, 568, 572, 0, 571, 0,
	573, 574, 575, 576, 577, 585, 587, 588, 583, 584,
	586, 589, 590, 591, 593, 594, 580, 581, 582, 0,
	592, 578, 0, 579, 0, 0, 595, 596, 597, 598,
	0, 843, 599, 844, 602, 603, 0, 0, 604, 0,
	605, 0, 0, 607, 608, 609, 0, 0, 610, 611,
	845, 0, 612, 0, 846, 613, 614, 606, 615, 616,
	617, 618, 619, 620, 621, 622, 623, 624, 625, 0,
	626, 627, 847, 628, 629, 630, 848, 631, 632, 633,
	849, 634, 850, 635, 636, 0, 637, 638, 639, 0,
	640, 641, 642, 643, 644, 645, 646, 647, 648, 649,
	851, 650, 651, 653, 652, 654, 655, 0, 656, 0,
	657, 658, 659, 0, 0, 0, 0, 0, 660, 661,
	663, 0, 664, 665, 666, 667, 668, 662, 669, 670,
	671, 672, 673, 674, 675, 0, 677, 678, 676, 679,
	680, 0, 681, 682, 683, 684, 685, 852, 686, 0,
	687, 688, 696, 697, 698, 689, 690, 692, 699, 691,
	700, 701, 702, 703, 705, 704, 0, 707, 708, 706,
	709, 710, 711, 712, 0, 713, 853, 714, 693, 694,
	715, 716, 717, 0, 718, 719, 720, 721, 722, 723,
	724, 725, 726, 854, 0, 727, 0, 728, 729, 730,
	731, 732, 733, 735, 695, 736, 737, 738, 743, 744,
	745, 855, 739, 740, 741, 742, 747, 856, 748, 749,
	750, 751, 0, 752, 753, 0, 746, 734, 0, 754,
	755, 756, 757, 758, 759, 760, 761, 762, 763, 0,
	764, 857, 858, 859, 860, 0, 776, 0, 765, 767,
	768, 769, 770, 861, 771, 862, 0, 772, 773, 774,
	775, 766, 777, 778, 0, 0, 779, 780, 781, 782,
	784, 786, 787, 788, 783, 785, 789, 0, 790, 0,
	0, 791, 792, 793, 863, 864, 865, 0, 796, 797,
	794, 795, 798, 799, 802, 800, 801, 866, 805, 517,
	806, 807, 808, 803, 804, 0, 0, 0, 4046, 809,
	810, 867, 811, 812, 813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 0, 357, 6817, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 2463, 0, 370, 2470, 371, 2469, 0, 2478,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 2481, 2482, 0, 0, 383, 384,
	385, 386, 0, 0, 884, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 1488, 420, 422, 423, 2467, 424, 2466, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 1480, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 0, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 0, 0, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 2465, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	2476, 2477, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 0, 0, 0, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 0, 0, 0, 600,
	888, 498, 499, 500, 501, 4040, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 887, 4042, 513, 601, 514, 2460,
	2461, 0, 2456, 0, 515, 516, 519, 889, 0, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 0, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 0, 579, 0, 896, 595, 596, 597, 598, 0,
	0, 599, 2468, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 4041,
	897, 612, 898, 0, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 2453, 628, 629, 630, 2454, 631, 632, 633, 0,
	634, 0, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 2464,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 0, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 0, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 2462, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	2480, 739, 740, 741, 742, 747, 0, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	2472, 2473, 2474, 2475, 0, 776, 0, 765, 767, 768,
	769, 770, 0, 771, 0, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 0, 2471, 2479, 4043, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 0, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	0, 811, 812, 813, 0, 0, 339, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 4035, 814,
	0, 2449, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 4046, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 347, 348, 350, 349, 351, 352, 353, 354,
	0, 355, 356, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 358, 0, 357, 4502, 359, 360, 361, 883,
	362, 363, 364, 365, 366, 367, 368, 369, 0, 2463,
	0, 370, 2470, 371, 2469, 0, 2478, 372, 373, 374,
	375, 376, 377, 378, 379, 380, 381, 0, 0, 0,
	382, 2481, 2482, 0, 0, 383, 384, 385, 386, 0,
	0, 884, 0, 387, 388, 389, 390, 391, 392, 393,
	394, 0, 0, 396, 397, 398, 395, 399, 400, 0,
	401, 0, 402, 403, 404, 405, 406, 407, 408, 0,
	409, 410, 411, 885, 412, 413, 414, 0, 0, 0,
	0, 0, 0, 0, 415, 416, 417, 418, 419, 1488,
	420, 422, 423, 2467, 424, 2466, 0, 427, 429, 421,
	425, 0, 428, 426, 430, 431, 0, 432, 433, 434,
	435, 0, 0, 436, 1480, 438, 0, 439, 440, 442,
	441, 0, 443, 444, 445, 0, 446, 447, 0, 448,
	449, 450, 452, 454, 451, 453, 455, 456, 457, 458,
	459, 0, 0, 460, 461, 0, 342, 0, 0, 0,
	0, 0, 462, 463, 464, 2465, 0, 0, 0, 465,
	0, 467, 471, 472, 468, 469, 470, 473, 0, 466,
	474, 475, 0, 886, 476, 477, 478, 2476, 2477, 479,
	480, 481, 482, 483, 484, 485, 486, 487, 0, 488,
	489, 0, 0, 0, 490, 0, 491, 492, 493, 494,
	495, 496, 497, 0, 0, 0, 600, 888, 498, 499,
	500, 501, 4040, 502, 503, 504, 505, 506, 507, 508,
	0, 0, 0, 509, 510, 511, 512, 0, 0, 0,
	0, 887, 4042, 513, 601, 514, 2460, 2461, 0, 2456,
	0, 515, 516, 519, 889, 0, 890, 518, 520, 521,
	891, 522, 0, 0, 0, 523, 524, 525, 526, 527,
	528, 529, 0, 530, 532, 531, 0, 534, 0, 533,
	892, 535, 536, 893, 0, 537, 538, 539, 540, 541,
	542, 545, 0, 0, 543, 544, 546, 547, 0, 548,
	549, 551, 554, 550, 552, 553, 555, 556, 569, 570,
	557, 558, 559, 560, 561, 562, 563, 564, 565, 566,
	567, 568, 572, 0, 571, 894, 573, 574, 575, 576,
	577, 585, 587, 588, 583, 584, 586, 589, 590, 591,
	593, 594, 580, 581, 582, 895, 592, 578, 0, 579,
	0, 896, 595, 596, 597, 598, 0, 0, 599, 2468,
	602, 603, 0, 0, 604, 0, 605, 0, 0, 607,
	608, 609, 0, 0, 610, 611, 4041, 897, 612, 898,
	0, 613, 614, 606, 615, 616, 617, 618, 619, 620,
	621, 622, 623, 624, 625, 0, 626, 627, 2453, 628,
	629, 630, 2454, 631, 632, 633, 0, 634, 0, 635,
	636, 0, 637, 638, 639, 0, 640, 641, 642, 643,
	644, 645, 646, 647, 648, 649, 2464, 650, 651, 653,
	652, 654, 655, 0, 656, 0, 657, 658, 659, 0,
	0, 0, 0, 0, 660, 661, 663, 0, 664, 665,
	666, 667, 668, 662, 669, 670, 671, 672, 673, 674,
	675, 0, 677, 678, 676, 679, 680, 899, 681, 682,
	683, 684, 685, 0, 686, 0, 687, 688, 696, 697,
	698, 689, 690, 692, 699, 691, 700, 701, 702, 703,
	705, 704, 0, 707, 708, 706, 709, 710, 711, 712,
	0, 713, 0, 714, 693, 694, 715, 716, 717, 900,
	718, 719, 720, 721, 722, 723, 724, 725, 726, 2462,
	0, 727, 0, 728, 729, 730, 731, 732, 733, 735,
	695, 736, 737, 738, 743, 744, 745, 2480, 739, 740,
	741, 742, 747, 0, 748, 749, 750, 751, 0, 752,
	753, 0, 746, 734, 0, 754, 755, 756, 757, 758,
	759, 760, 761, 762, 763, 0, 764, 2472, 2473, 2474,
	2475, 0, 776, 0, 765, 767, 768, 769, 770, 0,
	771, 0, 0, 772, 773, 774, 775, 766, 777, 778,
	0, 0, 779, 780, 781, 782, 784, 786, 787, 788,
	783, 785, 789, 0, 790, 0, 0, 791, 792, 793,
	0, 2471, 2479, 4043, 796, 797, 794, 795, 798, 799,
	802, 800, 801, 0, 805, 517, 806, 807, 808, 803,
	804, 0, 0, 0, 339, 809, 810, 0, 811, 812,
	813, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 2449, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 339, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 350, 349, 351, 352, 353, 354, 0, 355,
	356, 0, 0, 0, 0, 0, 814, 0, 0, 0,
	358, 0, 357, 5293, 359, 360, 361, 0, 362, 363,
	364, 365, 366, 367, 368, 369, 815, 816, 0, 370,
	817, 371, 818, 0, 819, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 0, 0, 382, 820,
	821, 822, 0, 383, 384, 385, 386, 823, 0, 0,
	0, 387, 388, 389, 390, 391, 392, 393, 394, 0,
	0, 396, 397, 398, 395, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	411, 0, 412, 413, 414, 0, 0, 0, 0, 0,
	0, 0, 415, 416, 417, 418, 419, 0, 420, 422,
	423, 824, 424, 825, 0, 427, 429, 421, 425, 0,
	428, 426, 430, 431, 0, 432, 433, 434, 435, 0,
	0, 436, 437, 438, 0, 439, 440, 442, 441, 0,
	443, 444, 445, 0, 446, 447, 826, 448, 449, 450,
	452, 454, 451, 453, 455, 456, 457, 458, 459, 827,
	828, 460, 461, 0, 0, 0, 0, 0, 0, 0,
	462, 463, 464, 829, 0, 0, 0, 465, 0, 467,
	471, 472, 468, 469, 470, 473, 0, 466, 474, 475,
	0, 0, 476, 477, 478, 830, 831, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 0, 488, 489, 832,
	0, 833, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 834, 835, 836, 600, 0, 498, 499, 500, 501,
	0, 502, 503, 504, 505, 506, 507, 508, 0, 0,
	0, 509, 510, 511, 512, 0, 0, 0, 0, 0,
	837, 513, 601, 514, 838, 839, 0, 840, 0, 515,
	516, 519, 0, 841, 0, 518, 520, 521, 0, 522,
	0, 0, 0, 523, 524, 525, 526, 527, 528, 529,
	0, 530, 532, 531, 0, 534, 842, 533, 0, 535,
	536, 0, 0, 537, 538, 539, 540, 541, 542, 545,
	0, 0, 543, 544, 546, 547, 0, 548, 549, 551,
	554, 550, 552, 553, 555, 556, 569, 570, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	572, 0, 571, 0, 573, 574, 575, 576, 577, 585,
	587, 588, 583, 584, 586, 589, 590, 591, 593, 594,
	580, 581, 582, 0, 592, 578, 0, 579, 0, 0,
	595, 596, 597, 598, 0, 843, 599, 844, 602, 603,
	0, 0, 604, 0, 605, 0, 0, 607, 608, 609,
	0, 0, 610, 611, 845, 0, 612, 0, 846, 613,
	614, 606, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 0, 626, 627, 847, 628, 629, 630,
	848, 631, 632, 633, 849, 634, 850, 635, 636, 0,
	637, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 851, 650, 651, 653, 652, 654,
	655, 0, 656, 0, 657, 658, 659, 0, 0, 0,
	0, 0, 660, 661, 663, 0, 664, 665, 666, 667,
	668, 662, 669, 670, 671, 672, 673, 674, 675, 0,
	677, 678, 676, 679, 680, 0, 681, 682, 683, 684,
	685, 852, 686, 0, 687, 688, 696, 697, 698, 689,
	690, 692, 699, 691, 700, 701, 702, 703, 705, 704,
	0, 707, 708, 706, 709, 710, 711, 712, 0, 713,
	853, 714, 693, 694, 715, 716, 717, 0, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 854, 0, 727,
	0, 728, 729, 730, 731, 732, 733, 735, 695, 736,
	737, 738, 743, 744, 745, 855, 739, 740, 741, 742,
	747, 856, 748, 749, 750, 751, 0, 752, 753, 0,
	746, 734, 0, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 0, 764, 857, 858, 859, 860, 0,
	776, 0, 765, 767, 768, 769, 770, 861, 771, 862,
	0, 772, 773, 774, 775, 766, 777, 778, 0, 0,
	779, 780, 781, 782, 784, 786, 787, 788, 783, 785,
	789, 0, 790, 0, 0, 791, 792, 793, 863, 864,
	865, 0, 796, 797, 794, 795, 798, 799, 802, 800,
	801, 866, 805, 517, 806, 807, 808, 803, 804, 0,
	1255, 0, 1146, 809, 810, 867, 811, 812, 813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 2992, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 1153, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 1252,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 1254, 0, 746,
	734, 1151, 754, 755, 756, 757, 758, 1155, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	1154, 805, 517, 806, 807, 808, 803, 804, 2430, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 5434, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 1158, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	2437, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 2438, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 2439, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 2440,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 5433, 691, 700,
	701, 702, 703, 705, 704, 0, 2434, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 2436, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 5432, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 5103, 0, 1146, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 350, 349, 351, 352,
	353, 354, 0, 355, 356, 0, 0, 0, 0, 1158,
	814, 0, 0, 0, 358, 0, 357, 0, 359, 360,
	361, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	815, 816, 0, 370, 817, 371, 818, 0, 819, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	0, 0, 382, 820, 821, 822, 0, 383, 384, 385,
	386, 823, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 393, 394, 0, 0, 396, 397, 398, 395, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 414, 0,
	0, 0, 0, 0, 0, 0, 415, 416, 417, 1153,
	419, 0, 420, 422, 423, 824, 424, 825, 0, 427,
	429, 421, 425, 0, 428, 426, 430, 431, 0, 432,
	433, 434, 435, 0, 0, 436, 437, 438, 0, 439,
	440, 442, 441, 0, 443, 444, 445, 0, 446, 447,
	826, 448, 449, 450, 452, 454, 451, 453, 455, 456,
	457, 458, 459, 827, 828, 460, 461, 0, 342, 0,
	0, 0, 0, 0, 462, 463, 464, 829, 0, 0,
	0, 465, 0, 467, 471, 472, 468, 469, 470, 473,
	0, 466, 474, 475, 0, 0, 476, 477, 478, 830,
	831, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	0, 488, 489, 832, 0, 833, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 834, 835, 836, 600, 0,
	498, 499, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 0, 0, 0, 509, 510, 511, 512, 0,
	344, 343, 345, 0, 837, 513, 601, 514, 838, 839,
	0, 840, 0, 515, 516, 519, 0, 841, 0, 518,
	520, 521, 0, 522, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 0, 530, 532, 531, 0, 534,
	842, 533, 0, 535, 536, 0, 0, 537, 538, 539,
	540, 541, 542, 545, 0, 0, 543, 544, 546, 547,
	0, 548, 549, 551, 554, 550, 552, 553, 555, 556,
	569, 570, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 572, 0, 571, 0, 573, 574,
	575, 576, 577, 585, 587, 588, 583, 584, 586, 589,
	590, 591, 593, 594, 580, 581, 582, 0, 592, 578,
	0, 579, 346, 0, 595, 596, 597, 598, 0, 843,
	599, 844, 602, 603, 0, 0, 604, 0, 605, 0,
	0, 607, 608, 609, 0, 0, 610, 611, 845, 0,
	612, 0, 846, 613, 614, 606, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 0, 626, 627,
	847, 628, 629, 630, 848, 631, 632, 633, 849, 634,
	850, 635, 636, 0, 637, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 851, 650,
	651, 653, 652, 654, 655, 0, 656, 0, 657, 658,
	659, 0, 0, 0, 0, 0, 660, 661, 663, 0,
	664, 665, 666, 667, 668, 662, 669, 670, 671, 672,
	673, 674, 675, 0, 677, 678, 676, 679, 680, 0,
	681, 682, 683, 684, 685, 852, 686, 0, 687, 688,
	696, 697, 698, 689, 690, 692, 699, 691, 700, 701,
	702, 703, 705, 704, 0, 707, 708, 706, 709, 710,
	711, 712, 0, 713, 853, 714, 693, 694, 715, 716,
	717, 0, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 854, 0, 727, 0, 728, 729, 730, 731, 732,
	733, 735, 695, 736, 737, 738, 743, 744, 745, 855,
	739, 740, 741, 742, 747, 856, 748, 749, 750, 751,
	0, 752, 753, 0, 746, 734, 1151, 754, 755, 756,
	757, 758, 1155, 760, 761, 762, 763, 0, 764, 857,
	858, 859, 860, 0, 776, 0, 765, 767, 768, 769,
	770, 861, 771, 862, 0, 772, 773, 774, 775, 766,
	777, 778, 0, 0, 779, 780, 781, 782, 784, 786,
	787, 788, 783, 785, 789, 0, 790, 0, 0, 791,
	792, 793, 863, 864, 865, 0, 796, 797, 794, 795,
	798, 799, 802, 800, 801, 1154, 805, 517, 806, 807,
	808, 803, 804, 2457, 0, 0, 0, 809, 810, 867,
	811, 812, 813, 0, 0, 0, 0, 0, 0, 0,
	347, 348, 350, 349, 351, 352, 353, 354, 0, 355,
	356, 0, 0, 0, 0, 0, 0, 0, 1158, 0,
	358, 0, 357, 0, 359, 360, 361, 883, 362, 363,
	364, 365, 366, 367, 368, 369, 0, 2463, 0, 370,
	2470, 371, 2469, 0, 2478, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 0, 0, 0, 382, 2481,
	2482, 0, 0, 383, 384, 385, 386, 0, 0, 884,
	0, 387, 388, 389, 390, 391, 392, 393, 394, 0,
	0, 396, 397, 398, 395, 399, 400, 0, 401, 0,
	402, 403, 404, 405, 406, 407, 408, 0, 409, 410,
	411, 885, 412, 413, 414, 0, 0, 0, 0, 0,
	0, 0, 415, 416, 417, 418, 419, 1488, 420, 422,
	423, 2467, 424, 2466, 0, 427, 429, 421, 425, 0,
	428, 426, 430, 431, 0, 432, 433, 434, 435, 0,
	0, 436, 1480, 438, 0, 439, 440, 442, 441, 0,
	443, 444, 445, 0, 446, 447, 0, 448, 449, 450,
	452, 454, 451, 453, 455, 456, 457, 458, 459, 0,
	0, 460, 461, 0, 0, 0, 0, 0, 0, 0,
	462, 463, 464, 2465, 0, 0, 0, 465, 0, 467,
	471, 472, 468, 469, 470, 473, 0, 466, 474, 475,
	0, 886, 476, 477, 478, 2476, 2477, 479, 480, 481,
	482, 483, 484, 485, 486, 487, 0, 488, 489, 0,
	0, 0, 490, 0, 491, 492, 493, 494, 495, 496,
	497, 0, 0, 0, 600, 888, 498, 499, 500, 501,
	4040, 502, 503, 504, 505, 506, 507, 508, 0, 0,
	0, 509, 510, 511, 512, 0, 0, 0, 0, 887,
	4042, 513, 601, 514, 2460, 2461, 0, 2456, 0, 515,
	516, 519, 889, 0, 890, 518, 520, 521, 891, 522,
	0, 0, 0, 523, 524, 525, 526, 527, 528, 529,
	0, 530, 532, 531, 0, 534, 0, 533, 892, 535,
	536, 893, 0, 537, 538, 539, 540, 541, 542, 545,
	0, 0, 543, 544, 546, 547, 0, 548, 549, 551,
	554, 550, 552, 553, 555, 556, 569, 570, 557, 558,
	559, 560, 561, 562, 563, 564, 565, 566, 567, 568,
	572, 0, 571, 894, 573, 574, 575, 576, 577, 585,
	587, 588, 583, 584, 586, 589, 590, 591, 593, 594,
	580, 581, 582, 895, 592, 578, 0, 579, 0, 896,
	595, 596, 597, 598, 0, 0, 599, 2468, 602, 603,
	0, 0, 604, 0, 605, 0, 0, 607, 608, 609,
	0, 0, 610, 611, 4041, 897, 612, 898, 0, 613,
	614, 606, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 0, 626, 627, 2453, 628, 629, 630,
	2454, 631, 632, 633, 0, 634, 0, 635, 636, 0,
	637, 638, 639, 0, 640, 641, 642, 643, 644, 645,
	646, 647, 648, 649, 2464, 650, 651, 653, 652, 654,
	655, 0, 656, 0, 657, 658, 659, 0, 0, 0,
	0, 0, 660, 661, 663, 0, 664, 665, 666, 667,
	668, 662, 669, 670, 671, 672, 673, 674, 675, 0,
	677, 678, 676, 679, 680, 899, 681, 682, 683, 684,
	685, 0, 686, 0, 687, 688, 696, 697, 698, 689,
	690, 692, 699, 691, 700, 701, 702, 703, 705, 704,
	0, 707, 708, 706, 709, 710, 711, 712, 0, 713,
	0, 714, 693, 694, 715, 716, 717, 900, 718, 719,
	720, 721, 722, 723, 724, 725, 726, 2462, 0, 727,
	0, 728, 729, 730, 731, 732, 733, 735, 695, 736,
	737, 738, 743, 744, 745, 2480, 739, 740, 741, 742,
	747, 0, 748, 749, 750, 751, 0, 752, 753, 0,
	746, 734, 0, 754, 755, 756, 757, 758, 759, 760,
	761, 762, 763, 0, 764, 2472, 2473, 2474, 2475, 0,
	776, 0, 765, 767, 768, 769, 770, 0, 771, 0,
	0, 772, 773, 774, 775, 766, 777, 778, 0, 0,
	779, 780, 781, 782, 784, 786, 787, 788, 783, 785,
	789, 0, 790, 0, 0, 791, 792, 793, 0, 2471,
	2479, 4043, 796, 797, 794, 795, 798, 799, 802, 800,
	801, 0, 805, 517, 806, 807, 808, 803, 804, 0,
	0, 0, 2430, 809, 810, 0, 811, 812, 813, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 2486, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 2449, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 2437, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 2438, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 2439, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 2440, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 2485, 691, 700, 701, 702, 703, 705, 704, 0,
	2487, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 2436, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 2484, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 2430, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 2429, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 1158, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	2437, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 2438, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 2439, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 2440,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 2428, 691, 700,
	701, 702, 703, 705, 704, 0, 2434, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 2436, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 2427, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 1144, 0, 1146, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 350, 349, 351, 352,
	353, 354, 0, 355, 356, 0, 0, 0, 0, 1158,
	814, 0, 0, 0, 358, 0, 357, 0, 359, 360,
	361, 0, 362, 363, 364, 365, 366, 367, 368, 369,
	815, 816, 0, 370, 817, 371, 818, 0, 819, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	0, 0, 382, 820, 821, 822, 0, 383, 384, 385,
	386, 823, 0, 0, 0, 387, 388, 389, 390, 391,
	392, 393, 394, 0, 0, 396, 397, 398, 395, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 411, 0, 412, 413, 414, 0,
	0, 0, 0, 0, 0, 0, 415, 416, 417, 1153,
	419, 0, 420, 422, 423, 824, 424, 825, 0, 427,
	429, 421, 425, 0, 428, 426, 430, 431, 0, 432,
	433, 434, 435, 0, 0, 436, 437, 438, 0, 439,
	440, 442, 441, 0, 443, 444, 445, 0, 446, 447,
	826, 448, 449, 450, 452, 454, 451, 453, 455, 456,
	457, 458, 459, 827, 828, 460, 461, 0, 342, 0,
	0, 0, 0, 0, 462, 463, 464, 829, 0, 0,
	0, 465, 0, 467, 471, 472, 468, 469, 470, 473,
	0, 466, 474, 475, 0, 0, 476, 477, 478, 830,
	831, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	0, 488, 489, 832, 0, 833, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 834, 835, 836, 600, 0,
	498, 499, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 0, 0, 0, 509, 510, 511, 512, 0,
	344, 343, 345, 0, 837, 513, 601, 514, 838, 839,
	0, 840, 0, 515, 516, 519, 0, 841, 0, 518,
	520, 521, 0, 522, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 0, 530, 532, 531, 0, 534,
	842, 533, 0, 535, 536, 0, 0, 537, 538, 539,
	540, 541, 542, 545, 0, 0, 543, 544, 546, 547,
	0, 548, 549, 551, 554, 550, 552, 553, 555, 556,
	569, 570, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 572, 0, 571, 0, 573, 574,
	575, 576, 577, 585, 587, 588, 583, 584, 586, 589,
	590, 591, 593, 594, 580, 581, 582, 0, 592, 578,
	0, 579, 346, 0, 595, 596, 597, 598, 0, 843,
	599, 844, 602, 603, 0, 0, 604, 0, 605, 0,
	0, 607, 608, 609, 0, 0, 610, 611, 845, 0,
	612, 0, 846, 613, 614, 606, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 0, 626, 627,
	847, 628, 629, 630, 848, 631, 632, 633, 849, 634,
	850, 635, 636, 0, 637, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 851, 650,
	651, 653, 652, 654, 655, 0, 656, 0, 657, 658,
	659, 0, 0, 0, 0, 0, 660, 661, 663, 0,
	664, 665, 666, 667, 668, 662, 669, 670, 671, 672,
	673, 674, 675, 0, 677, 678, 676, 679, 680, 0,
	681, 682, 683, 684, 685, 852, 686, 0, 687, 688,
	696, 697, 698, 689, 690, 692, 699, 691, 700, 701,
	702, 703, 705, 704, 0, 707, 708, 706, 709, 710,
	711, 712, 0, 713, 853, 714, 693, 694, 715, 716,
	717, 0, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 854, 0, 727, 0, 728, 729, 730, 731, 732,
	733, 735, 695, 736, 737, 738, 743, 744, 745, 855,
	739, 740, 741, 742, 747, 856, 748, 749, 750, 751,
	0, 752, 753, 0, 746, 734, 1151, 754, 755, 756,
	757, 758, 1155, 760, 761, 762, 763, 0, 764, 857,
	858, 859, 860, 0, 776, 0, 765, 767, 768, 769,
	770, 861, 771, 862, 0, 772, 773, 774, 775, 766,
	777, 778, 0, 0, 779, 780, 781, 782, 784, 786,
	787, 788, 783, 785, 789, 0, 790, 0, 0, 791,
	792, 793, 863, 864, 865, 0, 796, 797, 794, 795,
	798, 799, 802, 800, 801, 1154, 805, 517, 806, 807,
	808, 803, 804, 0, 4026, 0, 339, 809, 810, 867,
	811, 812, 813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 1158, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 344,
	343, 345, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 346, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 2430, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 1158, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 2437, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 2438, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 2439, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 2440, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 2635, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 2636, 691, 700, 701, 702, 703, 705, 704, 0,
	2434, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 2436, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 2637, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 1158, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 1158,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	4046, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 0, 0, 1035, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 2463, 0, 370, 2470, 371, 2469,
	0, 2478, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 2481, 2482, 0, 0,
	383, 384, 385, 386, 0, 0, 884, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 1488, 420, 422, 423, 2467, 424,
	2466, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 1480,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 0, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 0, 0, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	2465, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 2476, 2477, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 0, 0, 0, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 0, 0,
	0, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 887, 0, 513, 601,
	514, 2460, 2461, 0, 2456, 0, 515, 516, 519, 889,
	0, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 0, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 0, 579, 0, 896, 595, 596, 597,
	598, 0, 0, 599, 2468, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 0, 897, 612, 898, 0, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 2453, 628, 629, 630, 2454, 631, 632,
	633, 0, 634, 0, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 2464, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 0, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 0, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 2462, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 2480, 739, 740, 741, 742, 747, 0, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 2472, 2473, 2474, 2475, 0, 776, 0, 765,
	767, 768, 769, 770, 0, 771, 0, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 0, 2471, 2479, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 0, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 0, 811, 812, 813, 0, 2457, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 347, 348, 350, 349, 351, 352,
	353, 354, 0, 355, 356, 0, 0, 0, 0, 0,
	0, 0, 0, 2449, 358, 0, 357, 0, 359, 360,
	361, 883, 362, 363, 364, 365, 366, 367, 368, 369,
	0, 2463, 0, 370, 2470, 371, 2469, 0, 2478, 372,
	373, 374, 375, 376, 377, 378, 379, 380, 381, 0,
	0, 0, 382, 2481, 2482, 0, 0, 383, 384, 385,
	386, 0, 0, 884, 0, 387, 388, 389, 390, 391,
	392, 393, 394, 0, 0, 396, 397, 398, 395, 399,
	400, 0, 401, 0, 402, 403, 404, 405, 406, 407,
	408, 0, 409, 410, 411, 885, 412, 413, 414, 0,
	0, 0, 0, 0, 0, 0, 415, 416, 417, 418,
	419, 1488, 420, 422, 423, 2467, 424, 2466, 0, 427,
	429, 421, 425, 0, 428, 426, 430, 431, 0, 432,
	433, 434, 435, 0, 0, 436, 1480, 438, 0, 439,
	440, 442, 441, 0, 443, 444, 445, 0, 446, 447,
	0, 448, 449, 450, 452, 454, 451, 453, 455, 456,
	457, 458, 459, 0, 0, 460, 461, 0, 0, 0,
	0, 0, 0, 0, 462, 463, 464, 2465, 0, 0,
	0, 465, 0, 467, 471, 472, 468, 469, 470, 473,
	0, 466, 474, 475, 0, 886, 476, 477, 478, 2476,
	2477, 479, 480, 481, 482, 483, 484, 485, 486, 487,
	0, 488, 489, 0, 0, 0, 490, 0, 491, 492,
	493, 494, 495, 496, 497, 0, 0, 0, 600, 888,
	498, 499, 500, 501, 0, 502, 503, 504, 505, 506,
	507, 508, 0, 0, 0, 509, 510, 511, 512, 0,
	0, 0, 0, 887, 0, 513, 601, 514, 2460, 2461,
	0, 2456, 0, 515, 516, 519, 889, 0, 890, 518,
	520, 521, 891, 522, 0, 0, 0, 523, 524, 525,
	526, 527, 528, 529, 0, 530, 532, 531, 0, 534,
	0, 533, 892, 535, 536, 893, 0, 537, 538, 539,
	540, 541, 542, 545, 0, 0, 543, 544, 546, 547,
	0, 548, 549, 551, 554, 550, 552, 553, 555, 556,
	569, 570, 557, 558, 559, 560, 561, 562, 563, 564,
	565, 566, 567, 568, 572, 0, 571, 894, 573, 574,
	575, 576, 577, 585, 587, 588, 583, 584, 586, 589,
	590, 591, 593, 594, 580, 581, 582, 895, 592, 578,
	0, 579, 0, 896, 595, 596, 597, 598, 0, 0,
	599, 2468, 602, 603, 0, 0, 604, 0, 605, 0,
	0, 607, 608, 609, 0, 0, 610, 611, 0, 897,
	612, 898, 0, 613, 614, 606, 615, 616, 617, 618,
	619, 620, 621, 622, 623, 624, 625, 0, 626, 627,
	2453, 628, 629, 630, 2454, 631, 632, 633, 0, 634,
	0, 635, 636, 0, 637, 638, 639, 0, 640, 641,
	642, 643, 644, 645, 646, 647, 648, 649, 2464, 650,
	651, 653, 652, 654, 655, 0, 656, 0, 657, 658,
	659, 0, 0, 0, 0, 0, 660, 661, 663, 0,
	664, 665, 666, 667, 668, 662, 669, 670, 671, 672,
	673, 674, 675, 0, 677, 678, 676, 679, 680, 899,
	681, 682, 683, 684, 685, 0, 686, 0, 687, 688,
	696, 697, 698, 689, 690, 692, 699, 691, 700, 701,
	702, 703, 705, 704, 0, 707, 708, 706, 709, 710,
	711, 712, 0, 713, 0, 714, 693, 694, 715, 716,
	717, 900, 718, 719, 720, 721, 722, 723, 724, 725,
	726, 2462, 0, 727, 0, 728, 729, 730, 731, 732,
	733, 735, 695, 736, 737, 738, 743, 744, 745, 2480,
	739, 740, 741, 742, 747, 0, 748, 749, 750, 751,
	0, 752, 753, 0, 746, 734, 0, 754, 755, 756,
	757, 758, 759, 760, 761, 762, 763, 0, 764, 2472,
	2473, 2474, 2475, 0, 776, 0, 765, 767, 768, 769,
	770, 0, 771, 0, 0, 772, 773, 774, 775, 766,
	777, 778, 0, 0, 779, 780, 781, 782, 784, 786,
	787, 788, 783, 785, 789, 0, 790, 0, 0, 791,
	792, 793, 0, 2471, 2479, 0, 796, 797, 794, 795,
	798, 799, 802, 800, 801, 0, 805, 517, 806, 807,
	808, 803, 804, 0, 0, 0, 339, 809, 810, 0,
	811, 812, 813, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	2449, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1743, 1742, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 5471, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 884, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 887, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 889, 841, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 0, 579, 0, 896, 595,
	596, 597, 598, 5619, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 1743, 1742,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 884, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 887, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 889, 841, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 0, 579, 0, 896, 595, 596, 597, 598, 5081,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 4181, 0, 1743, 1742, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 884, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 887, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 889, 841, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 0,
	579, 0, 896, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 2923, 0, 1743, 1742, 0, 0, 0, 0,
	1740, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	884, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 2047, 835, 836, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	887, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 889, 841, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 0, 579, 0,
	896, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	0, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	2495, 0, 1743, 1742, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 884, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 887, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 889, 841, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 0, 579, 0, 896, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 0, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 2044, 0,
	1743, 1742, 0, 0, 0, 0, 1740, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 883, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 884, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 885, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 886, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 2047, 835,
	836, 600, 888, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 887, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 889,
	841, 890, 518, 520, 521, 891, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 892, 535, 536, 893, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	894, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	895, 592, 578, 0, 579, 0, 896, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 897, 612, 898, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 899, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 900, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 1994, 0, 1743, 1742,
	0, 0, 0, 0, 1740, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 884, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 887, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 889, 841, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 0, 579, 0, 896, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 1992, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 0, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 1738, 0, 1743, 1742, 0, 0,
	0, 0, 1740, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	883, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 884, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 1737, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 885, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 342, 0, 0,
	0, 0, 0, 1734, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 886, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 888, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 887, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 889, 841, 890, 518, 520,
	521, 891, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 892, 535, 536, 893, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 894, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 895, 592, 578, 0,
	579, 0, 896, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 897, 612,
	898, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 1735, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 899, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 1733, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	900, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 1736,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 0, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 1743, 1742, 0, 0, 0, 0, 1740, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 883, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 884, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	885, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	886, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 888, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 887, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 889, 841, 890, 518, 520, 521, 891, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 892, 535, 536,
	893, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 894, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 895, 592, 578, 0, 579, 0, 896, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 897, 612, 898, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 899, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 900, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 1743, 1742,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 883, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 884, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 885, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 886, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	888, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 887, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 889, 841, 890,
	518, 520, 521, 891, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 892, 535, 536, 893, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 894, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 895, 592,
	578, 0, 579, 0, 896, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	897, 612, 898, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	899, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 900, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 1743, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 883, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	884, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 885, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 886, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 888, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	887, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 889, 841, 890, 518, 520, 521, 891,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 892,
	535, 536, 893, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 894, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 895, 592, 578, 0, 579, 0,
	896, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 897, 612, 898, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 899, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 900, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 4219,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 5134, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 4223, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 5133, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 4222, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 5129, 5130, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 5132, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 5128, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 4221, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 5131, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 1841, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 1840, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	1835, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 1843, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 1838, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 1836, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 1839,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 1842, 690, 692, 699, 691, 700,
	701, 702, 703, 1837, 704, 0, 1834, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 1832, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 1833, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 1967, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1969, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 344,
	343, 345, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 346, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 1538,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 1964, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1966, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 1538, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	1872, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1874, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 1538, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 1538, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 4967, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	4468, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	4467, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 4219, 383, 384,
	385, 386, 823, 0, 0, 4213, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 4215, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 4223,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 4222, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 4212, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 4221, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 4220, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 3012, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 344,
	343, 345, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 346, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 2957, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 2956, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	2941, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	2943, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 2933, 0,
	339, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 344, 343, 345, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 346, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 2930, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 2900, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 1538, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	2096, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	2095, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 1991, 0,
	339, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 344, 343, 345, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 346, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 1984, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1986, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 1974, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 344,
	343, 345, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 346, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 1972, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	1633, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1632, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 1622, 0,
	339, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1621, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 344, 343, 345, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 346, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 1618, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 1617, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 1612, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 1611, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 344,
	343, 345, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 346, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 1591, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1590, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	1586, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1585, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 869, 0,
	339, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 344, 343, 345, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 346, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 330, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 2963, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 344, 343, 345, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 346, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 339, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 2645, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 342, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 344,
	343, 345, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 346, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 339, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 2643, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 342, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 344, 343, 345, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 346, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	2641, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 342,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 344, 343, 345, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 346, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 342, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 2521, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 344, 343, 345,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 346,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 342, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 2515, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 344, 343, 345, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 346, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 934, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	932, 353, 354, 921, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 924, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 930, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 926, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 933, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 920, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 921, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	924, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 925,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 926, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 919, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 339, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 921, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 924, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 925, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 926,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 921, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 924, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 5629, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 926, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 921,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 924, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 925, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 926, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 4028,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 924, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 925, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 926, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 1239, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 1238, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 1237, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 1028, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 1017, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 1026, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 1019, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 1025, 475, 1021, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 1022, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 1020, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	1023, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 1024, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 1018, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 1011, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 1017, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 1026, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 1019, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 1025,
	475, 1021, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 1022, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	1020, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 1023, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 1024, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 1018, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 4995, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 6461, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 339, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 5133, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 6063, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 339, 4995, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 5896, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 1667, 0,
	339, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 1670, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 1668, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 999,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 998, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 997,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 1671, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 995, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 1667, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 1670, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 1668, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 999, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 998, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 997, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 1671, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	995, 858, 859, 860, 0, 776, 0, 765, 1669, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 1006, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 1004, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 910, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 909,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 908, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 4995, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 339, 4355, 0, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 339, 4907, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 5537,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 3951,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 3943, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 339, 4995, 0, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 4998, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 339, 4995, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	4993, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 4355,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 4460, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	2826, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 998, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 997, 691, 700, 701, 702, 703, 4302,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 995, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	3010, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 2611, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 2153, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 2145, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	989, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 985, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 990, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 999, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 998, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 997, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 2130, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 995, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 2102, 0,
	339, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 2101, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 2085, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 2083, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 2077, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 2054, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 2052, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	2042, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 2004, 0,
	339, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 1976, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 1673, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 998,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 997, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 995, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 1643, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1642, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	1629, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	1628, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 1567, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 1009, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 989, 0, 339, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 985, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 984,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 990,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 999, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 998, 682, 683,
	684, 685, 986, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 997, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 987, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 995, 858, 859, 860,
	0, 776, 0, 765, 991, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	978, 0, 339, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 979, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 936, 0,
	339, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 928, 0, 339, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 905, 0, 339, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 339, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 5167, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 834, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 998, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 997, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 995, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 5029, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 339, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 4932, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 339, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	4930, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 713, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 4918, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 4915, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 4479, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 339, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 686, 0, 687, 688, 979,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 339, 0, 0, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 814, 0, 2982, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 815, 816, 0, 370, 817,
	371, 818, 0, 819, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 820, 821,
	822, 0, 383, 384, 385, 386, 823, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	0, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	824, 424, 825, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 826, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 827, 828,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 829, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 830, 831, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 832, 0,
	833, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	834, 835, 836, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 837,
	513, 601, 514, 838, 839, 0, 840, 0, 515, 516,
	519, 0, 841, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 842, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 843, 599, 844, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 845, 0, 612, 0, 846, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 847, 628, 629, 630, 848,
	631, 632, 633, 849, 634, 850, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 851, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	852, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 0, 0, 853,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 854, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 855, 739, 740, 741, 742, 747,
	856, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 857, 858, 859, 860, 0, 776,
	0, 765, 767, 768, 769, 770, 861, 771, 862, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 863, 864, 865,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	866, 805, 517, 806, 807, 808, 803, 804, 339, 0,
	0, 0, 809, 810, 867, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 814, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 815, 816, 0, 370, 817, 371, 818, 0, 819,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 820, 821, 822, 0, 383, 384,
	385, 386, 823, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 0, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 824, 424, 825, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 826, 448, 2654, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 827, 828, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 829, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	830, 831, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 832, 0, 833, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 834, 835, 836, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 837, 513, 601, 514, 838,
	839, 0, 840, 0, 515, 516, 519, 0, 841, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 842, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	843, 599, 844, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 845,
	0, 612, 0, 846, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 847, 628, 629, 630, 848, 631, 632, 633, 849,
	634, 850, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 851,
	650, 651, 1512, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 852, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 0, 713, 853, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 854, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	855, 739, 740, 741, 742, 747, 856, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	857, 858, 859, 860, 0, 776, 0, 765, 767, 768,
	769, 770, 861, 771, 862, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 863, 864, 865, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 866, 805, 517, 806,
	807, 808, 803, 804, 339, 0, 0, 0, 809, 810,
	867, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 814, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 815, 816, 0,
	370, 817, 371, 818, 0, 819, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	820, 821, 822, 0, 383, 384, 385, 386, 823, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 0, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 824, 424, 825, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 826, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	827, 828, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 829, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 830, 831, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	832, 0, 833, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 1598, 835, 836, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 837, 513, 601, 514, 838, 839, 0, 840, 0,
	515, 516, 519, 0, 841, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 842, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 843, 599, 844, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 845, 0, 612, 0, 846,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 847, 628, 629,
	630, 848, 631, 632, 633, 849, 634, 850, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 851, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 852, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 0,
	713, 853, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 854, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 855, 739, 740, 741,
	742, 747, 856, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 857, 858, 859, 860,
	0, 776, 0, 765, 767, 768, 769, 770, 861, 771,
	862, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 863,
	864, 865, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 866, 805, 517, 806, 807, 808, 803, 804,
	339, 0, 0, 0, 809, 810, 867, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 814, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 815, 816, 0, 370, 817, 371, 818,
	0, 819, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 820, 821, 822, 0,
	383, 384, 385, 386, 823, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 0, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 824, 424,
	825, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 826, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 827, 828, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	829, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 830, 831, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 832, 0, 833, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 834, 835,
	836, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 837, 513, 601,
	514, 838, 839, 0, 840, 0, 515, 516, 519, 0,
	841, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 842, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 843, 599, 844, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 845, 0, 612, 0, 846, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 847, 628, 629, 630, 848, 631, 632,
	633, 849, 634, 850, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 851, 650, 651, 1512, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 852, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 0, 713, 853, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 854, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 855, 739, 740, 741, 742, 747, 856, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 857, 858, 859, 860, 0, 776, 0, 765,
	767, 768, 769, 770, 861, 771, 862, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 863, 864, 865, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 866, 805,
	517, 806, 807, 808, 803, 804, 339, 0, 0, 0,
	809, 810, 867, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 814,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 815,
	816, 0, 370, 817, 371, 818, 0, 819, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 820, 821, 822, 0, 383, 384, 385, 386,
	823, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 0, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 824, 424, 825, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 826,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 827, 828, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 829, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 830, 831,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 832, 0, 833, 0, 0, 491, 492, 493,
	494, 495, 496, 497, 834, 835, 836, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 837, 513, 601, 514, 838, 839, 0,
	840, 0, 515, 516, 519, 0, 841, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 842,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 843, 599,
	844, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 845, 0, 612,
	0, 846, 613, 614, 606, 615, 616, 617, 0, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 847,
	628, 629, 630, 848, 631, 632, 633, 849, 634, 850,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 0, 648, 649, 851, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 852, 0, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 0, 713, 853, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	854, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 855, 739,
	740, 741, 742, 747, 856, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 857, 858,
	859, 860, 0, 776, 0, 765, 767, 768, 769, 770,
	861, 771, 862, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 863, 864, 865, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 866, 805, 517, 806, 807, 808,
	803, 804, 2091, 0, 1650, 0, 809, 810, 867, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 0,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	0, 0, 0, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 1652, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 0, 424, 0, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 0, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	0, 0, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	0, 0, 0, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 2090, 0, 0, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 0, 513, 601, 514, 0, 0, 0, 0, 0,
	515, 516, 519, 0, 0, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 0, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 0, 599, 0, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 0, 0, 612, 0, 0,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 0, 628, 629,
	630, 0, 631, 632, 633, 0, 634, 0, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 0, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 0, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1653,
	713, 0, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 0, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 0, 739, 740, 741,
	742, 747, 0, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 0, 0, 0, 0,
	0, 776, 0, 765, 767, 768, 769, 770, 0, 771,
	0, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 0,
	0, 0, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 0, 805, 517, 806, 807, 808, 803, 804,
	2007, 0, 1650, 0, 809, 810, 0, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 347,
	348, 350, 349, 351, 352, 353, 354, 0, 355, 356,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 358,
	0, 357, 0, 359, 360, 361, 0, 362, 363, 364,
	365, 366, 367, 368, 369, 0, 0, 0, 370, 0,
	371, 0, 0, 0, 372, 373, 374, 375, 376, 377,
	378, 379, 380, 381, 0, 0, 0, 382, 0, 0,
	0, 0, 383, 384, 385, 386, 0, 0, 0, 0,
	387, 388, 389, 390, 391, 392, 393, 394, 0, 0,
	396, 397, 398, 395, 399, 400, 0, 401, 0, 402,
	403, 404, 405, 406, 407, 408, 0, 409, 410, 411,
	0, 412, 413, 414, 0, 0, 0, 0, 0, 0,
	1652, 415, 416, 417, 418, 419, 0, 420, 422, 423,
	0, 424, 0, 0, 427, 429, 421, 425, 0, 428,
	426, 430, 431, 0, 432, 433, 434, 435, 0, 0,
	436, 437, 438, 0, 439, 440, 442, 441, 0, 443,
	444, 445, 0, 446, 447, 0, 448, 449, 450, 452,
	454, 451, 453, 455, 456, 457, 458, 459, 0, 0,
	460, 461, 0, 0, 0, 0, 0, 0, 0, 462,
	463, 464, 0, 0, 0, 0, 465, 0, 467, 471,
	472, 468, 469, 470, 473, 0, 466, 474, 475, 0,
	0, 476, 477, 478, 0, 0, 479, 480, 481, 482,
	483, 484, 485, 486, 487, 0, 488, 489, 0, 0,
	0, 490, 0, 491, 492, 493, 494, 495, 496, 497,
	2006, 0, 0, 600, 0, 498, 499, 500, 501, 0,
	502, 503, 504, 505, 506, 507, 508, 0, 0, 0,
	509, 510, 511, 512, 0, 0, 0, 0, 0, 0,
	513, 601, 514, 0, 0, 0, 0, 0, 515, 516,
	519, 0, 0, 0, 518, 520, 521, 0, 522, 0,
	0, 0, 523, 524, 525, 526, 527, 528, 529, 0,
	530, 532, 531, 0, 534, 0, 533, 0, 535, 536,
	0, 0, 537, 538, 539, 540, 541, 542, 545, 0,
	0, 543, 544, 546, 547, 0, 548, 549, 551, 554,
	550, 552, 553, 555, 556, 569, 570, 557, 558, 559,
	560, 561, 562, 563, 564, 565, 566, 567, 568, 572,
	0, 571, 0, 573, 574, 575, 576, 577, 585, 587,
	588, 583, 584, 586, 589, 590, 591, 593, 594, 580,
	581, 582, 0, 592, 578, 0, 579, 0, 0, 595,
	596, 597, 598, 0, 0, 599, 0, 602, 603, 0,
	0, 604, 0, 605, 0, 0, 607, 608, 609, 0,
	0, 610, 611, 0, 0, 612, 0, 0, 613, 614,
	606, 615, 616, 617, 618, 619, 620, 621, 622, 623,
	624, 625, 0, 626, 627, 0, 628, 629, 630, 0,
	631, 632, 633, 0, 634, 0, 635, 636, 0, 637,
	638, 639, 0, 640, 641, 642, 643, 644, 645, 646,
	647, 648, 649, 0, 650, 651, 653, 652, 654, 655,
	0, 656, 0, 657, 658, 659, 0, 0, 0, 0,
	0, 660, 661, 663, 0, 664, 665, 666, 667, 668,
	662, 669, 670, 671, 672, 673, 674, 675, 0, 677,
	678, 676, 679, 680, 0, 681, 682, 683, 684, 685,
	0, 686, 0, 687, 688, 696, 697, 698, 689, 690,
	692, 699, 691, 700, 701, 702, 703, 705, 704, 0,
	707, 708, 706, 709, 710, 711, 712, 1653, 713, 0,
	714, 693, 694, 715, 716, 717, 0, 718, 719, 720,
	721, 722, 723, 724, 725, 726, 0, 0, 727, 0,
	728, 729, 730, 731, 732, 733, 735, 695, 736, 737,
	738, 743, 744, 745, 0, 739, 740, 741, 742, 747,
	0, 748, 749, 750, 751, 0, 752, 753, 0, 746,
	734, 0, 754, 755, 756, 757, 758, 759, 760, 761,
	762, 763, 0, 764, 0, 0, 0, 0, 0, 776,
	0, 765, 767, 768, 769, 770, 0, 771, 0, 0,
	772, 773, 774, 775, 766, 777, 778, 0, 0, 779,
	780, 781, 782, 784, 786, 787, 788, 783, 785, 789,
	0, 790, 0, 0, 791, 792, 793, 0, 0, 0,
	0, 796, 797, 794, 795, 798, 799, 802, 800, 801,
	0, 805, 517, 806, 807, 808, 803, 804, 1648, 0,
	1650, 0, 809, 810, 0, 811, 812, 813, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 0, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 0, 0, 0, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 1652, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 0, 424,
	0, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 0, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 0, 0, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 0, 0, 0, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 1647, 0,
	0, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 513, 601,
	514, 0, 0, 0, 0, 0, 515, 516, 519, 0,
	0, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 0, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 0, 599, 0, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 0, 0, 612, 0, 0, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 0, 628, 629, 630, 0, 631, 632,
	633, 0, 634, 0, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 0, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 0, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1653, 713, 0, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 0, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 0, 739, 740, 741, 742, 747, 0, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 0, 0, 0, 0, 0, 776, 0, 765,
	767, 768, 769, 770, 0, 771, 0, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 0, 0, 0, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 0, 805,
	517, 806, 807, 808, 803, 804, 5468, 0, 1650, 0,
	809, 810, 0, 811, 812, 813, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 347, 348, 350, 349, 351,
	352, 353, 354, 0, 355, 356, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 358, 0, 357, 0, 359,
	360, 361, 0, 362, 363, 364, 365, 366, 367, 368,
	369, 0, 0, 0, 370, 0, 371, 0, 0, 0,
	372, 373, 374, 375, 376, 377, 378, 379, 380, 381,
	0, 0, 0, 382, 0, 0, 0, 0, 383, 384,
	385, 386, 0, 0, 0, 0, 387, 388, 389, 390,
	391, 392, 393, 394, 0, 0, 396, 397, 398, 395,
	399, 400, 0, 401, 0, 402, 403, 404, 405, 406,
	407, 408, 0, 409, 410, 411, 0, 412, 413, 414,
	0, 0, 0, 0, 0, 0, 1652, 415, 416, 417,
	418, 419, 0, 420, 422, 423, 0, 424, 0, 0,
	427, 429, 421, 425, 0, 428, 426, 430, 431, 0,
	432, 433, 434, 435, 0, 0, 436, 437, 438, 0,
	439, 440, 442, 441, 0, 443, 444, 445, 0, 446,
	447, 0, 448, 449, 450, 452, 454, 451, 453, 455,
	456, 457, 458, 459, 0, 0, 460, 461, 0, 0,
	0, 0, 0, 0, 0, 462, 463, 464, 0, 0,
	0, 0, 465, 0, 467, 471, 472, 468, 469, 470,
	473, 0, 466, 474, 475, 0, 0, 476, 477, 478,
	0, 0, 479, 480, 481, 482, 483, 484, 485, 486,
	487, 0, 488, 489, 0, 0, 0, 490, 0, 491,
	492, 493, 494, 495, 496, 497, 0, 0, 0, 600,
	0, 498, 499, 500, 501, 0, 502, 503, 504, 505,
	506, 507, 508, 0, 0, 0, 509, 510, 511, 512,
	0, 0, 0, 0, 0, 0, 513, 601, 514, 0,
	0, 0, 0, 0, 515, 516, 519, 0, 0, 0,
	518, 520, 521, 0, 522, 0, 0, 0, 523, 524,
	525, 526, 527, 528, 529, 0, 530, 532, 531, 0,
	534, 0, 533, 0, 535, 536, 0, 0, 537, 538,
	539, 540, 541, 542, 545, 0, 0, 543, 544, 546,
	547, 0, 548, 549, 551, 554, 550, 552, 553, 555,
	556, 569, 570, 557, 558, 559, 560, 561, 562, 563,
	564, 565, 566, 567, 568, 572, 0, 571, 0, 573,
	574, 575, 576, 577, 585, 587, 588, 583, 584, 586,
	589, 590, 591, 593, 594, 580, 581, 582, 0, 592,
	578, 0, 579, 0, 0, 595, 596, 597, 598, 0,
	0, 599, 0, 602, 603, 0, 0, 604, 0, 605,
	0, 0, 607, 608, 609, 0, 0, 610, 611, 0,
	0, 612, 0, 0, 613, 614, 606, 615, 616, 617,
	618, 619, 620, 621, 622, 623, 624, 625, 0, 626,
	627, 0, 628, 629, 630, 0, 631, 632, 633, 0,
	634, 0, 635, 636, 0, 637, 638, 639, 0, 640,
	641, 642, 643, 644, 645, 646, 647, 648, 649, 0,
	650, 651, 653, 652, 654, 655, 0, 656, 0, 657,
	658, 659, 0, 0, 0, 0, 0, 660, 661, 663,
	0, 664, 665, 666, 667, 668, 662, 669, 670, 671,
	672, 673, 674, 675, 0, 677, 678, 676, 679, 680,
	0, 681, 682, 683, 684, 685, 0, 686, 0, 687,
	688, 696, 697, 698, 689, 690, 692, 699, 691, 700,
	701, 702, 703, 705, 704, 0, 707, 708, 706, 709,
	710, 711, 712, 1653, 713, 0, 714, 693, 694, 715,
	716, 717, 0, 718, 719, 720, 721, 722, 723, 724,
	725, 726, 0, 0, 727, 0, 728, 729, 730, 731,
	732, 733, 735, 695, 736, 737, 738, 743, 744, 745,
	0, 739, 740, 741, 742, 747, 0, 748, 749, 750,
	751, 0, 752, 753, 0, 746, 734, 0, 754, 755,
	756, 757, 758, 759, 760, 761, 762, 763, 0, 764,
	0, 0, 0, 0, 0, 776, 0, 765, 767, 768,
	769, 770, 0, 771, 0, 0, 772, 773, 774, 775,
	766, 777, 778, 0, 0, 779, 780, 781, 782, 784,
	786, 787, 788, 783, 785, 789, 0, 790, 0, 0,
	791, 792, 793, 0, 0, 0, 0, 796, 797, 794,
	795, 798, 799, 802, 800, 801, 0, 805, 517, 806,
	807, 808, 803, 804, 2540, 0, 1650, 0, 809, 810,
	0, 811, 812, 813, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 347, 348, 350, 349, 351, 352, 353,
	354, 0, 355, 356, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 358, 0, 357, 0, 359, 360, 361,
	0, 362, 363, 364, 365, 366, 367, 368, 369, 0,
	0, 0, 370, 0, 371, 0, 0, 0, 372, 373,
	374, 375, 376, 377, 378, 379, 380, 381, 0, 0,
	0, 382, 0, 0, 0, 0, 383, 384, 385, 386,
	0, 0, 0, 0, 387, 388, 389, 390, 391, 392,
	393, 394, 0, 0, 396, 397, 398, 395, 399, 400,
	0, 401, 0, 402, 403, 404, 405, 406, 407, 408,
	0, 409, 410, 411, 0, 412, 413, 414, 0, 0,
	0, 0, 0, 0, 1652, 415, 416, 417, 418, 419,
	0, 420, 422, 423, 0, 424, 0, 0, 427, 429,
	421, 425, 0, 428, 426, 430, 431, 0, 432, 433,
	434, 435, 0, 0, 436, 437, 438, 0, 439, 440,
	442, 441, 0, 443, 444, 445, 0, 446, 447, 0,
	448, 449, 450, 452, 454, 451, 453, 455, 456, 457,
	458, 459, 0, 0, 460, 461, 0, 0, 0, 0,
	0, 0, 0, 462, 463, 464, 0, 0, 0, 0,
	465, 0, 467, 471, 472, 468, 469, 470, 473, 0,
	466, 474, 475, 0, 0, 476, 477, 478, 0, 0,
	479, 480, 481, 482, 483, 484, 485, 486, 487, 0,
	488, 489, 0, 0, 0, 490, 0, 491, 492, 493,
	494, 495, 496, 497, 0, 0, 0, 600, 0, 498,
	499, 500, 501, 0, 502, 503, 504, 505, 506, 507,
	508, 0, 0, 0, 509, 510, 511, 512, 0, 0,
	0, 0, 0, 0, 513, 601, 514, 0, 0, 0,
	0, 0, 515, 516, 519, 0, 0, 0, 518, 520,
	521, 0, 522, 0, 0, 0, 523, 524, 525, 526,
	527, 528, 529, 0, 530, 532, 531, 0, 534, 0,
	533, 0, 535, 536, 0, 0, 537, 538, 539, 540,
	541, 542, 545, 0, 0, 543, 544, 546, 547, 0,
	548, 549, 551, 554, 550, 552, 553, 555, 556, 569,
	570, 557, 558, 559, 560, 561, 562, 563, 564, 565,
	566, 567, 568, 572, 0, 571, 0, 573, 574, 575,
	576, 577, 585, 587, 588, 583, 584, 586, 589, 590,
	591, 593, 594, 580, 581, 582, 0, 592, 578, 0,
	579, 0, 0, 595, 596, 597, 598, 0, 0, 599,
	0, 602, 603, 0, 0, 604, 0, 605, 0, 0,
	607, 608, 609, 0, 0, 610, 611, 0, 0, 612,
	0, 0, 613, 614, 606, 615, 616, 617, 618, 619,
	620, 621, 622, 623, 624, 625, 0, 626, 627, 0,
	628, 629, 630, 0, 631, 632, 633, 0, 634, 0,
	635, 636, 0, 637, 638, 639, 0, 640, 641, 642,
	643, 644, 645, 646, 647, 648, 649, 0, 650, 651,
	653, 652, 654, 655, 0, 656, 0, 657, 658, 659,
	0, 0, 0, 0, 0, 660, 661, 663, 0, 664,
	665, 666, 667, 668, 662, 669, 670, 671, 672, 673,
	674, 675, 0, 677, 678, 676, 679, 680, 0, 681,
	682, 683, 684, 685, 0, 686, 0, 687, 688, 696,
	697, 698, 689, 690, 692, 699, 691, 700, 701, 702,
	703, 705, 704, 0, 707, 708, 706, 709, 710, 711,
	712, 1653, 713, 0, 714, 693, 694, 715, 716, 717,
	0, 718, 719, 720, 721, 722, 723, 724, 725, 726,
	0, 0, 727, 0, 728, 729, 730, 731, 732, 733,
	735, 695, 736, 737, 738, 743, 744, 745, 0, 739,
	740, 741, 742, 747, 0, 748, 749, 750, 751, 0,
	752, 753, 0, 746, 734, 0, 754, 755, 756, 757,
	758, 759, 760, 761, 762, 763, 0, 764, 0, 0,
	0, 0, 0, 776, 0, 765, 767, 768, 769, 770,
	0, 771, 0, 0, 772, 773, 774, 775, 766, 777,
	778, 0, 0, 779, 780, 781, 782, 784, 786, 787,
	788, 783, 785, 789, 0, 790, 0, 0, 791, 792,
	793, 0, 0, 0, 0, 796, 797, 794, 795, 798,
	799, 802, 800, 801, 0, 805, 517, 806, 807, 808,
	803, 804, 2493, 0, 1650, 0, 809, 810, 0, 811,
	812, 813, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 347, 348, 350, 349, 351, 352, 353, 354, 0,
	355, 356, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 358, 0, 357, 0, 359, 360, 361, 0, 362,
	363, 364, 365, 366, 367, 368, 369, 0, 0, 0,
	370, 0, 371, 0, 0, 0, 372, 373, 374, 375,
	376, 377, 378, 379, 380, 381, 0, 0, 0, 382,
	0, 0, 0, 0, 383, 384, 385, 386, 0, 0,
	0, 0, 387, 388, 389, 390, 391, 392, 393, 394,
	0, 0, 396, 397, 398, 395, 399, 400, 0, 401,
	0, 402, 403, 404, 405, 406, 407, 408, 0, 409,
	410, 411, 0, 412, 413, 414, 0, 0, 0, 0,
	0, 0, 1652, 415, 416, 417, 418, 419, 0, 420,
	422, 423, 0, 424, 0, 0, 427, 429, 421, 425,
	0, 428, 426, 430, 431, 0, 432, 433, 434, 435,
	0, 0, 436, 437, 438, 0, 439, 440, 442, 441,
	0, 443, 444, 445, 0, 446, 447, 0, 448, 449,
	450, 452, 454, 451, 453, 455, 456, 457, 458, 459,
	0, 0, 460, 461, 0, 0, 0, 0, 0, 0,
	0, 462, 463, 464, 0, 0, 0, 0, 465, 0,
	467, 471, 472, 468, 469, 470, 473, 0, 466, 474,
	475, 0, 0, 476, 477, 478, 0, 0, 479, 480,
	481, 482, 483, 484, 485, 486, 487, 0, 488, 489,
	0, 0, 0, 490, 0, 491, 492, 493, 494, 495,
	496, 497, 0, 0, 0, 600, 0, 498, 499, 500,
	501, 0, 502, 503, 504, 505, 506, 507, 508, 0,
	0, 0, 509, 510, 511, 512, 0, 0, 0, 0,
	0, 0, 513, 601, 514, 0, 0, 0, 0, 0,
	515, 516, 519, 0, 0, 0, 518, 520, 521, 0,
	522, 0, 0, 0, 523, 524, 525, 526, 527, 528,
	529, 0, 530, 532, 531, 0, 534, 0, 533, 0,
	535, 536, 0, 0, 537, 538, 539, 540, 541, 542,
	545, 0, 0, 543, 544, 546, 547, 0, 548, 549,
	551, 554, 550, 552, 553, 555, 556, 569, 570, 557,
	558, 559, 560, 561, 562, 563, 564, 565, 566, 567,
	568, 572, 0, 571, 0, 573, 574, 575, 576, 577,
	585, 587, 588, 583, 584, 586, 589, 590, 591, 593,
	594, 580, 581, 582, 0, 592, 578, 0, 579, 0,
	0, 595, 596, 597, 598, 0, 0, 599, 0, 602,
	603, 0, 0, 604, 0, 605, 0, 0, 607, 608,
	609, 0, 0, 610, 611, 0, 0, 612, 0, 0,
	613, 614, 606, 615, 616, 617, 618, 619, 620, 621,
	622, 623, 624, 625, 0, 626, 627, 0, 628, 629,
	630, 0, 631, 632, 633, 0, 634, 0, 635, 636,
	0, 637, 638, 639, 0, 640, 641, 642, 643, 644,
	645, 646, 647, 648, 649, 0, 650, 651, 653, 652,
	654, 655, 0, 656, 0, 657, 658, 659, 0, 0,
	0, 0, 0, 660, 661, 663, 0, 664, 665, 666,
	667, 668, 662, 669, 670, 671, 672, 673, 674, 675,
	0, 677, 678, 676, 679, 680, 0, 681, 682, 683,
	684, 685, 0, 686, 0, 687, 688, 696, 697, 698,
	689, 690, 692, 699, 691, 700, 701, 702, 703, 705,
	704, 0, 707, 708, 706, 709, 710, 711, 712, 1653,
	713, 0, 714, 693, 694, 715, 716, 717, 0, 718,
	719, 720, 721, 722, 723, 724, 725, 726, 0, 0,
	727, 0, 728, 729, 730, 731, 732, 733, 735, 695,
	736, 737, 738, 743, 744, 745, 0, 739, 740, 741,
	742, 747, 0, 748, 749, 750, 751, 0, 752, 753,
	0, 746, 734, 0, 754, 755, 756, 757, 758, 759,
	760, 761, 762, 763, 0, 764, 0, 0, 0, 0,
	0, 776, 0, 765, 767, 768, 769, 770, 0, 771,
	0, 0, 772, 773, 774, 775, 766, 777, 778, 0,
	0, 779, 780, 781, 782, 784, 786, 787, 788, 783,
	785, 789, 0, 790, 0, 0, 791, 792, 793, 0,
	0, 0, 0, 796, 797, 794, 795, 798, 799, 802,
	800, 801, 0, 805, 517, 806, 807, 808, 803, 804,
	1650, 0, 0, 0, 809, 810, 0, 811, 812, 813,
	0, 0, 0, 0, 0, 0, 0, 347, 348, 350,
	349, 351, 352, 353, 354, 0, 355, 356, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 358, 0, 357,
	0, 359, 360, 361, 0, 362, 363, 364, 365, 366,
	367, 368, 369, 0, 0, 0, 370, 0, 371, 0,
	0, 0, 372, 373, 374, 375, 376, 377, 378, 379,
	380, 381, 0, 0, 0, 382, 0, 0, 0, 0,
	383, 384, 385, 386, 0, 0, 0, 0, 387, 388,
	389, 390, 391, 392, 393, 394, 0, 0, 396, 397,
	398, 395, 399, 400, 0, 401, 0, 402, 403, 404,
	405, 406, 407, 408, 0, 409, 410, 411, 0, 412,
	413, 414, 0, 0, 0, 0, 0, 0, 1652, 415,
	416, 417, 418, 419, 0, 420, 422, 423, 0, 424,
	0, 0, 427, 429, 421, 425, 0, 428, 426, 430,
	431, 0, 432, 433, 434, 435, 0, 0, 436, 437,
	438, 0, 439, 440, 442, 441, 0, 443, 444, 445,
	0, 446, 447, 0, 448, 449, 450, 452, 454, 451,
	453, 455, 456, 457, 458, 459, 0, 0, 460, 461,
	0, 0, 0, 0, 0, 0, 0, 462, 463, 464,
	0, 0, 0, 0, 465, 0, 467, 471, 472, 468,
	469, 470, 473, 0, 466, 474, 475, 0, 0, 476,
	477, 478, 0, 0, 479, 480, 481, 482, 483, 484,
	485, 486, 487, 0, 488, 489, 0, 0, 0, 490,
	0, 491, 492, 493, 494, 495, 496, 497, 0, 0,
	0, 600, 0, 498, 499, 500, 501, 0, 502, 503,
	504, 505, 506, 507, 508, 0, 0, 0, 509, 510,
	511, 512, 0, 0, 0, 0, 0, 0, 513, 601,
	514, 0, 0, 0, 0, 0, 515, 516, 519, 0,
	0, 0, 518, 520, 521, 0, 522, 0, 0, 0,
	523, 524, 525, 526, 527, 528, 529, 0, 530, 532,
	531, 0, 534, 0, 533, 0, 535, 536, 0, 0,
	537, 538, 539, 540, 541, 542, 545, 0, 0, 543,
	544, 546, 547, 0, 548, 549, 551, 554, 550, 552,
	553, 555, 556, 569, 570, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 566, 567, 568, 572, 0, 571,
	0, 573, 574, 575, 576, 577, 585, 587, 588, 583,
	584, 586, 589, 590, 591, 593, 594, 580, 581, 582,
	0, 592, 578, 0, 579, 0, 0, 595, 596, 597,
	598, 0, 0, 599, 0, 602, 603, 0, 0, 604,
	0, 605, 0, 0, 607, 608, 609, 0, 0, 610,
	611, 0, 0, 612, 0, 0, 613, 614, 606, 615,
	616, 617, 618, 619, 620, 621, 622, 623, 624, 625,
	0, 626, 627, 0, 628, 629, 630, 0, 631, 632,
	633, 0, 634, 0, 635, 636, 0, 637, 638, 639,
	0, 640, 641, 642, 643, 644, 645, 646, 647, 648,
	649, 0, 650, 651, 653, 652, 654, 655, 0, 656,
	0, 657, 658, 659, 0, 0, 0, 0, 0, 660,
	661, 663, 0, 664, 665, 666, 667, 668, 662, 669,
	670, 671, 672, 673, 674, 675, 0, 677, 678, 676,
	679, 680, 0, 681, 682, 683, 684, 685, 0, 686,
	0, 687, 688, 696, 697, 698, 689, 690, 692, 699,
	691, 700, 701, 702, 703, 705, 704, 0, 707, 708,
	706, 709, 710, 711, 712, 1653, 713, 0, 714, 693,
	694, 715, 716, 717, 0, 718, 719, 720, 721, 722,
	723, 724, 725, 726, 0, 0, 727, 0, 728, 729,
	730, 731, 732, 733, 735, 695, 736, 737, 738, 743,
	744, 745, 0, 739, 740, 741, 742, 747, 0, 748,
	749, 750, 751, 0, 752, 753, 0, 746, 734, 0,
	754, 755, 756, 757, 758, 759, 760, 761, 762, 763,
	0, 764, 0, 0, 0, 0, 0, 776, 0, 765,
	767, 768, 769, 770, 0, 771, 0, 0, 772, 773,
	774, 775, 766, 777, 778, 0, 0, 779, 780, 781,
	782, 784, 786, 787, 788, 783, 785, 789, 0, 790,
	0, 0, 791, 792, 793, 0, 0, 0, 0, 796,
	797, 794, 795, 798, 799, 802, 800, 801, 0, 805,
	517, 806, 807, 808, 803, 804, 0, 0, 0, 0,
	809, 810, 0, 811, 812, 813, 2198, 2199, 0, 2232,
	2233, 2234, 2243, 2244, 2245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2236,
	2229, 0, 0, 0, 0, 0, 0, 2230, 0, 0,
	2201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2249, 0, 2198, 2199, 0, 2232, 2233, 2234,
	2243, 2244, 2245, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2255, 0, 0, 0, 2236, 2229, 0,
	0, 0, 0, 0, 2200, 2230, 0, 0, 2201, 0,
	0, 0, 0, 0, 0, 2220, 0, 0, 0, 0,
	2249, 0, 0, 0, 0, 2217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2255, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2200, 0, 2198, 2199, 0, 2232, 2233, 2234,
	2243, 2244, 2245, 2220, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2217, 0, 0, 0, 2236, 2229, 0,
	0, 0, 0, 0, 0, 2230, 0, 0, 2201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2249, 0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244,
	2245, 0, 2223, 2224, 2225, 2226, 0, 0, 0, 0,
	0, 2255, 2206, 0, 0, 2236, 2229, 0, 0, 0,
	0, 0, 2200, 2230, 0, 0, 2201, 0, 0, 0,
	0, 0, 0, 2220, 0, 0, 0, 0, 2249, 0,
	0, 0, 0, 2217, 0, 0, 0, 0, 0, 0,
	2223, 2224, 2225, 2226, 0, 0, 0, 0, 0, 2255,
	2206, 2240, 0, 0, 0, 0, 2250, 0, 0, 0,
	2200, 0, 0, 0, 0, 2228, 2231, 0, 0, 0,
	0, 2220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 0, 0, 0, 0, 0, 0, 2246, 0,
	2247, 0, 0, 0, 0, 0, 0, 2215, 2216, 2240,
	0, 0, 0, 0, 2250, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 2231, 0, 0, 2238, 0, 0,
	2223, 2224, 2225, 2226, 0, 0, 0, 0, 0, 0,
	2206, 0, 2221, 0, 0, 0, 2246, 0, 2247, 0,
	0, 0, 0, 0, 0, 2215, 2216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2238, 0, 0, 2223, 2224,
	2225, 2226, 0, 0, 0, 0, 0, 0, 2206, 2240,
	2221, 0, 0, 0, 2250, 2248, 0, 0, 0, 0,
	0, 0, 0, 2228, 2231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2237, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2246, 2252, 2247, 0,
	0, 0, 0, 0, 0, 2215, 2216, 2240, 0, 0,
	0, 0, 2250, 2248, 0, 0, 0, 0, 0, 0,
	0, 2228, 2231, 0, 0, 2238, 0, 0, 0, 0,
	0, 0, 0, 0, 2237, 0, 0, 0, 0, 0,
	2221, 0, 0, 0, 2246, 2252, 2247, 0, 0, 0,
	0, 0, 0, 2215, 2216, 0, 0, 0, 0, 0,
	0, 2227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2221, 2222,
	0, 0, 0, 2248, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 2237, 0, 0, 0, 0, 0,
	0, 0, 0, 2241, 0, 2252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2222, 0, 0,
	0, 2248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2237, 0, 0, 2254, 0, 0, 0, 0,
	0, 2241, 0, 2252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2254, 0, 0, 0, 2222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2241, 0, 0, 0, 2239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2222, 0, 0, 2212, 2213,
	2219, 2242, 2218, 2214, 0, 2211, 2209, 2210, 2202, 2203,
	2204, 2205, 2207, 2208, 0, 0, 0, 0, 0, 4617,
	0, 0, 0, 2254, 0, 0, 0, 0, 0, 2241,
	0, 0, 0, 2239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2212, 2213, 2219, 2242,
	2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205,
	2207, 2208, 0, 0, 0, 0, 0, 4616, 0, 0,
	0, 2254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2212, 2213, 2219, 2242,
	2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205,
	2207, 2208, 0, 0, 0, 0, 0, 4615, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214,
	0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208,
	0, 0, 0, 2198, 2199, 4614, 2232, 2233, 2234, 2243,
	2244, 2245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2236, 2229, 0, 0,
	0, 0, 0, 0, 2230, 0, 0, 2201, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2249,
	0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2255, 0, 0, 0, 2236, 2229, 0, 0, 0, 0,
	0, 2200, 2230, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 2220, 0, 0, 0, 0, 2249, 0, 0,
	0, 0, 2217, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2200,
	0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245,
	2220, 0, 0, 0, 0, 2867, 0, 0, 0, 0,
	2217, 0, 0, 0, 2236, 2229, 0, 0, 0, 0,
	0, 0, 2230, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2249, 0, 2198,
	2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0, 2223,
	2224, 2225, 2226, 0, 0, 0, 0, 0, 2255, 2206,
	0, 0, 2236, 2229, 0, 0, 0, 0, 0, 2200,
	2230, 0, 0, 2201, 0, 0, 0, 0, 0, 0,
	2220, 0, 0, 0, 0, 2249, 0, 0, 0, 0,
	2217, 0, 0, 0, 0, 0, 0, 2223, 2224, 2225,
	2226, 0, 0, 0, 0, 0, 2255, 2206, 2240, 0,
	0, 0, 0, 2250, 0, 0, 0, 2200, 0, 0,
	0, 0, 2228, 2231, 0, 0, 0, 0, 2220, 0,
	0, 0, 2761, 0, 0, 0, 0, 0, 2217, 0,
	0, 0, 0, 0, 2868, 2246, 0, 2247, 0, 0,
	0, 0, 0, 0, 2215, 2216, 2240, 0, 0, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 2231, 0, 0, 2238, 0, 0, 2223, 2224, 2225,
	2226, 0, 0, 0, 0, 0, 0, 2206, 0, 2221,
	0, 0, 0, 2246, 0, 2247, 0, 0, 0, 0,
	0, 0, 2215, 2216, 0, 0, 0, 0, 0, 0,
	0, 0, 2759, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2238, 0, 0, 2223, 2224, 2225, 2226, 0,
	0, 0, 0, 0, 0, 2206, 2240, 2221, 0, 0,
	0, 2250, 2248, 0, 0, 0, 0, 0, 0, 0,
	2228, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2237, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2246, 2252, 2247, 0, 0, 0, 0,
	0, 0, 2215, 2216, 2240, 0, 0, 0, 0, 2250,
	2248, 0, 0, 0, 0, 0, 0, 0, 2228, 2231,
	0, 0, 2238, 0, 0, 0, 0, 0, 0, 0,
	0, 2237, 0, 0, 0, 0, 0, 2221, 0, 0,
	0, 2246, 2252, 2247, 0, 0, 0, 0, 0, 0,
	2215, 2216, 0, 0, 0, 0, 0, 0, 2227, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2221, 2222, 0, 0, 0,
	2248, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 2237, 0, 0, 0, 0, 0, 0, 0, 0,
	2241, 0, 2252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2222, 0, 0, 0, 2248, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2237,
	0, 0, 2254, 0, 0, 0, 0, 0, 2241, 0,
	2252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2254, 0, 0, 0, 2222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2760, 2227, 0, 0, 0, 0, 0,
	2869, 0, 0, 0, 0, 0, 0, 0, 2241, 0,
	0, 0, 2239, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2222, 0, 0, 2212, 2213, 2219, 2242, 2218,
	2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207,
	2208, 0, 0, 0, 4585, 0, 0, 0, 0, 0,
	2254, 0, 0, 0, 0, 0, 2241, 0, 0, 0,
	2239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0,
	2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0,
	0, 0, 4064, 0, 0, 0, 0, 0, 2254, 2870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2758, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0,
	2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209,
	2210, 2202, 2203, 2204, 2205, 2207, 2208, 2198, 2199, 0,
	2232, 2233, 2234, 2243, 2244, 2245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2236, 2229, 0, 0, 0, 0, 0, 0, 2230, 0,
	0, 2201, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2249, 0, 2198, 2199, 0, 2232, 2233,
	2234, 2243, 2244, 2245, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2255, 0, 0, 0, 2236, 2229,
	0, 0, 0, 0, 0, 2200, 2230, 0, 0, 2201,
	0, 0, 0, 0, 0, 0, 2220, 0, 0, 0,
	0, 2249, 0, 0, 0, 0, 2217, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2255, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2200, 0, 2198, 2199, 0, 2232, 2233,
	2234, 2243, 2244, 2245, 2220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2217, 0, 0, 0, 2236, 2229,
	0, 0, 0, 0, 4555, 0, 2230, 0, 0, 2201,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2223, 2224, 2225, 2226, 0, 0, 0,
	0, 0, 2255, 2206, 6788, 0, 0, 0, 0, 0,
	0, 0, 0, 2200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2217, 0, 0, 0, 0, 0,
	0, 2223, 2224, 2225, 2226, 0, 0, 0, 0, 0,
	0, 2206, 2240, 4682, 0, 0, 0, 2250, 0, 0,
	0, 0, 0, 0, 0, 4681, 2228, 2231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4556,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2246,
	0, 2247, 0, 0, 0, 0, 0, 0, 2215, 2216,
	2240, 0, 0, 0, 0, 2250, 0, 0, 0, 0,
	0, 0, 0, 0, 2228, 2231, 0, 0, 2238, 0,
	0, 2223, 2224, 2225, 2226, 0, 0, 0, 0, 0,
	0, 2206, 0, 2221, 0, 0, 0, 2246, 0, 2247,
	0, 0, 0, 0, 0, 0, 2215, 2216, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2238, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2240, 2221, 0, 0, 0, 2250, 2248, 0, 0, 0,
	0, 0, 0, 0, 2228, 2231, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2237, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2246, 2252, 2247,
	0, 0, 0, 0, 0, 0, 2215, 2216, 0, 0,
	0, 0, 0, 0, 2248, 0, 0, 0, 0, 0,
	0, 0, 6787, 0, 0, 0, 2238, 0, 0, 0,
	0, 0, 0, 0, 0, 2237, 0, 0, 0, 0,
	0, 2221, 0, 0, 0, 0, 2252, 0, 0, 0,
	0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245,
	0, 0, 2227, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2236, 2229, 0, 0, 0, 0,
	0, 0, 2230, 0, 0, 2201, 0, 0, 0, 0,
	2222, 0, 0, 0, 2248, 0, 0, 2249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2227, 0, 0, 0, 0, 2237, 0, 0, 2255, 0,
	0, 0, 0, 0, 2241, 0, 2252, 0, 0, 2200,
	0, 0, 0, 0, 0, 0, 0, 0, 2222, 0,
	2220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2254, 0, 0, 0,
	0, 0, 2241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2254, 0, 0, 0, 2222, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2223, 2224, 2225,
	2226, 0, 0, 0, 0, 0, 0, 2206, 0, 6307,
	0, 0, 2241, 0, 0, 0, 2239, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2212,
	2213, 2219, 2242, 2218, 2214, 0, 2211, 2209, 2210, 2202,
	2203, 2204, 2205, 2207, 2208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2254, 0, 2240, 0, 0, 0,
	0, 2250, 0, 0, 2239, 0, 0, 0, 0, 0,
	2228, 2231, 0, 0, 0, 0, 0, 2212, 2213, 2219,
	2242, 2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204,
	2205, 2207, 2208, 2246, 0, 2247, 0, 0, 0, 0,
	0, 0, 2215, 2216, 0, 0, 0, 0, 0, 2198,
	2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0, 0,
	0, 0, 2238, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2236, 2229, 0, 0, 0, 2221, 0, 0,
	2230, 0, 0, 2201, 2239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2249, 0, 2212, 2213, 2219,
	2242, 2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204,
	2205, 2207, 2208, 0, 0, 0, 2255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2200, 0, 0,
	2248, 0, 0, 0, 0, 0, 0, 0, 2220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2217, 0,
	0, 2237, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2252, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 0, 0, 0, 0, 2223, 2224, 2225, 2226, 0,
	0, 0, 0, 0, 0, 2206, 0, 0, 0, 0,
	0, 0, 0, 0, 2222, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2241, 0,
	0, 0, 0, 0, 2240, 0, 0, 0, 0, 2250,
	0, 0, 0, 0, 0, 0, 0, 0, 2228, 2231,
	0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2254, 2246, 0, 2247, 2236, 2229, 0, 0, 0, 0,
	2215, 2216, 2230, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2249, 0, 0,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2221, 0, 0, 2255, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2239, 0, 0, 0, 0, 0, 0, 0, 2248, 0,
	0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0,
	2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 2237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2252, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2223, 2224, 2225,
	2226, 0, 0, 0, 0, 0, 0, 2206, 0, 2198,
	2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0, 0,
	0, 0, 0, 0, 2227, 0, 0, 0, 0, 0,
	0, 0, 2236, 2229, 0, 0, 0, 0, 0, 0,
	2230, 0, 0, 2201, 0, 0, 0, 0, 0, 0,
	0, 0, 2222, 0, 0, 2249, 2240, 0, 0, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 2231, 0, 0, 0, 0, 2255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2241, 2200, 0, 0,
	0, 0, 0, 2246, 0, 2247, 0, 0, 2220, 0,
	0, 0, 2215, 2216, 0, 0, 0, 0, 2217, 0,
	2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0,
	0, 0, 2238, 0, 0, 0, 0, 0, 2254, 0,
	0, 0, 0, 2236, 2229, 0, 0, 2221, 0, 0,
	0, 2230, 0, 0, 2201, 0, 0, 0, 5989, 0,
	0, 0, 0, 0, 0, 0, 2249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2255, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2200, 0,
	2248, 0, 0, 0, 0, 2223, 2224, 2225, 2226, 2220,
	0, 0, 0, 0, 0, 2206, 0, 0, 0, 2217,
	0, 2237, 3968, 0, 0, 0, 0, 0, 2239, 0,
	0, 0, 2252, 0, 0, 0, 0, 0, 0, 0,
	0, 2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209,
	2210, 2202, 2203, 2204, 2205, 2207, 2208, 0, 0, 0,
	0, 0, 0, 0, 2240, 0, 0, 0, 0, 2250,
	0, 0, 0, 0, 0, 0, 0, 0, 2228, 2231,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 0,
	0, 2246, 0, 2247, 0, 0, 2223, 2224, 2225, 2226,
	2215, 2216, 0, 0, 0, 0, 2206, 0, 5570, 0,
	0, 0, 0, 0, 2222, 0, 0, 0, 0, 0,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2221, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2241, 0,
	0, 0, 0, 0, 0, 2240, 0, 0, 0, 0,
	2250, 0, 0, 0, 0, 0, 0, 0, 0, 2228,
	2231, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2248, 0,
	2254, 0, 2246, 0, 2247, 0, 0, 0, 0, 0,
	0, 2215, 2216, 0, 0, 0, 0, 0, 0, 2237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2252, 2238, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2221, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2239, 0, 0, 0, 2227, 0, 0, 0, 0, 2248,
	0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0,
	2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 0,
	2237, 0, 2222, 0, 0, 0, 0, 0, 0, 0,
	0, 2252, 0, 0, 0, 0, 2198, 2199, 0, 2232,
	2233, 2234, 2243, 2244, 2245, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2241, 0, 0, 2236,
	2229, 0, 0, 0, 0, 0, 0, 2230, 0, 0,
	2201, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2227, 0, 0, 2254, 0,
	0, 0, 0, 2255, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2200, 0, 0, 0, 5571, 0,
	0, 0, 0, 2222, 0, 2220, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2217, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2239, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2254,
	0, 2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209,
	2210, 2202, 2203, 2204, 2205, 2207, 2208, 0, 0, 0,
	0, 0, 2223, 2224, 2225, 2226, 0, 0, 0, 0,
	0, 0, 2206, 0, 0, 0, 0, 0, 0, 0,
	0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2236, 2229, 0, 0, 0, 0,
	0, 0, 2230, 0, 0, 2201, 0, 0, 0, 0,
	0, 2240, 0, 0, 0, 0, 2250, 2249, 0, 2239,
	0, 0, 0, 0, 0, 2228, 2231, 0, 0, 0,
	0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 2255, 2211,
	2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 2246, 2200,
	2247, 0, 0, 0, 0, 0, 0, 2215, 2216, 0,
	2220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 0, 0, 0, 0, 0, 0, 2238, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2221, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244,
	2245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2236, 2229, 0, 0, 0,
	4683, 0, 0, 2230, 0, 0, 2201, 0, 0, 0,
	0, 0, 0, 0, 0, 2248, 0, 0, 2249, 0,
	0, 0, 0, 0, 0, 0, 0, 2223, 2224, 2225,
	2226, 0, 0, 0, 0, 0, 2237, 2206, 0, 2255,
	0, 0, 0, 0, 0, 0, 0, 2252, 0, 0,
	2200, 4688, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2220, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 0, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2227, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2246, 0, 2247, 0, 0, 0, 0,
	0, 0, 2215, 2216, 0, 0, 0, 0, 0, 2222,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2238, 0, 0, 0, 0, 0, 2223, 2224,
	2225, 2226, 0, 0, 0, 0, 0, 2221, 2206, 0,
	0, 0, 0, 2241, 0, 0, 0, 2198, 2199, 0,
	2232, 2233, 2234, 2243, 2244, 2245, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2236, 2229, 0, 0, 0, 0, 0, 0, 2230, 0,
	0, 2201, 0, 0, 0, 2254, 0, 2240, 0, 0,
	2248, 0, 2250, 2249, 0, 0, 0, 0, 0, 5279,
	0, 2228, 2231, 0, 0, 0, 0, 0, 0, 0,
	0, 2237, 0, 0, 2255, 0, 0, 0, 0, 0,
	0, 0, 2252, 0, 2246, 2200, 2247, 0, 0, 0,
	0, 0, 0, 2215, 2216, 0, 2220, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2217, 0, 0, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2221, 0,
	0, 0, 0, 0, 0, 2239, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 2212, 2213,
	2219, 2242, 2218, 2214, 0, 2211, 2209, 2210, 2202, 2203,
	2204, 2205, 2207, 2208, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2222, 0, 0, 0, 0, 0,
	0, 2248, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2223, 2224, 2225, 2226, 0, 0, 0,
	0, 0, 2237, 2206, 0, 0, 0, 0, 2241, 0,
	0, 0, 0, 2252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2254, 0, 2240, 0, 0, 0, 0, 2250, 0, 0,
	0, 0, 0, 0, 0, 0, 2228, 2231, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2246,
	0, 2247, 0, 0, 0, 0, 0, 0, 2215, 2216,
	0, 0, 0, 0, 0, 2222, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2238, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2221, 0, 0, 0, 0, 0, 2241,
	2239, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0,
	2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 2198,
	2199, 0, 2232, 2233, 2234, 2243, 2244, 2245, 0, 0,
	0, 2254, 0, 0, 0, 0, 2248, 0, 0, 0,
	0, 0, 2236, 2229, 0, 0, 0, 4618, 0, 0,
	2230, 0, 0, 2201, 0, 0, 0, 2237, 0, 0,
	0, 0, 0, 0, 0, 2249, 0, 0, 2252, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4648, 0, 0, 0, 0, 0, 2255, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2220, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2217, 0,
	0, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2227, 0, 2212, 2213, 2219, 2242, 2218, 2214,
	0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2222, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2241, 2198, 2199, 0, 2232, 2233,
	2234, 2243, 2244, 2245, 0, 2223, 2224, 2225, 2226, 0,
	0, 0, 0, 0, 0, 2206, 0, 0, 2236, 2229,
	0, 0, 0, 0, 0, 0, 2230, 0, 0, 2201,
	0, 0, 0, 0, 0, 0, 2254, 0, 0, 0,
	0, 2249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2255, 0, 2240, 0, 0, 0, 0, 2250,
	0, 0, 0, 2200, 0, 0, 0, 0, 2228, 2231,
	0, 0, 0, 0, 2220, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2217, 0, 0, 0, 0, 0,
	0, 2246, 0, 2247, 0, 0, 0, 0, 0, 0,
	2215, 2216, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2239, 0, 0, 0,
	2238, 0, 0, 0, 0, 0, 0, 0, 0, 2212,
	2213, 2219, 2242, 2218, 2214, 2221, 2211, 2209, 2210, 2202,
	2203, 2204, 2205, 2207, 2208, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244, 2245,
	0, 2223, 2224, 2225, 2226, 0, 0, 0, 0, 0,
	0, 2206, 0, 0, 2236, 2229, 0, 0, 2248, 0,
	0, 0, 2230, 0, 0, 2201, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2249, 0, 2237,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2252, 0, 0, 0, 0, 0, 0, 0, 2255, 0,
	2240, 0, 0, 0, 0, 2250, 0, 0, 0, 2200,
	0, 0, 0, 0, 2228, 2231, 0, 0, 0, 0,
	2220, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2217, 0, 0, 0, 0, 0, 0, 2246, 0, 2247,
	0, 0, 0, 0, 0, 0, 2215, 2216, 0, 0,
	0, 0, 0, 0, 2227, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2198, 2199, 2238, 2232, 2233, 2234,
	2243, 2244, 2245, 0, 0, 0, 0, 0, 0, 0,
	0, 2221, 2222, 0, 0, 0, 0, 2236, 2229, 0,
	0, 0, 0, 0, 0, 2230, 0, 0, 2201, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2249, 0, 0, 0, 0, 0, 2241, 2223, 2224, 2225,
	2226, 0, 0, 0, 0, 0, 0, 2206, 0, 0,
	0, 2255, 0, 0, 2248, 0, 0, 0, 0, 0,
	0, 0, 2200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2220, 0, 2237, 0, 0, 2254, 0,
	0, 0, 0, 2217, 0, 0, 2252, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2240, 0, 0, 0,
	0, 2250, 0, 0, 0, 0, 0, 0, 0, 0,
	2228, 2231, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2246, 0, 2247, 0, 0, 0, 0,
	0, 0, 2215, 2216, 0, 0, 0, 0, 0, 0,
	2227, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2238, 0, 0, 0, 0, 0, 2239, 0,
	2223, 2224, 2225, 2226, 0, 0, 0, 2221, 2222, 0,
	2206, 2212, 2213, 2219, 2242, 2218, 2214, 0, 2211, 2209,
	2210, 2202, 2203, 2204, 2205, 2207, 2208, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2241, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2240,
	2248, 0, 0, 0, 2250, 0, 0, 0, 0, 0,
	0, 0, 0, 2228, 2231, 0, 0, 0, 0, 0,
	0, 2237, 0, 0, 2254, 0, 0, 0, 0, 0,
	0, 0, 2252, 0, 0, 0, 2246, 0, 2247, 0,
	0, 0, 0, 0, 0, 2215, 2216, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2221, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2227, 0, 0, 1039,
	0, 1099, 0, 0, 0, 0, 0, 2994, 0, 0,
	0, 0, 0, 0, 2239, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2222, 0, 1047, 2212, 2213, 2219,
	2242, 2218, 2214, 2248, 2211, 2209, 2210, 2202, 2203, 2204,
	2205, 2207, 2208, 0, 0, 0, 1064, 0, 1045, 1044,
	0, 0, 0, 0, 2237, 0, 0, 0, 2241, 0,
	0, 0, 0, 0, 0, 2252, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1066, 0, 0, 0,
	0, 0, 0, 1046, 0, 0, 0, 0, 0, 1049,
	0, 0, 1060, 0, 1112, 0, 1078, 0, 0, 0,
	2254, 0, 0, 0, 0, 1061, 1062, 0, 0, 0,
	0, 0, 0, 0, 0, 1083, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2227,
	0, 0, 0, 1100, 1051, 0, 0, 0, 0, 0,
	0, 0, 1052, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2222, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1053,
	0, 0, 0, 0, 0, 0, 0, 0, 1093, 0,
	0, 0, 0, 2664, 0, 0, 0, 0, 0, 0,
	2239, 2241, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214, 0,
	2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208, 1094,
	0, 1073, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2254, 0, 0, 1055, 0, 0, 0,
	0, 0, 0, 0, 0, 1043, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1057,
	1058, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1067, 1065, 0, 0, 0, 0,
	0, 0, 1059, 0, 0, 0, 1039, 1079, 1099, 0,
	1105, 1104, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2239, 0, 0, 1109, 1092, 0, 0,
	0, 0, 0, 1047, 0, 0, 2212, 2213, 2219, 2242,
	2218, 2214, 0, 2211, 2209, 2210, 2202, 2203, 2204, 2205,
	2207, 2208, 0, 1064, 0, 1045, 1044, 0, 0, 0,
	1101, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1066, 0, 0, 0, 0, 0, 0,
	1046, 0, 0, 0, 0, 0, 1049, 0, 0, 0,
	0, 1112, 0, 1078, 0, 0, 0, 0, 0, 0,
	0, 0, 1061, 1062, 0, 0, 0, 0, 0, 0,
	0, 0, 1083, 0, 1050, 0, 0, 1111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1100, 1051, 0, 0, 0, 0, 0, 0, 0, 1052,
	0, 0, 0, 1074, 1048, 0, 0, 0, 0, 1087,
	1088, 0, 2198, 2199, 0, 2232, 2233, 2234, 2243, 2244,
	2245, 0, 0, 0, 1090, 0, 1053, 0, 0, 0,
	0, 0, 0, 0, 0, 1093, 2229, 0, 0, 0,
	0, 0, 0, 2230, 0, 0, 2201, 0, 0, 0,
	0, 0, 0, 0, 1102, 1085, 0, 0, 2249, 0,
	0, 0, 0, 1110, 1080, 0, 0, 1070, 1068, 0,
	0, 0, 1075, 0, 0, 0, 1094, 0, 1073, 2255,
	1076, 0, 0, 0, 1041, 0, 1103, 0, 0, 0,
	2200, 0, 0, 1055, 0, 0, 0, 0, 0, 0,
	0, 2220, 1043, 0, 0, 0, 0, 0, 0, 0,
	0, 2217, 0, 0, 0, 1042, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1057, 1058, 0, 0,
	1091, 0, 0, 1089, 0, 1077, 1056, 0, 0, 0,
	0, 1072, 0, 0, 0, 0, 1097, 0, 1096, 0,
	0, 1067, 1065, 1107, 0, 0, 0, 0, 0, 1059,
	0, 1081, 0, 1082, 1079, 0, 0, 1105, 1104, 0,
	0, 0, 1054, 1106, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1109, 1092, 0, 0, 0, 0, 0,
	1084, 0, 0, 0, 0, 0, 0, 0, 2223, 2224,
	2225, 2226, 0, 0, 0, 0, 0, 0, 2206, 1098,
	0, 0, 0, 0, 0, 1108, 0, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 1086, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1095, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2240, 0, 0,
	0, 0, 2250, 0, 0, 0, 0, 0, 0, 0,
	0, 2228, 2231, 0, 0, 0, 0, 0, 0, 0,
	0, 1050, 0, 0, 1111, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2215, 2216, 0, 0, 0, 0, 0,
	1074, 1048, 0, 0, 0, 0, 1087, 1088, 0, 0,
	0, 0, 0, 2238, 0, 0, 0, 0, 0, 0,
	0, 1090, 0, 0, 0, 0, 0, 0, 2221, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 1085, 0, 0, 0, 0, 0, 0, 0,
	1110, 1080, 0, 0, 1070, 1068, 0, 0, 0, 1075,
	0, 0, 0, 0, 0, 0, 0, 1076, 0, 0,
	0, 1041, 0, 1103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1042, 2252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1091, 0, 0,
	1089, 0, 1077, 1056, 0, 0, 0, 0, 1072, 0,
	0, 0, 0, 1097, 0, 1096, 0, 0, 0, 0,
	1107, 0, 0, 0, 0, 0, 0, 0, 1081, 0,
	1082, 0, 0, 0, 0, 0, 0, 0, 0, 1054,
	1106, 0, 0, 0, 0, 0, 0, 2227, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1084, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2222, 1098, 0, 0, 0,
	0, 0, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1086, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1095, 0, 0, 0, 0, 2241,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2254, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2239, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2212, 2213, 2219, 2242, 2218, 2214,
	0, 2211, 2209, 2210, 2202, 2203, 2204, 2205, 2207, 2208,
}

var sqlPact = [...]int32{
	3364, -1000, -1000, -1000, -1000, -1000, -1000, 462, -1000, -1000,
	-1000, 461, 460, 459, 457, 456, 448, 445, 444, 443,
	442, 425, -1000, -1000, 422, 417, 416, 411, -1000, -1000,
	410, 407, 395, -1000, 394, -1000, -1000, 392, -1000, 381,
	379, 377, -1000, -1000, 376, -1000, 374, -1000, -1000, -1000,
	-1000, 370, 369, 364, 128994, 128326, 86814, 88829, 3217, 165682,
	144330, 2996, 134992, 165014, 134324, 164346, 3086, 13799, 163678, 3765,
	363, -1000, 163010, 361, 360, 353, -1000, 143662, 162342, 139660,
	138992, 2621, 100860, 186247, 2277, 2257, -1000, 351, -1000, -1000,
	7535, 98193, 350, 348, 346, 345, 2984, 344, -1000, 343,
	342, 340, 339, 338, -1000, -1000, 16171, 2139, -1000, 336,
	335, 321, 319, -1000, 3574, 138324, 314, 311, 309, 3380,
	308, 307, 94188, 306, 301, 299, 3196, 3839, -1000, -1000,
	2948, -1000, -1000, 298, 294, 293, 291, 288, 286, 285,
	280, 274, 272, 271, 270, 267, 265, -1000, 264, 262,
	261, 256, 254, 246, 245, -1000, 244, 242, 241, -1000,
	239, -1000, 238, 233, 232, 231, 230, 229, 225, 222,
	221, 218, 217, 216, 215, 214, 213, 212, 210, -1000,
	-1000, 208, -1000, 2633, 2194, 2189, 2171, 1320, 207, 206,
	205, 204, 203, 199, 193, 192, 191, 190, 189, 188,
	185, 184, 183, 179, 177, 175, 174, 173, 172, 170,
	167, 166, 164, 163, 162, 161, 159, 158, 156, 154,
	152, 303, 146, 141, 140, 137, 136, 135, 133, 128,
	127, 3421, 4700, -1000, 2093, 1362, 1628, 41932, 4009, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 175006, 166348, 126, -58, 125, -1000, 4354, 1259, 78725,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 521, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 999, -1000, 3792, -1000, -1000, -1000, -1000, -1000, -1000,
	519, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 774, 181, 3188, 996, -1000, -1000, -1000, 161674, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 3216, 42, 135658,
	-1000, 2921, -1000, -1000, -1000, -1000, -1000, 994, -1000, 3213,
	3147, 453, 3146, 135658, -1000, -1000, -1000, 4478, 4331, 127658,
	126990, 3410, 5004, 5001, 5000, 4997, 4995, 174340, 2415, 3481,
	4994, 4993, 4992, 4991, 4990, 4989, 4986, -1000, 126322, 1446,
	125654, 124986, 4451, 161008, 124318, 74668, 160340, 177676, 62638, 1256,
	4475, -1000, -1000, 4399, -1000, -1000, -1000, -1000, -1000, 166348,
	-1000, 1445, -1000, -1000, 4985, 2859, 992, 142994, -1000, -1000,
	159672, 1990, -1000, -1000, -1000, 1271, 1565, 45502, 45502, 45502,
	518, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4477, -1000,
	-1000, -1000, -1000, 166348, 3677, 3677, 1830, 1790, 1790, 3677,
	3677, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 4984,
	4983, 4981, 4979, 4977, -1000, -1000, -1000, 1379, 4974, -1000,
	-1000, 2571, 2140, 4760, 3684, 108292, 2898, 1857, 4406, 4074,
	4069, 2020, 2479, 4063, 4971, 3568, 3758, 4058, 4055, 4053,
	1859, 4049, 4040, 2158, 3521, 915, 3519, 41218, 3997, 2578,
	61924, 2204, 1977, 4032, 4031, 4024, 4021, 4774, 4569, 2903,
	2788, 2837, 2841, 111634, 4970, 4968, 4364, 4020, 1972, 3766,
	4017, 2745, -1000, 3931, 2059, 4697, -1000, 76022, 1817, 517,
	-1000, -1000, -1000, -1000, -1000, -1000, 517, 1940, -1000, -1000,
	-1000, -1000, -1000, 2128, -1000, -1000, -1000, -1000, -1000, -1000,
	113638, 34868, 112970, 112302, 123650, 122982, 159004, 61210, 122314, 121646,
	107614, 4967, 4966, 60496, 73990, 4690, 1821, 158336, 177008, 4689,
	4685, 1444, 2915, 1903, -1000, -1000, -1000, -1000, -1000, -1000,
	86, 100194, 4756, 166348, 4399, -1000, -1000, 515, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 59782, 1071, 59068, 954, 58354,
	543, 157668, -1000, -1000, -1000, -1000, -1000, -1000, 106936, 4330,
	-1000, 73312, 157000, 2106, 3404, 4965, 4964, 1552, 4963, 4310,
	2296, 4960, 4952, 4951, 4950, 4949, 4946, 4945, 2053, 156332,
	3623, 155664, 2451, 176340, 2693, 1443, 120978, 129660, 3558, 154996,
	2030, 2018, -1000, -1000, -1000, -1000, 4562, 3837, 3833, 1702,
	-1000, -1000, -1000, -1000, -1000, -1000, 83435, 10133, 9058, -1000,
	-1000, -1000, -1000, 17237, 186554, 154328, 86145, 129660, 129660, -1000,
	-1000, -1000, -1000, -1000, -1000, 57640, 989, 56926, 1217, 153660,
	-1000, -1000, 84114, 3927, 1475, -1000, -1000, -1000, -1000, -1000,
	152992, 56212, 783, 55498, 1110, 166348, -1000, 4005, 2706, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 114304, -1000, -1000, 2128, -1000, -1000, -1000, 1953,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2093, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3473, -1000, 2862, -1000, -1000, -1000, 3484, 4347, 4347, 4347,
	4469, 755, 737, -1000, 303, 1189, 1533, -1000, -1000, 185893,
	-1000, -1000, 63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352,
	3091, -1000, 986, -1000, -1000, -1000, 1057, -1000, 983, 885,
	863, -1000, -1000, -1000, -1000, -1000, -1000, 982, -1000, -1000,
	-1000, -1000, -1000, -1000, 4745, -1000, 36934, -1000, -1000, -1000,
	753, 979, 63352, 4814, 4813, 1375, -1000, 513, 1280, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4003, 976, 975, -1000, 973, 970, 969, 968, 967, -1000,
	966, -1000, 965, 962, 961, 957, 956, 955, 950, 948,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 912,
	2940, 909, 909, 909, -1000, 1430, 908, 945, -1000, 532,
	903, 526, 902, 900, 899, -1000, 944, 943, 942, 940,
	939, 938, 936, 934, 933, 1431, -1000, -1000, -1000, -1000,
	1485, 83, 166348, -1000, 850, 83, -1000, -1000, 931, -1000,
	44074, 44074, 44074, -1000, 3209, 63352, -1000, 3449, -1000, 93,
	93, 1244, 80732, -1000, 77377, 1244, 547, 1077, 88160, -1000,
	3926, -1000, -1000, 511, 35544, 34171, 4761, 35544, 1956, 166348,
	743, 124, 122, -1000, 121, 120, 166348, 166348, 129660, 129660,
	129660, 166348, 4944, 4943, 4213, 63352, -1000, -1000, 97524, 180346,
	137656, 1952, 85, -1000, -1000, 4642, 102203, 96858, 4001, 180346,
	3999, 3924, 179680, 106258, 331, 4188, -1000, -1000, 930, 331,
	4186, -1000, 4941, -1000, -1000, -1000, -1000, -1000, 4183, 4940,
	4939, 4938, 166348, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3093, 4180, -1000, 84, -1000, 133656, 3093, 4179, -1000, 84,
	3093, 4178, -1000, 84, 132990, -1000, -1000, 3093, 4177, -1000,
	-1000, 330, 4176, -1000, -1000, 3690, 1286, -1000, -1000, 69778,
	-1000, 329, 4174, -1000, -1000, 509, -94, 4173, -1000, -1000,
	-1000, -1000, -1000, -1000, 185893, -1000, -1000, -1000, 179012, -1000,
	-1000, 4350, -1000, 166348, -1000, 63352, -1000, -1000, 4641, 1966,
	4396, 4525, -1000, -1000, 60, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3451, 3443, 1570, 3263, -1000, 4243, 2037, 45502,
	4295, -1000, -1000, -1000, -1000, -1000, 496, 35544, 3803, -1000,
	-1000, 166348, -1000, 166348, 3677, 3677, -1000, -1000, -1000, 4765,
	4764, 3677, 3677, 166348, 166348, -1000, -1000, -1000, -1000, -1000,
	-1000, 3126, -1000, -1000, -1000, 2048, 3485, -1000, -1000, -1000,
	84114, 3923, 1741, 108968, 108968, 108968, 108968, 108968, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 152324, -1000,
	-1000, 2016, 2892, 2124, 4340, 2855, 129660, -1000, 2446, -1000,
	-1000, -1000, 4378, 4155, 1434, 166348, -1000, -1000, 3998, -1000,
	99528, 3998, 132324, -1000, 131658, -1000, 130992, -1000, -1000, 129660,
	-1000, 129660, -1000, 4936, 4934, 4933, -1000, -1000, 4928, 173674,
	-1000, 1998, 4371, -1000, 2588, 937, 54784, 185760, 4361, -1000,
	4927, 2802, 3997, 185893, -1000, 4153, 2193, 2187, 166348, -1000,
	-1000, 166348, -1000, 166348, -1000, 166348, -1000, 166348, -1000, -1000,
	-1000, 3229, 2211, -1000, -1000, 3450, -1000, -1000, -1000, 1377,
	-1000, 1366, 129660, 129660, 129660, 129660, 3921, 3587, 129660, 129660,
	2213, -1000, 54070, 4327, -1000, -1000, 4007, 4926, 2398, -1000,
	2697, -1000, -1000, 2819, 3919, 4374, -1000, 3918, 1474, 2587,
	-1000, -1000, 76022, 4682, -1000, 495, 4821, 495, -1000, -1000,
	-1000, 60, -1000, 4909, 4172, 1871, -1000, 3259, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2930, 4170, -1000, 3226, 4169,
	2900, -1000, -1000, 7481, -1000, 2876, -1000, 3128, -1000, 182068,
	1760, -1000, -1000, -1000, -1000, 2264, 4168, 94, -1000, -1000,
	3382, -1000, 4759, 3858, -1000, -1000, -1000, 182020, -1000, -1000,
	2933, 2958, 4681, 2803, -1000, 1719, 4166, -1000, 3683, 3683,
	120310, 4056, 85468, 84114, 100194, 62, -1000, -1000, -1000, -1000,
	-1000, 58, -1000, 32772, 185893, -1000, -1000, -1000, -1000, 185893,
	1281, -1000, -1000, 4165, -1000, 185893, 1252, -1000, -1000, 4163,
	-1000, 3520, -1000, 3993, -1000, -1000, -1000, 3349, 105580, 3447,
	1067, -1000, 3341, 1374, -1000, 119644, 118976, 2912, 4925, -1000,
	4919, -1000, -1000, 4918, -1000, 4916, 4915, 4914, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 118308, 3207, -1000, -1000, 2003,
	1314, 108968, -1000, 3338, 4520, -1000, 117640, 1439, -1000, 1339,
	3337, -1000, 1992, 130326, 1378, 3334, -1000, 4912, 4445, 3604,
	1339, 3332, -1000, -1000, -1000, -1000, -1000, 3917, -1000, 929,
	1093, -1000, 1093, -1000, 2358, -1000, 173008, 93, 129660, 4745,
	-1000, 31, -1000, -1000, -1000, 1259, -1000, 82756, -1000, 82756,
	142326, 108968, 1314, 3916, 93519, 185584, -1000, 1370, -1000, -1000,
	185893, -1000, -1000, -1000, 3517, -1000, -136, 3682, -1000, 108968,
	84114, 3914, 3511, -1000, 185893, -1000, -1000, -1000, -1000, 185893,
	-1000, -1000, -1000, 108968, 2003, -1000, 151658, 116972, 332, -1000,
	-1000, 172342, -1000, 3484, -1000, 166348, -1000, 3432, 3969, 3992,
	1957, 3228, 3570, -1000, 53356, 3538, 69064, 3245, 303, -1000,
	-1000, 303, 303, 43360, -1000, -1000, 45502, 1189, 102203, 102203,
	35544, 1975, 63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352,
	63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352,
	63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352,
	63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352, 63352, 2879,
	63352, 1816, 63352, 63352, 63352, 63352, 2692, -1000, -1000, 2675,
	806, 2812, 885, -1000, -1000, -1000, 4733, 4733, 4733, 787,
	787, 787, 16147, 16147, 818, 4910, 1057, -1000, 63352, -1000,
	181, 82068, 63352, 34171, -1000, 737, 8331, 3471, -1000, 735,
	33457, -1000, -1000, -1000, 36934, 863, 68350, 63352, 1389, 185893,
	-1000, -1000, 2157, 4761, 32087, 4023, 3754, 924, 1203, 1201,
	40504, 39790, 39076, 38362, 1032, 971, 63352, 63352, 63352, 63352,
	63352, 63352, 63352, 63352, -1000, 4763, -1000, -1000, 4761, -1000,
	-1000, 921, -1000, 4761, 4761, -1000, 4761, 1980, 1979, 4761,
	-1000, 4761, 4761, 10886, 10886, 52642, 51928, 51214, 70492, 50500,
	63352, 37648, 49786, 49072, -1000, 72634, 166348, 83, 4638, 166348,
	63352, 3912, 28, -1000, 26622, -1000, 373, 373, 919, 29,
	185893, 2698, 2698, 79394, 3240, 3099, 3099, 3099, -1000, 1244,
	25225, 1244, 148326, 3117, 1244, 1244, 541, 730, 76700, 3449,
	147660, 1040, 918, 115, 113, 108, -1000, -1000, 106, 96,
	-1000, -1000, 129660, 917, 35544, 487, -1000, 180, 63352, 63352,
	63352, 729, -1000, 1038, -1000, 485, 2807, 2810, 23, 1948,
	-1000, -1000, -1000, -1000, 3535, 3534, 3533, 3532, -1000, 3531,
	3206, -1000, -1000, -1000, 2626, 21, 1945, 129660, 166348, 2534,
	-1000, -1000, -1000, -1000, 100194, 79, 100194, 166348, 4326, 129660,
	129660, 11, -1000, 180346, 371, 16, -1000, 1711, 484, 4761,
	-1000, -1000, -1000, 4908, 4907, -1000, 537, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 912, 909, 909, 909, -1000,
	1430, 908, 532, 903, 526, 902, 900, 899, -1000, -1000,
	-1000, -1000, -1000, 3908, 129660, 166348, 2496, 98862, 136990, -94,
	137656, 180346, 13, -1000, -1000, -1000, -1000, 129660, -1000, -1000,
	129660, -1000, 90834, -1000, 129660, -1000, 166348, -1000, -1000, -1000,
	4906, -1000, 129660, 129660, 3093, 4159, -1000, 129660, -1000, 129660,
	323, 4151, -1000, -1000, 166348, -1000, 129660, 129660, -1000, -1000,
	76022, 181940, 4761, -1000, 166348, 166348, 166348, 180346, 180346, 318,
	-1000, 129660, 1189, 10, 1562, 60, -1000, -1000, -1000, -1000,
	2128, -1000, 2477, -1000, -1000, -1000, -1000, -1000, -1000, 2092,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1375, -1000,
	-1000, -1000, -1000, 4750, 4748, 63, -1000, -1000, 35544, -1000,
	2731, -1000, -1000, -1000, -1000, 166348, 166348, -1000, -1000, 166348,
	166348, -1000, -1000, 78, 2198, -1000, 2729, 129660, 3989, -1000,
	-1000, 108968, 84114, -1000, 5141, 1331, 1331, 1331, 1331, 1367,
	-1000, -1000, -1000, -1000, -1000, -1000, 4905, 4901, 4900, 4899,
	-1000, -1000, 1355, 129660, 166348, 129660, -1000, 3654, 2246, -1000,
	3986, 482, -1000, 180346, -1000, 180346, 166348, 129660, -1000, -1000,
	1355, 166348, 1355, 166348, 1355, 166348, 1355, 1355, -1000, -1000,
	-1000, -1000, 71, -1000, 4220, 4064, -1000, 181, 181, 63352,
	-1000, -1000, 185893, -1000, 4064, 63352, -1000, -1000, 2165, -1000,
	4898, 2378, -1000, 3975, -1000, 3973, -1000, 143, 480, 478,
	-1000, -1000, 4762, 2665, -1000, 4812, -1000, 2817, 1366, 1366,
	-1000, -1000, -1000, -1000, 129660, 3904, -1000, -1000, -1000, -1000,
	-1000, 4895, 4320, 185893, -1000, 104902, 2618, -1000, -1000, -1000,
	-1000, 129660, 129660, 129660, 129660, 166348, 1361, 76, -1000, -1000,
	-1000, -1000, -1000, 4271, -1000, 166348, 4262, 4270, 129660, 76022,
	-1000, -1000, -1000, 4820, -1000, 55, 2186, 699, 1934, -1000,
	116304, 3400, 4372, 4894, 3590, 4317, 2355, -1000, 2159, 896,
	-1000, 4490, 114304, 4563, 4582, 1744, -1000, 3903, -1000, -1000,
	-1000, 1270, 2395, 2573, 1932, 1925, 114304, 3226, -1000, 102203,
	-1000, 3665, 4467, 1790, 3361, 1787, 1790, 1790, 1826, 1823,
	-1000, 114304, 2563, 1922, 1915, 4526, 1912, 2561, 1904, 4235,
	-1000, -1000, 3197, 3284, -1000, -1000, -1000, -1000, 2409, 3691,
	-1000, 3452, 1785, 1785, 166348, -1000, 1890, 2560, 1872, 1860,
	-1000, -1000, 2227, 2287, -1000, -1000, 150990, 2401, -1000, 1847,
	1846, 167680, 4679, 3473, 3021, 1101, 2818, -1000, 1753, 1843,
	3894, -1000, -1000, 54, 4557, 4568, 1744, -1000, -1000, 3892,
	1842, -1000, 1418, -1000, -1000, 4741, -1000, -1000, 4466, 129660,
	35544, 2067, 2065, 2055, 2554, 1841, 75, -1000, 4542, 2733,
	-1000, 4708, 108968, -1000, 3373, 2275, -1000, 2003, 2003, 145662,
	166348, 4323, 1837, 2919, 2936, 2725, 2721, 2715, 3129, -1000,
	4514, 4510, -1000, -1000, -1000, -1000, 4397, 4392, 2944, 1833,
	1831, -1000, 1376, 11862, 4269, -1000, 180346, 1376, 1376, 2775,
	4148, 3649, 2117, -1000, 3681, 1237, 3680, -1000, -1000, 1237,
	62, 100194, 166348, 476, -1000, 63352, 181, 63352, 181, -1000,
	4448, 4143, 4611, -1000, 3891, 76022, 4138, 4137, 4893, 895,
	-1000, -1000, 894, -1000, 3479, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 893, 3331, 3890, 166348, 253, -1000, 129660, -1000,
	4608, 150324, -1000, 4136, 180346, 3226, 3328, -1000, 115638, -1000,
	4135, 2840, 774, 3327, -1000, 769, 4892, 4134, -1000, 171676,
	-1000, 4350, 1775, 4133, 1093, 2263, 742, 4607, 93, 742,
	91512, -1000, 166348, -1000, 93, 8561, 110300, 9, 7, 728,
	-1000, 166348, 166348, 4283, 2886, 2850, -1000, 1325, 84114, -1000,
	84114, 4, -1000, -136, 3679, 84114, -1000, 1314, -73, 1237,
	-1000, 1237, -1000, -1000, 114304, -1000, 3432, 3969, -1000, -1000,
	-1000, -1000, -1000, -1000, 1880, 3156, -1000, 3498, -1000, 2300,
	-1000, -1000, -1000, 185893, 71206, -1000, -1000, 185893, 2603, -1000,
	67636, 66922, -1000, -1000, 2397, 129660, 3556, -1000, 3556, -76,
	-1000, -1000, 182894, 3497, 129660, 63, 45502, -1000, -1000, -1000,
	-1000, -1000, 1265, 1240, 1240, 1764, 1764, 1764, 1764, 4470,
	6888, 7074, 3389, 11614, 11614, 399, 399, 399, 399, 399,
	11614, 772, 787, 787, 772, 772, 772, 772, 772, 787,
	787, 772, 787, 11614, 11614, 11614, 787, 16147, 12691, 14953,
	63352, 63352, 1828, 2719, 806, 14690, 63352, 7654, 7654, 7654,
	7654, -1000, 2349, -1000, -1000, -1000, -1000, 3889, 892, 70492,
	70492, -1000, -1000, -1000, -1000, 36220, 63352, -1000, -1000, -1000,
	-1000, 48358, -1000, -1000, 181892, -330, 726, -1000, 475, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 724, -75, 180, 466, 63352, 166348, -1000,
	18104, 1033, -256, -1000, 66208, -1, 1883, -1000, 63352, -1000,
	-1000, 1825, -1000, 1824, 1822, 1819, -1000, 891, 723, 454,
	-1000, 3094, 888, 887, 63352, -1000, -1000, -1000, -1000, -1000,
	181191, -1000, -1000, 181143, -1000, -1000, 181063, -1000, -1000, 181015,
	-1000, -1000, -1000, -1000, -1000, 185408, 16976, 15439, 13151, 7777,
	12070, 10346, -10, 722, -11, 4761, 720, 711, 709, 1257,
	1254, 708, 707, 705, -12, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -20, 702, -1000,
	3888, -75, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	700, -1000, 678, -1000, 185046, -75, 676, 7066, -1000, 70492,
	70492, 70492, 70492, 670, -1000, 182814, -1000, 184841, 47644, 47644,
	47644, 669, 184710, 63352, -75, -21, -1000, -22, -1000, -1000,
	-1000, -1000, 3362, -27, -1000, -29, 1380, 78056, 44074, 1975,
	63352, 63352, 63352, 63352, 1816, 2692, 2675, 806, 35544, -1000,
	885, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1380, 1380, 63352, -1000,
	63352, 3509, -1000, -1000, -1000, -1000, -1000, 3507, 2872, 2698,
	79394, -1000, -1000, -1000, -1000, 148326, -1000, 4745, 4122, -1000,
	148326, -1000, -1000, 166348, 850, -1000, 148326, 148326, 1244, -1000,
	-1000, 166348, 849, 1244, 148326, 906, -1000, -1000, -1000, -1000,
	-1000, 665, 81401, 450, 35544, 651, 46930, -1000, 4465, 183790,
	41, -39, -1000, -1000, 35544, 1339, -1000, 1339, -1000, -1000,
	2724, 3664, 3664, 3664, 3664, 3664, 129660, -1000, -1000, 180346,
	1806, 72, -57, 3678, 3674, 3673, 3672, 62, 100194, 62,
	58, 166348, 74, 74, 4695, -244, -1000, 2954, -1000, 102203,
	-1000, 1056, 1606, 35544, -1000, -1000, -1000, -1000, 4761, 180346,
	3887, 352, 3668, 3663, 3662, 3659, -1000, 3194, 135658, 315,
	-94, 180346, -1000, 331, -46, -1000, -1000, 101526, 96189, -1000,
	3104, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 331, 4889,
	-1000, 3093, -1000, -1000, 129660, 3093, 3093, -1000, 129660, 129660,
	3093, -1000, 330, 3690, -1000, -1000, 329, -1000, -1000, -94,
	-1000, 1363, 45502, -1000, 2128, -1000, -1000, 2060, -1000, 2874,
	-1000, 1963, -1000, -1000, 45502, -1000, 4286, -1000, 2575, -1000,
	-1000, -1000, -1000, 3111, -1000, 4227, 1314, 2047, 3657, 1331,
	73, 883, -1000, -1000, -1000, 2270, -1000, -1000, 1206, 1202,
	1199, -1000, 1197, -1000, -1000, -1000, -1000, -1000, -1000, 2221,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 92, -1000,
	2553, 180346, 2651, 180346, 1749, 166348, -94, -94, 38, -1000,
	-1000, 296, 72, -1000, 1355, -1000, 1355, -1000, 1355, -1000,
	-1000, 4064, -1000, 71, 4220, -1000, -1000, 185893, 71, 185893,
	-1000, -1000, -1000, 2373, 2372, 166348, -1000, 166348, 166348, 3966,
	-1000, 166348, -1000, -1000, -1000, -1000, -1000, 129660, -1000, 4888,
	-1000, -1000, 35544, 166348, 129660, 35544, 129660, 3960, 3957, 1361,
	1361, 1361, -1000, 2747, 166348, -1000, -1000, 166348, -1000, 1360,
	-1000, 3697, 166348, 166348, 129660, -1000, 146328, 166348, -1000, 3077,
	180346, -1000, 3323, 171010, 3311, 170344, 102203, -1000, -1000, 882,
	1278, 3496, 3494, 1487, 166348, 166348, 3493, 169678, 169012, -1000,
	4887, 166348, 2953, 63352, 146328, 4464, 3152, 3828, 181, 181,
	-1000, 181, -1000, -1000, 880, 1632, 129660, 129660, 166348, 180346,
	129660, 2654, -1000, -1000, -1000, -1000, -1000, 114970, -1000, 4430,
	-1000, 1790, -1000, -1000, -1000, 1790, -1000, 1790, 3226, 2650,
	166348, 180346, 129660, -1000, -1000, -1000, -1000, 166348, 166348, 180346,
	3193, 3278, 3192, 3676, -1000, -1000, -1000, -1000, -1000, -1000,
	166348, 166348, 180346, 180346, 149658, 2805, 148992, 2800, 2780, -1000,
	-1000, -1000, 2754, 2773, 2993, 2551, 166348, -1000, -1000, -1000,
	-1000, -1000, 1877, -1000, 1101, 1795, 3886, 63352, 63352, 3022,
	181, 181, -1000, 181, 877, 35544, -1000, -1000, 2310, -1000,
	3947, 166348, 4809, 168346, 4806, 166348, 166348, 166348, 180346, 4345,
	166348, 70, -1000, 1855, 3704, -1000, 4708, -1000, 1194, -1000,
	-73, 64, -116, -1000, 1193, 1192, 58, 1793, 75345, 2673,
	-1000, 3239, -1000, -1000, -1000, -1000, 1784, 2859, 2997, 166348,
	4424, -1000, 166348, 4421, -1000, -1000, -1000, 166348, 180346, -1000,
	167680, 11862, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2986, 3689, 1497, 104224, 166348, 1719, -1000, -1000,
	2542, 1774, 1768, 114304, 2942, 2539, 2637, 84114, 1328, 84114,
	3610, -1000, -1000, 31402, 185893, -1000, 185893, -1000, 95523, 2628,
	108968, 108968, 2709, -1000, 75345, 166348, -1000, 92181, 92181, 166348,
	110966, 1291, 4132, 89498, 58, 1314, 2003, 4034, 2393, -116,
	876, 166348, -1000, -1000, 3226, 4129, 774, 3322, -1000, 180346,
	1436, 4605, 4128, 868, 166348, 4886, -1000, 129660, 3191, 3321,
	-1000, -1000, 167014, 4201, 1101, 166348, 1490, -61, -1000, 63352,
	2786, -1000, 87483, 1459, 166348, -1000, 2662, 313, -1000, -1000,
	-1000, 118, 166348, -1000, 1068, -1000, -1000, 8561, 8561, 1314,
	84791, -63, -1000, 259, 866, 1187, 1185, -1000, 9664, -1000,
	-136, -1000, 108968, 1325, 84114, -136, 3655, 3885, -1000, -1000,
	1357, -1000, -1000, -1000, -1000, 1518, -1000, 2603, 3151, -1000,
	863, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3425, -1000, -1000, 43360, 1241, -1000, -1000, 129660, 91, 63,
	63352, 63352, 13913, 12452, 63352, 70492, 70492, -1000, 63352, 10892,
	-1000, -1000, -1000, -1000, -1000, 3867, 860, 63352, 102203, 2947,
	2642, -1000, 649, 8875, 772, -1000, 63352, -1000, 648, -1000,
	643, 25925, -75, -64, -1000, -1000, 1055, -1000, 4196, -1000,
	63352, 184505, 3403, 2699, 2627, 2416, 4761, 4805, 30717, -1000,
	92850, 1387, 3124, 24151, -1000, -1000, -1000, -1000, 102203, 102203,
	63352, 63352, -1000, 63352, 63352, 63352, -1000, -1000, -1000, 4761,
	626, -1000, -1000, 1249, -1000, -1000, -1000, 1249, -1000, -1000,
	1790, -1000, 1790, -1000, 63352, -1000, -1000, 3866, 63352, -1000,
	102203, 102203, 70492, 70492, 70492, 70492, 70492, 70492, 70492, 70492,
	70492, 70492, 70492, 70492, 70492, 70492, 70492, 70492, 70492, 70492,
	70492, 70492, 3476, 70492, 4725, 4725, 4725, 1419, -1000, 3956,
	3866, 63352, 63352, 102203, 625, 624, 623, -1000, 63352, -75,
	-1000, -1000, 859, -1000, 3417, -1000, 166348, -1000, 3752, -1000,
	63352, -109, -1000, 3449, -1000, -1000, -1000, 3752, 3752, -74,
	185893, 79394, 79394, -1000, 852, 63352, 3505, -1000, -1000, 1031,
	-327, -1000, 1184, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1183, 1182, -1000, 850, -1000, -1000, -1000, 148326, 849, -1000,
	166348, 148326, 1020, -1000, -77, -1000, -1000, -79, -1000, 147660,
	35544, -1000, -1000, 63352, 63352, 622, 619, -1000, 144, 1380,
	359, -1000, 1339, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3529, -244, 180346, 180346, 2538, 2536, 2533, 2523, 62,
	58, 3145, -1000, 3763, 4804, -1000, 4757, 1054, 1018, 182,
	614, -94, 180346, 180346, 2517, 2505, 2503, 2495, 94854, 3857,
	180346, -1000, -1000, -1000, 92181, 102203, -1000, 102203, -1000, -1000,
	-1000, -1000, -1000, 3093, -1000, -1000, -1000, 323, -1000, -1000,
	-1000, -1000, -1000, 3609, -1000, 60, -1000, -1000, -1000, 63352,
	-1000, 1298, -1000, 2192, -1000, 2690, -1000, -1000, 129660, 84114,
	-1000, 3830, 3830, -1000, 84114, 84114, 108968, 108968, 59, 848,
	-1000, 1179, 1178, 1177, 30032, 166348, 198, 3654, -94, 178344,
	4678, 4677, -1000, 102872, -1000, -1000, -1000, -1000, -1000, -1000,
	1355, -1000, -1000, 4802, 58, -1000, -1000, -1000, -1000, -1000,
	3050, 3238, 3050, 2645, 2639, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2437, -1000, 4344, 847,
	1763, 1757, -1000, -80, -1000, 1176, -1000, -1000, -1000, -1000,
	-1000, 3820, -1000, 4127, -1000, 3320, -1000, 1464, 3319, 2293,
	-1000, 63352, 846, 3600, 845, 843, 4885, 2977, 4880, 1489,
	4121, 3093, 4120, 3093, -1000, -1000, -1000, 1274, -1000, 185893,
	-82, -1000, 3152, -1000, 842, 841, -1000, 55, 2164, 689,
	1752, 1354, -1000, -1000, 63352, 63352, 146994, -1000, 671, 4336,
	88, -1000, -1000, -1000, 2491, 1740, 1737, -1000, -1000, 1790,
	-1000, -1000, -1000, 3226, 2489, 1718, 1696, -1000, -1000, -1000,
	-1000, -1000, -1000, 4044, 3566, 3277, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3318, -1000, -1000, 144996, -1000, 4119, 144996,
	3698, 1101, 144996, 4336, 3774, 1353, -1000, 4038, 4037, 1242,
	144996, 63352, 63352, 184089, 183988, -1000, 1352, -1000, -1000, 63352,
	-1000, 54, -1000, 1687, 4536, 3317, 129660, -1000, 3093, 4115,
	1682, -1000, 1680, -1000, -1000, -1000, 4535, 4530, 1629, 2733,
	108968, 84114, 2566, -1000, 4509, 3143, 4742, -1000, 3667, 4708,
	84114, -1000, 145662, 108968, 108968, 2090, -1000, -1000, -1000, 75345,
	2389, -93, -1000, 1175, 1382, 51, -1000, 1189, -1000, 51,
	-1000, -1000, -1000, -1000, 4742, -1000, -1000, -1000, -1000, 103548,
	-1000, -1000, -1000, -1000, 1376, 166348, 180346, 129660, 2594, -1000,
	-1000, 135658, 136324, 166348, 3649, 1237, -1000, 3626, 1237, 1328,
	3847, -1000, 3551, -1000, 149, 1314, -1000, 108968, -1000, -1000,
	3235, 3447, 1343, 613, 50, -1000, 1640, 612, 4879, 611,
	-88, 49, 102203, -1000, -1000, -1000, -1000, 3311, 129660, 840,
	166348, 1685, 3589, 166348, 166348, 4604, -1000, 3223, 672, 129660,
	1412, -1000, 4745, -1000, -1000, -1000, 166348, 44074, 145662, -1000,
	4481, 129660, 4601, 4114, 1339, 129660, 181, 129660, 4773, 597,
	47, 102203, -1000, 4600, 129660, 4111, 3187, 3316, 3459, 1101,
	109634, 1339, 1380, 79394, -1000, 2263, 185893, -1000, 2662, 46216,
	4333, -96, -1000, -1000, -1000, 1380, 91512, 79394, 63352, 4878,
	-97, -1000, -1000, -1000, -1000, -1000, 108968, 1314, 166348, 166348,
	4876, 108968, 108968, 108968, 46, 838, -1000, 1173, 1172, 1169,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1160, 1157, 1156,
	1155, 1153, -1000, -1000, -1000, 3435, 4241, -1000, -1000, -1000,
	-1000, -1000, 1325, -1000, -1000, -136, 1325, 84114, 181, -1000,
	3135, -1000, 3131, -1000, -1000, -1000, -1000, -1000, 3586, 4351,
	35544, 4462, 7654, 63352, 63352, 9414, 666, 599, 7654, 63352,
	63352, 102203, 186701, -106, 63352, 63352, -1000, 63352, 1012, 185893,
	-1000, 4799, -1000, -1000, 4755, -1000, -1000, -1000, 185893, 63352,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 596, -1000, 150,
	-1000, -1000, -1000, 175672, -1000, 63352, 595, 4463, -1000, 584,
	583, 8678, 449, 24050, 23266, 22389, 582, -1000, -1000, -1000,
	581, 573, 185893, 3956, 185893, -1000, -1000, 1277, 1277, 1766,
	1766, 1766, 1766, 4725, 481, 1255, 413, 616, 616, 616,
	703, 1419, 1419, 616, 616, 616, 1419, 3843, 3475, 837,
	8930, -1000, -1000, 185893, 185893, 568, -1000, -1000, -1000, -75,
	1388, -1000, -1000, 3747, 4461, 185893, -1000, 79394, 3747, 3747,
	-1000, -1000, 2872, 166348, 185893, 79394, -1000, 4122, -1000, 27986,
	27310, 1053, -1000, -1000, -1000, -123, -1000, 102203, -1000, -1000,
	-1000, 4745, -1000, 81401, -1000, 144, 183790, 45, -1000, -1000,
	-1000, 35544, -1000, 5053, 4335, -1000, 1152, -1000, -1000, 108968,
	108968, 4875, 4874, -1000, 4798, 4797, 3003, 4795, -1000, 3664,
	-1000, -244, -111, 166348, 166348, 166348, 166348, -1000, 3139, -1000,
	1011, 4871, 1049, 35544, -1000, -94, -94, 166348, 166348, 166348,
	166348, 3841, 129660, 166348, 2440, 180346, -94, -1000, -1000, -1000,
	-1000, -1000, -1000, 4282, 185893, 3954, 3705, 3700, -1000, 4216,
	1314, 1331, -1000, -125, -1000, -1000, -1000, -1000, 2149, 2149,
	108968, 108968, 63352, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35544, 2319, -1000, 831,
	830, 43, 829, -1000, 1755, 166348, 166348, -1000, 146328, 45502,
	2131, 141658, 166348, 4105, -1000, 4101, -1000, 1487, 2980, 22157,
	80063, -1000, 80063, 166348, -1000, -1000, -1000, -1000, 2679, 1921,
	-1000, -1000, 2380, 3390, 1538, -1000, 1782, -1000, 4380, 166348,
	-1000, 166348, -1000, -1000, -1000, 146328, -1000, 166348, 166348, 129660,
	166348, -1000, 180346, 4059, -128, 185893, 39, -1000, 1151, -1000,
	1770, -1000, 29347, 166348, 180346, 129660, -1000, 166348, 180346, 129660,
	166348, -1000, 3563, 4098, 1458, 144996, -1000, 4092, 144996, 1457,
	-1000, -1000, 144996, 3079, -1000, -1000, 4026, -1000, 185893, 183528,
	181, 63352, 4048, -130, 35544, -1000, 4793, 4792, 4091, 4388,
	-1000, 166348, 4790, 166348, 129660, 4279, -1000, -1000, -1000, -1000,
	1150, 1149, 1147, 1145, 1141, 3434, 1140, 1138, -1000, -1000,
	4715, 145662, -1000, -1000, 1330, -1000, -1000, -1000, 1959, 3184,
	1958, -1000, 2997, 75345, 1137, 166348, 45502, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2462, 1658, 1653, 3179, 3174, 3138,
	38, 2942, 1328, 37, 828, -1000, 1328, -1000, 108968, 84114,
	1314, 4599, -1000, 75345, 3840, 4870, 6792, 92181, 63352, 63352,
	3352, -1000, 3578, -1000, 140992, 110966, 3177, -1000, -1000, 80063,
	827, 166348, 826, 166348, 825, -1000, 181, -1000, 4869, 146328,
	824, -1000, 1326, 3133, -1000, 4739, -1000, 4035, -1000, 1007,
	-1000, -1000, 310, -131, 180346, 3226, 181, 129660, -1000, 774,
	1322, 774, 564, 35, -1000, -1000, 166348, -1000, 1113, 1473,
	35544, 129660, 4081, 3463, 1101, 109634, -1000, 1775, 3121, 22,
	-1000, -1000, 28, -1000, 926, 181, 3121, -1000, 22, 185893,
	-1000, 1135, 557, -1000, 4278, -1000, -1000, -133, -1000, -1000,
	10548, 10548, 108968, 84114, 108968, 108968, 108968, 84114, 108968, 108968,
	1130, 4307, -1000, 1325, -1000, -136, -1000, 3423, -1000, -1000,
	-1000, -1000, 4351, 7654, 7654, 63352, 63352, 63352, 7654, 186701,
	-138, -1000, 7654, 7654, -75, -1000, -1000, -1000, 185893, -1000,
	28662, 3074, -1000, 21418, -1000, 43360, -1000, -1000, 63352, 63352,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 70492, 3827,
	823, 102203, -1000, 556, 1381, 63352, 65494, 3449, 1381, 1381,
	-1000, -143, -1000, -1000, -1000, 4745, -1000, 4745, 4745, -1000,
	166348, -1000, -1000, -1000, 555, 43360, -1000, -1000, -146, -1000,
	108968, 2727, 108968, 108968, 4865, 4863, 1976, 4783, 4781, 4860,
	4859, 4857, 4778, 108968, -1000, -1000, -1000, -1000, -1000, -1000,
	4856, 3271, 4854, -1000, -1000, -1000, -1000, 4002, -89, -102,
	-115, -141, -1000, 1047, -1000, 4851, -1000, 295, 290, 266,
	258, 180346, 3824, 257, 3648, 3647, 3638, -94, -1000, 181,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -151, -1000, -1000,
	185893, -1000, 129660, 129660, 63352, 63352, 2236, 2236, 1126, -1000,
	-1000, -1000, -1000, 3636, 4598, -1000, 2772, -1000, 166348, 166348,
	-1000, 166348, -1000, 35544, 166348, 3756, 1671, -1000, 1278, 3490,
	821, 70492, 1517, 129660, 1043, 3736, 3710, -1000, 4667, 4457,
	3718, -153, -1000, 166348, 63352, 166348, -154, -162, 3244, 3694,
	-1000, -1000, 1516, 3708, 3702, -1000, -1000, 6718, 1669, 63352,
	1507, -1000, -1000, 3640, 1790, 1762, 1790, 1790, 1746, 4850,
	4665, 4446, -1000, 102203, -1000, 1790, 819, 3093, 3093, -1000,
	-164, -170, -1000, -1000, -1000, 63352, 1647, 166348, 44788, -1000,
	4849, 4336, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	144996, 144996, -1000, -1000, -1000, 144996, 4336, 166348, -1000, 63352,
	-1000, 183230, 63352, 1592, -1000, -1000, -1000, 4777, 3093, 35544,
	3093, -1000, 3093, 4388, 1536, 108968, 63352, 1973, 84114, 84114,
	1121, 63352, 63352, -1000, -1000, -1000, 3186, 63352, 75345, 63352,
	-1000, -1000, 75345, -1000, -1000, 166348, 180346, 129660, 2235, 2235,
	3950, -1000, -1000, -1000, 2566, 2566, -1000, 20, 1328, 2829,
	2391, 3173, 2678, -1000, 2225, 3107, 3352, -1000, 4776, 109634,
	-1000, -1000, -1000, -1000, 185893, 185893, 3107, 3064, 4848, -1000,
	-1000, -1000, -1000, 3487, -1000, -1000, -1000, 166348, 3478, 3703,
	-175, 80063, 816, 80063, 815, 166348, 1316, -1000, -185, 110966,
	1291, -1000, 1326, -1000, -1000, -1000, 1093, -1000, -1000, -1000,
	-1000, 774, 4597, -1000, 3608, 4594, -1000, 4775, 102203, 814,
	166348, 812, 166348, 3169, 811, 35544, 4325, 1101, 109634, -1000,
	4201, 3570, -1000, 3303, 166348, 4316, -1000, 3570, 806, 1314,
	805, 1314, -1000, -188, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 108968, -1000, -1000, 1325, -7, -1000, 4671, 804,
	1239, -1000, -1000, 7654, 7654, 7654, -1000, -1000, 3120, 4433,
	-1000, -17, -23, 21339, 20569, 2981, 70492, 102203, -190, -1000,
	-1000, 166348, 185893, -32, -1000, 185893, 803, 802, 715, -1000,
	-1000, -1000, 1005, 1004, 972, -1000, -1000, -1000, -1000, -1000,
	4335, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	4847, -1000, -1000, 180346, 180346, 180346, 180346, 4840, -1000, 180346,
	180346, 180346, 180346, -94, 180346, 180346, 2445, 2428, 2427, -1000,
	-1000, -1000, -1000, -195, -196, -1000, -201, 75345, 140326, 166348,
	-1000, -1000, 2293, 2550, -1000, -1000, 166348, 3315, -1000, -1000,
	-1000, 1342, 63352, 8930, 70492, 800, 63352, -1000, 799, 798,
	4592, 4250, -1000, 3575, 3797, 2669, 80063, -1000, 4351, -1000,
	20303, -1000, 1467, 2789, -1000, 4080, -1000, 797, 792, -1000,
	-1000, 185893, 63352, -1000, -1000, -1000, -1000, -1000, 1790, -1000,
	-1000, -1000, 1790, -1000, -1000, 4249, 4388, -1000, 80063, -1000,
	-1000, 791, 790, 185893, 789, 1118, 3823, -1000, -1000, -1000,
	-1000, -117, -1000, -117, -1000, -1000, 185893, 181, 185893, 788,
	4536, -1000, -1000, -1000, -1000, 3093, 129660, -1000, 185893, -1000,
	-1000, -1000, -1000, 108968, 185893, 185893, 1112, 185893, 1305, 185893,
	-1000, -1000, -1000, -1000, 1573, -1000, -1000, -1000, -1000, -1000,
	4833, 3809, 135658, -1000, -204, 2829, 1303, 44074, 75345, 3234,
	2324, -1000, -1000, -1000, 4544, 63352, -1000, -45, -1000, -1000,
	-1000, 1291, -1000, -1000, 3177, 786, -1000, 1294, 3472, 3472,
	1467, -209, 80063, -211, 80063, -214, 3159, 3607, -1000, 549,
	4591, 1326, 1380, -1000, 4590, 181, 4277, -1000, 181, -1000,
	-1000, 4773, 545, 80063, -1000, 129660, 80063, 3167, 2929, 3439,
	109634, -1000, 3459, 2662, -1000, -1000, -216, 166348, 2662, -1000,
	-1000, 108968, -1000, -1000, -1000, -1000, 3423, -1000, 166348, -1000,
	166348, 3013, 63352, 43360, 43360, -1000, -1000, 2981, -217, -1000,
	-59, -1000, 4589, 65494, 4831, 4830, 4829, -1000, -1000, -1000,
	-1000, -1000, -244, -244, -244, -244, -1000, -94, -94, -94,
	-94, -94, -94, 166348, 166348, 166348, -1000, -1000, -1000, -1000,
	-1000, 2769, -1000, 3311, -1000, -1000, 4078, -1000, 3744, 785,
	20106, 8930, 3419, 166348, 18997, 3226, 3226, -1000, 4578, 3786,
	-1000, -1000, 3022, 784, -1000, -1000, -1000, -1000, 1241, 166348,
	1294, 3743, 129660, -1000, 3226, 3226, 185893, -1000, -1000, -1000,
	1476, -228, 3050, 3050, 63352, 42646, 3015, 144996, -1000, 63352,
	-1000, -1000, 4388, -1000, 84114, -1000, 2982, 180346, -1000, 180346,
	3166, -1000, 3794, -1000, 2583, 249, 1305, 75345, 102203, -1000,
	-1000, 185893, -1000, 4772, 3159, 166348, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2669, 1467,
	-233, 3022, -242, -1000, -1000, 4367, -1000, 4275, 3578, 181,
	-1000, 181, -1000, 4827, 1322, 535, -1000, -243, 1473, -260,
	129660, 2808, -1000, 1101, -1000, 3463, -1000, 1380, 4210, -1000,
	-263, -1000, -266, -268, 533, 64780, 64780, 64780, -75, -76,
	-76, -1000, 166348, 776, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 226, 224, 194, -1000, -1000, 4027, 1243, -1000,
	1209, 2599, 530, 1486, 375, 312, -1000, -1000, -1000, 3718,
	-1000, 166348, -1000, -1000, -1000, 1243, 774, 292, 268, -1000,
	63352, 1467, -275, -1000, 1456, -278, -1000, 1455, -281, -1000,
	3807, -1000, -1000, -283, 3093, -1000, -93, 773, -244, 318,
	2235, 1303, 4507, 3127, 1093, -1000, 3163, 3352, -1000, 14336,
	-1000, 3433, -286, -1000, -1000, 3022, 2669, 1467, 1294, 3022,
	3302, -1000, 3064, 1316, -1000, -1000, -1000, -1000, 1467, 770,
	2669, 768, 2129, 1101, -1000, -1000, 1790, 4325, 4208, 1792,
	1314, -1000, -1000, -1000, 4076, -1000, 71920, 3185, 2638, 182766,
	4076, 4076, -1000, -1000, 180346, 180346, 180346, 166348, 1294, 4456,
	-1000, 1229, 1220, 1987, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1380, -288, -1000, 3419, -1000, -1000, 185893, 1294,
	-1000, 3050, 3625, -1000, 3050, 3800, -1000, 2995, -1000, -1000,
	2997, -1000, -1000, 3796, -1000, 4692, 90165, 1380, 75345, 3107,
	-322, -1000, -1000, -1000, -1000, -1000, 1294, 166348, 1294, 3022,
	2669, 1380, 1294, 2624, 2609, 4826, 1291, 3159, 2669, 80063,
	3022, 80063, 2962, -1000, 144996, -1000, 2929, 1761, -1000, 2352,
	-1000, -1000, 2453, 4653, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -94, -94, -94, -1000, -1000, 1107, -1000, 4238, -1000,
	1505, 2957, 2957, -1000, -1000, 1209, -1000, -1000, 758, -1000,
	757, -1000, -291, 180346, -1000, -1000, -116, 145662, 2829, 1305,
	-1000, -1000, -1000, -1000, 1380, 1294, 3022, 1944, 1380, -1000,
	4824, -1000, 3159, -1000, 3022, -297, 1294, -298, 3083, -1000,
	-117, 2808, -1000, 2347, 91512, 2619, -1000, -1000, 3113, 64066,
	63352, -1000, 4711, -1000, -1000, 3518, -1000, 3718, 63352, 63352,
	-1000, 318, -300, 1303, -1000, 1944, 1380, 1294, -1000, 1400,
	-1000, -1000, 4730, 1944, -1000, 3433, 1294, 1467, 1380, 2669,
	2134, 1101, 2129, 91512, -269, -1000, -1000, -1000, 185893, -1000,
	-1000, -1000, -1000, -305, -306, -1000, -1000, -1000, -1000, 1944,
	1380, -1000, -1000, -1000, -1000, 1380, 2669, 1944, 3022, 2396,
	-1000, 2763, 180346, 2962, -269, -1000, 3022, 1571, -1000, 1944,
	1944, 3022, -1000, 1294, -1000, -1000, 2754, 144996, -1000, 3083,
	-1000, -1000, -1000, 754, -1000, -1000, 1294, 1380, 1454, 2134,
	63352, 1380, 1944, 144996, 2396, -315, 1944, -1000, -117, -1000,
	3022, -1000, -1000,
}

var sqlPgo = [...]int16{
	0, 5820, 5819, 56, 5818, 5815, 5812, 5810, 5808, 5803,
	5802, 5801, 5800, 5795, 5794, 5790, 213, 5788, 5786, 5785,
	5782, 5778, 5775, 5772, 5770, 5765, 5764, 5762, 5761, 5755,
	5754, 5753, 5752, 5751, 5750, 165, 250, 5748, 5743, 5742,
	5732, 5731, 5726, 5725, 5724, 5722, 5717, 5716, 5715, 5714,
	5712, 5711, 5709, 5708, 5707, 5704, 5703, 5702, 5698, 5697,
	5693, 5689, 5686, 5684, 5680, 5677, 5676, 5675, 5673, 5672,
	5669, 5668, 5667, 5666, 5665, 5664, 5661, 5659, 5658, 5657,
	5654, 5646, 5645, 5643, 5642, 5641, 69, 5637, 5635, 5634,
	5629, 5628, 5627, 5626, 5624, 5623, 5622, 90, 64, 5621,
	5620, 5619, 5618, 5616, 5615, 5613, 5609, 5607, 5606, 5605,
	5602, 5600, 5599, 5598, 5596, 5595, 5593, 5592, 5591, 5589,
	5588, 196, 5587, 5585, 119, 96, 5584, 376, 5583, 5582,
	5581, 5580, 5579, 5576, 5571, 5570, 5569, 5564, 5562, 5561,
	5559, 5557, 5555, 266, 5553, 377, 5550, 52, 232, 5546,
	5536, 5534, 60, 5532, 5531, 374, 5530, 5529, 5528, 5527,
	5523, 382, 5518, 5517, 5516, 5515, 5513, 319, 5512, 5511,
	5510, 5509, 5502, 5500, 144, 203, 5498, 5493, 925, 5489,
	5488, 5487, 5486, 5485, 5483, 5482, 297, 313, 5481, 5480,
	5479, 346, 251, 5476, 369, 5475, 5474, 5473, 5472, 5471,
	320, 5470, 5469, 5468, 5467, 5465, 5464, 5460, 5459, 5457,
	136, 139, 5455, 5454, 5453, 5452, 5451, 5450, 5446, 5445,
	5444, 5443, 5442, 5440, 5439, 5438, 5437, 5435, 5433, 5431,
	5430, 5429, 5428, 5427, 5426, 5425, 5423, 5422, 5421, 5418,
	5417, 5416, 5415, 5414, 5412, 5411, 5410, 5408, 5405, 365,
	305, 187, 5404, 5399, 5398, 5396, 5395, 5394, 373, 371,
	5393, 5391, 5390, 5389, 5388, 4495, 5386, 5383, 5382, 5377,
	5376, 5374, 5372, 5369, 5367, 164, 20, 46, 5364, 14,
	150, 132, 127, 117, 148, 143, 22, 160, 35, 5363,
	259, 311, 186, 210, 207, 173, 5362, 176, 211, 180,
	5361, 109, 5360, 182, 169, 5359, 174, 152, 37, 18,
	330, 356, 14067, 348, 5357, 5355, 5353, 349, 286, 5352,
	339, 5351, 5348, 5347, 5346, 5345, 5344, 106, 84, 298,
	5343, 212, 5342, 5341, 198, 252, 263, 258, 260, 257,
	97, 80, 155, 120, 86, 73, 19, 4, 302, 26,
	306, 5, 5340, 7, 10, 367, 12, 352, 15, 204,
	11, 40, 5339, 5338, 5337, 5336, 5791, 195, 5334, 370,
	345, 253, 5333, 5332, 5331, 5327, 5326, 5325, 304, 5324,
	81, 317, 231, 124, 151, 390, 185, 5322, 225, 261,
	43, 5321, 248, 103, 5320, 5319, 175, 129, 13586, 7784,
	5318, 5317, 171, 105, 145, 732, 249, 237, 316, 197,
	206, 243, 241, 5316, 91, 5315, 234, 236, 264, 100,
	5314, 350, 5312, 4547, 154, 267, 226, 8434, 5311, 5307,
	5306, 121, 5302, 146, 5300, 5294, 94, 30, 3, 2,
	202, 48, 44, 29, 5291, 34, 205, 76, 31, 5289,
	38, 5287, 5286, 5285, 5272, 79, 5271, 54, 239, 5270,
	5269, 384, 5267, 5264, 149, 112, 89, 5259, 36, 5258,
	28, 256, 201, 323, 5257, 5256, 334, 191, 5241, 5239,
	274, 279, 281, 269, 322, 5237, 45, 340, 5236, 5235,
	5234, 5232, 5231, 381, 5230, 95, 13, 193, 5229, 5228,
	217, 5227, 87, 344, 288, 5224, 113, 5221, 5220, 192,
	5218, 271, 82, 133, 5216, 161, 383, 235, 332, 189,
	333, 275, 338, 5215, 5214, 5213, 277, 5212, 5211, 324,
	233, 5207, 315, 5205, 5201, 294, 387, 134, 77, 122,
	342, 118, 285, 228, 5200, 292, 221, 5199, 216, 5198,
	140, 5196, 385, 262, 318, 68, 6, 23, 138, 153,
	101, 67, 337, 229, 291, 179, 5194, 10618, 2859, 2776,
	39, 5193, 218, 190, 108, 181, 223, 368, 111, 5187,
	5181, 2598, 5179, 5177, 5173, 5172, 278, 5170, 5168, 314,
	219, 240, 5166, 214, 272, 5163, 137, 141, 102, 85,
	27, 220, 55, 379, 184, 325, 254, 293, 289, 5161,
	5160, 276, 5159, 104, 183, 296, 199, 5158, 290, 353,
	93, 5157, 5156, 116, 170, 115, 224, 3207, 99, 230,
	5155, 336, 5153, 5151, 5150, 5149, 5147, 5146, 5144, 5143,
	343, 5142, 5141, 5138, 51, 284, 5137, 282, 227, 709,
	162, 83, 283, 147, 1706, 156, 3023, 287, 126, 9,
	1, 130, 5136, 8158, 88, 5135, 0, 18820, 12079, 17143,
	5134, 5133, 18376, 5131, 10367, 5130, 5128, 5127, 310, 114,
	5124, 5122, 5121, 159, 5120, 128, 5119, 5118, 110, 5117,
	42, 24, 25, 47, 32, 246, 943, 5116, 5114, 107,
	215, 62, 5112, 378, 335, 5111, 5109, 5105, 5103, 142,
	5102, 71, 5100, 66, 5098, 5093, 74, 17, 59, 5090,
	5089, 245, 242, 4421, 247, 222, 5086, 178, 58, 5085,
	363, 98, 194, 5084, 5083, 375, 299, 301, 135, 5082,
	347, 5081, 273, 5079, 21, 50, 5078, 5077, 358, 167,
	166, 125, 362, 200, 75, 5076, 5075, 5074, 5072, 270,
	5071, 244, 5070, 5069, 5068, 158, 209, 5067, 78, 72,
	5062, 5061, 131, 309, 268, 351, 49, 5059, 5058, 33,
	327, 331, 5057, 355, 265, 5049, 208, 307, 172, 168,
	5047, 5046, 5044, 5043, 255, 5040, 5038, 5037, 5032, 389,
	5030, 5027, 354, 5026, 5025, 4526, 366, 5024, 41, 5023,
	16, 5019, 5018, 295, 4300, 5011, 5009, 8, 5008, 280,
}

var sqlR1 = [...]int16{
	0, 1, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 7, 7, 7, 7, 7, 7,
	7, 7, 7, 7, 8, 8, 8, 8, 8, 8,
	8, 8, 8, 8, 8, 14, 14, 10, 10, 10,
	10, 11, 11, 11, 11, 11, 72, 72, 12, 12,
	12, 12, 12, 12, 12, 12, 12, 12, 12, 12,
	12, 12, 12, 12, 20, 20, 20, 20, 20, 20,
	21, 21, 21, 21, 21, 51, 53, 52, 46, 46,
	47, 47, 48, 49, 49, 54, 56, 55, 57, 58,
	58, 59, 59, 59, 13, 13, 13, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 24, 24, 60, 60,
	25, 25, 62, 62, 26, 26, 63, 63, 735, 735,
	735, 736, 736, 737, 737, 737, 29, 65, 67, 67,
	471, 471, 471, 471, 22, 23, 23, 23, 23, 738,
	738, 738, 738, 50, 30, 66, 43, 43, 43, 43,
	43, 278, 278, 278, 278, 28, 28, 61, 61, 337,
	337, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	336, 336, 336, 336, 336, 336, 336, 336, 336, 336,
	734, 734, 339, 339, 338, 324, 324, 325, 325, 326,
	326, 739, 739, 340, 340, 340, 341, 341, 515, 515,
	515, 515, 515, 515, 515, 515, 515, 515, 515, 515,
	515, 515, 515, 514, 514, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 628, 628, 628, 659, 659,
	659, 659, 661, 661, 793, 793, 794, 794, 794, 794,
	794, 177, 177, 508, 508, 508, 84, 84, 84, 84,
	84, 724, 724, 280, 280, 280, 282, 282, 281, 281,
	281, 281, 281, 281, 281, 281, 281, 281, 281, 281,
	281, 795, 795, 111, 111, 112, 112, 332, 332, 331,
	331, 331, 331, 331, 331, 331, 331, 331, 745, 745,
	744, 783, 783, 743, 743, 746, 746, 746, 279, 279,
	279, 108, 108, 132, 132, 173, 173, 173, 173, 173,
	173, 173, 174, 174, 175, 175, 283, 283, 283, 285,
	285, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 284, 284, 284, 284, 284, 284, 284, 284,
	284, 284, 797, 797, 796, 796, 303, 19, 19, 156,
	156, 156, 156, 156, 156, 156, 151, 151, 663, 663,
	664, 664, 274, 274, 275, 275, 275, 275, 276, 276,
	277, 277, 277, 86, 100, 100, 100, 100, 100, 100,
	298, 298, 298, 300, 300, 302, 302, 299, 299, 299,
	299, 299, 299, 299, 299, 299, 299, 299, 299, 299,
	299, 301, 301, 301, 301, 301, 301, 301, 301, 301,
	301, 301, 301, 301, 301, 301, 301, 301, 301, 87,
	87, 87, 87, 87, 87, 87, 87, 87, 88, 88,
	88, 88, 88, 89, 89, 89, 89, 89, 89, 90,
	90, 90, 90, 90, 90, 91, 91, 98, 98, 98,
	98, 98, 98, 98, 98, 251, 251, 101, 101, 101,
	101, 101, 101, 101, 101, 101, 101, 101, 101, 101,
	101, 101, 101, 116, 116, 116, 116, 116, 799, 799,
	121, 121, 286, 286, 286, 288, 288, 287, 287, 102,
	102, 102, 102, 102, 107, 107, 107, 107, 107, 119,
	119, 119, 120, 120, 755, 755, 756, 756, 757, 757,
	775, 761, 761, 762, 762, 765, 765, 765, 766, 766,
	766, 766, 766, 774, 774, 774, 774, 774, 768, 767,
	769, 769, 770, 770, 772, 772, 772, 772, 772, 773,
	773, 773, 773, 773, 773, 773, 773, 773, 773, 773,
	773, 773, 773, 773, 773, 773, 760, 776, 777, 777,
	778, 778, 779, 779, 779, 782, 782, 140, 140, 140,
	141, 141, 141, 781, 781, 780, 780, 763, 763, 764,
	764, 76, 771, 771, 800, 800, 77, 78, 79, 80,
	81, 82, 83, 758, 758, 798, 798, 798, 798, 798,
	798, 798, 798, 798, 798, 798, 798, 798, 798, 798,
	798, 798, 801, 801, 802, 802, 803, 803, 803, 803,
	803, 803, 803, 803, 803, 803, 803, 803, 803, 803,
	803, 803, 803, 803, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 122, 122, 459, 459, 422,
	422, 123, 123, 123, 124, 124, 125, 125, 125, 125,
	103, 103, 103, 104, 104, 104, 721, 721, 722, 728,
	804, 804, 617, 617, 615, 615, 616, 127, 127, 475,
	475, 475, 510, 510, 509, 507, 507, 128, 128, 128,
	128, 128, 128, 129, 129, 129, 129, 129, 129, 129,
	129, 129, 129, 129, 130, 130, 130, 130, 130, 130,
	130, 130, 130, 130, 130, 130, 130, 130, 130, 130,
	130, 130, 138, 138, 138, 138, 138, 139, 139, 139,
	136, 136, 136, 133, 133, 133, 131, 131, 131, 137,
	137, 137, 142, 142, 142, 143, 143, 727, 408, 408,
	135, 135, 135, 134, 134, 134, 481, 481, 482, 484,
	483, 144, 144, 144, 144, 423, 145, 145, 145, 145,
	145, 145, 145, 145, 148, 148, 148, 148, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 149,
	149, 149, 149, 149, 149, 149, 149, 149, 149, 149,
	149, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	619, 619, 5, 5, 330, 330, 329, 329, 329, 329,
	6, 6, 6, 335, 335, 334, 333, 235, 235, 533,
	533, 533, 533, 533, 533, 236, 236, 237, 237, 237,
	237, 237, 237, 146, 146, 146, 579, 579, 152, 152,
	152, 527, 527, 153, 153, 153, 153, 153, 154, 154,
	154, 154, 154, 154, 154, 154, 154, 154, 154, 154,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 176,
	176, 176, 176, 176, 176, 176, 176, 176, 176, 731,
	731, 473, 473, 369, 369, 369, 369, 165, 165, 165,
	165, 166, 166, 166, 166, 167, 167, 260, 260, 183,
	183, 183, 183, 182, 182, 182, 182, 182, 182, 182,
	182, 92, 92, 92, 93, 93, 94, 94, 95, 95,
	96, 96, 97, 97, 97, 97, 97, 186, 186, 34,
	34, 34, 34, 34, 34, 34, 34, 34, 34, 34,
	34, 34, 532, 532, 41, 40, 42, 42, 42, 42,
	42, 39, 39, 39, 39, 39, 39, 37, 37, 37,
	37, 37, 187, 187, 786, 786, 38, 38, 38, 38,
	38, 38, 35, 35, 36, 36, 189, 185, 185, 185,
	185, 185, 185, 185, 184, 184, 188, 188, 188, 188,
	190, 192, 192, 192, 192, 192, 191, 191, 191, 191,
	191, 193, 193, 653, 653, 492, 492, 651, 651, 675,
	675, 675, 652, 652, 429, 429, 429, 429, 429, 430,
	430, 430, 662, 662, 662, 662, 662, 662, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 194, 194, 194, 194, 194, 194,
	194, 194, 194, 194, 261, 261, 261, 262, 262, 267,
	267, 268, 268, 268, 269, 269, 269, 266, 266, 266,
	263, 263, 264, 264, 265, 265, 265, 265, 265, 265,
	265, 265, 265, 265, 272, 272, 270, 270, 271, 271,
	806, 806, 805, 805, 273, 273, 273, 273, 273, 228,
	228, 228, 250, 250, 250, 250, 250, 250, 250, 250,
	250, 250, 250, 250, 250, 250, 493, 493, 231, 231,
	231, 215, 215, 195, 195, 195, 195, 195, 195, 195,
	195, 195, 195, 289, 289, 289, 289, 289, 292, 292,
	292, 294, 294, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 296, 296, 296, 297, 297, 295,
	295, 295, 203, 203, 203, 203, 203, 203, 203, 203,
	204, 204, 204, 196, 196, 217, 217, 217, 217, 217,
	205, 205, 206, 206, 206, 206, 207, 207, 207, 207,
	242, 242, 214, 214, 214, 216, 216, 216, 216, 216,
	216, 216, 216, 216, 197, 198, 198, 198, 198, 219,
	219, 219, 219, 536, 536, 536, 249, 249, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 218, 218, 218,
	218, 218, 218, 218, 218, 218, 218, 291, 291, 290,
	246, 246, 246, 246, 246, 246, 747, 747, 748, 748,
	748, 748, 238, 238, 238, 238, 238, 238, 595, 595,
	229, 229, 229, 229, 234, 234, 234, 234, 212, 212,
	212, 212, 213, 213, 213, 213, 240, 240, 240, 240,
	517, 517, 226, 226, 226, 227, 227, 227, 232, 232,
	248, 233, 460, 460, 230, 230, 239, 239, 239, 239,
	241, 241, 241, 199, 199, 199, 199, 199, 199, 199,
	199, 199, 199, 199, 199, 199, 200, 200, 201, 201,
	201, 201, 202, 202, 202, 202, 243, 243, 244, 244,
	244, 244, 225, 225, 245, 245, 245, 245, 245, 245,
	245, 245, 245, 245, 245, 807, 807, 221, 221, 221,
	220, 220, 220, 220, 220, 220, 220, 220, 784, 784,
	785, 785, 785, 785, 785, 785, 785, 785, 785, 785,
	223, 223, 224, 224, 224, 224, 224, 224, 224, 222,
	208, 208, 209, 209, 209, 210, 210, 211, 247, 729,
	729, 725, 725, 725, 725, 725, 725, 725, 725, 725,
	725, 725, 723, 723, 723, 723, 723, 723, 723, 723,
	723, 726, 726, 726, 726, 726, 730, 730, 157, 157,
	157, 157, 157, 157, 157, 168, 168, 168, 168, 168,
	168, 168, 171, 171, 158, 158, 158, 158, 158, 158,
	158, 161, 161, 159, 159, 159, 159, 160, 160, 113,
	113, 113, 113, 113, 18, 18, 18, 114, 114, 360,
	360, 308, 308, 308, 447, 447, 309, 309, 437, 437,
	437, 437, 304, 304, 305, 305, 306, 307, 307, 115,
	115, 808, 808, 808, 740, 740, 740, 741, 741, 741,
	741, 741, 741, 431, 431, 432, 432, 559, 559, 559,
	559, 559, 435, 435, 435, 436, 436, 436, 436, 436,
	436, 436, 436, 436, 445, 446, 446, 438, 438, 444,
	443, 443, 442, 442, 441, 441, 439, 440, 440, 440,
	449, 449, 448, 451, 451, 450, 558, 684, 684, 686,
	686, 686, 686, 686, 686, 686, 688, 688, 688, 688,
	688, 688, 688, 688, 688, 688, 688, 688, 688, 688,
	688, 688, 688, 537, 537, 809, 809, 790, 791, 788,
	789, 682, 682, 682, 682, 682, 683, 678, 678, 679,
	679, 679, 679, 679, 433, 433, 434, 434, 434, 434,
	680, 681, 469, 469, 600, 685, 685, 687, 687, 689,
	810, 810, 810, 810, 810, 810, 811, 811, 811, 557,
	557, 556, 556, 555, 555, 457, 457, 690, 690, 690,
	690, 691, 691, 691, 691, 691, 694, 693, 692, 692,
	692, 692, 692, 118, 118, 118, 512, 512, 511, 511,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 513,
	513, 513, 513, 513, 513, 513, 513, 513, 513, 256,
	256, 372, 372, 372, 110, 110, 110, 15, 15, 15,
	15, 15, 15, 15, 389, 389, 16, 16, 16, 16,
	742, 742, 742, 117, 117, 117, 117, 117, 117, 455,
	455, 455, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 371, 371, 371, 371, 371, 371, 371, 371, 371,
	371, 733, 733, 732, 732, 373, 373, 374, 374, 813,
	813, 126, 126, 126, 126, 126, 126, 126, 126, 126,
	620, 620, 621, 621, 623, 623, 622, 622, 109, 109,
	109, 109, 109, 538, 538, 535, 535, 534, 534, 468,
	468, 598, 598, 598, 599, 379, 379, 380, 380, 327,
	327, 327, 470, 470, 470, 470, 470, 45, 44, 27,
	27, 31, 31, 32, 32, 359, 359, 359, 359, 359,
	359, 359, 359, 359, 33, 33, 69, 69, 69, 69,
	70, 70, 70, 70, 73, 73, 74, 74, 68, 68,
	68, 68, 71, 71, 64, 64, 75, 75, 75, 75,
	75, 749, 751, 751, 750, 750, 754, 754, 754, 754,
	754, 754, 752, 752, 410, 410, 753, 753, 787, 787,
	792, 792, 164, 164, 169, 169, 169, 169, 169, 170,
	170, 170, 170, 172, 172, 172, 172, 181, 181, 252,
	252, 252, 252, 252, 252, 252, 85, 85, 99, 99,
	179, 815, 815, 815, 180, 180, 180, 253, 253, 253,
	253, 254, 254, 255, 255, 814, 814, 370, 370, 552,
	552, 553, 553, 816, 816, 554, 554, 554, 554, 554,
	363, 362, 364, 364, 365, 365, 106, 106, 106, 349,
	349, 348, 351, 351, 350, 353, 353, 352, 354, 354,
	355, 355, 346, 346, 665, 665, 357, 357, 357, 358,
	358, 342, 342, 343, 343, 344, 344, 345, 345, 361,
	361, 660, 660, 817, 817, 155, 155, 155, 259, 259,
	421, 421, 421, 545, 545, 545, 458, 458, 386, 386,
	551, 551, 551, 551, 551, 506, 506, 506, 258, 258,
	479, 479, 496, 496, 497, 497, 612, 612, 498, 162,
	162, 163, 163, 178, 178, 312, 312, 310, 310, 310,
	310, 310, 310, 310, 310, 317, 317, 318, 318, 319,
	319, 320, 321, 321, 321, 321, 485, 485, 322, 322,
	322, 311, 311, 311, 313, 313, 313, 313, 313, 313,
	313, 316, 316, 316, 323, 323, 323, 315, 315, 701,
	701, 701, 703, 703, 705, 705, 705, 704, 700, 700,
	702, 702, 812, 812, 516, 516, 516, 454, 456, 452,
	452, 453, 453, 464, 464, 465, 465, 461, 462, 463,
	463, 463, 463, 466, 466, 466, 466, 467, 467, 467,
	597, 597, 596, 328, 328, 328, 503, 503, 503, 503,
	504, 504, 541, 541, 539, 539, 539, 539, 540, 540,
	542, 542, 542, 543, 543, 544, 544, 500, 500, 501,
	501, 502, 502, 502, 502, 575, 575, 314, 314, 314,
	476, 476, 476, 477, 477, 565, 565, 565, 565, 565,
	565, 565, 565, 565, 565, 565, 565, 565, 566, 566,
	564, 564, 564, 564, 601, 601, 601, 601, 601, 601,
	601, 601, 601, 602, 603, 603, 478, 478, 604, 548,
	548, 549, 549, 546, 546, 547, 547, 550, 550, 719,
	719, 719, 720, 720, 594, 594, 605, 605, 605, 605,
	605, 605, 590, 590, 591, 591, 592, 592, 593, 593,
	613, 614, 614, 520, 520, 520, 520, 518, 518, 521,
	521, 521, 521, 521, 521, 519, 519, 606, 606, 606,
	606, 505, 505, 257, 257, 607, 607, 607, 607, 608,
	609, 609, 610, 610, 560, 561, 561, 624, 624, 624,
	624, 626, 474, 474, 474, 474, 474, 677, 676, 676,
	625, 625, 625, 625, 625, 625, 625, 640, 640, 640,
	640, 640, 640, 640, 640, 640, 640, 640, 640, 640,
	640, 640, 640, 640, 640, 640, 640, 640, 640, 640,
	640, 640, 640, 640, 640, 640, 640, 640, 640, 641,
	641, 641, 641, 641, 641, 641, 627, 627, 627, 627,
	627, 627, 627, 631, 631, 631, 630, 630, 630, 630,
	630, 630, 630, 630, 630, 630, 630, 632, 632, 637,
	637, 638, 638, 638, 633, 634, 639, 639, 639, 639,
	818, 818, 643, 643, 635, 635, 635, 635, 635, 635,
	635, 635, 635, 629, 629, 629, 636, 636, 636, 529,
	529, 529, 529, 529, 529, 529, 529, 529, 529, 529,
	529, 529, 528, 528, 530, 530, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 567, 567, 567,
	567, 567, 567, 567, 567, 567, 567, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 568, 568,
	568, 568, 568, 568, 568, 568, 568, 568, 569, 569,
	569, 569, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 570, 570, 570,
	570, 570, 570, 570, 570, 570, 570, 695, 695, 695,
	695, 695, 695, 695, 695, 378, 378, 571, 571, 698,
	698, 699, 699, 696, 696, 696, 696, 696, 696, 696,
	696, 696, 696, 696, 696, 696, 696, 696, 696, 696,
	696, 696, 696, 696, 696, 696, 697, 697, 697, 697,
	697, 697, 697, 697, 697, 697, 697, 697, 697, 697,
	697, 697, 697, 697, 697, 697, 697, 697, 697, 697,
	697, 697, 697, 697, 697, 697, 697, 697, 697, 697,
	697, 697, 697, 697, 706, 706, 707, 707, 709, 709,
	710, 710, 711, 712, 712, 712, 713, 714, 714, 708,
	708, 715, 715, 715, 715, 716, 716, 717, 717, 717,
	717, 717, 718, 718, 718, 718, 718, 581, 581, 582,
	582, 588, 588, 588, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	426, 426, 426, 426, 426, 426, 426, 426, 426, 426,
	428, 428, 427, 375, 375, 375, 375, 375, 375, 490,
	490, 488, 488, 488, 491, 491, 489, 489, 487, 487,
	486, 486, 578, 578, 576, 576, 580, 580, 522, 522,
	642, 642, 642, 642, 642, 642, 642, 642, 523, 523,
	523, 531, 524, 524, 525, 525, 525, 525, 525, 572,
	573, 526, 526, 526, 574, 574, 583, 587, 587, 586,
	585, 585, 584, 584, 562, 562, 563, 563, 499, 499,
	819, 819, 495, 495, 494, 494, 611, 611, 611, 611,
	671, 671, 425, 425, 480, 480, 424, 424, 416, 416,
	417, 417, 417, 417, 472, 472, 589, 589, 644, 644,
	645, 645, 646, 646, 647, 647, 648, 649, 650, 577,
	577, 397, 396, 383, 384, 395, 394, 393, 382, 385,
	390, 391, 392, 387, 388, 404, 403, 402, 347, 347,
	356, 356, 409, 411, 411, 414, 414, 415, 413, 412,
	412, 399, 400, 401, 618, 381, 418, 418, 419, 419,
	419, 420, 420, 420, 420, 376, 376, 376, 377, 377,
	405, 405, 406, 407, 407, 398, 398, 398, 366, 366,
	366, 367, 367, 368, 368, 658, 658, 655, 655, 655,
	656, 656, 656, 759, 657, 657, 657, 657, 654, 654,
	654, 654, 654, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	666, 666, 666, 666, 666, 666, 666, 666, 666, 666,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 670, 670, 670, 670, 670, 670, 670,
	670, 670, 670, 672, 672, 672, 672, 672, 672, 672,
	672, 672, 672, 672, 672, 672, 672, 672, 672, 672,
	672, 672, 672, 672, 672, 672, 672, 672, 672, 672,
	672, 672, 672, 672, 672, 672, 672, 672, 672, 672,
	672, 672, 672, 672, 672, 672, 672, 672, 672, 672,
	672, 672, 672, 672, 672, 672, 672, 667, 667, 668,
	668, 668, 668, 668, 668, 668, 668, 668, 668, 668,
	668, 668, 668, 668, 668, 668, 668, 669, 673, 673,
	673, 673, 673, 673, 673, 673, 673, 673, 673, 673,
	673, 673, 673, 673, 673, 673, 673, 673, 673, 673,
	673, 673, 673, 673, 673, 673, 673, 673, 673, 673,
	673, 673, 673, 673, 673, 673, 673, 673, 673, 673,
	673, 673, 673, 673, 673, 673, 673, 673, 673, 673,
	673, 673, 673, 673, 673, 673, 673, 673, 673, 673,
	673, 673, 673, 673, 673, 673, 673, 673, 673, 673,
	673, 673, 673, 673, 673, 673, 673, 673, 674, 674,
	674, 674,
}

var sqlR2 = [...]int8{
	0, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 3, 1, 3, 1, 1, 1,
	3, 1, 1, 1, 1, 3, 4, 6, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	1, 1, 1, 3, 3, 6, 4, 4, 6, 9,
	6, 8, 4, 4, 5, 9, 7, 9, 5, 6,
	8, 7, 7, 9, 1, 1, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 6, 4, 6,
	6, 9, 6, 9, 6, 5, 6, 5, 1, 1,
	1, 1, 1, 1, 0, 1, 6, 6, 4, 6,
	2, 1, 1, 2, 4, 8, 7, 10, 9, 4,
	4, 4, 3, 4, 4, 4, 7, 7, 9, 8,
	9, 5, 3, 5, 7, 4, 12, 4, 12, 1,
	3, 5, 5, 2, 5, 3, 6, 4, 4, 4,
	6, 6, 6, 9, 9, 4, 4, 4, 5, 7,
	5, 6, 5, 6, 4, 8, 3, 8, 4, 2,
	3, 10, 3, 6, 4, 3, 1, 3, 4, 4,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 2, 3,
	3, 3, 4, 3, 3, 3, 3, 3, 4, 1,
	2, 3, 3, 1, 2, 7, 10, 6, 8, 6,
	6, 6, 9, 4, 3, 2, 2, 0, 1, 1,
	1, 1, 1, 3, 1, 3, 6, 4, 6, 7,
	9, 6, 2, 2, 3, 0, 8, 6, 8, 7,
	2, 0, 1, 2, 5, 0, 1, 3, 3, 1,
	3, 1, 3, 3, 3, 3, 4, 1, 3, 1,
	3, 1, 1, 12, 6, 5, 4, 1, 3, 3,
	3, 3, 2, 4, 4, 4, 2, 3, 1, 1,
	2, 1, 4, 1, 0, 3, 3, 0, 4, 6,
	0, 6, 4, 4, 4, 5, 7, 6, 8, 7,
	9, 2, 1, 3, 1, 3, 2, 5, 0, 1,
	3, 3, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 1, 1, 1, 4,
	3, 1, 1, 1, 1, 1, 1, 3, 3, 6,
	4, 9, 7, 12, 9, 2, 7, 2, 1, 1,
	1, 3, 3, 0, 3, 1, 3, 1, 1, 3,
	2, 5, 0, 2, 7, 5, 6, 5, 7, 6,
	2, 4, 0, 1, 2, 1, 3, 3, 1, 1,
	2, 2, 2, 2, 1, 2, 2, 3, 4, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	1, 2, 2, 2, 2, 2, 2, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 2, 3, 3,
	3, 3, 3, 3, 5, 3, 3, 5, 3, 3,
	5, 3, 3, 5, 3, 4, 3, 6, 6, 6,
	6, 6, 8, 4, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 4, 7, 11, 14, 3, 1, 2,
	0, 2, 2, 5, 0, 1, 3, 3, 4, 1,
	2, 1, 2, 3, 6, 3, 8, 5, 3, 13,
	9, 4, 9, 4, 2, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 3, 1, 3, 3, 3, 3,
	2, 2, 1, 1, 1, 1, 2, 1, 1, 1,
	1, 0, 1, 2, 3, 2, 1, 1, 1, 4,
	5, 1, 1, 1, 1, 3, 3, 2, 2, 1,
	2, 2, 2, 2, 1, 1, 1, 2, 1, 1,
	3, 0, 1, 4, 0, 2, 0, 4, 6, 3,
	4, 6, 3, 1, 3, 2, 1, 3, 2, 1,
	3, 5, 1, 2, 1, 0, 6, 6, 6, 8,
	6, 6, 6, 1, 0, 4, 3, 3, 4, 3,
	4, 4, 4, 7, 3, 3, 4, 3, 3, 3,
	3, 3, 1, 0, 1, 0, 4, 3, 3, 3,
	3, 3, 6, 4, 4, 4, 5, 3, 3, 3,
	3, 3, 3, 3, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 4, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 1, 3, 0, 1, 2, 2, 1, 2, 1,
	6, 10, 5, 10, 15, 6, 1, 3, 3, 1,
	1, 0, 2, 0, 2, 0, 2, 10, 3, 1,
	4, 0, 1, 3, 2, 2, 0, 2, 2, 2,
	2, 2, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 4, 6, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 5, 7, 3, 4, 6, 3, 4,
	6, 3, 4, 6, 3, 0, 1, 1, 1, 3,
	4, 6, 3, 3, 5, 3, 1, 3, 1, 1,
	1, 2, 2, 2, 2, 1, 2, 2, 5, 3,
	3, 6, 6, 3, 1, 1, 1, 1, 1, 1,
	2, 1, 1, 1, 2, 1, 1, 2, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	1, 1, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 1, 2, 1, 2,
	1, 3, 4, 3, 1, 2, 3, 2, 2, 2,
	4, 6, 3, 1, 2, 2, 7, 3, 3, 2,
	1, 2, 3, 2, 3, 0, 2, 2, 1, 3,
	4, 3, 5, 5, 7, 2, 3, 0, 3, 5,
	2, 3, 0, 2, 3, 2, 3, 2, 7, 4,
	7, 8, 8, 9, 11, 11, 11, 11, 6, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 10,
	13, 10, 13, 10, 13, 5, 8, 5, 2, 2,
	1, 1, 3, 1, 1, 1, 1, 1, 2, 1,
	2, 2, 3, 2, 2, 4, 3, 2, 2, 1,
	2, 1, 3, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 3, 5, 4, 6, 4, 3, 0,
	1, 3, 2, 4, 2, 4, 1, 6, 3, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 3, 1, 3, 9, 6, 6, 6, 5, 5,
	5, 5, 5, 9, 7, 6, 10, 4, 4, 5,
	5, 4, 1, 1, 1, 1, 6, 6, 6, 6,
	5, 5, 1, 3, 1, 3, 5, 4, 5, 3,
	3, 2, 2, 6, 3, 3, 3, 3, 4, 4,
	3, 1, 3, 3, 2, 2, 1, 3, 3, 3,
	1, 2, 1, 1, 2, 2, 3, 1, 1, 1,
	1, 1, 1, 3, 2, 2, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 1,
	1, 1, 2, 1, 2, 2, 2, 9, 2, 1,
	0, 1, 1, 0, 1, 2, 0, 2, 2, 0,
	2, 2, 2, 2, 1, 2, 3, 3, 4, 4,
	4, 4, 3, 3, 1, 1, 1, 0, 1, 1,
	1, 0, 1, 1, 3, 3, 3, 3, 3, 2,
	3, 3, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 3, 6, 8,
	3, 3, 3, 4, 8, 6, 4, 5, 5, 5,
	5, 5, 3, 0, 1, 1, 1, 1, 2, 5,
	0, 1, 3, 1, 1, 2, 1, 1, 3, 3,
	3, 1, 3, 1, 2, 5, 0, 1, 3, 3,
	3, 3, 4, 4, 3, 4, 4, 3, 4, 4,
	1, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 5, 7, 7, 4, 2, 6, 4, 3,
	2, 3, 4, 4, 3, 5, 3, 6, 5, 6,
	3, 5, 6, 3, 3, 5, 3, 5, 3, 3,
	4, 4, 5, 0, 1, 1, 1, 1, 3, 2,
	4, 3, 4, 3, 4, 3, 5, 5, 3, 4,
	4, 3, 5, 4, 5, 3, 4, 1, 3, 2,
	3, 4, 4, 5, 3, 3, 1, 1, 0, 2,
	3, 2, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 6, 4,
	2, 3, 6, 4, 2, 3, 3, 4, 4, 5,
	2, 0, 4, 2, 3, 4, 2, 3, 3, 3,
	7, 5, 2, 0, 3, 3, 4, 3, 3, 3,
	5, 3, 3, 4, 5, 5, 4, 4, 5, 6,
	4, 4, 4, 4, 4, 3, 0, 2, 4, 5,
	4, 4, 5, 6, 5, 5, 2, 3, 7, 7,
	7, 7, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	6, 6, 6, 5, 3, 3, 4, 4, 0, 2,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	5, 6, 4, 4, 5, 5, 2, 6, 3, 2,
	5, 6, 2, 5, 0, 1, 3, 4, 4, 2,
	0, 1, 1, 1, 1, 2, 3, 2, 2, 3,
	2, 2, 1, 1, 1, 1, 3, 2, 2, 2,
	2, 2, 2, 2, 2, 1, 2, 0, 1, 2,
	1, 2, 1, 2, 2, 1, 2, 1, 2, 1,
	2, 2, 4, 3, 3, 7, 3, 3, 7, 3,
	3, 3, 3, 3, 3, 3, 3, 4, 3, 3,
	6, 5, 8, 3, 6, 6, 3, 12, 15, 1,
	0, 1, 2, 3, 0, 2, 0, 4, 0, 4,
	5, 4, 1, 1, 1, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	3, 6, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 3,
	4, 10, 11, 12, 9, 10, 5, 3, 1, 5,
	9, 7, 11, 3, 3, 0, 2, 4, 3, 3,
	1, 6, 1, 3, 1, 2, 0, 1, 2, 3,
	0, 1, 3, 3, 2, 2, 1, 1, 1, 4,
	0, 3, 0, 4, 0, 3, 0, 2, 2, 2,
	0, 1, 1, 2, 2, 0, 3, 3, 2, 1,
	1, 2, 2, 5, 8, 4, 1, 0, 1, 2,
	2, 1, 2, 3, 3, 2, 4, 2, 3, 2,
	2, 2, 2, 2, 3, 1, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 2,
	1, 1, 1, 8, 10, 11, 8, 11, 5, 4,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 2, 0, 3, 3, 2, 2, 0,
	1, 8, 11, 3, 7, 10, 6, 5, 3, 4,
	1, 0, 1, 3, 1, 0, 2, 4, 17, 20,
	16, 19, 4, 2, 0, 1, 0, 1, 0, 1,
	3, 2, 4, 2, 3, 1, 0, 2, 0, 1,
	1, 0, 2, 1, 1, 2, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	1, 2, 3, 0, 3, 0, 3, 0, 1, 0,
	2, 0, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 2, 1,
	2, 1, 2, 1, 2, 1, 3, 2, 2, 2,
	2, 1, 1, 0, 2, 4, 2, 1, 2, 1,
	2, 3, 2, 2, 2, 1, 0, 2, 1, 1,
	0, 1, 3, 1, 0, 1, 1, 1, 1, 1,
	2, 3, 2, 2, 1, 2, 16, 19, 3, 1,
	0, 4, 1, 0, 4, 1, 0, 5, 1, 0,
	2, 2, 3, 0, 1, 1, 4, 4, 5, 1,
	0, 3, 0, 3, 0, 3, 0, 3, 0, 4,
	0, 3, 0, 1, 0, 6, 7, 3, 6, 3,
	1, 3, 2, 1, 4, 2, 1, 3, 1, 3,
	4, 8, 11, 7, 10, 2, 2, 0, 10, 3,
	2, 0, 1, 3, 1, 1, 3, 3, 5, 6,
	4, 5, 4, 1, 1, 3, 3, 1, 2, 4,
	4, 2, 3, 5, 5, 1, 3, 1, 0, 1,
	2, 3, 2, 4, 2, 3, 0, 2, 0, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 8, 8, 8, 4, 4, 4, 2, 2, 2,
	2, 3, 1, 3, 1, 2, 0, 7, 1, 0,
	1, 0, 1, 0, 1, 1, 0, 1, 5, 1,
	0, 1, 0, 1, 0, 1, 0, 3, 3, 3,
	3, 5, 5, 1, 1, 3, 3, 1, 3, 3,
	4, 5, 3, 2, 2, 0, 2, 2, 1, 1,
	1, 0, 1, 0, 2, 2, 5, 4, 2, 3,
	1, 1, 1, 1, 1, 1, 1, 3, 0, 1,
	3, 1, 3, 3, 3, 2, 0, 4, 2, 5,
	3, 2, 0, 1, 3, 3, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 5, 1, 3,
	2, 4, 4, 0, 4, 4, 3, 4, 1, 5,
	3, 4, 5, 5, 1, 5, 1, 3, 2, 3,
	0, 1, 3, 0, 3, 1, 3, 1, 2, 0,
	2, 3, 1, 3, 2, 0, 3, 5, 6, 4,
	6, 4, 3, 2, 1, 0, 3, 2, 1, 0,
	5, 1, 0, 2, 2, 2, 1, 1, 0, 1,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 2, 2, 1, 2, 3, 2, 4,
	1, 0, 1, 0, 2, 1, 0, 2, 5, 7,
	2, 1, 2, 4, 3, 5, 0, 1, 3, 5,
	1, 2, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 0, 1, 1, 1, 1,
	1, 2, 2, 2, 2, 2, 1, 3, 0, 5,
	4, 1, 2, 1, 4, 1, 1, 2, 1, 1,
	1, 1, 1, 0, 1, 2, 5, 1, 4, 2,
	5, 1, 4, 3, 3, 0, 1, 2, 4, 1,
	1, 1, 1, 1, 1, 3, 3, 3, 3, 3,
	3, 3, 1, 0, 1, 4, 1, 3, 3, 3,
	5, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 3, 3, 2, 2, 3, 5, 4, 6, 3,
	5, 4, 6, 4, 6, 5, 7, 3, 3, 3,
	3, 3, 4, 3, 2, 4, 2, 3, 3, 4,
	3, 4, 3, 4, 5, 6, 6, 7, 6, 7,
	6, 7, 3, 4, 4, 1, 3, 1, 3, 3,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 2, 3, 5, 6, 6, 7, 1, 2,
	1, 2, 1, 1, 1, 1, 1, 6, 1, 1,
	1, 1, 1, 1, 2, 1, 5, 5, 6, 3,
	1, 1, 1, 2, 2, 2, 4, 3, 5, 6,
	8, 6, 5, 4, 3, 1, 4, 2, 2, 4,
	1, 1, 1, 5, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 6, 6, 8, 8, 6,
	4, 6, 6, 6, 4, 1, 3, 3, 3, 3,
	3, 4, 3, 3, 4, 3, 3, 4, 3, 3,
	4, 3, 3, 3, 3, 3, 4, 3, 4, 3,
	4, 3, 4, 4, 3, 6, 5, 5, 5, 4,
	4, 3, 4, 3, 5, 0, 5, 0, 2, 0,
	1, 3, 3, 2, 2, 0, 6, 1, 0, 3,
	0, 3, 3, 3, 0, 1, 4, 2, 2, 2,
	2, 2, 3, 2, 2, 3, 0, 4, 1, 1,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 4, 1, 1, 1, 2, 1, 2, 2,
	3, 1, 2, 3, 2, 3, 2, 3, 1, 0,
	1, 3, 1, 3, 3, 3, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 4, 3,
	1, 2, 3, 0, 3, 3, 2, 2, 1, 2,
	2, 3, 2, 1, 1, 1, 5, 1, 2, 4,
	2, 0, 1, 0, 3, 5, 1, 0, 1, 2,
	1, 0, 1, 3, 1, 0, 3, 2, 1, 1,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 1, 3, 1, 3, 1, 3, 1,
	0, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	7, 1, 7, 5, 3, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 5, 1, 1, 1, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1,
}

var sqlChk = [...]int16{
	-1000, -1, -2, 716, -3, -253, -147, -144, -86, -100,
	-98, -152, -153, -128, -154, -146, -176, -181, -162, -163,
	-164, -177, -183, -252, -261, -262, -263, -264, -273, -257,
	-197, -254, -255, -4, -84, -87, -101, -127, -129, -145,
	-156, -155, -157, -165, -173, -168, -151, -92, -178, -182,
	-194, -256, -258, -259, 33, 32, 69, 115, 93, 178,
	148, 159, 237, 448, 505, 517, 467, 164, 492, 473,
	-188, -189, 540, -85, -99, -180, -179, 85, 149, 196,
	348, 483, 632, 547, 56, 170, -7, -15, -34, -19,
	30, 51, -88, -89, -90, -91, 71, -110, -105, -122,
	-103, -107, -108, -116, -102, -798, 118, -702, -130, -134,
	-172, -132, -142, -803, 186, 260, -158, -159, -160, 429,
	-166, -167, 495, -169, -170, -171, 498, 187, -94, -93,
	180, -310, -312, -185, -184, -186, -260, -195, -196, -198,
	-199, -201, -202, -204, -205, -207, -242, -208, -212, -213,
	-214, -215, -216, -217, -218, -222, -246, -219, -220, -221,
	-224, -223, -225, -230, -226, -227, -228, -229, -231, -232,
	-234, -235, -238, -239, -240, -241, -243, -244, -245, -233,
	-247, -206, -248, 622, 566, 95, 509, 21, -8, -9,
	-10, -11, -12, -13, -14, -18, -17, -75, -5, -6,
	-20, -21, -112, -39, -37, -38, -40, -41, -42, -106,
	-109, -113, -114, -115, -126, -117, -118, -119, -120, -104,
	-111, -701, -131, -133, -136, -138, -139, -135, -137, -140,
	-141, 493, 686, -313, -311, 713, 692, 641, -203, -24,
	-29, -25, -26, -28, -30, -27, -31, -32, -33, -60,
	-65, -62, -63, -61, -64, -66, -67, -68, -69, -70,
	-71, -72, -73, -74, -44, -50, -51, -45, -46, -47,
	-48, -49, -52, -53, -54, -55, -56, -57, -58, -59,
	-22, -23, -43, -76, -77, -79, -78, -80, -81, -83,
	-82, 673, 682, -316, -314, -315, -323, 531, 649, 593,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, -423,
	2, -399, -405, -406, -407, -398, -366, -669, -674, 4,
	-666, -672, 195, 278, 277, 279, 389, 21, 22, 24,
	23, 25, 26, 27, 28, 30, 31, 43, 41, 45,
	46, 47, 49, 50, 51, 52, 53, 54, 55, 56,
	60, 62, 66, 67, 68, 69, 70, 71, 72, 73,
	74, 75, 79, 84, 85, 86, 87, 92, 93, 94,
	95, 96, 97, 98, 99, 105, 102, 103, 104, 106,
	107, 109, 111, 112, 113, 114, 115, 116, 117, 119,
	120, 121, 123, 124, 125, 133, 134, 135, 136, 137,
	139, 148, 140, 141, 143, 149, 152, 146, 151, 147,
	153, 154, 156, 157, 158, 159, 162, 163, 164, 166,
	167, 169, 168, 171, 172, 173, 175, 176, 178, 179,
	180, 183, 181, 184, 182, 185, 186, 187, 188, 189,
	192, 193, 201, 202, 203, 208, 218, 210, 213, 214,
	215, 211, 212, 216, 219, 220, 223, 224, 225, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 238, 239,
	243, 245, 246, 247, 248, 249, 250, 251, 257, 258,
	259, 260, 262, 263, 264, 265, 266, 267, 268, 272,
	273, 274, 275, 282, 284, 290, 291, 664, 296, 292,
	297, 298, 300, 304, 305, 306, 307, 308, 309, 310,
	312, 314, 313, 318, 316, 320, 321, 324, 325, 326,
	327, 328, 329, 333, 334, 330, 335, 336, 338, 339,
	342, 340, 343, 344, 341, 345, 346, 349, 350, 351,
	352, 353, 354, 355, 356, 357, 358, 359, 360, 347,
	348, 363, 361, 365, 366, 367, 368, 369, 386, 388,
	381, 382, 383, 373, 374, 370, 375, 371, 372, 376,
	377, 378, 385, 379, 380, 391, 392, 393, 394, 397,
	255, 283, 399, 400, 403, 405, 422, 408, 409, 410,
	413, 414, 417, 420, 421, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 435, 436, 438, 439,
	440, 442, 443, 444, 446, 448, 449, 451, 452, 453,
	455, 456, 457, 458, 459, 460, 461, 462, 463, 464,
	466, 467, 469, 468, 470, 471, 473, 475, 476, 477,
	483, 484, 492, 485, 487, 488, 489, 490, 491, 493,
	494, 495, 496, 497, 498, 499, 503, 501, 502, 504,
	505, 507, 508, 509, 510, 511, 513, 515, 516, 520,
	521, 524, 522, 543, 544, 569, 517, 518, 519, 523,
	525, 526, 527, 528, 530, 529, 534, 532, 533, 535,
	536, 537, 538, 540, 542, 545, 546, 547, 549, 550,
	551, 552, 553, 554, 555, 556, 557, 560, 562, 563,
	564, 565, 566, 567, 592, 568, 570, 571, 572, 577,
	578, 579, 580, 573, 574, 575, 591, 581, 583, 584,
	585, 586, 588, 589, 594, 595, 596, 597, 598, 599,
	600, 601, 602, 603, 605, 613, 626, 614, 615, 616,
	617, 619, 622, 623, 624, 625, 611, 627, 628, 631,
	632, 633, 634, 639, 635, 640, 636, 637, 638, 641,
	643, 646, 647, 648, 655, 656, 653, 654, 657, 658,
	660, 661, 659, 668, 669, 663, 665, 666, 667, 674,
	675, 677, 678, 679, 37, 57, 58, 61, 63, 65,
	80, 81, 82, 88, 142, 144, 177, 190, 191, 204,
	226, 227, 240, 242, 252, 253, 254, 281, 285, 286,
	288, 294, 317, 396, 398, 415, 419, 437, 441, 445,
	447, 465, 512, 541, 558, 576, 582, 606, 607, 608,
	609, 618, 620, 649, 650, 651, 662, 676, -423, 2,
	-695, -378, -376, 711, -655, -419, 277, 4, -666, -667,
	-398, -668, -669, 48, 90, 122, 222, 280, 256, 293,
	295, 299, 319, 322, 364, 384, 390, 416, 418, 506,
	548, -399, 713, 406, -392, 2, -366, -366, 448, 29,
	2, 29, 436, 533, 596, 598, 2, -731, -473, 589,
	2, 29, -369, -366, 118, 237, 531, -392, 2, -731,
	237, -473, 26, 589, 2, -366, 2, 420, 189, 223,
	455, 23, 28, 77, 90, 113, 162, 188, 217, -802,
	422, 458, 515, 535, 591, 603, 619, 2, 654, 339,
	532, 593, 272, 136, 624, -799, 523, -742, 520, 521,
	420, 454, 599, 662, 507, 241, 642, -370, 2, 517,
	-366, 339, 2, 716, 109, 86, 512, 537, -191, 2,
	329, 614, -192, -193, -190, 606, -653, 523, 507, 363,
	-366, 716, 716, 716, 29, -381, 2, -366, -381, 2,
	-265, 2, -381, -805, -272, -271, -270, 22, 484, 203,
	310, 221, 261, 368, 451, 219, 53, -265, 2, 593,
	272, 523, 136, 589, -403, 705, -405, -533, -799, 2,
	-250, 537, 568, 248, 52, 51, 86, 29, 457, 92,
	427, 137, 145, 172, 625, 239, 589, 272, 273, 305,
	95, 108, 109, -536, 49, 298, 79, 297, 521, -747,
	520, -595, 594, 224, 456, 525, 533, 588, 99, 310,
	517, 614, 616, 118, 643, 508, 679, 462, 463, 586,
	477, 583, 330, 181, 222, 690, 601, 599, 662, 4,
	136, 363, 507, 539, 314, 313, 626, 606, 668, 329,
	516, 430, 97, -814, 2, 614, -814, 2, 716, 2,
	593, 426, 654, 532, 223, 455, 136, 462, 272, 624,
	51, 162, 28, 79, -799, 690, 662, 523, -742, 687,
	688, 339, 145, -724, 2, -723, 4, -672, -666, -417,
	-416, 593, -799, 136, 662, 599, -407, -398, 705, -406,
	716, 716, 716, 716, 2, 297, 298, 460, 459, 537,
	538, 29, 716, 716, 716, 716, 716, 716, 520, 189,
	2, -799, 188, -755, 23, 28, 77, 108, 113, 145,
	217, 422, 458, 535, 591, 595, 603, 619, -741, 568,
	79, 523, -740, -742, 411, 339, 624, 162, -534, 136,
	329, 235, 633, 598, 596, 630, 152, 284, 638, 636,
	716, 716, 716, 716, -148, 2, 713, 33, 32, -147,
	-98, -152, -86, 164, 547, 540, -303, 593, 289, 2,
	-366, 716, 716, 716, 2, 297, 298, 520, 521, 29,
	716, 716, 221, -723, 589, 2, 716, 716, 716, 2,
	29, 297, 298, 520, 521, 289, 2, 79, 526, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, -812, 2, 593, 614, 2, -814, 2, -814,
	2, -815, 614, 676, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, 716, 716, 716,
	716, 716, 716, 716, 716, 716, 716, -311, -313, -312,
	716, 716, 716, 716, 716, 716, 716, 716, 716, -250,
	537, 2, 86, 29, 29, -461, -464, 629, 287, 174,
	412, -310, -312, 2, -701, 626, 537, -651, 2, -567,
	-675, -569, 703, 704, 696, 590, 78, -427, 387, 680,
	-581, 145, 630, 406, 384, -674, -570, -583, 177, 422,
	512, -491, 8, 9, 5, 6, 7, -378, -571, -577,
	621, 194, 395, -420, 717, 10, 713, -698, -312, -582,
	38, 242, 76, -377, -627, 288, -418, -398, -695, -696,
	-419, -656, -630, -638, -637, -634, -633, -635, -641, -366,
	90, 127, 128, 126, 131, 130, 332, 331, 132, 129,
	539, 642, 77, 37, 252, 253, 294, 396, 254, 88,
	-697, 4, -666, -668, 285, 286, 558, 58, 465, 204,
	163, 144, 142, 398, 63, 61, 650, -639, 138, 606,
	607, 608, 609, 226, 227, 65, 190, 191, 419, 445,
	582, 618, 620, 240, 317, -818, 651, 576, 80, 81,
	209, -703, 468, -704, -392, -703, 716, 716, 718, 716,
	-452, -454, -456, 29, 160, 713, 2, -601, 2, -602,
	-606, -312, 311, -605, 713, -603, 711, -399, 407, -699,
	513, -695, -696, -398, 715, 713, 223, 715, -457, 713,
	-150, -127, -155, -178, -258, -259, 136, 523, 593, 91,
	272, 108, 188, 223, -527, 713, -366, 29, 406, 610,
	718, -731, -473, -453, 453, -579, 713, 406, 409, 221,
	409, -731, 67, 106, -781, 252, 2, -780, -405, -781,
	252, 2, 343, 2, 2, 2, 2, 2, 252, -366,
	593, 135, 309, 2, 2, 2, 2, 2, 2, 2,
	-483, 252, 2, -481, -405, 654, -484, 252, 2, -481,
	-482, 252, 2, -481, -535, 2, 101, -382, 252, 2,
	-366, -408, 252, 2, -403, -532, 252, 2, -570, 711,
	-581, -414, 252, 2, -411, -366, -661, 252, 2, -659,
	4, -666, 132, 539, -567, 2, -178, 2, 67, 86,
	-366, 654, 2, 543, 2, 713, -191, 2, 82, 614,
	48, 537, -192, 2, -553, 2, -554, -362, -363, -364,
	-613, -365, 296, 452, 464, 683, 150, 387, 679, -786,
	221, 695, 610, -651, -651, -651, -492, 715, -267, 60,
	-381, -806, -805, -806, -649, 29, -644, 8, -645, 703,
	704, -649, -649, -806, -806, 2, 2, 2, 2, 2,
	-236, 673, 2, -250, 2, 209, 644, 2, 8, 2,
	261, -289, -663, 525, 201, 463, 647, 106, 2, -658,
	10, -657, 5, 4, -666, -672, -667, -669, 543, 2,
	544, 463, 86, -536, 679, 86, 221, 2, 221, 2,
	-517, 2, 673, 453, 537, 221, 2, 2, -729, 2,
	406, 239, 221, 2, 221, 2, 221, 2, 608, 221,
	2, 221, 2, -249, 538, 615, 592, 459, 298, 673,
	2, -178, 670, -161, 209, 298, 297, -567, 670, 2,
	-748, 209, 521, -567, 2, 613, 307, 182, 221, -517,
	2, 221, 2, 221, 2, 221, 2, 221, 2, 5,
	2, 45, 460, 569, 2, 296, 452, 569, 2, 567,
	2, -399, 593, 654, 532, 136, 273, 529, 223, 455,
	29, 2, 520, 189, 2, 2, 102, 103, 221, 2,
	221, -784, 2, 673, 236, 221, 2, 477, 221, 593,
	29, -532, 86, 691, 87, -493, 715, -493, 679, 2,
	-552, -553, 2, -606, 252, -399, 2, -396, -654, 4,
	-666, -672, -667, -673, 29, 32, 33, 34, 36, 38,
	39, 40, 44, 64, 76, 77, 83, 89, 91, 101,
	108, 118, 126, 127, 129, 128, 130, 131, 132, 145,
	150, 155, 160, 161, 165, 170, 174, 194, 196, 209,
	217, 221, 237, 241, 244, 261, 276, 287, 289, 311,
	315, 323, 331, 332, 387, 395, 401, 406, 407, 411,
	412, 434, 450, 472, 500, 531, 539, 561, 587, 593,
	604, 610, 612, 621, 629, 630, 642, 644, 652, 670,
	671, 672, 673, -674, 2, -606, 252, 2, -402, 252,
	-606, -405, 2, -780, 2, -780, 2, -382, 2, -567,
	-735, 602, 184, 485, 2, -424, 252, -399, -401, -405,
	-403, 2, 520, -663, 2, 2, 2, -567, 2, 2,
	-532, 29, 691, -411, 2, -659, 252, 2, 29, 29,
	654, 453, 289, 610, 718, -480, -416, -417, -650, 4,
	8, -472, -366, 715, -567, 2, -178, -161, 2, -567,
	252, 2, -178, 252, 2, -567, 252, 2, -178, 252,
	2, -366, 2, -743, 2, -783, -663, 252, 106, -570,
	252, 2, 252, -366, 2, 223, 455, -801, 515, 623,
	343, 2, 2, 619, 2, 113, 593, 135, 2, 2,
	2, 2, 2, 2, 2, 593, -387, 2, -366, 209,
	-615, 289, -411, 252, -412, 2, 532, -813, 468, -659,
	252, 2, 490, 654, -403, 252, 2, -403, 272, 291,
	-382, 252, 2, 598, 596, 598, 596, -475, 2, 54,
	289, 2, 289, 2, -607, 2, -608, -602, -609, 711,
	407, -619, 2, -618, -657, 649, -148, 713, -148, 713,
	537, 713, -663, -399, -399, -567, 2, -178, -161, 2,
	-567, 2, -178, 2, -366, 2, -175, -663, -174, 713,
	221, 643, -366, 2, -567, 2, -178, -161, 2, -567,
	2, -178, 2, -303, 209, 2, 136, 593, -505, -606,
	-552, 610, -461, -464, -250, 543, 2, -317, -503, -319,
	209, -539, -540, -320, 323, 196, 401, -321, -516, 29,
	160, -516, -516, 67, 714, 714, -786, 626, 11, 12,
	89, 45, 703, 704, 705, 706, 207, 707, 708, 701,
	702, 700, 693, 694, 698, 302, 303, 110, 697, 695,
	100, 337, 514, 197, 198, 199, 200, 486, 270, 35,
	42, 271, 14, 15, 16, -427, 34, 411, 322, 680,
	256, 548, 696, 17, 18, 19, 293, 295, 390, 57,
	261, -375, 422, -426, 590, 78, -567, -567, -567, -567,
	-567, -567, -567, -567, 418, 713, -499, -562, 711, -312,
	713, 713, 713, 713, -650, -312, -567, -581, 714, -489,
	713, -312, -581, -576, 713, 512, 711, 713, -584, -567,
	5, 5, 5, 713, 715, -706, 674, 209, 713, 713,
	713, 713, 713, 713, 713, 713, 713, 713, 713, 713,
	713, 713, 713, 713, -632, 713, 447, -631, 713, -631,
	-631, -643, 656, 713, 713, -629, 713, 682, 675, 713,
	-629, 713, 713, 713, 713, 713, 713, 713, 713, 713,
	713, 713, 713, 713, 656, -799, 718, -703, -548, 713,
	713, -494, -495, -611, -567, 705, -495, -495, 406, -486,
	-567, 122, -520, 299, 364, 222, 319, 506, 280, -564,
	717, -564, -594, 682, -312, -603, -312, -605, 713, -601,
	-594, -149, -650, -127, -145, -155, -178, -194, -258, -259,
	705, -399, 713, 221, 715, -654, 714, -486, 652, 29,
	160, 705, 2, -648, 8, -654, 221, 610, -472, 714,
	716, 716, 716, 716, -382, -411, -399, -418, -419, -424,
	-393, -366, 2, 2, 159, -486, -725, 624, 523, 29,
	4, -672, -666, -417, 532, -416, 593, 136, 189, 223,
	455, -661, -369, 610, 39, -578, -624, -625, -677, 717,
	-676, -627, -636, 437, 441, -656, 288, 4, -666, -668,
	285, 286, 558, 58, 465, 204, 144, 142, 398, 63,
	61, 650, 606, 607, 608, 609, 226, 227, 65, 651,
	576, 80, 81, -725, 624, 523, 29, 532, 209, -661,
	209, 221, -661, 2, -663, 2, -340, 718, 75, 496,
	177, -763, 713, -340, 177, 2, 177, 2, 2, 2,
	-366, -340, 177, 718, -483, 252, -340, 177, -340, 177,
	-425, 252, -424, -340, 177, -340, 718, 177, -143, 257,
	177, -567, 223, -340, 718, 177, 715, 718, 177, -661,
	2, -535, -653, -486, 39, -553, 2, 145, 4, 5,
	-816, 718, 321, -430, 336, 386, 247, 407, 677, 399,
	150, -662, 5, 4, -577, -589, 145, 329, 288, -644,
	-646, 9, -647, 703, 704, -652, -651, 125, 715, -654,
	-268, 283, 43, -381, -381, -806, -806, 8, 8, -806,
	-806, -381, -381, -237, 491, 73, 451, 593, 300, -174,
	-663, 221, 261, -292, 673, -663, -663, -663, -663, -663,
	-653, 29, -784, 2, 544, 2, -249, 538, 615, 103,
	544, 2, -399, 593, 136, 272, 93, -752, 209, 2,
	655, -366, -730, 209, -726, 507, 523, 624, -725, -730,
	-399, 136, -399, 136, -399, 136, -399, -399, 2, 2,
	2, 2, -291, -290, 179, 673, 2, 98, 521, 520,
	2, -178, -567, 2, 673, 98, 2, 51, 563, 79,
	-748, 209, 2, 613, 2, 613, 2, -366, -366, -366,
	-366, -366, 401, 568, 321, 673, -200, 673, -399, -399,
	-402, -405, -400, -405, 221, 273, -405, -405, 525, 594,
	625, 521, 189, -567, 2, 106, -807, 2, 221, 209,
	2, 593, 272, 272, 593, 136, 126, -785, 594, 273,
	158, 305, 186, 221, 86, 136, 29, 221, 593, -799,
	518, -532, 29, 715, 4, -337, 488, 540, 421, -336,
	25, 30, 164, 274, 369, 647, 183, -442, 275, 493,
	-439, 426, 177, 562, 635, -735, -738, 519, 602, 184,
	485, 104, 399, 540, 421, 488, 177, -511, -513, 39,
	134, 369, 420, 68, 431, 266, 341, 342, 566, 494,
	662, 177, 540, 421, 488, -771, 488, 540, 421, -758,
	-773, 369, 70, 502, 575, 259, 565, 666, 189, 530,
	318, 387, 116, 513, 584, 423, 488, 540, 421, 421,
	-16, -355, 25, 164, -357, -348, 540, 30, -738, 114,
	488, 692, 686, 493, 433, 585, 450, -738, -735, 316,
	-737, 667, 385, -339, 562, 635, -735, -471, -738, 519,
	488, -338, 387, 664, 663, 665, -444, -439, 426, 177,
	717, 25, 164, 488, 540, 421, -793, -794, 30, -650,
	2, -335, 261, -334, 25, -330, -329, 25, 164, 540,
	639, 493, 488, 566, 572, 429, 498, 98, 540, -187,
	237, 505, -167, -186, -187, 2, 493, 540, 29, 488,
	421, -732, -389, -700, 261, 673, 177, -389, -389, -606,
	252, -752, 209, 2, -745, -174, 312, 5, 10, -174,
	-480, 718, 718, -654, 705, 177, 177, 177, 177, 298,
	209, 387, -783, 2, -121, 322, 387, 387, 673, -775,
	2, -405, -775, 2, -802, 2, 2, 2, 2, 2,
	2, 2, -399, 252, -459, 406, -721, -722, -804, 593,
	-277, 673, -663, 387, 48, -402, 252, 2, 654, -732,
	387, -740, -404, 252, -399, 39, 713, 387, 2, -535,
	2, 272, -700, 387, 221, 713, -421, -608, -602, -421,
	540, -392, 39, -564, -399, 714, 718, -619, -619, -663,
	-277, 221, 713, -303, 673, 673, 298, -614, 718, -613,
	261, -664, -663, -175, -663, 221, 298, -663, -721, -382,
	2, -399, 2, -340, 718, -370, -317, -503, -653, -504,
	-503, -318, -317, -320, 209, 464, 636, 369, 545, 304,
	-540, -539, 29, -567, -544, 203, 368, -567, -542, -569,
	703, 704, -645, -647, -485, 399, -311, -311, -311, -466,
	-596, -597, -567, 450, 279, -652, -786, -626, -624, -624,
	-397, -654, 606, -567, -567, -567, -567, -567, -567, -567,
	-567, -567, -567, -567, -567, -567, -567, -567, -567, -567,
	-567, -567, -567, -567, -567, -567, -567, -567, -567, -567,
	-567, -567, -567, -567, -567, -567, -567, -567, -567, -567,
	322, 256, 548, 57, 261, -567, 610, -567, -567, -567,
	-567, 361, 387, 395, 621, 194, 631, 160, 399, -819,
	587, 44, -574, -312, -490, 713, -588, 36, 561, 29,
	-581, 713, 2, -562, -567, -563, -428, -426, -366, 703,
	704, 705, 706, 707, 708, 693, 694, 695, 14, 15,
	16, 698, 702, 700, 701, 207, 110, 697, 337, 514,
	100, 197, 198, 199, 200, 302, 303, 17, 18, 19,
	35, 42, 696, -487, -486, -486, 714, 718, 39, 714,
	-567, -487, -580, -576, 711, -486, -587, -586, 670, -528,
	-529, 678, 347, 139, 250, 344, -530, 528, -648, -654,
	705, -707, 202, 241, 713, 714, 2, 714, 2, 714,
	-567, 2, 714, -567, 2, 714, -567, 2, 714, -567,
	2, 714, 2, 714, 2, -567, -567, -567, -567, -567,
	-567, -567, -486, 8, -648, 713, -648, -648, -648, 606,
	606, -648, -648, -648, -640, 437, 438, 439, 440, 324,
	325, 326, 327, 441, 442, 443, 444, 353, 354, 355,
	356, 349, 350, 351, 352, 357, 358, 359, 360, 231,
	232, 233, 234, 227, 228, 229, 230, -640, -522, 2,
	-642, -486, 4, 678, 347, 139, 250, 344, 528, 5,
	-522, 2, -523, 2, -567, -486, -524, -568, -569, 703,
	704, 696, -427, -525, 2, -567, -487, -567, 64, 315,
	612, -526, -567, 221, -486, -486, 2, -486, 2, -532,
	2, -704, 39, -549, -366, -486, -476, 221, 718, 45,
	34, 411, 322, 256, 548, 293, 57, 261, 39, -671,
	422, 4, -670, 21, 22, 23, 24, 25, 26, 27,
	28, 29, 30, 31, 32, 33, 37, 36, 40, 43,
	44, 41, 46, 47, 48, 49, 50, 51, 52, 53,
	54, 55, 56, 58, 60, 61, 63, 64, 65, 62,
	66, 67, 68, 69, 70, 71, 72, 73, 74, 75,
	76, 77, 79, 82, 83, 84, 85, 86, 87, 88,
	90, 91, 92, 93, 94, 95, 96, 97, 98, 99,
	101, 102, 103, 104, 105, 106, 107, 108, 109, 111,
	112, 113, 114, 115, 116, 117, 119, 120, 121, 122,
	123, 124, 125, 126, 127, 129, 128, 130, 131, 132,
	133, 134, 135, 136, 137, 148, 143, 140, 141, 142,
	144, 149, 145, 146, 150, 151, 147, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 163, 164,
	165, 166, 167, 168, 169, 170, 171, 172, 173, 175,
	176, 178, 179, 177, 180, 183, 181, 184, 182, 185,
	186, 187, 188, 189, 190, 191, 192, 193, 194, 195,
	201, 203, 204, 208, 210, 213, 214, 215, 211, 212,
	216, 217, 218, 219, 220, 222, 223, 224, 225, 226,
	227, 231, 232, 233, 234, 228, 229, 230, 235, 236,
	238, 239, 240, 242, 243, 245, 246, 247, 248, 249,
	251, 252, 253, 254, 255, 257, 258, 259, 260, 262,
	264, 265, 263, 266, 267, 268, 272, 273, 279, 278,
	277, 274, 276, 275, 280, 281, 282, 283, 284, 285,
	286, 288, 290, 291, 664, 292, 294, 296, 297, 298,
	299, 300, 304, 305, 306, 307, 308, 309, 310, 311,
	312, 314, 313, 315, 318, 316, 317, 319, 320, 321,
	324, 325, 326, 327, 328, 329, 330, 331, 332, 333,
	334, 335, 336, 338, 339, 342, 340, 343, 341, 345,
	346, 348, 349, 350, 351, 352, 353, 354, 355, 356,
	357, 358, 359, 360, 363, 361, 364, 365, 366, 367,
	368, 369, 370, 371, 372, 373, 374, 375, 376, 377,
	378, 384, 385, 386, 379, 380, 387, 388, 389, 391,
	392, 393, 394, 383, 381, 382, 395, 396, 397, 398,
	399, 400, 403, 405, 407, 408, 409, 410, 413, 414,
	415, 416, 419, 420, 421, 423, 424, 425, 426, 427,
	428, 429, 430, 431, 432, 433, 434, 435, 436, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 448,
	449, 450, 451, 452, 453, 455, 456, 457, 458, 459,
	460, 461, 462, 463, 464, 465, 466, 467, 469, 468,
	470, 471, 472, 473, 475, 476, 477, 483, 484, 492,
	485, 487, 488, 489, 490, 491, 493, 494, 495, 496,
	497, 498, 499, 503, 501, 502, 504, 505, 506, 507,
	508, 509, 510, 511, 512, 513, 515, 516, 517, 518,
	519, 520, 521, 523, 525, 524, 522, 526, 527, 529,
	530, 531, 532, 533, 534, 535, 536, 537, 538, 539,
	540, 541, 542, 543, 544, 545, 546, 547, 549, 550,
	551, 552, 553, 554, 555, 557, 556, 558, 560, 561,
	562, 563, 564, 565, 566, 567, 592, 568, 569, 570,
	571, 572, 577, 578, 579, 580, 573, 574, 575, 576,
	591, 582, 581, 583, 584, 586, 585, 587, 588, 589,
	593, 594, 595, 596, 597, 598, 599, 601, 600, 602,
	603, 604, 611, 605, 606, 608, 609, 607, 613, 626,
	612, 614, 615, 616, 617, 618, 619, 620, 621, 622,
	623, 624, 625, 627, 628, 630, 631, 632, 633, 634,
	639, 635, 640, 636, 637, 638, 641, 642, 643, 644,
	646, 647, 648, 649, 650, 651, 655, 652, 653, 654,
	657, 658, 660, 661, 659, 662, 668, 669, 663, 665,
	666, 667, 670, 676, 677, 679, -476, -476, 713, 714,
	718, -521, 245, 340, 335, 291, 573, -521, -601, -520,
	299, -518, 416, -518, -518, -594, -383, 711, 720, -654,
	-594, -591, -590, 39, -392, 413, -594, -594, 714, -593,
	-592, 39, -392, 712, -719, 713, 716, 716, 716, 716,
	716, -399, 713, -654, 715, -465, 718, -462, 412, -567,
	-486, -486, 714, 712, 715, 570, 2, 571, 2, 714,
	610, 293, 293, 293, 293, 293, 406, 513, 714, 610,
	-727, -408, -414, 533, 594, 224, 456, -480, 718, -480,
	-472, 106, -781, -781, 673, -661, -147, 408, 714, 718,
	-474, 38, 711, 715, -648, 2, 2, -529, 713, 221,
	-727, -414, 594, 533, 224, 456, 2, -731, 589, -473,
	-661, 610, -780, -781, -764, 714, -766, -774, -759, -768,
	261, 415, 281, 652, -655, -624, 4, -666, -781, -366,
	2, -483, -405, -340, 177, -484, -482, -340, 718, 177,
	-382, -403, -408, -532, 712, -411, -414, -366, -659, -661,
	-340, -404, -786, 714, 614, -554, -429, 464, 560, 489,
	534, 589, 9, 9, 718, -654, -269, 522, 369, -381,
	-381, -381, -381, 718, 569, 491, -399, 209, -663, -174,
	-294, 410, -293, 41, 84, 551, 394, 140, 268, 306,
	169, 453, 168, 143, -292, -292, -292, -292, -296, 673,
	2, 2, 2, 2, -517, -399, -382, -424, -399, -410,
	261, 238, 29, -742, 209, 715, -661, -661, -414, -415,
	-413, -366, -408, -517, -382, -517, -382, -517, -382, -517,
	-517, 718, 158, -291, 179, -178, -178, -567, -291, -567,
	568, 2, 537, 209, 209, 715, -517, 715, 715, 8,
	-460, 500, 5, 470, -200, -200, -399, 221, 2, 107,
	-663, 2, 462, 136, 593, 426, 272, -399, -424, -424,
	-399, -382, -784, 718, 136, -382, 137, 136, -399, -532,
	4, 718, -787, 108, 610, 91, 713, 523, -359, 330,
	610, -558, 252, 91, -678, 108, -385, -679, -366, 83,
	630, 450, 217, 175, -787, 108, 450, -787, 108, 2,
	274, 108, 540, 568, 713, 29, 67, -606, 45, 45,
	29, -736, -737, 316, 221, 679, 593, 272, 523, 610,
	610, -606, -513, -624, 134, 341, 342, 67, -649, 376,
	-649, 67, -649, -649, -649, 673, -649, 673, -402, -606,
	523, 610, 610, -800, -773, 496, 540, 610, 523, 610,
	154, 406, 395, 530, 147, 292, 318, -589, -589, -366,
	610, 523, 610, 610, 475, 583, 475, 583, 529, -348,
	-350, -192, 529, 583, 330, 610, 610, -192, 29, -250,
	497, 145, -817, 695, 475, 316, -737, 610, 221, 718,
	45, 45, 29, -736, 221, 610, 663, 9, -424, -383,
	648, 47, 648, 47, 648, 610, 47, 523, 610, 718,
	47, -332, -331, 540, 178, -334, -663, -333, 367, -329,
	-721, -721, -276, -275, -366, 5, -472, 135, 610, 536,
	2, 491, 536, 2, 491, 491, 491, 86, 491, 74,
	29, 2, 74, 29, 2, -187, 2, 610, 610, -16,
	540, -733, -371, 121, 375, 334, 377, 112, 372, 111,
	371, 119, 373, 120, 374, 657, 391, 658, 392, 72,
	370, 345, 378, 564, 380, 661, 393, -372, -373, -374,
	491, 379, 167, 428, 646, 581, 136, -659, -16, -16,
	540, 421, 488, 177, -753, 261, 29, 261, -614, 261,
	-614, -416, -366, 715, -567, -178, -567, -178, 51, 79,
	177, 39, 221, -532, 177, 177, 2, 713, 713, 309,
	713, -433, 387, 221, -472, -615, 718, -399, 39, -276,
	410, 177, -659, -512, -511, 387, -404, 252, 2, 177,
	-813, -457, 387, 171, 713, 462, 2, 177, -384, 252,
	-367, -366, -535, -342, 597, 177, -607, -510, -509, 550,
	-545, -178, 713, 145, 39, -564, -545, -496, -497, -612,
	-498, -385, 713, -392, -564, -148, -618, 714, 714, 714,
	-303, -458, -386, -385, 135, 466, 466, -283, 673, -174,
	-175, 714, 718, -614, 261, -175, -663, -277, -277, -614,
	-614, -606, -504, -318, 407, 304, 545, -542, -543, -569,
	512, 513, -543, 512, 513, 8, 9, 8, 9, -322,
	551, 394, -482, 718, -327, 40, 155, 304, -399, -652,
	679, 173, -567, -567, 610, -819, 587, -574, 173, -567,
	361, 395, 621, 194, 631, 160, 399, 221, 713, -568,
	-568, 714, -488, -567, -567, 712, 722, 714, 715, 714,
	-465, 715, -486, -472, 712, 712, 718, 714, -585, -586,
	165, -567, 610, 610, 610, 610, 713, 714, 715, -712,
	417, 713, 713, -567, 714, 714, 714, 714, 39, 718,
	718, 718, 714, 718, 718, 718, 714, 714, 714, 718,
	-648, 714, 714, 714, 679, 679, 714, 714, 714, 714,
	718, 714, 718, 714, 221, 714, 714, -531, 434, 714,
	11, 12, 703, 704, 705, 706, 207, 707, 708, 701,
	702, 700, 693, 694, 695, 100, 337, 514, 14, 15,
	16, -427, 293, 261, -568, -568, -568, -568, 714, -572,
	-573, 221, 209, 39, -526, -526, -526, 714, 221, -486,
	714, 714, -705, 339, 387, 714, 718, 714, -561, -560,
	671, -477, 2, -601, -611, -394, -654, -561, -561, -486,
	-567, 299, 299, -519, 644, 406, -521, -601, -591, -650,
	-566, -565, 211, 40, 155, 381, 382, 383, 255, 212,
	216, 195, -591, -392, -548, -591, -591, -594, -392, -546,
	713, -594, -590, 714, -720, -650, 714, -478, -604, -699,
	715, -654, 714, 652, 67, -465, -465, 714, -654, -298,
	-700, -298, 571, 2, -251, 5, 395, -251, -251, -251,
	-251, -399, -661, 610, 610, 261, 261, 261, 261, -480,
	-472, 26, -751, 673, 435, -624, 711, 712, 8, -654,
	-648, -661, 221, 221, 261, 261, 261, 261, 406, -731,
	221, -659, -340, 714, 718, -759, -768, -774, -768, 415,
	-340, 2, -340, -483, -340, -340, -424, -425, -340, -340,
	-143, -340, -508, 673, -651, -553, 628, 96, 464, 606,
	-651, 133, 522, 491, 73, 451, 158, -277, 593, 261,
	-292, 718, 713, 550, 695, 695, 695, 695, -297, 410,
	-295, 616, 606, 101, 717, 523, -661, 508, -661, -742,
	687, 688, -366, 715, -517, -517, -517, -290, 537, 537,
	-366, -366, -366, 209, -472, -399, 2, -395, -654, -382,
	-399, -396, -424, 209, 209, -784, -784, -784, 594, 273,
	158, 186, 305, -382, -382, -209, 673, -336, 488, 540,
	-385, -385, -399, -307, -306, -304, -366, 5, -409, -366,
	235, 476, -659, 387, -558, 252, -341, 387, 252, -393,
	-624, 713, -537, 675, 304, 304, 644, -385, -393, 304,
	252, -385, 252, -393, 2, -393, -734, 464, 400, -567,
	-305, -304, 67, -440, 328, 462, 388, -337, 488, 540,
	421, -178, -178, -178, 713, -786, 644, 159, -399, -424,
	-399, -409, -659, -404, 540, 421, 488, 384, -418, 68,
	-649, -649, -649, -511, 540, 421, 488, -409, -659, -402,
	-366, -409, -659, 406, 395, 406, 147, 292, -366, -409,
	-659, -659, -347, 252, -366, 5, 475, -347, 252, 475,
	475, 475, 475, 235, 476, 523, -382, 475, 679, 50,
	-817, 610, 221, -567, -567, -338, -178, -178, -178, 713,
	-383, -339, -471, 488, 5, 252, -385, 5, -385, 252,
	5, -366, -385, -409, -659, -794, 25, 164, -385, 718,
	308, 289, 673, -744, 222, 520, 469, 258, 222, -335,
	695, -277, 718, 695, 695, 610, -570, 189, 546, 399,
	610, -288, -287, 499, 185, -36, -35, -653, 73, -36,
	73, -409, -659, -371, 428, -745, 395, 5, 10, 640,
	-663, 395, -382, -732, -389, 523, 610, 610, -606, -749,
	-750, 237, 505, 523, 508, -174, -280, 673, -174, -274,
	267, 705, -724, 2, -721, -616, 2, 289, -663, -663,
	491, -570, -366, -761, -762, -765, -766, -761, -366, -431,
	-434, -432, -385, -559, -558, -682, -683, -678, 322, 277,
	278, 630, 291, 195, 108, -308, -309, 675, 673, 177,
	-422, -399, 711, -277, -722, -617, 195, 531, 713, -411,
	-412, 177, -457, 387, -659, 654, 39, 177, 713, -623,
	-622, -366, 2, -403, 406, 387, -384, 252, -343, 166,
	-817, -382, -507, 644, 714, 718, -567, -506, -551, 500,
	406, -458, 649, -392, -506, -479, 718, 221, 695, 715,
	-458, -610, 705, -148, -148, -277, 713, -663, 714, 718,
	715, 713, 695, 695, -285, 410, -284, 169, 306, 290,
	553, 554, 555, 556, 557, 157, 552, 141, 366, 268,
	-796, -797, 524, 653, 634, 179, 180, 487, 600, 668,
	599, 669, -614, -663, -283, -175, -614, 261, 221, -95,
	673, 636, -543, 407, 333, -596, -597, -328, 681, -399,
	717, -567, -567, 173, 173, -567, -568, -568, -567, 173,
	221, 713, -567, -578, 34, 34, 714, 718, -563, -567,
	-426, 714, 705, -654, 717, 714, -576, 170, -567, 604,
	347, 250, 344, -530, 344, -530, -530, -648, 5, -654,
	705, -713, -388, 713, -366, 671, -463, 412, 714, -626,
	-624, -567, -567, -567, -567, -567, -648, 714, -629, -629,
	-644, -644, -567, -572, -567, -626, -624, -568, -568, -568,
	-568, -568, -568, -568, -568, -568, -568, -568, -568, -568,
	-568, -568, -568, -568, -568, -568, -568, 160, 387, 399,
	-568, -573, -572, -567, -567, -624, 714, 714, 714, -486,
	713, 339, -366, -500, 241, -567, -614, 718, -500, -500,
	714, -601, -601, 713, -567, 299, 712, 718, 721, 695,
	695, 695, -548, -590, -546, -547, -550, -366, -591, 712,
	714, 718, 714, 718, -593, -654, -567, -467, -596, 714,
	714, 715, -561, -300, 713, -299, 156, 60, 123, 153,
	395, 403, 220, 246, 461, 173, 210, 166, -298, 293,
	-751, -661, -661, 523, 523, 523, 523, 409, 237, 5,
	8, 711, 712, 715, 714, -661, -661, 523, 523, 523,
	523, -725, 624, 523, 29, 221, -661, -766, -768, -768,
	-340, -340, 135, 369, -567, -266, 673, 675, 569, 491,
	-399, -174, -293, -294, -174, -174, -663, -663, 718, 713,
	695, 695, 695, 705, -409, -410, -410, -659, 2, 29,
	29, 705, -517, 5, -446, -445, 426, 399, -446, 512,
	512, -210, 410, -211, 566, 610, 610, 714, 718, 695,
	67, 261, 177, 387, 646, 387, -679, 175, -684, -567,
	713, 272, 713, 713, 2, -324, -325, -326, 164, 25,
	-790, -791, -514, 540, -792, -515, 494, 2, 644, 177,
	-340, 177, -340, 677, 714, 718, -440, 713, 713, 610,
	523, -359, 610, 673, -486, -567, -278, 145, -653, -738,
	717, -738, 717, 523, 610, 610, -649, 523, 610, 610,
	188, 282, 395, 387, -347, 177, -347, 252, -817, -347,
	-738, -738, 261, 673, 193, 193, 679, -347, -567, -567,
	209, 610, 673, -486, 610, -628, 55, 27, 387, -403,
	-340, 177, 610, 610, 624, 540, -331, -663, -174, -281,
	169, 504, 157, 306, 268, 179, -795, 637, 264, 265,
	51, 409, -745, 258, -174, -275, -663, -663, 589, -570,
	589, 312, 718, 695, 672, 718, -786, -745, -663, 395,
	-16, -409, -659, -404, 540, 421, 488, -731, -731, 237,
	-414, -753, -614, -282, 410, -281, -614, -280, 221, 289,
	-616, -277, -663, 399, -121, 673, 714, 718, 145, 695,
	714, 2, 714, 714, 718, 718, -685, -341, -399, 713,
	-366, 272, 277, 278, -391, -367, 39, 403, 403, 713,
	-399, -123, -124, 673, -125, 611, -613, 644, -560, -650,
	-390, -366, -495, -276, 48, -402, 39, 177, -732, -404,
	-178, -404, -620, -621, 5, 714, 718, -625, 39, -399,
	177, 406, 387, -344, 314, -817, -658, -700, -561, -477,
	-509, -506, -495, 389, 105, 714, -561, -497, -477, -567,
	2, 714, -663, -277, -303, -386, 2, -664, -663, -663,
	718, 713, 695, 695, 695, 695, 695, 695, 695, 695,
	330, 151, -283, -614, -283, -175, -178, 410, 407, 203,
	310, -327, -383, -567, -567, 173, 34, 34, -567, -567,
	-578, 714, -567, -567, -486, 712, 5, 8, -567, 714,
	715, -714, -366, -567, 714, 67, 714, 714, 718, 718,
	714, 714, 714, 714, 714, 714, 714, -573, 221, 160,
	399, 713, 714, -147, -575, 244, 67, -601, -575, -575,
	-519, -472, -601, -565, -383, 711, -383, 711, 711, 714,
	718, -624, -650, -604, -465, 718, -654, -299, -302, -301,
	156, 218, 153, 395, 403, 220, 246, 461, 173, 215,
	213, 214, 166, 695, -663, -663, 2, 2, 5, 5,
	461, 387, 395, 5, -251, -751, -751, 673, -414, -414,
	-414, -414, 409, 712, 2, 711, -654, -414, -414, -414,
	-414, 221, -727, -414, 594, 224, 456, -661, 135, 209,
	249, 249, 158, -277, -292, 714, -295, -297, -663, -663,
	-567, -396, 593, 272, 713, 713, 718, 713, 608, -385,
	-385, -306, -651, 593, 512, -347, 450, -558, 177, 177,
	-686, 108, -688, 89, 195, 118, 387, 395, 630, 450,
	83, 145, 406, 472, -809, -788, -789, 39, 684, 685,
	714, -468, -598, -699, 713, -366, -468, -472, 387, 251,
	579, 145, 406, -788, -789, 2, -515, 540, 387, 145,
	406, 663, 134, 369, 68, 266, 341, 342, 566, -513,
	684, 685, 135, 624, -649, 673, 92, -385, -393, -304,
	-472, -472, -399, -409, -659, 185, 714, 718, 695, 2,
	705, 705, -409, -659, -404, -409, -659, -402, -366, 282,
	177, 649, -347, 177, -347, 649, -347, 424, 193, 610,
	-178, -567, 185, 714, -383, 5, 5, 177, -380, 89,
	-385, 5, -385, -403, 135, 695, 695, 695, 695, 695,
	330, 695, 695, 31, -745, -275, 673, 606, 406, 606,
	-287, -570, 695, -35, -651, 523, 610, 610, 406, 406,
	409, -749, -750, -280, 718, 713, -280, -664, -174, -277,
	39, -570, 221, 2, 502, -769, -770, -772, 39, 309,
	617, 672, -773, -765, -567, -567, -769, -447, 274, -385,
	-683, -680, -681, 450, -559, -687, -689, 195, 450, -435,
	-468, 713, -384, 713, -366, 713, -178, 2, -307, 713,
	-433, -125, 410, 9, 192, 712, 221, 714, -659, -512,
	-178, -404, -457, -455, 673, -457, 714, 718, -366, 171,
	713, -538, 644, -383, -399, 177, -345, 313, -817, -658,
	-342, -464, -461, 161, 713, 406, -178, -464, 695, 714,
	135, 714, -284, -285, -663, -174, -663, -663, -663, -174,
	-663, -663, 695, 115, -283, -614, -96, -97, 272, 277,
	108, 432, -327, -567, -567, -567, 714, 705, -708, 426,
	714, -596, -597, -567, -567, -568, 221, 713, -578, 714,
	-709, 672, -567, -501, -502, -567, 510, 124, 242, -709,
	-709, 714, -650, -650, -650, -550, 714, -596, -597, 714,
	718, -663, 60, 123, 603, 5, -663, -663, 2, 2,
	621, 194, 5, 5, 2, 2, 2, 5, -663, 2,
	395, 2, 2, 610, 610, 610, 610, 711, 2, 221,
	221, 221, 221, -661, 221, 221, 261, 261, 261, -178,
	714, -399, -424, -486, -486, -211, -210, 695, 261, 39,
	475, -558, -393, -393, -397, -390, 195, 252, 395, 663,
	-537, 304, 713, -568, 636, -399, 713, 2, 251, 251,
	31, 67, -810, 150, 276, 714, 718, -599, -379, -366,
	-567, -599, 714, 714, 395, 252, 636, 251, 251, 395,
	663, -567, 636, 134, 341, 342, -649, -649, 67, -649,
	-649, -649, 673, 2, 31, 67, -624, -649, 713, -340,
	-340, 714, 714, -567, 610, -653, 115, -651, 2, -738,
	-347, -356, -347, -356, -738, -382, -567, 209, -567, 610,
	5, -340, -397, -340, -340, -380, 624, -663, -567, 621,
	194, -174, -174, 695, -567, -567, 405, -567, -570, -567,
	-570, -409, -659, -404, -754, 594, 533, 625, 525, 224,
	511, -754, 209, -281, -282, -280, -744, 531, 406, 491,
	-756, 593, -779, -776, 56, 501, -772, -760, 5, -658,
	-779, -441, -442, 2, -685, 304, -390, 304, 263, 176,
	714, -468, 713, -468, 713, -472, -808, 673, 714, -431,
	-308, -124, -728, -421, -457, 39, 369, 135, 39, 5,
	-625, 713, -623, 713, -366, 406, 713, -383, -361, 106,
	-817, -658, -343, -541, -539, 388, -472, 108, -541, -574,
	-277, 713, -277, 714, -663, -283, 718, 29, 713, 29,
	713, -465, 67, 718, 718, 714, 714, -568, -578, 714,
	-710, -711, -388, 718, 713, 713, 542, 712, 712, 712,
	-301, 2, -661, -661, -661, -661, 2, -661, -661, -661,
	-661, -661, -661, 523, 523, 523, 714, 714, 714, -570,
	-347, 450, -366, -679, -688, -390, 387, -309, 644, 673,
	-567, -568, -368, 713, -567, 713, 713, 39, 145, 276,
	151, 257, -557, -811, 117, 580, 262, -598, -327, 714,
	-556, 644, 472, 177, 713, 713, -567, -649, -649, 145,
	-380, -468, 713, 713, 713, 695, 221, 718, -178, 713,
	-628, -340, -403, -663, 695, -286, 673, 610, 2, 221,
	-731, 714, -744, -279, 673, -495, -570, 399, -757, 541,
	46, -567, -782, 718, -308, 713, -309, -436, 94, 109,
	146, 251, 225, 273, 568, 577, 29, -436, -556, 714,
	-468, 714, -468, 714, -437, 406, 135, 369, 714, 39,
	-561, 39, -178, 135, -178, -620, 714, -468, -399, -468,
	406, -349, -348, 323, -658, -344, -506, 714, -393, -506,
	-664, -97, -472, -472, -715, 462, 513, 243, -486, -466,
	-466, 714, 718, 39, -502, 2, 2, 2, -751, -751,
	-751, -751, -414, -414, -414, 475, -341, 177, 245, 714,
	-690, 338, -366, 714, -512, -512, 39, 151, 257, -443,
	-439, 713, -328, -599, -309, 245, -399, -512, -512, -739,
	644, 714, -449, -448, -445, -451, -450, -445, -486, -651,
	115, 424, -347, -486, -380, -174, -288, 410, -661, -661,
	406, -746, 222, 520, 221, -286, -570, -767, -768, -778,
	5, -437, -469, -600, -385, -557, -556, 714, -443, 714,
	95, 135, -447, -178, -178, 2, -455, 714, 714, -538,
	714, -399, -346, -665, 475, 477, -817, -345, -561, 161,
	714, 714, 714, 714, -716, -717, 57, 627, 125, -567,
	-716, -716, -711, -713, 221, 221, 221, 195, -555, 682,
	-691, -694, -693, 689, 549, 222, 425, 714, 579, 662,
	714, 714, -810, -472, -555, -457, 714, 714, -567, -556,
	714, 718, 649, 714, 718, 649, 714, 221, 714, -340,
	713, -751, -340, -754, -279, 51, 410, -728, 406, -769,
	-777, 170, -3, -776, -360, -359, 714, 718, -443, -557,
	-556, -309, -443, 449, 152, 164, -441, -808, -556, 713,
	-557, 713, -358, -357, -817, -644, -361, 161, 388, 636,
	-277, -718, 175, -717, 446, 208, 512, 446, 208, -718,
	-718, -661, -661, -661, -390, -309, 62, -693, 689, -694,
	689, 636, 152, -561, 714, -690, -309, -448, 261, -450,
	221, 424, -288, 221, -745, 31, -276, 713, -561, -570,
	-779, 719, -309, -600, -309, -443, -557, -561, -309, 513,
	513, 2, -308, -437, -557, -468, -443, -468, -354, -355,
	-356, -349, 388, 636, 540, 125, 241, 605, 369, 34,
	695, -692, 369, 496, 75, 540, -692, -691, 713, 713,
	714, -661, -276, -744, -286, -561, -309, -443, -470, 387,
	664, 663, 665, -561, 2, -437, -443, 714, -309, 714,
	-660, 421, -346, 540, -496, 512, 414, -717, -567, 24,
	395, 145, -810, -486, -486, -340, 714, -279, -470, -561,
	-309, 663, 9, -470, -360, -309, -556, -561, -557, -353,
	-352, 583, -817, -358, -496, -561, 714, 714, -470, -561,
	-561, -557, -470, -443, -351, -350, 529, 475, -659, -354,
	-561, -438, -439, 610, -470, -470, -443, -309, -347, -660,
	713, -309, -561, 649, -353, -486, -561, -470, -356, -351,
	714, -470, -438,
}

var sqlDef = [...]int16{
	-2, -2, 1, 2, 3, 4, 6, 7, 9, 10,
	11, 12, 14, 16, 18, 20, 22, 24, 26, 28,
	30, 32, 34, 35, 36, 38, 40, 42, 44, 45,
	46, 2057, 2059, 868, 869, 871, 872, 873, 875, 876,
	878, 880, 882, 883, 884, 886, 887, 889, 890, 891,
	892, 893, 895, 897, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	1019, 1021, 0, 2039, 2041, 2043, 2045, 0, 0, -2,
	-2, 0, 0, -2, -2, -2, 48, 49, 51, 52,
	0, -2, 499, 501, 503, 505, 0, 537, 539, 540,
	542, 544, 546, 548, 550, 551, -2, 0, 783, 784,
	786, 788, 790, 792, -2, 0, 1598, 1600, 1602, 0,
	1007, 1009, 0, 1605, 1607, 1609, 0, 0, 1031, 1032,
	0, 2163, -2, 1023, 1025, 1027, 1029, 1148, 1150, 1152,
	1154, 1156, 1158, 1160, 1162, 1164, 1166, 1168, 1169, 1171,
	1173, 1175, 1177, 1179, 1181, 1183, 1184, 1186, 1188, 1190,
	1191, 1193, 1194, 1196, 1198, 1200, 1202, 1204, 1206, 1208,
	1210, 1212, 1214, 1216, 1218, 1220, 1222, 1224, 1226, 1229,
	1230, 1231, 1233, -2, 0, -2, -2, 2053, 54, 56,
	58, 60, 62, 64, 66, 68, 70, 72, 74, 76,
	78, 80, 82, 1049, 1051, 1053, 1055, 1057, 1059, 714,
	716, 718, 720, 722, 725, 727, 729, 731, 733, 569,
	571, 2220, 794, 796, 798, 800, 802, 804, 806, 808,
	810, 0, 0, -2, 2234, 0, 0, 0, 1350, 84,
	85, 86, 87, 88, 89, 90, 91, 92, 93, 157,
	158, 159, 160, 161, 162, 163, 164, 97, 98, 99,
	101, 102, 103, 104, 108, 109, 110, 111, 112, 113,
	114, 115, 116, 117, 118, 119, 120, 121, 122, 123,
	154, 155, 95, 124, 125, 126, 127, 128, 130, 131,
	132, 0, 0, 2194, 2196, 2198, 2200, 2230, 0, 0,
	8, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	31, 33, 37, 39, 41, 43, 47, 2058, 2060, 870,
	874, 877, 879, 881, 885, 888, 894, 896, 898, 851,
	852, 855, 2971, 2990, 2991, 2992, 2995, 2996, 2997, 2998,
	2999, 3000, 4147, 4228, 4229, 4230, 4231, 3023, 3024, 3025,
	3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035,
	3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045,
	3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055,
	3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065,
	3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075,
	3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085,
	3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095,
	3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105,
	3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115,
	3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125,
	3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135,
	3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145,
	3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155,
	3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165,
	3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175,
	3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185,
	3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195,
	3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3205,
	3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215,
	3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225,
	3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235,
	3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245,
	3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255,
	3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265,
	3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275,
	3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285,
	3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295,
	3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305,
	3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315,
	3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325,
	3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335,
	3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345,
	3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355,
	3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365,
	3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375,
	3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385,
	3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395,
	3396, 3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405,
	3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415,
	3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3424, 3425,
	3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435,
	3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445,
	3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455,
	3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465,
	3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475,
	3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485,
	3486, 3487, 3488, 3489, 4073, 4074, 4075, 4076, 4077, 4078,
	4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087, 4088,
	4089, 4090, 4091, 4092, 4093, 4094, 4095, 4096, 4097, 4098,
	4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108,
	4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118,
	4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 853, 854,
	453, 0, 2685, 0, 2985, 2986, -2, -2, -2, 3009,
	0, 4127, -2, 4129, 4130, 4131, 4132, 4133, 4134, 4135,
	4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145,
	4146, 1796, 2221, 0, 962, 960, 2952, 963, 3311, 965,
	967, 777, 778, 779, 780, 781, 782, 0, 1000, 3429,
	979, 2232, 1001, 1003, 1004, 1005, 1006, 957, 955, 0,
	1005, 1000, 3028, 3429, 998, 2037, 2038, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 793, 0, 0,
	0, 0, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 694, 558, 0, 1860, 1861, 1862, 2022, 2023, 3372,
	2068, 0, 322, 1020, -2, -2, 4111, -2, 1101, 1102,
	-2, -2, 1116, 1120, 1111, 4116, 0, 3375, 3357, -2,
	1123, 2040, 2042, 2044, 1234, 1235, 1236, 2975, 1240, 1238,
	1250, 1251, 1254, 0, 1271, -2, 0, 3024, 3337, -2,
	-2, 1272, 1273, -2, -2, -2, -2, 1252, 1253, 0,
	0, 0, 0, 0, 2383, 2384, 2956, 945, 0, 1228,
	1279, 0, 0, 0, 0, -2, -2, -2, 0, 0,
	0, -2, 0, -2, -2, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 1428, 0,
	0, 0, -2, -2, -2, -2, -2, 0, 0, 0,
	0, 0, 0, 0, -2, -2, 0, 0, -2, 0,
	-2, 0, 1559, 0, 0, 0, 940, 558, 0, 1282,
	1285, 1286, 1287, 1288, 1289, 1290, 1291, 0, 1295, 1395,
	1426, 1427, 1438, 2070, 2062, 2065, 2063, 2064, 50, 53,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 330, 332, -2, -2, -2, -2,
	0, 0, 0, 3094, 4125, -2, 2920, 2992, 2923, 2918,
	500, 502, 504, 506, 507, 0, 0, 0, 0, 0,
	0, 0, 538, 541, 543, 545, 547, 549, -2, 0,
	552, 0, 0, 693, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	765, -2, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1672, 1664, 1665, 1937, -2, 0, 0, -2,
	785, 787, 789, 791, 856, 857, 0, 2221, 2221, 864,
	865, 866, 867, -2, -2, 0, 0, 0, 0, 435,
	426, 1599, 1601, 1603, 1604, 0, 0, 0, 0, 0,
	1008, 1010, 0, 0, 3429, 391, 1606, 1608, 1610, 1611,
	0, 0, 0, 0, 0, 0, 437, 0, 0, 1024,
	1026, 1028, 1030, 1149, 1151, 1153, 1155, 1157, 1159, 1161,
	1163, 1165, 1167, 1170, 1172, 1174, 1176, 1178, 1180, 1182,
	1185, 1187, 1189, 1192, 1195, 1197, 1199, 1201, 1203, 1205,
	1207, 1209, 1211, 1213, 1215, 1217, 1219, 1221, 1223, 1225,
	1227, 1232, 0, 1840, 2222, 2070, 2047, 2048, 2049, 2054,
	2056, 2050, 2051, 2052, 55, 57, 59, 61, 63, 65,
	67, 69, 71, 73, 75, 77, 79, 81, 83, 1050,
	1052, 1054, 1056, 1058, 1060, 715, 717, 719, 721, 723,
	726, 728, 730, 732, 734, 570, 572, -2, 2192, 2193,
	795, 797, 799, 801, 803, 805, 807, 809, 811, 1011,
	0, 1014, 0, 1284, 1013, -2, 0, 2226, 2226, 2226,
	0, 0, 2193, 2191, 0, 0, 0, 1017, 1018, 1127,
	1128, 2526, 0, 0, 0, 0, 0, 0, 0, 0,
	2789, 2615, 0, 1129, -2, -2, 2648, 2650, 4085, 3282,
	4111, 2788, 2652, 2653, 2654, 2655, 2656, 0, 2658, 2659,
	2660, 2661, 2662, 2663, 0, 2665, 0, 2670, 2671, 2672,
	0, 4092, 2893, 0, 0, 4099, 2981, 0, 2755, 2690,
	-2, 2988, 2456, 2457, 2458, 2459, 2460, 2461, 2462, -2,
	4130, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702,
	2703, 2704, 0, 4073, 4093, 4094, 4100, 4102, 4095, 4082,
	2715, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	3113, -2, -2, -2, -2, -2, -2, 2485, 2494, -2,
	-2, -2, -2, -2, -2, -2, 4086, 4087, 4105, 4108,
	4115, 4120, 4121, 4091, 4101, 2486, -2, -2, -2, -2,
	0, 2209, 3329, 2212, 2330, 2210, 2195, 2197, 0, 2199,
	2905, 0, 0, 2229, 2227, 0, 2288, 2207, 2208, 2313,
	2313, 2345, 0, 2318, 0, 2345, 2221, 2377, 0, 2324,
	3362, 2691, 2692, 2992, 0, 0, 0, 0, 0, 0,
	0, 911, 913, 915, 916, 918, 0, 0, 0, 0,
	0, 0, 0, 0, 958, 0, 964, 966, 0, 0,
	0, 0, 1000, 999, 2231, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 275, 4093, 649, 653, 656, 275,
	4093, 652, 0, 697, 698, 699, 700, 701, 4093, 0,
	0, 0, 0, 707, 708, 709, 710, 711, 712, 713,
	275, 4093, 816, 850, 846, 0, 275, 4093, 819, 849,
	275, 4093, 822, 848, 0, 825, 1935, 275, 4093, 828,
	2948, 275, 4093, 831, 838, 835, 4093, 834, 1062, 0,
	2789, 275, 4093, 842, 2965, 2963, 843, 0, 845, 312,
	308, 309, 310, 311, 2033, 2034, 2035, 2036, 0, 559,
	2067, 1936, 1022, 0, 1048, 0, 1099, 1100, 4081, -2,
	0, 3387, 1104, 1105, -2, 1107, 2071, 2075, 2076, 2077,
	2078, 2079, 0, 0, 0, 0, 2084, 0, 0, 0,
	0, 1084, 1085, 1114, 1115, 1121, 1124, 0, 1243, 1239,
	1255, 0, 1270, 0, 1271, 1271, 2937, 2928, 2929, 0,
	0, 1271, 1271, 0, 0, 1274, 1275, 1276, 1277, 1278,
	937, 0, 938, 1280, 1281, 0, 0, 1300, 1301, 1302,
	0, 0, 1320, -2, -2, -2, -2, 3075, 1312, 438,
	439, 3005, 3006, 3014, 3015, 3016, 3017, 4128, 0, 1344,
	1347, -2, -2, 0, 0, 0, 0, 1354, 0, 1359,
	1360, 1361, 0, -2, 0, 0, 1369, 1371, 1597, 1374,
	0, 1597, 0, 1376, 0, 1380, 0, 1383, 1384, 0,
	1386, 0, 1388, -2, -2, -2, 1396, 1397, -2, 0,
	1403, -2, 0, 1408, 0, -2, 0, 1411, 0, 1415,
	-2, 0, 1428, 1424, 1425, 0, 0, 0, 0, 1446,
	1447, 0, 1451, 0, 1455, 0, 1464, 0, 1467, 1468,
	1469, 0, 0, 1474, 1475, 0, 1477, 1478, 1479, 1481,
	1482, 1496, 0, 3473, 3383, 3094, 3186, 3381, 3152, 3316,
	0, 1495, -2, 3135, 1507, 1513, 0, -2, 0, 1529,
	0, 1534, 1535, 0, 0, 0, 1558, 0, 0, 0,
	939, 941, 559, 0, 943, 1283, 0, 1292, 1293, 1294,
	2061, -2, 94, 0, 4093, 2377, 96, 0, 2942, 3018,
	3019, 3020, 3021, 3022, 4148, 4149, 4150, 4151, 4152, 4153,
	4154, 4155, 4156, 4157, 4158, 4159, 4160, 4161, 4162, 4163,
	4164, 4165, 4166, 4167, 4168, 4169, 4170, 4171, 4172, 4173,
	4174, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183,
	4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193,
	4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203,
	4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213,
	4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223,
	4224, 4225, 4226, 4227, 100, 0, 4093, 105, 0, 4093,
	0, -2, 129, 674, 133, 0, 134, 0, 156, 0,
	184, -2, -2, -2, 165, 0, 4093, 0, 2917, -2,
	0, 304, -2, 0, 932, 427, 428, 0, 923, 1061,
	0, 0, 0, 0, 1636, -2, 0, 1853, 1855, 1855,
	0, -2, 0, 0, 0, 1587, 2914, 2919, 1588, 1589,
	2938, 1590, 2924, 0, 508, 509, 510, 511, 512, 513,
	4093, 515, 516, 0, 518, 519, 4093, 521, 522, 0,
	524, 0, 526, 0, 573, 373, 371, 4093, 0, 560,
	4093, 557, 4093, 575, 578, 0, 0, 695, 0, 692,
	0, 676, 677, 0, 679, 0, 0, 0, 684, 685,
	687, 688, 689, 690, 691, 0, 738, 736, 2953, 761,
	452, 0, -2, 4093, 0, 1633, 0, 0, 1910, -2,
	0, 1846, -2, 0, 1918, 4093, 1913, 0, -2, 0,
	2219, 4093, 2088, 1668, 1669, 1670, 1671, 0, 768, 769,
	2391, 2127, 2391, 2129, 0, 2149, 2385, 2313, 0, 0,
	2390, 0, -2, 920, 2974, -2, 859, 0, 860, 0,
	-2, 0, 452, 0, 0, 1614, 1616, 1617, 1619, 1620,
	1623, 1624, 1625, 1626, 0, 1628, 2362, 392, 394, 0,
	0, 0, 0, 1613, 2024, 2025, 2026, 2027, 2028, 2029,
	2030, 2031, 2032, 0, 761, 1033, 0, 0, 275, 2381,
	2046, 0, -2, 0, 1012, 0, 1016, 2261, 2178, 2175,
	0, 2258, 2259, 2179, 0, 0, 0, 2186, 0, 2224,
	2225, 0, 0, 0, 2165, 2166, 0, 0, 0, 0,
	0, 0, 2794, 2795, 2796, 2797, 2810, 2798, 2799, 2809,
	2807, 2808, 2800, 2801, 2806, 2820, 2821, 2811, 2812, 2802,
	2815, 2813, 2814, 2816, 2817, 2818, 2819, 0, 0, 2825,
	2826, 0, 2803, 2804, 2805, 2834, 0, 0, 2835, 0,
	2837, 0, 2827, 2822, 2823, 2824, 0, 2594, 2596, 2901,
	0, 0, 0, 2833, 2828, 2829, 2531, 2532, 2533, 2534,
	2535, 2569, 2573, 2574, 0, 0, 2649, 2898, 2897, 2651,
	0, 0, 2849, 0, 2664, -2, 0, 2789, 2844, 0,
	0, 2673, 2674, 2675, 0, 0, 2849, 0, 0, 2892,
	2687, 2688, 2523, 0, 0, 2757, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2471, 0, 2472, 2473, 0, 2474,
	2475, 0, -2, 0, 0, 2495, 0, 0, 0, 0,
	2499, 0, 0, 0, 0, 0, 0, 0, 2873, -2,
	0, 0, 0, 0, 2487, 0, 0, 2211, 0, 0,
	0, 2292, 2904, 2902, 2908, 2909, 2292, 2292, 0, 0,
	2850, 2374, 2374, 0, 0, 2368, 2368, 2368, 2366, 2345,
	0, 2345, 2355, 0, 2345, 2345, -2, 2318, 0, 0,
	2359, 0, 2339, 899, 901, 903, 905, 906, 907, 909,
	2378, 2379, 0, 0, 0, 2993, 2677, 2236, 0, 0,
	0, 0, 2684, 0, 2936, 2978, 0, 0, 0, 0,
	912, 914, 917, 919, 0, 0, 0, 0, 2977, 0,
	0, 2947, 533, 534, 0, 0, 0, 3450, 3375, 0,
	-2, -2, -2, -2, 3383, 0, 0, 3094, 3135, 3152,
	3316, 969, 1002, 0, 2221, 0, 2852, 2406, 2410, 0,
	2412, 2413, 2414, 0, 0, 2407, 2506, 3010, 3011, 3012,
	2466, 2467, 2468, 2469, 2470, 2478, 2465, 2465, 2465, 2476,
	-2, 2483, 2505, 2497, 2505, 2501, 2449, 2450, 2451, 2488,
	2489, 2490, 2491, 0, 3450, 3375, 0, -2, 0, 982,
	0, 0, 0, 2160, 383, 384, 647, 0, 273, 274,
	0, 655, 0, 650, 0, 696, 0, 703, 704, 705,
	0, 812, 0, 0, 275, 4093, 817, 0, 820, 0,
	275, 4093, 2912, 826, 0, 829, 0, 0, 832, 836,
	0, 0, 3152, 840, 0, 0, 0, 0, 0, 275,
	2162, 0, 0, 0, 0, -2, 1109, 1117, 1118, 1119,
	0, 2073, 0, 2080, 1139, 1140, 1141, 2082, 2083, 0,
	2085, 1112, 1142, 1143, 1144, 1145, 1146, 1147, 0, 2926,
	2927, 2932, 2933, 0, 0, 1110, 1132, 1113, 0, 1125,
	1246, 1241, 1242, 1256, 1257, 0, 0, 2930, 2931, 0,
	0, 1262, 1263, 946, 0, 948, 0, 0, 0, 1303,
	392, 0, 0, 1306, 0, 1320, 1320, 1320, 1320, 1336,
	1342, 1343, 1536, 1537, 1345, 1346, -2, -2, -2, -2,
	1348, 1349, 1461, 0, 0, 0, 1460, 2015, 0, 1365,
	0, 1368, 1372, 0, 1569, 3357, 3375, 3450, 1595, 1373,
	1461, 3094, 1461, 3094, 1461, 3094, 1461, 1461, 1390, 1441,
	1457, 1402, 1400, 1417, 3125, 0, 1410, 0, 0, 0,
	1404, 1409, 1413, 1416, 0, 0, 1421, 1429, 0, 1431,
	-2, 0, 1433, 0, 1435, 0, 1437, 1461, 1449, 1453,
	1462, 1465, 0, 1473, 1476, 0, 1483, 0, 1496, 1496,
	1486, 2957, 1487, 2972, 0, 0, 1490, 1491, 1492, 1493,
	1494, -2, 0, 1500, 1501, 0, 0, 1520, 1525, 1526,
	1522, 0, 0, 0, 0, 0, 1538, 1539, 1540, 1541,
	1542, 1543, 1544, 0, 1552, 1553, 0, 0, 0, 0,
	1568, 944, 942, 0, 1296, 166, 2019, 0, 0, 219,
	0, 2019, 2019, 0, 0, 0, 0, 256, 0, 0,
	1702, 0, 0, 0, 0, 184, 204, 215, 178, 179,
	180, 0, 0, 0, 0, 0, 0, 106, 1818, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 1835,
	1838, 0, 0, 0, 0, 665, 0, 634, 0, 0,
	662, 673, 0, 0, 621, 622, 623, 624, 0, 0,
	629, 0, 0, 0, 0, 635, 0, 0, 0, 0,
	136, 137, 0, 0, 142, 143, 0, 0, 203, 0,
	0, 0, 0, 0, 0, 2124, 0, 194, 184, 0,
	0, 183, 185, 168, 0, 0, 184, 188, 205, 217,
	0, 262, 0, 191, 192, 0, 264, 1699, 0, 0,
	0, 0, 0, 0, 0, 0, 303, 314, 0, 0,
	356, 930, 0, 933, 0, 922, 924, 761, 761, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1077,
	0, 0, 1082, 1083, 1078, 1081, 0, 0, 0, 0,
	0, 1847, 0, 0, 0, 2218, 0, 0, 0, 0,
	4093, 2017, 0, 2000, 0, 2362, 3206, -2, -2, 2362,
	1586, 0, 0, 2993, 2922, 0, 0, 0, 0, 525,
	0, 0, 0, 382, 553, 0, 0, 0, 0, 0,
	581, 590, 0, 583, 0, 686, 675, 678, 680, 681,
	682, 724, 1765, 4093, 0, 0, 765, 756, 0, 760,
	0, 0, 764, 0, 0, 1817, 4093, 1815, 0, 1844,
	0, 1909, 1796, 4093, 2955, 0, 0, 0, 1919, 3002,
	1932, 1936, 2112, 0, 2391, 0, 0, 2130, 2313, 0,
	0, 2386, 0, 2388, 2313, 2221, 0, 0, 0, 0,
	430, 0, 0, 0, 0, 0, 1627, 398, 0, 2361,
	0, 0, 440, 2362, 392, 0, 1612, 452, 452, 2362,
	1035, 2362, 1037, 1839, 0, 2055, 2261, 2178, 1015, 2169,
	2260, 2170, 2177, 2180, 0, 0, 2182, 0, 2184, 0,
	2256, 2257, 2264, 2265, 0, 2275, 2276, 2268, 0, -2,
	0, 0, 2271, 2272, 2188, 0, 2204, 2205, 2206, 2237,
	2243, 2244, 1951, 0, 4230, 1097, 0, 2527, 2401, 2528,
	2529, 2941, 0, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, -2, -2, -2, -2, -2, -2, -2,
	-2, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562,
	2563, 2564, 2565, -2, -2, -2, 2570, 2571, 2572, -2,
	2836, 2838, 0, 2901, 0, -2, 0, -2, -2, -2,
	-2, 2591, 0, 2593, 2598, 2600, 2602, 0, 0, 0,
	0, 2900, 2612, 2884, 2885, 0, 0, 2791, 2792, 2793,
	2597, 0, 2616, 2899, 2896, 0, 0, 2830, 0, 2794,
	2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804,
	2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814,
	2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824,
	2825, 2826, 2827, 0, 2848, 2236, 2669, 2846, 0, 2845,
	0, 0, 0, 2856, 2849, 0, 2891, 2887, 0, 2939,
	2522, 2509, 2510, 2511, 2512, 2513, 2514, 2524, 0, 2978,
	2984, 2765, 0, 0, 0, 2716, 2717, 2718, 2719, 2720,
	0, 2722, 2723, 0, 2725, 2726, 0, 2728, 2729, 0,
	2731, 2732, 2733, 2734, 2735, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2417, 2418, 2419, 2420, 2421,
	2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431,
	2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441,
	2442, 2443, 2444, 2445, 2446, 2447, 2448, 0, 0, 2737,
	0, 2859, -2, -2, -2, -2, -2, -2, -2, -2,
	0, 2739, 0, 2741, 2850, 2870, 0, 0, 2617, 0,
	0, 0, 0, 0, 2744, 2850, 2878, 0, 0, 0,
	0, 0, 2850, 0, 2883, 0, 2751, 0, 2753, 1351,
	1352, 2213, 2216, 0, 2331, 0, 2396, 0, 0, 3510,
	3503, 3833, -2, -2, 3954, 3728, -2, 3700, 0, 2907,
	3829, 2910, 2911, 3490, 3491, 3492, 3493, 3494, 3495, 3496,
	3497, 3498, 3499, 3500, 3501, 3502, 3504, 3505, 3506, 3507,
	3508, 3509, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518,
	3519, 3520, 3521, 3523, 3524, 3525, 3526, 3527, 3528, 3529,
	3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539,
	3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549,
	3550, 3551, 3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559,
	3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569,
	3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579,
	3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 3589,
	3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599,
	3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609,
	3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619,
	3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629,
	3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639,
	3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649,
	3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659,
	3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669,
	3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679,
	3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689,
	3690, 3691, 3692, 3693, 3694, 3696, 3697, 3698, 3699, 3701,
	3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711,
	3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719, 3720, 3721,
	3722, 3723, 3724, 3725, 3726, 3727, 3729, 3730, 3731, 3732,
	3733, 3734, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742,
	3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752,
	3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763,
	3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773,
	3774, 3775, 3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783,
	3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793,
	3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803,
	3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813,
	3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823,
	3824, 3825, 3826, 3827, 3828, 3830, 3831, 3832, 3834, 3835,
	3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845,
	3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855,
	3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865,
	3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875,
	3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885,
	3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895,
	3896, 3897, 3898, 3899, 3900, 3901, 3902, 3903, 3904, 3905,
	3906, 3907, 3908, 3909, 3910, 3911, 3912, 3913, 3914, 3915,
	3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925,
	3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935,
	3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945,
	3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3955, 3956,
	3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966,
	3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976,
	3977, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985, 3986,
	3987, 3988, 3989, 3990, 3991, 3992, 3993, 3994, 3995, 3996,
	3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006,
	4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016,
	4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026,
	4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036,
	4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046,
	4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056,
	4057, 4058, 4059, 4060, 4061, 4062, 4063, 4064, 4065, 4066,
	4067, 4068, 4069, 4070, 4071, 4072, 2396, 2396, 0, 2287,
	0, 0, 2369, 2370, 2371, 2372, 2373, 0, 0, 2374,
	0, 2363, 2367, 2364, 2365, 2355, 2310, 0, 0, 2943,
	2355, 2316, 2354, 0, 2330, 2344, 2355, 2355, -2, 2320,
	2358, 0, 2333, 2345, 0, 0, 900, 902, 904, 908,
	910, 0, 0, -2, 0, 0, 0, 2235, 0, 2236,
	2236, 0, 2683, 2686, 0, -2, 455, -2, 457, 1795,
	0, 0, 0, 0, 0, 0, 0, 959, 961, 0,
	0, 837, 0, 0, 0, 0, 0, 1575, 0, 1577,
	1578, 0, 1580, 1581, 0, 2003, 953, 0, 956, 0,
	2397, 2400, 0, 0, 2411, 2415, 2416, 2507, 0, 0,
	0, 0, 0, 0, 0, 0, 997, 0, 3429, 0,
	995, 0, 654, 275, 0, 658, 659, 0, 0, 602,
	603, 604, 605, 607, 3013, 608, -2, -2, 275, 0,
	706, 275, 847, 814, 0, 275, 275, 823, 0, 0,
	275, 839, 275, 835, 1063, 2966, 275, 2964, 313, 844,
	2161, 325, 0, 1096, 0, 2072, 2081, 0, 1136, 0,
	1138, 0, 2934, 2935, 0, 1126, 0, 1244, 0, 1258,
	1259, 1260, 1261, 0, 947, 0, 452, 0, 0, 1320,
	1318, 0, 1321, 1323, 1324, 0, 1326, 1327, 0, 0,
	0, 1331, 0, 1333, 1307, 1308, 1309, 1310, 1311, 0,
	1392, 1443, 1459, 1524, 1353, 1355, 1356, 1357, 0, 1362,
	0, 0, 0, 0, 0, 0, 1596, 1591, 1592, 1593,
	2967, 2963, 1594, 1375, 1461, 1378, 1461, 1381, 1461, 1385,
	1387, 0, 1419, 1406, 0, 1407, 1621, 1622, 1412, 1414,
	1430, 1423, 1432, 0, 0, 0, 1445, 0, 0, 0,
	1471, 0, 1480, 1497, 1484, 1485, 1488, 0, 1499, -2,
	1504, 1505, 0, 0, 0, 0, 0, 0, 0, 1538,
	1538, 1538, 1533, 0, 1550, 1555, 1554, 0, 1560, 1564,
	1297, 0, 0, 0, 0, 2018, 0, 0, 1963, 0,
	0, 223, 4093, 0, 277, 0, 0, 1758, 2949, 0,
	1744, 0, 0, 3122, 0, 0, 0, 0, 0, 249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	175, 0, 181, 182, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1820, 1822, 1830, 1832, 0, 1825, 0,
	1827, 0, 1829, 1831, 1833, 0, 1836, 0, 0, 0,
	0, 0, 0, 661, 663, 664, 634, 0, 0, 0,
	0, 0, 0, 0, 627, 628, 630, 631, 632, 633,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 144,
	148, 1856, 3381, 0, 0, 0, 0, 1857, 1858, 1859,
	2100, 2101, 0, 2123, 2124, 0, 0, 0, 0, 0,
	0, 0, 177, 0, 0, 0, 190, 193, 0, 2916,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 355, 357, 0, 0, 934, 0, 935, 0, 925,
	452, 927, 928, 448, 445, 447, 929, 0, 0, 0,
	1069, 0, 1068, 1070, 1071, 1072, 0, 0, 0, 0,
	0, 1090, 0, 0, 1091, 1079, 1080, 0, 0, 1849,
	0, 1903, 1901, 1872, 1873, 1874, 1875, 1876, 1877, 1878,
	1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888,
	1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898,
	1899, 1900, 0, 0, 0, 0, 0, -2, 1851, 1852,
	0, 0, 0, 0, 0, 0, 0, 0, 335, 0,
	443, 2915, 2925, 0, 514, 517, 520, 523, -2, -2,
	0, 0, 0, 561, 0, 0, 577, 592, 592, 0,
	1674, 1646, 0, 0, 737, 452, 761, 763, 0, 450,
	3285, 2970, 1631, 1813, 1816, 0, 1796, 4093, 1868, 0,
	0, 0, 0, 0, 1925, 0, 1917, 0, 0, 4093,
	2944, 3001, 3002, 2114, 2124, 0, 776, 0, 772, 0,
	2147, 2133, 0, 0, 0, 2132, 2147, 2151, 2152, 2154,
	2155, 0, 0, 2387, 2393, 858, 921, 2221, 2221, 452,
	0, 0, 2136, 2138, 0, 0, 0, 385, 0, 395,
	2362, 393, 0, 398, 0, 2362, 392, 0, 752, 1034,
	1039, 2382, 2173, 2174, 2176, 0, 2185, 0, 0, 2270,
	-2, -2, 2269, 2273, 2274, -2, -2, -2, -2, 2181,
	0, 2190, 2187, 0, 2255, 1949, 1950, 0, 0, 1098,
	0, 0, -2, -2, 0, 0, 0, 2613, 0, -2,
	2592, 2595, 2599, 2601, 2603, 0, 0, 0, 0, 0,
	0, 2839, 0, 2841, 2614, 2894, 2897, 2832, 0, 2787,
	0, 0, 2847, 0, 2854, 2855, 0, 2676, 0, 2888,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2689,
	0, 0, 0, 0, 2721, 2724, 2727, 2730, 0, 0,
	0, 0, 2710, 0, 0, 0, 2714, 2477, 2463, 0,
	0, 2480, 2484, 2505, 2503, 2504, 2498, 2505, 2502, 2453,
	0, 2452, 0, 2736, 0, 2738, 2740, 0, 0, 2742,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2620, 2621, 2622, 2642, 2743, 2876,
	2877, 0, 0, 0, 0, 0, 0, 2749, 0, 2882,
	2750, 2752, 0, 2214, 0, 2329, 0, 2289, 2278, 2395,
	0, 2362, 2291, 2293, 2903, 2906, 2946, 2278, 2278, 0,
	2851, 0, 0, 2349, 0, 0, 0, 2351, 2314, 0,
	0, 2308, 0, 2297, 2298, 2299, 2300, 2301, 2302, 2303,
	2304, 0, 2315, 2330, 2353, 2317, 2321, 0, 2333, 2357,
	0, 2355, 0, 2340, 0, 2342, 2380, 0, 2326, 2359,
	0, 2994, 2678, 0, 0, 0, 0, 2682, 2979, 2396,
	0, 456, -2, 459, 527, 535, 536, 528, 529, 530,
	531, 0, 2003, 0, 0, 0, 0, 0, 0, 1576,
	1579, 0, 978, 0, 0, 2853, 0, 2402, 0, 2408,
	0, 980, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2159, 648, 657, 0, 0, 601, 0, 600, 606,
	651, 702, 813, 275, 818, 821, 2913, 275, 827, 830,
	833, 841, 321, 0, 1047, -2, 1134, 1135, 1137, 0,
	1133, 1249, 1245, 0, 951, 0, 949, 1298, 0, 0,
	1305, 0, 0, 1325, 0, 0, 0, 0, 1334, 0,
	1337, 0, 0, 0, 0, 0, 2015, 2015, 2012, 0,
	0, 0, 1367, 0, 1377, 1379, 1382, 1418, 1434, 1436,
	1461, 1448, 1452, 0, 1472, 1489, 1503, 1514, 2945, 1515,
	1696, 0, 1696, 0, 0, 1530, 1531, 1532, 1545, 1546,
	1547, 1548, 1549, 1551, 1557, 1561, 0, 220, 2019, 0,
	0, 0, 1959, 0, 1657, 0, 1652, 1653, 1961, 2962,
	1965, 1971, 1974, 0, 225, 4093, 246, 0, 4093, 0,
	1718, 0, 0, 0, 0, 0, 0, 2021, 0, 0,
	4093, 275, 4093, 275, 250, 252, 255, 0, 261, 257,
	0, 1654, 0, 1706, 0, 0, 1709, 167, 2019, 0,
	0, 170, 174, 186, 0, 0, 0, 202, 0, 0,
	0, 1976, 1980, 1988, 0, 0, 0, 1823, 1824, 0,
	1828, 1834, 1837, 107, 0, 0, 0, 1984, 1986, 1992,
	666, 667, 668, 0, 0, 0, 625, 626, 670, 671,
	672, 135, 138, 4093, 2958, 2959, 0, 140, 4093, 0,
	149, 2124, 0, 0, 0, 0, 1958, 0, 0, 0,
	0, 0, 0, 0, 0, 263, 172, 176, 187, 0,
	1994, 169, 189, 0, 307, 0, 0, 297, 275, 4093,
	0, 299, 0, 300, 301, 315, 0, 0, 0, 0,
	0, 0, 0, 362, 0, 0, 0, 366, 0, 931,
	0, 926, 0, 0, 0, 0, 1065, 1066, 1067, 0,
	0, 1075, 565, 0, 0, 1086, 1094, 1092, 1087, 1088,
	1089, 1634, 1635, 1902, 0, 1842, 1843, 368, 369, 0,
	1907, 1908, 1854, 1848, 0, 0, 0, 0, 0, 1996,
	1997, 0, 0, 0, 2017, 2362, 327, 0, 2362, 335,
	0, 2921, 0, 354, 0, 452, 755, 0, 372, 381,
	0, 560, 574, 0, 591, 593, 595, 0, 0, 0,
	0, 1673, 1776, 1675, 1677, 1678, 1679, 277, 0, 0,
	0, 1744, 3192, 3002, 0, 0, 1641, 0, 0, 0,
	743, 739, 0, 750, 757, 758, 0, 0, 0, -2,
	0, 0, 0, 0, -2, 0, 0, 0, 1921, 0,
	1924, 0, 1916, 0, 0, 0, 0, 4093, 2116, 2124,
	0, 2219, 2396, 0, 770, 0, 774, 2125, 2147, 0,
	0, 0, 2135, 2131, 2128, 2396, 0, 0, 0, 0,
	0, 2389, 2392, 861, 862, 429, 0, 452, 0, 0,
	0, 0, 0, 0, 396, 0, 399, 0, 0, 0,
	404, 405, 406, 407, 408, 409, 410, 0, 0, 0,
	0, 0, 416, 417, 418, 0, 0, 421, 424, 425,
	422, 423, 398, 441, 387, 2362, 398, 0, 0, 1036,
	0, 2183, 0, 2267, 2189, 2245, 2246, 2252, 0, 1951,
	0, 2530, 2576, 0, 0, -2, 0, 0, 2580, 0,
	0, 0, -2, 0, 0, 0, 2840, 2842, 0, 2896,
	2831, 2678, 2666, 2667, 0, 2790, 2857, 2886, 2890, 0,
	2515, 2516, 2517, 2518, 2519, 2520, 2521, 0, 2940, 2979,
	2983, 2763, 2764, 2768, 2954, 0, 0, 0, 2693, 0,
	0, 0, 0, 0, 0, 0, 0, 2479, 2496, 2500,
	0, 0, 2858, 2869, 2871, 2618, 2619, 2623, 2624, 2625,
	2626, 2627, 2628, 2629, 2630, 2631, 2632, -2, -2, -2,
	2636, 2637, 2638, -2, -2, -2, 2643, 0, 0, 0,
	2872, 2874, 2875, 2879, 2880, 0, 2746, 2747, 2748, 2881,
	2221, 2215, 2332, 2286, 0, 2394, 2290, 0, 2286, 2286,
	2228, 2347, 0, 0, 2376, 0, 2311, 0, 2312, 0,
	0, 0, 2352, 2319, 2356, 0, 2335, 2337, 2322, 2323,
	2341, 0, 2325, 0, 2328, -2, 2236, 2238, 2247, 2679,
	2681, 0, 454, 460, 0, 463, 0, 468, 469, 0,
	0, 0, 0, 474, 0, 0, 0, 0, 458, 0,
	968, 2003, 2003, 0, 0, 0, 0, 970, 0, 954,
	0, 0, 2404, 0, 2508, 984, 986, 0, 0, 0,
	0, 0, 3450, 3375, 0, 0, 983, 660, 598, 599,
	815, 824, 323, 0, 2360, 0, 0, 0, 950, 0,
	452, 1320, 1322, 0, 1328, 1329, 1330, 1332, 0, 0,
	0, 0, 0, 1358, 2014, 1363, 1364, 1508, 1511, 1509,
	1510, 2968, 1444, 1470, 1516, 1695, 0, 0, 1518, 0,
	0, 1562, 0, 1565, 0, 0, 0, 258, 0, 0,
	0, 0, 0, 0, 276, 0, 1757, 0, 1716, 0,
	0, 1743, 0, 0, 1763, 227, 228, 229, 0, 0,
	235, 236, 237, 0, 0, 293, 289, 248, 0, 0,
	244, 0, 254, 260, 259, 0, 1703, 0, 0, 0,
	0, 1964, 0, 0, 0, 199, 200, 201, 0, 206,
	0, 207, 0, 0, 0, 0, 1826, 0, 0, 0,
	0, 619, 0, 0, 0, 0, 146, 0, 0, 0,
	151, 152, 0, 0, 2106, 2107, 0, 2091, 196, 0,
	0, 0, 0, 0, 0, 295, 0, 0, 0, 1948,
	317, 0, 0, 0, 0, 0, 358, 359, 360, 361,
	0, 339, 341, 0, 0, 0, 347, 349, 351, 352,
	0, 0, 370, 367, 0, 449, 444, 446, 0, 0,
	0, 1074, 0, 0, 0, 0, 0, 1841, 1905, 1906,
	1850, 1977, 1981, 1989, 0, 0, 0, 0, 0, 1005,
	2016, 0, 335, 333, 0, 336, 335, 329, 0, 0,
	452, 0, 766, 0, 554, 0, 611, 0, 0, 0,
	611, 683, 1644, 1764, 0, 0, 1766, 1680, 1684, 0,
	0, 3002, 0, 0, 0, 2951, 0, 1642, 0, 0,
	1765, 735, 741, 0, 744, 0, 747, 0, 749, 0,
	762, 2950, 0, 0, 0, 1817, 0, 0, 1845, 1796,
	1871, 1796, 0, 1920, 1922, 1914, 0, 1926, 0, 1934,
	0, 0, 0, 2118, 2124, 0, 2111, 2112, 2234, 775,
	773, 2126, 2145, -2, 0, 0, 2234, 2153, 2150, 2156,
	2157, 0, 0, 432, 0, 2137, 2139, 0, 1615, 1618,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 386, 398, 389, 2362, 436, 0, 2266, 2253,
	2254, 2250, 1951, 2578, 2582, 0, 0, 0, 2584, -2,
	0, 2606, -2, -2, 2843, 2895, 2657, 2668, 2889, 2525,
	0, 2770, 2767, 0, 2754, 0, 2705, 2706, 0, 0,
	2709, 2711, 2712, 2713, 2464, 2455, 2454, 2868, 0, 0,
	0, 0, 2745, 0, 2759, 0, 0, 2294, 2759, 2759,
	2348, 0, 2350, 2309, 2295, 0, 2305, 0, 0, 2334,
	0, 2338, 2343, 2327, 0, 0, 2980, 464, 0, 465,
	0, 0, 0, 0, 0, 0, 490, 0, 0, 0,
	0, 0, 0, 0, 470, 471, 472, 473, 475, 476,
	0, 0, 0, 480, 532, 971, 972, 0, 0, 0,
	0, 0, 2002, 2398, 2403, 0, 2409, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 996, 324, 0,
	1247, 1248, 952, 1299, 1304, 1319, 1338, 0, 1339, 1340,
	1341, 1694, 0, 0, 0, 0, 0, 0, 0, 221,
	222, 1658, 1656, 1968, 1972, 1969, 0, 224, 0, 0,
	1717, 0, 1720, 0, 0, 0, 0, 1727, 1744, 0,
	0, 0, 0, 0, 0, 1746, 0, 1745, 0, 0,
	1780, 0, 1939, 1946, 0, -2, 0, 0, 0, 238,
	240, 266, 0, 0, 0, 242, 294, 0, 0, 0,
	0, 269, -2, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2020, 0, 290, 0, 0, 275, 275, 1655,
	0, 0, 1960, 1962, 1975, 0, 0, 0, 0, 209,
	0, 0, 1978, 1982, 1990, 1985, 1987, 1993, 669, 620,
	0, 0, 141, 150, 2094, 0, 0, 0, 2108, 0,
	195, 0, 0, 0, 1995, 305, 306, 0, 275, 0,
	275, 298, 275, 1948, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 363, 364, 365, 0, 0, 0, 0,
	566, 567, 0, 1095, 1093, 0, 0, 0, 0, 0,
	0, 1998, 1999, 326, 0, 0, 328, 442, 335, 0,
	0, 0, 0, 576, 587, 644, 610, 612, 0, 0,
	616, 617, 618, 594, 596, 597, 644, 1705, 0, 1776,
	1768, 1769, 1770, 0, 1676, 1775, 1777, 0, 0, 1681,
	0, 0, 0, 0, 0, 0, 1661, 1643, 0, 1674,
	1646, 745, 0, 746, 748, 740, 2391, 451, 1632, 1814,
	1863, 1796, 0, 1866, 0, 0, 1911, 0, 0, 0,
	1925, 0, 0, 0, 0, 0, 2120, 2124, 0, 2113,
	2114, 2263, 2233, 0, 0, 0, 2134, 2263, 0, 452,
	0, 452, 400, 0, 401, 402, 403, 411, 412, 413,
	414, 415, 0, 420, 388, 398, 1038, 1040, 0, 0,
	0, 1046, 2251, 2586, -2, -2, 2607, 2982, 2236, 0,
	2756, 2239, 2240, 0, 0, -2, 0, 0, 0, 2217,
	2201, 0, 2285, 2277, 2279, 2281, 3360, 3089, 4092, 2202,
	2203, 2375, 0, 0, 0, 2336, 2680, 2248, 2249, 461,
	0, 481, 482, 483, 484, 485, 486, 487, 488, 489,
	491, 492, 493, 494, 495, 496, 497, 498, 467, 477,
	0, 479, 973, 0, 0, 0, 0, 0, 2405, 0,
	0, 0, 0, 981, 0, 0, 0, 0, 0, 1237,
	1335, 1517, 1519, 0, 0, 1566, 0, 0, 0, 0,
	1970, 226, 0, 0, 1721, 1722, 1724, 0, 1726, 1728,
	1729, 1646, 0, 1733, 0, 3004, 0, 1738, 1741, 1742,
	0, 0, 1759, 1781, 0, 1790, 0, 1941, 1951, 1945,
	0, 1943, 1792, 0, 230, 0, 268, 231, 232, 241,
	270, 265, 0, -2, -2, -2, -2, -2, 0, -2,
	-2, -2, 0, 292, 1747, 0, 1948, 291, 0, 243,
	253, 0, 0, 171, 0, 0, 3082, 212, 210, 208,
	139, 145, 2960, 147, 153, 1957, 198, 0, 173, 0,
	307, 316, 1947, 318, 302, 275, 0, 338, 340, 342,
	343, 344, 345, 0, 348, 350, 0, 1064, 564, 1073,
	568, 1979, 1983, 1991, 0, 2006, 2007, 2008, 2009, 2010,
	0, 0, 0, 337, 0, 0, 380, 0, 0, 0,
	589, 586, 580, 642, 0, 0, 613, 646, 636, 615,
	582, 1646, 1704, 1645, 1767, 0, 1778, 1646, 0, 0,
	1792, 0, 0, 0, 0, 0, 1648, 0, 1647, 0,
	0, 742, 2396, 759, 0, 0, 0, 1870, 0, 1923,
	1927, 1921, 0, 0, 1933, 0, 0, 0, 2090, 0,
	0, 2115, 2116, 2147, 2262, 2140, 0, 0, 2147, 2158,
	431, 0, 434, 397, 419, 390, 0, 1042, 0, 1044,
	0, 2774, 0, 0, 0, 2707, 2708, -2, 0, 2646,
	2758, 2760, 0, 0, 0, 0, 0, 2296, 2306, 2307,
	466, 478, 2003, 2003, 2003, 2003, 2399, 988, 989, 991,
	993, 985, 987, 0, 0, 0, 1527, 1528, 1563, 1567,
	1966, 0, 1973, 277, 1719, 1723, 0, 1730, 0, 0,
	0, 1734, 1800, 0, 0, 1817, 1817, 1749, 0, 0,
	1784, 1785, 1701, 0, 1786, 1787, 1788, 1940, 2255, 1946,
	1646, 0, 0, 239, 1817, 1817, 267, -2, -2, 1748,
	272, 0, 0, 0, 0, 0, 0, 0, 197, 0,
	296, 319, 1948, 346, 0, 1076, 0, 0, 2011, 0,
	0, 334, 377, 753, 0, 0, 564, 0, 0, 588,
	641, 637, 614, 0, 1648, 0, 1779, 1682, 1685, 1686,
	1687, 1688, 1689, 1690, 1691, 1692, 1693, 1683, 1790, 1792,
	0, 1701, 0, 1756, 1659, 0, 1662, 0, 1644, 0,
	751, 0, 1864, 0, 1871, 0, 1915, 0, 1934, 0,
	0, 2103, 2089, 2124, 2117, 2118, 767, 2396, 0, 2148,
	0, 1041, 0, 0, 0, 0, 0, 0, 2769, 2241,
	2242, 2647, 0, 0, 2280, 2282, 2283, 2284, 974, 975,
	976, 977, 0, 0, 0, 1967, 247, 0, 1794, 1732,
	1805, 0, 0, 0, 0, 0, 1750, 1782, 1783, 1780,
	1700, 0, 1944, 1942, 1761, 1794, 1796, 0, 0, 245,
	0, 1792, 0, 1710, 0, 0, 1713, 0, 0, 213,
	3082, 211, 2961, 0, 275, 936, 562, 0, 2003, 275,
	0, 380, 0, 0, 2391, 555, 0, 611, 609, 2221,
	645, 1640, 0, 1772, 1774, 1701, 1790, 1792, 1646, 1701,
	0, 1663, 1705, 1661, 1865, 1869, 1867, 1912, 1792, 0,
	1790, 0, 2110, 2124, 2104, 2105, 0, 2120, 0, 0,
	452, 1043, 1045, 2766, 2786, 2775, -2, 3453, 3090, 0,
	2786, 2786, 2761, 2762, 0, 0, 0, 0, 1646, 0,
	1735, 1801, 1802, 0, 1797, 1798, 1799, 3003, 1736, 1737,
	1739, 1740, 2396, 0, 1791, 1800, 233, 234, 271, 1646,
	1707, 0, 0, 1708, 0, 0, 216, 0, 218, 320,
	0, 2001, 2004, 0, 353, 0, 0, 2396, 0, 644,
	0, 643, 638, 639, 1637, 1639, 1646, 0, 1646, 1701,
	1790, 2396, 1646, 0, 0, 0, 1646, 1648, 1790, 0,
	1701, 0, 2099, 2109, 0, 2119, 2090, 0, 2143, 0,
	433, 2771, 0, 0, 2777, 2778, 2779, 2780, 2781, 2772,
	2773, 990, 992, 994, 1725, 1731, 0, 1803, 0, 1804,
	0, 0, 0, 1760, 1789, 1805, 251, 1711, 0, 1714,
	0, 214, 0, 0, 375, 376, 378, 0, 0, 564,
	579, 640, 1771, 1773, 2396, 1646, 1701, 1956, 2396, 1649,
	0, 1651, 1648, 1660, 1701, 0, 1646, 0, 2122, 2098,
	2102, 2103, 2141, 0, 0, 0, 2783, 2784, 0, 0,
	0, 1806, 0, 1809, 1810, 0, 1807, 1780, 0, 0,
	563, 275, 0, 380, 556, 1956, 2396, 1646, 1754, 0,
	1953, 1954, 0, 1956, 1650, 1640, 1646, 1792, 2396, 1790,
	2096, 2124, 2110, 0, 2396, 2782, 2785, 2776, 1793, 1808,
	1811, 1812, 1762, 0, 0, 2005, 379, 754, 1751, 1956,
	2396, 1952, 1955, 1755, 1638, 2396, 1790, 1956, 1701, 2093,
	2095, 0, 0, 2099, 2396, 2144, 1698, 0, 1752, 1956,
	1956, 1701, 1930, 1646, 2086, 2092, 0, 0, 2121, 2122,
	2142, 1712, 1697, 0, 1753, 1928, 1646, 2396, 0, 2096,
	0, 2396, 1956, 0, 2093, 0, 1956, 1931, 2097, 2087,
	1698, 1929, 1715,
}

var sqlTok1 = [...]int16{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 701, 3, 707, 702, 3,
	713, 714, 705, 703, 718, 704, 715, 706, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 722, 719,
	693, 695, 694, 698, 717, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 711, 3, 712, 708, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 720, 700, 721, 696,
}

var sqlTok2 = [...]int16{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]uint16{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 585, 57928, 586, 57929, 587,
	57930, 588, 57931, 589, 57932, 590, 57933, 591, 57934, 592,
	57935, 593, 57936, 594, 57937, 595, 57938, 596, 57939, 597,
	57940, 598, 57941, 599, 57942, 600, 57943, 601, 57944, 602,
	57945, 603, 57946, 604, 57947, 605, 57948, 606, 57949, 607,
	57950, 608, 57951, 609, 57952, 610, 57953, 611, 57954, 612,
	57955, 613, 57956, 614, 57957, 615, 57958, 616, 57959, 617,
	57960, 618, 57961, 619, 57962, 620, 57963, 621, 57964, 622,
	57965, 623, 57966, 624, 57967, 625, 57968, 626, 57969, 627,
	57970, 628, 57971, 629, 57972, 630, 57973, 631, 57974, 632,
	57975, 633, 57976, 634, 57977, 635, 57978, 636, 57979, 637,
	57980, 638, 57981, 639, 57982, 640, 57983, 641, 57984, 642,
	57985, 643, 57986, 644, 57987, 645, 57988, 646, 57989, 647,
	57990, 648, 57991, 649, 57992, 650, 57993, 651, 57994, 652,
	57995, 653, 57996, 654, 57997, 655, 57998, 656, 57999, 657,
	58000, 658, 58001, 659, 58002, 660, 58003, 661, 58004, 662,
	58005, 663, 58006, 664, 58007, 665, 58008, 666, 58009, 667,
	58010, 668, 58011, 669, 58012, 670, 58013, 671, 58014, 672,
	58015, 673, 58016, 674, 58017, 675, 58018, 676, 58019, 677,
	58020, 678, 58021, 679, 58022, 680, 58023, 681, 58024, 682,
	58025, 683, 58026, 684, 58027, 685, 58028, 686, 58029, 687,
	58030, 688, 58031, 689, 58032, 690, 58033, 691, 58034, 692,
	58035, 697, 58036, 699, 58037, 709, 58038, 710, 58039, 716,
	0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(sqlPact[state])
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && int(sqlChk[int(sqlAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || int(sqlExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := int(sqlExca[i])
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(sqlTok1[0])
		goto out
	}
	if char < len(sqlTok1) {
		token = int(sqlTok1[char])
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = int(sqlTok2[char-sqlPrivate])
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = int(sqlTok3[i+0])
		if token == char {
			token = int(sqlTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(sqlTok2[1]) /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = int(sqlPact[sqlstate])
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = int(sqlAct[sqln])
	if int(sqlChk[sqln]) == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = int(sqlDef[sqlstate])
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && int(sqlExca[xi+1]) == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = int(sqlExca[xi+0])
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = int(sqlExca[xi+1])
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = int(sqlPact[sqlS[sqlp].yys]) + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = int(sqlAct[sqln]) /* simulate a shift of "error" */
					if int(sqlChk[sqlstate]) == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= int(sqlR2[sqln])
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = int(sqlR1[sqln])
	sqlg := int(sqlPgo[sqln])
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = int(sqlAct[sqlg])
	} else {
		sqlstate = int(sqlAct[sqlj])
		if int(sqlChk[sqlstate]) != -sqln {
			sqlstate = int(sqlAct[sqlg])
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1785
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1790
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1794
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 8:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1800
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1804
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1805
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1806
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1807
		{
			return helpWith(sqllex, "GRANT")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1808
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1809
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1810
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1811
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1812
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 31:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1813
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 33:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1814
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 37:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1817
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 39:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1818
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 41:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1819
		{
			return helpWith(sqllex, "FETCH")
		}
	case 43:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1820
		{
			return helpWith(sqllex, "MOVE")
		}
	case 47:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1823
		{
			return helpWith(sqllex, "SHOW COMMIT TIMESTAMP")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1830
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 53:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1833
		{
			return helpWith(sqllex, "ALTER")
		}
	case 55:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1836
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 57:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1837
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 59:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1838
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 61:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1839
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 63:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1840
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 65:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1841
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 67:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1842
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 69:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1843
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1844
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1845
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 75:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1846
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1847
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 79:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1848
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 81:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1849
		{
			return helpWith(sqllex, "ALTER PROCEDURE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1850
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 94:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1915
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1941
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1955
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1975
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1979
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 107:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1983
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2046
		{
			return helpWith(sqllex, "ALTER FUNCTION")
		}
	case 133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2063
		{
			return helpWith(sqllex, "ALTER PROCEDURE")
		}
	case 134:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2067
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2071
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2078
		{
			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2098
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2105
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2122
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2132
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2141
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2148
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2157
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2167
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
			}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2176
		{
			sqlVAL.union.val = &tree.AlterDatabaseAlterSuperRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SuperRegionName: tree.Name(sqlDollar[7].str),
				Regions:         sqlDollar[9].union.nameList(),
			}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.AlterDatabaseSecondaryRegion{
				DatabaseName:    tree.Name(sqlDollar[3].str),
				SecondaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 149:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     false,
			}
		}
	case 150:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2203
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropSecondaryRegion{
				DatabaseName: tree.Name(sqlDollar[3].str),
				IfExists:     true,
			}
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2212
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelGlobal,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2225
		{
			s := sqlDollar[7].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2238
		{
			s := sqlDollar[9].union.setZoneConfig()
			sqlVAL.union.val = &tree.AlterDatabaseSetZoneConfigExtension{
				DatabaseName:  tree.Name(sqlDollar[3].str),
				LocalityLevel: tree.LocalityLevelTable,
				RegionName:    tree.Name(sqlDollar[8].str),
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: s.SetDefault,
					YAMLConfig: s.YAMLConfig,
					Options:    s.Options,
				},
			}
		}
	case 156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2274
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 166:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2312
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2316
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2326
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2332
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2341
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2356
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2362
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2370
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2380
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2384
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2396
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2402
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 184:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2406
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 185:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2411
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2417
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2429
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2440
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{
				Index:        sqlDollar[3].union.tableIndexName(),
				Invisibility: sqlDollar[4].union.indexInvisibility(),
				IfExists:     false,
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2448
		{
			sqlVAL.union.val = &tree.AlterIndexVisible{
				Index:        sqlDollar[5].union.tableIndexName(),
				Invisibility: sqlDollar[6].union.indexInvisibility(),
				IfExists:     true,
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2458
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 1.0}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2462
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 1.0}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2466
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 0.0}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2470
		{
			visibilityConst, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if visibilityConst < 0.0 || visibilityConst > 1.0 {
				sqllex.Error("index visibility must be between 0 and 1")
				return 1
			}
			invisibilityConst := 1.0 - visibilityConst
			sqlVAL.union.val = tree.IndexInvisibility{Value: invisibilityConst, FloatProvided: true}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2492
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 195:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2512
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 196:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2521
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 198:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2541
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2554
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					YAMLConfig: sqlDollar[4].union.expr(),
				},
			}
		}
	case 200:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2563
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Options: sqlDollar[4].union.kvOptions(),
				},
			}
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2571
		{

			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					SetDefault: true,
				},
			}
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = &tree.SetZoneConfig{
				ZoneConfigSettings: tree.ZoneConfigSettings{
					Discard:    true,
					YAMLConfig: tree.DNull,
				},
			}
		}
	case 203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2591
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2599
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2610
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 206:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2620
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 207:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2630
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 208:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2639
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 209:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2650
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 210:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2656
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 211:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2664
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2668
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 214:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2676
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2682
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2687
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2698
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2702
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2708
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2712
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 221:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2719
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 222:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2724
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2729
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colTableDef()}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colTableDef()}
		}
	case 225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2739
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colTableDef()}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2744
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colTableDef()}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2749
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2759
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 231:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2768
		{
			qualification := tree.GeneratedAlwaysAsIdentity{}
			sqlVAL.union.val = &tree.AlterTableAddIdentity{Column: tree.Name(sqlDollar[3].str), Qualification: &qualification}
		}
	case 232:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2773
		{
			qualification := tree.GeneratedByDefAsIdentity{}
			sqlVAL.union.val = &tree.AlterTableAddIdentity{Column: tree.Name(sqlDollar[3].str), Qualification: &qualification}
		}
	case 233:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2778
		{
			qualification := tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[8].union.seqOpts(),
			}
			sqlVAL.union.val = &tree.AlterTableAddIdentity{Column: tree.Name(sqlDollar[3].str), Qualification: &qualification}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2785
		{
			qualification := tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[8].union.seqOpts(),
			}
			sqlVAL.union.val = &tree.AlterTableAddIdentity{Column: tree.Name(sqlDollar[3].str), Qualification: &qualification}
		}
	case 235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2792
		{
			sqlVAL.union.val = &tree.AlterTableSetIdentity{Column: tree.Name(sqlDollar[3].str), GeneratedAsIdentityType: tree.GeneratedAlways}
		}
	case 236:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2796
		{
			sqlVAL.union.val = &tree.AlterTableSetIdentity{Column: tree.Name(sqlDollar[3].str), GeneratedAsIdentityType: tree.GeneratedByDefault}
		}
	case 237:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2801
		{
			sqlVAL.union.val = &tree.AlterTableIdentity{Column: tree.Name(sqlDollar[3].str), SeqOptions: sqlDollar[4].union.seqOpts()}
		}
	case 238:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2806
		{
			sqlVAL.union.val = &tree.AlterTableDropIdentity{Column: tree.Name(sqlDollar[3].str), IfExists: false}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2811
		{
			sqlVAL.union.val = &tree.AlterTableDropIdentity{Column: tree.Name(sqlDollar[3].str), IfExists: true}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2816
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2821
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2825
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2830
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2839
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2851
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2861
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2869
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2879
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2882
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2888
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 251:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2894
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:       sqlDollar[7].union.idxElems(),
				Sharded:       sqlDollar[9].union.shardedIndexDef(),
				StorageParams: sqlDollar[10].union.storageParams(),
			}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2903
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2910
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2919
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2928
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2940
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = &tree.AlterTableSetStorageParams{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2953
		{
			sqlVAL.union.val = &tree.AlterTableResetStorageParams{
				Params: sqlDollar[3].union.storageParamKeys(),
			}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2960
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2961
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2965
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2969
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2975
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 265:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2983
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2987
		{
			sqlVAL.union.val = nil
		}
	case 267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2993
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2997
		{
			sqlVAL.union.val = nil
		}
	case 269:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3003
		{
			sqlVAL.union.val = true
		}
	case 270:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3007
		{
			sqlVAL.union.val = false
		}
	case 271:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3013
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3017
		{
			sqlVAL.union.val = nil
		}
	case 273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3024
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3028
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3032
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3038
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 277:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3042
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3047
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3049
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3050
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3052
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 282:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3054
		{
			x := sqlDollar[4].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3056
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3058
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3059
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3061
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3062
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3064
		{
			x := sqlDollar[4].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3067
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3069
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3071
		{
			return setErr(sqllex, errors.Newf("sequence option \"%s\" not supported here", sqlDollar[2].union.seqOpt().Name))
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3074
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3075
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 295:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3098
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:3109
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3120
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3148
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3166
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3170
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3173
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3191
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3197
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3204
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3211
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3229
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3250
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3257
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 323:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3261
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 324:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3265
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3269
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 326:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3313
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 327:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3325
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.backupTargetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.backupTargetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3346
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.backupTargetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3355
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3359
		{
			sqlVAL.union.val = (*tree.BackupTargetList)(nil)
		}
	case 332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3363
		{
			t := sqlDollar[1].union.backupTargetList()
			sqlVAL.union.val = &t
		}
	case 333:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3371
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3375
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 335:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3379
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3386
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 337:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3390
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3399
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3403
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: tree.MakeDBool(true)}
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3407
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: sqlDollar[3].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3411
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3415
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(true)}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: tree.MakeDBool(false)}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3423
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3427
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3431
		{
			sqlVAL.union.val = &tree.BackupOptions{ExecutionLocality: sqlDollar[4].union.expr()}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3435
		{

			sqlVAL.union.val = &tree.BackupOptions{IncludeAllSecondaryTenants: tree.MakeDBool(true)}
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeAllSecondaryTenants: sqlDollar[3].union.expr()}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3444
		{
			sqlVAL.union.val = &tree.BackupOptions{UpdatesClusterMonitoringMetrics: tree.MakeDBool(true)}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3448
		{
			sqlVAL.union.val = &tree.BackupOptions{UpdatesClusterMonitoringMetrics: sqlDollar[3].union.expr()}
		}
	case 351:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3453
		{
		}
	case 352:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3454
		{
		}
	case 353:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3533
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.backupTargetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 354:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3544
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3563
		{
			sqlVAL.union.val = &tree.AlterBackupSchedule{
				ScheduleID: uint64(sqlDollar[4].union.int64()),
				Cmds:       sqlDollar[5].union.alterBackupScheduleCmds(),
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3569
		{
			return helpWith(sqllex, "ALTER BACKUP SCHEDULE")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3574
		{
			sqlVAL.union.val = tree.AlterBackupScheduleCmds{sqlDollar[1].union.alterBackupScheduleCmd()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupScheduleCmds(), sqlDollar[3].union.alterBackupScheduleCmd())
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3585
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetLabel{
				Label: sqlDollar[3].union.expr(),
			}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetInto{
				Into: sqlDollar[3].union.stringOrPlaceholderOptList(),
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3597
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetWith{
				With: sqlDollar[3].union.backupOptions(),
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3603
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetRecurring{
				Recurrence: sqlDollar[2].union.expr(),
			}
		}
	case 363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3609
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{AlwaysFull: true},
			}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3615
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetFullBackup{
				FullBackup: tree.FullBackupClause{Recurrence: sqlDollar[4].union.expr()},
			}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3621
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleSetScheduleOption{
				Option: sqlDollar[4].union.kvOption(),
			}
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3627
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleNextRun{}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3631
		{
			sqlVAL.union.val = &tree.AlterBackupScheduleNextRun{Full: true}
		}
	case 368:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3638
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3642
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3652
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3658
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3662
		{
			sqlVAL.union.val = &tree.LabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = sqlDollar[1].union.labelSpec()
		}
	case 374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3672
		{
			sqlVAL.union.val = &tree.LabelSpec{IfNotExists: false}
		}
	case 375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3681
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3685
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 377:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3689
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 378:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3695
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3699
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3703
		{
			sqlVAL.union.val = nil
		}
	case 381:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3720
		{
			sqlVAL.union.val = &tree.CreateExternalConnection{
				ConnectionLabelSpec: *(sqlDollar[4].union.labelSpec()),
				As:                  sqlDollar[6].union.expr(),
			}
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3726
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3737
		{
			sqlVAL.union.val = &tree.DropExternalConnection{
				ConnectionLabel: sqlDollar[4].union.expr(),
			}
		}
	case 384:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3742
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3779
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 386:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3788
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 387:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3798
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 388:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3807
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.backupTargetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 389:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3817
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 390:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3826
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.SystemUsers,
				Subdir:             sqlDollar[5].union.expr(),
				From:               sqlDollar[7].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[8].union.asOfClause(),
				Options:            *(sqlDollar[9].union.restoreOptions()),
			}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3835
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3839
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3849
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3853
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 396:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 397:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3864
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 398:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3868
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 399:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3875
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3879
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3888
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3896
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 404:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3904
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3908
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3912
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3916
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingUDFs: true}
		}
	case 409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3920
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3924
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3928
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3932
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 413:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3936
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3940
		{
			sqlVAL.union.val = &tree.RestoreOptions{AsTenant: sqlDollar[3].union.expr()}
		}
	case 415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3944
		{
			sqlVAL.union.val = &tree.RestoreOptions{ForceTenantID: sqlDollar[3].union.expr()}
		}
	case 416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3948
		{
			sqlVAL.union.val = &tree.RestoreOptions{SchemaOnly: true}
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3952
		{
			sqlVAL.union.val = &tree.RestoreOptions{VerifyData: true}
		}
	case 418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3956
		{
			sqlVAL.union.val = &tree.RestoreOptions{UnsafeRestoreIncompatibleVersion: true}
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3960
		{
			sqlVAL.union.val = &tree.RestoreOptions{ExecutionLocality: sqlDollar[4].union.expr()}
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3964
		{
			sqlVAL.union.val = &tree.RestoreOptions{ExperimentalOnline: true}
		}
	case 421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3968
		{
			sqlVAL.union.val = &tree.RestoreOptions{RemoveRegions: true, SkipLocalitiesCheck: true}
		}
	case 422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3973
		{
		}
	case 423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3974
		{
		}
	case 424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3977
		{
		}
	case 425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3978
		{
		}
	case 426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3988
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3992
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "alter aggregate")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4019
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 430:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4024
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 431:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4028
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 432:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4034
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 433:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:4039
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 434:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4044
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4048
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4065
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4068
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4072
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4076
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4084
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 441:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4088
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 442:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4094
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 443:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4098
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4104
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4108
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4116
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4122
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4126
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4132
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 451:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4136
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 452:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4140
		{
			sqlVAL.union.val = nil
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4150
		{
			p := sqlDollar[2].union.expr().(*tree.FuncExpr)
			p.InCall = true
			sqlVAL.union.val = &tree.Call{Proc: p}
		}
	case 454:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4164
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4178
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4182
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CopyTo{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4192
		{
			return unimplementedWithIssue(sqllex, 97181)
		}
	case 458:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4196
		{

			sqlVAL.union.val = &tree.CopyTo{
				Statement: sqlDollar[3].union.stmt(),
				Options:   *sqlDollar[7].union.copyOptions(),
			}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4204
		{
			return unimplementedWithIssue(sqllex, 96590)
		}
	case 460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 461:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = sqlDollar[3].union.copyOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4218
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4224
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 464:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4228
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4236
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4240
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[3].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary, HasFormat: true}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV, HasFormat: true}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4260
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4264
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4268
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4272
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4276
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true, HasHeader: true}
		}
	case 475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4280
		{
			sqlVAL.union.val = &tree.CopyOptions{Quote: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4288
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_quote")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4292
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_not_null")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4296
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_null")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4300
		{
			sqlVAL.union.val = &tree.CopyOptions{Encoding: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4306
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[2].union.expr()}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4310
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary, HasFormat: true}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4314
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV, HasFormat: true}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4318
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatText, HasFormat: true}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4322
		{
			format := sqlDollar[2].str
			switch format {
			case "csv":
				sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV, HasFormat: true}
			case "binary":
				sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary, HasFormat: true}
			case "text":
				sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatText, HasFormat: true}
			default:
				sqllex.Error("COPY format \"" + format + "\" not recognized")
				return 1
			}
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4337
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4341
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4345
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "oids")
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4349
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "freeze")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4353
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true, HasHeader: true}
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4357
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: true, HasHeader: true}
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4361
		{
			sqlVAL.union.val = &tree.CopyOptions{Header: false, HasHeader: true}
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4365
		{
			sqlVAL.union.val = &tree.CopyOptions{Quote: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4369
		{
			sqlVAL.union.val = &tree.CopyOptions{Escape: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4373
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_quote")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4377
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_not_null")
		}
	case 497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4381
		{
			return unimplementedWithIssueDetail(sqllex, 41608, "force_null")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			sqlVAL.union.val = &tree.CopyOptions{Encoding: tree.NewStrVal(sqlDollar[2].str)}
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4394
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4395
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4396
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4397
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4415
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4417
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 511:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4421
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4424
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4434
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4443
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4451
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4460
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4470
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 520:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4479
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4487
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4489
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 523:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4493
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4496
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4504
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 526:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4507
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4511
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4515
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: sqlDollar[4].union.objectNamePrefix(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 529:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4519
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4523
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			if columnItem != nil && columnItem.TableName != nil {
				aIdx := sqllex.(*lexer).NewAnnotation()
				columnItem.TableName.AnnotatedNode = tree.AnnotatedNode{AnnIdx: aIdx}
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4540
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 532:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4545
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4548
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "comment on extension")
		}
	case 534:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4549
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "comment on function")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4553
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4558
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 538:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4570
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4573
		{
			return helpWith(sqllex, "CREATE CHANGEFEED")
		}
	case 545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4574
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4575
		{
			return helpWith(sqllex, "CREATE EXTERNAL CONNECTION")
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4576
		{
			return helpWith(sqllex, "CREATE VIRTUAL CLUSTER")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4578
		{
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4579
		{
			return helpWith(sqllex, "CREATE")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4590
		{

			sqlVAL.union.val = &tree.CreateTenant{
				TenantSpec: &tree.TenantSpec{IsName: true, Expr: sqlDollar[3].union.expr()},
				Like:       sqlDollar[4].union.likeTenantSpec(),
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4598
		{

			sqlVAL.union.val = &tree.CreateTenant{
				IfNotExists: true,
				TenantSpec:  &tree.TenantSpec{IsName: true, Expr: sqlDollar[6].union.expr()},
				Like:        sqlDollar[7].union.likeTenantSpec(),
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4607
		{

			sqlVAL.union.val = &tree.CreateTenantFromReplication{
				TenantSpec:                  &tree.TenantSpec{IsName: true, Expr: sqlDollar[3].union.expr()},
				ReplicationSourceTenantName: &tree.TenantSpec{IsName: true, Expr: sqlDollar[8].union.expr()},
				ReplicationSourceAddress:    sqlDollar[10].union.expr(),
				Options:                     *sqlDollar[11].union.tenantReplicationOptions(),
				Like:                        sqlDollar[4].union.likeTenantSpec(),
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-14 : sqlpt+1]
//line sql-gen.y:4618
		{

			sqlVAL.union.val = &tree.CreateTenantFromReplication{
				IfNotExists:                 true,
				TenantSpec:                  &tree.TenantSpec{IsName: true, Expr: sqlDollar[6].union.expr()},
				ReplicationSourceTenantName: &tree.TenantSpec{IsName: true, Expr: sqlDollar[11].union.expr()},
				ReplicationSourceAddress:    sqlDollar[13].union.expr(),
				Options:                     *sqlDollar[14].union.tenantReplicationOptions(),
				Like:                        sqlDollar[7].union.likeTenantSpec(),
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4629
		{
			return helpWith(sqllex, "CREATE VIRTUAL CLUSTER")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4632
		{
		}
	case 560:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4640
		{
			sqlVAL.union.val = &tree.LikeTenantSpec{}
		}
	case 561:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4644
		{
			sqlVAL.union.val = &tree.LikeTenantSpec{OtherTenant: sqlDollar[2].union.tenantSpec()}
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4651
		{
			sqlVAL.union.val = sqlDollar[2].union.tenantReplicationOptions()
		}
	case 563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4655
		{
			sqlVAL.union.val = sqlDollar[4].union.tenantReplicationOptions()
		}
	case 564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4659
		{
			sqlVAL.union.val = &tree.TenantReplicationOptions{}
		}
	case 565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4666
		{
			sqlVAL.union.val = sqlDollar[1].union.tenantReplicationOptions()
		}
	case 566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4670
		{
			if err := sqlDollar[1].union.tenantReplicationOptions().CombineWith(sqlDollar[3].union.tenantReplicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4679
		{
			sqlVAL.union.val = &tree.TenantReplicationOptions{Retention: sqlDollar[3].union.expr()}
		}
	case 568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = &tree.TenantReplicationOptions{ExpirationWindow: sqlDollar[4].union.expr()}
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4694
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR CHANGEFEED")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4695
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 573:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4696
		{
			return helpWith(sqllex, "CREATE SCHEDULE")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: tree.Name(sqlDollar[6].str)}
		}
	case 575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: tree.Name(sqlDollar[3].str)}
		}
	case 576:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4710
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension if not exists with")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4713
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "create extension with")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4716
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4735
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToRoutineName()
			sqlVAL.union.val = &tree.CreateRoutine{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				Name:        name,
				Params:      sqlDollar[6].union.routineParams(),
				ReturnType: &tree.RoutineReturnType{
					Type:  sqlDollar[11].union.typeReference(),
					SetOf: sqlDollar[10].union.bool(),
				},
				Options:     sqlDollar[12].union.routineOptions(),
				RoutineBody: sqlDollar[13].union.routineBody(),
			}
		}
	case 580:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4752
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToRoutineName()
			sqlVAL.union.val = &tree.CreateRoutine{
				IsProcedure: false,
				Replace:     sqlDollar[2].union.bool(),
				Name:        name,
				Params:      sqlDollar[6].union.routineParams(),
				ReturnType:  (*tree.RoutineReturnType)(nil),
				Options:     sqlDollar[8].union.routineOptions(),
				RoutineBody: sqlDollar[9].union.routineBody(),
			}
		}
	case 581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4764
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 582:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4778
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToRoutineName()
			sqlVAL.union.val = &tree.CreateRoutine{
				IsProcedure: true,
				Replace:     sqlDollar[2].union.bool(),
				Name:        name,
				Params:      sqlDollar[6].union.routineParams(),
				Options:     sqlDollar[8].union.routineOptions(),
				RoutineBody: sqlDollar[9].union.routineBody(),
				ReturnType:  (*tree.RoutineReturnType)(nil),
			}
		}
	case 583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4790
		{
			return helpWith(sqllex, "CREATE PROCEDURE")
		}
	case 584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4793
		{
			sqlVAL.union.val = true
		}
	case 585:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4794
		{
			sqlVAL.union.val = false
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4797
		{
			return unimplementedWithIssueDetail(sqllex, 100226, "UDF returning TABLE")
		}
	case 587:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4798
		{
			sqlVAL.union.val = false
		}
	case 588:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4801
		{
			sqlVAL.union.val = true
		}
	case 589:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = false
		}
	case 591:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4808
		{
			sqlVAL.union.val = sqlDollar[1].union.routineParams()
		}
	case 592:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4809
		{
			sqlVAL.union.val = tree.RoutineParams{}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4812
		{
			sqlVAL.union.val = tree.RoutineParams{sqlDollar[1].union.routineParam()}
		}
	case 594:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4814
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineParams(), sqlDollar[3].union.routineParam())
		}
	case 596:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4821
		{
			arg := sqlDollar[1].union.routineParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4827
		{
			arg := sqlDollar[1].union.routineParam()
			arg.DefaultVal = sqlDollar[3].union.expr()
			sqlVAL.union.val = arg
		}
	case 598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4835
		{
			sqlVAL.union.val = tree.RoutineParam{
				Name:  tree.Name(sqlDollar[2].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[1].union.routineParamClass(),
			}
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4843
		{
			sqlVAL.union.val = tree.RoutineParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[3].union.typeReference(),
				Class: sqlDollar[2].union.routineParamClass(),
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4851
		{
			sqlVAL.union.val = tree.RoutineParam{
				Name:  tree.Name(sqlDollar[1].str),
				Type:  sqlDollar[2].union.typeReference(),
				Class: tree.RoutineParamDefault,
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			sqlVAL.union.val = tree.RoutineParam{
				Type:  sqlDollar[2].union.typeReference(),
				Class: sqlDollar[1].union.routineParamClass(),
			}
		}
	case 602:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4866
		{
			sqlVAL.union.val = tree.RoutineParam{
				Type:  sqlDollar[1].union.typeReference(),
				Class: tree.RoutineParamDefault,
			}
		}
	case 603:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4874
		{
			sqlVAL.union.val = tree.RoutineParamIn
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4875
		{
			sqlVAL.union.val = tree.RoutineParamOut
		}
	case 605:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4876
		{
			sqlVAL.union.val = tree.RoutineParamInOut
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4877
		{
			sqlVAL.union.val = tree.RoutineParamInOut
		}
	case 607:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4878
		{
			return unimplementedWithIssueDetail(sqllex, 88947, "variadic user-defined functions")
		}
	case 610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = sqlDollar[1].union.routineOptions()
		}
	case 611:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4888
		{
			sqlVAL.union.val = tree.RoutineOptions{}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4891
		{
			sqlVAL.union.val = tree.RoutineOptions{sqlDollar[1].union.functionOption()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineOptions(), sqlDollar[2].union.functionOption())
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4899
		{
			sqlVAL.union.val = tree.RoutineBodyStr(sqlDollar[2].str)
		}
	case 615:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4903
		{
			lang, err := tree.AsRoutineLanguage(sqlDollar[2].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = lang
		}
	case 616:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4910
		{
			return unimplemented(sqllex, "create transform function")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4911
		{
			return unimplemented(sqllex, "create window function")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.union.val = sqlDollar[1].union.functionOption()
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4919
		{
			sqlVAL.union.val = tree.RoutineCalledOnNullInput
		}
	case 620:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4923
		{
			sqlVAL.union.val = tree.RoutineReturnsNullOnNullInput
		}
	case 621:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4927
		{
			sqlVAL.union.val = tree.RoutineStrict
		}
	case 622:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4931
		{
			sqlVAL.union.val = tree.RoutineImmutable
		}
	case 623:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.RoutineStable
		}
	case 624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = tree.RoutineVolatile
		}
	case 625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4943
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4951
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 628:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4955
		{
			return unimplemented(sqllex, "create function...security")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4959
		{
			sqlVAL.union.val = tree.RoutineLeakproof(true)
		}
	case 630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = tree.RoutineLeakproof(false)
		}
	case 631:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4967
		{
			return unimplemented(sqllex, "create function/procedure ... cost")
		}
	case 632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4971
		{
			return unimplemented(sqllex, "create function/procedure ... rows")
		}
	case 633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4975
		{
			return unimplemented(sqllex, "create function/procedure ... support")
		}
	case 634:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4982
		{
			return unimplemented(sqllex, "create function/procedure ... set")
		}
	case 635:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4983
		{
			return unimplemented(sqllex, "create function/procedure ... parallel")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4990
		{
			sqlVAL.union.val = &tree.RoutineReturn{
				ReturnVal: sqlDollar[2].union.expr(),
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5002
		{
			sqlVAL.union.val = append(sqlDollar[1].union.stmts(), sqlDollar[2].union.stmt())
		}
	case 641:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5006
		{
			sqlVAL.union.val = tree.Statements{}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5012
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: tree.Statements{sqlDollar[1].union.stmt()},
			}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5018
		{
			sqlVAL.union.val = &tree.RoutineBody{
				Stmts: sqlDollar[3].union.stmts(),
			}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5024
		{
			sqlVAL.union.val = (*tree.RoutineBody)(nil)
		}
	case 645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
		}
	case 646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5033
		{
		}
	case 647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5044
		{
			sqlVAL.union.val = &tree.DropRoutine{
				Routines:     sqlDollar[3].union.routineObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 648:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.DropRoutine{
				IfExists:     true,
				Routines:     sqlDollar[5].union.routineObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5058
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5068
		{
			sqlVAL.union.val = &tree.DropRoutine{
				Procedure:    true,
				Routines:     sqlDollar[3].union.routineObjs(),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 651:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5076
		{
			sqlVAL.union.val = &tree.DropRoutine{
				IfExists:     true,
				Procedure:    true,
				Routines:     sqlDollar[5].union.routineObjs(),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 652:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5084
		{
			return helpWith(sqllex, "DROP PROCEDURE")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5088
		{
			sqlVAL.union.val = tree.RoutineObjs{sqlDollar[1].union.functionObj()}
		}
	case 654:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineObjs(), sqlDollar[3].union.functionObj())
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5098
		{
			sqlVAL.union.val = tree.RoutineObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToRoutineName(),
				Params:   sqlDollar[2].union.routineParams(),
			}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5105
		{
			sqlVAL.union.val = tree.RoutineObj{
				FuncName: sqlDollar[1].union.unresolvedObjectName().ToRoutineName(),
			}
		}
	case 657:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.union.val = sqlDollar[2].union.routineParams()
		}
	case 658:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5117
		{
			sqlVAL.union.val = tree.RoutineParams{}
		}
	case 659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5123
		{
			sqlVAL.union.val = tree.RoutineParams{sqlDollar[1].union.routineParam()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5127
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineParams(), sqlDollar[3].union.routineParam())
		}
	case 661:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5133
		{
			sqlVAL.union.val = &tree.AlterFunctionOptions{
				Function: sqlDollar[3].union.functionObj(),
				Options:  sqlDollar[4].union.routineOptions(),
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5142
		{
			sqlVAL.union.val = tree.RoutineOptions{sqlDollar[1].union.functionOption()}
		}
	case 663:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5146
		{
			sqlVAL.union.val = append(sqlDollar[1].union.routineOptions(), sqlDollar[2].union.functionOption())
		}
	case 664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5151
		{
		}
	case 665:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5152
		{
		}
	case 666:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5156
		{
			sqlVAL.union.val = &tree.AlterRoutineRename{
				Function: sqlDollar[3].union.functionObj(),
				NewName:  tree.Name(sqlDollar[6].str),
			}
		}
	case 667:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5165
		{
			sqlVAL.union.val = &tree.AlterRoutineSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
			}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5174
		{
			sqlVAL.union.val = &tree.AlterRoutineSetOwner{
				Function: sqlDollar[3].union.functionObj(),
				NewOwner: sqlDollar[6].union.roleSpec(),
			}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:5183
		{
			sqlVAL.union.val = &tree.AlterFunctionDepExtension{
				Function:  sqlDollar[3].union.functionObj(),
				Remove:    sqlDollar[4].union.bool(),
				Extension: tree.Name(sqlDollar[8].str),
			}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5193
		{
			sqlVAL.union.val = &tree.AlterRoutineRename{
				Function:  sqlDollar[3].union.functionObj(),
				NewName:   tree.Name(sqlDollar[6].str),
				Procedure: true,
			}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5203
		{
			sqlVAL.union.val = &tree.AlterRoutineSetSchema{
				Function:      sqlDollar[3].union.functionObj(),
				NewSchemaName: tree.Name(sqlDollar[6].str),
				Procedure:     true,
			}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5213
		{
			sqlVAL.union.val = &tree.AlterRoutineSetOwner{
				Function:  sqlDollar[3].union.functionObj(),
				NewOwner:  sqlDollar[6].union.roleSpec(),
				Procedure: true,
			}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5223
		{
			sqlVAL.union.val = true
		}
	case 674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = false
		}
	case 675:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5232
		{
			return unimplemented(sqllex, "create access method")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5233
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "create aggregate")
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5234
		{
			return unimplemented(sqllex, "create cast")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5235
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 679:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5236
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5237
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 681:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5238
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5239
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 683:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5240
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5241
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 685:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5242
		{
			return unimplemented(sqllex, "create publication")
		}
	case 686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5243
		{
			return unimplemented(sqllex, "create rule")
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5244
		{
			return unimplemented(sqllex, "create server")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5245
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 689:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5247
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5248
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5251
		{
		}
	case 693:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5252
		{
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5255
		{
		}
	case 695:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5256
		{
		}
	case 696:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5259
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 697:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5260
		{
			return unimplementedWithIssueDetail(sqllex, 74775, "drop aggregate")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5261
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5262
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 702:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5265
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension if exists")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5266
		{
			return unimplementedWithIssueDetail(sqllex, 74777, "drop extension")
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5267
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5268
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 706:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5269
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5271
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5272
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 710:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5273
		{
			return unimplemented(sqllex, "drop server")
		}
	case 711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5274
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5275
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5276
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5279
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5280
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5281
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5282
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 723:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5283
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5286
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5288
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5289
		{
			return helpWith(sqllex, "CREATE FUNCTION")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5290
		{
			return helpWith(sqllex, "CREATE PROCEDURE")
		}
	case 735:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5300
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 736:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5308
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5312
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 738:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5316
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5326
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 742:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5339
		{
			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 743:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5343
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5349
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5353
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 746:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5364
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5376
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 748:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				UsingExtremes: true,
			}
		}
	case 749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Where: tree.NewWhere(tree.AstWhere, sqlDollar[1].union.expr()),
			}
		}
	case 750:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 751:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5412
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[9].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			sqlVAL.union.val = &tree.CreateChangefeed{
				SinkURI: sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[7].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[9].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
				},
			}
		}
	case 752:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5430
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.changefeedTargets(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 753:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5467
		{
			sqlVAL.union.val = &tree.ScheduledChangefeed{
				CreateChangefeed: &tree.CreateChangefeed{
					Targets: sqlDollar[6].union.changefeedTargets(),
					SinkURI: sqlDollar[7].union.expr(),
					Options: sqlDollar[8].union.kvOptions(),
				},
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[9].union.expr(),
				ScheduleOptions:   sqlDollar[10].union.kvOptions(),
			}
		}
	case 754:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:5482
		{
			target, err := tree.ChangefeedTargetFromTableExpr(sqlDollar[12].union.tblExpr())
			if err != nil {
				return setErr(sqllex, err)
			}

			createChangefeedNode := &tree.CreateChangefeed{
				SinkURI: sqlDollar[6].union.expr(),
				Options: sqlDollar[7].union.kvOptions(),
				Targets: tree.ChangefeedTargets{target},
				Select: &tree.SelectClause{
					Exprs: sqlDollar[10].union.selExprs(),
					From:  tree.From{Tables: tree.TableExprs{sqlDollar[12].union.tblExpr()}},
					Where: tree.NewWhere(tree.AstWhere, sqlDollar[13].union.expr()),
				},
			}

			sqlVAL.union.val = &tree.ScheduledChangefeed{
				CreateChangefeed:  createChangefeedNode,
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[14].union.expr(),
				ScheduleOptions:   sqlDollar[15].union.kvOptions(),
			}
		}
	case 755:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5506
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR CHANGEFEED")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5510
		{
			sqlVAL.union.val = tree.ChangefeedTargets{sqlDollar[1].union.changefeedTarget()}
		}
	case 757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5514
		{
			sqlVAL.union.val = append(sqlDollar[1].union.changefeedTargets(), sqlDollar[3].union.changefeedTarget())
		}
	case 758:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5520
		{
			sqlVAL.union.val = tree.ChangefeedTarget{
				TableName:  sqlDollar[2].union.unresolvedObjectName().ToUnresolvedName(),
				FamilyName: tree.Name(sqlDollar[3].str),
			}
		}
	case 760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5531
		{
		}
	case 761:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5533
		{
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5537
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 763:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5541
		{
			sqlVAL.str = ""
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5547
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5551
		{

			sqlVAL.union.val = nil
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 767:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5575
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Batch:     sqlDollar[3].union.batch(),
				Table:     sqlDollar[5].union.tblExpr(),
				Using:     sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5587
		{
			return helpWith(sqllex, "DELETE")
		}
	case 769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5591
		{
			sqlVAL.union.val = &tree.Batch{}
		}
	case 770:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5595
		{
			sqlVAL.union.val = &tree.Batch{Params: sqlDollar[3].union.batchParams()}
		}
	case 771:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5599
		{
			sqlVAL.union.val = (*tree.Batch)(nil)
		}
	case 772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = []tree.BatchParam{sqlDollar[1].union.batchParam()}
		}
	case 773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5609
		{
			sqlVAL.union.val = append(sqlDollar[1].union.batchParams(), sqlDollar[3].union.batchParam())
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5615
		{
			sqlVAL.union.val = &tree.SizeBatchParam{Size: sqlDollar[2].union.expr()}
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5621
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5625
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5635
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5638
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeSequences}
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5648
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeTemp}
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5651
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5660
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5661
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "DROP EXTERNAL CONNECTION")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5663
		{
			return helpWith(sqllex, "DROP VIRTUAL CLUSTER")
		}
	case 792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5664
		{
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5665
		{
			return helpWith(sqllex, "DROP")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5668
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5669
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5671
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5672
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5673
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5674
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5675
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5676
		{
			return helpWith(sqllex, "DROP FUNCTION")
		}
	case 812:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 813:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5688
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5701
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5709
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 817:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5717
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 818:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5724
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5747
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5756
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5764
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5772
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5780
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5787
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5794
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 830:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5802
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5809
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5816
		{

			sqlVAL.union.val = &tree.DropTenant{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				IfExists:   false,
				Immediate:  sqlDollar[4].union.bool(),
			}
		}
	case 833:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5825
		{

			sqlVAL.union.val = &tree.DropTenant{
				TenantSpec: sqlDollar[5].union.tenantSpec(),
				IfExists:   true,
				Immediate:  sqlDollar[6].union.bool(),
			}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5833
		{
			return helpWith(sqllex, "DROP VIRTUAL CLUSTER")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5837
		{
			sqlVAL.union.val = false
		}
	case 836:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5839
		{
			sqlVAL.union.val = true
		}
	case 837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5843
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5849
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5853
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 840:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5870
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5877
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5885
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5892
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 846:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5896
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5901
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5923
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5928
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5930
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5935
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5939
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5962
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5969
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 858:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5971
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5979
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5987
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5995
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6003
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6014
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 874:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6027
		{
			return helpWith(sqllex, "DELETE")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6029
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6030
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6031
		{
			return helpWith(sqllex, "INSERT")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6034
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6036
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6044
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6045
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 898:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6046
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6051
		{
			return helpWith(sqllex, "DELETE")
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6053
		{
			return helpWith(sqllex, "INSERT")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6055
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6059
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 910:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6060
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6063
		{
			return helpWith(sqllex, "DELETE")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6064
		{
			return helpWith(sqllex, "INSERT")
		}
	case 915:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6066
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 917:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6069
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6070
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6074
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6078
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 922:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6088
		{
			sqlVAL.union.val = &tree.AlterChangefeed{
				Jobs: sqlDollar[3].union.expr(),
				Cmds: sqlDollar[4].union.alterChangefeedCmds(),
			}
		}
	case 923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6094
		{
			return helpWith(sqllex, "ALTER CHANGEFEED")
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6098
		{
			sqlVAL.union.val = tree.AlterChangefeedCmds{sqlDollar[1].union.alterChangefeedCmd()}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6102
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterChangefeedCmds(), sqlDollar[2].union.alterChangefeedCmd())
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6109
		{
			sqlVAL.union.val = &tree.AlterChangefeedAddTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
				Options: sqlDollar[3].union.kvOptions(),
			}
		}
	case 927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6117
		{
			sqlVAL.union.val = &tree.AlterChangefeedDropTarget{
				Targets: sqlDollar[2].union.changefeedTargets(),
			}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6123
		{
			sqlVAL.union.val = &tree.AlterChangefeedSetOptions{
				Options: sqlDollar[2].union.kvOptions(),
			}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6129
		{
			sqlVAL.union.val = &tree.AlterChangefeedUnsetOptions{
				Options: sqlDollar[2].union.nameList(),
			}
		}
	case 930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6148
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Backup: sqlDollar[3].union.expr(),
				Cmds:   sqlDollar[4].union.alterBackupCmds(),
			}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = &tree.AlterBackup{
				Subdir: sqlDollar[3].union.expr(),
				Backup: sqlDollar[5].union.expr(),
				Cmds:   sqlDollar[6].union.alterBackupCmds(),
			}
		}
	case 932:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6162
		{
			return helpWith(sqllex, "ALTER BACKUP")
		}
	case 933:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6166
		{
			sqlVAL.union.val = tree.AlterBackupCmds{sqlDollar[1].union.alterBackupCmd()}
		}
	case 934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6170
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterBackupCmds(), sqlDollar[2].union.alterBackupCmd())
		}
	case 935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6176
		{
			sqlVAL.union.val = &tree.AlterBackupKMS{
				KMSInfo: sqlDollar[2].union.backupKMS(),
			}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6184
		{
			sqlVAL.union.val = tree.BackupKMS{
				NewKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList(),
				OldKMSURI: sqlDollar[7].union.stringOrPlaceholderOptList(),
			}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6202
		{

			sqlVAL.union.val = &tree.ShowTenant{
				TenantSpec:        sqlDollar[2].union.tenantSpec(),
				ShowTenantOptions: sqlDollar[3].union.showTenantOpts(),
			}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6209
		{
			return helpWith(sqllex, "SHOW VIRTUAL CLUSTER")
		}
	case 939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6213
		{

			sqlVAL.union.val = &tree.TenantSpec{All: true}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6218
		{

			sqlVAL.union.val = &tree.TenantSpec{All: true}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6223
		{

			sqlVAL.union.val = sqlDollar[2].union.tenantSpec()
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = &tree.TenantSpec{All: true}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6232
		{
			sqlVAL.union.val = &tree.TenantSpec{All: true}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6236
		{
			sqlVAL.union.val = sqlDollar[3].union.tenantSpec()
		}
	case 945:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6242
		{

			sqlVAL.union.val = tree.ShowTenantOptions{}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6247
		{

			sqlVAL.union.val = sqlDollar[2].union.showTenantOpts()
		}
	case 947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6254
		{

			sqlVAL.union.val = tree.ShowTenantOptions{WithReplication: true}
		}
	case 948:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6259
		{

			sqlVAL.union.val = tree.ShowTenantOptions{WithCapabilities: true}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6264
		{

			sqlVAL.union.val = tree.ShowTenantOptions{WithPriorReplication: true}
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6269
		{

			o := sqlDollar[1].union.showTenantOpts()
			o.WithReplication = true
			sqlVAL.union.val = o
		}
	case 951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6276
		{

			o := sqlDollar[1].union.showTenantOpts()
			o.WithCapabilities = true
			sqlVAL.union.val = o
		}
	case 952:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6283
		{

			o := sqlDollar[1].union.showTenantOpts()
			o.WithPriorReplication = true
			sqlVAL.union.val = o
		}
	case 953:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6296
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6304
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6312
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 957:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6337
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6345
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6349
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 962:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 963:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6363
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6367
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6375
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 967:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6378
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6402
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6406
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6429
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 974:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6445
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 976:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6457
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6469
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:               sqlDollar[8].union.objectNamePrefixList(),
					AllProceduresInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:        sqlDollar[5].union.roleSpecList(),
				WithGrantOption: sqlDollar[6].union.bool(),
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6491
		{
			return helpWith(sqllex, "GRANT")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6515
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.grantTargetList(), GrantOptionFor: false}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6519
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.grantTargetList(), GrantOptionFor: true}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6523
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6527
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 984:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.grantTargetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6535
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.grantTargetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6539
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6550
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6561
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6573
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllSequencesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6585
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6597
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[8].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6609
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:              sqlDollar[11].union.objectNamePrefixList(),
					AllFunctionsInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6621
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:               sqlDollar[8].union.objectNamePrefixList(),
					AllProceduresInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6633
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.GrantTargetList{
					Schemas:               sqlDollar[11].union.objectNamePrefixList(),
					AllProceduresInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6645
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[3].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees: sqlDollar[5].union.roleSpecList(),
			}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[6].union.privilegeList(),
				Targets: tree.GrantTargetList{
					System: true,
				},
				Grantees:       sqlDollar[8].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6666
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6669
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6675
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6679
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings(), privilege.OriginFromUserInput)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6689
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6693
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6707
		{
			return helpWith(sqllex, "RESET")
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6708
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6720
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6724
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true, Reset: true}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6727
		{
			return helpWith(sqllex, "RESET")
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6735
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6738
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6749
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6752
		{
			return helpWith(sqllex, "USE")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6756
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6757
		{
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6758
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6762
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6763
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6764
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6765
		{
			return helpWith(sqllex, "USE")
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6781
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6799
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6825
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 1038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6829
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6839
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6849
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6853
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6857
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6865
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6876
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6879
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6889
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER REPLICATION")
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6890
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SETTING")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6891
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER CAPABILITY")
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6892
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER RENAME")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6893
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER RESET")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6894
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SERVICE")
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6895
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = &tree.TenantSpec{IsName: true, Expr: sqlDollar[1].union.expr()}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6901
		{
			sqlVAL.union.val = &tree.TenantSpec{IsName: false, Expr: sqlDollar[2].union.expr()}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6910
		{

			sqlVAL.union.val = &tree.AlterTenantReset{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Timestamp:  sqlDollar[9].union.expr(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6924
		{

			sqlVAL.union.val = &tree.AlterTenantRename{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				NewName:    &tree.TenantSpec{IsName: true, Expr: sqlDollar[6].union.expr()},
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6940
		{

			sqlVAL.union.val = &tree.AlterTenantService{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.TenantStartServiceExternal,
			}
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6948
		{

			sqlVAL.union.val = &tree.AlterTenantService{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.TenantStartServiceShared,
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6956
		{

			sqlVAL.union.val = &tree.AlterTenantService{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.TenantStopService,
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6963
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SERVICE")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6964
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SERVICE")
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6977
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.PauseJob,
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6985
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Command:    tree.ResumeJob,
			}
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6993
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Cutover: &tree.ReplicationCutoverTime{
					Timestamp: sqlDollar[9].union.expr(),
				},
			}
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7003
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Cutover: &tree.ReplicationCutoverTime{
					Latest: true,
				},
			}
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7013
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec: sqlDollar[3].union.tenantSpec(),
				Options:    *sqlDollar[6].union.tenantReplicationOptions(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7021
		{

			sqlVAL.union.val = &tree.AlterTenantReplication{
				TenantSpec:                  sqlDollar[3].union.tenantSpec(),
				ReplicationSourceTenantName: &tree.TenantSpec{IsName: true, Expr: sqlDollar[7].union.expr()},
				ReplicationSourceAddress:    sqlDollar[9].union.expr(),
				Options:                     *sqlDollar[10].union.tenantReplicationOptions(),
			}
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7040
		{

			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantSpec:        sqlDollar[3].union.tenantSpec(),
			}
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7049
		{

			csettingStmt := sqlDollar[4].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantSpec:        &tree.TenantSpec{All: true},
			}
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7058
		{

			csettingStmt := sqlDollar[5].union.stmt().(*tree.SetClusterSetting)
			sqlVAL.union.val = &tree.AlterTenantSetClusterSetting{
				SetClusterSetting: *csettingStmt,
				TenantSpec:        &tree.TenantSpec{All: true},
			}
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7066
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SETTING")
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7067
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER SETTING")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7084
		{

			sqlVAL.union.val = &tree.AlterTenantCapability{
				TenantSpec:   sqlDollar[3].union.tenantSpec(),
				Capabilities: sqlDollar[6].union.tenantCapabilities(),
			}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7092
		{

			sqlVAL.union.val = &tree.AlterTenantCapability{
				TenantSpec:      sqlDollar[3].union.tenantSpec(),
				AllCapabilities: true,
			}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7100
		{

			sqlVAL.union.val = &tree.AlterTenantCapability{
				TenantSpec:   sqlDollar[3].union.tenantSpec(),
				Capabilities: sqlDollar[6].union.tenantCapabilities(),
				IsRevoke:     true,
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7109
		{

			sqlVAL.union.val = &tree.AlterTenantCapability{
				TenantSpec:      sqlDollar[3].union.tenantSpec(),
				AllCapabilities: true,
				IsRevoke:        true,
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7117
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER CAPABILITY")
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7118
		{
			return helpWith(sqllex, "ALTER VIRTUAL CLUSTER CAPABILITY")
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7122
		{

			sqlVAL.union.val = tree.TenantCapability{
				Name: strings.Join(sqlDollar[1].union.strs(), "."),
			}
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7129
		{

			sqlVAL.union.val = tree.TenantCapability{
				Name:  strings.Join(sqlDollar[1].union.strs(), "."),
				Value: sqlDollar[3].union.expr(),
			}
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7139
		{

			sqlVAL.union.val = []tree.TenantCapability{sqlDollar[1].union.tenantCapability()}
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7144
		{

			sqlVAL.union.val = append(sqlDollar[1].union.tenantCapabilities(), sqlDollar[3].union.tenantCapability())
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs(), SetRow: true}
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7169
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[4].union.exprs()}
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7175
		{

			sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[5].union.exprs()}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7184
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7186
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7189
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 1103:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7192
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7206
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7211
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7228
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7231
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7236
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7252
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7256
		{
			return unimplemented(sqllex, "set from current")
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7260
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7265
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7274
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7279
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7283
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7295
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7300
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7307
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7311
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7317
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7321
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7328
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7361
		{
			sqlVAL.union.val = tree.ReadUncommittedIsolation
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7365
		{
			sqlVAL.union.val = tree.ReadCommittedIsolation
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7369
		{
			sqlVAL.union.val = tree.SnapshotIsolation
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7373
		{
			sqlVAL.union.val = tree.RepeatableReadIsolation
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7377
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7383
		{
			sqlVAL.union.val = tree.Low
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7387
		{
			sqlVAL.union.val = tree.Normal
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7391
		{
			sqlVAL.union.val = tree.High
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7402
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7406
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7410
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7415
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7419
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7437
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7438
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7439
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7440
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7441
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7442
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7443
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7444
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7445
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7448
		{
			return helpWith(sqllex, "SHOW PROCEDURES")
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7449
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7450
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7451
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7452
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7453
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7455
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7456
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7457
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7459
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7461
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7462
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7463
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7464
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7465
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7466
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7469
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{
			return helpWith(sqllex, "SHOW VIRTUAL CLUSTER")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7472
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7473
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7474
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7475
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7476
		{
			return helpWith(sqllex, "SHOW DEFAULT SESSION VARIABLES FOR ROLE")
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7477
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7478
		{
			return helpWith(sqllex, "SHOW")
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7481
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7490
		{
			sqlVAL.union.val = &tree.CloseCursor{
				All: true,
			}
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = &tree.CloseCursor{
				Name: tree.Name(sqlDollar[2].str),
			}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7501
		{
			return helpWith(sqllex, "CLOSE")
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7511
		{
			sqlVAL.union.val = &tree.DeclareCursor{
				Binary:      sqlDollar[3].union.bool(),
				Name:        tree.Name(sqlDollar[2].str),
				Sensitivity: sqlDollar[4].union.cursorSensitivity(),
				Scroll:      sqlDollar[5].union.cursorScrollOption(),
				Hold:        sqlDollar[7].union.bool(),
				Select:      sqlDollar[9].union.slct(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7521
		{
			return helpWith(sqllex, "DECLARE")
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = true
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = false
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = tree.Insensitive
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = tree.Asensitive
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7543
		{
			sqlVAL.union.val = tree.UnspecifiedSensitivity
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.Scroll
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7553
		{
			sqlVAL.union.val = tree.NoScroll
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7557
		{
			sqlVAL.union.val = tree.UnspecifiedScroll
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7563
		{
			sqlVAL.union.val = true
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7567
		{
			sqlVAL.union.val = false
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7571
		{
			sqlVAL.union.val = false
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = &tree.FetchCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7586
		{
			return helpWith(sqllex, "FETCH")
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = &tree.MoveCursor{
				CursorStmt: sqlDollar[2].union.cursorStmt(),
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7599
		{
			return helpWith(sqllex, "MOVE")
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7603
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[1].str),
				Count: 1,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7610
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[2].str),
				Count: 1,
			}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7617
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7624
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[3].str),
				Count: sqlDollar[1].union.int64(),
			}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7631
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:  tree.Name(sqlDollar[4].str),
				Count: sqlDollar[2].union.int64() * sqlDollar[1].union.int64(),
			}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7638
		{
			fetchType := tree.FetchAll
			count := sqlDollar[1].union.int64()
			if count < 0 {
				fetchType = tree.FetchBackwardAll
			}
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: fetchType,
			}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7650
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchAbsolute,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7658
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[4].str),
				FetchType: tree.FetchRelative,
				Count:     sqlDollar[2].union.int64(),
			}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchFirst,
			}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7673
		{
			sqlVAL.union.val = tree.CursorStmt{
				Name:      tree.Name(sqlDollar[3].str),
				FetchType: tree.FetchLast,
			}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7681
		{
			sqlVAL.union.val = int64(1)
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7682
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7685
		{
			sqlVAL.union.val = sqlDollar[1].union.int64()
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7686
		{
			sqlVAL.union.val = int64(1)
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7689
		{
			sqlVAL.union.val = int64(1)
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7690
		{
			sqlVAL.union.val = int64(-1)
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7693
		{
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7694
		{
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7697
		{
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7698
		{
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7702
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7707
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7712
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7717
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7722
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7733
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7734
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7739
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7749
		{
			sqlVAL.str = "client_encoding"
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7754
		{
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7756
		{

			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7761
		{
			sqlVAL.str = "timezone"
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7762
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7767
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7771
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7791
		{
			sqlVAL.union.val = &tree.ShowTableStats{
				Table:   sqlDollar[5].union.unresolvedObjectName(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7798
		{

			sqlVAL.union.val = &tree.ShowTableStats{
				Table:     sqlDollar[7].union.unresolvedObjectName(),
				UsingJSON: true,
				Options:   sqlDollar[8].union.kvOptions(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7806
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7819
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7827
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7835
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.stringOrPlaceholderOptList(),
			}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7841
		{
			sqlVAL.union.val = &tree.ShowBackup{
				From:         true,
				Details:      sqlDollar[3].union.showBackupDetails(),
				Path:         sqlDollar[5].union.expr(),
				InCollection: sqlDollar[7].union.stringOrPlaceholderOptList(),
				Options:      *sqlDollar[8].union.showBackupOptions(),
			}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7851
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.stringOrPlaceholderOptList(),
				Options:      *sqlDollar[6].union.showBackupOptions(),
			}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7860
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: *sqlDollar[4].union.showBackupOptions(),
			}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7868
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupSchemaDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7876
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7884
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7892
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupValidateDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7900
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupConnectionTest,
				Path:    sqlDollar[4].union.expr(),
				Options: *sqlDollar[5].union.showBackupOptions(),
			}
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7907
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7911
		{
			sqlVAL.union.val = tree.BackupDefaultDetails
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7915
		{
			sqlVAL.union.val = tree.BackupSchemaDetails
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7919
		{
			sqlVAL.union.val = tree.BackupFileDetails
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7923
		{
			sqlVAL.union.val = tree.BackupRangeDetails
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7927
		{
			sqlVAL.union.val = tree.BackupValidateDetails
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7933
		{
			sqlVAL.union.val = sqlDollar[2].union.showBackupOptions()
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7937
		{
			sqlVAL.union.val = sqlDollar[4].union.showBackupOptions()
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7948
		{
			sqlVAL.union.val = sqlDollar[1].union.showBackupOptions()
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7952
		{
			if err := sqlDollar[1].union.showBackupOptions().CombineWith(sqlDollar[3].union.showBackupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7960
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{AsJson: true}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7964
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{CheckFiles: true}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7968
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{SkipSize: true}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7972
		{

			sqlVAL.union.val = &tree.ShowBackupOptions{SkipSize: true}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7977
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{DebugIDs: true}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7985
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7989
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{Privileges: true}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7997
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{EncryptionInfoDir: sqlDollar[3].union.expr()}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8001
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{DebugMetadataSST: true}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8007
		{
			sqlVAL.union.val = sqlDollar[2].union.showBackupOptions()
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8011
		{
			sqlVAL.union.val = sqlDollar[4].union.showBackupOptions()
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8015
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8022
		{
			sqlVAL.union.val = sqlDollar[1].union.showBackupOptions()
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8026
		{
			if err := sqlDollar[1].union.showBackupOptions().CombineWith(sqlDollar[3].union.showBackupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{CheckConnectionTransferSize: sqlDollar[3].union.expr()}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{CheckConnectionDuration: sqlDollar[3].union.expr()}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = &tree.ShowBackupOptions{CheckConnectionConcurrency: sqlDollar[3].union.expr()}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8054
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8061
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8063
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8066
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8068
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8072
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8075
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8079
		{

			sqlVAL.union.val = sqlDollar[1].union.stmt()
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8084
		{

			switch t := sqlDollar[1].union.stmt().(type) {
			case *tree.ShowClusterSetting:
				sqlVAL.union.val = &tree.ShowTenantClusterSetting{
					ShowClusterSetting: t,
					TenantSpec:         sqlDollar[4].union.tenantSpec(),
				}
			case *tree.ShowClusterSettingList:
				sqlVAL.union.val = &tree.ShowTenantClusterSettingList{
					ShowClusterSettingList: t,
					TenantSpec:             sqlDollar[4].union.tenantSpec(),
				}
			}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8099
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8107
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8110
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8118
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8122
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8126
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8130
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8133
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8141
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8144
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8151
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:  sqlDollar[4].union.roleSpecList(),
				Schema: tree.Name(sqlDollar[5].str),
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8157
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles:      sqlDollar[6].union.roleSpecList(),
				ForGrantee: true,
				Schema:     tree.Name(sqlDollar[7].str),
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8164
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
				Schema:      tree.Name(sqlDollar[7].str),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8170
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8181
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8191
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8200
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8207
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8210
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8223
		{
			lst := sqlDollar[3].union.grantTargetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8232
		{
			sqlVAL.union.val = &tree.ShowGrants{
				Targets:  &tree.GrantTargetList{System: true},
				Grantees: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8238
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8246
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8249
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8251
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8255
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8259
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8262
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8264
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8268
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8271
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8285
		{
			sqlVAL.union.val = &tree.ShowCommitTimestamp{}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8295
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8300
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8303
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8311
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8314
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8316
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8319
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8323
		{
			sqlVAL.union.val = true
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8325
		{
			sqlVAL.union.val = true
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8327
		{
			sqlVAL.union.val = false
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8344
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8348
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Automatic: false,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8354
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Automatic: false,
				Options:   sqlDollar[4].union.showJobOptions(),
			}
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8361
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8364
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8365
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8366
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8368
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs:    sqlDollar[3].union.slct(),
				Options: sqlDollar[5].union.showJobOptions(),
			}
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8379
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8383
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8387
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8390
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8400
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Options: sqlDollar[5].union.showJobOptions(),
			}
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8409
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8425
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8426
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8432
		{
			sqlVAL.union.val = sqlDollar[1].union.showJobOptions()
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8436
		{
			if err := sqlDollar[1].union.showJobOptions().CombineWith(sqlDollar[3].union.showJobOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8445
		{
			sqlVAL.union.val = &tree.ShowJobOptions{
				ExecutionDetails: true,
			}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8459
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8465
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8467
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8473
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8475
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8481
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8485
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8489
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8495
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8503
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8507
		{
			sqlVAL.union.val = tree.ScheduledChangefeedExecutor
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8518
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8521
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8523
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8526
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8528
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8532
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8535
		{
			sqlVAL.union.val = true
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = false
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8544
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8547
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8549
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8552
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8560
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8570
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8580
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8583
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8590
		{
			sqlVAL.union.val = &tree.ShowRoutines{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8599
		{
			sqlVAL.union.val = &tree.ShowRoutines{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}}
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8608
		{
			sqlVAL.union.val = &tree.ShowRoutines{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8611
		{
			return helpWith(sqllex, "SHOW FUNCTIONS")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8618
		{
			sqlVAL.union.val = &tree.ShowRoutines{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			}, Procedure: true}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8627
		{
			sqlVAL.union.val = &tree.ShowRoutines{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			}, Procedure: true}
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8636
		{
			sqlVAL.union.val = &tree.ShowRoutines{Procedure: true}
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8639
		{
			return helpWith(sqllex, "SHOW PROCEDURES")
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8646
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8649
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8651
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8654
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8657
		{
			sqlVAL.union.val = true
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8658
		{
			sqlVAL.union.val = false
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8669
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8672
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8679
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8683
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8686
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8693
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8697
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8701
		{

			sqlVAL.union.val = &tree.ShowCompletions{
				Statement: tree.NewStrVal(sqlDollar[7].str),
				Offset:    sqlDollar[5].union.numVal(),
			}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8711
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8718
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8722
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8733
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8736
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8744
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8749
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8758
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8765
		{
			sqlVAL.union.val = &tree.ShowTransferState{TransferKey: tree.NewStrVal(sqlDollar[5].str)}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8769
		{
			sqlVAL.union.val = &tree.ShowTransferState{}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8772
		{
			return helpWith(sqllex, "SHOW TRANSFER")
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8785
		{
			sqlVAL.union.val = &tree.ShowCreate{
				Name: sqlDollar[3].union.unresolvedObjectName(), FmtOpt: sqlDollar[4].union.showCreateFormatOption(),
			}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8791
		{

			sqlVAL.union.val = &tree.ShowCreate{
				Mode:   tree.ShowCreateModeTable,
				Name:   sqlDollar[4].union.unresolvedObjectName(),
				FmtOpt: sqlDollar[5].union.showCreateFormatOption(),
			}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8800
		{

			sqlVAL.union.val = &tree.ShowCreate{
				Mode:   tree.ShowCreateModeView,
				Name:   sqlDollar[4].union.unresolvedObjectName(),
				FmtOpt: sqlDollar[5].union.showCreateFormatOption(),
			}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8809
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8814
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8819
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeIndexes, Name: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8824
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSecondaryIndexes, Name: sqlDollar[6].union.unresolvedObjectName()}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8829
		{

			sqlVAL.union.val = &tree.ShowCreateRoutine{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8838
		{

			sqlVAL.union.val = &tree.ShowCreateRoutine{
				Name: tree.ResolvableFunctionReference{
					FunctionReference: sqlDollar[4].union.unresolvedObjectName().ToUnresolvedName(),
				},
				Procedure: true,
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8848
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8852
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8856
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8859
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8863
		{
			sqlVAL.union.val = tree.ShowCreateFormatOptionNone
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8867
		{
			sqlVAL.union.val = tree.ShowCreateFormatOptionRedactedValues
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8879
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8882
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8884
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8887
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{}
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8899
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8901
		{
			sqlVAL.union.val = &tree.ShowCreateExternalConnections{ConnectionLabel: sqlDollar[5].union.expr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8904
		{
			return helpWith(sqllex, "SHOW CREATE EXTERNAL CONNECTIONS")
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8912
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8915
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.ShowDefaultSessionVariablesForRole{Name: sqlDollar[7].union.roleSpec(), IsRole: sqlDollar[6].union.bool()}
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8926
		{
			sqlVAL.union.val = &tree.ShowDefaultSessionVariablesForRole{All: true, IsRole: true}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8930
		{
			sqlVAL.union.val = &tree.ShowDefaultSessionVariablesForRole{All: true, IsRole: false}
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8933
		{
			return helpWith(sqllex, "SHOW DEFAULT SESSION VARIABLES FOR ROLE")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8941
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8944
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8954
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8962
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8970
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8978
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8985
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8991
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8993
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8996
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8998
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9001
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9005
		{
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9014
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9028
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9052
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesIndex, TableOrIndex: sqlDollar[5].union.tableIndexName(), Options: sqlDollar[6].union.showRangesOpts()}
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9056
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesTable, TableOrIndex: tree.TableIndexName{Table: name}, Options: sqlDollar[6].union.showRangesOpts()}
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesDatabase, DatabaseName: tree.Name(sqlDollar[5].str), Options: sqlDollar[6].union.showRangesOpts()}
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesCurrentDatabase, Options: sqlDollar[5].union.showRangesOpts()}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesCurrentDatabase, Options: sqlDollar[3].union.showRangesOpts()}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9072
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9074
		{
			sqlVAL.union.val = &tree.ShowRanges{Source: tree.ShowRangesCluster, Options: sqlDollar[4].union.showRangesOpts()}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9077
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9081
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{}
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9083
		{
			sqlVAL.union.val = sqlDollar[2].union.showRangesOpts()
		}
	case 1540:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9086
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Mode: tree.ExpandTables}
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9087
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Mode: tree.ExpandIndexes}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Details: true}
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Keys: true}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = &tree.ShowRangesOptions{Explain: true}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9092
		{
			o := sqlDollar[1].union.showRangesOpts()
			if o.Mode != 0 {
				return setErr(sqllex, errors.New("conflicting modes"))
			}
			o.Mode = tree.ExpandTables
			sqlVAL.union.val = o
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9099
		{
			o := sqlDollar[1].union.showRangesOpts()
			if o.Mode != 0 {
				return setErr(sqllex, errors.New("conflicting modes"))
			}
			o.Mode = tree.ExpandIndexes
			sqlVAL.union.val = o
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9106
		{
			o := sqlDollar[1].union.showRangesOpts()
			o.Details = true
			sqlVAL.union.val = o
		}
	case 1548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9112
		{
			o := sqlDollar[1].union.showRangesOpts()
			o.Explain = true
			sqlVAL.union.val = o
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9118
		{
			o := sqlDollar[1].union.showRangesOpts()
			o.Keys = true
			sqlVAL.union.val = o
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9132
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9136
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9152
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9158
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9170
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowSuperRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[6].str),
			}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9189
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9193
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9199
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9204
		{

			sqlVAL.union.val = &tree.ShowFingerprints{TenantSpec: sqlDollar[5].union.tenantSpec(), Options: *sqlDollar[6].union.showFingerprintOptions()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9211
		{
			sqlVAL.union.val = sqlDollar[2].union.showFingerprintOptions()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9215
		{
			sqlVAL.union.val = sqlDollar[4].union.showFingerprintOptions()
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9219
		{
			sqlVAL.union.val = &tree.ShowFingerprintOptions{}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9226
		{
			sqlVAL.union.val = sqlDollar[1].union.showFingerprintOptions()
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9230
		{
			if err := sqlDollar[1].union.showFingerprintOptions().CombineWith(sqlDollar[3].union.showFingerprintOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9239
		{
			sqlVAL.union.val = &tree.ShowFingerprintOptions{StartTimestamp: sqlDollar[4].union.expr()}
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9246
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9252
		{
			tmp := sqlDollar[2].union.grantTargetList()
			sqlVAL.union.val = &tmp
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9257
		{
			sqlVAL.union.val = (*tree.GrantTargetList)(nil)
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9383
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9387
		{

			sqlVAL.union.val = tree.GrantTargetList{
				Tables:   tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9426
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9430
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: true, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9434
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9439
		{
			sqlVAL.union.val = tree.GrantTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9443
		{
			sqlVAL.union.val = tree.GrantTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9447
		{
			sqlVAL.union.val = tree.GrantTargetList{ExternalConnections: sqlDollar[3].union.nameList()}
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9451
		{
			sqlVAL.union.val = tree.GrantTargetList{Functions: sqlDollar[2].union.routineObjs()}
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9455
		{
			sqlVAL.union.val = tree.GrantTargetList{Procedures: sqlDollar[2].union.routineObjs()}
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9465
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9469
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}}
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9473
		{
			sqlVAL.union.val = tree.BackupTargetList{
				Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}},
			}
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}}
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9483
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9488
		{
			sqlVAL.union.val = tree.BackupTargetList{Tables: tree.TableAttrs{SequenceOnly: false, TablePatterns: sqlDollar[2].union.tablePatterns()}}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9494
		{

			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true, ID: tenID}}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9503
		{

			if sqlDollar[2].str != "_" {
				return setErr(sqllex, errors.New("invalid syntax"))
			}
			sqlVAL.union.val = tree.BackupTargetList{TenantID: tree.TenantID{Specified: true}}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9513
		{
			sqlVAL.union.val = tree.BackupTargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = tree.GrantTargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9526
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9530
		{
			sqlVAL.union.val = tree.GrantTargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9534
		{
			sqlVAL.union.val = tree.GrantTargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9542
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9546
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9554
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9555
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9556
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9557
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9563
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9564
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9565
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9566
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9574
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9577
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9587
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9596
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9605
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9611
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9615
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9618
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9623
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9627
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9650
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9658
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9666
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9669
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9678
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9684
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9691
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9705
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9716
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9725
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9733
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:9769
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:9784
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9801
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9805
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9812
		{

			sqlVAL.union.val = nil
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9818
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9824
		{
			sqlVAL.str = ""
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9828
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9834
		{
			sqlVAL.union.val = nil
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9838
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9843
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9847
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9851
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9855
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = []tree.Name{tree.Name(sqlDollar[1].str)}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9869
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParamKeys(), tree.Name(sqlDollar[3].str))
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9875
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9881
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9885
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9891
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:9904
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9918
		{
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9919
		{
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9920
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9938
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9939
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9940
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9944
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9946
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9948
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9953
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9959
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9963
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9969
		{
			sqlVAL.union.val = sqlDollar[1].union.colTableDef()
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9975
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip && !u.WithoutIndex {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9988
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9997
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10001
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10007
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10012
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10013
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10014
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10015
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10017
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10018
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10019
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10025
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.str = ""
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10039
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10053
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10059
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10065
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10071
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10081
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10087
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10093
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10100
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10107
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10113
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10117
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10123
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.Name(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10133
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.Name(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10157
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10168
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10172
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10178
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10182
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10186
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10190
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10198
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10220
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10224
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10228
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10232
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10238
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10244
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:       true,
				ShardBuckets:  sqlDollar[5].union.expr(),
				StorageParams: sqlDollar[6].union.storageParams(),
			}
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10252
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10256
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10260
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10264
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10278
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10282
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10309
		{

			sqlVAL.union.val = true
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = false
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10319
		{
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10329
		{
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10332
		{
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10336
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[3].union.idxElems(),
				Sharded:          sqlDollar[5].union.shardedIndexDef(),
				Storing:          sqlDollar[6].union.nameList(),
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				Invisibility:     sqlDollar[10].union.indexInvisibility(),
			}
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10349
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
				Invisibility:     sqlDollar[11].union.indexInvisibility(),
			}
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
					Invisibility:     sqlDollar[12].union.indexInvisibility(),
				},
			}
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10377
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             "",
				Columns:          sqlDollar[4].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[6].union.partitionByIndex(),
				StorageParams:    sqlDollar[7].union.storageParams(),
				Predicate:        sqlDollar[8].union.expr(),
				Invisibility:     sqlDollar[9].union.indexInvisibility(),
			}
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10389
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
				Invisibility:     sqlDollar[10].union.indexInvisibility(),
			}
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10403
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10415
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10420
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10426
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:10433
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					Sharded:       sqlDollar[6].union.shardedIndexDef(),
					StorageParams: sqlDollar[7].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10457
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10468
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10475
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10479
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10485
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10495
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10510
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10517
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10523
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:       sqlDollar[4].union.idxElems(),
					StorageParams: sqlDollar[6].union.storageParams(),
				},
				PrimaryKey: true,
			}
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10565
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10571
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{
				StorageParams: sqlDollar[3].union.storageParams(),
			}
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10578
		{
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10579
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10580
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10581
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10582
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10583
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10601
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10605
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10611
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[3].union.expr(),
			}
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10617
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10627
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10633
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10637
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10657
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10661
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10665
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10669
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10682
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10686
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10690
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10694
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10700
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10714
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10718
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10722
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10750
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10759
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10767
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10771
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10774
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10775
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10778
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType == nil {
				sqllex.(*lexer).lastError = pgerror.Newf(pgcode.UndefinedObject, "type %q does not exist", sqlDollar[2].union.val)
				sqllex.(*lexer).populateErrorDetails()
				return 1
			}
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10792
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10794
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10795
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10796
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10806
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10808
		{
			x := sqlDollar[4].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCacheNode, IntVal: &x}
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10810
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10812
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10814
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10816
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10817
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10819
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10820
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10822
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10824
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10825
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x}
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10827
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptRestart, IntVal: &x, OptionalWord: true}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10830
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10838
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10841
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10851
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10872
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10883
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10887
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10891
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10895
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10899
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10903
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10906
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10910
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10914
		{
			sqlVAL.str = ""
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10922
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10926
		{

			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = true
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10949
		{

			sqlVAL.union.val = true
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10954
		{
			sqlVAL.union.val = false
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:10966
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:10980
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:10992
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11004
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
				WithData:     sqlDollar[8].union.bool(),
			}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:11015
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
				WithData:     sqlDollar[11].union.bool(),
			}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11026
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11030
		{
			sqlVAL.union.val = false
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11034
		{
			sqlVAL.union.val = true
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11038
		{
			sqlVAL.union.val = true
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11044
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11048
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11052
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11056
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11060
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11064
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11068
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11072
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11076
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11080
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11084
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11153
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11157
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = nil
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11173
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11177
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("subject"), Value: sqlDollar[2].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("subject"), Value: tree.DNull}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11192
		{
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11193
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11221
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:          sqlDollar[3].union.unresolvedObjectName(),
				Variety:           tree.Composite,
				CompositeTypeList: sqlDollar[6].union.compositeTypeList(),
			}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:          sqlDollar[6].union.unresolvedObjectName(),
				Variety:           tree.Composite,
				IfNotExists:       true,
				CompositeTypeList: sqlDollar[9].union.compositeTypeList(),
			}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11238
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11240
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11244
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11248
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11252
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11268
		{
			sqlVAL.union.val = sqlDollar[1].union.compositeTypeList()
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11272
		{
			sqlVAL.union.val = []tree.CompositeTypeElem{}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = []tree.CompositeTypeElem{
				tree.CompositeTypeElem{
					Label: tree.Name(sqlDollar[1].str),
					Type:  sqlDollar[2].union.typeReference(),
				},
			}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11287
		{
			sqlVAL.union.val = append(sqlDollar[1].union.compositeTypeList(),
				tree.CompositeTypeElem{
					Label: tree.Name(sqlDollar[3].str),
					Type:  sqlDollar[4].union.typeReference(),
				},
			)
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:11309
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
				Invisibility:     sqlDollar[17].union.indexInvisibility(),
			}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:11327
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
				Invisibility:     sqlDollar[20].union.indexInvisibility(),
			}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:11346
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				Invisibility:     sqlDollar[16].union.indexInvisibility(),
			}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:11363
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
				Invisibility:     sqlDollar[19].union.indexInvisibility(),
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11380
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11384
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11399
		{
			sqlVAL.union.val = false
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = true
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = false
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11415
		{
			sqlVAL.union.val = true
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = false
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11425
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11429
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11438
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11444
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11450
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11458
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder, OpClass: tree.Name(opClass)}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11477
		{
			sqlVAL.str = ""
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11481
		{
			sqlVAL.str = ""
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11489
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11493
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11499
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 1.0}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11503
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 1.0}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11507
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 0.0}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11511
		{
			visibilityConst, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if visibilityConst < 0.0 || visibilityConst > 1.0 {
				sqllex.Error("index visibility must be between 0 and 1")
				return 1
			}
			invisibilityConst := 1.0 - visibilityConst
			sqlVAL.union.val = tree.IndexInvisibility{Value: invisibilityConst, FloatProvided: true}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11521
		{
			sqlVAL.union.val = tree.IndexInvisibility{Value: 0.0}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:11527
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11533
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11539
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11545
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11553
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11559
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11567
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11575
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11591
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11598
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11610
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11617
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11623
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11629
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11635
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11662
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11678
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11696
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11715
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:11724
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11742
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11750
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11759
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11770
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11776
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11788
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:11794
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11808
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11814
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11822
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11826
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11838
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11847
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11856
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11865
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11873
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11877
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.targetObjectType(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = true
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11892
		{
			sqlVAL.union.val = false
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.targetObjectType(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.targetObjectType(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11917
		{
			sqlVAL.union.val = privilege.Tables
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11921
		{
			sqlVAL.union.val = privilege.Sequences
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11925
		{
			sqlVAL.union.val = privilege.Types
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11929
		{
			sqlVAL.union.val = privilege.Schemas
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11933
		{
			sqlVAL.union.val = privilege.Routines
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11937
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON ROUTINES ...")
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11943
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11946
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11952
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11956
		{
			sqlVAL.str = ""
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11967
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11972
		{
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11973
		{
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11976
		{
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11977
		{
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11988
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12006
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12008
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12012
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12015
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12028
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12036
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12044
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12057
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12065
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12067
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12073
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12084
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12088
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12089
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12090
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12106
		{
			s := sqlDollar[3].union.beginTransaction()
			s.FormatWithStart = true
			sqlVAL.union.val = s
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12111
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12121
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12124
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12128
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12133
		{
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12134
		{
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12135
		{
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12149
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12152
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12158
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12159
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12163
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12166
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12170
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12173
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12177
		{
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12178
		{
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12182
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12186
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12192
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12196
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12202
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12206
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12219
		{
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12221
		{
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12225
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12230
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12234
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12238
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12242
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12248
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12254
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12260
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12264
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12270
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12274
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:12284
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
				Owner:           sqlDollar[14].union.roleSpec(),
				SuperRegion:     sqlDollar[15].union.superRegion(),
				SecondaryRegion: tree.Name(sqlDollar[16].str),
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
				Owner:           sqlDollar[17].union.roleSpec(),
				SuperRegion:     sqlDollar[18].union.superRegion(),
				SecondaryRegion: tree.Name(sqlDollar[19].str),
			}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12320
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12325
		{
			sqlVAL.str = ""
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12330
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.str = ""
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.SuperRegion{}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.SuperRegion{Name: tree.Name(sqlDollar[3].str), Regions: sqlDollar[5].union.nameList()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12372
		{
			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12382
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12388
		{

		}
	case 2106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12395
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12403
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12412
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12418
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12422
		{
			sqlVAL.str = ""
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12428
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12432
		{
			sqlVAL.str = ""
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12438
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12442
		{
			sqlVAL.str = ""
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12448
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12452
		{
			sqlVAL.str = ""
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12458
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12466
		{
			sqlVAL.union.val = int32(-1)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12472
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12476
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12483
		{
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12484
		{
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12499
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12513
		{
			return helpWith(sqllex, "INSERT")
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12524
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12531
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12535
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12543
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12549
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12559
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12563
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12567
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12577
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12597
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12601
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12608
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:12616
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12625
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				DoNothing:  true,
			}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = &tree.OnConflict{
				Constraint: tree.Name(sqlDollar[5].str),
				Exprs:      sqlDollar[9].union.updateExprs(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[10].union.expr()),
			}
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12642
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12647
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12651
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:12669
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12681
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12687
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12693
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12697
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12710
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12713
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12717
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12728
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12734
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12743
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12749
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12790
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12796
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12800
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12815
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12819
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12823
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12827
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12831
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12848
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12849
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12852
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12853
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12867
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12876
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12877
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12878
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12879
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12882
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12883
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12886
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = tree.LockWaitSkipLocked
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12888
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12893
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12928
		{
			return helpWith(sqllex, "SELECT")
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12929
		{
			return helpWith(sqllex, "VALUES")
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12930
		{
			return helpWith(sqllex, "TABLE")
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12952
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12965
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:12979
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12994
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13003
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13012
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13027
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13034
		{
			return helpWith(sqllex, "TABLE")
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13046
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13050
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13061
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13065
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13071
		{
			sqlVAL.union.val = tree.CTEMaterializeAlways
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13075
		{
			sqlVAL.union.val = tree.CTEMaterializeNever
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13078
		{
			sqlVAL.union.val = tree.CTEMaterializeDefault
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13084
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()},
				Mtr:  sqlDollar[4].union.cteMaterializeClause(),
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13093
		{
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13094
		{
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13098
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13102
		{
			sqlVAL.union.val = nil
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13107
		{
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13108
		{
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13112
		{
			sqlVAL.union.val = true
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13116
		{
			sqlVAL.union.val = false
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13120
		{
			sqlVAL.union.val = false
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13126
		{
			sqlVAL.union.val = true
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13137
		{
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13138
		{
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13141
		{
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13142
		{
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13146
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13150
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13156
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13160
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13166
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13172
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13178
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13182
		{
			return unimplementedWithIssueDetail(sqllex, 109847, "order by index")
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13186
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13191
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13198
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13202
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13206
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13210
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13216
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13220
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13224
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13230
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 2251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13235
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13247
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13261
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13265
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13269
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13275
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13284
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13295
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13296
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13300
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13304
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13308
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13322
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13326
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13334
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13341
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13363
		{
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13364
		{
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13367
		{
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13368
		{
		}
	case 2277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13385
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 2278:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13389
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 2279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13394
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13395
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13401
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13402
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 2283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13403
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13404
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13408
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13412
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13431
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13434
		{
			return helpWith(sqllex, "VALUES")
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13436
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13448
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13451
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 2292:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13453
		{
			sqlVAL.union.val = tree.From{}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13459
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 2294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13463
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 2295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13469
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2296:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13473
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13478
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13483
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13489
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 2300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13493
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 2301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13497
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 2302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13501
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 2303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13506
		{

			sqlVAL.union.val = &tree.IndexFlags{ForceInvertedIndex: true}
		}
	case 2304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13511
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 2305:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13515
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 2306:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13519
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13524
		{

			id := tree.FamilyID(uint32(sqlDollar[4].union.int64()))
			sqlVAL.union.val = &tree.IndexFlags{FamilyID: &id}
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13532
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13537
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13548
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2311:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13552
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13556
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13564
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13598
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13608
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2316:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13618
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13626
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13635
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2319:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13639
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13643
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 2321:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13654
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 2322:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13678
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13684
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 2324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13695
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13699
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13705
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13707
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13711
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13717
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13721
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13727
		{
			sqlVAL.union.val = tree.ColumnDefList{tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13731
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), tree.ColumnDef{Name: tree.Name(sqlDollar[3].str)})
		}
	case 2333:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13738
		{
			sqlVAL.union.val = tree.ColumnDefList(nil)
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13742
		{
			sqlVAL.union.val = sqlDollar[2].union.colDefList()
		}
	case 2335:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13748
		{
			sqlVAL.union.val = tree.ColumnDefList{sqlDollar[1].union.colDef()}
		}
	case 2336:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13752
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colDefList(), sqlDollar[3].union.colDef())
		}
	case 2337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13758
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str)}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13762
		{
			sqlVAL.union.val = tree.ColumnDef{Name: tree.Name(sqlDollar[1].str), Type: sqlDollar[2].union.typeReference()}
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13767
		{
			sqlVAL.union.val = nil
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13768
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 2341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13769
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 2342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13773
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 2343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13777
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 2344:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13783
		{
			sqlVAL.union.val = true
		}
	case 2345:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13787
		{
			sqlVAL.union.val = false
		}
	case 2346:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13807
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 2347:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13811
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13815
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13819
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:13823
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 2351:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13827
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 2352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13833
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2353:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13837
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2355:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13844
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13850
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.colDefList()}
		}
	case 2357:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13854
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.colDefList()}
		}
	case 2359:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13861
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 2360:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13867
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 2362:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13874
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 2363:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13880
		{
			sqlVAL.str = tree.AstFull
		}
	case 2364:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13884
		{
			sqlVAL.str = tree.AstLeft
		}
	case 2365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13888
		{
			sqlVAL.str = tree.AstRight
		}
	case 2366:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13892
		{
			sqlVAL.str = tree.AstInner
		}
	case 2367:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13898
		{
		}
	case 2368:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13899
		{
		}
	case 2369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13924
		{
			sqlVAL.str = tree.AstHash
		}
	case 2370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13928
		{
			sqlVAL.str = tree.AstMerge
		}
	case 2371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13932
		{
			sqlVAL.str = tree.AstLookup
		}
	case 2372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13936
		{
			sqlVAL.str = tree.AstInverted
		}
	case 2373:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13940
		{
			sqlVAL.str = tree.AstStraight
		}
	case 2374:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13944
		{
			sqlVAL.str = ""
		}
	case 2375:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13957
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 2376:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13961
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 2377:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13966
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13967
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 2379:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13968
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 2380:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:13969
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 2381:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13973
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 2382:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13978
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 2383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13986
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: sqlDollar[2].union.unresolvedObjectName(), Star: false}
		}
	case 2384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:13990
		{
			sqlVAL.union.val = &tree.Unlisten{ChannelName: nil, Star: true}
		}
	case 2385:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14004
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 2386:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14008
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 2387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14014
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 2388:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14020
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 2389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14030
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 2390:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14040
		{
			sqlVAL.union.val = true
		}
	case 2391:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14044
		{
			sqlVAL.union.val = false
		}
	case 2392:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14050
		{
			sqlVAL.union.val = true
		}
	case 2393:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14054
		{
			sqlVAL.union.val = false
		}
	case 2394:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14060
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2396:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14067
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2397:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14079
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 2398:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14092
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2399:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14100
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2400:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14101
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 2401:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14111
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2402:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14118
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 2403:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14119
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2404:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14121
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 2405:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14129
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 2406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14130
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 2408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14142
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2409:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14149
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2410:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14158
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 2411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14198
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 2412:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14203
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 2415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14208
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 2416:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14209
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 2417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14212
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 2418:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14213
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 2419:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14214
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 2420:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14215
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 2421:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14216
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 2422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14217
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 2423:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14218
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 2424:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14219
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 2425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14220
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 2426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14221
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 2427:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14222
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 2428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14223
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 2429:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14224
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 2430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14225
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 2431:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14226
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 2432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14227
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 2433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14228
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 2434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14229
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 2435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14230
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 2436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14231
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 2437:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14232
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 2438:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14233
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 2439:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14234
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 2440:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14235
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 2441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14236
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 2442:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14237
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 2443:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14238
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 2444:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14239
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 2445:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14240
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 2446:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14241
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 2447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14242
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 2448:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14243
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 2449:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14246
		{
			sqlVAL.union.val = types.Geography
		}
	case 2450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14247
		{
			sqlVAL.union.val = types.Geometry
		}
	case 2451:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14248
		{
			sqlVAL.union.val = types.Box2D
		}
	case 2452:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14250
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2453:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14254
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 2454:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14258
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2455:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14266
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 2463:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14294
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2464:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14302
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 2465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14310
		{
			sqlVAL.union.val = nil
		}
	case 2466:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14317
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14321
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 2468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14325
		{
			sqlVAL.union.val = types.Int2
		}
	case 2469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14329
		{
			sqlVAL.union.val = types.Int
		}
	case 2470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14333
		{
			sqlVAL.union.val = types.Float4
		}
	case 2471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14337
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 2472:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14341
		{
			sqlVAL.union.val = types.Float
		}
	case 2473:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14345
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14353
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2475:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14361
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 2476:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14369
		{
			sqlVAL.union.val = types.Bool
		}
	case 2477:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14375
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 2478:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14388
		{
			sqlVAL.union.val = types.Float
		}
	case 2479:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14394
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2480:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14400
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 2481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14408
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 2482:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14412
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14416
		{
			sqlVAL.union.val = types.VarBit
		}
	case 2484:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14422
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 2485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14434
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 2486:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14440
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 2487:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14444
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2488:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14448
		{
			sqlVAL.union.val = types.VarChar
		}
	case 2489:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14452
		{
			sqlVAL.union.val = types.String
		}
	case 2492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14461
		{
			sqlVAL.union.val = true
		}
	case 2493:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14462
		{
			sqlVAL.union.val = false
		}
	case 2494:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14467
		{
			sqlVAL.union.val = types.Date
		}
	case 2495:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14471
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 2496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14479
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 2497:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14491
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 2498:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14493
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 2499:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14502
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 2500:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14510
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 2501:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14523
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 2502:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14527
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 2503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14537
		{
			sqlVAL.union.val = true
		}
	case 2504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14538
		{
			sqlVAL.union.val = false
		}
	case 2505:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14539
		{
			sqlVAL.union.val = false
		}
	case 2506:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14543
		{
			sqlVAL.union.val = types.Interval
		}
	case 2507:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14547
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 2508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14551
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 2509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14562
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 2510:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14570
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2511:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14578
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 2512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14586
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2513:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14594
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2514:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14602
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 2515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14608
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 2516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14617
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 2517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14626
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2518:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14635
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 2519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14641
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 2520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14650
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 2521:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14656
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 2523:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:14666
		{
			sqlVAL.union.val = nil
		}
	case 2524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:14672
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 2525:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14680
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 2527:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14717
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14721
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14725
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 2530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 2531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14740
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14745
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2533:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14749
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14753
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14757
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 2536:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14761
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14765
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14769
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2539:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14773
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14777
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14781
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14785
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14789
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2544:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14793
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14797
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14801
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2547:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14805
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2548:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14809
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2549:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14813
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14817
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14821
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2552:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14825
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2553:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14829
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14833
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14837
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2556:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14841
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2559:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14857
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14861
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14865
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2563:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14869
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2564:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14873
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.TSMatches), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2565:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14877
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 2566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2567:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2568:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14893
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14901
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2571:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14911
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2572:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14915
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2573:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14919
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:14923
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2575:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14927
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2576:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14931
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2577:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14935
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2578:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14939
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2579:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14943
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2580:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14947
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2581:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14951
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2582:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14955
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2583:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14959
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2584:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:14963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 2585:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:14967
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2586:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:14971
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 2587:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14975
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14979
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14983
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2590:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14987
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2591:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:14991
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:14999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: treecmp.MakeComparisonOperator(treecmp.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 2593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15007
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15011
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2595:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15015
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15019
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15023
		{
			t1, t2 := sqlDollar[1].union.tuple(), sqlDollar[3].union.tuple()
			if len(t1.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on left side of OVERLAPS expression")
				return 1
			}
			if len(t2.Exprs) != 2 {
				sqllex.Error("wrong number of parameters on right side of OVERLAPS expression")
				return 1
			}
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("overlaps"), Exprs: tree.Exprs{t1.Exprs[0], t1.Exprs[1], t2.Exprs[0], t2.Exprs[1]}}
		}
	case 2598:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15036
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2599:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15040
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 2600:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15044
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2601:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15048
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 2602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15052
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2603:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15056
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 2604:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15060
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2605:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15064
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2606:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15068
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15072
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2608:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15076
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2609:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15080
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2610:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15084
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 2611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15088
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 2612:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2613:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 2614:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15100
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(treecmp.ComparisonOperator)
			if !ok {

				if tree.IsUnaryComplement(subOp) {
					subOp = treecmp.MakeComparisonOperator(treecmp.RegMatch)
				} else {
					sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
						subOp, op, subOp))
					return 1
				}
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 2615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15124
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 2616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15129
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 2618:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15141
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 2619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15145
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 2620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15149
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2621:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15153
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 2622:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15157
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 2623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15161
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2624:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15165
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15169
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15173
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2627:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15177
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2628:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15181
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15185
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2630:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15189
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2631:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15193
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2632:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15197
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15201
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15205
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2635:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15209
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2636:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15213
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2637:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15217
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2638:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15221
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: treebin.MakeBinaryOperator(treebin.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15225
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2640:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15229
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2641:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15233
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15237
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2643:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15245
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2644:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15255
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2645:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15259
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: treecmp.MakeComparisonOperator(treecmp.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2646:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15263
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2647:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:15267
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2649:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15281
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15289
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15325
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2653:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15329
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2654:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15333
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15337
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2656:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15341
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2657:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15346
		{
			return unimplemented(sqllex, sqlDollar[1].union.resolvableFuncRef().String()+"(...) SCONST")
		}
	case 2658:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15348
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15352
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2660:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15356
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2661:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15360
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2662:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15364
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15368
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15372
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15381
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2666:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15388
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2667:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15392
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2668:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15396
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2669:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15406
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15411
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2672:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15415
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2673:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15419
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2674:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15423
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2675:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15427
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15430
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15434
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef()}
		}
	case 2678:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15438
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15441
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2680:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:15442
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2681:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15444
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2682:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15450
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15454
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRef(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15457
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRef())
		}
	case 2685:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15461
		{
			sqlVAL.union.val = sqlDollar[1].union.resolvableFuncRefFromName()
		}
	case 2686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15465
		{
			id := sqlDollar[3].union.int32()
			sqlVAL.union.val = tree.ResolvableFunctionReference{
				FunctionReference: &tree.FunctionOID{OID: oid.Oid(id)},
			}
		}
	case 2687:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15479
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							un, err := name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
							typ = &un
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15532
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15545
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15557
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15566
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15567
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15572
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15576
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2695:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15580
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15586
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15590
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15594
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2699:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15598
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15602
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15606
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15612
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15616
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2704:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15620
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2705:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15624
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2706:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15628
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2707:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:15632
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2708:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:15636
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2709:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15640
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2710:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15644
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2711:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15648
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2712:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15652
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2713:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15656
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2714:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15660
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2716:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15667
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2717:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15670
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15672
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2719:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15675
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2720:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15677
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15681
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15684
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2723:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15686
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2724:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15690
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2725:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15693
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2727:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15699
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2728:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15702
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2729:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15704
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2730:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15708
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2731:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15711
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2732:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15713
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2733:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15716
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2734:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15718
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2735:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15721
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15723
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2737:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15726
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2738:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15728
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2739:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15731
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2740:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15733
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2741:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15736
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2742:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15738
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2743:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15742
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2744:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15745
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2745:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15746
		{
			return unimplemented(sqllex, "treat")
		}
	case 2746:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15748
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2747:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15752
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2748:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2749:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15760
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2750:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15764
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2751:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15767
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2752:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15769
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2753:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15772
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2754:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15778
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15782
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2756:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:15788
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2757:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15792
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2758:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15799
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2759:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15803
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15809
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2761:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15813
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2762:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15819
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2763:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15827
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15831
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15835
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2766:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:15842
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2768:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15862
		{
			sqlVAL.str = ""
		}
	case 2769:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15868
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2770:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15872
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2771:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15878
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2772:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15886
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2773:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15894
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      treewindow.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2774:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15902
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2775:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:15908
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2776:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:15921
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == treewindow.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == treewindow.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == treewindow.CurrentRow && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == treewindow.OffsetFollowing && endBound.BoundType == treewindow.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15949
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedPreceding}
		}
	case 2778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15953
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.UnboundedFollowing}
		}
	case 2779:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15957
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: treewindow.CurrentRow}
		}
	case 2780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15961
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetPreceding,
			}
		}
	case 2781:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15968
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  treewindow.OffsetFollowing,
			}
		}
	case 2782:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15977
		{
			sqlVAL.union.val = treewindow.ExcludeCurrentRow
		}
	case 2783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15981
		{
			sqlVAL.union.val = treewindow.ExcludeGroup
		}
	case 2784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:15985
		{
			sqlVAL.union.val = treewindow.ExcludeTies
		}
	case 2785:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:15989
		{

			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2786:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:15994
		{
			sqlVAL.union.val = treewindow.NoExclusion
		}
	case 2787:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:16007
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16011
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2790:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16018
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16030
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Any)
		}
	case 2792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16034
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Some)
		}
	case 2793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16038
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.All)
		}
	case 2794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16054
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Plus)
		}
	case 2795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16055
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Minus)
		}
	case 2796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16056
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mult)
		}
	case 2797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16057
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Div)
		}
	case 2798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16058
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Mod)
		}
	case 2799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16059
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Pow)
		}
	case 2800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16060
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LT)
		}
	case 2801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16061
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GT)
		}
	case 2802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16062
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.EQ)
		}
	case 2803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16063
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.LE)
		}
	case 2804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16064
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.GE)
		}
	case 2805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16065
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NE)
		}
	case 2806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16067
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONExists)
		}
	case 2807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16068
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitand)
		}
	case 2808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16069
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitor)
		}
	case 2809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16070
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Bitxor)
		}
	case 2810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16071
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.FloorDiv)
		}
	case 2811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16072
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Contains)
		}
	case 2812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16073
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ContainedBy)
		}
	case 2813:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16074
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.LShift)
		}
	case 2814:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16075
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.RShift)
		}
	case 2815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16076
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.Concat)
		}
	case 2816:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16077
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchVal)
		}
	case 2817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16078
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchText)
		}
	case 2818:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16079
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchValPath)
		}
	case 2819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16080
		{
			sqlVAL.union.val = treebin.MakeBinaryOperator(treebin.JSONFetchTextPath)
		}
	case 2820:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16081
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONSomeExists)
		}
	case 2821:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16082
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.JSONAllExists)
		}
	case 2822:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16083
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegMatch)
		}
	case 2823:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16084
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.RegIMatch)
		}
	case 2824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16085
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotRegIMatch)
		}
	case 2825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16086
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Overlaps)
		}
	case 2826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16087
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.TSMatches)
		}
	case 2827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16088
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16089
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16090
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2831:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16095
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:16111
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16118
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.Like)
		}
	case 2836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16119
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotLike)
		}
	case 2837:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16120
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.ILike)
		}
	case 2838:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16121
		{
			sqlVAL.union.val = treecmp.MakeComparisonOperator(treecmp.NotILike)
		}
	case 2839:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16144
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16148
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2841:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16154
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2842:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16158
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16162
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2844:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16173
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16177
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16183
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16187
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2849:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16194
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2850:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16200
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2851:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16204
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2852:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16210
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16214
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16220
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16224
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16230
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16234
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16240
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2859:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16244
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:16267
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16271
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16275
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16281
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16288
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2873:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16292
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16309
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16313
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16317
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2877:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16321
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2878:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16325
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2879:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16331
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2880:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16337
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16343
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2882:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16347
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16351
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2884:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16357
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2886:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16369
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2887:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16376
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2888:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16380
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2889:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:16386
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16392
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2891:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16396
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2893:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16403
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2894:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16409
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16413
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2897:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16420
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16426
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2899:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16430
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2900:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16435
		{
		}
	case 2901:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16436
		{
		}
	case 2902:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16440
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16444
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2904:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16450
		{
			sqlVAL.union.val = sqlDollar[1].union.selExprs()
		}
	case 2905:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16454
		{
			sqlVAL.union.val = tree.SelectExprs{}
		}
	case 2906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16460
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2907:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16469
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16473
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2909:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16477
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2912:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16489
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16493
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2914:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16499
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16503
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16522
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2917:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16530
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2918:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16553
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2920:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16562
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16566
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16570
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16574
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16580
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16584
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2930:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16599
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16603
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2934:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16615
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2935:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:16619
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2936:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16628
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2937:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16639
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2938:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16648
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16656
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2940:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16673
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2960:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16761
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16765
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2963:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16773
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16777
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2965:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16783
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16787
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2967:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16793
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2968:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16799
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name('*'), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2970:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16806
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16833
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2978:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16840
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2979:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16844
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2980:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:16848
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2982:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:16862
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16866
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16870
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2985:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16883
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2987:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16888
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16896
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:16914
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16927
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:16934
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 3002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16959
		{
			sqlVAL.str = ""
		}
	case 3003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:16965
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 3004:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:16969
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
