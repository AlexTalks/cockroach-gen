// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"math"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) roleSpec() tree.RoleSpec {
	return u.val.(tree.RoleSpec)
}
func (u *sqlSymUnion) roleSpecList() tree.RoleSpecList {
	return u.val.(tree.RoleSpecList)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) relocateSubject() tree.RelocateSubject {
	return u.val.(tree.RelocateSubject)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}

func (u *sqlSymUnion) scheduleLabelSpec() *tree.ScheduleLabelSpec {
	return u.val.(*tree.ScheduleLabelSpec)
}

func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:881
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEBUG_PAUSE_ON = lexbase.DEBUG_PAUSE_ON
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTED = lexbase.ENCRYPTED
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FORCE_ZIGZAG = lexbase.FORCE_ZIGZAG
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INCREMENTAL_STORAGE = lexbase.INCREMENTAL_STORAGE
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEW_DB_NAME = lexbase.NEW_DB_NAME
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NO_FULL_SCAN = lexbase.NO_FULL_SCAN
const NONE = lexbase.NONE
const NONVOTERS = lexbase.NONVOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOVIEWACTIVITYREDACTED = lexbase.NOVIEWACTIVITYREDACTED
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const RELOCATE = lexbase.RELOCATE
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIEWACTIVITYREDACTED = lexbase.VIEWACTIVITYREDACTED
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const INTERVAL_SIMPLE = lexbase.INTERVAL_SIMPLE
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEBUG_PAUSE_ON",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTED",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPERIMENTAL_RELOCATE",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FORCE_ZIGZAG",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INCREMENTAL_STORAGE",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEW_DB_NAME",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NO_FULL_SCAN",
	"NONE",
	"NONVOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOVIEWACTIVITYREDACTED",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"RELOCATE",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIEWACTIVITYREDACTED",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"INTERVAL_SIMPLE",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13845

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1607,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	263, 418,
	-2, 0,
	-1, 74,
	245, 248,
	521, 248,
	-2, 0,
	-1, 88,
	234, 1343,
	247, 1343,
	263, 414,
	395, 414,
	406, 1096,
	446, 414,
	459, 1096,
	506, 1096,
	532, 414,
	558, 1096,
	-2, 0,
	-1, 94,
	133, 1607,
	240, 1607,
	543, 1607,
	544, 1607,
	-2, 0,
	-1, 112,
	152, 1578,
	172, 1578,
	185, 1578,
	243, 1578,
	276, 1578,
	346, 1578,
	356, 1578,
	538, 1578,
	-2, 1549,
	-1, 153,
	160, 935,
	262, 935,
	398, 896,
	464, 896,
	505, 896,
	524, 935,
	526, 896,
	-2, 0,
	-1, 157,
	4, 1609,
	21, 1609,
	22, 1609,
	23, 1609,
	24, 1609,
	25, 1609,
	26, 1609,
	27, 1609,
	29, 1609,
	30, 1609,
	36, 1609,
	41, 1609,
	42, 1609,
	44, 1609,
	45, 1609,
	46, 1609,
	47, 1609,
	48, 1609,
	49, 1609,
	50, 1609,
	51, 1609,
	53, 1609,
	54, 1609,
	55, 1609,
	56, 1609,
	58, 1609,
	59, 1609,
	60, 1609,
	61, 1609,
	62, 1609,
	63, 1609,
	64, 1609,
	68, 1609,
	69, 1609,
	70, 1609,
	71, 1609,
	73, 1609,
	74, 1609,
	75, 1609,
	79, 1609,
	80, 1609,
	81, 1609,
	82, 1609,
	83, 1609,
	84, 1609,
	85, 1609,
	88, 1609,
	89, 1609,
	90, 1609,
	91, 1609,
	92, 1609,
	94, 1609,
	96, 1609,
	97, 1609,
	98, 1609,
	99, 1609,
	100, 1609,
	101, 1609,
	103, 1609,
	104, 1609,
	105, 1609,
	107, 1609,
	108, 1609,
	109, 1609,
	117, 1609,
	118, 1609,
	119, 1609,
	120, 1609,
	121, 1609,
	123, 1609,
	124, 1609,
	125, 1609,
	126, 1609,
	128, 1609,
	129, 1609,
	130, 1609,
	132, 1609,
	133, 1609,
	134, 1609,
	136, 1609,
	137, 1609,
	138, 1609,
	141, 1609,
	142, 1609,
	143, 1609,
	145, 1609,
	146, 1609,
	147, 1609,
	149, 1609,
	150, 1609,
	151, 1609,
	153, 1609,
	154, 1609,
	155, 1609,
	156, 1609,
	157, 1609,
	158, 1609,
	159, 1609,
	160, 1609,
	161, 1609,
	162, 1609,
	163, 1609,
	164, 1609,
	165, 1609,
	166, 1609,
	167, 1609,
	168, 1609,
	169, 1609,
	171, 1609,
	177, 1609,
	178, 1609,
	179, 1609,
	180, 1609,
	184, 1609,
	186, 1609,
	187, 1609,
	188, 1609,
	192, 1609,
	193, 1609,
	194, 1609,
	195, 1609,
	196, 1609,
	197, 1609,
	198, 1609,
	199, 1609,
	200, 1609,
	201, 1609,
	202, 1609,
	203, 1609,
	204, 1609,
	205, 1609,
	207, 1609,
	208, 1609,
	210, 1609,
	211, 1609,
	213, 1609,
	214, 1609,
	215, 1609,
	216, 1609,
	217, 1609,
	218, 1609,
	219, 1609,
	220, 1609,
	221, 1609,
	223, 1609,
	224, 1609,
	226, 1609,
	227, 1609,
	228, 1609,
	229, 1609,
	230, 1609,
	234, 1609,
	235, 1609,
	236, 1609,
	237, 1609,
	240, 1609,
	241, 1609,
	242, 1609,
	244, 1609,
	246, 1609,
	247, 1609,
	249, 1609,
	251, 1609,
	252, 1609,
	253, 1609,
	255, 1609,
	259, 1609,
	260, 1609,
	261, 1609,
	262, 1609,
	263, 1609,
	264, 1609,
	266, 1609,
	267, 1609,
	268, 1609,
	270, 1609,
	271, 1609,
	273, 1609,
	274, 1609,
	277, 1609,
	278, 1609,
	279, 1609,
	280, 1609,
	281, 1609,
	282, 1609,
	283, 1609,
	286, 1609,
	287, 1609,
	288, 1609,
	289, 1609,
	291, 1609,
	292, 1609,
	293, 1609,
	294, 1609,
	295, 1609,
	296, 1609,
	297, 1609,
	298, 1609,
	299, 1609,
	300, 1609,
	301, 1609,
	302, 1609,
	303, 1609,
	304, 1609,
	305, 1609,
	306, 1609,
	307, 1609,
	308, 1609,
	309, 1609,
	310, 1609,
	311, 1609,
	312, 1609,
	314, 1609,
	316, 1609,
	317, 1609,
	318, 1609,
	319, 1609,
	320, 1609,
	321, 1609,
	322, 1609,
	323, 1609,
	324, 1609,
	325, 1609,
	326, 1609,
	327, 1609,
	328, 1609,
	329, 1609,
	330, 1609,
	332, 1609,
	333, 1609,
	335, 1609,
	337, 1609,
	338, 1609,
	339, 1609,
	341, 1609,
	342, 1609,
	343, 1609,
	344, 1609,
	345, 1609,
	348, 1609,
	351, 1609,
	352, 1609,
	353, 1609,
	354, 1609,
	357, 1609,
	358, 1609,
	359, 1609,
	361, 1609,
	363, 1609,
	364, 1609,
	365, 1609,
	366, 1609,
	367, 1609,
	368, 1609,
	369, 1609,
	370, 1609,
	371, 1609,
	372, 1609,
	373, 1609,
	374, 1609,
	375, 1609,
	377, 1609,
	378, 1609,
	379, 1609,
	380, 1609,
	381, 1609,
	382, 1609,
	383, 1609,
	384, 1609,
	385, 1609,
	386, 1609,
	387, 1609,
	388, 1609,
	389, 1609,
	390, 1609,
	391, 1609,
	393, 1609,
	394, 1609,
	396, 1609,
	397, 1609,
	398, 1609,
	399, 1609,
	400, 1609,
	401, 1609,
	402, 1609,
	403, 1609,
	404, 1609,
	405, 1609,
	406, 1609,
	407, 1609,
	408, 1609,
	410, 1609,
	412, 1609,
	413, 1609,
	414, 1609,
	420, 1609,
	421, 1609,
	423, 1609,
	424, 1609,
	425, 1609,
	426, 1609,
	427, 1609,
	428, 1609,
	429, 1609,
	430, 1609,
	431, 1609,
	432, 1609,
	434, 1609,
	435, 1609,
	436, 1609,
	438, 1609,
	439, 1609,
	440, 1609,
	441, 1609,
	442, 1609,
	443, 1609,
	444, 1609,
	446, 1609,
	447, 1609,
	448, 1609,
	449, 1609,
	450, 1609,
	451, 1609,
	452, 1609,
	453, 1609,
	454, 1609,
	455, 1609,
	456, 1609,
	457, 1609,
	459, 1609,
	460, 1609,
	461, 1609,
	462, 1609,
	463, 1609,
	464, 1609,
	466, 1609,
	467, 1609,
	468, 1609,
	469, 1609,
	470, 1609,
	471, 1609,
	473, 1609,
	474, 1609,
	475, 1609,
	476, 1609,
	477, 1609,
	478, 1609,
	479, 1609,
	480, 1609,
	482, 1609,
	484, 1609,
	485, 1609,
	486, 1609,
	487, 1609,
	488, 1609,
	489, 1609,
	490, 1609,
	491, 1609,
	492, 1609,
	493, 1609,
	494, 1609,
	495, 1609,
	496, 1609,
	497, 1609,
	498, 1609,
	499, 1609,
	501, 1609,
	502, 1609,
	504, 1609,
	505, 1609,
	507, 1609,
	508, 1609,
	509, 1609,
	510, 1609,
	511, 1609,
	512, 1609,
	513, 1609,
	514, 1609,
	516, 1609,
	517, 1609,
	518, 1609,
	519, 1609,
	520, 1609,
	522, 1609,
	524, 1609,
	525, 1609,
	526, 1609,
	527, 1609,
	528, 1609,
	529, 1609,
	531, 1609,
	532, 1609,
	533, 1609,
	534, 1609,
	536, 1609,
	537, 1609,
	540, 1609,
	541, 1609,
	542, 1609,
	543, 1609,
	544, 1609,
	545, 1609,
	546, 1609,
	548, 1609,
	551, 1609,
	552, 1609,
	553, 1609,
	554, 1609,
	555, 1609,
	556, 1609,
	558, 1609,
	559, 1609,
	560, 1609,
	561, 1609,
	562, 1609,
	563, 1609,
	564, 1609,
	569, 1609,
	570, 1609,
	571, 1609,
	572, 1609,
	573, 1609,
	574, 1609,
	-2, 0,
	-1, 158,
	1, 1460,
	131, 1460,
	251, 1460,
	334, 1460,
	393, 1460,
	402, 1460,
	578, 1460,
	608, 1460,
	-2, 0,
	-1, 160,
	1, 1460,
	608, 1460,
	-2, 0,
	-1, 161,
	1, 1460,
	608, 1460,
	-2, 0,
	-1, 162,
	1, 1460,
	521, 1460,
	608, 1460,
	-2, 0,
	-1, 191,
	152, 1577,
	172, 1577,
	185, 1577,
	243, 1577,
	276, 1577,
	346, 1577,
	356, 1577,
	538, 1577,
	-2, 1552,
	-1, 238,
	4, 1616,
	5, 1616,
	6, 1616,
	7, 1616,
	8, 1616,
	9, 1616,
	10, 1616,
	21, 1616,
	22, 1616,
	23, 1616,
	24, 1616,
	25, 1616,
	26, 1616,
	27, 1616,
	29, 1616,
	30, 1616,
	36, 1616,
	37, 1616,
	41, 1616,
	42, 1616,
	43, 1616,
	44, 1616,
	45, 1616,
	46, 1616,
	47, 1616,
	48, 1616,
	49, 1616,
	50, 1616,
	51, 1616,
	53, 1616,
	54, 1616,
	55, 1616,
	56, 1616,
	58, 1616,
	59, 1616,
	60, 1616,
	61, 1616,
	62, 1616,
	63, 1616,
	64, 1616,
	65, 1616,
	66, 1616,
	67, 1616,
	68, 1616,
	69, 1616,
	70, 1616,
	71, 1616,
	73, 1616,
	74, 1616,
	75, 1616,
	77, 1616,
	79, 1616,
	80, 1616,
	81, 1616,
	82, 1616,
	83, 1616,
	84, 1616,
	85, 1616,
	88, 1616,
	89, 1616,
	90, 1616,
	91, 1616,
	92, 1616,
	94, 1616,
	96, 1616,
	97, 1616,
	98, 1616,
	99, 1616,
	100, 1616,
	101, 1616,
	103, 1616,
	104, 1616,
	105, 1616,
	106, 1616,
	107, 1616,
	108, 1616,
	109, 1616,
	110, 1616,
	111, 1616,
	112, 1616,
	113, 1616,
	114, 1616,
	115, 1616,
	116, 1616,
	117, 1616,
	118, 1616,
	119, 1616,
	120, 1616,
	121, 1616,
	122, 1616,
	123, 1616,
	124, 1616,
	125, 1616,
	126, 1616,
	127, 1616,
	128, 1616,
	129, 1616,
	130, 1616,
	132, 1616,
	133, 1616,
	134, 1616,
	136, 1616,
	137, 1616,
	138, 1616,
	141, 1616,
	142, 1616,
	143, 1616,
	145, 1616,
	146, 1616,
	147, 1616,
	149, 1616,
	150, 1616,
	151, 1616,
	153, 1616,
	154, 1616,
	155, 1616,
	156, 1616,
	157, 1616,
	158, 1616,
	159, 1616,
	160, 1616,
	161, 1616,
	162, 1616,
	163, 1616,
	164, 1616,
	165, 1616,
	166, 1616,
	167, 1616,
	168, 1616,
	169, 1616,
	170, 1616,
	171, 1616,
	177, 1616,
	178, 1616,
	179, 1616,
	180, 1616,
	184, 1616,
	186, 1616,
	187, 1616,
	188, 1616,
	191, 1616,
	192, 1616,
	193, 1616,
	194, 1616,
	195, 1616,
	196, 1616,
	197, 1616,
	198, 1616,
	199, 1616,
	200, 1616,
	201, 1616,
	202, 1616,
	203, 1616,
	204, 1616,
	205, 1616,
	207, 1616,
	208, 1616,
	210, 1616,
	211, 1616,
	213, 1616,
	214, 1616,
	215, 1616,
	216, 1616,
	217, 1616,
	218, 1616,
	219, 1616,
	220, 1616,
	221, 1616,
	222, 1616,
	223, 1616,
	224, 1616,
	226, 1616,
	227, 1616,
	228, 1616,
	229, 1616,
	230, 1616,
	234, 1616,
	235, 1616,
	236, 1616,
	237, 1616,
	239, 1616,
	240, 1616,
	241, 1616,
	242, 1616,
	244, 1616,
	246, 1616,
	247, 1616,
	248, 1616,
	249, 1616,
	250, 1616,
	251, 1616,
	252, 1616,
	253, 1616,
	254, 1616,
	255, 1616,
	259, 1616,
	260, 1616,
	261, 1616,
	262, 1616,
	263, 1616,
	264, 1616,
	266, 1616,
	267, 1616,
	268, 1616,
	270, 1616,
	271, 1616,
	272, 1616,
	273, 1616,
	274, 1616,
	275, 1616,
	277, 1616,
	278, 1616,
	279, 1616,
	280, 1616,
	281, 1616,
	282, 1616,
	283, 1616,
	284, 1616,
	285, 1616,
	286, 1616,
	287, 1616,
	288, 1616,
	289, 1616,
	291, 1616,
	292, 1616,
	293, 1616,
	294, 1616,
	295, 1616,
	296, 1616,
	297, 1616,
	298, 1616,
	299, 1616,
	300, 1616,
	301, 1616,
	302, 1616,
	303, 1616,
	304, 1616,
	305, 1616,
	306, 1616,
	307, 1616,
	308, 1616,
	309, 1616,
	310, 1616,
	311, 1616,
	312, 1616,
	314, 1616,
	315, 1616,
	316, 1616,
	317, 1616,
	318, 1616,
	319, 1616,
	320, 1616,
	321, 1616,
	322, 1616,
	323, 1616,
	324, 1616,
	325, 1616,
	326, 1616,
	327, 1616,
	328, 1616,
	329, 1616,
	330, 1616,
	331, 1616,
	332, 1616,
	333, 1616,
	334, 1616,
	335, 1616,
	336, 1616,
	337, 1616,
	338, 1616,
	339, 1616,
	340, 1616,
	341, 1616,
	342, 1616,
	343, 1616,
	344, 1616,
	345, 1616,
	348, 1616,
	352, 1616,
	353, 1616,
	354, 1616,
	357, 1616,
	358, 1616,
	359, 1616,
	360, 1616,
	361, 1616,
	362, 1616,
	363, 1616,
	364, 1616,
	365, 1616,
	366, 1616,
	367, 1616,
	368, 1616,
	369, 1616,
	370, 1616,
	371, 1616,
	372, 1616,
	373, 1616,
	374, 1616,
	375, 1616,
	377, 1616,
	378, 1616,
	379, 1616,
	380, 1616,
	381, 1616,
	382, 1616,
	383, 1616,
	384, 1616,
	385, 1616,
	386, 1616,
	387, 1616,
	388, 1616,
	389, 1616,
	390, 1616,
	391, 1616,
	393, 1616,
	394, 1616,
	396, 1616,
	397, 1616,
	398, 1616,
	399, 1616,
	400, 1616,
	401, 1616,
	402, 1616,
	403, 1616,
	404, 1616,
	405, 1616,
	406, 1616,
	407, 1616,
	408, 1616,
	410, 1616,
	412, 1616,
	413, 1616,
	414, 1616,
	420, 1616,
	421, 1616,
	423, 1616,
	424, 1616,
	425, 1616,
	426, 1616,
	427, 1616,
	428, 1616,
	429, 1616,
	430, 1616,
	431, 1616,
	432, 1616,
	434, 1616,
	435, 1616,
	436, 1616,
	437, 1616,
	438, 1616,
	439, 1616,
	440, 1616,
	441, 1616,
	442, 1616,
	443, 1616,
	444, 1616,
	446, 1616,
	447, 1616,
	448, 1616,
	449, 1616,
	450, 1616,
	451, 1616,
	452, 1616,
	453, 1616,
	454, 1616,
	455, 1616,
	456, 1616,
	457, 1616,
	459, 1616,
	460, 1616,
	461, 1616,
	462, 1616,
	463, 1616,
	464, 1616,
	465, 1616,
	466, 1616,
	467, 1616,
	468, 1616,
	469, 1616,
	470, 1616,
	471, 1616,
	472, 1616,
	473, 1616,
	474, 1616,
	475, 1616,
	476, 1616,
	477, 1616,
	478, 1616,
	479, 1616,
	480, 1616,
	482, 1616,
	484, 1616,
	485, 1616,
	486, 1616,
	487, 1616,
	488, 1616,
	489, 1616,
	490, 1616,
	491, 1616,
	492, 1616,
	493, 1616,
	494, 1616,
	495, 1616,
	496, 1616,
	497, 1616,
	498, 1616,
	499, 1616,
	501, 1616,
	502, 1616,
	503, 1616,
	504, 1616,
	505, 1616,
	507, 1616,
	508, 1616,
	509, 1616,
	510, 1616,
	511, 1616,
	512, 1616,
	513, 1616,
	514, 1616,
	516, 1616,
	517, 1616,
	518, 1616,
	519, 1616,
	520, 1616,
	522, 1616,
	524, 1616,
	525, 1616,
	526, 1616,
	527, 1616,
	528, 1616,
	529, 1616,
	530, 1616,
	531, 1616,
	532, 1616,
	533, 1616,
	534, 1616,
	536, 1616,
	537, 1616,
	539, 1616,
	540, 1616,
	541, 1616,
	542, 1616,
	543, 1616,
	544, 1616,
	545, 1616,
	546, 1616,
	547, 1616,
	548, 1616,
	551, 1616,
	552, 1616,
	553, 1616,
	554, 1616,
	555, 1616,
	556, 1616,
	558, 1616,
	559, 1616,
	560, 1616,
	561, 1616,
	562, 1616,
	563, 1616,
	564, 1616,
	569, 1616,
	570, 1616,
	571, 1616,
	572, 1616,
	573, 1616,
	574, 1616,
	575, 1616,
	588, 1616,
	595, 1616,
	596, 1616,
	597, 1616,
	605, 1616,
	609, 1616,
	-2, 0,
	-1, 755,
	4, 1341,
	21, 1341,
	22, 1341,
	23, 1341,
	24, 1341,
	25, 1341,
	26, 1341,
	27, 1341,
	29, 1341,
	30, 1341,
	36, 1341,
	41, 1341,
	42, 1341,
	44, 1341,
	45, 1341,
	46, 1341,
	47, 1341,
	48, 1341,
	49, 1341,
	50, 1341,
	51, 1341,
	53, 1341,
	54, 1341,
	55, 1341,
	56, 1341,
	58, 1341,
	59, 1341,
	60, 1341,
	61, 1341,
	62, 1341,
	63, 1341,
	64, 1341,
	68, 1341,
	69, 1341,
	70, 1341,
	71, 1341,
	73, 1341,
	74, 1341,
	75, 1341,
	79, 1341,
	80, 1341,
	81, 1341,
	82, 1341,
	83, 1341,
	84, 1341,
	85, 1341,
	88, 1341,
	89, 1341,
	90, 1341,
	91, 1341,
	92, 1341,
	94, 1341,
	96, 1341,
	97, 1341,
	98, 1341,
	99, 1341,
	100, 1341,
	101, 1341,
	103, 1341,
	104, 1341,
	105, 1341,
	107, 1341,
	108, 1341,
	109, 1341,
	117, 1341,
	118, 1341,
	119, 1341,
	120, 1341,
	121, 1341,
	123, 1341,
	124, 1341,
	125, 1341,
	126, 1341,
	128, 1341,
	129, 1341,
	130, 1341,
	132, 1341,
	133, 1341,
	134, 1341,
	136, 1341,
	137, 1341,
	138, 1341,
	141, 1341,
	142, 1341,
	143, 1341,
	145, 1341,
	146, 1341,
	147, 1341,
	149, 1341,
	150, 1341,
	151, 1341,
	153, 1341,
	154, 1341,
	155, 1341,
	156, 1341,
	157, 1341,
	158, 1341,
	159, 1341,
	160, 1341,
	161, 1341,
	162, 1341,
	163, 1341,
	164, 1341,
	165, 1341,
	166, 1341,
	167, 1341,
	168, 1341,
	169, 1341,
	171, 1341,
	177, 1341,
	178, 1341,
	179, 1341,
	180, 1341,
	184, 1341,
	186, 1341,
	187, 1341,
	188, 1341,
	192, 1341,
	193, 1341,
	194, 1341,
	195, 1341,
	196, 1341,
	197, 1341,
	198, 1341,
	199, 1341,
	200, 1341,
	201, 1341,
	202, 1341,
	203, 1341,
	204, 1341,
	205, 1341,
	207, 1341,
	208, 1341,
	210, 1341,
	211, 1341,
	213, 1341,
	214, 1341,
	215, 1341,
	216, 1341,
	217, 1341,
	218, 1341,
	219, 1341,
	220, 1341,
	221, 1341,
	223, 1341,
	224, 1341,
	226, 1341,
	227, 1341,
	228, 1341,
	229, 1341,
	230, 1341,
	234, 1341,
	235, 1341,
	236, 1341,
	237, 1341,
	240, 1341,
	241, 1341,
	242, 1341,
	244, 1341,
	246, 1341,
	247, 1341,
	249, 1341,
	251, 1341,
	252, 1341,
	253, 1341,
	255, 1341,
	259, 1341,
	260, 1341,
	261, 1341,
	262, 1341,
	263, 1341,
	264, 1341,
	266, 1341,
	267, 1341,
	268, 1341,
	270, 1341,
	271, 1341,
	273, 1341,
	274, 1341,
	277, 1341,
	278, 1341,
	279, 1341,
	280, 1341,
	281, 1341,
	282, 1341,
	283, 1341,
	286, 1341,
	287, 1341,
	288, 1341,
	289, 1341,
	291, 1341,
	292, 1341,
	293, 1341,
	294, 1341,
	295, 1341,
	296, 1341,
	297, 1341,
	298, 1341,
	299, 1341,
	300, 1341,
	301, 1341,
	302, 1341,
	303, 1341,
	304, 1341,
	305, 1341,
	306, 1341,
	307, 1341,
	308, 1341,
	309, 1341,
	310, 1341,
	311, 1341,
	312, 1341,
	314, 1341,
	316, 1341,
	317, 1341,
	318, 1341,
	319, 1341,
	320, 1341,
	321, 1341,
	322, 1341,
	323, 1341,
	324, 1341,
	325, 1341,
	326, 1341,
	327, 1341,
	328, 1341,
	329, 1341,
	330, 1341,
	332, 1341,
	333, 1341,
	335, 1341,
	337, 1341,
	338, 1341,
	339, 1341,
	341, 1341,
	342, 1341,
	343, 1341,
	344, 1341,
	345, 1341,
	348, 1341,
	352, 1341,
	353, 1341,
	354, 1341,
	357, 1341,
	358, 1341,
	359, 1341,
	361, 1341,
	363, 1341,
	364, 1341,
	365, 1341,
	366, 1341,
	367, 1341,
	368, 1341,
	369, 1341,
	370, 1341,
	371, 1341,
	372, 1341,
	373, 1341,
	374, 1341,
	375, 1341,
	377, 1341,
	378, 1341,
	379, 1341,
	380, 1341,
	381, 1341,
	382, 1341,
	383, 1341,
	384, 1341,
	385, 1341,
	386, 1341,
	387, 1341,
	388, 1341,
	389, 1341,
	390, 1341,
	391, 1341,
	393, 1341,
	394, 1341,
	396, 1341,
	397, 1341,
	398, 1341,
	399, 1341,
	400, 1341,
	401, 1341,
	402, 1341,
	403, 1341,
	404, 1341,
	405, 1341,
	406, 1341,
	407, 1341,
	408, 1341,
	410, 1341,
	412, 1341,
	413, 1341,
	414, 1341,
	420, 1341,
	421, 1341,
	423, 1341,
	424, 1341,
	425, 1341,
	426, 1341,
	427, 1341,
	428, 1341,
	429, 1341,
	430, 1341,
	431, 1341,
	432, 1341,
	434, 1341,
	435, 1341,
	436, 1341,
	438, 1341,
	439, 1341,
	440, 1341,
	441, 1341,
	442, 1341,
	443, 1341,
	444, 1341,
	446, 1341,
	447, 1341,
	448, 1341,
	449, 1341,
	450, 1341,
	451, 1341,
	452, 1341,
	453, 1341,
	454, 1341,
	455, 1341,
	456, 1341,
	457, 1341,
	459, 1341,
	460, 1341,
	461, 1341,
	462, 1341,
	463, 1341,
	464, 1341,
	466, 1341,
	467, 1341,
	468, 1341,
	469, 1341,
	470, 1341,
	471, 1341,
	473, 1341,
	474, 1341,
	475, 1341,
	476, 1341,
	477, 1341,
	478, 1341,
	479, 1341,
	480, 1341,
	482, 1341,
	484, 1341,
	485, 1341,
	486, 1341,
	487, 1341,
	488, 1341,
	489, 1341,
	490, 1341,
	491, 1341,
	492, 1341,
	493, 1341,
	494, 1341,
	495, 1341,
	496, 1341,
	497, 1341,
	498, 1341,
	499, 1341,
	501, 1341,
	502, 1341,
	504, 1341,
	505, 1341,
	507, 1341,
	508, 1341,
	509, 1341,
	510, 1341,
	511, 1341,
	512, 1341,
	513, 1341,
	514, 1341,
	516, 1341,
	517, 1341,
	518, 1341,
	519, 1341,
	520, 1341,
	522, 1341,
	524, 1341,
	525, 1341,
	526, 1341,
	527, 1341,
	528, 1341,
	529, 1341,
	531, 1341,
	532, 1341,
	533, 1341,
	534, 1341,
	536, 1341,
	537, 1341,
	540, 1341,
	541, 1341,
	542, 1341,
	543, 1341,
	544, 1341,
	545, 1341,
	546, 1341,
	548, 1341,
	551, 1341,
	552, 1341,
	553, 1341,
	554, 1341,
	555, 1341,
	556, 1341,
	558, 1341,
	559, 1341,
	560, 1341,
	561, 1341,
	562, 1341,
	563, 1341,
	564, 1341,
	569, 1341,
	570, 1341,
	571, 1341,
	572, 1341,
	573, 1341,
	574, 1341,
	-2, 0,
	-1, 774,
	190, 2408,
	521, 2408,
	587, 2408,
	607, 2408,
	-2, 0,
	-1, 775,
	190, 2395,
	521, 2395,
	587, 2395,
	607, 2395,
	-2, 0,
	-1, 777,
	190, 2661,
	521, 2661,
	587, 2661,
	607, 2661,
	-2, 0,
	-1, 780,
	190, 2520,
	521, 2520,
	587, 2520,
	607, 2520,
	-2, 0,
	-1, 781,
	190, 2702,
	521, 2702,
	587, 2702,
	607, 2702,
	-2, 0,
	-1, 789,
	190, 2547,
	521, 2547,
	587, 2547,
	607, 2547,
	-2, 717,
	-1, 824,
	607, 2344,
	610, 2344,
	-2, 1017,
	-1, 825,
	607, 2346,
	610, 2346,
	-2, 1018,
	-1, 826,
	607, 2345,
	610, 2345,
	-2, 1019,
	-1, 827,
	610, 2270,
	-2, 1020,
	-1, 852,
	185, 267,
	-2, 0,
	-1, 876,
	43, 2317,
	-2, 0,
	-1, 877,
	558, 1319,
	-2, 1097,
	-1, 893,
	4, 1750,
	21, 1750,
	22, 1750,
	23, 1750,
	24, 1750,
	25, 1750,
	26, 1750,
	27, 1750,
	29, 1750,
	30, 1750,
	36, 1750,
	41, 1750,
	42, 1750,
	44, 1750,
	45, 1750,
	46, 1750,
	47, 1750,
	48, 1750,
	49, 1750,
	50, 1750,
	51, 1750,
	53, 1750,
	54, 1750,
	55, 1750,
	56, 1750,
	58, 1750,
	59, 1750,
	60, 1750,
	61, 1750,
	62, 1750,
	63, 1750,
	64, 1750,
	68, 1750,
	69, 1750,
	70, 1750,
	71, 1750,
	73, 1750,
	74, 1750,
	75, 1750,
	79, 1750,
	80, 1750,
	81, 1750,
	82, 1750,
	83, 1750,
	84, 1750,
	85, 1750,
	88, 1750,
	89, 1750,
	90, 1750,
	91, 1750,
	92, 1750,
	94, 1750,
	96, 1750,
	97, 1750,
	98, 1750,
	99, 1750,
	100, 1750,
	101, 1750,
	103, 1750,
	104, 1750,
	105, 1750,
	107, 1750,
	108, 1750,
	109, 1750,
	117, 1750,
	118, 1750,
	119, 1750,
	120, 1750,
	121, 1750,
	123, 1750,
	124, 1750,
	125, 1750,
	126, 1750,
	128, 1750,
	129, 1750,
	130, 1750,
	132, 1750,
	133, 1750,
	134, 1750,
	136, 1750,
	137, 1750,
	138, 1750,
	141, 1750,
	142, 1750,
	143, 1750,
	145, 1750,
	146, 1750,
	147, 1750,
	149, 1750,
	150, 1750,
	151, 1750,
	153, 1750,
	154, 1750,
	155, 1750,
	156, 1750,
	157, 1750,
	158, 1750,
	159, 1750,
	160, 1750,
	161, 1750,
	162, 1750,
	163, 1750,
	164, 1750,
	165, 1750,
	166, 1750,
	167, 1750,
	168, 1750,
	169, 1750,
	171, 1750,
	177, 1750,
	178, 1750,
	179, 1750,
	180, 1750,
	184, 1750,
	186, 1750,
	187, 1750,
	188, 1750,
	192, 1750,
	193, 1750,
	194, 1750,
	195, 1750,
	196, 1750,
	197, 1750,
	198, 1750,
	199, 1750,
	200, 1750,
	201, 1750,
	202, 1750,
	203, 1750,
	204, 1750,
	205, 1750,
	207, 1750,
	208, 1750,
	210, 1750,
	211, 1750,
	213, 1750,
	214, 1750,
	215, 1750,
	216, 1750,
	217, 1750,
	218, 1750,
	219, 1750,
	220, 1750,
	221, 1750,
	223, 1750,
	224, 1750,
	226, 1750,
	227, 1750,
	228, 1750,
	229, 1750,
	230, 1750,
	234, 1750,
	235, 1750,
	236, 1750,
	237, 1750,
	240, 1750,
	241, 1750,
	242, 1750,
	244, 1750,
	246, 1750,
	247, 1750,
	249, 1750,
	251, 1750,
	252, 1750,
	253, 1750,
	255, 1750,
	259, 1750,
	260, 1750,
	261, 1750,
	262, 1750,
	263, 1750,
	264, 1750,
	266, 1750,
	267, 1750,
	268, 1750,
	270, 1750,
	271, 1750,
	273, 1750,
	274, 1750,
	277, 1750,
	278, 1750,
	279, 1750,
	280, 1750,
	281, 1750,
	282, 1750,
	283, 1750,
	286, 1750,
	287, 1750,
	288, 1750,
	289, 1750,
	291, 1750,
	292, 1750,
	293, 1750,
	294, 1750,
	295, 1750,
	296, 1750,
	297, 1750,
	298, 1750,
	299, 1750,
	300, 1750,
	301, 1750,
	302, 1750,
	303, 1750,
	304, 1750,
	305, 1750,
	306, 1750,
	307, 1750,
	308, 1750,
	309, 1750,
	310, 1750,
	311, 1750,
	312, 1750,
	314, 1750,
	316, 1750,
	317, 1750,
	318, 1750,
	319, 1750,
	320, 1750,
	321, 1750,
	322, 1750,
	323, 1750,
	324, 1750,
	325, 1750,
	326, 1750,
	327, 1750,
	328, 1750,
	329, 1750,
	330, 1750,
	332, 1750,
	333, 1750,
	335, 1750,
	337, 1750,
	338, 1750,
	339, 1750,
	341, 1750,
	342, 1750,
	343, 1750,
	344, 1750,
	345, 1750,
	348, 1750,
	352, 1750,
	353, 1750,
	354, 1750,
	357, 1750,
	358, 1750,
	359, 1750,
	361, 1750,
	363, 1750,
	364, 1750,
	365, 1750,
	366, 1750,
	367, 1750,
	368, 1750,
	369, 1750,
	370, 1750,
	371, 1750,
	372, 1750,
	373, 1750,
	374, 1750,
	375, 1750,
	377, 1750,
	378, 1750,
	379, 1750,
	380, 1750,
	381, 1750,
	382, 1750,
	383, 1750,
	384, 1750,
	385, 1750,
	386, 1750,
	387, 1750,
	388, 1750,
	389, 1750,
	390, 1750,
	391, 1750,
	393, 1750,
	394, 1750,
	396, 1750,
	397, 1750,
	398, 1750,
	399, 1750,
	400, 1750,
	401, 1750,
	402, 1750,
	403, 1750,
	404, 1750,
	405, 1750,
	406, 1750,
	407, 1750,
	408, 1750,
	410, 1750,
	412, 1750,
	413, 1750,
	414, 1750,
	420, 1750,
	421, 1750,
	423, 1750,
	424, 1750,
	425, 1750,
	426, 1750,
	427, 1750,
	428, 1750,
	429, 1750,
	430, 1750,
	431, 1750,
	432, 1750,
	434, 1750,
	435, 1750,
	436, 1750,
	438, 1750,
	439, 1750,
	440, 1750,
	441, 1750,
	442, 1750,
	443, 1750,
	444, 1750,
	446, 1750,
	447, 1750,
	448, 1750,
	449, 1750,
	450, 1750,
	451, 1750,
	452, 1750,
	453, 1750,
	454, 1750,
	455, 1750,
	456, 1750,
	457, 1750,
	459, 1750,
	460, 1750,
	461, 1750,
	462, 1750,
	463, 1750,
	464, 1750,
	466, 1750,
	467, 1750,
	468, 1750,
	469, 1750,
	470, 1750,
	471, 1750,
	473, 1750,
	474, 1750,
	475, 1750,
	476, 1750,
	477, 1750,
	478, 1750,
	479, 1750,
	480, 1750,
	482, 1750,
	484, 1750,
	485, 1750,
	486, 1750,
	487, 1750,
	488, 1750,
	489, 1750,
	490, 1750,
	491, 1750,
	492, 1750,
	493, 1750,
	494, 1750,
	495, 1750,
	496, 1750,
	497, 1750,
	498, 1750,
	499, 1750,
	501, 1750,
	502, 1750,
	504, 1750,
	505, 1750,
	507, 1750,
	508, 1750,
	509, 1750,
	510, 1750,
	511, 1750,
	512, 1750,
	513, 1750,
	514, 1750,
	516, 1750,
	517, 1750,
	518, 1750,
	519, 1750,
	520, 1750,
	522, 1750,
	524, 1750,
	525, 1750,
	526, 1750,
	527, 1750,
	528, 1750,
	529, 1750,
	531, 1750,
	532, 1750,
	533, 1750,
	534, 1750,
	536, 1750,
	537, 1750,
	540, 1750,
	541, 1750,
	542, 1750,
	543, 1750,
	544, 1750,
	545, 1750,
	546, 1750,
	548, 1750,
	551, 1750,
	552, 1750,
	553, 1750,
	554, 1750,
	555, 1750,
	556, 1750,
	558, 1750,
	559, 1750,
	560, 1750,
	561, 1750,
	562, 1750,
	563, 1750,
	564, 1750,
	569, 1750,
	570, 1750,
	571, 1750,
	572, 1750,
	573, 1750,
	574, 1750,
	-2, 0,
	-1, 903,
	263, 418,
	-2, 0,
	-1, 980,
	398, 897,
	464, 897,
	505, 897,
	526, 897,
	-2, 0,
	-1, 981,
	398, 896,
	464, 896,
	505, 896,
	526, 896,
	-2, 828,
	-1, 985,
	1, 949,
	604, 949,
	606, 949,
	608, 949,
	-2, 0,
	-1, 987,
	1, 871,
	604, 871,
	606, 871,
	608, 871,
	-2, 0,
	-1, 988,
	1, 875,
	604, 875,
	606, 875,
	608, 875,
	-2, 0,
	-1, 989,
	1, 1016,
	185, 1016,
	604, 1016,
	606, 1016,
	608, 1016,
	-2, 0,
	-1, 997,
	1, 902,
	604, 902,
	606, 902,
	608, 902,
	-2, 0,
	-1, 1004,
	1, 949,
	604, 949,
	606, 949,
	608, 949,
	-2, 0,
	-1, 1005,
	1, 951,
	604, 951,
	606, 951,
	608, 951,
	-2, 0,
	-1, 1006,
	1, 954,
	604, 954,
	606, 954,
	608, 954,
	-2, 0,
	-1, 1012,
	1, 980,
	604, 980,
	606, 980,
	608, 980,
	-2, 0,
	-1, 1013,
	1, 982,
	604, 982,
	606, 982,
	608, 982,
	-2, 0,
	-1, 1018,
	1, 1010,
	604, 1010,
	606, 1010,
	608, 1010,
	-2, 0,
	-1, 1070,
	172, 1620,
	185, 1620,
	276, 1620,
	346, 1620,
	-2, 1556,
	-1, 1085,
	172, 1619,
	185, 1619,
	276, 1619,
	346, 1619,
	-2, 1553,
	-1, 1112,
	607, 2343,
	-2, 725,
	-1, 1141,
	5, 2335,
	605, 2333,
	-2, 2324,
	-1, 1149,
	5, 2356,
	605, 2353,
	-2, 2344,
	-1, 1150,
	5, 2357,
	605, 2354,
	-2, 2345,
	-1, 1158,
	607, 2341,
	-2, 2323,
	-1, 1159,
	605, 2787,
	-2, 2342,
	-1, 1182,
	605, 2786,
	-2, 2358,
	-1, 1183,
	5, 1825,
	-2, 2757,
	-1, 1184,
	5, 1826,
	-2, 2758,
	-1, 1185,
	5, 1827,
	-2, 2772,
	-1, 1186,
	5, 1828,
	-2, 2736,
	-1, 1187,
	5, 1829,
	-2, 2770,
	-1, 1188,
	5, 1837,
	-2, 2749,
	-1, 1189,
	5, 1824,
	-2, 2745,
	-1, 1190,
	5, 1824,
	-2, 2744,
	-1, 1191,
	5, 1824,
	-2, 2763,
	-1, 1192,
	5, 1835,
	-2, 2738,
	-1, 1193,
	5, 1840,
	-2, 2737,
	-1, 1194,
	5, 1842,
	-2, 2782,
	-1, 1197,
	5, 1864,
	-2, 2775,
	-1, 1198,
	5, 1856,
	-2, 2776,
	-1, 1199,
	5, 1864,
	-2, 2777,
	-1, 1200,
	5, 1860,
	-2, 2778,
	-1, 1201,
	5, 1810,
	-2, 2750,
	-1, 1202,
	5, 1811,
	-2, 2751,
	-1, 1203,
	5, 1812,
	-2, 2739,
	-1, 1231,
	5, 1847,
	-2, 2783,
	-1, 1232,
	5, 1848,
	-2, 2773,
	-1, 1233,
	5, 1849,
	559, 1849,
	-2, 2740,
	-1, 1234,
	5, 1850,
	559, 1850,
	-2, 2741,
	-1, 1271,
	605, 2353,
	-2, 2344,
	-1, 1272,
	605, 2354,
	-2, 2345,
	-1, 1369,
	190, 2702,
	521, 2702,
	587, 2702,
	607, 2702,
	-2, 0,
	-1, 1374,
	1, 701,
	608, 701,
	-2, 1468,
	-1, 1504,
	365, 2318,
	423, 2318,
	466, 2318,
	597, 2318,
	-2, 2308,
	-1, 1510,
	190, 129,
	270, 129,
	332, 129,
	564, 129,
	-2, 2698,
	-1, 1511,
	190, 130,
	270, 130,
	332, 130,
	564, 130,
	-2, 2453,
	-1, 1512,
	190, 131,
	270, 131,
	332, 131,
	564, 131,
	-2, 2623,
	-1, 1518,
	609, 2318,
	-2, 2320,
	-1, 1526,
	1, 1316,
	428, 1275,
	466, 1275,
	581, 1275,
	604, 1316,
	606, 1316,
	608, 1316,
	-2, 1605,
	-1, 1532,
	206, 1413,
	225, 1413,
	436, 1413,
	-2, 0,
	-1, 1588,
	406, 1096,
	558, 1096,
	-2, 413,
	-1, 1605,
	43, 2316,
	-2, 1062,
	-1, 1612,
	1, 1316,
	604, 1316,
	606, 1316,
	608, 1316,
	-2, 1605,
	-1, 1620,
	4, 1341,
	21, 1341,
	22, 1341,
	23, 1341,
	24, 1341,
	25, 1341,
	26, 1341,
	27, 1341,
	29, 1341,
	30, 1341,
	36, 1341,
	41, 1341,
	42, 1341,
	44, 1341,
	45, 1341,
	46, 1341,
	47, 1341,
	48, 1341,
	49, 1341,
	50, 1341,
	51, 1341,
	53, 1341,
	54, 1341,
	55, 1341,
	56, 1341,
	58, 1341,
	59, 1341,
	60, 1341,
	61, 1341,
	62, 1341,
	63, 1341,
	64, 1341,
	68, 1341,
	69, 1341,
	70, 1341,
	71, 1341,
	73, 1341,
	74, 1341,
	75, 1341,
	79, 1341,
	80, 1341,
	81, 1341,
	82, 1341,
	83, 1341,
	84, 1341,
	85, 1341,
	88, 1341,
	89, 1341,
	90, 1341,
	91, 1341,
	92, 1341,
	94, 1341,
	96, 1341,
	97, 1341,
	98, 1341,
	99, 1341,
	100, 1341,
	101, 1341,
	103, 1341,
	104, 1341,
	105, 1341,
	107, 1341,
	108, 1341,
	109, 1341,
	117, 1341,
	118, 1341,
	119, 1341,
	120, 1341,
	121, 1341,
	123, 1341,
	124, 1341,
	125, 1341,
	126, 1341,
	128, 1341,
	129, 1341,
	130, 1341,
	132, 1341,
	133, 1341,
	134, 1341,
	136, 1341,
	137, 1341,
	138, 1341,
	141, 1341,
	142, 1341,
	143, 1341,
	145, 1341,
	146, 1341,
	147, 1341,
	149, 1341,
	150, 1341,
	151, 1341,
	153, 1341,
	154, 1341,
	155, 1341,
	156, 1341,
	157, 1341,
	158, 1341,
	159, 1341,
	160, 1341,
	161, 1341,
	162, 1341,
	163, 1341,
	164, 1341,
	165, 1341,
	166, 1341,
	167, 1341,
	168, 1341,
	169, 1341,
	177, 1341,
	178, 1341,
	179, 1341,
	180, 1341,
	184, 1341,
	186, 1341,
	187, 1341,
	188, 1341,
	192, 1341,
	193, 1341,
	194, 1341,
	195, 1341,
	196, 1341,
	197, 1341,
	198, 1341,
	199, 1341,
	200, 1341,
	201, 1341,
	202, 1341,
	203, 1341,
	204, 1341,
	205, 1341,
	207, 1341,
	208, 1341,
	210, 1341,
	211, 1341,
	213, 1341,
	214, 1341,
	215, 1341,
	216, 1341,
	217, 1341,
	218, 1341,
	219, 1341,
	220, 1341,
	221, 1341,
	223, 1341,
	224, 1341,
	226, 1341,
	227, 1341,
	228, 1341,
	229, 1341,
	230, 1341,
	235, 1341,
	236, 1341,
	237, 1341,
	240, 1341,
	241, 1341,
	242, 1341,
	244, 1341,
	246, 1341,
	247, 1341,
	249, 1341,
	251, 1341,
	252, 1341,
	253, 1341,
	255, 1341,
	259, 1341,
	260, 1341,
	261, 1341,
	262, 1341,
	263, 1341,
	264, 1341,
	266, 1341,
	267, 1341,
	268, 1341,
	270, 1341,
	271, 1341,
	273, 1341,
	274, 1341,
	277, 1341,
	278, 1341,
	279, 1341,
	280, 1341,
	281, 1341,
	282, 1341,
	283, 1341,
	286, 1341,
	287, 1341,
	288, 1341,
	289, 1341,
	291, 1341,
	292, 1341,
	293, 1341,
	294, 1341,
	295, 1341,
	296, 1341,
	297, 1341,
	298, 1341,
	299, 1341,
	300, 1341,
	301, 1341,
	302, 1341,
	303, 1341,
	304, 1341,
	305, 1341,
	306, 1341,
	307, 1341,
	308, 1341,
	309, 1341,
	310, 1341,
	311, 1341,
	312, 1341,
	314, 1341,
	316, 1341,
	317, 1341,
	318, 1341,
	319, 1341,
	320, 1341,
	321, 1341,
	322, 1341,
	323, 1341,
	324, 1341,
	325, 1341,
	326, 1341,
	327, 1341,
	328, 1341,
	329, 1341,
	330, 1341,
	332, 1341,
	333, 1341,
	337, 1341,
	338, 1341,
	339, 1341,
	341, 1341,
	342, 1341,
	343, 1341,
	344, 1341,
	345, 1341,
	348, 1341,
	350, 1341,
	352, 1341,
	353, 1341,
	354, 1341,
	357, 1341,
	358, 1341,
	359, 1341,
	361, 1341,
	363, 1341,
	364, 1341,
	365, 1341,
	366, 1341,
	367, 1341,
	368, 1341,
	369, 1341,
	370, 1341,
	371, 1341,
	372, 1341,
	373, 1341,
	374, 1341,
	375, 1341,
	377, 1341,
	378, 1341,
	379, 1341,
	380, 1341,
	381, 1341,
	382, 1341,
	383, 1341,
	384, 1341,
	385, 1341,
	386, 1341,
	387, 1341,
	388, 1341,
	389, 1341,
	390, 1341,
	391, 1341,
	393, 1341,
	394, 1341,
	396, 1341,
	397, 1341,
	398, 1341,
	399, 1341,
	400, 1341,
	401, 1341,
	402, 1341,
	403, 1341,
	404, 1341,
	405, 1341,
	406, 1341,
	407, 1341,
	408, 1341,
	410, 1341,
	412, 1341,
	413, 1341,
	414, 1341,
	420, 1341,
	421, 1341,
	423, 1341,
	424, 1341,
	425, 1341,
	426, 1341,
	427, 1341,
	428, 1341,
	429, 1341,
	430, 1341,
	431, 1341,
	432, 1341,
	434, 1341,
	435, 1341,
	436, 1341,
	438, 1341,
	439, 1341,
	440, 1341,
	441, 1341,
	442, 1341,
	443, 1341,
	444, 1341,
	446, 1341,
	447, 1341,
	448, 1341,
	449, 1341,
	450, 1341,
	451, 1341,
	452, 1341,
	453, 1341,
	454, 1341,
	455, 1341,
	456, 1341,
	457, 1341,
	459, 1341,
	460, 1341,
	461, 1341,
	462, 1341,
	463, 1341,
	464, 1341,
	466, 1341,
	467, 1341,
	468, 1341,
	469, 1341,
	470, 1341,
	471, 1341,
	473, 1341,
	474, 1341,
	475, 1341,
	476, 1341,
	477, 1341,
	478, 1341,
	479, 1341,
	480, 1341,
	482, 1341,
	484, 1341,
	485, 1341,
	486, 1341,
	487, 1341,
	488, 1341,
	489, 1341,
	490, 1341,
	491, 1341,
	492, 1341,
	493, 1341,
	494, 1341,
	495, 1341,
	496, 1341,
	497, 1341,
	498, 1341,
	499, 1341,
	501, 1341,
	502, 1341,
	504, 1341,
	505, 1341,
	507, 1341,
	508, 1341,
	509, 1341,
	510, 1341,
	511, 1341,
	512, 1341,
	513, 1341,
	514, 1341,
	516, 1341,
	517, 1341,
	518, 1341,
	519, 1341,
	520, 1341,
	522, 1341,
	524, 1341,
	525, 1341,
	526, 1341,
	527, 1341,
	528, 1341,
	529, 1341,
	531, 1341,
	532, 1341,
	533, 1341,
	534, 1341,
	536, 1341,
	537, 1341,
	540, 1341,
	541, 1341,
	542, 1341,
	543, 1341,
	544, 1341,
	545, 1341,
	546, 1341,
	548, 1341,
	551, 1341,
	552, 1341,
	553, 1341,
	554, 1341,
	555, 1341,
	556, 1341,
	558, 1341,
	559, 1341,
	560, 1341,
	561, 1341,
	562, 1341,
	563, 1341,
	564, 1341,
	569, 1341,
	570, 1341,
	571, 1341,
	572, 1341,
	573, 1341,
	574, 1341,
	-2, 0,
	-1, 1643,
	1, 558,
	604, 558,
	606, 558,
	608, 558,
	-2, 1576,
	-1, 1646,
	4, 2781,
	11, 2781,
	12, 2781,
	14, 2781,
	15, 2781,
	16, 2781,
	17, 2781,
	18, 2781,
	19, 2781,
	21, 2781,
	22, 2781,
	23, 2781,
	24, 2781,
	25, 2781,
	26, 2781,
	27, 2781,
	29, 2781,
	30, 2781,
	33, 2781,
	34, 2781,
	36, 2781,
	38, 2781,
	41, 2781,
	42, 2781,
	44, 2781,
	45, 2781,
	46, 2781,
	47, 2781,
	48, 2781,
	49, 2781,
	50, 2781,
	51, 2781,
	53, 2781,
	54, 2781,
	55, 2781,
	56, 2781,
	58, 2781,
	59, 2781,
	60, 2781,
	61, 2781,
	62, 2781,
	63, 2781,
	64, 2781,
	67, 2781,
	68, 2781,
	69, 2781,
	70, 2781,
	71, 2781,
	73, 2781,
	74, 2781,
	75, 2781,
	76, 2781,
	79, 2781,
	80, 2781,
	81, 2781,
	82, 2781,
	83, 2781,
	84, 2781,
	85, 2781,
	86, 2781,
	88, 2781,
	89, 2781,
	90, 2781,
	91, 2781,
	92, 2781,
	94, 2781,
	95, 2781,
	96, 2781,
	97, 2781,
	98, 2781,
	99, 2781,
	100, 2781,
	101, 2781,
	103, 2781,
	104, 2781,
	105, 2781,
	106, 2781,
	107, 2781,
	108, 2781,
	109, 2781,
	117, 2781,
	118, 2781,
	119, 2781,
	120, 2781,
	121, 2781,
	123, 2781,
	124, 2781,
	125, 2781,
	126, 2781,
	128, 2781,
	129, 2781,
	130, 2781,
	132, 2781,
	133, 2781,
	134, 2781,
	136, 2781,
	137, 2781,
	138, 2781,
	141, 2781,
	142, 2781,
	143, 2781,
	145, 2781,
	146, 2781,
	147, 2781,
	149, 2781,
	150, 2781,
	151, 2781,
	153, 2781,
	154, 2781,
	155, 2781,
	156, 2781,
	157, 2781,
	158, 2781,
	159, 2781,
	160, 2781,
	161, 2781,
	162, 2781,
	163, 2781,
	164, 2781,
	165, 2781,
	166, 2781,
	167, 2781,
	168, 2781,
	169, 2781,
	173, 2781,
	174, 2781,
	175, 2781,
	176, 2781,
	177, 2781,
	178, 2781,
	179, 2781,
	180, 2781,
	183, 2781,
	184, 2781,
	186, 2781,
	187, 2781,
	188, 2781,
	191, 2781,
	192, 2781,
	193, 2781,
	194, 2781,
	195, 2781,
	196, 2781,
	197, 2781,
	198, 2781,
	199, 2781,
	200, 2781,
	201, 2781,
	202, 2781,
	203, 2781,
	204, 2781,
	205, 2781,
	207, 2781,
	208, 2781,
	210, 2781,
	211, 2781,
	213, 2781,
	214, 2781,
	215, 2781,
	216, 2781,
	217, 2781,
	218, 2781,
	219, 2781,
	220, 2781,
	221, 2781,
	222, 2781,
	223, 2781,
	224, 2781,
	225, 2781,
	226, 2781,
	227, 2781,
	228, 2781,
	229, 2781,
	230, 2781,
	232, 2781,
	233, 2781,
	235, 2781,
	236, 2781,
	237, 2781,
	239, 2781,
	240, 2781,
	241, 2781,
	242, 2781,
	244, 2781,
	246, 2781,
	247, 2781,
	248, 2781,
	249, 2781,
	250, 2781,
	251, 2781,
	252, 2781,
	253, 2781,
	254, 2781,
	255, 2781,
	257, 2781,
	258, 2781,
	259, 2781,
	260, 2781,
	261, 2781,
	262, 2781,
	263, 2781,
	264, 2781,
	266, 2781,
	267, 2781,
	268, 2781,
	270, 2781,
	271, 2781,
	272, 2781,
	273, 2781,
	274, 2781,
	275, 2781,
	277, 2781,
	278, 2781,
	279, 2781,
	280, 2781,
	281, 2781,
	282, 2781,
	283, 2781,
	286, 2781,
	287, 2781,
	288, 2781,
	289, 2781,
	290, 2781,
	291, 2781,
	292, 2781,
	293, 2781,
	294, 2781,
	295, 2781,
	296, 2781,
	297, 2781,
	298, 2781,
	299, 2781,
	300, 2781,
	301, 2781,
	302, 2781,
	303, 2781,
	304, 2781,
	305, 2781,
	306, 2781,
	307, 2781,
	308, 2781,
	309, 2781,
	310, 2781,
	311, 2781,
	312, 2781,
	314, 2781,
	315, 2781,
	316, 2781,
	317, 2781,
	318, 2781,
	319, 2781,
	320, 2781,
	321, 2781,
	322, 2781,
	323, 2781,
	324, 2781,
	325, 2781,
	326, 2781,
	327, 2781,
	328, 2781,
	329, 2781,
	330, 2781,
	332, 2781,
	333, 2781,
	336, 2781,
	337, 2781,
	338, 2781,
	339, 2781,
	341, 2781,
	342, 2781,
	343, 2781,
	344, 2781,
	345, 2781,
	348, 2781,
	352, 2781,
	353, 2781,
	354, 2781,
	355, 2781,
	357, 2781,
	358, 2781,
	359, 2781,
	361, 2781,
	363, 2781,
	364, 2781,
	365, 2781,
	366, 2781,
	367, 2781,
	368, 2781,
	369, 2781,
	370, 2781,
	371, 2781,
	372, 2781,
	373, 2781,
	374, 2781,
	375, 2781,
	377, 2781,
	378, 2781,
	379, 2781,
	380, 2781,
	381, 2781,
	382, 2781,
	383, 2781,
	384, 2781,
	385, 2781,
	386, 2781,
	387, 2781,
	388, 2781,
	389, 2781,
	390, 2781,
	391, 2781,
	393, 2781,
	394, 2781,
	396, 2781,
	397, 2781,
	398, 2781,
	399, 2781,
	400, 2781,
	401, 2781,
	402, 2781,
	403, 2781,
	404, 2781,
	405, 2781,
	406, 2781,
	407, 2781,
	408, 2781,
	410, 2781,
	412, 2781,
	413, 2781,
	414, 2781,
	420, 2781,
	421, 2781,
	422, 2781,
	423, 2781,
	424, 2781,
	425, 2781,
	426, 2781,
	427, 2781,
	428, 2781,
	429, 2781,
	430, 2781,
	431, 2781,
	432, 2781,
	434, 2781,
	435, 2781,
	436, 2781,
	437, 2781,
	438, 2781,
	439, 2781,
	440, 2781,
	441, 2781,
	442, 2781,
	443, 2781,
	444, 2781,
	445, 2781,
	446, 2781,
	447, 2781,
	448, 2781,
	449, 2781,
	450, 2781,
	451, 2781,
	452, 2781,
	453, 2781,
	454, 2781,
	455, 2781,
	456, 2781,
	457, 2781,
	459, 2781,
	460, 2781,
	461, 2781,
	462, 2781,
	463, 2781,
	464, 2781,
	466, 2781,
	467, 2781,
	468, 2781,
	469, 2781,
	470, 2781,
	471, 2781,
	472, 2781,
	473, 2781,
	474, 2781,
	475, 2781,
	476, 2781,
	477, 2781,
	478, 2781,
	479, 2781,
	480, 2781,
	482, 2781,
	484, 2781,
	485, 2781,
	486, 2781,
	487, 2781,
	488, 2781,
	489, 2781,
	490, 2781,
	491, 2781,
	492, 2781,
	493, 2781,
	494, 2781,
	495, 2781,
	496, 2781,
	497, 2781,
	498, 2781,
	499, 2781,
	501, 2781,
	502, 2781,
	503, 2781,
	504, 2781,
	505, 2781,
	507, 2781,
	508, 2781,
	509, 2781,
	510, 2781,
	511, 2781,
	512, 2781,
	513, 2781,
	514, 2781,
	516, 2781,
	517, 2781,
	518, 2781,
	519, 2781,
	520, 2781,
	522, 2781,
	524, 2781,
	525, 2781,
	526, 2781,
	527, 2781,
	528, 2781,
	529, 2781,
	531, 2781,
	532, 2781,
	533, 2781,
	534, 2781,
	536, 2781,
	537, 2781,
	540, 2781,
	541, 2781,
	542, 2781,
	543, 2781,
	544, 2781,
	545, 2781,
	546, 2781,
	548, 2781,
	551, 2781,
	552, 2781,
	553, 2781,
	554, 2781,
	555, 2781,
	556, 2781,
	558, 2781,
	559, 2781,
	560, 2781,
	561, 2781,
	562, 2781,
	563, 2781,
	564, 2781,
	569, 2781,
	570, 2781,
	571, 2781,
	572, 2781,
	573, 2781,
	574, 2781,
	575, 2781,
	577, 2781,
	585, 2781,
	586, 2781,
	587, 2781,
	588, 2781,
	589, 2781,
	590, 2781,
	592, 2781,
	593, 2781,
	594, 2781,
	595, 2781,
	596, 2781,
	597, 2781,
	598, 2781,
	599, 2781,
	600, 2781,
	603, 2781,
	606, 2781,
	607, 2781,
	609, 2781,
	610, 2781,
	-2, 0,
	-1, 1651,
	190, 2661,
	521, 2661,
	587, 2661,
	607, 2661,
	-2, 0,
	-1, 1704,
	398, 897,
	464, 897,
	505, 897,
	526, 897,
	-2, 0,
	-1, 1715,
	1, 1413,
	604, 1413,
	606, 1413,
	608, 1413,
	-2, 0,
	-1, 1732,
	1, 892,
	604, 892,
	606, 892,
	608, 892,
	-2, 0,
	-1, 1733,
	1, 936,
	604, 936,
	606, 936,
	608, 936,
	-2, 0,
	-1, 1734,
	1, 944,
	604, 944,
	606, 944,
	608, 944,
	-2, 0,
	-1, 1737,
	1, 901,
	604, 901,
	606, 901,
	608, 901,
	-2, 0,
	-1, 1739,
	1, 907,
	604, 907,
	606, 907,
	608, 907,
	-2, 0,
	-1, 1742,
	1, 903,
	604, 903,
	606, 903,
	608, 903,
	-2, 0,
	-1, 1747,
	1, 917,
	604, 917,
	606, 917,
	608, 917,
	-2, 0,
	-1, 1778,
	1, 2644,
	604, 2644,
	606, 2644,
	607, 2644,
	608, 2644,
	-2, 0,
	-1, 1782,
	1, 991,
	604, 991,
	606, 991,
	608, 991,
	-2, 0,
	-1, 1799,
	1, 1463,
	608, 1463,
	-2, 1468,
	-1, 1802,
	172, 1619,
	185, 1619,
	276, 1619,
	346, 1619,
	-2, 1557,
	-1, 1902,
	152, 1578,
	172, 1578,
	185, 1578,
	243, 1578,
	276, 1578,
	346, 1578,
	356, 1578,
	538, 1578,
	-2, 2029,
	-1, 1963,
	606, 2204,
	-2, 0,
	-1, 1998,
	152, 1578,
	172, 1578,
	185, 1578,
	243, 1578,
	276, 1578,
	346, 1578,
	356, 1578,
	538, 1578,
	-2, 1711,
	-1, 2037,
	521, 2658,
	607, 2658,
	610, 2658,
	-2, 0,
	-1, 2054,
	605, 1852,
	-2, 1840,
	-1, 2086,
	190, 2658,
	607, 2658,
	610, 2658,
	-2, 0,
	-1, 2129,
	1, 703,
	608, 703,
	-2, 1468,
	-1, 2274,
	225, 262,
	-2, 2352,
	-1, 2275,
	225, 263,
	-2, 315,
	-1, 2384,
	1, 894,
	604, 894,
	606, 894,
	608, 894,
	-2, 0,
	-1, 2385,
	1, 938,
	604, 938,
	606, 938,
	608, 938,
	-2, 0,
	-1, 2386,
	1, 946,
	604, 946,
	606, 946,
	608, 946,
	-2, 0,
	-1, 2387,
	1, 993,
	604, 993,
	606, 993,
	608, 993,
	-2, 0,
	-1, 2428,
	1, 919,
	604, 919,
	606, 919,
	608, 919,
	-2, 0,
	-1, 2448,
	1, 976,
	604, 976,
	606, 976,
	608, 976,
	-2, 0,
	-1, 2495,
	443, 1646,
	444, 1646,
	-2, 1885,
	-1, 2526,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1905,
	-1, 2527,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1906,
	-1, 2528,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1907,
	-1, 2529,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1908,
	-1, 2530,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1909,
	-1, 2531,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1910,
	-1, 2532,
	95, 0,
	257, 0,
	258, 0,
	589, 0,
	590, 0,
	-2, 1911,
	-1, 2533,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1912,
	-1, 2545,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1924,
	-1, 2546,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1925,
	-1, 2547,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1926,
	-1, 2551,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1933,
	-1, 2557,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1937,
	-1, 2559,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1945,
	-1, 2560,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1946,
	-1, 2561,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1947,
	-1, 2562,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1948,
	-1, 2736,
	5, 2356,
	190, 2215,
	605, 2353,
	-2, 2344,
	-1, 2737,
	190, 2216,
	-2, 2732,
	-1, 2738,
	190, 2217,
	-2, 2546,
	-1, 2739,
	190, 2218,
	-2, 2426,
	-1, 2740,
	190, 2219,
	-2, 2484,
	-1, 2741,
	190, 2220,
	-2, 2531,
	-1, 2742,
	190, 2221,
	-2, 2656,
	-1, 2743,
	190, 2222,
	-2, 2012,
	-1, 2814,
	1, 1712,
	2, 1712,
	106, 1712,
	152, 1712,
	172, 1712,
	185, 1712,
	191, 1712,
	209, 1712,
	212, 1712,
	239, 1712,
	243, 1712,
	254, 1712,
	272, 1712,
	276, 1712,
	315, 1712,
	346, 1712,
	350, 1712,
	356, 1712,
	433, 1712,
	437, 1712,
	538, 1712,
	549, 1712,
	566, 1712,
	567, 1712,
	568, 1712,
	578, 1712,
	604, 1712,
	606, 1712,
	608, 1712,
	610, 1712,
	-2, 1711,
	-1, 2827,
	605, 2325,
	-2, 2339,
	-1, 2829,
	1, 332,
	566, 332,
	-2, 1605,
	-1, 2859,
	605, 1851,
	-2, 1841,
	-1, 3050,
	1, 1316,
	428, 1275,
	466, 1275,
	581, 1275,
	604, 1316,
	606, 1316,
	608, 1316,
	-2, 1605,
	-1, 3225,
	351, 1649,
	-2, 2771,
	-1, 3226,
	351, 1650,
	-2, 2641,
	-1, 3230,
	443, 2281,
	444, 2281,
	-2, 2010,
	-1, 3231,
	443, 2285,
	444, 2285,
	-2, 2011,
	-1, 3232,
	443, 2282,
	444, 2282,
	-2, 2010,
	-1, 3233,
	443, 2286,
	444, 2286,
	-2, 2011,
	-1, 3246,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1935,
	-1, 3247,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1939,
	-1, 3253,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1941,
	-1, 3480,
	1, 698,
	604, 698,
	606, 698,
	608, 698,
	-2, 1468,
	-1, 3657,
	43, 2316,
	-2, 1063,
	-1, 3662,
	1, 1316,
	604, 1316,
	606, 1316,
	608, 1316,
	-2, 1605,
	-1, 3767,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1943,
	-1, 3774,
	248, 0,
	250, 0,
	336, 0,
	-2, 1962,
	-1, 3842,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1991,
	-1, 3843,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1992,
	-1, 3844,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1993,
	-1, 3848,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1997,
	-1, 3849,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1998,
	-1, 3850,
	14, 0,
	15, 0,
	16, 0,
	585, 0,
	586, 0,
	587, 0,
	-2, 1999,
	-1, 3898,
	605, 2326,
	-2, 2340,
	-1, 4092,
	607, 2888,
	-2, 1531,
	-1, 4147,
	248, 0,
	250, 0,
	336, 0,
	-2, 1963,
	-1, 4150,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1966,
	-1, 4151,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1968,
	-1, 4260,
	607, 2341,
	-2, 1351,
	-1, 4420,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1967,
	-1, 4421,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	222, 0,
	225, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 1969,
	-1, 4432,
	248, 0,
	-2, 2002,
	-1, 4620,
	248, 0,
	-2, 2003,
	-1, 4836,
	50, 0,
	222, 0,
	275, 0,
	472, 0,
	575, 0,
	588, 0,
	-2, 2735,
}

const sqlPrivate = 57344

const sqlLast = 137099

var sqlAct = [...]int{
	274, 3646, 4774, 5018, 4773, 3384, 3122, 4950, 4666, 4897,
	4823, 4658, 4488, 4708, 4835, 4847, 2924, 4881, 3135, 4730,
	4256, 4963, 4805, 4787, 1541, 2098, 3645, 2271, 1347, 4130,
	4848, 4764, 4470, 4849, 2966, 4784, 2178, 4590, 2991, 4564,
	4535, 4551, 4624, 4904, 3908, 3807, 4381, 4376, 2348, 4834,
	4334, 4370, 4308, 4493, 1342, 3759, 2505, 1141, 3498, 3501,
	4441, 4409, 2360, 3092, 3679, 4084, 1275, 1095, 1568, 4076,
	4361, 4354, 4363, 4693, 4573, 826, 1340, 2358, 3239, 4004,
	2925, 2574, 1264, 4257, 4237, 714, 3673, 4386, 4050, 1811,
	3630, 4033, 2513, 4031, 2506, 2769, 3559, 2041, 786, 3504,
	2111, 4437, 3710, 826, 3147, 3006, 3712, 2022, 1408, 3081,
	1086, 3635, 3111, 1669, 3106, 2042, 3634, 3619, 2186, 2356,
	3108, 3612, 1152, 3611, 3637, 2321, 3390, 2841, 3430, 3407,
	905, 3901, 3399, 3437, 3367, 1094, 182, 3137, 4129, 1501,
	725, 4186, 901, 4, 3142, 3123, 1973, 2260, 3388, 3523,
	4882, 3057, 2258, 2214, 2198, 823, 268, 267, 3868, 1195,
	2807, 2004, 1949, 4625, 2510, 1910, 1880, 2587, 3223, 896,
	3141, 3085, 821, 2809, 1345, 3366, 1148, 2259, 2254, 782,
	2654, 1607, 2235, 3023, 2652, 2242, 1389, 3093, 2166, 1145,
	2170, 1799, 1319, 2643, 266, 1150, 2109, 1993, 2156, 2494,
	2787, 2965, 1255, 2571, 1333, 2806, 1974, 2477, 1667, 2475,
	2842, 1644, 39, 759, 3116, 2308, 1610, 2949, 1570, 4731,
	827, 2948, 2766, 701, 828, 974, 3638, 723, 1376, 2646,
	182, 832, 835, 2870, 1944, 2796, 1258, 1990, 2777, 1983,
	1237, 1272, 2624, 2732, 2698, 2476, 1894, 2911, 191, 1812,
	192, 767, 1747, 2268, 1330, 778, 1143, 1635, 922, 832,
	835, 2307, 2478, 1254, 1813, 1732, 1536, 1642, 1509, 2334,
	2499, 4898, 1126, 4951, 718, 1260, 44, 43, 41, 32,
	30, 28, 1235, 1818, 742, 3276, 715, 816, 727, 1798,
	995, 3270, 3882, 877, 3883, 2100, 1547, 3386, 1270, 2100,
	3909, 2100, 878, 2100, 2100, 2100, 5029, 111, 1826, 1827,
	2786, 1859, 1860, 1861, 1870, 1871, 1872, 5021, 4844, 5010,
	5009, 3698, 1712, 2786, 2786, 4983, 4461, 4458, 4981, 4492,
	1863, 1857, 4492, 4924, 1090, 4883, 4873, 2280, 1829, 4884,
	2786, 3688, 2121, 4455, 4871, 4868, 4865, 1876, 2786, 4869,
	4866, 4832, 4831, 4830, 3447, 2280, 2280, 3152, 1678, 4821,
	4213, 4819, 4814, 4492, 1882, 4492, 4576, 1252, 1540, 897,
	4809, 4808, 4782, 1828, 4492, 4492, 4492, 4750, 4743, 3698,
	4742, 2850, 2786, 1848, 2786, 4735, 4707, 4704, 1090, 2280,
	2280, 4492, 1845, 4687, 2872, 1385, 73, 4324, 900, 899,
	4622, 4604, 2121, 2280, 2850, 4113, 1238, 1238, 4566, 3689,
	4511, 4510, 4567, 74, 2280, 2280, 1080, 1267, 4499, 3465,
	4498, 4491, 2280, 73, 4492, 4492, 4448, 2357, 3462, 79,
	2280, 1071, 2118, 1070, 4422, 4397, 2121, 4394, 2850, 3152,
	74, 3698, 1385, 2118, 3238, 2600, 2601, 2602, 2619, 2620,
	2621, 4303, 2786, 4283, 4149, 2786, 79, 2786, 2850, 4100,
	1147, 3285, 4094, 3705, 4047, 2622, 3705, 3286, 4048, 88,
	1851, 1852, 1853, 1854, 3872, 3893, 4751, 3891, 1085, 3894,
	1834, 3892, 3875, 2121, 3791, 3787, 2786, 1561, 2280, 2786,
	3704, 3383, 2779, 1289, 3705, 2786, 88, 1738, 1882, 3378,
	3377, 1091, 3328, 2786, 2786, 3326, 3329, 3318, 3316, 3327,
	903, 3319, 2786, 4626, 3287, 2846, 1239, 2612, 2786, 1867,
	4617, 1297, 1877, 49, 94, 110, 2608, 4605, 238, 1856,
	1858, 94, 107, 2649, 3151, 3133, 3132, 903, 3152, 2344,
	2344, 1549, 2895, 4576, 2849, 1873, 2786, 1874, 2850, 2839,
	49, 3152, 110, 2786, 1843, 1844, 2831, 2121, 94, 107,
	2280, 2785, 2343, 3872, 2778, 2786, 2344, 1241, 4374, 1242,
	4324, 2118, 1865, 4284, 4113, 4049, 240, 2998, 2191, 2910,
	2135, 2099, 1290, 2115, 3087, 1290, 2279, 1849, 2786, 3016,
	2908, 95, 1969, 1535, 3983, 3762, 3735, 1991, 2247, 3690,
	2823, 1714, 2822, 2821, 2613, 2614, 2615, 2616, 2820, 2819,
	238, 1243, 1240, 1079, 2607, 1078, 1077, 1076, 95, 3691,
	4204, 1660, 1075, 1124, 239, 1548, 2650, 1074, 1073, 1069,
	1068, 1067, 1066, 1875, 1065, 1064, 1063, 1062, 232, 1061,
	3196, 4161, 3275, 1060, 1059, 73, 1058, 233, 1057, 1056,
	1055, 1054, 1864, 1053, 1052, 1034, 2420, 972, 240, 1555,
	971, 2101, 74, 1879, 1682, 2101, 970, 2101, 969, 2101,
	2101, 2101, 968, 967, 966, 193, 965, 964, 79, 963,
	1549, 962, 961, 960, 959, 958, 957, 956, 2617, 2618,
	955, 954, 953, 952, 951, 950, 949, 948, 947, 946,
	945, 1266, 944, 1560, 943, 942, 239, 2651, 941, 2648,
	940, 939, 938, 1664, 937, 926, 1358, 925, 88, 1855,
	924, 2610, 920, 919, 912, 911, 910, 895, 894, 851,
	850, 849, 848, 839, 838, 837, 1540, 836, 2118, 99,
	802, 793, 1850, 792, 2681, 3918, 2118, 2118, 3119, 791,
	773, 262, 261, 260, 259, 258, 257, 193, 256, 903,
	1352, 1150, 255, 254, 253, 252, 99, 251, 250, 1868,
	249, 248, 49, 247, 110, 246, 245, 244, 243, 242,
	94, 107, 241, 4388, 3887, 3706, 3433, 3298, 1150, 1150,
	1150, 3281, 3272, 3176, 3067, 190, 102, 2854, 2828, 106,
	1881, 3381, 1952, 1994, 1549, 1093, 1411, 2813, 1549, 1951,
	1150, 2679, 2665, 2467, 238, 3101, 2164, 1352, 238, 2120,
	2017, 1921, 190, 102, 2663, 238, 106, 1793, 1952, 3688,
	1543, 153, 1825, 904, 1912, 1951, 4858, 1955, 153, 1290,
	95, 2121, 1150, 3382, 1150, 2882, 1150, 2099, 2118, 2118,
	2115, 2470, 238, 1573, 1397, 1393, 1394, 1395, 1274, 1380,
	904, 4857, 240, 1950, 1268, 153, 240, 2653, 4854, 4833,
	4818, 4715, 1866, 240, 4629, 1554, 2611, 4614, 4608, 1352,
	3337, 3338, 1840, 1841, 1847, 1869, 1846, 1842, 1519, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 157, 1573,
	240, 3337, 3338, 4171, 4436, 4395, 1573, 4170, 4483, 4373,
	239, 1514, 2778, 194, 239, 1150, 4219, 1150, 4184, 4183,
	4606, 239, 1573, 4177, 232, 157, 4176, 4175, 232, 4168,
	1150, 4167, 1150, 233, 1881, 232, 4165, 233, 4160, 4157,
	194, 1290, 4156, 238, 233, 4060, 1324, 1327, 239, 4046,
	3922, 3921, 1341, 238, 3920, 3897, 3863, 1616, 1619, 3862,
	1372, 193, 232, 3861, 3783, 193, 3454, 3778, 1337, 3428,
	3374, 233, 898, 1374, 1357, 3365, 3336, 3333, 3332, 3330,
	1573, 3325, 3324, 2647, 3337, 3338, 832, 835, 99, 3323,
	1524, 240, 1539, 4390, 1913, 3320, 1911, 1919, 3317, 193,
	1150, 240, 1504, 1150, 3297, 1518, 1341, 1404, 3280, 1498,
	1503, 3273, 1914, 1506, 3271, 2863, 2597, 2598, 2599, 2623,
	2609, 2603, 3134, 2605, 2606, 2604, 2591, 2592, 2593, 2594,
	2595, 2596, 2814, 1366, 2636, 182, 182, 1912, 1825, 239,
	1251, 2324, 2287, 1824, 190, 102, 5024, 4061, 106, 239,
	1538, 1605, 3343, 232, 1537, 1546, 2285, 1553, 4972, 1559,
	1740, 4971, 233, 232, 1683, 4896, 3103, 4894, 1276, 1647,
	1649, 3809, 233, 3343, 238, 1341, 1341, 238, 73, 238,
	4775, 238, 904, 4692, 4678, 4674, 4673, 153, 1622, 4672,
	193, 4652, 4651, 1636, 4649, 74, 4628, 3981, 4627, 4602,
	193, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 2577,
	4588, 79, 238, 4585, 3379, 238, 1380, 1645, 4584, 1380,
	238, 4577, 240, 4562, 4561, 240, 4507, 240, 1658, 240,
	1663, 4478, 4434, 4417, 1150, 4416, 4357, 4350, 4347, 4325,
	1150, 4203, 4182, 1676, 4114, 1681, 3969, 157, 3968, 3951,
	3950, 88, 3948, 1826, 1827, 3878, 3343, 1638, 3866, 3353,
	240, 3773, 194, 240, 1899, 3707, 3699, 3665, 240, 238,
	239, 3578, 238, 239, 3534, 239, 1857, 239, 3503, 3456,
	3353, 1803, 3302, 1829, 232, 3301, 3296, 232, 3262, 232,
	3080, 232, 903, 233, 1958, 1957, 233, 1956, 233, 2583,
	233, 1688, 4061, 1953, 3337, 3338, 1091, 110, 239, 1882,
	1739, 239, 1659, 94, 107, 1945, 239, 240, 1828, 1943,
	240, 1650, 232, 2861, 193, 232, 3118, 1677, 193, 2860,
	232, 233, 2825, 2818, 233, 1879, 2784, 2661, 1797, 233,
	1898, 2016, 1972, 1967, 1966, 1150, 1150, 1150, 4389, 1965,
	1964, 1150, 1963, 1962, 1961, 1960, 1879, 1959, 1272, 193,
	1272, 238, 193, 3353, 1940, 239, 1939, 193, 239, 1938,
	1937, 3102, 1705, 95, 1936, 1411, 1935, 1934, 1933, 232,
	1932, 1931, 232, 1930, 1929, 1928, 1150, 1927, 233, 826,
	1352, 233, 1926, 1901, 1741, 2059, 826, 1925, 1352, 1914,
	1352, 2020, 1900, 1897, 1892, 1971, 1365, 1804, 1294, 240,
	1285, 4631, 4630, 4360, 3354, 1270, 193, 1270, 2038, 193,
	4215, 4153, 3917, 3890, 3881, 1834, 2088, 1756, 2090, 3284,
	2816, 1800, 1808, 2852, 3425, 3354, 1641, 4456, 2026, 1879,
	4217, 3916, 2028, 1071, 1913, 1070, 1980, 3452, 2680, 1807,
	2105, 1895, 3694, 2107, 2012, 4969, 1802, 239, 4962, 2112,
	1352, 1392, 1954, 2114, 4286, 3537, 1150, 2992, 2117, 4675,
	4578, 232, 1821, 1822, 1856, 1858, 3343, 4569, 1390, 4568,
	233, 2032, 2027, 1826, 1827, 4393, 2001, 2155, 2123, 2155,
	1150, 4328, 1977, 1978, 1826, 1827, 4850, 182, 1411, 2147,
	2146, 2848, 4327, 2155, 2157, 3337, 3338, 2180, 193, 1385,
	1238, 4326, 4285, 1829, 4206, 2678, 2664, 2053, 3354, 3337,
	3338, 99, 4120, 2153, 1829, 1946, 1947, 1391, 2662, 4119,
	4118, 4117, 1849, 4116, 1267, 4115, 1267, 2225, 3885, 2155,
	3884, 1091, 1641, 3709, 2033, 832, 835, 1380, 1828, 3708,
	3701, 2082, 832, 835, 2056, 4609, 4920, 2162, 2002, 1828,
	3700, 2127, 2126, 3347, 3339, 3340, 3341, 3342, 3344, 3345,
	2025, 4574, 4918, 1952, 2008, 3021, 1518, 190, 102, 1994,
	1951, 106, 2021, 3346, 3347, 3339, 3340, 3341, 3342, 3344,
	3345, 2970, 1935, 1992, 4064, 3760, 1999, 4607, 1704, 3995,
	2141, 3322, 3321, 3244, 1385, 1795, 1935, 238, 1879, 2952,
	1388, 4482, 3966, 3505, 1050, 904, 2103, 2244, 3568, 1970,
	153, 3648, 2150, 3647, 1923, 1518, 1757, 1385, 1713, 1826,
	1827, 4940, 2349, 1996, 1573, 1573, 4565, 2276, 2011, 2010,
	2009, 2007, 2006, 2005, 1411, 4879, 4861, 2261, 4846, 2376,
	4371, 2047, 4054, 4438, 2130, 240, 3620, 1375, 3148, 1829,
	1051, 2129, 3453, 1714, 2262, 2039, 1834, 1091, 3339, 3340,
	3341, 3342, 3344, 3345, 4068, 4043, 4001, 2644, 3992, 3974,
	157, 3732, 3478, 2649, 2354, 3386, 3811, 1850, 1640, 4502,
	2224, 3343, 3290, 4474, 1828, 194, 4855, 1920, 2859, 1968,
	2950, 1948, 3628, 239, 2994, 2318, 1615, 4870, 2325, 1531,
	1361, 2231, 1323, 4867, 3013, 3684, 2125, 232, 3942, 4667,
	4377, 3010, 1692, 4781, 4645, 2221, 233, 2229, 3508, 3175,
	3008, 3961, 3115, 2239, 3603, 4922, 4921, 4505, 3059, 2152,
	890, 4501, 4480, 1250, 3482, 1881, 3754, 2272, 2277, 1573,
	4014, 1573, 4531, 1573, 193, 4273, 1582, 1590, 1048, 2158,
	1754, 2148, 2234, 4856, 1046, 2896, 2234, 2914, 2448, 5020,
	2445, 1573, 1573, 2234, 1044, 2185, 2650, 2151, 1350, 1042,
	2927, 4682, 2912, 1386, 1573, 4524, 1386, 2434, 4513, 2197,
	1039, 4317, 832, 835, 1640, 2485, 1573, 4316, 1573, 1573,
	1573, 1834, 4955, 4012, 4011, 1089, 1030, 2264, 2265, 1392,
	2432, 4003, 3989, 1533, 1755, 2191, 2914, 4013, 1266, 3988,
	1266, 2142, 826, 2446, 3986, 3985, 2219, 2232, 3973, 3937,
	3936, 2912, 4252, 3609, 2266, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 1591, 1150, 2375, 3608, 891, 1392, 2314,
	2447, 3337, 3338, 3570, 3446, 2483, 1538, 2651, 3295, 2648,
	1537, 3945, 1753, 3294, 3293, 2319, 4245, 3292, 3248, 3019,
	2331, 3018, 3015, 3004, 1879, 1391, 3536, 2230, 2218, 1150,
	2215, 2996, 2986, 2238, 2985, 2980, 2352, 2189, 2979, 2978,
	3341, 3342, 3344, 3345, 2957, 2956, 1088, 2930, 2918, 2840,
	2380, 4271, 2278, 1382, 2317, 1690, 1382, 2558, 1801, 4268,
	765, 2339, 4503, 800, 1391, 1150, 4475, 1150, 3484, 765,
	2694, 4246, 2469, 2693, 1150, 2515, 3352, 2059, 2059, 1411,
	3112, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1645, 1150, 1645,
	1150, 1150, 1150, 1150, 2300, 2328, 2341, 2405, 832, 835,
	2362, 1268, 2299, 1268, 1879, 3566, 1387, 2333, 3505, 1387,
	2262, 2368, 2349, 1638, 2233, 2336, 1150, 2336, 2233, 2853,
	1150, 1150, 2487, 2337, 2474, 2233, 2484, 1366, 1150, 1090,
	4956, 1628, 1150, 1627, 1150, 1150, 2345, 2653, 2346, 1685,
	4224, 2298, 1411, 3343, 1626, 2867, 1625, 798, 1150, 1150,
	1150, 1150, 2844, 3733, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 2511, 2512, 2465, 1383, 2367, 2974, 1383, 2053,
	2053, 4229, 3337, 3338, 1384, 2421, 1091, 1384, 1091, 4287,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 2395,
	2444, 2384, 1836, 1150, 2967, 2968, 2967, 2968, 2485, 2482,
	1832, 1833, 1835, 1836, 4415, 1272, 2056, 2056, 1386, 1534,
	2159, 2160, 1411, 2954, 3345, 2625, 2626, 2457, 1706, 1036,
	2929, 1272, 2428, 3339, 3340, 3341, 3342, 3344, 3345, 2625,
	2641, 2372, 1791, 2644, 4228, 2498, 4267, 1150, 1411, 1599,
	2573, 2903, 3155, 2191, 1752, 2227, 2967, 2968, 4241, 4660,
	3353, 2830, 4269, 2647, 4242, 1736, 2689, 1686, 2483, 764,
	1604, 1770, 1270, 1586, 4247, 4921, 2190, 3567, 764, 2473,
	893, 892, 3191, 2471, 2941, 2735, 2735, 2749, 1270, 2625,
	2573, 2486, 2770, 2772, 2438, 2589, 2472, 1071, 2776, 2502,
	1071, 1071, 2503, 2504, 2479, 2187, 1309, 1794, 1766, 2640,
	2426, 3221, 4957, 2047, 2047, 4985, 4244, 2940, 2389, 2581,
	2843, 1087, 1714, 3012, 1714, 2189, 2579, 2801, 3481, 1806,
	1736, 2385, 2383, 4248, 3236, 4852, 1879, 2460, 1382, 2183,
	3970, 2793, 2826, 1830, 1831, 1832, 1833, 1835, 1836, 2338,
	2392, 2481, 1352, 1352, 3343, 3011, 2691, 2001, 1364, 2877,
	1385, 2692, 3009, 1385, 2695, 2881, 2696, 2697, 2188, 2866,
	2585, 3007, 1735, 1238, 3742, 1611, 799, 2928, 766, 2892,
	3741, 2891, 1702, 3193, 4662, 2751, 2638, 766, 2653, 2913,
	2917, 1267, 935, 2386, 4637, 1411, 1733, 2184, 3800, 1691,
	2569, 2917, 1749, 2869, 2888, 4315, 182, 1267, 3958, 3987,
	3984, 1040, 4958, 2847, 2792, 3354, 3925, 1040, 2800, 2484,
	2805, 1387, 2885, 2811, 2812, 801, 3912, 1040, 1609, 797,
	2059, 2567, 1041, 2731, 2744, 1091, 2761, 1735, 2815, 2433,
	2774, 2865, 1380, 1040, 3615, 1091, 2782, 2783, 4933, 1091,
	2899, 2459, 2012, 2798, 2799, 2794, 2855, 3607, 1734, 1341,
	3564, 3353, 2431, 4243, 2393, 713, 1954, 1999, 888, 3235,
	887, 3014, 2901, 73, 2977, 4270, 2955, 2466, 1411, 3259,
	1383, 2893, 2284, 2283, 2216, 4265, 4414, 3228, 3229, 1384,
	74, 708, 2482, 4540, 1352, 2953, 4023, 4942, 4966, 2456,
	4941, 2838, 2248, 4253, 4254, 4986, 79, 2255, 1341, 2902,
	3257, 4909, 4853, 2919, 4135, 1150, 1150, 2862, 1150, 4134,
	1767, 3736, 4960, 2887, 3616, 2876, 3613, 3956, 3682, 2879,
	2900, 2880, 2245, 1946, 1947, 3681, 3199, 1879, 1091, 2100,
	1341, 1341, 826, 2894, 1352, 2960, 88, 2990, 2884, 2916,
	2191, 1986, 2053, 2871, 4024, 2199, 1611, 2886, 2653, 2222,
	3971, 3084, 3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344,
	3345, 2915, 4759, 2563, 1588, 1573, 4465, 3005, 2203, 2975,
	2993, 4825, 2959, 4826, 2190, 3126, 2241, 903, 1573, 2056,
	1573, 3797, 2982, 2897, 2981, 2564, 4689, 4022, 3143, 1989,
	49, 2565, 110, 2217, 4668, 2570, 2555, 1573, 94, 107,
	3492, 3681, 3146, 2240, 2795, 2944, 3354, 4851, 3099, 3145,
	1566, 2249, 3062, 2245, 3483, 2257, 763, 3064, 2922, 2958,
	2984, 1352, 1987, 1352, 1504, 2200, 2969, 2971, 2972, 2973,
	3524, 4747, 2976, 3020, 1764, 3156, 3157, 2236, 3051, 3052,
	2932, 2935, 3254, 1687, 4661, 1150, 3163, 3164, 3165, 3177,
	1585, 3178, 1768, 2228, 1280, 1385, 832, 835, 95, 1715,
	2983, 1518, 3798, 1653, 3095, 1266, 2188, 3581, 2995, 1282,
	3255, 2988, 3520, 2256, 3260, 4344, 2047, 2914, 3179, 1668,
	3002, 1266, 4263, 1308, 3526, 1532, 1292, 3089, 832, 835,
	1941, 3149, 2933, 3202, 3553, 2237, 1277, 2226, 4266, 182,
	3250, 3140, 3153, 3060, 4908, 1689, 2245, 1022, 3158, 4959,
	3159, 1150, 3450, 2458, 3173, 1526, 3068, 1150, 1150, 3071,
	1538, 3073, 3600, 1037, 3065, 4131, 2391, 2181, 1982, 3519,
	4427, 1084, 4541, 3130, 3128, 2204, 3078, 1696, 2829, 2427,
	2572, 732, 1283, 4964, 4539, 3088, 3614, 1769, 4252, 3525,
	4537, 4931, 3554, 3348, 3346, 3347, 3339, 3340, 3341, 3342,
	3344, 3345, 4411, 2635, 2580, 4792, 4297, 3117, 2553, 936,
	3117, 2556, 3121, 1150, 1150, 2388, 3131, 1612, 3207, 1150,
	3209, 2566, 4245, 1645, 1765, 1805, 4238, 1988, 3150, 2382,
	1891, 2568, 1150, 1150, 3300, 3552, 2797, 4536, 1150, 1150,
	3129, 2205, 2206, 4236, 1150, 3110, 99, 3205, 1518, 3493,
	1281, 2810, 4240, 1986, 1363, 2213, 4987, 3172, 1090, 1341,
	4745, 2552, 2653, 1023, 4538, 2226, 2201, 3813, 1268, 3545,
	3060, 709, 3182, 2252, 3184, 3180, 3186, 4246, 1701, 1703,
	3957, 2989, 2228, 4264, 1268, 1022, 4974, 4359, 4125, 1150,
	1150, 1150, 3189, 3054, 4965, 1150, 4136, 4364, 3251, 4702,
	3256, 1989, 190, 102, 4746, 1150, 106, 4453, 2211, 1084,
	3258, 2202, 1518, 2223, 1518, 4320, 1984, 4365, 2225, 4889,
	3283, 4239, 1150, 3227, 3913, 3210, 2194, 3546, 3212, 4890,
	4967, 2250, 238, 3216, 1987, 2101, 4345, 4036, 1298, 1108,
	904, 3218, 3217, 4410, 3722, 153, 1296, 4034, 4907, 2498,
	3222, 3055, 4694, 710, 3237, 840, 2220, 3720, 3756, 3219,
	4709, 1720, 4797, 4059, 4729, 4695, 2212, 3713, 4587, 4036,
	3544, 4319, 4318, 3170, 2251, 1982, 4082, 1985, 3669, 4034,
	240, 847, 3204, 3464, 2195, 3278, 3279, 2837, 2227, 3181,
	3282, 3183, 1099, 3185, 3053, 3187, 3188, 3274, 2306, 4696,
	1979, 1023, 711, 1295, 712, 157, 1288, 700, 4132, 2210,
	1028, 1027, 3401, 3201, 1150, 1150, 1150, 1150, 3197, 3249,
	194, 1816, 1815, 2501, 1150, 1150, 1150, 2193, 239, 1150,
	4038, 2934, 2192, 2207, 2143, 1810, 3438, 4992, 4500, 1150,
	1272, 1411, 232, 4596, 3499, 1150, 1815, 1150, 3393, 3394,
	3724, 233, 4644, 4083, 4007, 3990, 1272, 1024, 2554, 3852,
	1986, 4037, 4038, 3943, 4180, 4698, 3715, 3941, 3670, 1278,
	3661, 2224, 3495, 3100, 1411, 3094, 3082, 3796, 2332, 1648,
	2326, 3714, 2140, 4412, 4241, 2320, 1272, 2312, 4697, 1411,
	4242, 927, 2292, 4037, 2291, 1579, 3289, 1270, 1300, 1988,
	4247, 1352, 772, 4710, 3867, 4581, 4699, 4765, 1989, 2208,
	3903, 2059, 3933, 1270, 3757, 1411, 2917, 928, 913, 3203,
	4732, 1815, 1279, 1984, 3376, 1352, 1814, 1891, 2439, 3445,
	2136, 4085, 4382, 1352, 4362, 3079, 3418, 3723, 1311, 4557,
	3395, 1987, 4244, 1270, 918, 1091, 4137, 2491, 1028, 1027,
	1814, 4555, 4477, 3460, 4032, 1150, 2961, 2138, 3511, 4248,
	3507, 3506, 3468, 3242, 3904, 3470, 3471, 3220, 3431, 1150,
	3474, 2373, 3475, 2180, 3476, 3880, 3398, 4888, 3397, 1352,
	2365, 1025, 3403, 2355, 1985, 2059, 1743, 1742, 3488, 3489,
	2289, 3905, 1737, 3902, 3907, 1024, 1816, 3432, 2836, 2835,
	2834, 2139, 1150, 2833, 2832, 841, 842, 2180, 1026, 3509,
	1620, 3400, 3513, 1088, 4042, 1634, 1267, 1352, 3086, 4489,
	1816, 1632, 3479, 1621, 3405, 1814, 3451, 3440, 3441, 3442,
	3443, 4138, 1267, 2053, 1380, 4035, 3485, 3436, 3424, 1352,
	3427, 1352, 3417, 3472, 2171, 3387, 3371, 3372, 3373, 2172,
	4991, 934, 2804, 3510, 3853, 3402, 3515, 1150, 1150, 3517,
	1029, 2244, 1267, 4655, 3854, 1411, 3404, 4035, 2244, 4181,
	2056, 3416, 3422, 4335, 3423, 2938, 1352, 3419, 3420, 4055,
	1352, 3949, 2026, 3491, 2330, 3584, 2492, 3586, 3623, 4243,
	3590, 4928, 3569, 3496, 3596, 3721, 3716, 3717, 3718, 3719,
	3502, 3457, 3458, 4711, 3459, 4580, 1988, 2053, 1573, 1721,
	4559, 4463, 3934, 3582, 3938, 3539, 2788, 4462, 3058, 1025,
	3463, 1352, 1573, 3541, 1573, 4472, 4490, 3448, 1411, 4253,
	4254, 3469, 2962, 2963, 3154, 826, 1573, 1518, 1518, 3562,
	3473, 929, 930, 3543, 2056, 3555, 1026, 1573, 3480, 3617,
	2791, 844, 843, 3063, 3061, 2359, 2261, 3633, 4700, 1352,
	1695, 3486, 4771, 2173, 4701, 4485, 4484, 2047, 914, 915,
	3579, 3439, 4473, 4778, 4762, 4187, 1272, 3869, 2660, 3557,
	3677, 2177, 3591, 4558, 4454, 4210, 3597, 1787, 4799, 4656,
	4932, 2790, 771, 3527, 3653, 3143, 2789, 3906, 1029, 3535,
	4930, 1573, 2452, 1789, 3143, 4872, 4685, 1786, 4676, 1518,
	4543, 3675, 4460, 1573, 3548, 1573, 845, 846, 3531, 3532,
	2659, 3533, 3660, 3551, 4433, 4221, 4179, 4041, 3368, 3772,
	3730, 3729, 3549, 1270, 2317, 3618, 3550, 3621, 1784, 1761,
	1759, 2047, 3668, 3697, 3574, 1731, 3686, 1729, 3580, 1727,
	2347, 3565, 1725, 4772, 1723, 3593, 2174, 2179, 1633, 3571,
	3461, 2984, 1411, 3605, 1631, 1411, 3599, 1717, 2361, 2363,
	3331, 3734, 3575, 3576, 3261, 3577, 1082, 1711, 1022, 3939,
	4657, 2366, 1709, 1630, 3744, 3671, 3083, 3003, 3606, 2997,
	2951, 832, 835, 2374, 933, 2377, 2378, 2379, 2430, 1150,
	1266, 2864, 1084, 2461, 2350, 1150, 1150, 3625, 2959, 1150,
	1150, 1150, 2019, 1150, 3604, 2015, 1266, 1790, 3727, 3610,
	1671, 3656, 1150, 2059, 3678, 3657, 3583, 2397, 182, 182,
	3725, 1150, 3658, 3369, 2270, 3752, 1150, 3751, 1810, 2175,
	931, 932, 1411, 3195, 3194, 3161, 1266, 2480, 1083, 3683,
	1748, 1150, 1267, 2400, 3685, 2311, 2290, 2089, 3692, 1411,
	1341, 2087, 3695, 3696, 1924, 1684, 3750, 916, 917, 2059,
	2059, 1150, 1150, 3749, 1150, 1150, 1150, 1603, 3676, 4845,
	4298, 3994, 3993, 4302, 4282, 2454, 4761, 4380, 4210, 2181,
	2453, 1788, 1150, 3758, 1023, 1785, 1150, 4307, 2059, 2059,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150, 1150,
	3775, 1150, 3825, 3728, 3826, 4295, 1783, 1760, 1758, 1150,
	1150, 2059, 4234, 1730, 4233, 1728, 1150, 1726, 4081, 4072,
	1724, 4010, 1722, 3487, 3991, 2053, 1038, 1150, 3785, 3786,
	3964, 3755, 3962, 3940, 3664, 1716, 3409, 3659, 1272, 1272,
	1518, 3649, 1150, 1268, 3113, 1710, 3105, 3747, 3098, 3090,
	1708, 1629, 3076, 3075, 3056, 2883, 3753, 2878, 2288, 1268,
	4905, 2429, 2056, 2286, 2511, 3816, 1091, 3793, 2263, 2246,
	2209, 2053, 2053, 2196, 1411, 2182, 2122, 2119, 3780, 3782,
	2116, 3899, 2113, 2108, 2106, 2102, 2093, 1352, 1352, 1268,
	2396, 4375, 3792, 2511, 3831, 1270, 1270, 2269, 3674, 4902,
	2053, 2053, 1352, 1352, 3808, 826, 1352, 3594, 2056, 2056,
	1247, 3864, 2255, 3815, 1819, 3910, 3911, 3803, 3799, 3801,
	3802, 1028, 1027, 3823, 3886, 1150, 3860, 3824, 2031, 4922,
	3923, 3924, 3410, 2053, 3930, 3931, 1248, 2056, 2056, 3932,
	3822, 3856, 3830, 4364, 1150, 3738, 3240, 3739, 3871, 3740,
	3828, 2144, 2176, 2132, 2133, 182, 4654, 3213, 2464, 2047,
	3211, 3049, 3865, 4365, 3876, 3877, 4811, 4723, 1024, 4396,
	2056, 4314, 4225, 3144, 2163, 1150, 1150, 1584, 4598, 3963,
	2914, 3965, 2914, 3857, 3408, 3415, 2171, 1043, 1045, 1047,
	2939, 2172, 3873, 3874, 4093, 2912, 2329, 2936, 4591, 2191,
	1781, 1782, 2387, 1332, 2462, 2047, 2047, 2424, 1331, 2419,
	4810, 1150, 1150, 2394, 1267, 1267, 1266, 4274, 3414, 1150,
	4309, 1707, 3944, 3888, 2942, 1820, 3595, 4616, 4487, 1826,
	1827, 4188, 1158, 4166, 2047, 2047, 3522, 1826, 1827, 2943,
	2964, 1573, 3241, 1823, 1573, 1359, 1299, 1249, 4925, 1352,
	2463, 4006, 4009, 4916, 4880, 3074, 2943, 263, 4069, 1829,
	3926, 832, 835, 2313, 1370, 3010, 3008, 2047, 2999, 3889,
	3975, 3017, 2945, 4005, 2059, 3979, 2131, 3919, 270, 270,
	270, 1332, 703, 704, 4770, 719, 703, 719, 730, 4752,
	3001, 770, 1025, 1332, 1828, 790, 2947, 3980, 3982, 4722,
	796, 4008, 1828, 3000, 697, 2173, 3996, 270, 4716, 2946,
	4028, 4653, 3967, 4582, 4002, 4550, 1573, 1081, 4464, 1026,
	3972, 4079, 1150, 2177, 4071, 3411, 3412, 3413, 909, 4058,
	1272, 1150, 3896, 4095, 3663, 270, 3120, 4051, 2775, 4025,
	4026, 1573, 1573, 1573, 2128, 3126, 2959, 2040, 1573, 1573,
	1573, 4961, 4801, 4086, 4486, 4019, 2987, 4802, 4102, 1530,
	1529, 3449, 3143, 4990, 3337, 3338, 1826, 1827, 4065, 4801,
	1573, 1029, 4718, 1540, 4802, 4021, 1411, 4935, 4030, 1268,
	4040, 4039, 2906, 2907, 4087, 4090, 4158, 1270, 2655, 3502,
	2904, 2905, 4106, 3915, 4044, 4053, 2053, 2906, 2174, 2179,
	4018, 2904, 2690, 1411, 4057, 1694, 1150, 1150, 4029, 4078,
	4110, 1693, 1150, 1150, 2059, 4583, 4525, 1150, 1150, 1341,
	1150, 1763, 4311, 4306, 1762, 1150, 4305, 4154, 4089, 3914,
	4075, 3804, 3588, 2056, 3585, 1918, 1150, 1917, 1409, 4070,
	2890, 3215, 2468, 4978, 4943, 4816, 4756, 4755, 4754, 4684,
	4683, 4633, 1150, 1904, 4066, 4073, 4553, 1909, 4517, 4457,
	4451, 4352, 4332, 4272, 4088, 703, 703, 4216, 4091, 4109,
	4121, 4099, 4045, 270, 4096, 4107, 4101, 3960, 4097, 3952,
	4139, 2175, 3667, 4123, 3666, 3516, 3467, 3200, 4122, 3192,
	4108, 3169, 3168, 3167, 2317, 3166, 3104, 3077, 1266, 1266,
	2937, 2874, 2868, 2857, 2856, 2845, 1267, 2584, 4140, 2455,
	2425, 4148, 2418, 1272, 2417, 4152, 4074, 2416, 2415, 2414,
	2327, 1272, 2301, 2297, 2296, 1411, 1411, 3530, 1411, 4133,
	2047, 2181, 2295, 2294, 2293, 1272, 2053, 2096, 2095, 2094,
	2092, 2030, 1780, 4193, 1779, 1718, 1573, 1573, 1598, 1597,
	1596, 1595, 1594, 1593, 3162, 1592, 1587, 1583, 1581, 1411,
	1580, 1523, 1522, 1521, 1402, 1401, 1400, 1399, 1398, 1362,
	1270, 1318, 1317, 2056, 1316, 1315, 1314, 1313, 1270, 1312,
	1310, 1305, 3050, 4124, 1304, 3528, 1303, 1302, 1301, 1272,
	1230, 1272, 1270, 4226, 4227, 4211, 4212, 902, 8, 2134,
	1049, 1035, 4659, 4178, 4251, 4250, 4249, 4214, 2451, 93,
	1589, 4261, 864, 87, 1352, 2253, 4262, 3431, 3959, 4275,
	4220, 1001, 4798, 4223, 1411, 4688, 1352, 1564, 3529, 1352,
	4196, 4198, 3091, 4277, 4278, 872, 4780, 4067, 3518, 4189,
	3022, 1150, 182, 2399, 1411, 1719, 1270, 4194, 1270, 4185,
	4192, 2401, 4195, 3426, 2817, 4190, 4191, 4744, 4162, 3299,
	4623, 1268, 1268, 4202, 4276, 4426, 2658, 4310, 1922, 4312,
	2047, 4258, 4205, 4258, 3380, 89, 4230, 1134, 1180, 4343,
	4342, 4209, 1573, 1573, 4235, 3946, 3636, 4339, 4338, 1267,
	2044, 2046, 4232, 1098, 4201, 4222, 1414, 1267, 4824, 2145,
	1140, 2161, 2154, 2858, 2734, 4336, 4128, 1157, 1154, 2048,
	1352, 1267, 2050, 1156, 2176, 1155, 2049, 1942, 1153, 4280,
	2043, 4077, 1411, 3124, 3693, 1639, 1637, 1573, 4296, 1003,
	4313, 2149, 4289, 2578, 2642, 4292, 3288, 1915, 1114, 1136,
	2639, 1293, 1125, 1113, 4330, 3406, 3385, 3680, 3895, 4304,
	2490, 4333, 4291, 882, 3334, 2645, 1573, 1573, 1573, 1573,
	1573, 1573, 1341, 1284, 4383, 1267, 2758, 1267, 2750, 4294,
	2746, 3477, 1411, 3114, 4367, 1796, 4440, 1893, 3125, 1792,
	1396, 1118, 4372, 2576, 1150, 1150, 1150, 1906, 4323, 3266,
	1266, 4322, 2500, 4321, 3687, 4384, 4331, 4329, 3429, 2851,
	4804, 3812, 1411, 3198, 2305, 1246, 4341, 1150, 1245, 4348,
	1150, 1150, 4358, 4337, 1291, 1244, 4349, 4786, 4783, 4387,
	1150, 2243, 4346, 2059, 2317, 3631, 3632, 4378, 1150, 1150,
	2137, 2898, 2588, 3650, 1130, 1517, 2443, 3745, 4369, 3391,
	4056, 4385, 1600, 795, 4494, 1411, 4392, 1573, 1341, 1142,
	1878, 3045, 4300, 3044, 4648, 1381, 1379, 4399, 1378, 4418,
	4398, 1377, 1352, 4952, 3955, 3954, 3953, 4406, 237, 3234,
	4401, 1817, 1809, 234, 4405, 236, 235, 4353, 3900, 1411,
	4413, 3435, 4878, 4407, 3977, 3622, 23, 1150, 22, 21,
	4459, 116, 42, 20, 155, 133, 152, 151, 125, 150,
	1150, 4429, 149, 148, 147, 154, 4423, 2018, 146, 1150,
	145, 4351, 140, 144, 2059, 143, 142, 141, 139, 137,
	4435, 138, 132, 1150, 4368, 136, 1150, 135, 134, 131,
	130, 129, 4446, 4447, 4467, 128, 4468, 127, 1286, 126,
	1150, 4508, 4509, 1150, 124, 2053, 156, 4391, 123, 122,
	1411, 121, 120, 1268, 4497, 119, 118, 1352, 117, 783,
	784, 61, 60, 115, 113, 114, 19, 1573, 1573, 1573,
	40, 4469, 1307, 1266, 4526, 14, 4528, 2180, 4529, 65,
	66, 1266, 2056, 4476, 270, 4466, 270, 270, 1272, 1336,
	270, 1346, 18, 4516, 13, 1266, 35, 92, 105, 4449,
	4542, 4450, 1360, 104, 103, 36, 4530, 101, 4560, 100,
	790, 4552, 34, 790, 3633, 4563, 17, 4556, 16, 15,
	98, 1411, 97, 4514, 1573, 4571, 96, 33, 31, 4506,
	2165, 11, 4519, 9, 37, 2003, 2053, 270, 12, 270,
	270, 1336, 4527, 270, 270, 1270, 5, 4518, 1346, 1266,
	187, 1266, 186, 189, 4597, 185, 4544, 1150, 1150, 4545,
	188, 4592, 270, 4532, 1542, 4554, 91, 184, 183, 90,
	4258, 29, 10, 2056, 1150, 2059, 4579, 4575, 179, 2047,
	1562, 4547, 4548, 4534, 4601, 4572, 4603, 1577, 4570, 4549,
	4063, 4595, 4593, 82, 181, 180, 1352, 178, 177, 1352,
	176, 1352, 1352, 83, 80, 175, 1602, 86, 174, 1346,
	81, 85, 4594, 270, 270, 4600, 1336, 84, 27, 1150,
	4599, 1150, 4387, 1150, 4632, 6, 4589, 4634, 64, 4635,
	4636, 7, 4408, 1272, 3731, 108, 1268, 790, 109, 270,
	270, 38, 4520, 78, 1268, 4643, 1150, 77, 1272, 76,
	75, 1665, 4612, 4613, 26, 63, 4611, 25, 1268, 173,
	218, 1672, 217, 216, 1267, 215, 909, 214, 4671, 213,
	2047, 212, 4621, 211, 206, 210, 2281, 4615, 208, 207,
	209, 205, 228, 227, 221, 220, 226, 225, 4641, 2495,
	1270, 3466, 224, 4642, 223, 222, 4680, 2053, 219, 4670,
	4638, 231, 1272, 1272, 204, 1270, 203, 202, 200, 1150,
	1150, 2582, 1268, 4664, 1268, 4258, 4663, 196, 4691, 1150,
	199, 201, 4705, 4706, 198, 3601, 1272, 1904, 197, 1272,
	4258, 195, 230, 1573, 2056, 229, 72, 3494, 171, 172,
	71, 170, 169, 1573, 270, 4679, 4726, 168, 4681, 4728,
	1518, 167, 166, 3626, 165, 164, 70, 1150, 1150, 1270,
	1270, 24, 2, 1, 3654, 0, 0, 1150, 270, 4686,
	0, 0, 4740, 4703, 4741, 3542, 4713, 4714, 0, 4712,
	0, 0, 2757, 1270, 4258, 4258, 1270, 4717, 4720, 4719,
	4575, 0, 0, 0, 4725, 0, 0, 3556, 4736, 3558,
	4734, 4733, 0, 0, 4737, 4738, 0, 4739, 4258, 1267,
	0, 4258, 0, 0, 4749, 1150, 1150, 4757, 3703, 1150,
	0, 0, 0, 1352, 1267, 0, 1352, 4753, 0, 0,
	3726, 2047, 4758, 0, 3592, 2752, 0, 0, 3598, 0,
	4760, 0, 4785, 4788, 0, 4803, 0, 0, 0, 4806,
	0, 4795, 4748, 4807, 4796, 4768, 4769, 4800, 0, 4777,
	4776, 0, 0, 0, 0, 0, 1341, 3263, 3264, 0,
	0, 0, 0, 0, 4794, 4677, 0, 0, 1267, 1267,
	0, 4829, 0, 4790, 0, 0, 1150, 1150, 1150, 0,
	0, 0, 0, 0, 0, 3722, 0, 0, 0, 0,
	0, 0, 1267, 4690, 0, 1267, 4812, 0, 3720, 0,
	4789, 4827, 0, 0, 4793, 4820, 4817, 3662, 3713, 0,
	0, 4828, 1150, 0, 0, 0, 4859, 0, 0, 0,
	0, 4864, 0, 0, 4842, 4724, 4840, 4841, 4843, 0,
	4860, 0, 0, 0, 0, 0, 0, 0, 1266, 0,
	0, 0, 0, 0, 4887, 2180, 0, 4886, 0, 4885,
	4874, 2514, 4876, 0, 0, 0, 0, 0, 4893, 703,
	0, 0, 0, 4895, 0, 0, 0, 1150, 4877, 0,
	4875, 0, 0, 0, 0, 1352, 4862, 0, 0, 4552,
	270, 4906, 270, 4892, 4891, 0, 270, 0, 0, 0,
	0, 3724, 4900, 4899, 0, 4923, 4901, 0, 0, 1542,
	1336, 2023, 270, 4914, 270, 2029, 0, 3715, 4915, 4903,
	4919, 270, 4917, 719, 4912, 4913, 0, 0, 270, 4939,
	4937, 0, 3714, 4929, 4926, 1272, 4785, 1272, 4938, 4788,
	4948, 4806, 4927, 0, 2097, 4946, 4945, 4936, 4934, 3361,
	3362, 3363, 3364, 0, 2656, 4947, 270, 4949, 4944, 0,
	0, 4954, 0, 270, 4953, 0, 0, 0, 0, 4813,
	0, 0, 0, 1352, 0, 4815, 0, 0, 0, 4975,
	0, 2171, 4970, 4976, 4968, 4977, 2172, 0, 3723, 0,
	4982, 4980, 1270, 1266, 1270, 0, 790, 0, 4979, 0,
	0, 4973, 1150, 1150, 0, 4984, 0, 0, 1266, 0,
	1150, 1268, 1150, 1150, 0, 0, 4988, 4258, 5001, 4258,
	0, 5000, 5003, 4994, 0, 3711, 0, 0, 5005, 0,
	5004, 0, 5008, 4998, 5007, 5006, 0, 5002, 0, 4997,
	0, 0, 3126, 0, 0, 0, 0, 5012, 0, 5013,
	2827, 5015, 5019, 0, 5017, 5016, 5014, 5023, 5011, 5022,
	0, 0, 1266, 1266, 5025, 1150, 0, 0, 0, 5026,
	0, 5028, 5019, 5030, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1266, 0, 73, 1266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2173, 0, 0, 0, 0, 74, 0, 4995, 4996, 0,
	0, 1267, 0, 1267, 0, 0, 0, 0, 2177, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3721, 3716, 3717, 3718,
	3719, 0, 0, 0, 0, 0, 1268, 0, 0, 0,
	5027, 88, 0, 0, 270, 0, 0, 0, 270, 0,
	0, 1268, 0, 0, 0, 0, 0, 0, 4015, 0,
	0, 4016, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2174, 2179, 0, 0, 2909, 0, 0,
	0, 0, 903, 0, 0, 0, 0, 0, 0, 0,
	2757, 0, 0, 0, 0, 0, 0, 110, 0, 0,
	0, 0, 0, 94, 107, 1268, 1268, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 270, 0, 0, 1826,
	1827, 0, 270, 0, 0, 0, 0, 0, 270, 1268,
	0, 0, 1268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1857, 3224, 270, 0, 270, 0, 0, 1829,
	703, 0, 270, 0, 0, 0, 2175, 0, 4103, 4104,
	4105, 0, 0, 95, 790, 2361, 4111, 4112, 909, 0,
	0, 2757, 2757, 0, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 270, 0, 1336,
	270, 0, 2169, 1845, 0, 0, 2181, 4020, 0, 0,
	0, 0, 0, 0, 790, 3337, 3338, 0, 3355, 3356,
	3357, 270, 0, 0, 2752, 2752, 0, 0, 0, 2398,
	0, 0, 0, 0, 270, 270, 0, 270, 0, 270,
	0, 270, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4143,
	2167, 0, 0, 0, 0, 0, 0, 0, 2435, 0,
	0, 2436, 0, 2437, 0, 1266, 0, 1266, 0, 0,
	0, 1851, 1852, 1853, 1854, 270, 270, 270, 270, 0,
	3352, 1834, 0, 0, 0, 3337, 3338, 0, 3355, 3356,
	3357, 0, 0, 2168, 0, 0, 0, 0, 0, 0,
	0, 99, 0, 0, 770, 0, 0, 4145, 790, 0,
	0, 0, 0, 0, 0, 3768, 3769, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2757, 2757, 2757, 2757, 0, 0, 0,
	0, 0, 0, 4207, 4208, 1843, 1844, 190, 102, 0,
	3352, 106, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3343, 0, 2176,
	0, 0, 0, 0, 0, 0, 0, 238, 1849, 0,
	0, 0, 0, 0, 0, 904, 2752, 2752, 2752, 2752,
	153, 2590, 0, 0, 0, 3832, 3833, 3834, 3835, 3836,
	3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845, 3846,
	3847, 3848, 3849, 3850, 3851, 0, 3855, 0, 1268, 0,
	1268, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 3359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3343, 0, 0,
	157, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 703, 0, 0, 194, 0, 0, 0, 0,
	0, 0, 0, 239, 3353, 0, 0, 270, 0, 2361,
	0, 0, 0, 0, 0, 0, 703, 232, 0, 0,
	0, 0, 0, 270, 0, 703, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	1855, 0, 3359, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 270, 1346, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 4281, 4400, 3353, 4402, 4403, 4404, 0, 0,
	0, 0, 0, 0, 4290, 0, 0, 4293, 0, 0,
	0, 0, 0, 0, 0, 0, 270, 1346, 0, 0,
	719, 0, 719, 0, 0, 0, 2873, 0, 0, 0,
	0, 1881, 270, 0, 0, 270, 0, 0, 0, 270,
	0, 270, 0, 0, 0, 0, 1336, 0, 270, 270,
	0, 1346, 1346, 2889, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3354,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4452, 0, 0, 0, 4366, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3337, 3338, 2926, 3355, 3356, 3357, 0, 0,
	0, 0, 0, 3392, 0, 270, 0, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 270,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 3421, 0, 0, 3354,
	0, 0, 0, 790, 0, 0, 0, 0, 0, 0,
	0, 3434, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3352, 0, 270,
	0, 0, 0, 0, 0, 0, 0, 3455, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4546, 0, 0, 0, 0, 3349,
	3350, 3351, 270, 3066, 0, 0, 3348, 3346, 3347, 3339,
	3340, 3341, 3342, 3344, 3345, 1105, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1542,
	0, 0, 270, 0, 270, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3109, 0, 0, 0, 0, 0, 0, 0, 2757,
	2757, 2926, 0, 703, 3343, 0, 0, 0, 0, 0,
	0, 0, 3138, 909, 2926, 0, 0, 0, 0, 3349,
	3350, 3351, 0, 0, 0, 0, 3348, 3346, 3347, 3339,
	3340, 3341, 3342, 3344, 3345, 270, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3360, 0, 0, 0,
	0, 0, 2752, 2752, 270, 1336, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 4533, 1346, 270, 0, 3359,
	1336, 0, 1336, 0, 1336, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2757,
	2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757,
	2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 2757, 0,
	2757, 3353, 0, 0, 0, 0, 0, 0, 0, 270,
	270, 270, 270, 1336, 0, 0, 1336, 0, 270, 0,
	3434, 0, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752,
	2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752, 2752,
	2752, 2752, 0, 2752, 270, 0, 0, 0, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 1826, 1827, 0,
	0, 0, 0, 1870, 1871, 1872, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1857, 0, 0, 0, 0, 0, 0, 1829, 0, 0,
	2361, 0, 0, 0, 0, 0, 1876, 0, 1826, 1827,
	0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0,
	0, 0, 0, 1882, 0, 0, 0, 0, 0, 0,
	1863, 1857, 1828, 0, 0, 0, 0, 0, 1829, 0,
	0, 0, 1848, 0, 0, 0, 0, 1876, 0, 0,
	0, 1845, 0, 0, 3746, 0, 3354, 1409, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 0, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 0, 1542, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 0, 0,
	0, 3337, 3338, 0, 3355, 3356, 3357, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4144, 0, 0, 0, 0, 0, 1851,
	1852, 1853, 1854, 0, 3789, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3805, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 3352, 0, 1867, 0,
	1834, 1877, 0, 0, 0, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 0, 4432, 3349, 3350, 3351, 0,
	0, 0, 0, 3348, 3346, 3347, 3339, 3340, 3341, 3342,
	3344, 3345, 0, 1843, 1844, 0, 0, 0, 0, 1867,
	0, 0, 1877, 0, 0, 0, 0, 0, 0, 1856,
	1858, 1865, 270, 1826, 1827, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 1849, 1874, 270, 0,
	0, 0, 0, 703, 1843, 1844, 1857, 0, 703, 0,
	0, 703, 4479, 1829, 703, 703, 0, 0, 0, 0,
	703, 0, 1865, 3343, 0, 0, 0, 0, 270, 0,
	0, 0, 0, 0, 0, 0, 3898, 1849, 0, 1882,
	270, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 1875, 0, 270, 270, 0, 3359, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1879, 2926, 2926, 270, 0, 2023, 0,
	0, 0, 0, 3771, 2926, 0, 2029, 0, 1855, 0,
	3353, 0, 0, 0, 0, 2926, 2029, 0, 2926, 2029,
	0, 0, 2029, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 1850, 0, 0, 0, 1834, 270, 270, 2023, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 1855,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	2023, 0, 270, 0, 3561, 3561, 0, 0, 0, 1336,
	0, 0, 1850, 0, 0, 0, 0, 0, 0, 4620,
	0, 0, 0, 0, 1856, 1858, 1879, 0, 0, 1881,
	0, 2926, 0, 2926, 0, 3589, 2926, 2023, 0, 1868,
	2926, 2023, 0, 0, 790, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4647, 0, 0, 0,
	1881, 0, 1336, 0, 0, 0, 0, 0, 0, 270,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 4669, 0, 0, 0, 0, 0, 270, 0, 3627,
	0, 1866, 3629, 2926, 0, 3354, 270, 0, 0, 0,
	270, 0, 0, 1346, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 270, 0,
	0, 0, 0, 3109, 0, 0, 1336, 0, 270, 0,
	0, 2926, 1866, 703, 0, 0, 0, 0, 0, 0,
	2926, 0, 1840, 1841, 1847, 1869, 1846, 1842, 1879, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0,
	0, 0, 0, 3312, 0, 0, 0, 3313, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3737,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 1857,
	0, 0, 0, 0, 1855, 0, 1829, 0, 0, 3743,
	0, 0, 1542, 0, 0, 1336, 270, 0, 270, 1857,
	0, 0, 0, 0, 1336, 0, 1829, 1850, 0, 0,
	0, 0, 1882, 0, 0, 3349, 3350, 3351, 0, 0,
	0, 1828, 3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344,
	3345, 1848, 1882, 0, 0, 270, 0, 0, 0, 1826,
	1827, 1828, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 1848, 0, 0, 0, 0, 0, 0, 0, 2757,
	1845, 1863, 1857, 0, 0, 1881, 0, 0, 0, 1829,
	3337, 3338, 0, 3355, 3356, 3357, 0, 0, 1876, 0,
	4200, 0, 1981, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3777, 3810, 0, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 4218, 2752, 0, 1848, 0, 3766, 0, 1851, 1852,
	1853, 1854, 0, 1845, 0, 0, 2757, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 3352, 0, 0, 1834, 0,
	0, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1856, 1858, 2752,
	0, 0, 0, 1862, 0, 0, 0, 0, 0, 0,
	270, 270, 0, 0, 0, 0, 0, 1856, 1858, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 703, 703, 0, 0, 0,
	0, 0, 1843, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 1849, 0, 0, 0, 0,
	0, 0, 3343, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 1877, 0, 1849, 1857, 270, 0, 0,
	1856, 1858, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 1097, 1874, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 1865, 0, 0, 0, 3359, 0, 0,
	0, 1879, 0, 2757, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 1409, 0, 0, 0, 0, 790,
	0, 1879, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3353,
	0, 0, 0, 0, 4424, 0, 0, 0, 0, 0,
	2757, 0, 3561, 0, 1875, 0, 2752, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 270, 0, 0,
	0, 0, 0, 1864, 0, 2757, 0, 1855, 0, 0,
	1850, 0, 0, 0, 1879, 0, 0, 4424, 0, 0,
	2023, 0, 270, 0, 0, 1834, 719, 719, 1346, 0,
	1850, 0, 0, 2752, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 2514, 270, 3109, 0, 0, 3109, 2029, 2752, 0,
	0, 1862, 270, 0, 0, 0, 0, 0, 1881, 0,
	1855, 0, 270, 0, 1856, 1858, 0, 270, 0, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 2926, 270, 0, 0, 0, 0, 0, 0, 0,
	0, 3138, 3138, 0, 0, 0, 0, 909, 2926, 0,
	1868, 0, 2514, 0, 3354, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 3337, 3338,
	0, 3355, 3356, 3357, 0, 0, 270, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 3352, 1862, 0, 0, 0, 0, 0,
	0, 0, 4163, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	1862, 0, 0, 0, 2633, 0, 1862, 0, 2634, 0,
	0, 0, 1862, 0, 3349, 3350, 3351, 0, 0, 0,
	0, 3348, 3346, 3347, 3339, 3340, 3341, 3342, 3344, 3345,
	0, 1826, 1827, 0, 0, 270, 0, 1850, 0, 0,
	0, 1542, 0, 270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1857, 0, 0, 270, 0, 0,
	3343, 1829, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1346, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 1346, 0,
	270, 1346, 0, 0, 0, 1881, 1828, 0, 0, 2926,
	2926, 0, 3561, 2926, 0, 0, 1848, 0, 0, 0,
	0, 4260, 1862, 4260, 1542, 1845, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 2926, 0, 2029, 0, 0,
	1862, 1542, 1542, 270, 2023, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2023, 0, 270,
	2023, 0, 270, 0, 3561, 0, 0, 3337, 3338, 0,
	3355, 3356, 3357, 0, 0, 0, 0, 3353, 0, 0,
	0, 3765, 0, 2926, 0, 2926, 270, 0, 0, 3776,
	0, 0, 0, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 1851, 1852, 1853, 1854, 0, 0, 0,
	1862, 0, 0, 1834, 0, 0, 1862, 0, 0, 0,
	0, 2926, 2926, 1355, 0, 0, 0, 3109, 3109, 0,
	0, 0, 0, 0, 4355, 0, 0, 0, 0, 0,
	0, 0, 3352, 0, 0, 270, 0, 0, 0, 0,
	1097, 1097, 1097, 1879, 0, 270, 0, 0, 0, 0,
	0, 0, 1856, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 1508, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	0, 0, 1826, 1827, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1544, 0, 1550, 0, 1556, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	1849, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3354, 0, 0, 0, 0, 0, 0, 3343,
	0, 0, 0, 0, 0, 1135, 112, 0, 1882, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 1656, 0, 1661,
	0, 0, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1674, 0, 1679, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 3359, 0, 2926, 2029, 0, 2029,
	0, 0, 4471, 0, 0, 0, 0, 0, 0, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 2756, 0,
	0, 4495, 0, 4495, 0, 0, 0, 0, 0, 0,
	112, 1862, 0, 0, 0, 0, 3353, 1862, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 790, 0, 0,
	0, 0, 1744, 0, 1834, 1750, 0, 0, 3561, 0,
	1336, 0, 3349, 3350, 3351, 1850, 0, 0, 0, 3348,
	3346, 3347, 3339, 3340, 3341, 3342, 3344, 3345, 2023, 0,
	270, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1856, 1858, 803, 0, 4471, 0, 0,
	4260, 0, 1879, 1542, 0, 0, 0, 0, 1072, 0,
	2926, 0, 0, 1881, 0, 0, 0, 0, 0, 1092,
	814, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	4586, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1542, 1883, 1884, 1885, 1886, 1887, 1888, 1889,
	1890, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1256, 270, 270, 0,
	0, 0, 0, 0, 0, 0, 1903, 0, 0, 0,
	0, 3354, 1916, 0, 0, 0, 0, 0, 0, 0,
	0, 3810, 0, 0, 0, 0, 0, 0, 0, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 808, 3040, 0, 3561, 4640, 0, 0,
	820, 0, 0, 0, 0, 4471, 0, 1879, 0, 0,
	0, 0, 0, 0, 813, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4260, 0, 3030, 3028, 0,
	0, 0, 0, 0, 3032, 3034, 3024, 0, 0, 0,
	4260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 270, 812, 0, 1975, 1975, 1975,
	0, 0, 0, 0, 0, 0, 719, 3046, 0, 0,
	0, 0, 765, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 4260, 4260, 0, 0, 0, 0,
	4355, 3349, 3350, 3351, 272, 0, 0, 810, 3348, 3346,
	3347, 3339, 3340, 3341, 3342, 3344, 3345, 0, 4260, 0,
	270, 4260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2029, 0, 0, 0, 0, 0, 0, 0, 0,
	1542, 0, 1542, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 819, 0, 0, 0, 0,
	1346, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4766, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4495, 0,
	0, 270, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1097, 0, 0, 0, 0, 0, 3026, 0,
	0, 0, 0, 0, 0, 2926, 0, 0, 0, 3042,
	0, 0, 0, 0, 0, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 805, 0, 0, 0, 0, 0, 1862, 0,
	0, 3041, 3031, 3029, 3033, 3035, 3025, 3027, 3043, 0,
	0, 0, 270, 0, 0, 0, 0, 0, 3037, 3039,
	0, 0, 0, 809, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 3810, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1112,
	0, 0, 3047, 0, 0, 0, 0, 0, 1542, 0,
	0, 764, 0, 0, 0, 1862, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 815, 0, 0, 0,
	0, 0, 807, 1862, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 1862, 1862, 1862, 4471, 804,
	0, 0, 0, 1862, 0, 1862, 1862, 1862, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 2756, 2756, 0,
	0, 0, 0, 0, 0, 0, 811, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 0, 2926, 0, 0,
	766, 0, 1826, 1827, 0, 0, 0, 4260, 0, 4260,
	0, 806, 1542, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1857, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 817, 818, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 112, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 3048, 0, 0, 0, 0, 1828, 0, 0,
	0, 3036, 3038, 1862, 0, 0, 1862, 0, 0, 1862,
	0, 0, 1862, 0, 0, 0, 0, 3138, 1862, 1862,
	1862, 1862, 1862, 1862, 1862, 0, 0, 0, 2926, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3138, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	112, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2422, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 0, 3358, 0, 2756,
	2756, 2756, 2756, 0, 0, 0, 1862, 0, 1862, 0,
	0, 0, 0, 1862, 1834, 0, 0, 0, 0, 0,
	0, 2449, 0, 0, 1092, 112, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 112, 2489, 112, 2493,
	0, 0, 0, 1856, 1858, 0, 2507, 0, 0, 0,
	0, 0, 0, 2516, 2517, 2518, 2519, 2520, 2521, 2522,
	2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532,
	2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542,
	2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 0,
	2557, 0, 2559, 2560, 2561, 2562, 0, 0, 0, 0,
	0, 1849, 0, 112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 1827, 0, 0, 2586, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1903, 0, 0, 0, 2637, 0, 0, 1857, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	2667, 2670, 2673, 2676, 0, 0, 2682, 2683, 2684, 2685,
	2686, 2687, 2688, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1879, 0, 1828,
	1826, 1827, 0, 0, 2748, 0, 2760, 2762, 2767, 1848,
	0, 0, 0, 0, 0, 0, 0, 0, 1845, 0,
	1072, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1896, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 1902,
	0, 0, 0, 1908, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 3252, 1848, 1850, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 1112, 1112, 1112, 1862, 1862, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	3245, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1856, 1858, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 1995, 0, 1998, 0, 112, 0, 0,
	0, 1146, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 1856, 1858, 0, 1863, 1857, 1830, 1831, 1832, 1833,
	1835, 1836, 1829, 0, 0, 0, 1862, 269, 269, 269,
	0, 1876, 0, 0, 0, 0, 1843, 1844, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 833, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 1849,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 1879,
	0, 0, 1862, 1862, 833, 2756, 2756, 0, 0, 1862,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3358,
	3358, 0, 0, 1862, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 0, 3069, 3070, 0,
	3072, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 1862,
	0, 0, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 1850, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756, 2756,
	2756, 2756, 2756, 2756, 2756, 0, 2756, 3358, 3358, 3358,
	3358, 1855, 0, 1867, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 1856, 1858, 0, 1881, 0, 0, 0,
	0, 0, 1269, 0, 1850, 0, 0, 0, 0, 1873,
	0, 1874, 1862, 0, 0, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 3190, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1883,
	1884, 0, 0, 0, 0, 0, 1864, 2727, 2728, 2729,
	2730, 2723, 2724, 2725, 2726, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 1092, 0, 1092, 0, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 3246, 3247, 0, 0, 1495,
	0, 3253, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 1862, 1862,
	3267, 3268, 0, 0, 0, 0, 2637, 0, 2703, 2704,
	2705, 2706, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2715, 2716, 2717, 2718, 2711, 2712, 2713, 2714, 2719,
	2720, 2721, 2722, 1868, 0, 0, 0, 0, 112, 0,
	0, 3277, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3291, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3303, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1112, 0, 0, 0, 0, 0,
	0, 0, 1495, 0, 1182, 0, 0, 0, 0, 0,
	2699, 2700, 2701, 2702, 2707, 2708, 2709, 2710, 0, 0,
	0, 0, 0, 0, 1072, 0, 0, 1072, 1072, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4169, 0, 2575, 0, 0, 2767, 2767, 2767, 1862,
	1862, 0, 0, 1862, 3358, 3358, 1862, 0, 0, 0,
	1862, 1975, 0, 1092, 0, 0, 0, 1862, 0, 3396,
	0, 0, 0, 1902, 0, 0, 0, 1902, 0, 0,
	1862, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 1862, 1862, 1862, 1862, 1495, 0,
	0, 0, 0, 1862, 0, 1862, 0, 0, 3358, 3358,
	3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358,
	3358, 3358, 3358, 3358, 3358, 3358, 3358, 3358, 0, 0,
	0, 3358, 0, 0, 1862, 1862, 0, 0, 0, 0,
	1256, 0, 0, 0, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 1998, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1097, 0, 0,
	0, 0, 0, 269, 0, 269, 269, 0, 0, 269,
	0, 1097, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1273, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1862, 0, 0, 3521, 0, 0, 0, 0, 0,
	0, 0, 0, 1862, 0, 0, 269, 0, 269, 269,
	0, 0, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 833, 1862, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3572,
	3573, 0, 0, 1862, 1862, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 269, 269, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1826, 1827, 0, 0, 0, 0, 0, 0, 269, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1857, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1862, 0, 1882, 0, 0, 0,
	0, 0, 0, 1495, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 1862, 0,
	0, 0, 1862, 1862, 0, 0, 1862, 1862, 0, 0,
	0, 1862, 0, 269, 0, 1862, 0, 0, 0, 112,
	1862, 0, 112, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2756, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 0,
	112, 0, 1834, 112, 0, 0, 0, 0, 0, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2507, 0, 0, 0, 0, 0, 3763, 3764, 0,
	0, 3767, 2756, 0, 0, 3770, 0, 0, 0, 0,
	0, 0, 0, 0, 3774, 0, 0, 0, 0, 0,
	0, 1856, 1858, 3781, 0, 0, 1495, 0, 3396, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3794, 0, 0, 1843, 1844, 0, 0,
	0, 0, 1495, 0, 0, 112, 0, 1862, 0, 0,
	0, 0, 0, 3817, 3818, 0, 3819, 3820, 3821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 3827, 0, 0, 0, 3829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 3858, 3859, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3870,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3879, 1879, 0, 0, 0, 1997,
	0, 1269, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 1862, 1862, 0, 0,
	0, 269, 1997, 269, 0, 0, 1862, 1862, 3358, 2756,
	833, 0, 2575, 0, 0, 1862, 0, 833, 1862, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 1902, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 269, 0, 1850, 3358, 2756, 3935, 0, 0,
	1273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 0, 0, 0, 3947, 0, 0, 0,
	1862, 2756, 0, 0, 0, 0, 0, 0, 1862, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 1862,
	0, 0, 1495, 0, 0, 0, 0, 1273, 3976, 0,
	0, 0, 1881, 0, 0, 0, 1262, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3997, 3998, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	1273, 0, 265, 265, 699, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3358, 0, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1862, 3358, 0, 0, 1862, 0, 0, 0,
	0, 0, 0, 0, 1273, 1256, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3358, 0, 0, 0, 0,
	0, 1256, 0, 269, 1975, 0, 0, 833, 0, 0,
	0, 0, 0, 4098, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 269, 4141, 4142,
	0, 0, 0, 0, 4146, 4147, 0, 0, 0, 4150,
	4151, 0, 0, 269, 0, 269, 0, 4155, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 4159, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4164, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 112, 112, 0, 112, 0, 269, 0, 0, 269,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 1862,
	0, 0, 0, 833, 269, 0, 269, 0, 269, 0,
	269, 0, 269, 0, 0, 112, 112, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 269, 269, 269, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1862, 0, 0, 0, 1862,
	0, 1256, 0, 4301, 1092, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 112,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1269, 0, 0, 1495,
	0, 0, 0, 0, 0, 0, 4419, 4420, 4421, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 2507,
	0, 0, 4430, 4431, 0, 0, 0, 0, 0, 1112,
	0, 0, 0, 0, 0, 0, 269, 0, 0, 0,
	4439, 4442, 0, 1112, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 269, 0, 0, 0, 269, 0,
	269, 0, 4496, 0, 0, 112, 0, 269, 269, 0,
	0, 4504, 0, 0, 0, 0, 0, 269, 0, 0,
	0, 0, 0, 1256, 1256, 4512, 0, 0, 1097, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 1322, 0,
	1322, 1322, 4521, 0, 0, 4523, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 269, 1273, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 1406, 1495, 0, 0, 1273, 1273, 1516, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 1273, 1273, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1654, 1655, 0, 0, 0, 0, 0,
	0, 269, 0, 833, 0, 0, 0, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4646, 0, 0, 0, 4650, 1495, 0, 0, 1495,
	0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2060, 2060, 1273, 1863, 1857, 0, 0, 0, 0,
	0, 0, 1829, 0, 269, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 0, 269, 0, 0, 1882, 112,
	0, 0, 0, 0, 0, 0, 269, 1828, 1771, 0,
	0, 0, 0, 0, 0, 0, 1495, 1848, 0, 0,
	0, 1097, 1097, 0, 0, 1256, 1845, 0, 0, 0,
	0, 4721, 0, 1495, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 269, 269,
	269, 269, 0, 0, 0, 0, 112, 269, 0, 0,
	2507, 0, 269, 0, 0, 0, 0, 0, 0, 4442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 269, 1851, 1852, 1853, 1854, 0, 0,
	0, 269, 0, 0, 1834, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 1273, 0, 1097, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1273, 1867, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 1856, 1858, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 0, 0, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 4839, 4839,
	4839, 0, 112, 0, 0, 0, 1865, 0, 1256, 0,
	0, 0, 0, 0, 0, 0, 1256, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4863, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 750, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2013, 0, 0, 0, 0, 0, 733, 1875, 0, 0,
	0, 734, 0, 0, 0, 0, 2024, 0, 1516, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 4839,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	735, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1322, 736, 0, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 2060, 112, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 756, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 1269, 1273, 0, 0, 738, 0, 0, 0, 0,
	0, 0, 0, 0, 112, 0, 0, 1269, 0, 0,
	0, 0, 0, 1868, 0, 0, 0, 112, 0, 0,
	739, 0, 0, 0, 4839, 4989, 0, 0, 0, 0,
	0, 0, 4993, 0, 0, 0, 0, 1997, 0, 0,
	112, 0, 0, 740, 1881, 0, 741, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 765, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1495, 0, 0, 0, 0, 0, 750, 0, 755, 1273,
	269, 0, 0, 0, 269, 269, 0, 0, 0, 0,
	0, 0, 1273, 0, 1273, 0, 733, 1495, 0, 0,
	0, 734, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 1273, 0, 0, 0, 269, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 752, 0, 0, 0,
	735, 3779, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 736, 0, 0, 0, 269, 269, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 1997, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 756, 0, 2303, 0, 0, 0,
	2310, 0, 0, 0, 0, 0, 0, 0, 762, 0,
	743, 0, 2323, 0, 0, 738, 0, 0, 0, 1495,
	1495, 0, 1495, 0, 0, 0, 0, 0, 2335, 0,
	2335, 0, 0, 0, 0, 0, 2342, 0, 0, 763,
	739, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 269, 0,
	0, 0, 0, 740, 0, 0, 741, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 833, 0, 0, 0,
	0, 2310, 764, 765, 2370, 269, 0, 0, 0, 269,
	745, 0, 0, 0, 0, 760, 761, 758, 0, 0,
	0, 0, 0, 753, 0, 2390, 746, 269, 755, 0,
	0, 0, 0, 0, 0, 0, 0, 1269, 1495, 2406,
	0, 2408, 0, 2410, 0, 2412, 0, 2413, 0, 2575,
	0, 0, 0, 0, 0, 0, 0, 0, 1495, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 747, 0,
	754, 0, 0, 0, 0, 0, 0, 0, 748, 0,
	0, 0, 0, 0, 0, 0, 752, 0, 0, 2440,
	2441, 2442, 749, 0, 0, 0, 0, 757, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 751, 0, 0, 269, 0, 269, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1159, 0, 0, 0, 0,
	743, 0, 0, 0, 269, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 763,
	0, 744, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 271, 271, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1495, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 764, 0, 1273, 1273, 0, 0, 112, 0,
	745, 0, 0, 0, 0, 760, 761, 758, 0, 0,
	1273, 0, 0, 753, 0, 0, 746, 0, 271, 1495,
	0, 0, 0, 0, 0, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1495, 0, 0, 0, 0, 747, 0,
	754, 0, 0, 0, 0, 2060, 0, 0, 748, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1269,
	1269, 0, 749, 0, 0, 0, 0, 757, 0, 0,
	0, 2824, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 766, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 751, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1495, 0, 0, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 112, 2060,
	0, 0, 0, 0, 0, 0, 833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2875, 0, 0, 1322,
	0, 0, 0, 1322, 0, 1322, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1495, 0, 0, 0, 0,
	163, 0, 2323, 0, 0, 0, 0, 0, 73, 0,
	46, 45, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 74, 0, 0, 158, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 79, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 67, 0, 0, 0, 0, 0, 0, 48,
	0, 160, 1273, 0, 0, 0, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 1273, 47,
	0, 88, 1273, 0, 0, 0, 0, 0, 0, 0,
	1273, 269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 0, 50, 68,
	269, 0, 0, 0, 0, 0, 0, 51, 0, 0,
	0, 269, 57, 1516, 0, 0, 0, 161, 0, 0,
	1273, 269, 0, 0, 0, 49, 0, 110, 0, 0,
	0, 269, 0, 94, 107, 0, 269, 0, 0, 0,
	0, 269, 0, 0, 0, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1273, 0, 1273,
	0, 1269, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1112, 1112, 52, 2310, 0, 0, 0,
	0, 0, 0, 0, 0, 2323, 0, 0, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 1273, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3160,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3171, 0,
	3174, 0, 0, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1112, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2060, 2060, 0, 0, 0, 0, 0,
	0, 0, 0, 3206, 1516, 3208, 1516, 0, 0, 0,
	0, 0, 3214, 0, 0, 0, 0, 0, 0, 0,
	0, 99, 2060, 2060, 1269, 0, 0, 0, 0, 0,
	0, 0, 1269, 0, 0, 0, 0, 0, 0, 53,
	0, 0, 0, 0, 0, 0, 1997, 0, 1322, 0,
	0, 0, 0, 0, 56, 2060, 3243, 0, 0, 59,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 69,
	0, 0, 0, 0, 0, 0, 58, 190, 102, 269,
	0, 106, 1273, 1273, 0, 54, 0, 0, 0, 162,
	0, 0, 0, 0, 0, 0, 0, 55, 0, 0,
	1997, 0, 1997, 0, 0, 0, 0, 238, 0, 0,
	0, 0, 0, 0, 0, 62, 0, 0, 1273, 0,
	153, 0, 269, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 159, 0, 271, 269, 271,
	271, 269, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 240, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 269, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	157, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 1415, 271, 271, 0, 194, 271, 271, 0, 0,
	0, 0, 0, 239, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 232, 0, 0,
	0, 0, 0, 0, 269, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 269, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 193, 0, 0, 3, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 271, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 1415, 1273, 0, 0, 1273, 0,
	0, 1415, 271, 271, 0, 1863, 1857, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 0, 1415, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 275, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	1273, 0, 0, 0, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3444, 1273, 1273, 1273, 0, 0,
	0, 0, 1273, 1273, 1273, 1151, 0, 271, 0, 0,
	269, 0, 0, 825, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1273, 0, 0, 0, 0, 0,
	1273, 271, 0, 0, 0, 1322, 0, 0, 0, 1516,
	1516, 825, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	3490, 0, 0, 0, 0, 0, 0, 0, 0, 269,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 1877, 0, 0,
	0, 0, 0, 0, 1856, 1858, 0, 0, 0, 1997,
	3538, 3540, 0, 0, 2323, 0, 0, 0, 0, 0,
	1873, 0, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 1273, 0, 0,
	0, 0, 0, 0, 0, 1273, 269, 269, 0, 1273,
	1273, 0, 1273, 0, 0, 0, 0, 0, 0, 1273,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 1273, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 1273, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 0,
	3651, 0, 0, 1273, 3655, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 1997, 0, 0, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1997,
	1415, 0, 0, 0, 0, 271, 271, 271, 1273, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 271, 0, 269, 1855, 0, 0, 0, 1273, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1850, 0, 271,
	0, 0, 0, 1997, 1997, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 1273, 0, 0,
	0, 0, 0, 0, 1868, 0, 0, 1997, 0, 269,
	1997, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3748, 0, 1516, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 1273, 0, 0, 0,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 3761,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 1273, 1273, 1273, 1273, 1273, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 0, 0, 0,
	269, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 2060, 0, 0,
	0, 0, 3315, 0, 0, 0, 0, 0, 0, 0,
	0, 269, 0, 0, 0, 0, 0, 0, 0, 1273,
	0, 1273, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 1415,
	1415, 271, 0, 1273, 0, 0, 0, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2060, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 271,
	0, 0, 0, 0, 1273, 271, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1273, 1273, 1273, 0, 0, 0, 271, 0, 271,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 1273, 0, 1415, 0, 1415, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 1997, 0, 1997, 0,
	0, 0, 0, 0, 0, 0, 1415, 1415, 0, 0,
	0, 0, 0, 0, 0, 1273, 0, 0, 1273, 1415,
	271, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 1415, 0, 1415, 1415, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 271, 0,
	271, 0, 271, 0, 271, 0, 271, 0, 0, 2060,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2323, 0, 271, 271,
	271, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2323, 0, 1273, 0, 0,
	0, 1574, 0, 0, 0, 0, 4052, 0, 0, 0,
	0, 0, 1273, 0, 0, 0, 4062, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2323, 0, 0, 1415, 0, 4080, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 0,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1273, 1273, 1575, 0,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1273, 0, 0, 1273, 0, 0, 0, 1273, 0, 0,
	4126, 0, 0, 0, 0, 0, 0, 1273, 0, 0,
	0, 0, 0, 0, 1575, 0, 0, 0, 0, 0,
	0, 1575, 0, 0, 0, 0, 0, 1415, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 973, 0, 1022, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 981, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 996, 0, 979, 978, 0, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 998, 271, 0,
	0, 0, 271, 980, 271, 0, 0, 0, 983, 0,
	0, 271, 271, 1033, 0, 0, 0, 0, 0, 0,
	0, 271, 993, 994, 0, 0, 0, 4279, 0, 0,
	0, 1011, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2323, 0, 0, 0, 0, 0, 1023,
	985, 0, 0, 0, 0, 0, 986, 0, 0, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 987,
	0, 0, 0, 0, 0, 0, 0, 0, 1020, 1273,
	0, 1273, 271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 1412, 0, 0, 0, 0, 0, 0,
	1021, 0, 0, 0, 0, 0, 0, 825, 0, 2323,
	0, 0, 0, 0, 825, 0, 989, 0, 0, 4379,
	0, 0, 271, 1415, 977, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 990, 991, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	1413, 999, 997, 0, 0, 0, 0, 0, 0, 992,
	0, 0, 0, 1008, 0, 0, 1028, 1027, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 271, 0, 0,
	0, 1030, 1019, 0, 271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	1415, 0, 0, 1024, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 1415, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 984,
	271, 0, 1032, 1413, 0, 4481, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 982, 0, 0, 0, 1015,
	1016, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1018, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 271, 271, 271, 0, 0, 0, 0,
	0, 271, 0, 0, 0, 0, 271, 1025, 1013, 0,
	0, 0, 1574, 1574, 2323, 0, 1031, 1009, 0, 0,
	1002, 1000, 1412, 1005, 0, 0, 0, 0, 0, 1006,
	0, 0, 975, 0, 1026, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 976, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1017, 0,
	1007, 0, 0, 0, 0, 0, 1004, 0, 0, 1575,
	1575, 0, 0, 0, 0, 0, 1029, 0, 0, 1413,
	0, 0, 0, 0, 1010, 0, 0, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	0, 4610, 1516, 0, 0, 0, 0, 1012, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1574, 0, 1574,
	0, 1574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1014, 0, 0, 0, 0, 0, 1574,
	1574, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1574, 0, 1574, 1574, 1574, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 1575, 0, 1575, 0, 1575, 0,
	825, 0, 0, 0, 0, 1863, 1857, 0, 0, 0,
	0, 0, 0, 1829, 0, 0, 1575, 1575, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 1575,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 1575, 0, 1575, 1575, 1575, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4727, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 0, 0, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1851, 1852, 1853, 1854, 1415,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 4779, 0, 0, 0, 0,
	0, 0, 0, 271, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 0, 0, 1867, 0, 0, 1877, 0, 0,
	1412, 0, 0, 0, 1856, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 271, 271,
	1873, 0, 1874, 0, 0, 0, 4822, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 0, 271,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 1413, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 271,
	271, 0, 0, 271, 0, 0, 1412, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 1879, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	0, 0, 271, 0, 1855, 0, 0, 1415, 0, 1415,
	0, 0, 0, 1415, 0, 0, 0, 0, 0, 0,
	271, 1415, 0, 0, 0, 0, 0, 1850, 0, 271,
	0, 0, 1415, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 271, 0, 1412, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 0,
	1415, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1412, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 271,
	1415, 271, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 0, 271, 0,
	0, 0, 3314, 0, 0, 0, 0, 0, 0, 0,
	825, 0, 0, 1413, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 0, 1574, 0, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 853, 0, 0,
	1575, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 1575, 0, 1575, 0, 855, 0, 0,
	0, 0, 856, 1863, 1857, 0, 0, 0, 0, 0,
	0, 1829, 1575, 0, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1882, 0, 0,
	0, 857, 0, 874, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 1415,
	0, 0, 0, 0, 0, 1845, 0, 0, 858, 0,
	0, 0, 0, 859, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 883, 0, 0, 0, 0,
	0, 0, 860, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 854, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 861, 0, 0, 862, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 885,
	0, 0, 0, 0, 765, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 1856, 1858, 0, 0, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	1874, 0, 0, 0, 0, 0, 1415, 1843, 1844, 1415,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	0, 0, 0, 0, 271, 0, 0, 884, 0, 0,
	1849, 0, 0, 0, 0, 271, 0, 879, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	271, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 1415, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 1415, 1415, 1415, 0,
	863, 0, 0, 1415, 1415, 1415, 1879, 0, 0, 0,
	0, 865, 0, 0, 0, 0, 0, 0, 0, 1412,
	0, 0, 0, 0, 0, 1415, 0, 0, 0, 271,
	0, 1415, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 1855, 0, 0, 0, 0, 1412, 0, 0,
	0, 875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 764, 0, 1850, 1413, 0, 0, 0,
	0, 0, 0, 1412, 0, 0, 852, 0, 876, 0,
	0, 0, 0, 0, 0, 0, 0, 867, 0, 0,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 873, 0, 1413, 0, 0, 0, 0, 0,
	0, 0, 0, 1881, 0, 0, 0, 0, 0, 868,
	0, 0, 0, 869, 888, 0, 887, 0, 0, 870,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 871, 0, 0, 0, 0, 880, 0,
	1415, 1415, 0, 1415, 889, 0, 886, 0, 0, 0,
	0, 0, 766, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1415, 1866, 0, 0, 0, 0,
	0, 0, 0, 271, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 1412, 0, 0, 0, 0, 0, 0,
	3311, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	0, 0, 271, 0, 0, 271, 1574, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1415,
	1574, 0, 1574, 0, 0, 0, 1412, 0, 0, 271,
	1413, 0, 0, 825, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1574, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1575, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1575, 271, 1575,
	0, 0, 0, 1413, 0, 0, 0, 1415, 271, 1574,
	0, 1575, 1415, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 1575, 1574, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1415, 1415, 1415, 1415, 1415, 1415, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 1412, 0, 0, 1575, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1415, 1575, 0,
	1575, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1415, 0, 1415, 0, 0, 0, 0, 1413, 0, 0,
	1413, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 1415, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 271, 0, 1863, 1857, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 1413, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 0, 1413, 1415, 0, 0, 1845, 0,
	0, 0, 0, 271, 0, 0, 0, 0, 0, 0,
	0, 0, 1415, 1415, 1415, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 0, 0, 1415, 0, 0, 1415,
	0, 0, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 825, 0, 0, 0, 0, 0, 0,
	271, 271, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1867, 0, 0, 1877, 1413,
	0, 0, 0, 0, 0, 1856, 1858, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 1874, 0, 0, 0, 0, 0, 0,
	1843, 1844, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1865, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 271, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1574,
	0, 0, 1574, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1879,
	0, 0, 0, 271, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1415, 0,
	0, 0, 0, 0, 0, 0, 1575, 0, 0, 1575,
	0, 0, 0, 0, 1574, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1855, 0, 0, 0, 1574,
	1574, 1574, 0, 0, 0, 0, 1574, 1574, 1574, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1850, 0,
	0, 0, 0, 0, 271, 0, 0, 0, 1574, 0,
	0, 0, 0, 0, 1412, 0, 0, 0, 0, 0,
	0, 1575, 0, 0, 0, 1868, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1412, 0, 0, 0, 0, 1575, 1575, 1575, 0,
	0, 0, 0, 1575, 1575, 1575, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1575, 0, 0, 0, 0,
	0, 1413, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1413, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 0, 0, 4767,
	0, 0, 0, 1412, 1412, 0, 1412, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 1574, 1574, 0, 0, 0, 0,
	0, 1863, 1857, 0, 0, 0, 0, 1412, 0, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 1876, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 0, 0, 0,
	1413, 1413, 1857, 1413, 1828, 0, 0, 0, 0, 1829,
	0, 0, 0, 0, 1848, 0, 0, 0, 1876, 0,
	0, 1575, 1575, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 1413, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 1412, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1574, 1574, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 1413,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 1574, 0, 0, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	1867, 1834, 0, 1877, 0, 0, 0, 1575, 1575, 0,
	1856, 1858, 0, 0, 1574, 1574, 1574, 1574, 1574, 1574,
	0, 0, 0, 0, 0, 0, 1873, 0, 1874, 0,
	1412, 0, 0, 0, 0, 1843, 1844, 0, 0, 0,
	1867, 0, 0, 1877, 0, 0, 0, 1413, 0, 0,
	1856, 1858, 1575, 1865, 0, 0, 0, 0, 0, 0,
	1412, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 1575, 1575, 1575, 1575, 1575, 1575, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 1412, 0, 1574, 0, 0, 1849, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1413, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 1412, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1413, 0, 1575, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 1413, 0, 0, 0, 1412, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 1574, 1574, 1574, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1413, 0, 0, 0, 1412,
	0, 1881, 1574, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 1575, 1575, 1575, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1413, 0, 0, 1575,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3310, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1574, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 1575, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1575, 279,
	281, 280, 282, 283, 284, 285, 1416, 286, 287, 1417,
	1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 1425, 650, 298, 299, 300,
	301, 302, 303, 1426, 1427, 0, 304, 651, 652, 653,
	1428, 305, 306, 654, 1429, 1496, 1430, 307, 308, 309,
	310, 311, 312, 313, 0, 1431, 315, 316, 317, 314,
	318, 1432, 319, 0, 320, 321, 322, 323, 324, 325,
	1433, 326, 327, 328, 1214, 329, 330, 331, 1434, 1435,
	1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 1441, 342, 338, 340, 1442,
	343, 341, 344, 1443, 345, 346, 347, 1444, 1445, 348,
	349, 350, 1446, 351, 352, 353, 1447, 354, 355, 356,
	1448, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 1449, 276,
	1450, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 1451, 375, 376, 377, 1452, 1453, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1454, 390, 663, 1455, 664, 391,
	1456, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 1457, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1458, 1216, 407, 668,
	669, 1459, 670, 1460, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1461, 420, 422, 421, 1462, 423, 672,
	1221, 424, 425, 1222, 1463, 426, 427, 428, 429, 430,
	431, 434, 1464, 1465, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1466, 278, 1225, 477, 478, 479, 1467, 673,
	480, 674, 482, 483, 1468, 0, 484, 0, 1469, 1470,
	486, 487, 488, 1471, 1472, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1473, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	1474, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 1475, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 1476, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 1477, 569, 570, 568,
	571, 572, 573, 1478, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 1479, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 1480, 601,
	602, 0, 598, 589, 1481, 603, 604, 605, 606, 607,
	608, 609, 610, 1482, 611, 686, 687, 688, 689, 1483,
	620, 1484, 612, 613, 614, 690, 615, 691, 1485, 616,
	617, 618, 619, 0, 621, 622, 1486, 1487, 623, 624,
	625, 627, 628, 626, 629, 1488, 630, 1489, 0, 631,
	632, 633, 692, 693, 694, 1490, 635, 634, 636, 637,
	695, 638, 639, 1491, 1492, 1493, 1494, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 2802, 0, 0, 0, 0, 0, 0, 0, 2803,
	279, 281, 280, 282, 283, 284, 285, 1416, 286, 287,
	1417, 1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 1425, 650, 298, 299,
	300, 301, 302, 303, 1426, 1427, 0, 304, 651, 652,
	653, 1428, 305, 306, 654, 1429, 1496, 1430, 307, 308,
	309, 310, 311, 312, 313, 0, 1431, 315, 316, 317,
	314, 318, 1432, 319, 0, 320, 321, 322, 323, 324,
	325, 1433, 326, 327, 328, 1214, 329, 330, 331, 1434,
	1435, 1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 1441, 342, 338, 340,
	1442, 343, 341, 344, 1443, 345, 346, 347, 1444, 1445,
	348, 349, 350, 1446, 351, 352, 353, 1447, 354, 355,
	356, 1448, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 1449,
	276, 1450, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 1451, 375, 376, 377, 1452, 1453,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1454, 390, 663, 1455, 664,
	391, 1456, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 1217, 397, 398, 1457, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1458, 1216, 407,
	668, 669, 1459, 670, 1460, 408, 409, 1218, 671, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1461, 420, 422, 421, 1462, 423,
	672, 1221, 424, 425, 1222, 1463, 426, 427, 428, 429,
	430, 431, 434, 1464, 1465, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1466, 278, 1225, 477, 478, 479, 1467,
	673, 480, 674, 482, 483, 1468, 0, 484, 0, 1469,
	1470, 486, 487, 488, 1471, 1472, 489, 490, 675, 1226,
	491, 1227, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1473, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 1474, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 1475, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 1476, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 1477, 569, 570,
	568, 571, 572, 573, 1478, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 1479, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 1480,
	601, 602, 0, 598, 589, 1481, 603, 604, 605, 606,
	607, 608, 609, 610, 1482, 611, 686, 687, 688, 689,
	1483, 620, 1484, 612, 613, 614, 690, 615, 691, 1485,
	616, 617, 618, 619, 0, 621, 622, 1486, 1487, 623,
	624, 625, 627, 628, 626, 629, 1488, 630, 1489, 0,
	631, 632, 633, 692, 693, 694, 1490, 635, 634, 636,
	637, 695, 638, 639, 1491, 1492, 1493, 1494, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 3788, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3790, 279,
	281, 280, 282, 283, 284, 285, 1416, 286, 287, 1417,
	1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 1425, 650, 298, 299, 300,
	301, 302, 303, 1426, 1427, 0, 304, 651, 652, 653,
	1428, 305, 306, 654, 1429, 1496, 1430, 307, 308, 309,
	310, 311, 312, 313, 0, 1431, 315, 316, 317, 314,
	318, 1432, 319, 0, 320, 321, 322, 323, 324, 325,
	1433, 326, 327, 328, 1214, 329, 330, 331, 1434, 1435,
	1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 1441, 342, 338, 340, 1442,
	343, 341, 344, 1443, 345, 346, 347, 1444, 1445, 348,
	349, 350, 1446, 351, 352, 353, 1447, 354, 355, 356,
	1448, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 1449, 276,
	1450, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 1451, 375, 376, 377, 1452, 1453, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1454, 390, 663, 1455, 664, 391,
	1456, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 1457, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1458, 1216, 407, 668,
	669, 1459, 670, 1460, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1461, 420, 422, 421, 1462, 423, 672,
	1221, 424, 425, 1222, 1463, 426, 427, 428, 429, 430,
	431, 434, 1464, 1465, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1466, 278, 1225, 477, 478, 479, 1467, 673,
	480, 674, 482, 483, 1468, 0, 484, 0, 1469, 1470,
	486, 487, 488, 1471, 1472, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1473, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	1474, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 1475, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 1476, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 1477, 569, 570, 568,
	571, 572, 573, 1478, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 1479, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 1480, 601,
	602, 0, 598, 589, 1481, 603, 604, 605, 606, 607,
	608, 609, 610, 1482, 611, 686, 687, 688, 689, 1483,
	620, 1484, 612, 613, 614, 690, 615, 691, 1485, 616,
	617, 618, 619, 0, 621, 622, 1486, 1487, 623, 624,
	625, 627, 628, 626, 629, 1488, 630, 1489, 0, 631,
	632, 633, 692, 693, 694, 1490, 635, 634, 636, 637,
	695, 638, 639, 1491, 1492, 1493, 1494, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4199, 279, 281, 280, 282, 283, 284, 285, 1416,
	286, 287, 1417, 1418, 1419, 0, 1420, 645, 1421, 1422,
	1423, 1424, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 1425, 650,
	298, 299, 300, 301, 302, 303, 1426, 1427, 0, 304,
	651, 652, 653, 1428, 305, 306, 654, 1429, 1496, 1430,
	307, 308, 309, 310, 311, 312, 313, 0, 1431, 315,
	316, 317, 314, 318, 1432, 319, 0, 320, 321, 322,
	323, 324, 325, 1433, 326, 327, 328, 1214, 329, 330,
	331, 1434, 1435, 1437, 1436, 1438, 1439, 1440, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 1441, 342,
	338, 340, 1442, 343, 341, 344, 1443, 345, 346, 347,
	1444, 1445, 348, 349, 350, 1446, 351, 352, 353, 1447,
	354, 355, 356, 1448, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 1449, 276, 1450, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 1451, 375, 376, 377,
	1452, 1453, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1454, 390, 663,
	1455, 664, 391, 1456, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 1457, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1458,
	1216, 407, 668, 669, 1459, 670, 1460, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1461, 420, 422, 421,
	1462, 423, 672, 1221, 424, 425, 1222, 1463, 426, 427,
	428, 429, 430, 431, 434, 1464, 1465, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1466, 278, 1225, 477, 478,
	479, 1467, 673, 480, 674, 482, 483, 1468, 0, 484,
	0, 1469, 1470, 486, 487, 488, 1471, 1472, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1473, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 1474, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	1475, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 1476, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 1477,
	569, 570, 568, 571, 572, 573, 1478, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 1479, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 1480, 601, 602, 0, 598, 589, 1481, 603, 604,
	605, 606, 607, 608, 609, 610, 1482, 611, 686, 687,
	688, 689, 1483, 620, 1484, 612, 613, 614, 690, 615,
	691, 1485, 616, 617, 618, 619, 0, 621, 622, 1486,
	1487, 623, 624, 625, 627, 628, 626, 629, 1488, 630,
	1489, 0, 631, 632, 633, 692, 693, 694, 1490, 635,
	634, 636, 637, 695, 638, 639, 1491, 1492, 1493, 1494,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4197, 279, 281, 280, 282, 283,
	284, 285, 1416, 286, 287, 1417, 1418, 1419, 0, 1420,
	645, 1421, 1422, 1423, 1424, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 1425, 650, 298, 299, 300, 301, 302, 303, 1426,
	1427, 0, 304, 651, 652, 653, 1428, 305, 306, 654,
	1429, 1496, 1430, 307, 308, 309, 310, 311, 312, 313,
	0, 1431, 315, 316, 317, 314, 318, 1432, 319, 0,
	320, 321, 322, 323, 324, 325, 1433, 326, 327, 328,
	1214, 329, 330, 331, 1434, 1435, 1437, 1436, 1438, 1439,
	1440, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 1441, 342, 338, 340, 1442, 343, 341, 344, 1443,
	345, 346, 347, 1444, 1445, 348, 349, 350, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 1449, 276, 1450, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 1451,
	375, 376, 377, 1452, 1453, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1454, 390, 663, 1455, 664, 391, 1456, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 1217, 397, 398, 1457,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1458, 1216, 407, 668, 669, 1459, 670, 1460,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1461,
	420, 422, 421, 1462, 423, 672, 1221, 424, 425, 1222,
	1463, 426, 427, 428, 429, 430, 431, 434, 1464, 1465,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1466, 278,
	1225, 477, 478, 479, 1467, 673, 480, 674, 482, 483,
	1468, 0, 484, 0, 1469, 1470, 486, 487, 488, 1471,
	1472, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1473, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 1474, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 1475, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 1476, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 1477, 569, 570, 568, 571, 572, 573, 1478,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 1479, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 1480, 601, 602, 0, 598, 589,
	1481, 603, 604, 605, 606, 607, 608, 609, 610, 1482,
	611, 686, 687, 688, 689, 1483, 620, 1484, 612, 613,
	614, 690, 615, 691, 1485, 616, 617, 618, 619, 0,
	621, 622, 1486, 1487, 623, 624, 625, 627, 628, 626,
	629, 1488, 630, 1489, 0, 631, 632, 633, 692, 693,
	694, 1490, 635, 634, 636, 637, 695, 638, 639, 1491,
	1492, 1493, 1494, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 1410, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4425, 279, 281, 280, 282, 283, 284, 285, 1416,
	286, 287, 1417, 1418, 1419, 0, 1420, 645, 1421, 1422,
	1423, 1424, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 1425, 650,
	298, 299, 300, 301, 302, 303, 1426, 1427, 0, 304,
	651, 652, 653, 1428, 305, 306, 654, 1429, 1496, 1430,
	307, 308, 309, 310, 311, 312, 313, 0, 1431, 315,
	316, 317, 314, 318, 1432, 319, 0, 320, 321, 322,
	323, 324, 325, 1433, 326, 327, 328, 1214, 329, 330,
	331, 1434, 1435, 1437, 1436, 1438, 1439, 1440, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 1441, 342,
	338, 340, 1442, 343, 341, 344, 1443, 345, 346, 347,
	1444, 1445, 348, 349, 350, 1446, 351, 352, 353, 1447,
	354, 355, 356, 1448, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 1449, 276, 1450, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 1451, 375, 376, 377,
	1452, 1453, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 1454, 390, 663,
	1455, 664, 391, 1456, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 1457, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 1458,
	1216, 407, 668, 669, 1459, 670, 1460, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 1461, 420, 422, 421,
	1462, 423, 672, 1221, 424, 425, 1222, 1463, 426, 427,
	428, 429, 430, 431, 434, 1464, 1465, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1466, 278, 1225, 477, 478,
	479, 1467, 673, 480, 674, 482, 483, 1468, 0, 484,
	0, 1469, 1470, 486, 487, 488, 1471, 1472, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 1473, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 1474, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	1475, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 1476, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 1477,
	569, 570, 568, 571, 572, 573, 1478, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 1479, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 1480, 601, 602, 0, 598, 589, 1481, 603, 604,
	605, 606, 607, 608, 609, 610, 1482, 611, 686, 687,
	688, 689, 1483, 620, 1484, 612, 613, 614, 690, 615,
	691, 1485, 616, 617, 618, 619, 0, 621, 622, 1486,
	1487, 623, 624, 625, 627, 628, 626, 629, 1488, 630,
	1489, 0, 631, 632, 633, 692, 693, 694, 1490, 635,
	634, 636, 637, 695, 638, 639, 1491, 1492, 1493, 1494,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 1410, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 4288, 279,
	281, 280, 282, 283, 284, 285, 1416, 286, 287, 1417,
	1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 1425, 650, 298, 299, 300,
	301, 302, 303, 1426, 1427, 0, 304, 651, 652, 653,
	1428, 305, 306, 654, 1429, 1496, 1430, 307, 308, 309,
	310, 311, 312, 313, 0, 1431, 315, 316, 317, 314,
	318, 1432, 319, 0, 320, 321, 322, 323, 324, 325,
	1433, 326, 327, 328, 1214, 329, 330, 331, 1434, 1435,
	1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 1441, 342, 338, 340, 1442,
	343, 341, 344, 1443, 345, 346, 347, 1444, 1445, 348,
	349, 350, 1446, 351, 352, 353, 1447, 354, 355, 356,
	1448, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 1449, 276,
	1450, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 1451, 375, 376, 377, 1452, 1453, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 1454, 390, 663, 1455, 664, 391,
	1456, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 1457, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 1458, 1216, 407, 668,
	669, 1459, 670, 1460, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1461, 420, 422, 421, 1462, 423, 672,
	1221, 424, 425, 1222, 1463, 426, 427, 428, 429, 430,
	431, 434, 1464, 1465, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1466, 278, 1225, 477, 478, 479, 1467, 673,
	480, 674, 482, 483, 1468, 0, 484, 0, 1469, 1470,
	486, 487, 488, 1471, 1472, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 1473, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	1474, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 1475, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 1476, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 1477, 569, 570, 568,
	571, 572, 573, 1478, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 1479, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 1480, 601,
	602, 0, 598, 589, 1481, 603, 604, 605, 606, 607,
	608, 609, 610, 1482, 611, 686, 687, 688, 689, 1483,
	620, 1484, 612, 613, 614, 690, 615, 691, 1485, 616,
	617, 618, 619, 0, 621, 622, 1486, 1487, 623, 624,
	625, 627, 628, 626, 629, 1488, 630, 1489, 0, 631,
	632, 633, 692, 693, 694, 1490, 635, 634, 636, 637,
	695, 638, 639, 1491, 1492, 1493, 1494, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 1410,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4127, 279, 281, 280, 282,
	283, 284, 285, 1416, 286, 287, 1417, 1418, 1419, 0,
	1420, 645, 1421, 1422, 1423, 1424, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 1425, 650, 298, 299, 300, 301, 302, 303,
	1426, 1427, 0, 304, 651, 652, 653, 1428, 305, 306,
	654, 1429, 1496, 1430, 307, 308, 309, 310, 311, 312,
	313, 0, 1431, 315, 316, 317, 314, 318, 1432, 319,
	0, 320, 321, 322, 323, 324, 325, 1433, 326, 327,
	328, 1214, 329, 330, 331, 1434, 1435, 1437, 1436, 1438,
	1439, 1440, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 1441, 342, 338, 340, 1442, 343, 341, 344,
	1443, 345, 346, 347, 1444, 1445, 348, 349, 350, 1446,
	351, 352, 353, 1447, 354, 355, 356, 1448, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 1449, 276, 1450, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	1451, 375, 376, 377, 1452, 1453, 1215, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 1454, 390, 663, 1455, 664, 391, 1456, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 1217, 397, 398,
	1457, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 1458, 1216, 407, 668, 669, 1459, 670,
	1460, 408, 409, 1218, 671, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	1461, 420, 422, 421, 1462, 423, 672, 1221, 424, 425,
	1222, 1463, 426, 427, 428, 429, 430, 431, 434, 1464,
	1465, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1466,
	278, 1225, 477, 478, 479, 1467, 673, 480, 674, 482,
	483, 1468, 0, 484, 0, 1469, 1470, 486, 487, 488,
	1471, 1472, 489, 490, 675, 1226, 491, 1227, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 1473, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 1474, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 1475, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 1476, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 1477, 569, 570, 568, 571, 572, 573,
	1478, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 1479, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 1480, 601, 602, 0, 598,
	589, 1481, 603, 604, 605, 606, 607, 608, 609, 610,
	1482, 611, 686, 687, 688, 689, 1483, 620, 1484, 612,
	613, 614, 690, 615, 691, 1485, 616, 617, 618, 619,
	0, 621, 622, 1486, 1487, 623, 624, 625, 627, 628,
	626, 629, 1488, 630, 1489, 0, 631, 632, 633, 692,
	693, 694, 1490, 635, 634, 636, 637, 695, 638, 639,
	1491, 1492, 1493, 1494, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 1410, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3806, 279, 281, 280, 282, 283, 284, 285,
	1416, 286, 287, 1417, 1418, 1419, 0, 1420, 645, 1421,
	1422, 1423, 1424, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 1425,
	650, 298, 299, 300, 301, 302, 303, 1426, 1427, 0,
	304, 651, 652, 653, 1428, 305, 306, 654, 1429, 1496,
	1430, 307, 308, 309, 310, 311, 312, 313, 0, 1431,
	315, 316, 317, 314, 318, 1432, 319, 0, 320, 321,
	322, 323, 324, 325, 1433, 326, 327, 328, 1214, 329,
	330, 331, 1434, 1435, 1437, 1436, 1438, 1439, 1440, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 1441,
	342, 338, 340, 1442, 343, 341, 344, 1443, 345, 346,
	347, 1444, 1445, 348, 349, 350, 1446, 351, 352, 353,
	1447, 354, 355, 356, 1448, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 1449, 276, 1450, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 1451, 375, 376,
	377, 1452, 1453, 1215, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 1454, 390,
	663, 1455, 664, 391, 1456, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 1217, 397, 398, 1457, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	1458, 1216, 407, 668, 669, 1459, 670, 1460, 408, 409,
	1218, 671, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 1461, 420, 422,
	421, 1462, 423, 672, 1221, 424, 425, 1222, 1463, 426,
	427, 428, 429, 430, 431, 434, 1464, 1465, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1466, 278, 1225, 477,
	478, 479, 1467, 673, 480, 674, 482, 483, 1468, 0,
	484, 0, 1469, 1470, 486, 487, 488, 1471, 1472, 489,
	490, 675, 1226, 491, 1227, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 1473, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 1474, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 1475, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 1476, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	1477, 569, 570, 568, 571, 572, 573, 1478, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 1479, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 1480, 601, 602, 0, 598, 589, 1481, 603,
	604, 605, 606, 607, 608, 609, 610, 1482, 611, 686,
	687, 688, 689, 1483, 620, 1484, 612, 613, 614, 690,
	615, 691, 1485, 616, 617, 618, 619, 0, 621, 622,
	1486, 1487, 623, 624, 625, 627, 628, 626, 629, 1488,
	630, 1489, 0, 631, 632, 633, 692, 693, 694, 1490,
	635, 634, 636, 637, 695, 638, 639, 1491, 1492, 1493,
	1494, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 1410, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3624,
	279, 281, 280, 282, 283, 284, 285, 1416, 286, 287,
	1417, 1418, 1419, 0, 1420, 645, 1421, 1422, 1423, 1424,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 1425, 650, 298, 299,
	300, 301, 302, 303, 1426, 1427, 0, 304, 651, 652,
	653, 1428, 305, 306, 654, 1429, 1496, 1430, 307, 308,
	309, 310, 311, 312, 313, 0, 1431, 315, 316, 317,
	314, 318, 1432, 319, 0, 320, 321, 322, 323, 324,
	325, 1433, 326, 327, 328, 1214, 329, 330, 331, 1434,
	1435, 1437, 1436, 1438, 1439, 1440, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 1441, 342, 338, 340,
	1442, 343, 341, 344, 1443, 345, 346, 347, 1444, 1445,
	348, 349, 350, 1446, 351, 352, 353, 1447, 354, 355,
	356, 1448, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 1449,
	276, 1450, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 1451, 375, 376, 377, 1452, 1453,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 1454, 390, 663, 1455, 664,
	391, 1456, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 1217, 397, 398, 1457, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 1458, 1216, 407,
	668, 669, 1459, 670, 1460, 408, 409, 1218, 671, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1461, 420, 422, 421, 1462, 423,
	672, 1221, 424, 425, 1222, 1463, 426, 427, 428, 429,
	430, 431, 434, 1464, 1465, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1466, 278, 1225, 477, 478, 479, 1467,
	673, 480, 674, 482, 483, 1468, 0, 484, 0, 1469,
	1470, 486, 487, 488, 1471, 1472, 489, 490, 675, 1226,
	491, 1227, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 1473, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 1474, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 1475, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 1476, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 1477, 569, 570,
	568, 571, 572, 573, 1478, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 1479, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 1480,
	601, 602, 0, 598, 589, 1481, 603, 604, 605, 606,
	607, 608, 609, 610, 1482, 611, 686, 687, 688, 689,
	1483, 620, 1484, 612, 613, 614, 690, 615, 691, 1485,
	616, 617, 618, 619, 0, 621, 622, 1486, 1487, 623,
	624, 625, 627, 628, 626, 629, 1488, 630, 1489, 0,
	631, 632, 633, 692, 693, 694, 1490, 635, 634, 636,
	637, 695, 638, 639, 1491, 1492, 1493, 1494, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	1410, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2657, 279, 281, 280,
	282, 283, 284, 285, 1416, 286, 287, 1417, 1418, 1419,
	0, 1420, 645, 1421, 1422, 1423, 1424, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 1425, 650, 298, 299, 300, 301, 302,
	303, 1426, 1427, 0, 304, 651, 652, 653, 1428, 305,
	306, 654, 1429, 1496, 1430, 307, 308, 309, 310, 311,
	312, 313, 0, 1431, 315, 316, 317, 314, 318, 1432,
	319, 0, 320, 321, 322, 323, 324, 325, 1433, 326,
	327, 328, 1214, 329, 330, 331, 1434, 1435, 1437, 1436,
	1438, 1439, 1440, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 1441, 342, 338, 340, 1442, 343, 341,
	344, 1443, 345, 346, 347, 1444, 1445, 348, 349, 350,
	1446, 351, 352, 353, 1447, 354, 355, 356, 1448, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 1449, 276, 1450, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 1451, 375, 376, 377, 1452, 1453, 1215, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 1454, 390, 663, 1455, 664, 391, 1456, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 1217, 397,
	398, 1457, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 1458, 1216, 407, 668, 669, 1459,
	670, 1460, 408, 409, 1218, 671, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 1461, 420, 422, 421, 1462, 423, 672, 1221, 424,
	425, 1222, 1463, 426, 427, 428, 429, 430, 431, 434,
	1464, 1465, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1466, 278, 1225, 477, 478, 479, 1467, 673, 480, 674,
	482, 483, 1468, 0, 484, 0, 1469, 1470, 486, 487,
	488, 1471, 1472, 489, 490, 675, 1226, 491, 1227, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 1473, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 1474, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 1475, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 1476,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 1477, 569, 570, 568, 571, 572,
	573, 1478, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 1479,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 1480, 601, 602, 0,
	598, 589, 1481, 603, 604, 605, 606, 607, 608, 609,
	610, 1482, 611, 686, 687, 688, 689, 1483, 620, 1484,
	612, 613, 614, 690, 615, 691, 1485, 616, 617, 618,
	619, 0, 621, 622, 1486, 1487, 623, 624, 625, 627,
	628, 626, 629, 1488, 630, 1489, 0, 631, 632, 633,
	692, 693, 694, 1490, 635, 634, 636, 637, 695, 638,
	639, 1491, 1492, 1493, 1494, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 1407, 0, 1410, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2282, 279, 281, 280, 282, 283, 284,
	285, 1416, 286, 287, 1417, 1418, 1419, 0, 1420, 645,
	1421, 1422, 1423, 1424, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	1425, 650, 298, 299, 300, 301, 302, 303, 1426, 1427,
	0, 304, 651, 652, 653, 1428, 305, 306, 654, 1429,
	1496, 1430, 307, 308, 309, 310, 311, 312, 313, 0,
	1431, 315, 316, 317, 314, 318, 1432, 319, 0, 320,
	321, 322, 323, 324, 325, 1433, 326, 327, 328, 1214,
	329, 330, 331, 1434, 1435, 1437, 1436, 1438, 1439, 1440,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	1441, 342, 338, 340, 1442, 343, 341, 344, 1443, 345,
	346, 347, 1444, 1445, 348, 349, 350, 1446, 351, 352,
	353, 1447, 354, 355, 356, 1448, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 1449, 276, 1450, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 1451, 375,
	376, 377, 1452, 1453, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 1454,
	390, 663, 1455, 664, 391, 1456, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 1217, 397, 398, 1457, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 1458, 1216, 407, 668, 669, 1459, 670, 1460, 408,
	409, 1218, 671, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 1461, 420,
	422, 421, 1462, 423, 672, 1221, 424, 425, 1222, 1463,
	426, 427, 428, 429, 430, 431, 434, 1464, 1465, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1466, 278, 1225,
	477, 478, 479, 1467, 673, 480, 674, 482, 483, 1468,
	0, 484, 0, 1469, 1470, 486, 487, 488, 1471, 1472,
	489, 490, 675, 1226, 491, 1227, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 1473,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 1474, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 1475, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 1476, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 1477, 569, 570, 568, 571, 572, 573, 1478, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 1479, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 1480, 601, 602, 0, 598, 589, 1481,
	603, 604, 605, 606, 607, 608, 609, 610, 1482, 611,
	686, 687, 688, 689, 1483, 620, 1484, 612, 613, 614,
	690, 615, 691, 1485, 616, 617, 618, 619, 0, 621,
	622, 1486, 1487, 623, 624, 625, 627, 628, 626, 629,
	1488, 630, 1489, 0, 631, 632, 633, 692, 693, 694,
	1490, 635, 634, 636, 637, 695, 638, 639, 1491, 1492,
	1493, 1494, 640, 641, 696, 642, 643, 644, 1410, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 1416, 286, 287, 1417, 1418, 1419, 0, 1420,
	645, 1421, 1422, 1423, 1424, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 1425, 650, 298, 299, 300, 301, 302, 303, 1426,
	1427, 0, 304, 651, 652, 653, 1428, 305, 306, 654,
	1429, 1496, 1430, 307, 308, 309, 310, 311, 312, 313,
	0, 1431, 315, 316, 317, 314, 318, 1432, 319, 0,
	320, 321, 322, 323, 324, 325, 1433, 326, 327, 328,
	1214, 329, 330, 331, 1434, 1435, 1437, 1436, 1438, 1439,
	1440, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 1441, 342, 338, 340, 1442, 343, 341, 344, 1443,
	345, 346, 347, 1444, 1445, 348, 349, 350, 1446, 351,
	352, 353, 1447, 354, 355, 356, 1448, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 1449, 276, 1450, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 1451,
	375, 376, 377, 1452, 1453, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	1454, 390, 663, 1455, 664, 391, 1456, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 1217, 397, 398, 1457,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 1458, 1216, 407, 668, 669, 1459, 670, 1460,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1461,
	420, 422, 421, 1462, 423, 672, 1221, 424, 425, 1222,
	1463, 426, 427, 428, 429, 430, 431, 434, 1464, 1465,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1466, 278,
	1225, 477, 478, 479, 1467, 673, 480, 674, 482, 483,
	1468, 0, 484, 0, 1469, 1470, 486, 487, 488, 1471,
	1472, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	1473, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 1474, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 1475, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 1476, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 1477, 569, 570, 568, 571, 572, 573, 1478,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 1479, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 1480, 601, 602, 0, 598, 589,
	1481, 603, 604, 605, 606, 607, 608, 609, 610, 1482,
	611, 686, 687, 688, 689, 1483, 620, 1484, 612, 613,
	614, 690, 615, 691, 1485, 616, 617, 618, 619, 0,
	621, 622, 1486, 1487, 623, 624, 625, 627, 628, 626,
	629, 1488, 630, 1489, 0, 631, 632, 633, 692, 693,
	694, 1490, 635, 634, 636, 637, 695, 638, 639, 1491,
	1492, 1493, 1494, 640, 641, 696, 642, 643, 644, 2632,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 2629, 286, 287, 0, 0,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 2630, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 2628, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 2631, 0, 0, 0, 0, 0,
	0, 0, 1133, 2627, 0, 1093, 1131, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 238, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 240,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 1646, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 232, 640, 641, 696, 642, 643, 644, 1107, 0,
	233, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 1907, 1905,
	0, 0, 1131, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 238, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 240, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	1646, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 232, 640, 641, 696, 642, 643,
	644, 1107, 0, 233, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 1907, 3265, 0, 0, 1131, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 238, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 240, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 1646, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 232, 640, 641,
	696, 642, 643, 644, 1107, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 0, 1907, 1905, 0, 0, 1131, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 2763,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 2768, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 2764, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 2765, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 2677, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 0, 0, 0,
	0, 0, 0, 0, 1133, 2675, 0, 2674, 1131, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 0, 0, 0, 0, 0, 0, 0,
	1133, 2672, 0, 2671, 1131, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 0,
	0, 0, 0, 0, 0, 0, 1133, 2669, 0, 2668,
	1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 0, 0, 0, 0, 0,
	0, 0, 1133, 2666, 0, 1746, 1131, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 1745, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 1096, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	1111, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 0,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 4791, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 1111, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 0, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 2509, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 2508, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 1111, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 4515, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 1111, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 0, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	4092, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 0, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 1976, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 3784,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 0, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 1976, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 2768, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 0, 0, 0, 0, 0, 0, 0, 1133, 1905,
	0, 2773, 1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 2771, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 2759, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 2747, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 2745,
	0, 2736, 2743, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	2739, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 2740, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 2741, 444, 2738, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 2742, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	2737, 644, 1107, 0, 0, 0, 2733, 0, 2736, 2743,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 2739, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	2740, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 2741, 444, 2738, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 2742, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 2737, 644, 1107,
	0, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 0,
	0, 0, 0, 0, 1913, 0, 1133, 0, 0, 0,
	1131, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 2488, 286, 287, 0, 0,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 2450, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 2423, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	1751, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 1680, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 621, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 1675, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 621, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 1662, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 1138,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 1657, 0,
	1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 1558, 0, 1149, 1121, 1122,
	1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1557, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 1552, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1551, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 1545,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 1100, 1101, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 1109, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 1106, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	1103, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 1110, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1107, 0, 0, 0, 1507, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0, 0,
	0, 0, 1100, 1101, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 1104, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 1109, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 1511, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 1106, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	1116, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 1512, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 1117, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 1103, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 1510, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 1110, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1107,
	0, 0, 0, 1356, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 1102, 0, 0, 0, 0, 0, 0, 1100,
	1101, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 1225, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 621, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1107, 0, 0, 0,
	0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 1137, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 1186,
	0, 296, 1193, 297, 1192, 0, 1203, 298, 299, 300,
	301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	1196, 337, 339, 1190, 1189, 1109, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	1181, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 1115, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 1128, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 1188, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 1201, 1202, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 1138, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 1183,
	1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 1106, 278, 1225, 477, 478, 479, 1129, 1177,
	480, 1191, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 1116, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 1187, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 1117, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 1185, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	1232, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 1103, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 1197, 1198, 1199, 1200, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 1127, 616,
	617, 618, 619, 0, 621, 622, 0, 1110, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 692, 1194, 1231, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1107, 0, 0, 0, 0, 0, 1149,
	1121, 1122, 1123, 1119, 1120, 1132, 1102, 0, 0, 0,
	0, 0, 0, 1100, 1101, 0, 279, 281, 280, 282,
	283, 284, 285, 1133, 286, 287, 0, 1131, 0, 0,
	0, 1173, 1137, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 1186, 0, 296, 1193,
	297, 1192, 0, 1203, 298, 299, 300, 301, 302, 303,
	1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305, 306,
	1179, 0, 1160, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 4838, 1163, 1161, 1162, 1169, 1165,
	1164, 1168, 332, 333, 334, 335, 336, 1196, 337, 339,
	1190, 1189, 1109, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 1181, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	1115, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 1204, 1205, 370, 1128, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 1188, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	1201, 1202, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 1211, 0, 1138, 391, 0, 392, 393,
	394, 395, 396, 1174, 1175, 1178, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 1216, 407, 1183, 1184, 0, 1144,
	0, 408, 409, 1218, 1176, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 1212, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 1167,
	1166, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 1106,
	278, 1225, 477, 478, 479, 1129, 1177, 480, 1191, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 1206, 492,
	493, 1116, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 1207, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 1187, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 1117, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	1170, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 1185, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 1232, 592, 593,
	594, 595, 1208, 599, 600, 0, 601, 602, 1103, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 1197, 1198, 1199, 1200, 0, 620, 0, 612,
	613, 614, 1209, 615, 1210, 1127, 616, 617, 618, 619,
	0, 4837, 622, 0, 1110, 623, 624, 625, 627, 628,
	626, 629, 1171, 630, 0, 0, 631, 632, 633, 692,
	1194, 1231, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	1107, 0, 0, 0, 0, 0, 1149, 1121, 1122, 1123,
	1119, 1120, 1132, 1102, 0, 0, 0, 0, 0, 0,
	1100, 1101, 0, 279, 281, 280, 282, 283, 284, 285,
	1133, 286, 287, 0, 1131, 0, 0, 0, 1173, 1137,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 4836, 1186, 0, 296, 1193, 297, 1192, 0,
	1203, 298, 299, 300, 301, 302, 303, 1139, 1172, 1104,
	304, 1233, 1234, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 4838, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 1196, 337, 339, 1190, 1189, 1109,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 1181, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 1115, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 1128, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 1188, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 1201, 1202, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 1138, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 1183, 1184, 0, 1144, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 1106, 278, 1225, 477,
	478, 479, 1129, 1177, 480, 1191, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 1116, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 1187, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 1117, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 1185, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 1232, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 1103, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 1197,
	1198, 1199, 1200, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 1127, 616, 617, 618, 619, 0, 4837, 622,
	0, 1110, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 1194, 1231, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1107, 0, 0,
	0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120, 1132,
	1102, 0, 0, 0, 0, 0, 0, 1100, 1101, 0,
	279, 281, 280, 282, 283, 284, 285, 1133, 286, 287,
	0, 1131, 0, 0, 0, 1173, 1137, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	1186, 0, 296, 1193, 297, 1192, 0, 1203, 298, 299,
	300, 301, 302, 303, 1139, 1172, 1104, 304, 1233, 1234,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 4444, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 1196, 337, 339, 1190, 1189, 1109, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 1181, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 1115, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 1128,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 1188,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 1201, 1202, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 4445,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 1106, 278, 1225, 477, 478, 479, 1129,
	1177, 480, 1191, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 1116, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 1187, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	4443, 551, 1117, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 1185,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 1232, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 1103, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 1197, 1198, 1199, 1200,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 1127,
	616, 617, 618, 619, 0, 621, 622, 0, 1110, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 1194, 1231, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1107, 0, 0, 0, 0, 0,
	1149, 1121, 1122, 1123, 3232, 3233, 1132, 1102, 0, 0,
	0, 0, 0, 0, 1100, 1101, 0, 279, 281, 280,
	282, 283, 284, 285, 1133, 286, 287, 0, 1131, 0,
	0, 0, 1173, 1137, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 1186, 0, 296,
	1193, 297, 1192, 0, 1203, 298, 299, 300, 301, 302,
	303, 1139, 1172, 1104, 304, 1233, 1234, 653, 0, 305,
	306, 1179, 0, 1160, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 1163, 1161, 1162, 1169,
	1165, 1164, 1168, 332, 333, 334, 335, 336, 1196, 337,
	339, 1190, 1189, 1109, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 1115, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 1204, 1205, 370, 1128, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 1188, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 1201, 1202, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 1211, 0, 1138, 391, 0, 392,
	393, 394, 395, 396, 1174, 1175, 1178, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 1216, 407, 1183, 1184, 0,
	1144, 0, 408, 409, 1218, 1176, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 1212, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	1167, 1166, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	1106, 278, 1225, 477, 478, 479, 1129, 1177, 480, 1191,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 1206,
	492, 493, 1116, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 1207, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 1187,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 1117,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1170, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 1185, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 1232, 592,
	593, 594, 595, 1208, 599, 600, 0, 601, 602, 1103,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 1197, 1198, 1199, 1200, 0, 620, 0,
	612, 613, 614, 1209, 615, 1210, 1127, 616, 617, 618,
	619, 0, 621, 622, 0, 1110, 623, 624, 625, 627,
	628, 626, 629, 1171, 630, 0, 0, 631, 632, 633,
	692, 1194, 1231, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 1107, 0, 0, 0, 0, 0, 1149, 1121, 1122,
	1123, 3230, 3231, 1132, 1102, 0, 0, 0, 0, 0,
	0, 1100, 1101, 0, 279, 281, 280, 282, 283, 284,
	285, 1133, 286, 287, 0, 1131, 0, 0, 0, 1173,
	1137, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 1186, 0, 296, 1193, 297, 1192,
	0, 1203, 298, 299, 300, 301, 302, 303, 1139, 1172,
	1104, 304, 1233, 1234, 653, 0, 305, 306, 1179, 0,
	1160, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168,
	332, 333, 334, 335, 336, 1196, 337, 339, 1190, 1189,
	1109, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 1181, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 1115, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	1204, 1205, 370, 1128, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 1188, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 1201, 1202,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 1211, 0, 1138, 391, 0, 392, 393, 394, 395,
	396, 1174, 1175, 1178, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 1216, 407, 1183, 1184, 0, 1144, 0, 408,
	409, 1218, 1176, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 1212, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 1167, 1166, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 1106, 278, 1225,
	477, 478, 479, 1129, 1177, 480, 1191, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 1206, 492, 493, 1116,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	1207, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 1187, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 1117, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1170, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 1185, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 1232, 592, 593, 594, 595,
	1208, 599, 600, 0, 601, 602, 1103, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	1197, 1198, 1199, 1200, 0, 620, 0, 612, 613, 614,
	1209, 615, 1210, 1127, 616, 617, 618, 619, 0, 621,
	622, 0, 1110, 623, 624, 625, 627, 628, 626, 629,
	1171, 630, 0, 0, 631, 632, 633, 692, 1194, 1231,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1107, 0,
	0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119, 1120,
	1132, 1102, 0, 0, 0, 0, 0, 0, 1100, 1101,
	0, 279, 281, 280, 282, 283, 284, 285, 1133, 286,
	287, 0, 1131, 0, 0, 0, 1173, 1137, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 1186, 0, 296, 1193, 297, 1192, 0, 1203, 298,
	299, 300, 301, 302, 303, 1139, 1172, 1104, 304, 1233,
	1234, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 1196, 337, 339, 1190, 1189, 1109, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 1181, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 1115, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	1128, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	1188, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 1201, 1202, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	1138, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 1183, 1184, 0, 1144, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 1106, 278, 1225, 477, 478, 479,
	1129, 1177, 480, 1191, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 1116, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 1187, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 1117, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	1185, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 1232, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 1103, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 1197, 1198, 1199,
	1200, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	1127, 616, 617, 618, 619, 0, 621, 622, 0, 1110,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 1194, 1231, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1107, 0, 0, 0, 0,
	0, 1149, 1121, 1122, 1123, 1119, 1120, 1132, 1102, 0,
	0, 0, 0, 0, 0, 2496, 2497, 0, 279, 281,
	280, 282, 283, 284, 285, 1133, 286, 287, 0, 1131,
	0, 0, 0, 1173, 1137, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 1186, 0,
	296, 1193, 297, 1192, 0, 1203, 298, 299, 300, 301,
	302, 303, 1139, 1172, 0, 304, 1233, 1234, 653, 0,
	305, 306, 1179, 0, 1160, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 1163, 1161, 1162,
	1169, 1165, 1164, 1168, 332, 333, 334, 335, 336, 1196,
	337, 339, 1190, 1189, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 1181,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 1115, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 1204, 1205, 370, 1128, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 1188, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 1201, 1202, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 1211, 0, 1138, 391, 0,
	392, 393, 394, 395, 396, 1174, 1175, 1178, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 1216, 407, 1183, 1184,
	0, 1144, 0, 408, 409, 1218, 1176, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 1212, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 1167, 1166, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 0, 278, 1225, 477, 478, 479, 1129, 1177, 480,
	1191, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	1206, 492, 493, 1116, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 1207, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	1187, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	1117, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 1170, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 1185, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 1232,
	592, 593, 594, 595, 1208, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 1197, 1198, 1199, 1200, 0, 620,
	0, 612, 613, 614, 1209, 615, 1210, 1127, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 1171, 630, 0, 0, 631, 632,
	633, 692, 1194, 1231, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 1149, 1121,
	1122, 1123, 1119, 1120, 1132, 2755, 0, 0, 0, 0,
	0, 0, 2753, 2754, 0, 279, 281, 280, 282, 283,
	284, 285, 1133, 286, 287, 0, 1131, 0, 0, 0,
	1173, 1137, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 1186, 0, 296, 1193, 297,
	1192, 0, 1203, 298, 299, 300, 301, 302, 303, 1139,
	1172, 0, 304, 1233, 1234, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 1196, 337, 339, 1190,
	1189, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 1181, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 1115,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 1128, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 1188, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 1201,
	1202, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 1138, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 1183, 1184, 0, 1144, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 278,
	1225, 477, 478, 479, 1129, 1177, 480, 1191, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 1187, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 3225, 3226, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 1185, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 1232, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 1197, 1198, 1199, 1200, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 1127, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 1194,
	1231, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 1149, 1121, 1122, 1123, 1119,
	1120, 1132, 0, 0, 0, 0, 0, 0, 0, 2159,
	2160, 0, 279, 281, 280, 282, 283, 284, 285, 1133,
	286, 287, 0, 1131, 0, 0, 0, 1173, 1137, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 0, 1186, 0, 296, 1193, 297, 1192, 0, 1203,
	298, 299, 300, 301, 302, 303, 1139, 1172, 1104, 304,
	1233, 1234, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	4838, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 1196, 337, 339, 1190, 1189, 1109, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 1181, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 1115, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 1128, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 1188, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 1201, 1202, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 1138, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 1183, 1184, 0, 1144, 0, 408, 409, 0,
	1176, 0, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 1106, 278, 0, 477, 478,
	479, 1129, 1177, 480, 1191, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 1116, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 1187, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 1117, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 1185, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 1232, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 1103, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 1197, 1198,
	1199, 1200, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 1127, 616, 617, 618, 619, 0, 4837, 622, 0,
	1110, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 1194, 1231, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	1093, 0, 1271, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1100, 1101, 0, 279,
	281, 280, 282, 283, 284, 285, 1133, 286, 287, 0,
	1131, 0, 0, 0, 1173, 0, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 1172, 0, 304, 651, 652, 653,
	0, 305, 306, 1179, 0, 1160, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 1163, 1161,
	1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 1204, 1205, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 1211, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 1174, 1175, 1178, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 1216, 407, 668,
	669, 0, 670, 0, 408, 409, 1218, 1176, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 1257, 420, 422, 421, 0, 423, 1212,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 1167, 1166, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 0, 278, 1225, 477, 478, 479, 0, 1177,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 1263,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 1206, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 1207, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 1265, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 238, 569, 570, 568,
	571, 572, 573, 1170, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 1208, 599, 600, 0, 601,
	602, 0, 598, 589, 240, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 1209, 615, 1210, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 1171, 630, 0, 0, 631,
	632, 633, 1646, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 232, 640, 641, 696,
	642, 643, 644, 1271, 0, 233, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 1261, 0, 2000, 0, 1173, 0, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 1172, 0, 304, 651, 652,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	668, 669, 0, 670, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1257, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 0, 278, 1225, 477, 478, 479, 0,
	1177, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	1263, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 1265, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 238, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 0, 598, 589, 240, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 1646, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 232, 640, 641,
	696, 642, 643, 644, 0, 0, 233, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3389, 0, 1271, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1261, 0, 2000, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	1173, 0, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	1172, 0, 304, 651, 652, 653, 0, 305, 306, 1179,
	0, 1160, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 1163, 1161, 1162, 1169, 1165, 1164,
	1168, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 1204, 1205, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 1211, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 1174, 1175, 1178, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 1216, 407, 668, 669, 0, 670, 0,
	408, 409, 1218, 1176, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 1257,
	420, 422, 421, 0, 423, 1212, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 1167, 1166,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 278,
	1225, 477, 478, 479, 0, 1177, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 1263, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 1206, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 1207, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 1265, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 1170,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 1208, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 1209, 615, 1210, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 1171, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1253, 0, 1271, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1261, 0, 1259,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 1173, 0, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 1172, 0, 304, 651, 652,
	653, 0, 305, 306, 1179, 0, 1160, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 1163,
	1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 1204, 1205, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 1211, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 1174, 1175, 1178,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 1216, 407,
	668, 669, 0, 670, 0, 408, 409, 1218, 1176, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 1257, 420, 422, 421, 0, 423,
	1212, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 1167, 1166, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 0, 278, 1225, 477, 478, 479, 0,
	1177, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	1263, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 1206, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 1207, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 1265, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1170, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 1208, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 1209, 615, 1210, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 1171, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1271, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 1261, 0, 1259, 0, 1173, 0, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 1172, 0, 304, 651,
	652, 653, 0, 305, 306, 1179, 0, 1160, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 1204, 1205, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 1211, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 1174, 1175,
	1178, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 1216,
	407, 668, 669, 0, 670, 0, 408, 409, 1218, 1176,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 1257, 420, 422, 421, 0,
	423, 1212, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 1167, 1166, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 0, 278, 1225, 477, 478, 479,
	0, 1177, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 1263, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 1206, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 1207, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 1265, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1170, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 1208, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 1209, 615, 1210,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 1171, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 1261, 0, 1259, 0, 1173, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 1172, 0, 304,
	651, 652, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 278, 1225, 477, 478,
	479, 0, 1177, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1271, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 4259, 0, 1173, 0,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 1172, 0,
	304, 651, 652, 653, 0, 305, 306, 1179, 0, 1160,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 1204,
	1205, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	1211, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	1174, 1175, 1178, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 1216, 407, 668, 669, 0, 670, 0, 408, 409,
	1218, 1176, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 1212, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 1167, 1166, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 0, 278, 1225, 477,
	478, 479, 0, 1177, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 1206, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 1207,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 682, 1265, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1170, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 1208,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 1209,
	615, 1210, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 1171,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 273, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 2600, 2601,
	2602, 2619, 2620, 2621, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 2622, 0,
	645, 0, 0, 0, 0, 288, 289, 1897, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 1882, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	2612, 0, 315, 316, 317, 314, 318, 0, 319, 2608,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 2613, 2614, 2615,
	2616, 371, 372, 373, 660, 0, 0, 2607, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 2617, 2618, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 2610, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 2611,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 1881, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 1093, 0, 1572, 2597,
	2598, 2599, 2623, 2609, 2603, 0, 2605, 2606, 2604, 2591,
	2592, 2593, 2594, 2595, 2596, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 1496, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1216, 407, 668, 669, 0, 670, 0,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 0,
	1225, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 238, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	240, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 1646, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 232, 640, 641, 696, 642, 643, 644, 0,
	1643, 233, 1572, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 193,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 1496, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1216, 407, 668,
	669, 0, 670, 0, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 0, 0, 1225, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 238, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 240, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 1646, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 232, 640, 641, 696,
	642, 643, 644, 1572, 1571, 233, 0, 0, 0, 1569,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 193, 0, 645, 0, 0, 0, 0,
	288, 289, 1213, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 1496, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 1214, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	1215, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 1217, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 1216, 407,
	668, 669, 0, 670, 0, 408, 409, 1218, 671, 1219,
	410, 411, 412, 1220, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 1221, 424, 425, 1222, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 1223, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	1224, 476, 464, 0, 0, 1225, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 1226,
	491, 1227, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 1228, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 1229, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 1572, 1571, 0, 0, 0, 0,
	1569, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 1670, 0, 645, 0, 0, 0,
	0, 288, 289, 1213, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 1496, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 1214, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 1215, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 1217, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 1216,
	407, 668, 669, 0, 670, 0, 408, 409, 1218, 671,
	1219, 410, 411, 412, 1220, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 1221, 424, 425, 1222, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 1223, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 1224, 476, 464, 0, 0, 1225, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	1226, 491, 1227, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 1228, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 1229, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1572, 1571, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 3702, 0, 645, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 1496, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 0, 1225, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 2364, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1572, 2274, 0, 0,
	0, 0, 2275, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 1670, 0, 645, 0,
	0, 0, 0, 288, 289, 1213, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 1496,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 1214, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 1215, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 1217, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 1216, 407, 668, 669, 0, 670, 0, 408, 409,
	1218, 671, 1219, 410, 411, 412, 1220, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 2273, 422,
	421, 0, 423, 672, 1221, 424, 425, 1222, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 1223, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 1224, 476, 464, 0, 0, 1225, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 1226, 491, 1227, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 1228,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 1229, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 1572, 1571, 0,
	0, 0, 0, 1569, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 1670, 0, 645,
	0, 0, 0, 0, 288, 289, 1213, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	1496, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 1214,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 1215, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 1217, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 1216, 407, 668, 669, 0, 670, 0, 408,
	409, 1218, 671, 1219, 410, 411, 412, 1220, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 1221, 424, 425, 1222, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 1223, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 1224, 476, 464, 0, 0, 1225,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 1226, 491, 1227, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	1228, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 1229, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 0, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 1093, 0,
	273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 1652, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 238, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 240, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	1646, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 273, 0, 232, 640, 641, 696, 642, 643,
	644, 0, 0, 233, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 193, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 273, 3139, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 2014, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 1271, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 4999, 0, 1173, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 1172, 0, 304,
	651, 652, 653, 0, 305, 306, 1179, 0, 1160, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 1163, 1161, 1162, 1169, 1165, 1164, 1168, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 1204, 1205,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 1211,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1174,
	1175, 1178, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	1176, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 1212, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 1167, 1166, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 278, 1225, 477, 478,
	479, 0, 1177, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 1206, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 1207, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 1170, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 1208, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 1209, 615,
	1210, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 1171, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 3652, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	0, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 1640, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 273, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 3127, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 273, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 3809, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 0, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 923, 0, 824,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 2351, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 831, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 921, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 829, 603, 604, 605, 606, 607, 830, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	2058, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 834, 0, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 0, 2064, 0, 296,
	2054, 297, 2070, 0, 2077, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 2080, 2081, 0, 0, 305,
	306, 0, 0, 1496, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 1196, 337,
	339, 2068, 2067, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 1181, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 2066, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 2075, 2076, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 0, 0, 0, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1216, 407, 2061, 2062, 0,
	2057, 0, 408, 409, 1218, 0, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	0, 0, 1225, 477, 478, 479, 0, 0, 480, 2069,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 1226, 491, 1227, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 2051, 505, 506, 507, 2052,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 2065,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 2063, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 2079, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 2071, 2072, 2073, 2074, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 2055, 2078, 0, 635, 634, 636, 637, 0, 638,
	639, 0, 0, 0, 0, 640, 641, 0, 642, 643,
	644, 824, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 3929, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 2045, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 831, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	3928, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 829, 603, 604, 605, 606, 607, 830,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	3927, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 824, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 2085, 286, 287,
	0, 0, 0, 0, 834, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 831,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 2084, 564, 565, 566, 567, 0, 2086, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 829, 603, 604, 605, 606,
	607, 830, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 2083, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 0, 824, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 2036,
	286, 287, 0, 0, 0, 0, 834, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 831, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 2035, 564, 565, 566, 567, 0,
	2037, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 829, 603, 604,
	605, 606, 607, 830, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 2034, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 822, 0, 824, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 834, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 831, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	829, 603, 604, 605, 606, 607, 830, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	824, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 834, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 831, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 829, 603, 604, 605, 606, 607, 830, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 0, 824, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 834, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 831, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 2402, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 2403, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 829, 603, 604, 605, 606, 607,
	830, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 2404, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 273, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 834, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 0, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 1572, 1571, 0, 0, 0, 0, 1569, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 834, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 1496, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1216, 407, 668, 669,
	0, 670, 0, 408, 409, 1218, 671, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 0, 0, 1225, 477, 478, 479, 4017, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 0, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 1572, 1571, 0, 0, 0, 0, 1569, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 1213, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 1496, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 1214, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 1215,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	1217, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 1216, 407, 668,
	669, 0, 670, 0, 408, 409, 1218, 671, 1219, 410,
	411, 412, 1220, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	1221, 424, 425, 1222, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 1223, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 1224,
	476, 464, 0, 0, 1225, 477, 478, 479, 3602, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 1226, 491,
	1227, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 1228, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	1229, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 0, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 1700, 0, 1572, 1571, 0, 0, 0,
	0, 1569, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 1213, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 1496, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 1214, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 1699, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 1215, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 1217, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	1216, 407, 668, 669, 0, 670, 0, 408, 409, 1218,
	671, 1219, 410, 411, 412, 1220, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 1221, 424, 425, 1222, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 1223, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 1224, 476, 464, 0, 0, 1225, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 1226, 491, 1227, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 1698, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 1228, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 1697, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 1229, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 0, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 1565, 0, 1572, 1571,
	0, 0, 0, 0, 1569, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 1213, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 1496, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	1214, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 1215, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 1567, 666, 667, 481, 1217, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 1216, 407, 668, 669, 0, 670, 0,
	408, 409, 1218, 671, 1219, 410, 411, 412, 1220, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 1221, 424, 425, 1222,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 1223,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 1224, 476, 464, 0, 0,
	1225, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 1226, 491, 1227, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 1228, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 1229, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 0,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 1572,
	1571, 0, 0, 0, 0, 1569, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 1213, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 1496, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 1214, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 1215, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 1217, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 1216, 407, 668, 669, 0, 670,
	0, 408, 409, 1218, 671, 1219, 410, 411, 412, 1220,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 1221, 424, 425,
	1222, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	1223, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 1224, 476, 464, 0,
	0, 1225, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 1226, 491, 1227, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 1228, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 1229, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1572, 1571, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 1213,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 1496, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 1214, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 1215, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 1217, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 1216, 407, 668, 669, 0,
	670, 0, 408, 409, 1218, 671, 1219, 410, 411, 412,
	1220, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 1221, 424,
	425, 1222, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 1223, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 1224, 476, 464,
	0, 0, 1225, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 1226, 491, 1227, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 1228, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 1229, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1572, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	1213, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 1496, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 1214, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 1215, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 1217,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 1216, 407, 668, 669,
	0, 670, 0, 408, 409, 1218, 671, 1219, 410, 411,
	412, 1220, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 1221,
	424, 425, 1222, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 1223, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 1224, 476,
	464, 0, 0, 1225, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 1226, 491, 1227,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 1228, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 1229,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	2927, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 3644, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 2931, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 3643,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 2930, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 3640, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 3642, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 3639, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	2929, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 3641, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 2927, 305, 306, 654, 0, 0, 2921, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 2923, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 2931, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 2930, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 2920, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 2929, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 2928, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1777, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	1776, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 1775, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 1778, 556, 563, 564, 565, 566, 567,
	0, 1774, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 1772, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	1773, 634, 636, 637, 695, 638, 639, 1500, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 1502, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 1263, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1497, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 1499, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 1263,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1403, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1405,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 1263, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 729, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 728,
	284, 285, 717, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 720, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	726, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 722, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 716,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 717, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 720,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 721, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 722, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 717, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	720, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 721, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 722, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 717, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 720, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 4027, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 722, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 1263, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 3547, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 3097, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 3096, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 2371,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 2309, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 2316, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 2315,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 2302, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 2304, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 2267, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 1263, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1618, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 1617, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1520, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 276, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 277, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 278, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 1513, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 276, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 1515, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 277, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 278,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1339,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 1338, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1329, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 1328, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 1326, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 1325, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1321, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 1320, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 698, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 264, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 276, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 277, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 278, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 273, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 276, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 277, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 278, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 720, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	721, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 722, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 2411, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 276, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 277,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	278, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 2409, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 276, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	277, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 278, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 2407, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 276, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 277, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 278, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 276,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 2322, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 277, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 278, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	276, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 2110, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 277, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 278, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 276, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 2104, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 277, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 278, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 908, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 907, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 906,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 3643, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 4340, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1367,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	1370, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 1368, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 789, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 788, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	787, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	1371, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 785, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1367, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 1370, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 1368, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 789, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 788, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 787, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 1371, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 785, 687, 688,
	689, 0, 620, 0, 612, 1369, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 707, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 706, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 705, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 3139,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	4356, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 4639, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 4231,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 3978, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 2808, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 3139, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 665, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 3136, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 2228, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 788,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 787, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 785, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	2381, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 2369, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1673, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1666, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 779, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 775, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 780, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 789, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 788, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 787, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 1651, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 785, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 1624,
	0, 273, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 1623, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1608, 0, 273, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 1606, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 1601, 0, 273, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 1578, 0,
	273, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 1576, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 1563, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 1525, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 1505, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	1373, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 788, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 787, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 785, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 1344, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 1343,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 1335, 0, 273, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 1334, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 1287, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 794, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 779, 0, 273, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 775, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 774, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 665, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 780, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 789, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 788, 548, 549,
	550, 551, 776, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 787, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 777, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 785, 687, 688, 689,
	0, 620, 0, 612, 781, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 768, 0, 273, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	769, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 731, 0, 273,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 665, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	724, 0, 273, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 665, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 702, 0, 273, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 665,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	665, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 273, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 3672, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 0, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 788, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 787, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	574, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 785, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 3587, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 3563, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 391, 0,
	392, 393, 394, 395, 396, 3560, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 496, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 520, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 552, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 273, 0, 0, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 279,
	281, 280, 282, 283, 284, 285, 0, 286, 287, 0,
	0, 0, 0, 0, 645, 0, 0, 0, 0, 288,
	289, 0, 290, 291, 292, 293, 294, 295, 646, 647,
	0, 296, 648, 297, 649, 0, 650, 298, 299, 300,
	301, 302, 303, 0, 0, 0, 304, 651, 652, 653,
	0, 305, 306, 654, 0, 0, 0, 307, 308, 309,
	310, 311, 312, 313, 0, 0, 315, 316, 317, 314,
	318, 0, 319, 0, 320, 321, 322, 323, 324, 325,
	0, 326, 327, 328, 0, 329, 330, 331, 0, 0,
	0, 0, 0, 0, 0, 332, 333, 334, 335, 336,
	0, 337, 339, 655, 656, 0, 342, 338, 340, 0,
	343, 341, 344, 0, 345, 346, 347, 0, 0, 348,
	349, 350, 0, 351, 352, 353, 0, 354, 355, 356,
	0, 357, 358, 657, 359, 360, 361, 363, 365, 362,
	364, 366, 367, 368, 369, 658, 659, 370, 0, 0,
	0, 0, 0, 0, 0, 371, 372, 373, 660, 0,
	0, 0, 374, 0, 375, 376, 377, 0, 0, 0,
	378, 379, 380, 661, 662, 381, 382, 383, 384, 385,
	386, 387, 388, 389, 0, 390, 663, 0, 664, 391,
	0, 392, 393, 394, 395, 396, 3514, 666, 667, 481,
	0, 397, 398, 0, 399, 400, 401, 402, 403, 0,
	0, 0, 0, 404, 405, 406, 0, 0, 407, 668,
	669, 0, 670, 0, 408, 409, 0, 671, 0, 410,
	411, 412, 0, 413, 0, 0, 0, 414, 415, 416,
	417, 418, 419, 0, 420, 422, 421, 0, 423, 672,
	0, 424, 425, 0, 0, 426, 427, 428, 429, 430,
	431, 434, 0, 0, 432, 433, 435, 436, 0, 437,
	438, 440, 443, 439, 441, 442, 444, 457, 445, 446,
	447, 448, 449, 450, 451, 452, 453, 454, 455, 456,
	459, 0, 458, 0, 460, 461, 462, 463, 470, 472,
	473, 468, 469, 471, 474, 475, 465, 466, 467, 0,
	476, 464, 0, 0, 0, 477, 478, 479, 0, 673,
	480, 674, 482, 483, 0, 0, 484, 0, 0, 0,
	486, 487, 488, 0, 0, 489, 490, 675, 0, 491,
	0, 676, 492, 493, 485, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 0, 503, 504, 677, 505, 506,
	507, 678, 508, 509, 510, 679, 511, 680, 512, 513,
	0, 514, 515, 0, 516, 517, 518, 519, 520, 521,
	522, 681, 523, 524, 526, 525, 527, 0, 528, 0,
	529, 530, 531, 0, 0, 0, 0, 0, 532, 534,
	0, 535, 536, 537, 538, 533, 539, 540, 541, 542,
	543, 0, 544, 545, 546, 0, 547, 548, 549, 550,
	551, 682, 552, 0, 553, 554, 560, 561, 562, 555,
	556, 563, 564, 565, 566, 567, 0, 569, 570, 568,
	571, 572, 573, 0, 574, 575, 557, 558, 576, 577,
	0, 578, 579, 580, 581, 582, 583, 584, 683, 0,
	585, 0, 586, 587, 588, 590, 559, 591, 596, 597,
	684, 592, 593, 594, 595, 685, 599, 600, 0, 601,
	602, 0, 598, 589, 0, 603, 604, 605, 606, 607,
	608, 609, 610, 0, 611, 686, 687, 688, 689, 0,
	620, 0, 612, 613, 614, 690, 615, 691, 0, 616,
	617, 618, 619, 0, 621, 622, 0, 0, 623, 624,
	625, 627, 628, 626, 629, 0, 630, 0, 0, 631,
	632, 633, 692, 693, 694, 0, 635, 634, 636, 637,
	695, 638, 639, 273, 0, 0, 0, 640, 641, 696,
	642, 643, 644, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 645, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 646,
	647, 0, 296, 648, 297, 649, 0, 650, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 651, 652,
	653, 0, 305, 306, 654, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 0, 332, 333, 334, 335,
	336, 0, 337, 339, 655, 656, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 657, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 658, 659, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 660,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 661, 662, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 663, 0, 664,
	391, 0, 392, 393, 394, 395, 396, 3512, 666, 667,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	668, 669, 0, 670, 0, 408, 409, 0, 671, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	672, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	673, 480, 674, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 675, 0,
	491, 0, 676, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 677, 505,
	506, 507, 678, 508, 509, 510, 679, 511, 680, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 681, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 682, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 0, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 683,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 684, 592, 593, 594, 595, 685, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 686, 687, 688, 689,
	0, 620, 0, 612, 613, 614, 690, 615, 691, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 692, 693, 694, 0, 635, 634, 636,
	637, 695, 638, 639, 273, 0, 0, 0, 640, 641,
	696, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 645, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	646, 647, 0, 296, 648, 297, 649, 0, 650, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 651,
	652, 653, 0, 305, 306, 654, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 0, 332, 333, 334,
	335, 336, 0, 337, 339, 655, 656, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 657, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 658, 659, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	660, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 661, 662, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 663, 0,
	664, 391, 0, 392, 393, 394, 395, 396, 3500, 666,
	667, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 668, 669, 0, 670, 0, 408, 409, 0, 671,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 672, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 673, 480, 674, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 675,
	0, 491, 0, 676, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 677,
	505, 506, 507, 678, 508, 509, 510, 679, 511, 680,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 681, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 682, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 0, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	683, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 684, 592, 593, 594, 595, 685, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 686, 687, 688,
	689, 0, 620, 0, 612, 613, 614, 690, 615, 691,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 692, 693, 694, 0, 635, 634,
	636, 637, 695, 638, 639, 273, 0, 0, 0, 640,
	641, 696, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 279, 281, 280, 282, 283, 284, 285, 0,
	286, 287, 0, 0, 0, 0, 0, 645, 0, 0,
	0, 0, 288, 289, 0, 290, 291, 292, 293, 294,
	295, 646, 647, 0, 296, 648, 297, 649, 0, 650,
	298, 299, 300, 301, 302, 303, 0, 0, 0, 304,
	651, 652, 653, 0, 305, 306, 654, 0, 0, 0,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 315,
	316, 317, 314, 318, 0, 319, 0, 320, 321, 322,
	323, 324, 325, 0, 326, 327, 328, 0, 329, 330,
	331, 0, 0, 0, 0, 0, 0, 0, 332, 333,
	334, 335, 336, 0, 337, 339, 655, 656, 0, 342,
	338, 340, 0, 343, 341, 344, 0, 345, 346, 347,
	0, 0, 348, 349, 350, 0, 351, 352, 353, 0,
	354, 355, 356, 0, 357, 358, 657, 359, 360, 361,
	363, 365, 362, 364, 366, 367, 368, 369, 658, 659,
	370, 0, 0, 0, 0, 0, 0, 0, 371, 372,
	373, 660, 0, 0, 0, 374, 0, 375, 376, 377,
	0, 0, 0, 378, 379, 380, 661, 662, 381, 382,
	383, 384, 385, 386, 387, 388, 389, 0, 390, 663,
	0, 664, 391, 0, 392, 393, 394, 395, 396, 3497,
	666, 667, 481, 0, 397, 398, 0, 399, 400, 401,
	402, 403, 0, 0, 0, 0, 404, 405, 406, 0,
	0, 407, 668, 669, 0, 670, 0, 408, 409, 0,
	671, 0, 410, 411, 412, 0, 413, 0, 0, 0,
	414, 415, 416, 417, 418, 419, 0, 420, 422, 421,
	0, 423, 672, 0, 424, 425, 0, 0, 426, 427,
	428, 429, 430, 431, 434, 0, 0, 432, 433, 435,
	436, 0, 437, 438, 440, 443, 439, 441, 442, 444,
	457, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 459, 0, 458, 0, 460, 461, 462,
	463, 470, 472, 473, 468, 469, 471, 474, 475, 465,
	466, 467, 0, 476, 464, 0, 0, 0, 477, 478,
	479, 0, 673, 480, 674, 482, 483, 0, 0, 484,
	0, 0, 0, 486, 487, 488, 0, 0, 489, 490,
	675, 0, 491, 0, 676, 492, 493, 485, 494, 495,
	496, 497, 498, 499, 500, 501, 502, 0, 503, 504,
	677, 505, 506, 507, 678, 508, 509, 510, 679, 511,
	680, 512, 513, 0, 514, 515, 0, 516, 517, 518,
	519, 520, 521, 522, 681, 523, 524, 526, 525, 527,
	0, 528, 0, 529, 530, 531, 0, 0, 0, 0,
	0, 532, 534, 0, 535, 536, 537, 538, 533, 539,
	540, 541, 542, 543, 0, 544, 545, 546, 0, 547,
	548, 549, 550, 551, 682, 552, 0, 553, 554, 560,
	561, 562, 555, 556, 563, 564, 565, 566, 567, 0,
	569, 570, 568, 571, 572, 573, 0, 574, 575, 557,
	558, 576, 577, 0, 578, 579, 580, 581, 582, 583,
	584, 683, 0, 585, 0, 586, 587, 588, 590, 559,
	591, 596, 597, 684, 592, 593, 594, 595, 685, 599,
	600, 0, 601, 602, 0, 598, 589, 0, 603, 604,
	605, 606, 607, 608, 609, 610, 0, 611, 686, 687,
	688, 689, 0, 620, 0, 612, 613, 614, 690, 615,
	691, 0, 616, 617, 618, 619, 0, 621, 622, 0,
	0, 623, 624, 625, 627, 628, 626, 629, 0, 630,
	0, 0, 631, 632, 633, 692, 693, 694, 0, 635,
	634, 636, 637, 695, 638, 639, 273, 0, 0, 0,
	640, 641, 696, 642, 643, 644, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 645, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 646, 647, 0, 296, 648, 297, 649, 0,
	650, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 651, 652, 653, 0, 305, 306, 654, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 0, 332,
	333, 334, 335, 336, 0, 337, 339, 655, 656, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 657, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 658,
	659, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 660, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 661, 662, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	663, 0, 664, 391, 0, 392, 393, 394, 395, 396,
	3107, 666, 667, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 668, 669, 0, 670, 0, 408, 409,
	0, 671, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 672, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 673, 480, 674, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 675, 0, 491, 0, 676, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 677, 505, 506, 507, 678, 508, 509, 510, 679,
	511, 680, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 681, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 682, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 0, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 683, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 684, 592, 593, 594, 595, 685,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 686,
	687, 688, 689, 0, 620, 0, 612, 613, 614, 690,
	615, 691, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 692, 693, 694, 0,
	635, 634, 636, 637, 695, 638, 639, 273, 0, 0,
	0, 640, 641, 696, 642, 643, 644, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 645,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 646, 647, 0, 296, 648, 297, 649,
	0, 650, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 651, 652, 653, 0, 305, 306, 654, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 0,
	332, 333, 334, 335, 336, 0, 337, 339, 655, 656,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 657, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	658, 659, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 660, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 661, 662,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 663, 0, 664, 391, 0, 392, 393, 394, 395,
	396, 665, 666, 667, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 668, 669, 0, 670, 0, 408,
	409, 0, 671, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 672, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 673, 480, 674, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 675, 0, 491, 0, 676, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 677, 505, 506, 507, 678, 508, 509, 510,
	679, 511, 680, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 681, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 682, 552, 0, 553,
	554, 769, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 0, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 683, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 684, 592, 593, 594, 595,
	685, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	686, 687, 688, 689, 0, 620, 0, 612, 613, 614,
	690, 615, 691, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 692, 693, 694,
	0, 635, 634, 636, 637, 695, 638, 639, 273, 0,
	0, 0, 640, 641, 696, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 279, 281, 280, 282, 283,
	284, 285, 0, 286, 287, 0, 0, 0, 0, 0,
	645, 0, 2340, 0, 0, 288, 289, 0, 290, 291,
	292, 293, 294, 295, 646, 647, 0, 296, 648, 297,
	649, 0, 650, 298, 299, 300, 301, 302, 303, 0,
	0, 0, 304, 651, 652, 653, 0, 305, 306, 654,
	0, 0, 0, 307, 308, 309, 310, 311, 312, 313,
	0, 0, 315, 316, 317, 314, 318, 0, 319, 0,
	320, 321, 322, 323, 324, 325, 0, 326, 327, 328,
	0, 329, 330, 331, 0, 0, 0, 0, 0, 0,
	0, 332, 333, 334, 335, 336, 0, 337, 339, 655,
	656, 0, 342, 338, 340, 0, 343, 341, 344, 0,
	345, 346, 347, 0, 0, 348, 349, 350, 0, 351,
	352, 353, 0, 354, 355, 356, 0, 357, 358, 657,
	359, 360, 361, 363, 365, 362, 364, 366, 367, 368,
	369, 658, 659, 370, 0, 0, 0, 0, 0, 0,
	0, 371, 372, 373, 660, 0, 0, 0, 374, 0,
	375, 376, 377, 0, 0, 0, 378, 379, 380, 661,
	662, 381, 382, 383, 384, 385, 386, 387, 388, 389,
	0, 390, 663, 0, 664, 391, 0, 392, 393, 394,
	395, 396, 665, 666, 667, 481, 0, 397, 398, 0,
	399, 400, 401, 402, 403, 0, 0, 0, 0, 404,
	405, 406, 0, 0, 407, 668, 669, 0, 670, 0,
	408, 409, 0, 671, 0, 410, 411, 412, 0, 413,
	0, 0, 0, 414, 415, 416, 417, 418, 419, 0,
	420, 422, 421, 0, 423, 672, 0, 424, 425, 0,
	0, 426, 427, 428, 429, 430, 431, 434, 0, 0,
	432, 433, 435, 436, 0, 437, 438, 440, 443, 439,
	441, 442, 444, 457, 445, 446, 447, 448, 449, 450,
	451, 452, 453, 454, 455, 456, 459, 0, 458, 0,
	460, 461, 462, 463, 470, 472, 473, 468, 469, 471,
	474, 475, 465, 466, 467, 0, 476, 464, 0, 0,
	0, 477, 478, 479, 0, 673, 480, 674, 482, 483,
	0, 0, 484, 0, 0, 0, 486, 487, 488, 0,
	0, 489, 490, 675, 0, 491, 0, 676, 492, 493,
	485, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	0, 503, 504, 677, 505, 506, 507, 678, 508, 509,
	510, 679, 511, 680, 512, 513, 0, 514, 515, 0,
	516, 517, 518, 519, 520, 521, 522, 681, 523, 524,
	526, 525, 527, 0, 528, 0, 529, 530, 531, 0,
	0, 0, 0, 0, 532, 534, 0, 535, 536, 537,
	538, 533, 539, 540, 541, 542, 543, 0, 544, 545,
	546, 0, 547, 548, 549, 550, 551, 682, 552, 0,
	553, 554, 560, 561, 562, 555, 556, 563, 564, 565,
	566, 567, 0, 569, 570, 568, 571, 572, 573, 0,
	0, 575, 557, 558, 576, 577, 0, 578, 579, 580,
	581, 582, 583, 584, 683, 0, 585, 0, 586, 587,
	588, 590, 559, 591, 596, 597, 684, 592, 593, 594,
	595, 685, 599, 600, 0, 601, 602, 0, 598, 589,
	0, 603, 604, 605, 606, 607, 608, 609, 610, 0,
	611, 686, 687, 688, 689, 0, 620, 0, 612, 613,
	614, 690, 615, 691, 0, 616, 617, 618, 619, 0,
	621, 622, 0, 0, 623, 624, 625, 627, 628, 626,
	629, 0, 630, 0, 0, 631, 632, 633, 692, 693,
	694, 0, 635, 634, 636, 637, 695, 638, 639, 273,
	0, 0, 0, 640, 641, 696, 642, 643, 644, 0,
	0, 0, 0, 0, 0, 0, 279, 281, 280, 282,
	283, 284, 285, 0, 286, 287, 0, 0, 0, 0,
	0, 645, 0, 0, 0, 0, 288, 289, 0, 290,
	291, 292, 293, 294, 295, 646, 647, 0, 296, 648,
	297, 649, 0, 650, 298, 299, 300, 301, 302, 303,
	0, 0, 0, 304, 651, 652, 653, 0, 305, 306,
	654, 0, 0, 0, 307, 308, 309, 310, 311, 312,
	313, 0, 0, 315, 316, 317, 314, 318, 0, 319,
	0, 320, 321, 322, 323, 324, 325, 0, 326, 327,
	328, 0, 329, 330, 331, 0, 0, 0, 0, 0,
	0, 0, 332, 333, 334, 335, 336, 0, 337, 339,
	655, 656, 0, 342, 338, 340, 0, 343, 341, 344,
	0, 345, 346, 347, 0, 0, 348, 349, 350, 0,
	351, 352, 353, 0, 354, 355, 356, 0, 357, 358,
	657, 359, 360, 361, 363, 365, 362, 364, 366, 367,
	368, 369, 658, 659, 370, 0, 0, 0, 0, 0,
	0, 0, 371, 372, 373, 660, 0, 0, 0, 374,
	0, 375, 376, 377, 0, 0, 0, 378, 379, 380,
	661, 662, 381, 382, 383, 384, 385, 386, 387, 388,
	389, 0, 390, 663, 0, 664, 391, 0, 392, 393,
	394, 395, 396, 1306, 666, 667, 481, 0, 397, 398,
	0, 399, 400, 401, 402, 403, 0, 0, 0, 0,
	404, 405, 406, 0, 0, 407, 668, 669, 0, 670,
	0, 408, 409, 0, 671, 0, 410, 411, 412, 0,
	413, 0, 0, 0, 414, 415, 416, 417, 418, 419,
	0, 420, 422, 421, 0, 423, 672, 0, 424, 425,
	0, 0, 426, 427, 428, 429, 430, 431, 434, 0,
	0, 432, 433, 435, 436, 0, 437, 438, 440, 443,
	439, 441, 442, 444, 457, 445, 446, 447, 448, 449,
	450, 451, 452, 453, 454, 455, 456, 459, 0, 458,
	0, 460, 461, 462, 463, 470, 472, 473, 468, 469,
	471, 474, 475, 465, 466, 467, 0, 476, 464, 0,
	0, 0, 477, 478, 479, 0, 673, 480, 674, 482,
	483, 0, 0, 484, 0, 0, 0, 486, 487, 488,
	0, 0, 489, 490, 675, 0, 491, 0, 676, 492,
	493, 485, 494, 495, 496, 497, 498, 499, 500, 501,
	502, 0, 503, 504, 677, 505, 506, 507, 678, 508,
	509, 510, 679, 511, 680, 512, 513, 0, 514, 515,
	0, 516, 517, 518, 519, 520, 521, 522, 681, 523,
	524, 526, 525, 527, 0, 528, 0, 529, 530, 531,
	0, 0, 0, 0, 0, 532, 534, 0, 535, 536,
	537, 538, 533, 539, 540, 541, 542, 543, 0, 544,
	545, 546, 0, 547, 548, 549, 550, 551, 682, 552,
	0, 553, 554, 560, 561, 562, 555, 556, 563, 564,
	565, 566, 567, 0, 569, 570, 568, 571, 572, 573,
	0, 574, 575, 557, 558, 576, 577, 0, 578, 579,
	580, 581, 582, 583, 584, 683, 0, 585, 0, 586,
	587, 588, 590, 559, 591, 596, 597, 684, 592, 593,
	594, 595, 685, 599, 600, 0, 601, 602, 0, 598,
	589, 0, 603, 604, 605, 606, 607, 608, 609, 610,
	0, 611, 686, 687, 688, 689, 0, 620, 0, 612,
	613, 614, 690, 615, 691, 0, 616, 617, 618, 619,
	0, 621, 622, 0, 0, 623, 624, 625, 627, 628,
	626, 629, 0, 630, 0, 0, 631, 632, 633, 692,
	693, 694, 0, 635, 634, 636, 637, 695, 638, 639,
	273, 0, 0, 0, 640, 641, 696, 642, 643, 644,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 645, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 646, 647, 0, 296,
	648, 297, 649, 0, 650, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 651, 652, 653, 0, 305,
	306, 654, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 0, 332, 333, 334, 335, 336, 0, 337,
	339, 655, 656, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 657, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 658, 659, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 660, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 661, 662, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 663, 0, 664, 391, 0, 392,
	393, 394, 395, 396, 665, 666, 667, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 668, 669, 0,
	670, 0, 408, 409, 0, 671, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 672, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 673, 480, 674,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 675, 0, 491, 0, 676,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 677, 505, 506, 507, 678,
	508, 509, 510, 679, 511, 680, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 681,
	523, 524, 1236, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 682,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 0, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 683, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 684, 592,
	593, 594, 595, 685, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 686, 687, 688, 689, 0, 620, 0,
	612, 613, 614, 690, 615, 691, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	692, 693, 694, 0, 635, 634, 636, 637, 695, 638,
	639, 273, 0, 0, 0, 640, 641, 696, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 279, 281,
	280, 282, 283, 284, 285, 0, 286, 287, 0, 0,
	0, 0, 0, 645, 0, 0, 0, 0, 288, 289,
	0, 290, 291, 292, 293, 294, 295, 646, 647, 0,
	296, 648, 297, 649, 0, 650, 298, 299, 300, 301,
	302, 303, 0, 0, 0, 304, 651, 652, 653, 0,
	305, 306, 654, 0, 0, 0, 307, 308, 309, 310,
	311, 312, 313, 0, 0, 315, 316, 317, 314, 318,
	0, 319, 0, 320, 321, 322, 323, 324, 325, 0,
	326, 327, 328, 0, 329, 330, 331, 0, 0, 0,
	0, 0, 0, 0, 332, 333, 334, 335, 336, 0,
	337, 339, 655, 656, 0, 342, 338, 340, 0, 343,
	341, 344, 0, 345, 346, 347, 0, 0, 348, 349,
	350, 0, 351, 352, 353, 0, 354, 355, 356, 0,
	357, 358, 657, 359, 360, 361, 363, 365, 362, 364,
	366, 367, 368, 369, 658, 659, 370, 0, 0, 0,
	0, 0, 0, 0, 371, 372, 373, 660, 0, 0,
	0, 374, 0, 375, 376, 377, 0, 0, 0, 378,
	379, 380, 661, 662, 381, 382, 383, 384, 385, 386,
	387, 388, 389, 0, 390, 663, 0, 664, 0, 0,
	392, 393, 394, 395, 396, 665, 666, 667, 481, 0,
	397, 398, 0, 399, 400, 401, 402, 403, 0, 0,
	0, 0, 404, 405, 406, 0, 0, 407, 668, 669,
	0, 670, 0, 408, 409, 0, 671, 0, 410, 411,
	412, 0, 413, 0, 0, 0, 414, 415, 416, 417,
	418, 419, 0, 420, 422, 421, 0, 423, 672, 0,
	424, 425, 0, 0, 426, 427, 428, 429, 430, 431,
	434, 0, 0, 432, 433, 435, 436, 0, 437, 438,
	440, 443, 439, 441, 442, 444, 457, 445, 446, 447,
	448, 449, 450, 451, 452, 453, 454, 455, 456, 459,
	0, 458, 0, 460, 461, 462, 463, 470, 472, 473,
	468, 469, 471, 474, 475, 465, 466, 467, 0, 476,
	464, 0, 0, 0, 477, 478, 479, 0, 673, 480,
	674, 482, 483, 0, 0, 484, 0, 0, 0, 486,
	487, 488, 0, 0, 489, 490, 675, 0, 491, 0,
	676, 492, 493, 485, 494, 495, 0, 497, 498, 499,
	500, 501, 502, 0, 503, 504, 677, 505, 506, 507,
	678, 508, 509, 510, 679, 511, 680, 512, 513, 0,
	514, 515, 0, 516, 517, 518, 519, 0, 521, 522,
	681, 523, 524, 526, 525, 527, 0, 528, 0, 529,
	530, 531, 0, 0, 0, 0, 0, 532, 534, 0,
	535, 536, 537, 538, 533, 539, 540, 541, 542, 543,
	0, 544, 545, 546, 0, 547, 548, 549, 550, 551,
	682, 0, 0, 553, 554, 560, 561, 562, 555, 556,
	563, 564, 565, 566, 567, 0, 569, 570, 568, 571,
	572, 573, 0, 574, 575, 557, 558, 576, 577, 0,
	578, 579, 580, 581, 582, 583, 584, 683, 0, 585,
	0, 586, 587, 588, 590, 559, 591, 596, 597, 684,
	592, 593, 594, 595, 685, 599, 600, 0, 601, 602,
	0, 598, 589, 0, 603, 604, 605, 606, 607, 608,
	609, 610, 0, 611, 686, 687, 688, 689, 0, 620,
	0, 612, 613, 614, 690, 615, 691, 0, 616, 617,
	618, 619, 0, 621, 622, 0, 0, 623, 624, 625,
	627, 628, 626, 629, 0, 630, 0, 0, 631, 632,
	633, 692, 693, 694, 0, 635, 634, 636, 637, 695,
	638, 639, 1614, 0, 1351, 0, 640, 641, 696, 642,
	643, 644, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 0, 297, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 0,
	0, 0, 0, 305, 306, 0, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 1353, 332, 333, 334,
	335, 336, 0, 337, 339, 0, 0, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 1613, 0,
	0, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 0, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 0, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 0, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 0,
	0, 491, 0, 0, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 0, 508, 509, 510, 0, 511, 0,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 0, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 0, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1354, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	0, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 0, 592, 593, 594, 595, 0, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 0, 0, 0,
	0, 0, 620, 0, 612, 613, 614, 0, 615, 0,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 0, 0, 0, 0, 635, 634,
	636, 637, 0, 638, 639, 1528, 0, 1351, 0, 640,
	641, 0, 642, 643, 644, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 279, 281, 280, 282, 283, 284,
	285, 0, 286, 287, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 288, 289, 0, 290, 291, 292,
	293, 294, 295, 0, 0, 0, 296, 0, 297, 0,
	0, 0, 298, 299, 300, 301, 302, 303, 0, 0,
	0, 304, 0, 0, 0, 0, 305, 306, 0, 0,
	0, 0, 307, 308, 309, 310, 311, 312, 313, 0,
	0, 315, 316, 317, 314, 318, 0, 319, 0, 320,
	321, 322, 323, 324, 325, 0, 326, 327, 328, 0,
	329, 330, 331, 0, 0, 0, 0, 0, 0, 1353,
	332, 333, 334, 335, 336, 0, 337, 339, 0, 0,
	0, 342, 338, 340, 0, 343, 341, 344, 0, 345,
	346, 347, 0, 0, 348, 349, 350, 0, 351, 352,
	353, 0, 354, 355, 356, 0, 357, 358, 0, 359,
	360, 361, 363, 365, 362, 364, 366, 367, 368, 369,
	0, 0, 370, 0, 0, 0, 0, 0, 0, 0,
	371, 372, 373, 0, 0, 0, 0, 374, 0, 375,
	376, 377, 0, 0, 0, 378, 379, 380, 0, 0,
	381, 382, 383, 384, 385, 386, 387, 388, 389, 0,
	390, 0, 0, 0, 391, 0, 392, 393, 394, 395,
	396, 1527, 0, 0, 481, 0, 397, 398, 0, 399,
	400, 401, 402, 403, 0, 0, 0, 0, 404, 405,
	406, 0, 0, 407, 0, 0, 0, 0, 0, 408,
	409, 0, 0, 0, 410, 411, 412, 0, 413, 0,
	0, 0, 414, 415, 416, 417, 418, 419, 0, 420,
	422, 421, 0, 423, 0, 0, 424, 425, 0, 0,
	426, 427, 428, 429, 430, 431, 434, 0, 0, 432,
	433, 435, 436, 0, 437, 438, 440, 443, 439, 441,
	442, 444, 457, 445, 446, 447, 448, 449, 450, 451,
	452, 453, 454, 455, 456, 459, 0, 458, 0, 460,
	461, 462, 463, 470, 472, 473, 468, 469, 471, 474,
	475, 465, 466, 467, 0, 476, 464, 0, 0, 0,
	477, 478, 479, 0, 0, 480, 0, 482, 483, 0,
	0, 484, 0, 0, 0, 486, 487, 488, 0, 0,
	489, 490, 0, 0, 491, 0, 0, 492, 493, 485,
	494, 495, 496, 497, 498, 499, 500, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 0, 508, 509, 510,
	0, 511, 0, 512, 513, 0, 514, 515, 0, 516,
	517, 518, 519, 520, 521, 522, 0, 523, 524, 526,
	525, 527, 0, 528, 0, 529, 530, 531, 0, 0,
	0, 0, 0, 532, 534, 0, 535, 536, 537, 538,
	533, 539, 540, 541, 542, 543, 0, 544, 545, 546,
	0, 547, 548, 549, 550, 551, 0, 552, 0, 553,
	554, 560, 561, 562, 555, 556, 563, 564, 565, 566,
	567, 0, 569, 570, 568, 571, 572, 573, 1354, 574,
	575, 557, 558, 576, 577, 0, 578, 579, 580, 581,
	582, 583, 584, 0, 0, 585, 0, 586, 587, 588,
	590, 559, 591, 596, 597, 0, 592, 593, 594, 595,
	0, 599, 600, 0, 601, 602, 0, 598, 589, 0,
	603, 604, 605, 606, 607, 608, 609, 610, 0, 611,
	0, 0, 0, 0, 0, 620, 0, 612, 613, 614,
	0, 615, 0, 0, 616, 617, 618, 619, 0, 621,
	622, 0, 0, 623, 624, 625, 627, 628, 626, 629,
	0, 630, 0, 0, 631, 632, 633, 0, 0, 0,
	0, 635, 634, 636, 637, 0, 638, 639, 1349, 0,
	1351, 0, 640, 641, 0, 642, 643, 644, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 279, 281, 280,
	282, 283, 284, 285, 0, 286, 287, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 288, 289, 0,
	290, 291, 292, 293, 294, 295, 0, 0, 0, 296,
	0, 297, 0, 0, 0, 298, 299, 300, 301, 302,
	303, 0, 0, 0, 304, 0, 0, 0, 0, 305,
	306, 0, 0, 0, 0, 307, 308, 309, 310, 311,
	312, 313, 0, 0, 315, 316, 317, 314, 318, 0,
	319, 0, 320, 321, 322, 323, 324, 325, 0, 326,
	327, 328, 0, 329, 330, 331, 0, 0, 0, 0,
	0, 0, 1353, 332, 333, 334, 335, 336, 0, 337,
	339, 0, 0, 0, 342, 338, 340, 0, 343, 341,
	344, 0, 345, 346, 347, 0, 0, 348, 349, 350,
	0, 351, 352, 353, 0, 354, 355, 356, 0, 357,
	358, 0, 359, 360, 361, 363, 365, 362, 364, 366,
	367, 368, 369, 0, 0, 370, 0, 0, 0, 0,
	0, 0, 0, 371, 372, 373, 0, 0, 0, 0,
	374, 0, 375, 376, 377, 0, 0, 0, 378, 379,
	380, 0, 0, 381, 382, 383, 384, 385, 386, 387,
	388, 389, 0, 390, 0, 0, 0, 391, 0, 392,
	393, 394, 395, 396, 1348, 0, 0, 481, 0, 397,
	398, 0, 399, 400, 401, 402, 403, 0, 0, 0,
	0, 404, 405, 406, 0, 0, 407, 0, 0, 0,
	0, 0, 408, 409, 0, 0, 0, 410, 411, 412,
	0, 413, 0, 0, 0, 414, 415, 416, 417, 418,
	419, 0, 420, 422, 421, 0, 423, 0, 0, 424,
	425, 0, 0, 426, 427, 428, 429, 430, 431, 434,
	0, 0, 432, 433, 435, 436, 0, 437, 438, 440,
	443, 439, 441, 442, 444, 457, 445, 446, 447, 448,
	449, 450, 451, 452, 453, 454, 455, 456, 459, 0,
	458, 0, 460, 461, 462, 463, 470, 472, 473, 468,
	469, 471, 474, 475, 465, 466, 467, 0, 476, 464,
	0, 0, 0, 477, 478, 479, 0, 0, 480, 0,
	482, 483, 0, 0, 484, 0, 0, 0, 486, 487,
	488, 0, 0, 489, 490, 0, 0, 491, 0, 0,
	492, 493, 485, 494, 495, 496, 497, 498, 499, 500,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 0,
	508, 509, 510, 0, 511, 0, 512, 513, 0, 514,
	515, 0, 516, 517, 518, 519, 520, 521, 522, 0,
	523, 524, 526, 525, 527, 0, 528, 0, 529, 530,
	531, 0, 0, 0, 0, 0, 532, 534, 0, 535,
	536, 537, 538, 533, 539, 540, 541, 542, 543, 0,
	544, 545, 546, 0, 547, 548, 549, 550, 551, 0,
	552, 0, 553, 554, 560, 561, 562, 555, 556, 563,
	564, 565, 566, 567, 0, 569, 570, 568, 571, 572,
	573, 1354, 574, 575, 557, 558, 576, 577, 0, 578,
	579, 580, 581, 582, 583, 584, 0, 0, 585, 0,
	586, 587, 588, 590, 559, 591, 596, 597, 0, 592,
	593, 594, 595, 0, 599, 600, 0, 601, 602, 0,
	598, 589, 0, 603, 604, 605, 606, 607, 608, 609,
	610, 0, 611, 0, 0, 0, 0, 0, 620, 0,
	612, 613, 614, 0, 615, 0, 0, 616, 617, 618,
	619, 0, 621, 622, 0, 0, 623, 624, 625, 627,
	628, 626, 629, 0, 630, 0, 0, 631, 632, 633,
	0, 0, 0, 0, 635, 634, 636, 637, 0, 638,
	639, 2124, 0, 1351, 0, 640, 641, 0, 642, 643,
	644, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	279, 281, 280, 282, 283, 284, 285, 0, 286, 287,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	288, 289, 0, 290, 291, 292, 293, 294, 295, 0,
	0, 0, 296, 0, 297, 0, 0, 0, 298, 299,
	300, 301, 302, 303, 0, 0, 0, 304, 0, 0,
	0, 0, 305, 306, 0, 0, 0, 0, 307, 308,
	309, 310, 311, 312, 313, 0, 0, 315, 316, 317,
	314, 318, 0, 319, 0, 320, 321, 322, 323, 324,
	325, 0, 326, 327, 328, 0, 329, 330, 331, 0,
	0, 0, 0, 0, 0, 1353, 332, 333, 334, 335,
	336, 0, 337, 339, 0, 0, 0, 342, 338, 340,
	0, 343, 341, 344, 0, 345, 346, 347, 0, 0,
	348, 349, 350, 0, 351, 352, 353, 0, 354, 355,
	356, 0, 357, 358, 0, 359, 360, 361, 363, 365,
	362, 364, 366, 367, 368, 369, 0, 0, 370, 0,
	0, 0, 0, 0, 0, 0, 371, 372, 373, 0,
	0, 0, 0, 374, 0, 375, 376, 377, 0, 0,
	0, 378, 379, 380, 0, 0, 381, 382, 383, 384,
	385, 386, 387, 388, 389, 0, 390, 0, 0, 0,
	391, 0, 392, 393, 394, 395, 396, 0, 0, 0,
	481, 0, 397, 398, 0, 399, 400, 401, 402, 403,
	0, 0, 0, 0, 404, 405, 406, 0, 0, 407,
	0, 0, 0, 0, 0, 408, 409, 0, 0, 0,
	410, 411, 412, 0, 413, 0, 0, 0, 414, 415,
	416, 417, 418, 419, 0, 420, 422, 421, 0, 423,
	0, 0, 424, 425, 0, 0, 426, 427, 428, 429,
	430, 431, 434, 0, 0, 432, 433, 435, 436, 0,
	437, 438, 440, 443, 439, 441, 442, 444, 457, 445,
	446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
	456, 459, 0, 458, 0, 460, 461, 462, 463, 470,
	472, 473, 468, 469, 471, 474, 475, 465, 466, 467,
	0, 476, 464, 0, 0, 0, 477, 478, 479, 0,
	0, 480, 0, 482, 483, 0, 0, 484, 0, 0,
	0, 486, 487, 488, 0, 0, 489, 490, 0, 0,
	491, 0, 0, 492, 493, 485, 494, 495, 496, 497,
	498, 499, 500, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 0, 508, 509, 510, 0, 511, 0, 512,
	513, 0, 514, 515, 0, 516, 517, 518, 519, 520,
	521, 522, 0, 523, 524, 526, 525, 527, 0, 528,
	0, 529, 530, 531, 0, 0, 0, 0, 0, 532,
	534, 0, 535, 536, 537, 538, 533, 539, 540, 541,
	542, 543, 0, 544, 545, 546, 0, 547, 548, 549,
	550, 551, 0, 552, 0, 553, 554, 560, 561, 562,
	555, 556, 563, 564, 565, 566, 567, 0, 569, 570,
	568, 571, 572, 573, 1354, 574, 575, 557, 558, 576,
	577, 0, 578, 579, 580, 581, 582, 583, 584, 0,
	0, 585, 0, 586, 587, 588, 590, 559, 591, 596,
	597, 0, 592, 593, 594, 595, 0, 599, 600, 0,
	601, 602, 0, 598, 589, 0, 603, 604, 605, 606,
	607, 608, 609, 610, 0, 611, 0, 0, 0, 0,
	0, 620, 0, 612, 613, 614, 0, 615, 0, 0,
	616, 617, 618, 619, 0, 621, 622, 0, 0, 623,
	624, 625, 627, 628, 626, 629, 0, 630, 0, 0,
	631, 632, 633, 0, 0, 0, 0, 635, 634, 636,
	637, 0, 638, 639, 2091, 0, 1351, 0, 640, 641,
	0, 642, 643, 644, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 279, 281, 280, 282, 283, 284, 285,
	0, 286, 287, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 288, 289, 0, 290, 291, 292, 293,
	294, 295, 0, 0, 0, 296, 0, 297, 0, 0,
	0, 298, 299, 300, 301, 302, 303, 0, 0, 0,
	304, 0, 0, 0, 0, 305, 306, 0, 0, 0,
	0, 307, 308, 309, 310, 311, 312, 313, 0, 0,
	315, 316, 317, 314, 318, 0, 319, 0, 320, 321,
	322, 323, 324, 325, 0, 326, 327, 328, 0, 329,
	330, 331, 0, 0, 0, 0, 0, 0, 1353, 332,
	333, 334, 335, 336, 0, 337, 339, 0, 0, 0,
	342, 338, 340, 0, 343, 341, 344, 0, 345, 346,
	347, 0, 0, 348, 349, 350, 0, 351, 352, 353,
	0, 354, 355, 356, 0, 357, 358, 0, 359, 360,
	361, 363, 365, 362, 364, 366, 367, 368, 369, 0,
	0, 370, 0, 0, 0, 0, 0, 0, 0, 371,
	372, 373, 0, 0, 0, 0, 374, 0, 375, 376,
	377, 0, 0, 0, 378, 379, 380, 0, 0, 381,
	382, 383, 384, 385, 386, 387, 388, 389, 0, 390,
	0, 0, 0, 391, 0, 392, 393, 394, 395, 396,
	0, 0, 0, 481, 0, 397, 398, 0, 399, 400,
	401, 402, 403, 0, 0, 0, 0, 404, 405, 406,
	0, 0, 407, 0, 0, 0, 0, 0, 408, 409,
	0, 0, 0, 410, 411, 412, 0, 413, 0, 0,
	0, 414, 415, 416, 417, 418, 419, 0, 420, 422,
	421, 0, 423, 0, 0, 424, 425, 0, 0, 426,
	427, 428, 429, 430, 431, 434, 0, 0, 432, 433,
	435, 436, 0, 437, 438, 440, 443, 439, 441, 442,
	444, 457, 445, 446, 447, 448, 449, 450, 451, 452,
	453, 454, 455, 456, 459, 0, 458, 0, 460, 461,
	462, 463, 470, 472, 473, 468, 469, 471, 474, 475,
	465, 466, 467, 0, 476, 464, 0, 0, 0, 477,
	478, 479, 0, 0, 480, 0, 482, 483, 0, 0,
	484, 0, 0, 0, 486, 487, 488, 0, 0, 489,
	490, 0, 0, 491, 0, 0, 492, 493, 485, 494,
	495, 496, 497, 498, 499, 500, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 0, 508, 509, 510, 0,
	511, 0, 512, 513, 0, 514, 515, 0, 516, 517,
	518, 519, 520, 521, 522, 0, 523, 524, 526, 525,
	527, 0, 528, 0, 529, 530, 531, 0, 0, 0,
	0, 0, 532, 534, 0, 535, 536, 537, 538, 533,
	539, 540, 541, 542, 543, 0, 544, 545, 546, 0,
	547, 548, 549, 550, 551, 0, 552, 0, 553, 554,
	560, 561, 562, 555, 556, 563, 564, 565, 566, 567,
	0, 569, 570, 568, 571, 572, 573, 1354, 574, 575,
	557, 558, 576, 577, 0, 578, 579, 580, 581, 582,
	583, 584, 0, 0, 585, 0, 586, 587, 588, 590,
	559, 591, 596, 597, 0, 592, 593, 594, 595, 0,
	599, 600, 0, 601, 602, 0, 598, 589, 0, 603,
	604, 605, 606, 607, 608, 609, 610, 0, 611, 0,
	0, 0, 0, 0, 620, 0, 612, 613, 614, 0,
	615, 0, 0, 616, 617, 618, 619, 0, 621, 622,
	0, 0, 623, 624, 625, 627, 628, 626, 629, 0,
	630, 0, 0, 631, 632, 633, 0, 0, 0, 0,
	635, 634, 636, 637, 1351, 638, 639, 0, 0, 0,
	0, 640, 641, 0, 642, 643, 644, 0, 0, 0,
	0, 279, 281, 280, 282, 283, 284, 285, 0, 286,
	287, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 288, 289, 0, 290, 291, 292, 293, 294, 295,
	0, 0, 0, 296, 0, 297, 0, 0, 0, 298,
	299, 300, 301, 302, 303, 0, 0, 0, 304, 0,
	0, 0, 0, 305, 306, 0, 0, 0, 0, 307,
	308, 309, 310, 311, 312, 313, 0, 0, 315, 316,
	317, 314, 318, 0, 319, 0, 320, 321, 322, 323,
	324, 325, 0, 326, 327, 328, 0, 329, 330, 331,
	0, 0, 0, 0, 0, 0, 1353, 332, 333, 334,
	335, 336, 0, 337, 339, 0, 0, 0, 342, 338,
	340, 0, 343, 341, 344, 0, 345, 346, 347, 0,
	0, 348, 349, 350, 0, 351, 352, 353, 0, 354,
	355, 356, 0, 357, 358, 0, 359, 360, 361, 363,
	365, 362, 364, 366, 367, 368, 369, 0, 0, 370,
	0, 0, 0, 0, 0, 0, 0, 371, 372, 373,
	0, 0, 0, 0, 374, 0, 375, 376, 377, 0,
	0, 0, 378, 379, 380, 0, 0, 381, 382, 383,
	384, 385, 386, 387, 388, 389, 0, 390, 0, 0,
	0, 391, 0, 392, 393, 394, 395, 396, 0, 0,
	0, 481, 0, 397, 398, 0, 399, 400, 401, 402,
	403, 0, 0, 0, 0, 404, 405, 406, 0, 0,
	407, 0, 0, 0, 0, 0, 408, 409, 0, 0,
	0, 410, 411, 412, 0, 413, 0, 0, 0, 414,
	415, 416, 417, 418, 419, 0, 420, 422, 421, 0,
	423, 0, 0, 424, 425, 0, 0, 426, 427, 428,
	429, 430, 431, 434, 0, 0, 432, 433, 435, 436,
	0, 437, 438, 440, 443, 439, 441, 442, 444, 457,
	445, 446, 447, 448, 449, 450, 451, 452, 453, 454,
	455, 456, 459, 0, 458, 0, 460, 461, 462, 463,
	470, 472, 473, 468, 469, 471, 474, 475, 465, 466,
	467, 0, 476, 464, 0, 0, 0, 477, 478, 479,
	0, 0, 480, 0, 482, 483, 0, 0, 484, 0,
	0, 0, 486, 487, 488, 0, 0, 489, 490, 0,
	0, 491, 0, 0, 492, 493, 485, 494, 495, 496,
	497, 498, 499, 500, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 0, 508, 509, 510, 0, 511, 0,
	512, 513, 0, 514, 515, 0, 516, 517, 518, 519,
	520, 521, 522, 0, 523, 524, 526, 525, 527, 0,
	528, 0, 529, 530, 531, 0, 0, 0, 0, 0,
	532, 534, 0, 535, 536, 537, 538, 533, 539, 540,
	541, 542, 543, 0, 544, 545, 546, 0, 547, 548,
	549, 550, 551, 0, 552, 0, 553, 554, 560, 561,
	562, 555, 556, 563, 564, 565, 566, 567, 0, 569,
	570, 568, 571, 572, 573, 1354, 574, 575, 557, 558,
	576, 577, 0, 578, 579, 580, 581, 582, 583, 584,
	0, 0, 585, 0, 586, 587, 588, 590, 559, 591,
	596, 597, 0, 592, 593, 594, 595, 0, 599, 600,
	0, 601, 602, 0, 598, 589, 0, 603, 604, 605,
	606, 607, 608, 609, 610, 0, 611, 0, 0, 0,
	0, 0, 620, 0, 612, 613, 614, 0, 615, 0,
	0, 616, 617, 618, 619, 0, 621, 622, 0, 0,
	623, 624, 625, 627, 628, 626, 629, 0, 630, 0,
	0, 631, 632, 633, 0, 0, 0, 0, 635, 634,
	636, 637, 0, 638, 639, 0, 0, 0, 0, 640,
	641, 0, 642, 643, 644, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 1857, 0,
	0, 0, 0, 0, 0, 1829, 0, 0, 0, 0,
	0, 0, 1826, 1827, 1876, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1882, 0, 0, 1863, 1857, 0, 0, 0, 0,
	1828, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	1848, 1876, 0, 0, 0, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 1867, 0, 0, 1877,
	0, 0, 0, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 1867, 0, 0, 1877, 0, 0, 0,
	0, 0, 0, 1856, 1858, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 0, 1849, 0, 0, 0, 1843, 1844,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1865, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1879, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1850,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1850, 0, 0, 0,
	0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 1868, 1863, 1857, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 1882, 0,
	0, 0, 0, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 0, 0, 0, 0, 0, 1845, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3309, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2634, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 0, 0, 0, 1834, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	1857, 0, 0, 1867, 0, 0, 1877, 1829, 0, 0,
	0, 0, 0, 1856, 1858, 0, 1876, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 1882, 0, 0, 0, 0, 1843, 1844,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 1865, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 1879, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 1877, 0, 1863, 1857, 0, 0, 0, 1856, 1858,
	0, 1829, 0, 1855, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 1873, 0, 1874, 0, 0, 0,
	0, 0, 0, 1843, 1844, 0, 1850, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 1868, 0, 1845, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 1867, 0, 0, 1877, 0, 4763, 1855, 0,
	0, 0, 1856, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	1874, 1850, 0, 0, 0, 0, 0, 1843, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1826, 1827, 1868, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 0, 0, 0, 0, 1829, 0, 0, 1881,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 1875, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 1864, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 4665, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 1850, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 1857, 0, 0, 1867, 0, 0,
	1877, 1829, 0, 0, 0, 0, 0, 1856, 1858, 0,
	1876, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 1874, 0, 1882, 0, 0,
	0, 0, 1843, 1844, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	1865, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 1875, 0, 0, 0, 0, 4619, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 1879, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 1877, 0, 1863, 1857, 0,
	0, 0, 1856, 1858, 0, 1829, 0, 1855, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 1873, 0,
	1874, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	1850, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 1868, 0, 1845,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 1867, 0, 0, 1877,
	0, 4618, 1855, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 1850, 0, 0, 0, 0,
	0, 1843, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	1826, 1827, 1868, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 1881, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	1875, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 1864,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 0, 4428, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 1850,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 1868, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1863, 1857, 0,
	0, 1867, 0, 0, 1877, 1829, 0, 0, 0, 0,
	0, 1856, 1858, 0, 1876, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1873, 0, 1874,
	0, 1882, 0, 0, 0, 0, 1843, 1844, 0, 0,
	1828, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1848, 0, 0, 0, 1865, 0, 0, 0, 0, 1845,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 1875, 0, 0, 0, 0,
	4255, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 1879, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 1867, 0, 0, 1877,
	0, 1863, 1857, 0, 0, 0, 1856, 1858, 0, 1829,
	0, 1855, 0, 0, 0, 0, 0, 0, 1876, 0,
	0, 0, 1873, 0, 1874, 0, 0, 0, 0, 0,
	0, 1843, 1844, 0, 1850, 1882, 0, 0, 0, 0,
	0, 0, 0, 0, 1828, 0, 0, 0, 0, 1865,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 1868, 0, 1845, 1849, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1875, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1864,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1879, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	1867, 0, 0, 1877, 0, 4174, 1855, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1873, 0, 1874, 1850,
	0, 0, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 1826, 1827, 1868, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 0, 0, 0, 0, 1849, 0,
	0, 0, 0, 0, 0, 0, 1863, 1857, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 1881, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 1875, 0, 0, 0, 0, 1828,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 0, 1864, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0, 0,
	4173, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 0, 1850, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 1857, 0, 0, 1867, 0, 0, 1877, 1829,
	0, 0, 0, 0, 0, 1856, 1858, 0, 1876, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 1874, 0, 1882, 0, 0, 0, 0,
	1843, 1844, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 1865, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 1875,
	0, 0, 0, 0, 4172, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 1879,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 1877, 0, 1863, 1857, 0, 0, 0,
	1856, 1858, 0, 1829, 0, 1855, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 1873, 0, 1874, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 1850, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 0, 1868, 0, 1845, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 1867, 0, 0, 1877, 0, 3814,
	1855, 0, 0, 0, 1856, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 1874, 1850, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 1826, 1827,
	1868, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	1863, 1857, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 1881, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 1875, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 1864, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 3307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 1850, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1857, 0, 0, 1867,
	0, 0, 1877, 1829, 0, 0, 0, 0, 0, 1856,
	1858, 0, 1876, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 1874, 0, 1882,
	0, 0, 0, 0, 1843, 1844, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 1865, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 1875, 0, 0, 0, 0, 3306, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 1879, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 1877, 0, 1863,
	1857, 0, 0, 0, 1856, 1858, 0, 1829, 0, 1855,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	1873, 0, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 1850, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 1868,
	0, 1845, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 1867, 0,
	0, 1877, 0, 3305, 1855, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 1850, 0, 0,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1826, 1827, 1849, 1859, 1860, 1861,
	1870, 1871, 1872, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 1863, 1857, 0, 0,
	0, 0, 0, 0, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 1876, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	1882, 0, 0, 0, 0, 0, 0, 0, 0, 1828,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 1848,
	0, 0, 1879, 2191, 0, 0, 0, 0, 1845, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 0, 3304, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2189, 0, 0, 0, 0,
	0, 1850, 0, 0, 0, 0, 1851, 1852, 1853, 1854,
	0, 0, 0, 0, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1868, 0,
	1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 1867, 0, 0, 1877, 1881,
	1829, 0, 0, 0, 0, 1856, 1858, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1873, 0, 1874, 0, 0, 1882, 0, 0, 0,
	1843, 1844, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 1865, 0,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	0, 0, 0, 1849, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	3269, 0, 0, 0, 0, 0, 0, 0, 0, 1875,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1864, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 1879,
	0, 0, 1834, 4911, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	0, 1867, 0, 0, 1877, 0, 0, 0, 1863, 1857,
	0, 1856, 1858, 0, 2190, 1855, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 1873, 0, 1874,
	0, 0, 0, 0, 0, 0, 1843, 1844, 1850, 0,
	0, 0, 1882, 0, 0, 0, 0, 0, 0, 0,
	0, 1828, 0, 0, 1865, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 1868, 0, 0, 0, 1849,
	1845, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1881, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2188, 0, 0, 0,
	0, 0, 0, 0, 0, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1864, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1879, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 0, 0, 0, 1834, 0,
	3369, 0, 0, 0, 0, 3368, 0, 4910, 1866, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1840, 1841,
	1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831,
	1832, 1833, 1835, 1836, 0, 0, 0, 1867, 0, 0,
	1877, 1855, 0, 0, 0, 0, 0, 1856, 1858, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 1850, 1874, 0, 0, 0, 0,
	0, 0, 1843, 1844, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1865, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 1849, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 1863, 1857, 0, 0, 0,
	0, 3240, 0, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 0, 0, 0, 0,
	0, 1875, 0, 0, 0, 0, 0, 0, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	1864, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 1879, 0, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	0, 0, 0, 0, 0, 0, 0, 3241, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1850, 0, 0, 0, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 2781, 0, 0, 0, 0, 1868, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1863, 1857, 0, 1867, 0, 2780, 1877, 1881, 1829,
	0, 0, 0, 0, 1856, 1858, 0, 0, 1876, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 1874, 0, 0, 1882, 0, 0, 0, 1843,
	1844, 0, 0, 0, 1828, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 1865, 0, 0,
	0, 0, 0, 1845, 0, 0, 0, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 1879, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 1877, 0, 1863, 1857, 0, 0, 0,
	1856, 1858, 0, 1829, 1855, 0, 0, 0, 0, 0,
	0, 0, 1876, 0, 0, 0, 1873, 0, 1874, 0,
	0, 0, 0, 0, 0, 1843, 1844, 1850, 0, 1882,
	0, 0, 0, 0, 0, 0, 0, 0, 1828, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 1848, 0,
	0, 0, 0, 0, 1868, 0, 0, 1845, 1849, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1864, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 0, 0, 1834, 0, 4522, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 1867, 0, 0, 1877, 0, 0,
	1855, 0, 0, 0, 1856, 1858, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1873, 0, 1874, 1850, 0, 0, 0, 0, 0, 1843,
	1844, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1865, 1826, 1827,
	1868, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0,
	0, 0, 1849, 0, 0, 0, 0, 0, 0, 0,
	1863, 1857, 0, 0, 0, 0, 0, 0, 1829, 0,
	0, 1881, 0, 0, 0, 0, 0, 1876, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1882, 0, 0, 0, 1875, 0,
	0, 0, 0, 1828, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1848, 0, 0, 0, 1864, 0, 0,
	0, 0, 1845, 0, 0, 0, 0, 0, 1879, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1855, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1851, 1852, 1853, 1854, 0, 0, 0, 1850, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1826, 1827, 0, 1859, 1860, 1861, 1870,
	1871, 1872, 0, 0, 1868, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1863, 1857, 0, 0, 1867,
	0, 0, 1877, 1829, 0, 0, 0, 0, 0, 1856,
	1858, 0, 1876, 0, 0, 1881, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1873, 0, 1874, 0, 1882,
	0, 0, 0, 0, 1843, 1844, 0, 0, 1828, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1848, 0,
	0, 0, 1865, 0, 0, 0, 0, 1845, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1849, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 1875, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1864, 1090, 0, 1851, 1852, 1853, 1854, 0,
	0, 0, 0, 1879, 0, 1834, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0,
	0, 0, 0, 0, 1867, 0, 0, 1877, 0, 1863,
	1857, 0, 0, 0, 1856, 1858, 0, 1829, 0, 1855,
	0, 0, 0, 0, 0, 0, 1876, 0, 0, 0,
	1873, 0, 1874, 0, 0, 0, 0, 0, 0, 1843,
	1844, 0, 1850, 1882, 0, 0, 0, 0, 0, 0,
	0, 0, 1828, 0, 0, 0, 0, 1865, 0, 0,
	0, 0, 1848, 0, 0, 0, 0, 0, 0, 1868,
	0, 1845, 1849, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1881, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1875, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1864, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1879, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1866, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839,
	1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836, 1867, 0,
	0, 1877, 0, 0, 1855, 0, 0, 0, 1856, 1858,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1873, 0, 1874, 1850, 0, 0,
	0, 0, 0, 1843, 1844, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1865, 1826, 1827, 1868, 1859, 1860, 1861, 1870, 1871,
	1872, 0, 0, 0, 0, 0, 1849, 0, 0, 0,
	0, 0, 0, 0, 1863, 1857, 0, 0, 0, 0,
	0, 0, 1829, 0, 0, 1881, 0, 0, 0, 0,
	0, 1876, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 4299, 0, 0, 0, 0, 1882, 0,
	0, 0, 1875, 0, 0, 0, 0, 1828, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1848, 0, 0,
	0, 1864, 0, 0, 0, 0, 1845, 0, 0, 0,
	0, 0, 1879, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1866, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1840, 1841, 1847,
	1869, 1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832,
	1833, 1835, 1836, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1855, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1851, 1852, 1853, 1854, 0, 0,
	0, 1850, 0, 0, 1834, 0, 3999, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1826, 1827, 0,
	1859, 1860, 1861, 1870, 1871, 1872, 0, 0, 1868, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1863,
	1857, 0, 0, 1867, 0, 0, 1877, 1829, 0, 0,
	0, 0, 0, 1856, 1858, 0, 1876, 0, 0, 1881,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1873,
	0, 1874, 0, 1882, 0, 0, 0, 4000, 1843, 1844,
	0, 0, 1828, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1848, 0, 0, 0, 1865, 0, 0, 0,
	0, 1845, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1849, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 1875, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1864, 0, 0, 1851,
	1852, 1853, 1854, 0, 0, 0, 0, 1879, 0, 1834,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 0, 0, 0, 0, 0, 0, 1867, 0,
	0, 1877, 0, 1863, 1857, 0, 0, 0, 1856, 1858,
	0, 1829, 0, 1855, 0, 0, 0, 0, 0, 0,
	1876, 0, 0, 0, 1873, 0, 1874, 0, 0, 0,
	0, 0, 0, 1843, 1844, 0, 1850, 1882, 0, 0,
	0, 0, 0, 0, 0, 0, 1828, 0, 0, 0,
	0, 1865, 0, 0, 0, 0, 1848, 0, 0, 0,
	0, 0, 0, 1868, 0, 1845, 1849, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1881, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1875, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1864, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1879, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 0, 0, 1834, 0, 0, 0, 0, 0, 0,
	3375, 0, 0, 0, 0, 0, 1866, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1840, 1841, 1847, 1869,
	1846, 1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833,
	1835, 1836, 1867, 0, 0, 1877, 0, 0, 1855, 0,
	0, 0, 1856, 1858, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	1874, 1850, 0, 0, 0, 0, 0, 1843, 1844, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1826, 1827, 1868, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 0, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 0, 3370, 0, 0, 1829, 0, 0, 1881,
	0, 0, 0, 0, 0, 1876, 0, 0, 0, 0,
	0, 3795, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 1875, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 1864, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1866, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837,
	1838, 1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 1850, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 1857, 0, 0, 1867, 0, 0,
	1877, 1829, 0, 0, 0, 0, 0, 1856, 1858, 0,
	1876, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 1874, 0, 1882, 0, 0,
	0, 0, 1843, 1844, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	1865, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 1879, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 1877, 0, 0, 0, 0,
	0, 0, 1856, 1858, 0, 0, 0, 1855, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1873, 0,
	1874, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	1850, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1865, 1826, 1827, 0, 1859,
	1860, 1861, 1870, 1871, 1872, 0, 0, 1868, 0, 0,
	1849, 0, 0, 0, 0, 0, 0, 0, 1863, 1857,
	0, 0, 0, 3308, 0, 0, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 1876, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1882, 0, 0, 0, 1875, 0, 0, 0,
	0, 1828, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1848, 0, 0, 0, 1864, 0, 0, 0, 0,
	1845, 0, 0, 0, 0, 0, 1879, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 0, 0, 0, 0,
	0, 0, 1855, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1851, 1852,
	1853, 1854, 0, 0, 0, 1850, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1827, 0, 1859, 1860, 1861, 1870, 1871, 1872,
	0, 0, 1868, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1863, 1857, 0, 0, 1867, 0, 0,
	1877, 1829, 0, 0, 0, 0, 0, 1856, 1858, 0,
	1876, 0, 0, 1881, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1873, 0, 1874, 0, 1882, 0, 0,
	0, 0, 1843, 1844, 0, 0, 1828, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1848, 0, 0, 0,
	1865, 0, 0, 0, 0, 1845, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1849, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 1875, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1864, 0, 0, 1851, 1852, 1853, 1854, 0, 0, 0,
	0, 1879, 0, 1834, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1826, 1827, 0, 1859, 1860,
	1861, 1870, 1871, 1872, 0, 0, 0, 0, 0, 0,
	0, 0, 1867, 0, 0, 1877, 0, 1863, 1857, 0,
	0, 0, 1856, 1858, 0, 1829, 0, 1855, 0, 0,
	0, 0, 0, 0, 1876, 0, 0, 0, 1873, 0,
	1874, 0, 0, 0, 0, 0, 0, 1843, 1844, 0,
	1850, 1882, 0, 0, 0, 0, 0, 0, 0, 0,
	1828, 0, 0, 0, 0, 1865, 0, 0, 0, 0,
	1848, 0, 0, 0, 0, 0, 0, 1868, 0, 1845,
	1849, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1881, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1875, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1864, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1879, 1851, 1852, 1853,
	1854, 0, 0, 0, 0, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1866, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1840, 1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838,
	1830, 1831, 1832, 1833, 1835, 1836, 1867, 0, 0, 1877,
	0, 0, 1855, 0, 0, 0, 1856, 1858, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1873, 0, 1874, 1850, 0, 0, 0, 0,
	0, 1843, 1844, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1865,
	1826, 1827, 1868, 1859, 1860, 1861, 1870, 1871, 1872, 0,
	0, 0, 0, 0, 1849, 0, 0, 0, 0, 0,
	0, 0, 1863, 1857, 0, 0, 0, 0, 0, 0,
	1829, 0, 0, 1881, 0, 0, 0, 0, 0, 1876,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1882, 0, 0, 0,
	1875, 0, 0, 0, 0, 1828, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1848, 0, 0, 0, 1864,
	0, 0, 0, 0, 1845, 0, 0, 0, 0, 0,
	1879, 0, 0, 0, 0, 0, 0, 0, 2353, 0,
	0, 0, 0, 0, 0, 1866, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846,
	1842, 0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1855, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1851, 1852, 1853, 1854, 0, 0, 0, 1850,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1826,
	1827, 0, 1859, 1860, 1861, 1870, 1871, 1872, 0, 0,
	0, 0, 0, 0, 0, 0, 1868, 0, 0, 0,
	0, 0, 1857, 0, 0, 0, 0, 0, 0, 1829,
	0, 1867, 0, 0, 1877, 0, 0, 0, 1876, 0,
	0, 1856, 1858, 0, 0, 0, 0, 1881, 0, 0,
	0, 0, 0, 0, 0, 1882, 0, 1873, 0, 1874,
	0, 0, 0, 0, 1828, 0, 1843, 1844, 0, 0,
	0, 0, 0, 0, 1848, 0, 0, 0, 0, 0,
	0, 0, 0, 1845, 1865, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1849,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1866,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1840,
	1841, 1847, 1869, 1846, 1842, 0, 1839, 1837, 1838, 1830,
	1831, 1832, 1833, 1835, 1836, 1875, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1851, 1852, 1853, 1854, 0, 0, 0, 0, 0,
	0, 1834, 0, 0, 0, 1879, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1867, 0, 0, 1877, 0, 0, 0, 0, 0, 0,
	1856, 1858, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1855, 0, 0, 0, 0, 1873, 0, 1874, 0,
	0, 0, 0, 0, 0, 1843, 1844, 0, 0, 0,
	0, 0, 0, 0, 1850, 0, 0, 0, 0, 0,
	0, 0, 0, 1865, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1849, 0,
	0, 1868, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1881, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1875, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1879, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1866, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842,
	0, 1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
	1855, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1850, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1868, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1881, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1866, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1840, 1841, 1847, 1869, 1846, 1842, 0,
	1839, 1837, 1838, 1830, 1831, 1832, 1833, 1835, 1836,
}

var sqlPact = [...]int{
	12529, -1000, -1000, -1000, -1000, 174, -1000, -1000, 171, 170,
	169, 168, 167, 165, 163, 162, 160, 159, 157, -1000,
	-1000, -1000, -1000, -1000, -1000, 156, -1000, -1000, 155, -1000,
	154, 150, 148, -1000, -1000, 147, -1000, 146, -1000, -1000,
	-1000, -1000, 145, 144, 143, 91842, 91279, 92403, 2397, 116011,
	99143, 2233, 81157, 115448, 80594, 114885, 2157, 11674, 114322, 2840,
	142, -1000, 113759, 141, 135, 133, -1000, 113196, -1000, 1693,
	-1000, 132, -1000, 7933, 70984, 129, 127, 126, 125, 2693,
	124, -1000, 123, 122, -1000, -1000, 121, -1000, 15615, 1507,
	-1000, 120, 119, -1000, 367, 96893, 118, 117, 116, 2856,
	115, 114, 68165, 112, 109, 107, 2829, 2989, -1000, -1000,
	2094, -1000, -1000, 106, 104, 103, 102, 100, 97, 96,
	94, 92, 91, 90, 89, 88, -1000, 87, 86, 85,
	84, 83, -1000, 82, 79, 78, -1000, 77, -1000, 76,
	75, 74, 73, 71, 69, 68, 66, 65, 64, 60,
	58, 52, 49, 14299, -1000, -1000, 47, 1997, 1688, 1677,
	1672, 1662, 1656, 989, 46, 45, 43, 42, 41, 40,
	38, 36, 35, 31, 29, 28, 27, 26, 24, 23,
	22, 21, 152, 20, 19, 14, 9, 8, 7, 5,
	3214, -1000, 1553, 803, 31350, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 124426, 116572, 4, -41, 3, -1000, 3468, 1038,
	56229, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 251,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 463,
	2356, 705, -1000, -1000, -1000, 112635, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2396, -28, -1000, 2072, -1000, -1000,
	-1000, -1000, -1000, 703, -1000, 2393, 2333, 331, 2325, -1000,
	-1000, -1000, 3546, 2542, 3946, 3945, 3944, 3942, 3939, 123865,
	1957, 3938, 2615, 3937, 3935, 3934, 3933, 3932, 3930, 3929,
	-1000, 90716, 1054, 90153, 89590, 3566, 112074, 89027, 111511, 126676,
	48141, 714, 3545, -1000, -1000, -1000, -1000, -1000, -1000, 116572,
	-1000, 1052, -1000, -1000, 3927, 2126, 701, 98580, -1000, -1000,
	110948, 1555, -1000, -1000, -1000, 936, 1188, 33081, 33081, 33081,
	247, -1000, -1000, -1000, -1000, -1000, -1000, 3926, 3925, 3924,
	3923, 3922, -1000, -1000, 80031, 24243, 79468, 78905, 110385, 47564,
	88464, 87901, 3921, 3920, 3919, 109822, 126113, 3692, 3691, 1051,
	2071, 1468, -1000, -1000, -1000, -1000, -1000, -1000, -17, 72670,
	3725, 116572, -1000, 223, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 46987, 623, 46410, 657, 45833, 485, 109259, -1000, -1000,
	-1000, -1000, 74964, -1000, 108696, 2539, 3918, 3916, 1128, 3915,
	3439, 1924, 3914, 1919, 1211, 3913, 3911, 3910, 3909, 3908,
	3907, 3906, 1513, 108133, 3132, 1550, 107570, 1739, 125550, 1048,
	87338, 92403, 2716, 107007, 1415, 1402, -1000, -1000, -1000, -1000,
	3221, 2959, 2953, 1091, -1000, -1000, -1000, -1000, 59658, 2214,
	616, -1000, -1000, 11904, 106444, 62513, 92403, 92403, -1000, -1000,
	-1000, -1000, -1000, -1000, 45256, 619, 44679, 711, 105881, -1000,
	-1000, 60229, 3070, -1000, -1000, -1000, -1000, -1000, 105318, 44102,
	356, 43525, 662, 116572, -1000, 3120, 1917, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2483, 1620, 3763, 2875, 74391,
	2150, 1424, 3507, 3220, 3215, 1526, 2045, 3205, 3903, 2699,
	3192, 3190, 3187, 3185, 3183, 1702, 2679, 495, 2674, 30773,
	3105, 1720, 42948, 1500, 1524, 3178, 3177, 3779, 2015, 2076,
	2039, 78342, 3902, 3900, 3472, 3176, 3145, 2922, 3141, -1000,
	3067, 1506, 220, -1000, -1000, -1000, -1000, -1000, -1000, 1503,
	-1000, -1000, -1000, -1000, -1000, 82840, -1000, -1000, 1857, -1000,
	-1000, 1857, -1000, -1000, -1000, -1000, -1000, 1287, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1553, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 2621, -1000, 2097, -1000, -1000, 2590, 3446, 3446, 3446,
	3543, 437, 432, -1000, 152, -1000, -1000, 136054, -1000, -1000,
	48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718, 2208, -1000,
	699, -1000, -1000, 748, -1000, 698, 635, 559, -1000, -1000,
	-1000, -1000, -1000, -1000, 697, -1000, -1000, -1000, -1000, -1000,
	-1000, 3725, -1000, 27179, -1000, -1000, -1000, 391, 694, 48718,
	-1000, -1000, 3792, 3790, 992, -1000, 214, 955, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	3119, 692, 687, -1000, 682, 680, 679, 678, 676, -1000,
	675, -1000, 673, 672, 671, 669, 665, 664, 661, 659,
	-1000, 2081, -1000, -1000, -1000, -1000, -1000, -1000, 614, 610,
	610, 610, -1000, 1042, -1000, -1000, -1000, 258, 598, 232,
	592, 590, 589, -1000, 652, 650, 649, 648, 647, 645,
	644, 639, 638, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1040, -1000, -1000, -1000, -1000, -18, 116572, -1000, 463, -18,
	-1000, -1000, 637, -1000, 35389, 35389, 35389, -1000, -1000, 2390,
	48718, -1000, 2609, -1000, -12, -12, 902, 57942, -1000, 55059,
	902, 360, 757, 63648, -1000, 3065, -1000, -1000, 636, 213,
	-1000, -1000, -1000, -1000, 24814, 3062, 116572, 116572, 116572, 92403,
	92403, 92403, 116572, 3899, 3350, 48718, -1000, -1000, 70421, 128360,
	92964, -1000, -1000, 3669, 68726, 69859, 3116, 128360, 3112, 127802,
	3898, -1000, -1000, -1000, -1000, -1000, 3291, 3897, 3896, 3895,
	-1000, 116572, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 237,
	3290, -1000, -1000, 96330, 237, 3289, -1000, 237, 3288, -1000,
	95769, -1000, -1000, 2245, 3287, -1000, -1000, 240, 3285, -1000,
	-1000, -1000, 239, 3282, -1000, -1000, 212, -174, 3281, -1000,
	-1000, -1000, -1000, -1000, -1000, 136054, -1000, -1000, -1000, 127239,
	-1000, 3476, -1000, 116572, -1000, 48718, -1000, -1000, 3666, 1552,
	3509, 3581, -1000, -1000, -30, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2596, 2608, 1149, 2430, -1000, 3380, 1395, 33081,
	3425, -1000, -1000, -1000, -1000, -1000, 209, 24814, -1000, -1000,
	-1000, -1000, -1000, -1000, 4917, 3280, 1625, -1000, 2428, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2301, 3278,
	-1000, 2287, 3275, 2283, -1000, -1000, 2230, -1000, 132633, 1341,
	-1000, -1000, -1000, -1000, 1933, 3274, -11, -1000, -1000, 2248,
	-1000, -1000, -1000, -1000, 2030, -1000, 1322, 3273, -1000, 2871,
	2871, 86775, 3272, 61942, 60229, 72670, -24, -1000, -1000, -1000,
	-1000, -207, -1000, 23666, 136054, -1000, -1000, -1000, -1000, 1801,
	136054, 901, -1000, -1000, 3268, -1000, 136054, 887, -1000, -1000,
	3263, -1000, 2677, -1000, 3111, -1000, -1000, 2500, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2498, -1000, -1000, 3892,
	-1000, -1000, 3891, -1000, 3890, 3882, 3881, -1000, 1729, 2001,
	3880, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 86214,
	2388, -1000, -1000, 85088, 3110, -1000, 2493, 3580, -1000, 85651,
	1047, -1000, 996, 2491, -1000, 95208, 1003, 2486, -1000, 3878,
	3554, 2790, 996, 2484, -1000, -1000, -1000, -1000, -1000, 985,
	-1000, 65905, -1000, 65905, -1000, 1653, -1000, 123304, -12, 92403,
	3725, -1000, -44, -1000, -1000, -1000, 1038, -1000, 59084, -1000,
	59084, 98017, 75535, 964, 3054, 67592, 135860, -1000, 1016, -1000,
	-1000, 136054, -1000, -1000, -1000, 2670, -1000, -183, 2870, -1000,
	75535, 61371, 2667, -1000, 136054, -1000, -1000, -1000, -1000, 136054,
	-1000, -1000, -1000, 75535, 85088, -1000, 104755, 84527, -1000, -1000,
	1505, 2656, -1000, -1000, -1000, 75535, 1324, 75535, 75535, 75535,
	-1000, 104192, -1000, -1000, 2100, 1637, 3473, 2086, 92403, -1000,
	2000, -1000, -1000, -1000, 3493, 3265, 116572, -1000, -1000, 3108,
	-1000, 72108, 94647, -1000, 94086, -1000, 93525, -1000, 92403, -1000,
	92403, -1000, 3877, 3876, 3875, -1000, -1000, 3872, -1000, 3870,
	3484, -1000, 654, 42371, 136054, 3482, -1000, 3868, 2034, 3105,
	136054, -1000, 3236, 1708, 1685, 116572, -1000, -1000, 116572, -1000,
	116572, -1000, -1000, -1000, 1577, -1000, -1000, 2594, -1000, -1000,
	-1000, -1000, 92403, 92403, 92403, 92403, 1216, -1000, 41794, -1000,
	-1000, 3140, 3867, 1763, -1000, 1987, -1000, 3053, 3490, -1000,
	1438, 1798, 206, 3798, -1000, -1000, 241, -1000, -1000, -30,
	-1000, 122743, -1000, 2590, -1000, 116572, -1000, 2614, 3093, 3102,
	1719, 2415, 2689, -1000, 41217, 2708, 52180, 2419, 152, -1000,
	-1000, 152, 152, 32504, -1000, -1000, 68726, 68726, 24814, 1308,
	48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718,
	48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718,
	48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718, 48718,
	48718, 48718, 48718, 48718, 48718, 48718, 2326, 48718, 1286, 48718,
	48718, 48718, 48718, 2031, -1000, -1000, 2020, 504, 2061, 635,
	-1000, -1000, -1000, 3715, 3715, 3715, 1518, 1518, 1518, 136498,
	136498, 594, 3865, 748, -1000, 48718, -1000, 70, 58504, 48718,
	25387, -1000, 432, 6828, 2505, -1000, 428, 25993, -1000, -1000,
	-1000, 27179, 559, 40611, 48718, 1012, 136054, -1000, -1000, 1460,
	3740, 23089, 2982, 2909, 632, 822, 810, 30167, 29561, 28955,
	28349, 809, 742, 48718, 48718, 48718, 48718, 48718, 48718, 48718,
	48718, -1000, -1000, 3754, -1000, 3740, -1000, -1000, -1000, -1000,
	3740, 1306, 1303, 3740, -1000, 3740, 3740, 9191, 9191, 40034,
	39457, 38880, 52757, 38303, 48718, 27772, 37726, 37149, -1000, 116572,
	-18, 3660, 48718, 302, -1000, 133478, -1000, 302, 302, 631,
	-45, 136054, 2843, 2843, 56800, 2130, 2216, 2216, 2216, -1000,
	902, 17858, 902, 102509, 2234, 902, 902, 200, 226, 426,
	54488, 2609, 102509, 726, 628, 1, 0, -5, -1000, -1000,
	-6, -8, -1000, -1000, 92403, 627, 25387, 24814, 191, 2029,
	-50, 2696, 2695, -1000, 2692, 2691, -1000, 2690, 2377, -1000,
	-1000, 1827, -57, 1278, 92403, 116572, 1425, 3863, -53, -1000,
	1049, -62, -1000, 1296, 190, 3740, -1000, -1000, -1000, -1000,
	-1000, 3862, 3861, -1000, 1039, 624, 618, 410, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 614, 610, 610, 610,
	-1000, 258, 598, 232, 592, 590, 589, -1000, -1000, -1000,
	-1000, -1000, 3051, 92403, 116572, 1418, 3860, 81718, -174, 92964,
	-127, -1000, -1000, 116572, -1000, -1000, -1000, 3859, -1000, 92403,
	-1000, -1000, 92403, 237, 3262, -1000, 92403, -1000, 92403, 235,
	3260, -1000, -1000, 116572, -1000, 92403, 92403, -1000, 116572, 116572,
	116572, 128360, 128360, 231, -1000, 92403, 840, -64, 1140, -30,
	-1000, -1000, -1000, -1000, 1857, -1000, 1818, -1000, -1000, -1000,
	-1000, -1000, -1000, 1519, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 992, -1000, -1000, -1000, -1000, -1000, -1000, 3742,
	3734, -20, -1000, -1000, 24814, -1000, -31, 1638, 1888, 1277,
	-1000, 77779, 2379, 3464, 3858, 2779, 3457, 1621, -1000, 1567,
	-1000, 3556, 82840, 3591, 3628, 1330, -1000, 3040, -1000, -1000,
	-1000, 935, 1759, 1793, 1274, 1273, 82840, 2287, -1000, 68726,
	-1000, 2778, 3540, 1381, 1431, 1381, 1381, 1379, -1000, 82840,
	1791, 1268, 1267, 1264, -1000, -1000, 1952, 1950, -1000, -1000,
	103631, -1000, 1263, 1261, 3688, 2621, 2190, 780, 1938, -1000,
	1334, 1260, 3039, -1000, -1000, -33, 3587, 3622, 1330, -1000,
	3037, 1252, -1000, -1000, -1000, 3539, 92403, 24814, 1588, 1579,
	1572, 1788, 1251, -21, -1000, 3589, 1250, 1248, -1000, 1009,
	7991, 3401, -1000, 128360, 1009, 1009, 2268, 3259, 2833, 1610,
	-1000, 2869, 831, 2868, -1000, -1000, -1000, 831, -24, 72670,
	116572, 187, -1000, 70, 48718, 48718, 70, 48718, 70, -1000,
	3569, 3258, 3257, -1000, -1000, -1000, -1000, -1000, 3855, 1920,
	2612, -1000, -1000, 585, 2482, 3036, 116572, 2713, -26, 92403,
	-1000, 71546, 3254, 128360, 2287, 2481, -1000, -1000, 83964, -1000,
	3253, 463, 2479, -1000, 666, 3854, 3251, -1000, 122182, -1000,
	3476, 1320, 3249, 1083, 621, 3658, -1000, 621, 66468, -1000,
	116572, -1000, -12, 394, 76657, -70, -71, 416, -1000, 103070,
	116572, 116572, 3414, 1985, 1978, -1000, 990, 60229, -1000, 60229,
	-72, -1000, -183, 2849, 1532, -1000, 964, 964, 831, -1000,
	831, -1000, 92403, 3100, -1000, -1000, 75535, 964, 964, 964,
	-1000, -1000, -1000, -1000, 3853, 3851, 3850, 3849, -1000, -1000,
	995, 92403, 116572, 92403, -1000, -1000, 1601, -1000, 186, -1000,
	128360, -1000, 128360, 116572, 92403, -1000, 995, 116572, 995, 116572,
	995, 116572, 995, 995, -1000, -1000, -1000, -1000, -1000, 70,
	-1000, -1000, 136054, -1000, 48718, -1000, -1000, 1565, 3847, 1690,
	-1000, 3099, -1000, 3098, -1000, 33, -1000, -1000, 1873, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 3845, 136054,
	-1000, 2353, -1000, -1000, -1000, -1000, 92403, 92403, 92403, 92403,
	116572, 3400, -1000, 116572, 3396, 92403, -1000, 3797, -1000, -1000,
	82840, -1000, 2614, 3093, -1000, -1000, -1000, -1000, -1000, -1000,
	1436, 2348, -1000, 2648, -1000, 1611, -1000, -1000, -1000, 136054,
	53334, -1000, -1000, 136054, 1814, -1000, 51603, 51026, -1000, -1000,
	1765, 92403, 2710, -1000, 2710, -166, -1000, 133292, 2644, 92403,
	-1000, -1000, -1000, -1000, -1000, 929, 1383, 1383, 1372, 1372,
	1372, 1372, 3578, 7701, 8471, 1142, 6096, 6096, 6745, 6745,
	6745, 6745, 6745, 6096, 7022, 1518, 1518, 7022, 7022, 7022,
	7022, 7022, 1518, 1518, 1518, 6096, 6096, 6096, 1518, 136498,
	136319, 8829, 48718, 48718, 1247, 1980, 504, 8763, 48718, 9919,
	9919, 9919, 9919, -1000, 2110, -1000, -1000, -1000, -1000, 3024,
	583, 52757, 52757, -1000, -1000, -1000, -1000, 26586, 48718, -1000,
	-1000, -1000, -1000, 36543, -1000, -1000, 132356, -322, 408, -1000,
	185, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 405, -158, 32, -1000, 48718, 48718,
	48718, 402, -1000, 184, 48718, 116572, -1000, 128961, 725, -143,
	-1000, -92, 1448, -1000, 48718, -1000, -1000, 1246, -1000, 1243,
	1242, 1237, -1000, 581, 398, -1000, 180, -1000, 2213, 580,
	577, 48718, -1000, -1000, -1000, -1000, -1000, 132162, -1000, -1000,
	131977, -1000, -1000, 131712, -1000, -1000, 131518, -1000, -1000, -1000,
	-1000, -1000, 135675, 128924, 17088, 15610, 6137, 14902, 13142, -98,
	392, -99, 389, 928, 927, 383, 376, 375, -101, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -104, 373, -1000, 3020, -158, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 372, -1000, 371, -1000, 135410, -158,
	370, 5751, -1000, 52757, 52757, 52757, 52757, -1000, 369, -1000,
	133015, -1000, 135225, 35966, 35966, 35966, 364, 134960, 48718, -158,
	-106, -1000, -107, -1000, -1000, 509, -115, 1019, 35389, 55644,
	24814, -1000, 1019, 1019, 48718, -1000, 48718, 2664, -1000, -1000,
	-1000, -1000, 2662, 2402, 2843, 56800, -1000, -1000, -1000, -1000,
	102509, -1000, 3725, 3357, -1000, 102509, -1000, -1000, 116572, 463,
	-1000, 102509, 102509, 24814, 902, -1000, 902, 102509, 728, -1000,
	-1000, -1000, -1000, -1000, 363, 64781, 32, 179, 24814, 996,
	-1000, -1000, 2771, 2771, 2771, 2771, 2771, 92403, -1000, -1000,
	128360, 1233, -27, -167, 2842, -1000, 3696, -1000, 2115, -1000,
	68726, -1000, 744, 958, 24814, -1000, -1000, -1000, 574, -1000,
	3740, 3740, -1000, 3740, 128360, 3010, 238, 2835, -1000, 2373,
	-25, 229, 128360, 3844, -1000, -1000, 237, -1000, 92403, 237,
	237, -1000, 92403, 92403, 2245, -1000, 240, -1000, 239, -1000,
	-1000, -174, -1000, 1014, 33081, -1000, 1857, -1000, -1000, 1561,
	-1000, 1992, -1000, 1301, -1000, -1000, -1000, -1000, 33081, -1000,
	2960, 116572, 116572, 92403, -1000, 116572, -1000, 2176, 128360, -1000,
	2478, 121621, 2450, 121060, 68726, -1000, -1000, 573, 943, 2642,
	2641, 1079, 116572, 116572, 2639, 120499, 119938, -1000, 3843, 116572,
	2107, 48718, 3536, 2129, 3522, 70, 70, -1000, 70, -1000,
	-1000, 569, 1227, 92403, 92403, 116572, 128360, 92403, 2244, -1000,
	-1000, -1000, -1000, -1000, 83401, -1000, -1000, 3753, 3749, -1000,
	1381, -1000, -1000, -1000, 1381, 2287, 2109, 116572, 128360, 92403,
	128360, 119377, 118816, -1000, -1000, 1777, 116572, -1000, -1000, -1000,
	-1000, 1473, -1000, 780, 1232, 3009, 48718, 48718, 2117, 70,
	70, -1000, 70, 566, 24814, 2024, -1000, 3048, 116572, 3789,
	118255, 3787, 116572, 116572, 116572, 128360, 3443, 116572, 116572, 128360,
	-1000, 117694, 7991, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2131, 73818, 1089, 116572,
	1322, -1000, -1000, 1774, 1225, 1212, 82840, 2090, 1761, 1855,
	128360, 60229, 988, 60229, 2799, -1000, -1000, 22512, -1000, 136054,
	136054, -1000, 136054, -1000, 71546, 75535, 116572, -1000, 1044, 116572,
	77218, 953, 3246, 65342, -207, 964, 75535, 92403, -26, 2713,
	116572, -1000, -1000, 2287, 3242, 463, 2476, -1000, 128360, 3656,
	3239, 562, 3842, 3840, -1000, 92403, 2368, 2474, -1000, -1000,
	117133, 3313, 780, 116572, 1019, 56800, 1948, -1000, 63086, 1061,
	116572, 1872, 219, -1000, -1000, -1000, 12, 116572, -1000, 755,
	-1000, -1000, 394, 394, 964, -231, 561, -1000, 873, 863,
	60800, -116, -1000, 178, 560, 862, 856, -1000, 4631, -1000,
	-183, -1000, 75535, 990, 60229, 2981, 2980, -1000, -1000, 1013,
	-1000, 1427, 964, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -13, 1852, 116572, -174, -174, -39,
	-27, -1000, 995, -1000, 995, -1000, 995, -1000, -1000, -1000,
	136054, -1000, -1000, -1000, 1687, 1681, 116572, -1000, -1000, 116572,
	-1000, 24814, 116572, 92403, 24814, 92403, 3092, 3090, -1000, -1000,
	-1000, 116572, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1103, -1000, 1814, 2347, -1000, 559, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2568, -1000, -29, 32504, 919,
	-1000, -1000, 92403, -14, 48718, 48718, 7450, 6765, 48718, 52757,
	52757, -1000, 48718, 6362, -1000, -1000, -1000, -1000, -1000, 2979,
	556, 48718, 68726, 7576, 6859, -1000, 361, 11361, 7022, -1000,
	48718, -1000, 431, -1000, 358, 34812, -1000, 133937, -22, -121,
	-1000, 18449, -158, -122, -1000, -1000, 741, -1000, 3279, -1000,
	48718, 134766, 2518, 2145, 1871, 1701, 3740, 3786, 21935, -1000,
	67030, 1020, 2251, 131333, -1000, -1000, -1000, -1000, 68726, 68726,
	48718, 48718, -1000, 48718, 48718, 48718, -1000, -1000, -1000, 3740,
	903, -1000, -1000, -1000, 903, -1000, -1000, 1381, -1000, 1381,
	-1000, 48718, -1000, -1000, 2978, 48718, -1000, 68726, 68726, 52757,
	52757, 52757, 52757, 52757, 52757, 52757, 52757, 52757, 52757, 52757,
	52757, 52757, 52757, 52757, 52757, 52757, 52757, 52757, 52757, 2660,
	52757, 3713, 3713, 3713, 1408, -1000, 3088, 2978, 48718, 48718,
	68726, 357, 353, 350, -1000, 48718, -158, -1000, -1000, 5019,
	553, -1000, 2552, -1000, 2908, -1000, 48718, -1000, -136, -1000,
	2609, -1000, -1000, 2908, 2908, -124, 136054, 56800, 56800, -1000,
	550, 48718, 2661, -1000, -1000, 720, -318, -1000, 853, -1000,
	-1000, -1000, -1000, -1000, -1000, 851, -1000, 463, -1000, -1000,
	-1000, 177, 102509, 102509, 719, -1000, -129, -1000, -1000, -131,
	-1000, 3654, 349, 24814, -1000, 1019, 2797, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2686, -268, 128360, 128360, 1743, 2311,
	3784, -1000, 3745, 738, 718, 138, 3740, 348, 345, 344,
	-174, 128360, 128360, 1733, 69297, 128360, -1000, -1000, -1000, 237,
	-1000, -1000, -1000, 235, -1000, -1000, -1000, -1000, 2733, -1000,
	-30, -1000, -1000, -1000, 48718, -1000, -1000, 3462, 1209, 1208,
	-1000, -1000, -1000, 2994, -1000, 3238, -1000, 2473, -1000, 1067,
	2469, 1608, -1000, 48718, 547, 2787, 545, 544, 3837, 2154,
	3835, 1082, 3237, 2245, 3235, 2245, -1000, -1000, -1000, 940,
	-1000, 136054, 2129, -1000, 543, 541, -1000, -31, 1589, 1877,
	1207, 1011, -1000, -1000, 48718, 48718, 101948, -1000, 488, 3469,
	-15, -1000, -1000, -1000, 1727, 1204, 1203, -1000, -1000, -1000,
	-1000, 2287, 1726, 1198, 1191, -1000, -1000, -1000, -1000, -1000,
	2461, -1000, -1000, 3229, 1010, -1000, 3153, 3152, 925, 116572,
	48718, 48718, 134581, 134316, -1000, 1008, -1000, -1000, 48718, -1000,
	-33, 1190, 3585, 2460, 92403, -1000, 2245, 3226, 1183, -1000,
	1182, -1000, -1000, -1000, 3584, 3583, 1184, -1000, -1000, -1000,
	75535, -1000, -1000, 73247, -1000, -1000, 1009, 116572, 128360, 92403,
	1901, -1000, -1000, 81718, 82279, 116572, 2833, -174, 831, -1000,
	2540, 831, 988, 2977, -1000, 2709, -1000, 1007, 92403, 3830,
	343, -142, -35, 68726, -1000, -1000, -1000, -1000, 2450, 92403,
	116572, 1318, 2785, 116572, 116572, 3651, -1000, 2355, 597, 92403,
	926, -1000, 3725, -1000, -1000, -1000, 1006, -1000, 3575, 92403,
	3646, 3224, 996, 70, 92403, 3764, -1000, -1000, 3643, 92403,
	3223, 2366, 2459, 2603, 780, 76096, 996, 2242, -47, -1000,
	1872, 34235, 3463, -144, -1000, -1000, -1000, 1019, 66468, 56800,
	48718, 3829, -147, -1000, -1000, -1000, -1000, -1000, 99704, 99704,
	75535, 75535, 75535, 964, 116572, 116572, 3827, 75535, 75535, 75535,
	-36, 539, -1000, 848, 846, 844, -1000, -1000, -1000, -1000,
	-1000, -1000, 843, 842, 835, 990, -1000, -1000, -183, 60229,
	70, -1000, 2274, 92403, -1000, 21358, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 995, -207, -1000, -1000, -1000, 2136, 2404,
	2136, 1846, 1841, -1000, -1000, 2285, -1000, -1000, -1000, -1000,
	2707, 3467, 24814, 3586, 9919, 48718, 48718, 5188, 6230, 5364,
	9919, 48718, 48718, 68726, 17128, -152, 48718, 48718, -1000, 48718,
	717, 136054, -1000, 3782, 48718, 336, 333, -1000, -1000, -1000,
	3738, -1000, -1000, -1000, 136054, 48718, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 332, -1000, 34, -1000, -1000, -1000, 124987,
	-1000, 48718, 330, 3533, -1000, 325, 323, 9031, 297, 131068,
	130874, 130689, 321, -1000, -1000, 320, 317, 136054, 3088, 136054,
	-1000, -1000, 1193, 1193, 1394, 1394, 1394, 1394, 3713, 869,
	973, 890, 1740, 1740, 1740, 1941, 1408, 1408, 1740, 1740,
	1740, 1408, 2976, 2665, 537, 5284, -1000, -1000, 136054, 136054,
	313, -1000, -1000, -1000, -158, 312, 5019, -1000, 2903, 3531,
	136054, -1000, 56800, 2903, 2903, -1000, -1000, 2402, 116572, 136054,
	56800, -1000, 3357, -1000, 19621, 19038, -1000, 24814, -1000, -1000,
	-1000, -1000, 3725, -1000, 64781, -1000, 536, -1000, 13, -1000,
	2797, -1000, 827, -1000, -1000, 75535, 75535, 2771, -1000, 2919,
	-268, -208, 116572, -1000, -1000, 716, 3825, 737, 24814, 310,
	-1000, -1000, -1000, -174, -174, 116572, 2975, 92403, 116572, 1413,
	-174, -1000, -1000, -1000, 3413, 136054, 116572, 116572, 1508, 101387,
	116572, 3219, -1000, 3217, -1000, 1079, 2490, 130424, 57371, -1000,
	57371, 116572, -1000, -1000, -1000, -1000, 2128, 1682, 3821, 1122,
	-1000, 3498, 116572, -1000, 116572, -1000, -1000, -1000, 116572, 116572,
	92403, 116572, -1000, 128360, 3161, -153, 136054, -37, -1000, 825,
	-1000, 1362, -1000, 20781, 116572, 128360, 92403, 116572, 128360, 92403,
	3210, 116572, 2179, -1000, -1000, 3151, -1000, 136054, 134122, 70,
	48718, 3160, -155, 24814, -1000, 3781, 3778, 3182, 3504, -1000,
	116572, 3777, 116572, 92403, 3412, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1722, 1176, 1170, 2362, 2361, 2302, -39, 2090,
	988, -40, 534, -1000, 824, -1000, -1000, 815, 804, 988,
	-1000, 75535, 60229, 3820, 463, -1000, 2777, -1000, 97454, 77218,
	2284, -1000, -1000, 533, 116572, 116572, 532, -1000, 70, -1000,
	3819, 100265, 531, -1000, 2273, -1000, 709, -1000, 2520, 128360,
	2287, 70, 92403, -1000, 982, 463, 303, -42, -1000, 3302,
	1071, 24814, 92403, 3172, 2605, 780, 76096, -1000, 1320, 2689,
	-1000, -46, -1000, 643, 70, 2242, -1000, -47, 136054, -1000,
	798, -1000, -169, -1000, -1000, 299, -1000, 3410, -1000, -1000,
	-171, -1000, -1000, 2560, 2560, 75535, 60229, 75535, 75535, 75535,
	60229, -1000, 990, 831, -1000, 2449, -1000, -1000, -1000, -1000,
	-1000, 24814, 1750, -1000, 530, 528, -1000, -1000, -1000, -1000,
	3467, 9919, 9919, 48718, 48718, 48718, 9919, 17128, -172, -1000,
	9919, 9919, -158, -1000, -1000, 133937, -1000, -1000, -1000, 136054,
	-1000, 20204, 2141, -1000, 130230, -1000, 32504, -1000, -1000, 48718,
	48718, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 52757,
	2974, 527, 68726, -1000, -1000, 298, 986, 48718, 50449, 2609,
	986, 986, -1000, -180, -1000, -1000, -1000, 3725, -1000, 3725,
	13, -1000, -1000, 3818, 24814, -1000, 75535, -1000, -1000, -1000,
	2294, -1000, -1000, 3122, -178, 734, -1000, 3817, -1000, -1000,
	137, 128360, 2962, 136, 2832, -1000, -1000, -1000, 2826, 3640,
	-1000, 1934, -1000, 116572, 116572, -1000, 116572, -1000, 24814, 116572,
	2894, 1253, -1000, 943, 2633, 526, 52757, 1099, 92403, 906,
	2889, 2888, -1000, 3684, 3528, 2828, -185, -1000, 116572, 48718,
	116572, -186, -188, 2438, -1000, -1000, 1098, 1249, 48718, 1094,
	-1000, -1000, -1000, 68726, 521, 2245, 2245, -195, -196, -1000,
	-1000, -1000, 48718, 1167, 116572, 33658, -1000, 3816, 3469, -1000,
	-1000, -1000, -1000, -1000, -1000, 116572, -1000, 116572, -1000, 48718,
	-1000, 133672, 48718, 1164, -1000, -1000, -1000, 3771, 2245, 24814,
	2245, -1000, 2245, 3504, 1119, 116572, 128360, 92403, 2070, 2070,
	2965, -1000, -1000, -1000, 2572, 2572, 75535, 60229, 60229, -1000,
	-59, 988, -1000, 3637, 2138, 3814, -1000, -1000, -1000, -1000,
	2632, -1000, -1000, -1000, 116572, 2620, 2896, 57371, 519, 518,
	116572, 968, -1000, -198, -1000, 792, 790, 77218, 953, 949,
	-1000, -67, 516, -1000, 783, -1000, -1000, -1000, -1000, 463,
	-1000, 2726, 3635, -1000, 3770, 513, 508, 116572, 2358, 505,
	24814, 3466, 780, 76096, -1000, 3313, 1872, -1000, 2448, 116572,
	3445, -1000, 2689, 504, -1000, 964, 494, 964, -1000, -205,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -83, -1000,
	892, 850, -1000, -1000, 92403, 92403, 48718, 48718, -1000, 9919,
	9919, 9919, -1000, 271, -1000, -1000, 2242, 3527, -1000, -90,
	130045, 129780, 7307, 52757, 68726, -206, -1000, -1000, 116572, 136054,
	-97, -1000, 136054, 493, 491, 407, -1000, -1000, -1000, 708,
	707, -1000, -1000, -1000, -1000, 128360, 3809, -1000, 128360, -174,
	128360, 128360, 1711, 100826, 116572, -1000, -1000, 1608, 1694, -1000,
	-1000, -1000, 116572, 2458, -1000, -1000, -1000, 1075, 48718, 5284,
	52757, 489, 48718, -1000, 487, 486, 3633, 3389, -1000, 2765,
	2997, 1928, 57371, -1000, 3467, -1000, 129586, -1000, 1070, 1965,
	-1000, -1000, -1000, -1000, 136054, 52757, 3504, 57371, -1000, -1000,
	484, 481, 136054, 480, 782, 2958, -1000, -1000, -1000, -1000,
	-1000, 136054, 70, 136054, 479, 3585, -1000, -1000, -1000, -1000,
	2245, 92403, -1000, -1000, -1000, 1160, -1000, -1000, -1000, -1000,
	3808, 3807, 2956, 81718, -1000, -213, -1000, -1000, -1000, 1959,
	70, 953, -1000, -1000, 2284, 478, -1000, -1000, 2611, 2611,
	-219, 57371, 57371, -220, 2350, 2724, -1000, 100265, 33081, 33081,
	265, 3630, 949, -1000, 3723, -1000, 3386, 3386, 48718, 3621,
	3408, -1000, 70, -1000, 3764, 57371, -1000, 92403, 57371, 2354,
	2041, 2584, 76096, -1000, 2603, -1000, -1000, -221, 116572, 1872,
	-1000, -1000, 75535, -1000, -1000, 2449, -1000, 116572, -1000, 116572,
	-1000, -1000, -226, -228, -1000, 2200, 48718, 32504, -1000, -1000,
	7307, -229, -1000, -134, -1000, 3611, 50449, 3806, 3805, 3804,
	-1000, -1000, -268, -1000, -174, -174, -174, 116572, -1000, 1930,
	-1000, 2450, -1000, -1000, 3171, 2901, 129401, 5284, 2556, 116572,
	16483, 2287, 2287, -1000, 3606, 2970, -1000, -1000, 2117, 475,
	-1000, -1000, -1000, -1000, 919, 116572, -1000, 2900, 92403, 5284,
	1074, -234, 2136, 2136, 48718, 31927, 2178, -1000, 48718, -1000,
	-1000, 3504, 128360, -1000, -1000, 128360, 2352, -1000, 2937, 3724,
	-1000, 2350, 116572, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 1070, -235, -236, -1000, -1000, 3488,
	-1000, 3407, -1000, -1000, -1000, 2777, 70, -1000, -1000, -1000,
	-244, 136054, 70, 3803, 982, 264, -245, 1071, -247, 92403,
	1939, -1000, 780, -1000, 2605, 1019, -1000, -1000, -253, -1000,
	-254, -255, -1000, -1000, 263, 49872, 49872, 49872, -158, -166,
	-1000, 116572, 466, -1000, -1000, -1000, -1000, -1000, 128, -1000,
	-1000, 3148, 980, -1000, 812, 1914, 262, 1101, 255, 230,
	-1000, -1000, -1000, 2828, -1000, 116572, -1000, -1000, 978, 463,
	-1000, 48718, 1070, -260, -1000, 1059, -261, -1000, 1053, -262,
	-1000, 2955, -1000, -270, 2245, -268, 231, 2070, 977, 3568,
	-1000, -1000, -1000, 2573, -271, -1000, -1000, 1928, 1070, 2117,
	2526, -1000, 2138, 968, -1000, -1000, -1000, -1000, -1000, 1070,
	462, 1928, 460, 1527, 780, -1000, -1000, 1381, 3466, 3319,
	964, -1000, -1000, -1000, 3267, -1000, 53911, 2300, 1838, 132819,
	3267, 3267, -1000, -1000, 128360, 116572, 3558, -1000, 888, 872,
	1502, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1019,
	-273, 3553, 2556, 136054, -1000, -1000, 2136, 2806, -1000, 2136,
	2950, -1000, 2164, -1000, -1000, -1000, -1000, 2940, -1000, 1767,
	3707, -1000, -1000, -1000, 116572, 2117, 1928, 963, 1826, 1823,
	3802, 953, 2350, 1928, 57371, 2117, 57371, 2102, -1000, 116572,
	-1000, 2041, 1367, -1000, -1000, 1973, 3678, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -174, -1000, 771, -1000, 3356, -1000,
	1093, 2204, 2204, -1000, -1000, 768, 812, -1000, 456, -1000,
	453, -1000, 128360, 2272, -1000, -1000, -1000, 963, 2117, 1019,
	442, -1000, 3801, -1000, 2350, -1000, 2117, -278, 963, -281,
	-1000, -1000, -1000, -207, 1939, -1000, 1619, 1832, -1000, -1000,
	2238, 49295, 48718, -1000, 3700, -1000, -1000, 2650, -1000, 48718,
	2828, 48718, 48718, 231, 64210, 1019, 963, -1000, -1000, 2573,
	963, 1070, 1019, 1928, 1527, 66468, -1000, -1000, -1000, 136054,
	-1000, -1000, -1000, 136054, -1000, -286, -287, -1000, -231, 99704,
	-1000, 1019, -1000, 1019, 1928, -1000, 2117, 2102, -269, 2117,
	1148, -289, -1000, -1000, 2117, 963, -1000, -1000, -1000, -1000,
	441, -1000, 963, 1019, 48718, 1019, -1000, -300, -1000, 2117,
	-1000,
}

var sqlPgo = [...]int{
	0, 4623, 4622, 4621, 4616, 4615, 4614, 4612, 4611, 4607,
	4602, 4601, 4600, 153, 4599, 4598, 4596, 4595, 4592, 4591,
	4588, 4584, 4581, 4580, 4577, 4568, 4567, 4566, 4564, 4561,
	4558, 4555, 4554, 4552, 4547, 4546, 4545, 4544, 4543, 4542,
	4541, 4540, 4539, 4538, 4535, 4534, 4533, 4531, 4529, 4527,
	4525, 4523, 4522, 4520, 4519, 4517, 4515, 4514, 4510, 4509,
	4507, 4503, 4501, 4498, 4495, 4494, 4492, 61, 4491, 4488,
	4485, 4478, 4477, 4471, 4470, 4468, 4467, 4465, 4464, 4463,
	4460, 4458, 4457, 4455, 4454, 4453, 4450, 4445, 74, 4438,
	281, 4432, 4431, 4429, 4428, 4427, 4426, 4420, 4415, 4413,
	4412, 4410, 4406, 280, 4398, 142, 169, 4395, 4394, 3957,
	4393, 4391, 279, 4388, 4387, 4386, 4382, 4380, 296, 4379,
	4378, 4376, 4372, 4369, 4367, 4365, 4364, 4363, 4358, 4357,
	4356, 113, 208, 4354, 4352, 212, 4340, 4339, 4335, 4330,
	4326, 4325, 4324, 4323, 4322, 4321, 4320, 255, 179, 4319,
	278, 4318, 4316, 4315, 4312, 4311, 4309, 4308, 4306, 4304,
	4299, 4297, 4295, 4291, 4290, 4289, 4288, 4287, 4285, 4282,
	4281, 4279, 4278, 4277, 4276, 4275, 4273, 4272, 4270, 4268,
	4265, 4264, 4263, 4262, 4259, 4258, 4257, 4256, 4255, 4254,
	265, 225, 133, 4253, 4252, 277, 276, 4251, 4249, 4248,
	4246, 4245, 137, 18, 48, 4244, 4242, 117, 91, 93,
	104, 106, 102, 4241, 131, 4238, 130, 71, 4237, 26,
	1, 307, 250, 7765, 248, 4236, 4235, 4233, 262, 207,
	4232, 264, 4231, 4229, 4228, 4226, 4225, 4224, 78, 55,
	190, 188, 185, 182, 25, 58, 112, 86, 65, 46,
	10, 96, 219, 19, 7, 273, 4223, 271, 9, 150,
	17, 37, 4221, 4218, 4216, 4215, 3592, 120, 4214, 274,
	251, 183, 4213, 4211, 4210, 623, 4209, 4204, 52, 4203,
	204, 105, 114, 16, 144, 4202, 163, 177, 32, 4200,
	173, 59, 4199, 4197, 108, 92, 9031, 10426, 4196, 4195,
	139, 76, 125, 194, 157, 156, 210, 107, 174, 181,
	54, 224, 220, 189, 57, 4194, 269, 4193, 3617, 100,
	196, 166, 5885, 4192, 4191, 4190, 90, 4186, 109, 4185,
	4182, 73, 13, 3, 2, 149, 41, 36, 4, 4181,
	29, 138, 50, 35, 4178, 23, 4177, 4175, 4174, 4168,
	51, 4165, 66, 170, 4164, 4163, 285, 4161, 110, 56,
	20, 4160, 24, 233, 4159, 238, 148, 4158, 4154, 266,
	215, 192, 4152, 95, 242, 4149, 4147, 4143, 4141, 4140,
	4139, 146, 6, 145, 4138, 4137, 158, 4136, 60, 245,
	209, 4135, 64, 4133, 4131, 187, 63, 154, 283, 322,
	235, 132, 239, 200, 243, 4130, 4128, 4126, 222, 4123,
	4115, 229, 184, 4114, 4113, 254, 290, 99, 47, 89,
	249, 87, 199, 168, 4110, 214, 4108, 4107, 289, 191,
	228, 8, 11, 111, 116, 4106, 5, 246, 167, 237,
	129, 4105, 6882, 2155, 2732, 4103, 4102, 175, 134, 81,
	141, 165, 272, 97, 4101, 4100, 2679, 4099, 4098, 4097,
	4096, 193, 4094, 4093, 4091, 160, 205, 197, 4089, 94,
	83, 53, 22, 126, 263, 275, 128, 236, 202, 257,
	4086, 4085, 4084, 206, 4083, 77, 119, 171, 211, 267,
	69, 4081, 115, 4080, 164, 256, 79, 162, 4078, 234,
	4077, 4076, 4075, 4073, 4072, 4069, 4068, 159, 244, 4067,
	4064, 4063, 34, 198, 4062, 270, 180, 201, 161, 67,
	4061, 98, 2992, 4060, 122, 218, 68, 1678, 28, 4059,
	1537, 62, 4058, 0, 13275, 9564, 12265, 13208, 4056, 8164,
	4053, 4051, 4050, 226, 80, 4048, 4047, 4046, 124, 4045,
	88, 4044, 4040, 84, 4039, 31, 15, 21, 33, 30,
	460, 176, 4038, 4037, 82, 147, 135, 4035, 282, 240,
	4034, 4028, 4026, 4025, 101, 4020, 42, 4019, 45, 4018,
	4017, 49, 14, 43, 4014, 4013, 155, 4011, 127, 261,
	4005, 172, 4003, 85, 152, 4000, 3998, 3997, 72, 70,
	268, 221, 217, 118, 3996, 293, 3995, 213, 3987, 3985,
	27, 3982, 3981, 252, 123, 121, 44, 253, 151, 40,
	186, 247, 3978, 3975, 178, 3973, 3972, 3970, 284, 3969,
	3968, 39, 3966, 3965, 3964, 12, 3962, 3961, 216, 3386,
	3960, 3959, 38, 3950, 203,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 11, 11, 7, 7, 7, 7, 8, 8,
	8, 8, 8, 51, 51, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 37, 39, 38, 32,
	32, 33, 33, 34, 35, 35, 10, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 19, 19, 40,
	40, 20, 20, 42, 42, 21, 21, 43, 43, 600,
	600, 600, 601, 601, 602, 602, 602, 24, 45, 17,
	18, 18, 18, 18, 603, 603, 603, 603, 36, 25,
	46, 29, 29, 29, 29, 29, 205, 205, 205, 205,
	23, 23, 41, 41, 241, 241, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 240, 240, 240, 240, 240, 240,
	240, 240, 240, 240, 596, 596, 243, 243, 242, 235,
	235, 236, 236, 237, 237, 604, 604, 244, 244, 244,
	245, 245, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 496, 496, 496, 527, 527, 527, 527, 528,
	528, 623, 623, 624, 624, 624, 624, 624, 134, 134,
	394, 394, 394, 55, 55, 55, 55, 55, 591, 591,
	207, 207, 207, 209, 209, 208, 208, 208, 208, 208,
	79, 79, 610, 610, 609, 608, 608, 608, 611, 611,
	611, 206, 206, 206, 130, 130, 130, 130, 130, 130,
	131, 131, 132, 132, 210, 210, 210, 212, 212, 211,
	211, 211, 211, 211, 211, 211, 211, 211, 211, 211,
	211, 216, 16, 16, 16, 113, 113, 113, 113, 113,
	113, 113, 108, 108, 530, 530, 531, 531, 201, 201,
	202, 202, 202, 202, 203, 203, 204, 204, 204, 70,
	70, 213, 213, 215, 215, 214, 214, 214, 214, 214,
	57, 57, 57, 57, 57, 57, 57, 57, 57, 58,
	58, 58, 58, 58, 59, 59, 59, 59, 59, 59,
	60, 60, 60, 60, 60, 60, 61, 61, 68, 68,
	68, 68, 68, 68, 68, 192, 192, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 71, 71,
	76, 76, 76, 76, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 626, 626, 627, 627, 628, 628, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 629, 629,
	629, 629, 629, 629, 629, 629, 629, 629, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 85, 85, 354, 354, 317,
	317, 86, 86, 86, 87, 87, 88, 88, 72, 72,
	589, 589, 370, 370, 487, 487, 73, 597, 597, 597,
	599, 599, 598, 598, 90, 90, 393, 393, 91, 91,
	91, 91, 91, 91, 92, 92, 92, 92, 92, 92,
	92, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 93, 93, 100, 100, 100, 100, 100,
	101, 101, 101, 98, 98, 98, 95, 95, 95, 94,
	94, 94, 99, 99, 99, 588, 306, 306, 97, 97,
	97, 96, 96, 96, 371, 371, 102, 102, 102, 102,
	318, 103, 103, 103, 103, 103, 103, 103, 103, 106,
	106, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 107, 107, 489, 489, 104, 104, 104, 454,
	454, 109, 109, 109, 409, 409, 110, 110, 110, 110,
	110, 111, 111, 111, 111, 111, 111, 111, 111, 111,
	133, 133, 133, 133, 133, 133, 133, 133, 133, 133,
	133, 133, 593, 593, 363, 363, 269, 269, 269, 269,
	122, 122, 122, 122, 123, 123, 123, 124, 124, 197,
	197, 140, 140, 140, 140, 139, 139, 139, 139, 139,
	139, 139, 139, 62, 62, 62, 63, 63, 64, 64,
	65, 65, 66, 66, 67, 67, 67, 67, 67, 143,
	143, 620, 620, 145, 142, 142, 142, 142, 142, 141,
	141, 144, 144, 144, 144, 146, 148, 148, 148, 148,
	148, 147, 147, 147, 147, 147, 149, 149, 521, 521,
	379, 379, 519, 519, 540, 540, 520, 520, 324, 324,
	324, 324, 324, 325, 325, 325, 529, 529, 529, 529,
	529, 529, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 150, 150, 150, 150, 150,
	150, 150, 150, 150, 150, 198, 198, 199, 200, 200,
	200, 200, 200, 175, 175, 175, 191, 191, 191, 191,
	191, 191, 191, 191, 191, 191, 191, 380, 380, 178,
	178, 178, 162, 162, 151, 151, 151, 151, 151, 151,
	151, 156, 156, 156, 156, 156, 156, 156, 156, 152,
	152, 164, 164, 164, 164, 164, 157, 157, 158, 158,
	158, 159, 159, 159, 159, 185, 185, 161, 161, 163,
	163, 163, 163, 163, 163, 163, 163, 163, 153, 153,
	153, 153, 166, 166, 166, 166, 416, 416, 416, 190,
	190, 165, 165, 165, 165, 165, 165, 165, 165, 165,
	165, 165, 165, 165, 165, 165, 165, 188, 188, 188,
	188, 188, 188, 612, 612, 613, 613, 613, 182, 182,
	182, 182, 182, 182, 468, 468, 176, 176, 176, 176,
	181, 181, 181, 181, 184, 184, 184, 184, 399, 399,
	173, 173, 173, 174, 174, 174, 179, 179, 180, 355,
	355, 177, 177, 183, 183, 183, 183, 154, 154, 154,
	154, 154, 154, 154, 154, 154, 155, 155, 155, 155,
	186, 186, 172, 172, 187, 187, 187, 187, 187, 187,
	187, 187, 187, 187, 187, 630, 630, 168, 168, 168,
	167, 167, 167, 167, 170, 170, 171, 171, 171, 171,
	171, 171, 169, 160, 189, 590, 590, 586, 586, 586,
	586, 586, 586, 586, 586, 587, 587, 587, 587, 592,
	592, 114, 114, 114, 114, 114, 114, 114, 125, 125,
	125, 125, 125, 125, 125, 128, 128, 115, 115, 115,
	115, 115, 115, 115, 118, 118, 116, 116, 116, 116,
	117, 117, 80, 80, 80, 80, 80, 15, 15, 15,
	81, 81, 260, 260, 219, 219, 219, 342, 342, 220,
	220, 332, 332, 332, 332, 217, 217, 218, 218, 82,
	82, 631, 631, 631, 605, 605, 605, 606, 606, 606,
	606, 606, 606, 326, 326, 327, 327, 434, 434, 434,
	434, 434, 330, 330, 330, 331, 331, 331, 331, 331,
	331, 331, 331, 331, 340, 341, 341, 333, 333, 339,
	338, 338, 337, 337, 336, 336, 334, 335, 335, 335,
	344, 344, 343, 346, 346, 345, 433, 549, 549, 551,
	551, 551, 551, 551, 551, 551, 553, 553, 553, 553,
	553, 553, 553, 553, 553, 553, 553, 553, 553, 553,
	553, 553, 553, 417, 417, 632, 632, 633, 634, 547,
	547, 547, 548, 543, 543, 544, 544, 544, 544, 544,
	328, 328, 329, 329, 329, 329, 545, 546, 361, 361,
	472, 550, 550, 552, 552, 554, 635, 635, 635, 635,
	635, 635, 636, 636, 636, 432, 432, 431, 431, 352,
	352, 555, 555, 555, 555, 556, 556, 556, 556, 556,
	559, 558, 557, 557, 557, 557, 557, 84, 84, 84,
	396, 396, 395, 395, 397, 397, 397, 397, 397, 397,
	397, 397, 397, 397, 397, 397, 397, 397, 397, 194,
	194, 272, 272, 272, 78, 78, 78, 12, 12, 12,
	12, 12, 12, 12, 287, 287, 13, 13, 13, 607,
	607, 607, 83, 83, 83, 83, 83, 83, 350, 350,
	350, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 271, 271, 271, 271, 271, 271, 271,
	271, 271, 271, 595, 595, 594, 594, 273, 273, 638,
	638, 89, 89, 89, 89, 89, 89, 89, 89, 490,
	490, 491, 491, 77, 77, 77, 77, 77, 418, 418,
	415, 415, 414, 414, 360, 360, 470, 470, 470, 471,
	277, 277, 278, 278, 238, 238, 238, 31, 30, 22,
	22, 26, 26, 27, 27, 259, 259, 259, 259, 259,
	259, 259, 259, 259, 28, 28, 48, 48, 48, 48,
	49, 49, 49, 49, 52, 52, 53, 53, 47, 47,
	47, 47, 50, 50, 44, 44, 54, 54, 54, 54,
	54, 614, 616, 616, 615, 615, 619, 619, 619, 619,
	619, 619, 617, 617, 618, 618, 621, 621, 622, 622,
	121, 121, 126, 126, 126, 126, 126, 127, 127, 127,
	127, 129, 129, 129, 129, 138, 138, 193, 193, 193,
	193, 193, 193, 193, 56, 56, 56, 56, 69, 69,
	69, 69, 136, 640, 640, 640, 137, 137, 137, 639,
	639, 270, 270, 428, 428, 429, 429, 641, 641, 430,
	430, 430, 430, 430, 263, 262, 264, 264, 265, 265,
	75, 75, 75, 253, 253, 252, 254, 254, 255, 255,
	250, 250, 532, 532, 257, 257, 257, 258, 258, 246,
	246, 247, 247, 248, 248, 249, 249, 261, 261, 642,
	642, 112, 112, 112, 196, 196, 316, 316, 316, 425,
	425, 425, 353, 353, 284, 284, 427, 427, 427, 427,
	392, 392, 392, 195, 195, 368, 368, 382, 382, 383,
	383, 484, 484, 384, 119, 119, 120, 120, 135, 135,
	223, 223, 221, 221, 221, 221, 221, 221, 221, 221,
	228, 228, 229, 229, 230, 230, 231, 232, 232, 232,
	232, 372, 372, 233, 233, 233, 222, 222, 222, 224,
	224, 224, 224, 224, 224, 224, 227, 227, 227, 227,
	234, 234, 234, 226, 226, 566, 566, 566, 568, 568,
	570, 570, 569, 569, 565, 565, 567, 567, 637, 637,
	398, 398, 398, 349, 351, 347, 347, 348, 348, 358,
	358, 356, 357, 357, 359, 359, 469, 469, 469, 239,
	239, 239, 389, 389, 389, 389, 390, 390, 421, 421,
	419, 419, 419, 419, 420, 420, 422, 422, 422, 423,
	423, 424, 424, 386, 386, 387, 387, 388, 388, 388,
	388, 450, 450, 225, 225, 225, 365, 365, 365, 366,
	366, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 441, 441, 439, 439, 439, 439, 473, 473,
	473, 473, 473, 473, 473, 473, 473, 474, 475, 475,
	367, 367, 476, 426, 426, 584, 584, 584, 585, 585,
	467, 467, 477, 477, 477, 477, 477, 477, 465, 465,
	466, 466, 485, 486, 486, 402, 402, 402, 402, 400,
	400, 403, 403, 403, 403, 403, 401, 401, 478, 478,
	478, 478, 391, 391, 479, 479, 479, 479, 480, 481,
	481, 482, 482, 435, 436, 436, 492, 492, 492, 492,
	494, 364, 364, 364, 364, 364, 542, 541, 541, 493,
	493, 493, 493, 493, 493, 493, 493, 493, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	508, 508, 508, 508, 508, 508, 508, 508, 508, 508,
	509, 509, 509, 509, 509, 509, 509, 495, 495, 495,
	495, 495, 499, 499, 499, 498, 498, 498, 498, 498,
	498, 498, 498, 498, 498, 498, 500, 500, 505, 505,
	506, 506, 506, 501, 502, 507, 507, 507, 507, 643,
	643, 511, 511, 503, 503, 503, 503, 503, 503, 503,
	503, 503, 497, 497, 497, 504, 504, 504, 411, 411,
	411, 411, 411, 411, 411, 411, 411, 411, 411, 411,
	411, 410, 410, 412, 412, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 443, 443, 443, 443,
	443, 443, 443, 443, 443, 443, 444, 444, 444, 444,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 445, 445, 445, 445, 445,
	445, 445, 445, 445, 445, 560, 560, 560, 560, 560,
	560, 560, 560, 446, 446, 563, 563, 564, 564, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 561, 561, 561, 561, 561, 561, 561, 561,
	561, 561, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	562, 562, 562, 562, 562, 562, 562, 562, 562, 562,
	571, 571, 572, 572, 574, 574, 575, 575, 576, 577,
	577, 577, 578, 579, 579, 573, 573, 580, 580, 580,
	580, 581, 581, 582, 582, 582, 582, 582, 583, 583,
	583, 583, 583, 456, 456, 457, 457, 463, 463, 463,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 323, 323, 322, 274, 274,
	274, 274, 274, 274, 377, 377, 375, 375, 375, 378,
	378, 376, 376, 374, 374, 373, 373, 453, 453, 451,
	451, 455, 455, 404, 404, 510, 510, 510, 510, 510,
	510, 510, 510, 405, 405, 405, 413, 406, 406, 407,
	407, 407, 407, 407, 447, 448, 408, 408, 408, 449,
	449, 458, 462, 462, 461, 460, 460, 459, 459, 437,
	437, 438, 438, 385, 385, 644, 644, 381, 381, 483,
	483, 483, 483, 320, 320, 369, 369, 319, 319, 311,
	311, 312, 312, 312, 312, 362, 362, 464, 464, 512,
	512, 513, 513, 514, 514, 515, 515, 516, 517, 518,
	452, 452, 295, 294, 281, 282, 293, 292, 291, 280,
	283, 288, 289, 290, 285, 286, 302, 301, 300, 251,
	256, 307, 308, 308, 310, 310, 309, 309, 297, 298,
	299, 488, 279, 313, 313, 314, 314, 314, 315, 315,
	315, 315, 275, 275, 276, 276, 303, 303, 304, 305,
	305, 296, 296, 296, 266, 266, 266, 267, 267, 268,
	268, 526, 526, 523, 523, 523, 524, 524, 524, 525,
	525, 525, 525, 522, 522, 522, 522, 522, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 533, 533, 533, 533, 533, 533,
	533, 533, 533, 533, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 537, 537, 537, 537,
	537, 537, 537, 537, 537, 537, 534, 534, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 536, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 538, 538, 538,
	538, 538, 538, 538, 538, 538, 538, 539, 539,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 3, 1, 3, 1, 1, 1, 3, 1, 1,
	1, 1, 3, 4, 6, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 6, 4, 4, 6,
	9, 6, 8, 4, 4, 5, 1, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 6, 4,
	6, 6, 9, 6, 9, 6, 5, 6, 5, 1,
	1, 1, 1, 1, 1, 0, 1, 6, 6, 4,
	8, 7, 10, 9, 4, 4, 4, 3, 4, 4,
	4, 7, 7, 9, 8, 9, 5, 3, 5, 7,
	4, 12, 4, 12, 1, 3, 5, 5, 2, 5,
	3, 6, 4, 4, 4, 6, 5, 6, 5, 6,
	4, 8, 3, 8, 4, 2, 3, 9, 3, 6,
	4, 3, 1, 3, 2, 1, 1, 3, 1, 3,
	2, 4, 3, 2, 3, 2, 0, 1, 1, 0,
	2, 0, 7, 10, 6, 8, 6, 6, 6, 9,
	4, 3, 2, 2, 0, 1, 1, 1, 1, 1,
	3, 1, 3, 6, 4, 6, 7, 9, 6, 2,
	2, 3, 0, 8, 6, 8, 7, 2, 0, 1,
	2, 5, 0, 1, 3, 3, 1, 1, 3, 3,
	12, 3, 1, 1, 2, 1, 4, 0, 3, 3,
	0, 4, 6, 0, 5, 7, 6, 8, 8, 2,
	1, 3, 1, 3, 2, 5, 0, 1, 3, 3,
	3, 3, 1, 1, 1, 1, 1, 1, 3, 3,
	3, 1, 3, 3, 3, 6, 4, 9, 7, 12,
	9, 2, 7, 2, 1, 1, 1, 3, 3, 0,
	3, 1, 3, 1, 1, 3, 2, 5, 0, 7,
	5, 2, 0, 1, 2, 3, 1, 1, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 2, 3,
	3, 3, 3, 3, 3, 5, 3, 3, 5, 3,
	3, 5, 3, 3, 5, 3, 4, 3, 6, 6,
	6, 6, 6, 8, 4, 1, 1, 1, 2, 1,
	1, 2, 1, 2, 1, 1, 1, 2, 1, 2,
	6, 3, 8, 3, 4, 3, 3, 4, 3, 4,
	4, 4, 3, 5, 7, 3, 3, 4, 3, 3,
	3, 3, 3, 2, 0, 1, 0, 1, 0, 4,
	3, 3, 3, 3, 3, 6, 4, 4, 4, 3,
	5, 3, 3, 3, 3, 3, 3, 3, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 4, 1,
	2, 1, 2, 1, 2, 7, 3, 2, 0, 1,
	3, 3, 1, 0, 1, 2, 2, 1, 6, 5,
	1, 2, 1, 3, 2, 0, 7, 2, 5, 0,
	1, 3, 3, 1, 9, 3, 2, 0, 2, 2,
	2, 2, 2, 2, 1, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 4, 6, 5, 7, 3,
	4, 6, 3, 4, 6, 3, 5, 7, 3, 4,
	6, 3, 4, 6, 3, 1, 1, 3, 4, 6,
	3, 3, 5, 3, 1, 3, 2, 2, 2, 2,
	1, 2, 2, 5, 3, 3, 6, 6, 3, 1,
	1, 1, 1, 2, 1, 1, 1, 2, 1, 1,
	2, 1, 2, 1, 2, 1, 1, 1, 2, 1,
	1, 2, 1, 1, 1, 1, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 1,
	1, 2, 1, 2, 1, 3, 5, 7, 2, 3,
	0, 3, 5, 2, 3, 0, 2, 3, 2, 3,
	2, 7, 4, 7, 8, 8, 9, 11, 5, 2,
	6, 9, 4, 7, 7, 10, 7, 10, 10, 13,
	5, 2, 2, 1, 1, 3, 1, 1, 1, 1,
	1, 2, 1, 2, 2, 3, 2, 4, 3, 2,
	2, 1, 2, 1, 3, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 1, 3, 5, 4, 6, 4,
	3, 0, 1, 3, 2, 4, 2, 4, 1, 6,
	3, 1, 1, 5, 3, 3, 2, 2, 6, 3,
	3, 3, 3, 4, 4, 3, 1, 3, 3, 2,
	2, 1, 3, 3, 3, 1, 2, 1, 1, 2,
	2, 3, 1, 1, 1, 1, 1, 3, 2, 2,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 1,
	2, 1, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	2, 1, 1, 1, 2, 2, 2, 1, 3, 3,
	3, 3, 3, 2, 3, 3, 1, 2, 1, 1,
	1, 1, 1, 1, 1, 2, 2, 2, 3, 5,
	7, 3, 3, 3, 4, 4, 6, 5, 5, 5,
	3, 4, 4, 3, 4, 4, 3, 4, 4, 5,
	3, 5, 5, 5, 7, 3, 3, 3, 4, 6,
	4, 2, 6, 4, 3, 2, 3, 4, 3, 5,
	3, 6, 5, 6, 3, 5, 6, 3, 5, 3,
	5, 3, 3, 4, 4, 5, 0, 1, 1, 1,
	1, 3, 2, 3, 4, 3, 4, 3, 5, 3,
	4, 4, 3, 4, 5, 3, 4, 3, 4, 4,
	5, 3, 3, 1, 1, 0, 2, 3, 5, 4,
	6, 4, 6, 4, 1, 0, 3, 4, 4, 5,
	7, 5, 3, 3, 3, 4, 4, 5, 2, 0,
	4, 2, 3, 4, 2, 3, 3, 3, 5, 2,
	0, 3, 3, 4, 3, 3, 3, 3, 4, 4,
	4, 4, 4, 4, 4, 3, 4, 5, 4, 4,
	2, 3, 2, 3, 6, 6, 7, 9, 7, 9,
	4, 3, 4, 4, 5, 1, 1, 10, 10, 3,
	5, 5, 5, 3, 5, 6, 4, 4, 5, 5,
	2, 3, 2, 5, 4, 2, 0, 1, 1, 1,
	1, 3, 2, 2, 2, 2, 2, 2, 1, 2,
	0, 1, 2, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 1, 2, 2, 4, 3, 3, 7, 3,
	3, 7, 3, 3, 3, 3, 3, 3, 3, 3,
	4, 3, 3, 6, 5, 8, 3, 6, 6, 3,
	12, 15, 1, 0, 1, 2, 3, 0, 2, 0,
	4, 0, 4, 5, 4, 3, 3, 1, 3, 10,
	13, 0, 2, 3, 1, 1, 0, 1, 2, 2,
	2, 2, 1, 1, 0, 1, 3, 1, 1, 1,
	2, 3, 3, 3, 0, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 0, 1, 0, 1,
	1, 0, 1, 4, 1, 0, 3, 7, 7, 1,
	1, 3, 7, 1, 3, 11, 3, 2, 0, 3,
	1, 2, 2, 3, 2, 6, 2, 1, 2, 2,
	2, 8, 4, 2, 3, 5, 5, 5, 2, 5,
	5, 2, 2, 2, 0, 1, 1, 3, 4, 10,
	11, 9, 5, 3, 1, 5, 9, 6, 11, 3,
	3, 0, 2, 4, 3, 3, 1, 5, 1, 3,
	1, 2, 0, 1, 2, 2, 0, 1, 3, 3,
	2, 2, 1, 1, 1, 4, 0, 6, 0, 3,
	0, 2, 2, 2, 0, 1, 1, 2, 2, 0,
	3, 3, 2, 1, 1, 2, 2, 5, 8, 4,
	1, 0, 1, 2, 2, 1, 2, 3, 3, 2,
	2, 3, 2, 2, 2, 2, 2, 3, 1, 4,
	2, 3, 2, 2, 4, 7, 3, 4, 6, 5,
	7, 5, 5, 3, 3, 0, 2, 2, 2, 1,
	1, 1, 8, 10, 11, 8, 11, 5, 4, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 2, 0, 3, 3, 0,
	1, 8, 11, 3, 6, 6, 5, 3, 4, 1,
	0, 1, 3, 16, 19, 15, 18, 4, 2, 0,
	1, 0, 1, 0, 1, 3, 2, 4, 2, 3,
	1, 0, 2, 0, 1, 1, 0, 9, 6, 6,
	8, 6, 8, 5, 7, 2, 6, 7, 4, 4,
	5, 2, 4, 6, 6, 8, 6, 7, 8, 9,
	6, 7, 8, 9, 6, 8, 6, 8, 6, 7,
	8, 9, 6, 8, 6, 8, 6, 6, 8, 8,
	4, 7, 3, 0, 7, 10, 1, 1, 1, 1,
	2, 2, 3, 0, 3, 0, 1, 0, 2, 0,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 1, 2, 1,
	2, 1, 2, 1, 3, 2, 3, 2, 2, 2,
	2, 2, 2, 1, 1, 0, 2, 4, 2, 1,
	0, 2, 1, 1, 0, 1, 3, 1, 0, 1,
	1, 1, 1, 1, 2, 3, 2, 2, 1, 2,
	13, 16, 3, 1, 0, 4, 1, 0, 2, 2,
	3, 0, 1, 1, 4, 4, 5, 1, 0, 3,
	0, 3, 0, 3, 0, 3, 0, 4, 0, 1,
	0, 6, 7, 3, 6, 3, 1, 3, 1, 1,
	4, 2, 1, 3, 1, 3, 4, 8, 11, 5,
	2, 2, 0, 10, 3, 2, 0, 1, 3, 1,
	1, 3, 3, 5, 6, 4, 5, 4, 1, 1,
	3, 3, 1, 2, 4, 4, 2, 3, 5, 5,
	1, 3, 1, 0, 1, 2, 3, 2, 4, 2,
	3, 0, 2, 0, 2, 1, 2, 1, 1, 1,
	2, 1, 2, 1, 2, 1, 8, 8, 8, 2,
	4, 4, 4, 2, 2, 2, 2, 3, 1, 3,
	1, 2, 6, 7, 1, 0, 1, 0, 1, 0,
	1, 1, 0, 1, 5, 1, 0, 1, 0, 1,
	0, 3, 3, 5, 1, 3, 3, 4, 5, 2,
	2, 0, 2, 2, 1, 1, 1, 0, 1, 0,
	2, 2, 5, 4, 2, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 0, 1, 3, 1, 3, 3,
	3, 2, 0, 4, 2, 5, 3, 2, 0, 1,
	3, 3, 5, 1, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 2, 4, 4, 0, 4, 4,
	3, 4, 1, 5, 3, 4, 5, 5, 1, 5,
	1, 3, 2, 0, 3, 0, 2, 3, 1, 3,
	2, 0, 3, 5, 6, 4, 6, 4, 3, 2,
	1, 0, 5, 1, 0, 2, 2, 2, 1, 1,
	0, 1, 1, 1, 1, 0, 4, 2, 1, 2,
	2, 4, 1, 3, 1, 2, 3, 2, 4, 1,
	0, 1, 0, 2, 1, 0, 2, 5, 7, 2,
	1, 2, 4, 3, 5, 0, 1, 3, 5, 1,
	2, 1, 1, 1, 1, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 4, 6, 6, 1, 1, 1,
	1, 1, 3, 5, 0, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 3, 0, 5, 4,
	1, 2, 1, 4, 1, 1, 2, 1, 1, 1,
	1, 1, 0, 1, 2, 5, 1, 4, 2, 5,
	1, 4, 3, 3, 0, 1, 2, 4, 1, 1,
	1, 1, 1, 1, 3, 3, 3, 3, 3, 3,
	3, 1, 0, 1, 4, 1, 3, 3, 3, 5,
	2, 2, 2, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 2, 3, 3,
	3, 2, 2, 3, 5, 4, 6, 3, 5, 4,
	6, 4, 6, 5, 7, 3, 3, 3, 3, 3,
	4, 3, 2, 4, 2, 3, 3, 4, 3, 4,
	3, 4, 5, 6, 6, 7, 6, 7, 6, 7,
	3, 4, 4, 1, 3, 1, 3, 3, 2, 2,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 3, 5, 6, 6, 7, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 2, 1, 5, 5, 6, 3, 1, 1,
	1, 2, 2, 2, 4, 3, 5, 6, 8, 6,
	5, 4, 3, 2, 2, 4, 1, 1, 1, 5,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 6, 6, 8, 8, 6, 4, 6, 6, 6,
	4, 1, 3, 3, 3, 3, 3, 4, 3, 3,
	4, 3, 3, 4, 3, 3, 4, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 4,
	3, 6, 5, 5, 5, 4, 4, 3, 4, 3,
	5, 0, 5, 0, 2, 0, 1, 3, 3, 2,
	2, 0, 6, 1, 0, 3, 0, 3, 3, 3,
	0, 1, 4, 2, 2, 2, 2, 2, 3, 2,
	2, 3, 0, 4, 1, 1, 5, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 1, 1,
	1, 2, 1, 2, 2, 3, 1, 2, 3, 2,
	3, 2, 3, 1, 0, 1, 3, 1, 3, 3,
	3, 1, 3, 3, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 4, 3, 1, 2, 3, 0, 3,
	3, 2, 2, 1, 2, 2, 3, 2, 1, 1,
	1, 5, 1, 2, 4, 2, 0, 1, 0, 3,
	5, 1, 0, 1, 2, 1, 0, 1, 3, 3,
	2, 1, 1, 1, 3, 1, 3, 3, 1, 1,
	1, 1, 5, 3, 1, 1, 3, 1, 1, 1,
	1, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	3, 5, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 1, 3, 1, 0, 1, 1,
	1, 1, 1, 1, 1, 3, 5, 7, 1, 7,
	5, 3, 1, 1, 1, 1, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 0, 3,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 608, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -133, -138, -119, -120, -121, -134, -140,
	-193, -198, -199, -200, -3, -55, -57, -71, -90, -92,
	-103, -113, -112, -114, -122, -130, -125, -108, -62, -135,
	-139, -150, -194, -195, -196, 32, 31, 100, 80, 156,
	129, 138, 206, 390, 436, 448, 405, 143, 427, 410,
	-144, -145, 466, -56, -69, -137, -136, 73, 130, 420,
	-4, -12, -16, 29, 46, -58, -59, -60, -61, 62,
	-78, -74, -85, -79, -72, -73, -76, -625, 102, -567,
	-93, -96, -129, -629, 164, 224, -115, -116, -117, 372,
	-123, -124, 429, -126, -127, -128, 432, 165, -64, -63,
	158, -221, -223, -142, -141, -143, -197, -151, -152, -153,
	-154, -155, -156, -157, -159, -185, -160, -161, -162, -163,
	-164, -165, -169, -188, -166, -167, -168, -171, -170, -172,
	-177, -173, -174, -175, -176, -178, -179, -181, -182, -183,
	-184, -186, -187, 471, -180, -189, -158, 531, 49, 486,
	82, 148, 440, 21, -5, -6, -7, -8, -9, -10,
	-11, -15, -14, -54, -75, -77, -80, -81, -82, -89,
	-83, -84, -566, -94, -95, -98, -100, -101, -97, -99,
	428, -224, -222, 605, 546, -19, -24, -20, -21, -23,
	-25, -22, -26, -27, -28, -40, -45, -42, -43, -41,
	-44, -46, -47, -48, -49, -50, -51, -52, -53, -30,
	-36, -37, -31, -32, -33, -34, -35, -38, -39, -17,
	-18, -29, 568, 577, -227, -225, -226, -234, 458, 554,
	506, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, -318, 2, -297, -303, -304, -305, -296,
	-266, -536, -539, 4, -533, -537, 171, 234, 335, 21,
	23, 22, 24, 25, 26, 27, 29, 30, 41, 42,
	44, 45, 46, 47, 48, 49, 53, 55, 59, 60,
	61, 62, 63, 64, 68, 73, 74, 79, 80, 81,
	82, 83, 84, 85, 91, 88, 89, 90, 92, 94,
	96, 97, 98, 99, 100, 101, 103, 104, 105, 107,
	108, 109, 117, 118, 119, 120, 121, 123, 129, 124,
	130, 133, 128, 132, 134, 136, 137, 138, 141, 142,
	143, 145, 146, 147, 149, 150, 151, 153, 154, 156,
	157, 158, 161, 159, 162, 160, 163, 164, 165, 166,
	169, 177, 178, 179, 184, 186, 187, 188, 192, 193,
	194, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	207, 211, 213, 214, 215, 216, 217, 223, 224, 226,
	227, 228, 229, 230, 235, 236, 237, 240, 246, 247,
	251, 252, 253, 255, 259, 260, 261, 262, 263, 264,
	266, 268, 267, 270, 273, 274, 277, 278, 279, 280,
	281, 282, 286, 287, 283, 288, 289, 291, 292, 295,
	293, 296, 297, 294, 298, 300, 301, 302, 303, 304,
	305, 306, 307, 308, 309, 310, 311, 299, 314, 312,
	316, 317, 318, 319, 333, 328, 329, 330, 323, 324,
	320, 325, 321, 322, 326, 327, 332, 337, 338, 339,
	342, 221, 344, 345, 348, 366, 352, 353, 354, 357,
	358, 361, 364, 365, 367, 368, 369, 370, 371, 372,
	373, 374, 375, 377, 378, 380, 381, 382, 384, 385,
	386, 388, 390, 391, 393, 394, 396, 397, 398, 399,
	400, 401, 402, 404, 405, 407, 406, 408, 410, 412,
	413, 414, 420, 427, 421, 423, 424, 425, 426, 428,
	429, 430, 431, 432, 434, 435, 436, 438, 439, 440,
	441, 442, 444, 446, 447, 451, 452, 468, 469, 488,
	448, 449, 450, 453, 454, 455, 456, 457, 461, 459,
	460, 462, 463, 464, 466, 467, 470, 471, 473, 474,
	475, 476, 477, 478, 479, 482, 484, 485, 486, 505,
	487, 489, 493, 494, 495, 496, 490, 491, 504, 498,
	499, 501, 502, 507, 508, 509, 510, 511, 512, 513,
	514, 516, 524, 525, 526, 528, 531, 532, 533, 534,
	522, 536, 537, 540, 541, 542, 545, 543, 544, 546,
	548, 551, 552, 553, 559, 558, 560, 561, 563, 564,
	569, 570, 572, 573, 574, 36, 50, 51, 54, 56,
	58, 69, 70, 71, 75, 125, 126, 155, 167, 168,
	180, 195, 196, 208, 210, 218, 219, 220, 241, 242,
	244, 249, 271, 341, 343, 359, 363, 379, 383, 387,
	389, 403, 443, 480, 492, 497, 517, 518, 519, 520,
	527, 529, 554, 555, 556, 562, 571, -318, 2, -297,
	350, -290, 2, -266, -266, 390, 28, 2, 28, 378,
	460, 509, 511, 2, -593, -363, 2, 28, -269, -266,
	102, 206, 458, -290, 2, -593, 206, -363, 25, 2,
	-266, 2, 364, 22, 27, 66, 77, 98, 141, 166,
	189, 192, -628, 366, 397, 446, 462, 504, 514, 528,
	2, 558, 292, 459, 506, 234, 120, 533, 453, -607,
	451, 452, 364, 395, 438, 209, 547, -270, 2, 448,
	-266, 292, 2, 608, 94, 74, 443, 463, -147, 2,
	282, 525, -148, -149, -146, 517, -521, 453, 438, 314,
	-266, 608, 608, 608, 28, -279, -266, 506, 234, 453,
	120, 502, 608, 2, 506, 369, 558, 459, 120, 400,
	234, 533, 192, 141, 27, 453, -607, 582, 583, 292,
	127, -591, 2, -586, 4, -537, -533, -312, -311, 506,
	512, 120, -305, -296, 597, -304, 608, 608, 608, 608,
	2, 252, 253, 399, 398, 463, 464, 28, 608, 608,
	608, 608, 451, 2, 166, 22, 27, 66, 93, 98,
	127, 189, 192, 355, -626, 366, 397, 462, 504, 508,
	514, 528, -606, 487, 68, 426, 453, -605, -607, 292,
	533, 141, -414, 120, 282, 204, 541, 511, 509, 539,
	133, 240, 544, 543, 608, 608, -106, 2, 605, 32,
	31, -105, -109, 143, 466, -216, 506, 245, 2, -266,
	608, 608, 608, 2, 252, 253, 451, 452, 28, 608,
	608, 190, -586, 2, 608, 608, 608, 2, 28, 252,
	253, 451, 452, 245, 2, 68, 455, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 2, -191, 463, 487, 215, 47, 46,
	74, 28, 396, 79, 370, 121, 127, 150, 534, 207,
	234, 235, 260, 93, 94, -416, 44, 253, 68, 252,
	452, -612, 451, -468, 507, 454, 460, 501, 264, 448,
	525, 102, 548, 439, 574, 400, 401, 499, 414, 283,
	159, 191, 4, 120, 314, 438, 465, 268, 267, 517,
	282, 447, 373, 84, 608, -637, 2, 506, -639, 2,
	525, 525, 2, -639, 2, -639, 2, -639, 2, -640,
	525, 571, 608, 608, 608, 608, 608, 608, 608, 608,
	608, 608, 608, 608, 608, 608, 608, 608, 608, 608,
	-222, -224, -223, 608, 608, 608, 608, 608, 608, 608,
	-191, 463, 2, 74, 28, -356, -358, 538, 243, 152,
	356, -221, -223, 2, -566, -519, 2, -442, -540, -444,
	595, 596, 588, 503, 67, -322, 334, 575, -456, 127,
	539, 350, -539, -445, -458, 155, 366, 443, -378, 8,
	9, 5, 6, 7, -275, -446, -452, 530, 170, 340,
	-315, 609, 10, 605, -563, -223, -457, 37, 210, 65,
	-523, -314, -276, -495, 244, -313, -296, -560, -561, 4,
	-533, -534, -524, -498, -506, -502, -503, -509, -266, -536,
	77, 111, 112, 110, 115, 114, 285, 284, 116, 113,
	465, 547, 66, 36, 218, 219, 249, 341, 220, 75,
	-562, 142, -535, 241, 242, 480, 51, 403, 180, 126,
	125, 343, 56, 54, 555, -507, 122, 517, 518, 519,
	520, 195, 196, 58, 167, 168, 363, 387, 497, 527,
	529, 208, 271, 43, 106, 191, 239, 222, 248, 250,
	254, 272, 275, 315, 331, 336, 360, 362, 437, 472,
	-643, 556, 492, 69, 70, -568, 406, -569, -290, -568,
	608, 608, 610, 608, -347, -349, -351, 2, 28, 139,
	605, 2, -473, 2, -474, -478, -223, 265, -477, 605,
	-475, 603, -297, 351, -564, 444, -560, -561, -275, -296,
	-314, 4, -533, -535, 607, -352, 605, 120, 453, 506,
	78, 234, 93, 166, -409, 605, -266, 28, 350, 521,
	610, -348, 394, -454, 605, 350, 353, 190, 353, 60,
	296, 2, 2, 2, 2, 2, 218, -266, 506, 119,
	2, 263, 2, 2, 2, 2, 2, 2, 2, -371,
	218, 2, -297, 558, -371, 218, 2, -371, 218, 2,
	-415, 2, 87, -280, 218, 2, -266, -306, 218, 2,
	-301, -303, -310, 218, 2, -308, -266, -528, 218, 2,
	-527, 4, -533, 116, 465, -442, 2, -135, 2, 60,
	-266, 558, 2, 468, 2, 605, -147, 2, 71, 525,
	43, 463, -148, 2, -429, 2, -430, -262, -263, -264,
	-485, -265, 251, 393, 402, 578, 131, 334, 574, -620,
	190, 587, 521, -519, -519, -519, -379, 607, 2, 2,
	2, 2, 2, 2, -478, 218, -297, 2, -294, -522,
	4, -533, -537, -534, -538, -536, 28, 31, 32, 33,
	35, 37, 38, 39, 40, 57, 65, 66, 72, 76,
	78, 87, 93, 102, 110, 111, 113, 112, 114, 115,
	116, 127, 131, 135, 139, 140, 144, 148, 152, 170,
	172, 185, 189, 190, 206, 209, 212, 225, 238, 243,
	245, 265, 269, 276, 284, 285, 334, 340, 346, 350,
	351, 355, 356, 376, 392, 409, 433, 458, 465, 483,
	500, 506, 515, 521, 523, 530, 538, 539, 547, 549,
	557, 565, 566, 567, 568, -539, 77, 2, -478, 218,
	2, -300, 218, -478, -303, 2, -280, 2, -442, -600,
	513, 162, 421, 2, -319, 218, -297, -299, -303, -301,
	2, 2, 2, 2, -308, 2, -527, 218, 2, 28,
	28, 558, 394, 245, 521, 610, -369, -311, -312, -518,
	8, -362, -266, 607, -442, 2, -135, -118, 2, 185,
	-442, 218, 2, -135, 218, 2, -442, 218, 2, -135,
	218, 2, -266, 2, -608, 2, -530, 218, -526, 10,
	-525, 5, 4, -533, -537, -534, 218, -266, 2, 296,
	2, 2, 528, 2, 98, 506, 119, 2, 425, -627,
	446, 532, 2, 2, 2, 2, 2, 2, 2, 506,
	-285, 2, -266, 185, 490, -308, 218, -309, 2, 459,
	-638, 406, -527, 218, 2, 558, -301, 218, 2, -301,
	234, 247, -280, 218, 2, 511, 509, 511, 509, 190,
	2, 245, 2, 245, 2, -479, 2, -480, -474, -481,
	603, 351, -489, 2, -488, -525, 554, -106, 605, -106,
	605, 463, 605, -530, -297, -297, -442, 2, -135, -118,
	2, -442, 2, -135, 2, -266, 2, -132, -530, -131,
	605, 190, -266, 2, -442, 2, -135, -118, 2, -442,
	2, -135, 2, -216, 185, 2, 120, 506, -191, 2,
	185, 549, 2, 8, 2, 225, -530, 454, 401, 177,
	2, 468, 2, 469, 74, -416, 574, 74, 190, 2,
	190, 2, -399, 2, 568, 394, 190, 2, 2, -590,
	2, 350, 190, 2, 190, 2, 190, 2, 190, 2,
	190, 2, -190, 464, 526, 505, 398, 253, 2, -135,
	565, -118, 253, 252, -442, 565, 2, -613, 185, 452,
	-442, 2, 524, 262, 160, 190, -399, 2, 190, 2,
	190, 2, 5, 2, 399, 488, 2, 251, 393, 488,
	2, -297, 506, 558, 459, 120, 28, 2, 451, 2,
	2, 88, 89, 190, 2, 190, 2, 205, 190, 2,
	190, 506, -380, 607, 574, 2, -391, -478, -428, -429,
	-428, 521, -356, -358, -191, 468, 2, -228, -389, -230,
	185, -419, -420, -231, 276, 172, 346, -232, -398, 28,
	139, -398, -398, 60, 606, 606, 11, 12, 76, 41,
	595, 596, 597, 598, 183, 599, 600, 593, 594, 592,
	585, 586, 590, 257, 258, 95, 589, 587, 86, 290,
	445, 173, 174, 175, 176, 422, 232, 34, 233, 14,
	15, 16, -322, 33, 355, 275, 575, 222, 472, 588,
	17, 18, 19, 248, 250, 336, 50, 225, -274, 366,
	-321, 503, 67, -442, -442, -442, -442, -442, -442, -442,
	-442, 362, 605, -385, -437, 603, -223, 605, 605, 605,
	605, -518, -223, -442, -456, 606, -376, 605, -223, -456,
	-451, 605, 443, 603, 605, -459, -442, 5, 5, 5,
	605, 607, -571, 569, 185, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 605, 605,
	605, 389, -500, 605, -499, 605, -499, -499, 559, -497,
	605, 577, 570, 605, -497, 605, 605, 605, 605, 605,
	605, 605, 605, 605, 605, 605, 605, 605, 559, 610,
	-568, -352, 605, -381, -483, -442, 597, -381, -381, 350,
	-373, -442, 106, -402, 254, 315, 191, 272, 437, 239,
	-439, 609, -439, -467, 577, -223, -475, -296, -223, -477,
	605, -473, -467, -107, -518, -90, -103, -112, -135, -150,
	-195, -196, 597, -297, 605, 190, 605, 607, -522, 190,
	-362, -280, -307, -266, -297, -313, -314, -319, -291, -266,
	2, 138, -373, -586, 533, 453, 28, 459, -528, -269,
	38, -453, -492, -493, -542, 609, -541, -495, -505, -501,
	-504, 379, 383, -524, 54, 555, -507, 244, 4, -533,
	-535, 241, 242, 480, 51, 403, 180, 126, 125, 343,
	56, 517, 518, 519, 520, 195, 196, 58, 556, 492,
	69, 70, -586, 533, 453, 28, 459, 185, -528, 185,
	-528, 2, 2, 155, 2, 2, 2, -266, -244, 610,
	64, 430, 155, -371, 218, -244, 155, -244, 155, -320,
	218, -319, -244, 155, -244, 610, 155, -244, 610, 155,
	607, 610, 155, -528, 2, -415, -521, -373, 38, -429,
	2, 127, 4, 5, -641, 610, 274, -325, 289, 333,
	214, 351, 572, 344, 131, -529, 5, 4, -452, -464,
	127, 282, 244, -512, -514, 8, -513, 9, -515, 595,
	596, -520, -519, 109, 607, -522, -241, 423, 466, 365,
	-240, 24, 29, 143, 236, 319, 552, 161, -337, 237,
	-334, 369, 155, 484, 542, -600, -603, 450, 513, 162,
	421, 90, 344, 466, 365, 423, 155, -395, -397, 38,
	118, 319, 364, 61, 228, 294, 295, 486, 562, 155,
	466, 365, 423, 365, -13, -255, 24, 143, -257, -252,
	466, -603, 99, 423, 581, 428, 375, 498, 392, -603,
	-600, 270, -602, 564, 332, -243, 484, 542, -600, -603,
	450, 423, -242, -339, -334, 369, 155, 609, 24, 143,
	423, 466, 365, -623, -624, 29, 423, 365, -594, -287,
	-565, 225, 568, 155, -287, -287, -478, 218, -617, 185,
	2, -610, -131, 266, 5, 10, -530, -131, -369, 610,
	610, -522, 597, 452, 451, 155, 155, 155, 155, 253,
	185, 334, 334, 2, 2, 2, 2, 2, 192, -605,
	-628, 2, 2, -297, 218, -354, 350, -589, -370, 506,
	-297, 185, 334, 43, -300, 218, 2, -303, 558, -594,
	334, -302, 218, -297, 38, 605, 334, 2, -415, 2,
	234, -565, 334, -479, -316, -297, -474, -316, 466, -290,
	38, -439, -297, 606, 610, -489, -489, -530, -204, 568,
	190, 605, -216, 568, 568, 253, -486, 610, -485, 225,
	-531, -530, -132, -530, 426, 253, -530, -589, -280, 2,
	-297, 2, 506, 255, -530, -204, 225, -530, -530, -530,
	-521, 28, 469, 2, -190, 464, 526, 89, 469, 2,
	-297, 506, 120, 234, 80, -617, 185, 2, -266, -592,
	185, -587, 438, 453, 533, -586, -297, 120, -297, 120,
	-297, 120, -297, -297, 2, 2, 2, 2, 2, 85,
	2, -135, -442, 2, 85, 2, 46, 485, -613, 185,
	2, 524, 2, 524, 2, -266, -266, -266, 487, 274,
	-297, -297, -297, -298, -303, 454, 507, 534, 452, -442,
	2, -630, 2, 190, 185, 2, 506, 234, 506, 234,
	120, 190, 74, 120, 28, 506, 449, 607, 4, -244,
	610, -270, -228, -389, -521, -390, -389, -229, -228, -231,
	185, 402, 543, 319, 470, 259, -420, -419, 28, -442,
	-424, 179, 318, -442, -422, -444, 595, 596, -513, -515,
	-372, 344, -222, -222, -222, -359, -469, -442, 392, 234,
	-494, -492, -492, -295, -522, 517, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, -442, -442, -442, -442, -442, -442, -442, -442,
	-442, -442, 275, 222, 472, 50, 225, -442, 521, -442,
	-442, -442, -442, 312, 334, 340, 530, 170, 540, 139,
	344, -644, 500, 40, -449, -223, -377, 605, -463, 35,
	483, 28, -456, 605, 2, -437, -442, -438, -323, -321,
	-266, 595, 596, 597, 598, 599, 600, 585, 586, 587,
	14, 15, 16, 590, 594, 592, 593, 183, 95, 589,
	290, 445, 86, 173, 174, 175, 176, 257, 258, 17,
	18, 19, 34, 588, -374, -373, -373, 606, 557, 28,
	139, 597, 2, 606, 610, 38, 606, -442, -374, -455,
	-451, -373, -462, -461, 565, -410, -411, 573, 299, 123,
	216, 297, -412, 457, -516, 8, -522, 597, -572, 178,
	209, 605, 606, 2, 606, 2, 606, -442, 2, 606,
	-442, 2, 606, -442, 2, 606, -442, 2, 606, 2,
	606, 2, -442, -442, -442, -442, -442, -442, -442, -373,
	8, -516, -516, 517, 517, -516, -516, -516, -508, 379,
	380, 381, 382, 277, 278, 279, 280, 383, 384, 385,
	386, 304, 305, 306, 307, 300, 301, 302, 303, 308,
	309, 310, 311, 200, 201, 202, 203, 196, 197, 198,
	199, -508, -404, 2, -510, -373, 4, 573, 299, 123,
	216, 297, 457, 5, -404, 2, -405, 2, -442, -373,
	-406, -443, -444, 595, 596, 588, -322, -456, -407, 2,
	-442, -374, -442, 57, 269, 523, -408, -442, 190, -373,
	-373, 2, -373, 2, -569, 38, -373, -365, 610, 190,
	38, 4, -365, -365, 605, 606, 610, -403, 213, 293,
	288, 247, -403, -473, -402, 254, -400, 360, -400, -400,
	-467, -281, 603, 611, -522, -467, -466, -465, 38, -290,
	357, -467, -467, 607, 606, -466, 604, -584, 605, 608,
	608, 608, 608, 608, -297, 605, -373, -522, 607, 489,
	2, 606, 248, 248, 248, 248, 248, 350, 444, 606,
	521, -588, -306, -310, 507, 2, 568, -105, 352, 606,
	610, -364, 37, 603, 607, -516, 2, 2, -511, 559,
	605, 605, -411, 605, 190, -588, -310, 507, 2, -593,
	-363, -363, 521, -266, 2, -297, -371, -244, 155, -371,
	-371, -244, 610, 155, -280, -301, -306, -308, -310, -266,
	-527, -528, -244, -302, -620, 606, 525, -430, -324, 402,
	482, 424, 461, 502, 8, 9, 8, 9, 610, -522,
	610, -621, 93, 521, 78, 453, -259, 283, 521, -433,
	218, 78, -543, 93, -283, -544, -266, 72, 539, 392,
	189, 153, -621, 93, 392, -621, 93, 2, 236, 93,
	466, 487, 28, 60, -478, 41, 41, 28, -601, -602,
	270, 190, 574, 506, 234, 453, 521, 521, -478, -397,
	-492, 118, 294, 295, 60, -517, -512, 595, 596, -517,
	60, -517, -517, -517, 568, -300, -478, 453, 521, 521,
	521, 412, 412, -252, -148, 521, 521, 28, -191, 431,
	127, -642, 587, 412, 270, -602, 521, 190, 610, 41,
	41, 28, -601, 190, 521, -319, -281, 553, 42, 553,
	42, 553, 521, 42, 453, 521, 610, 42, 521, 521,
	-13, 466, -595, -271, 105, 325, 287, 326, 97, 322,
	96, 321, 103, 323, 104, 324, 560, 337, 561, 338,
	63, 320, 298, 327, -272, -273, 146, 371, 551, 120,
	-527, -13, -13, 466, 365, 423, 155, -618, 225, 28,
	-607, 225, -486, 225, -486, -311, -266, 607, -135, -442,
	-442, -135, -442, -135, 46, 155, 155, 2, -638, 263,
	605, -328, 334, 190, -362, -487, 245, 610, -370, -586,
	155, -527, -396, -395, 334, -302, 218, 2, 155, -352,
	334, 149, 605, 400, 2, 155, -282, 218, -267, -266,
	-415, -246, 510, 155, -393, 549, -425, -135, 605, 127,
	38, -425, -382, -383, -484, -384, -283, 605, -290, -439,
	-106, -488, 606, 606, 606, -203, 354, -202, -266, 5,
	-216, -353, -284, -283, 119, 404, 404, -210, 568, -131,
	-132, 606, 610, -486, 225, 490, -204, -204, -486, -486,
	-297, 185, -530, -204, -204, -204, 2, 2, 2, 2,
	-399, -297, -280, -319, -297, 28, 607, -528, -528, -310,
	-306, -399, -280, -399, -280, -399, -280, -399, -399, -135,
	-442, 487, 2, 463, 185, 185, 607, -399, -355, 433,
	2, 400, 120, 506, 369, 234, -297, -319, -297, -319,
	-280, 120, -280, 121, -297, 4, -478, -390, -229, 351,
	259, 470, -422, -423, -444, 443, 444, -423, 443, 444,
	8, 9, 8, 9, -233, 474, 339, -371, 610, -238,
	39, 135, 259, -297, 574, 151, -442, -442, 521, -644,
	500, -449, 151, -442, 312, 340, 530, 170, 540, 139,
	344, 190, 605, -443, -443, 606, -375, -442, -442, 604,
	613, 606, 607, 606, -358, 610, -356, -442, -373, -373,
	606, 607, -373, -362, 604, 604, 610, 606, -460, -461,
	144, -442, 521, 521, 521, 521, 605, 606, 607, -577,
	361, 605, 605, -442, 606, 606, 606, 606, 38, 610,
	610, 610, 606, 610, 610, 610, 606, 606, 606, 610,
	606, 574, 574, 606, 606, 606, 606, 610, 606, 610,
	606, 190, 606, 606, -413, 376, 606, 11, 12, 595,
	596, 597, 598, 183, 599, 600, 593, 594, 592, 585,
	586, 587, 86, 290, 445, 14, 15, 16, -322, 248,
	225, -443, -443, -443, -443, 606, -447, -448, 190, 185,
	38, -408, -408, -408, 606, 190, -373, 606, 606, 605,
	-570, 292, 334, 606, -436, -435, 566, -483, -366, 2,
	-473, -292, -522, -436, -436, -373, -442, 254, 254, -401,
	549, 350, -403, -473, -466, -518, -441, -440, 187, 39,
	135, 328, 329, 330, 221, 188, -466, -290, -352, -466,
	-466, -522, -467, -467, -465, 606, -585, -518, 606, -367,
	-476, -564, -358, 607, -522, -213, -565, -192, 5, 340,
	-192, -192, -192, -192, -297, -528, 521, 521, 225, 25,
	377, -492, 603, 604, 8, -522, 605, -516, -516, -516,
	-528, 190, 190, 225, 350, 190, -527, 2, -244, -371,
	-244, -244, -319, -320, -244, -244, -244, -394, 568, -519,
	-429, 537, 83, 402, 517, -519, -240, 423, -283, -283,
	-297, -307, 204, 413, -527, 334, -433, 218, -245, 334,
	218, -291, -492, 605, -417, 570, 259, 259, 549, -283,
	-291, 259, 218, -283, 218, -291, 2, -291, -596, 402,
	345, -442, 60, -335, 281, 400, 335, -241, 423, 466,
	365, -135, -135, -135, 605, -620, 549, 138, -297, -319,
	-297, -307, -527, -302, 466, 365, 423, 331, -313, -517,
	-517, -395, 466, 365, 423, -307, -527, -300, -527, -251,
	218, -266, -251, 218, 453, -280, 412, 574, 45, -642,
	521, 190, -442, -442, -242, -135, -135, -135, 605, -281,
	-243, 423, 5, 218, -283, 5, -283, 218, 5, -266,
	-283, -307, -527, -624, 24, 143, -283, -307, -527, -271,
	371, -530, 340, 545, -280, -594, -287, 453, 521, 521,
	-478, -614, -615, 206, 436, 453, 439, -528, -131, -207,
	568, -131, -201, 229, 597, -591, -530, -266, 558, -266,
	-326, -329, -327, -283, -434, -433, -547, -548, -543, 275,
	234, 539, 247, 171, 93, -219, -220, 570, 568, 155,
	-317, -297, 603, -204, -530, -297, -487, -308, -309, 155,
	-352, 334, -527, 38, 155, 605, 2, 2, -301, 350,
	334, -282, 218, -247, 145, -642, -280, -436, -366, -392,
	-427, 433, 350, -353, 554, -290, -392, -368, 610, 190,
	587, 607, -353, -482, 597, -106, -106, -204, 610, 605,
	587, 587, 605, -530, 606, 610, 607, 605, 587, 587,
	-212, 354, -211, 147, 261, 246, 476, 477, 478, 479,
	137, 475, 124, 317, 230, -486, -530, -210, -132, 190,
	190, -65, 568, 506, -204, 609, 439, -266, -399, -399,
	-399, 463, 463, -266, -362, -293, -522, -280, -297, -294,
	-319, 185, 185, -280, 543, -423, 351, 286, -469, -239,
	576, -297, 609, -442, -442, 151, 151, -442, -443, -443,
	-442, 151, 190, 605, -442, -453, 33, 33, 606, 610,
	-438, -442, -321, 606, 557, -358, -358, 606, 597, -522,
	609, 606, -451, 148, -442, 515, 299, 216, 297, -412,
	297, -412, -412, -516, 5, -522, 597, -578, -286, 605,
	-266, 566, -357, 356, 606, -494, -492, -442, -442, -442,
	-442, -442, -516, -497, -497, -512, -512, -442, -447, -442,
	-494, -492, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, -443, -443, -443, -443, -443, -443, -443, -443,
	-443, -443, 139, 334, 344, -443, -448, -447, -442, -442,
	-492, 606, 606, 606, -373, -105, 605, 292, -386, 209,
	-442, -486, 610, -386, -386, 606, -473, -473, 605, -442,
	254, 604, 610, 612, 587, 587, -352, 607, -465, -466,
	604, 606, 610, 606, 610, -426, 38, 606, -522, -436,
	-215, -214, 136, 53, 107, 134, 340, 248, -616, 568,
	-528, -528, 453, 353, 5, 8, 603, 604, 607, -516,
	606, 606, 606, -528, -528, 453, -586, 533, 453, 28,
	-528, -244, -244, 119, 319, -442, 521, 521, 60, 225,
	155, 334, 551, 334, -544, 153, -549, -442, 605, 234,
	605, 605, 2, -235, -236, -237, 143, 466, 24, -622,
	2, 549, 155, -244, 155, -244, 572, -335, 605, 605,
	521, 453, -259, 521, 568, -373, -442, -205, 127, -521,
	-603, 609, -603, 609, 453, 521, 521, 453, 521, 521,
	334, 155, 568, 169, 169, 574, -251, -442, -442, 185,
	521, 568, -373, 521, -496, 48, 26, 334, -301, -244,
	155, 521, 521, 533, 466, -530, -530, 340, -13, -307,
	-527, -302, 466, 365, 423, -593, -593, 206, -310, -618,
	-486, -209, 354, -208, 147, 435, 137, 261, 230, -486,
	-207, 190, 245, 568, -302, 2, 606, 606, 610, 610,
	-550, -245, -297, -282, 234, 234, -289, -267, 38, 348,
	348, 605, -297, -86, 568, -485, -518, -597, 568, 43,
	-300, 38, 155, -594, -135, -302, -490, -491, 5, 38,
	-297, 155, 350, 334, -248, 268, -642, -526, -565, -358,
	-392, -381, 335, 91, 606, -436, -383, -366, -442, 2,
	606, -202, -203, -530, -530, -530, -204, -216, -284, 2,
	-531, -530, -530, 610, 605, 587, 587, 587, 587, 587,
	587, -210, -486, -131, -135, 354, -297, 597, -399, -341,
	-340, 369, 344, -341, 443, 443, 351, 179, 264, -238,
	-281, -442, -442, 151, 33, 33, -442, -442, -453, 606,
	-442, -442, -373, 604, 5, -442, 606, 606, 8, -442,
	606, 607, -579, -266, -442, 606, 60, 606, 606, 610,
	610, 606, 606, 606, 606, 606, 606, 606, -448, 190,
	139, 344, 605, 606, 606, -105, -450, 212, 60, -473,
	-450, -450, -401, -362, -473, -440, -281, 603, -281, 603,
	-522, -518, -476, 605, 607, -214, 587, -530, -530, -192,
	206, -616, -616, 568, -310, 604, 2, 603, -522, 606,
	-310, 190, -588, -310, 507, 119, -283, -283, 506, 443,
	-251, 392, -433, 155, 155, -551, 93, -553, 76, 171,
	102, 334, 340, 539, 392, 72, 127, 350, 409, -632,
	-633, -634, 38, 579, 580, 606, -360, -470, -564, 605,
	-266, -360, -362, 334, 495, 127, 350, 334, 127, 350,
	563, 119, 2, 533, 79, -283, -291, -362, -362, -297,
	-307, -527, 163, 606, 610, 587, 2, 597, 597, -307,
	-527, -302, -307, -527, -300, 155, -251, 367, 169, 521,
	-135, -442, 163, 606, -281, 5, 5, 155, -278, 76,
	-283, 5, -283, -301, 119, 453, 521, 521, 350, 350,
	353, -614, -615, -207, 610, 605, 587, 587, 587, -207,
	-531, -131, 2, -352, -342, 236, -283, -548, -545, -546,
	392, -434, -552, -554, 171, 392, -330, 605, -282, -267,
	605, -135, 2, -218, -217, -266, 5, 605, -328, 354,
	604, -599, 354, -598, 117, 137, -527, -396, -135, -302,
	-350, 568, -352, 606, 610, 149, -418, 549, -281, -297,
	155, -249, 267, -642, -526, -246, -421, -419, 140, 605,
	350, -135, -358, 587, 606, 606, 119, 606, -211, -212,
	-530, -131, -530, -530, -530, -131, -210, -486, -66, -67,
	234, 93, 374, -294, 506, 234, 605, 605, -238, -442,
	-442, -442, 606, -358, -522, 597, -573, 369, 606, -469,
	-442, -442, -443, 190, 605, -453, 606, -574, 567, -442,
	-387, -388, -442, 441, 108, 210, -574, -574, 606, -518,
	-518, 2, -530, 353, 2, 521, 603, 2, 190, -528,
	190, 190, 225, 225, 38, 412, -433, -291, -291, -295,
	-288, -266, 171, 218, 340, 563, -417, 259, 605, -443,
	543, -297, 605, 2, 217, 217, 30, 60, -635, 131,
	238, 606, 610, -471, -277, -266, -442, -471, 606, 606,
	340, 543, 340, 563, -442, 543, -492, 605, -244, -244,
	606, 606, -442, 521, -521, 100, -519, 2, -603, -251,
	-280, -442, 185, -442, 521, 5, -244, -295, -244, -244,
	-278, 533, -307, -527, -302, -619, 507, 460, 534, 454,
	193, 442, -619, 185, -208, -209, -530, -131, -131, -207,
	38, -336, -337, 2, -550, 259, -288, 259, 227, 154,
	-360, 605, 605, -362, -631, 568, 606, 610, 587, 587,
	-326, -219, -87, -88, 522, -485, 610, 605, 587, -352,
	319, 119, 38, 5, 605, 605, -266, 350, 605, -281,
	-261, 92, -642, -526, -247, -392, 335, -362, 93, -421,
	-449, -204, 605, -204, 606, 610, 28, 605, 28, 605,
	-297, -319, -373, -373, 606, -358, 60, 610, 606, 606,
	-443, -453, 606, -575, -576, -286, 610, 605, 605, 467,
	604, 604, -528, 2, -528, -528, -528, 453, -251, 392,
	-266, -544, -553, -288, 334, 549, -442, -443, -268, 605,
	-442, 605, 605, 38, 127, 238, 132, 223, -432, -636,
	101, 496, 226, -470, -238, 606, -431, 549, 409, -443,
	-278, -360, 605, 605, 605, 587, 190, -135, 605, -496,
	-244, -301, 521, 2, 2, 190, -593, 606, -609, 407,
	-135, -219, 605, -331, 81, 94, 128, 217, 194, 235,
	487, 493, 28, -331, 606, -360, -360, 606, -332, 350,
	119, 319, -217, -519, -519, 606, 38, -88, 9, -598,
	-599, -442, 38, 119, -135, -490, -360, -297, -360, 350,
	-253, -252, 276, -526, -248, 606, -291, -392, -531, -67,
	-362, -362, 606, 606, -580, 400, 444, 211, -373, -359,
	606, 610, 38, -388, 2, 2, 2, -616, -310, 412,
	-245, 155, 213, 606, -555, 291, -266, 606, -396, -396,
	38, 132, 223, -338, -334, 605, -239, -471, 213, -297,
	-604, 549, 606, -344, -343, -340, -346, -345, -340, -373,
	-519, 100, 367, -373, -278, -528, -528, 350, -611, 191,
	-610, 5, 10, -332, -361, -472, -283, -431, 606, 606,
	82, 119, -342, -135, 606, -135, 2, -350, 606, 606,
	-418, 606, -297, -250, -532, 412, 414, -642, -249, -436,
	606, 606, 606, 606, -581, -582, 50, 536, 109, -442,
	-581, -581, -576, -578, 190, 171, 568, -556, -559, -558,
	584, 473, 191, 368, 606, 495, 562, 606, 606, -635,
	-362, 568, -352, -442, -431, 606, 610, 554, 606, 610,
	554, 606, 190, 606, -244, -616, -244, -619, -206, 568,
	46, -260, -259, 606, 610, -432, -431, -338, 391, 133,
	143, -336, -631, -431, 605, -432, 605, -258, -257, -642,
	-512, -261, 140, -204, -583, 153, -582, 388, 184, 443,
	388, 184, -583, -583, -528, -288, 55, -558, 584, -559,
	584, 543, 133, -436, 606, 55, -555, -343, 225, -345,
	190, 367, 190, 451, -610, 30, -472, -338, -432, -220,
	568, 444, 444, 2, -219, -332, -432, -360, -338, -360,
	-254, -255, -256, -362, -253, 335, 543, 109, 209, 516,
	319, 33, 587, -557, 319, 430, 64, 466, -557, 587,
	-556, 605, 605, -528, 354, -220, -338, -436, 2, -332,
	-338, 606, -220, 606, -250, 466, 443, 358, -582, -442,
	23, 340, 127, -442, -635, -373, -373, -244, -203, 605,
	-436, -220, -260, -220, -431, -436, -432, -258, -382, 606,
	606, -203, -436, -436, -432, -338, -254, -436, -333, -334,
	521, 606, -338, -220, 605, -220, -436, -373, -436, 606,
	-333,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 561, 562, 564, 565, 566, 568,
	569, 571, 573, 575, 576, 577, 579, 580, 582, 583,
	584, 585, 586, 588, 590, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	661, 663, 0, 1437, 1439, 1441, 1443, 0, 817, 0,
	36, 37, 39, 0, -2, 340, 342, 344, 346, 0,
	377, 379, 380, 382, 384, 385, 386, 388, -2, 0,
	494, 495, 497, 499, -2, 0, 1031, 1033, 1035, 0,
	650, 652, 0, 1038, 1040, 1042, 0, 0, 673, 674,
	0, 1548, -2, 665, 667, 669, 671, 742, 744, 746,
	748, 750, 752, 754, 756, 758, 760, 761, 763, 765,
	767, 769, 771, 772, 774, 776, 778, 779, 781, 782,
	784, 786, 788, 790, 792, 794, 796, 798, 800, 802,
	804, 806, 808, -2, 811, 812, 813, -2, -2, 0,
	-2, -2, -2, 1455, 41, 43, 45, 47, 49, 51,
	53, 55, 57, 59, 438, 440, 442, 444, 446, 449,
	451, 453, 1606, 501, 503, 505, 507, 509, 511, 513,
	0, -2, 1620, 0, 0, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 109, 110, 111, 112, 113,
	114, 115, 74, 75, 76, 78, 79, 80, 81, 85,
	86, 87, 88, 89, 90, 91, 92, 93, 94, 106,
	107, 72, 0, 0, 1579, 1581, 1583, 1585, -2, 0,
	0, 5, 9, 11, 13, 15, 17, 19, 21, 23,
	25, 27, 29, 563, 567, 570, 572, 574, 578, 581,
	587, 589, 591, 546, 547, 550, 2318, 2336, 2337, 2338,
	2341, 2342, 2343, 2344, 2345, 2346, 2806, 2887, 2888, 2368,
	2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378,
	2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388,
	2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398,
	2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408,
	2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418,
	2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428,
	2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438,
	2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448,
	2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458,
	2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468,
	2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478,
	2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488,
	2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498,
	2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508,
	2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518,
	2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528,
	2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538,
	2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548,
	2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568,
	2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578,
	2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588,
	2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598,
	2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608,
	2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618,
	2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628,
	2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638,
	2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648,
	2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658,
	2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668,
	2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678,
	2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688,
	2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698,
	2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708,
	2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718,
	2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728,
	2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738,
	2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748,
	2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758,
	2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
	2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778,
	2779, 2780, 2781, 2782, 2783, 2784, 2785, 548, 549, 1220,
	0, 615, 613, 2303, 616, 2601, 618, 620, 488, 489,
	490, 491, 492, 493, 0, 643, 629, 1618, 644, 646,
	647, 648, 649, 610, 608, 0, 648, 643, 2372, 641,
	1435, 1436, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	500, 0, 0, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 417, 1279, 1280, 1281, 1420, 1421, 2649,
	1462, 0, 239, 662, -2, -2, 2771, -2, 696, 697,
	-2, -2, 711, 715, 706, 2775, 0, 2652, 2636, -2,
	718, 1438, 1440, 1442, 815, 816, 2322, 0, 0, 0,
	0, 0, 38, 40, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 247, 249, -2, -2, -2, -2, 0, 0,
	2697, 2424, 2271, 2338, 2274, 2269, 341, 343, 345, 347,
	348, 0, 0, 0, 0, 0, 0, 0, 378, 381,
	383, 387, -2, 389, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 416, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 0, 0, 0, 0, 0, 1102, 1094, 1095, 1342,
	0, 0, 0, -2, 496, 498, 551, 552, 0, 1607,
	1607, 559, 560, -2, 0, 0, 0, 0, 311, 301,
	1032, 1034, 1036, 1037, 0, 0, 0, 0, 0, 651,
	653, 0, 0, 279, 1039, 1041, 1043, 1044, 0, 0,
	0, 0, 0, 0, 313, 0, 0, 666, 668, 670,
	672, 743, 745, 747, 749, 751, 753, 755, 757, 759,
	762, 764, 766, 768, 770, 773, 775, 777, 780, 783,
	785, 787, 789, 791, 793, 795, 797, 799, 801, 803,
	805, 807, 809, 810, 823, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, -2, 0, -2, -2, -2,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	925, 0, 0, 0, -2, -2, -2, 0, 0, 0,
	0, 0, -2, -2, 0, 0, 0, 0, -2, 1012,
	0, 0, 826, 829, 830, 831, 832, 833, 834, 0,
	898, 923, 924, 934, 814, 0, 1260, 1608, 1464, 1445,
	1459, 1464, 1447, 1448, 1449, 1450, 1451, 1456, 1458, 1452,
	1453, 1454, 42, 44, 46, 48, 50, 52, 54, 56,
	58, 60, 439, 441, 443, 445, 447, 450, 452, 454,
	-2, 1577, 1578, 502, 504, 506, 508, 510, 512, 514,
	654, 0, 656, 0, 828, -2, 0, 1612, 1612, 1612,
	0, 0, 1578, 1576, 0, 659, 660, 722, 723, 1885,
	0, 0, 0, 0, 0, 0, 0, 0, 2145, 1973,
	0, 724, -2, 2006, 2008, 2746, 2574, 2771, 2144, 2010,
	2011, 2012, 2013, 2014, 0, 2016, 2017, 2018, 2019, 2020,
	2021, 0, 2023, 0, 2028, 2029, 2030, 0, 2753, 2248,
	2332, -2, 0, 0, 2759, 2328, 0, 2111, 2046, -2,
	-2, 2355, 2334, 1817, 1818, 1819, 1820, 1821, -2, -2,
	2789, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058,
	2059, 2060, 0, 2734, 2754, 2755, 2760, 2762, 2756, 2743,
	2071, 2438, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, 1844, 1853, -2, -2, -2,
	-2, -2, -2, -2, 2747, 2748, 2765, 2768, 2774, 2779,
	2780, 2752, 2761, 2788, 2790, 2791, 2792, 2793, 2794, 2795,
	2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805,
	1845, -2, -2, -2, -2, 1595, 2615, 1598, 1220, 1596,
	1580, 1582, 0, 1584, 0, 0, 0, 1589, 1615, 1613,
	0, 1664, 1593, 1594, 1687, 1687, 1711, 0, 1692, 0,
	1711, 1607, 1738, 0, 1698, 2641, 2047, 2048, 0, 2338,
	2333, -2, -2, 2786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 611, 0, 617, 619, 0, 0,
	0, 642, 1617, 0, 0, 0, 0, 0, 0, 0,
	0, 420, 421, 422, 423, 424, 2754, 0, 0, 0,
	429, 0, 431, 432, 433, 434, 435, 436, 437, 209,
	2754, 519, 544, 0, 209, 2754, 522, 209, 2754, 525,
	0, 528, 1340, 209, 2754, 531, 2299, 209, 2754, 534,
	536, 2307, 209, 2754, 540, 2314, 2312, 541, 0, 543,
	229, 225, 226, 227, 228, 1431, 1432, 1433, 1434, 0,
	1461, 1341, 664, 0, 690, 0, 694, 695, 2742, -2,
	0, 2661, 699, 700, -2, 702, 1465, 1469, 1470, 1471,
	1472, 1473, 0, 0, 0, 0, 1478, 0, 0, 0,
	0, 691, 692, 709, 710, 716, 719, 0, 818, 819,
	820, 821, 822, 71, 0, 2754, 1738, 73, 0, 2293,
	2363, 2364, 2365, 2366, 2367, 2787, 2807, 2808, 2809, 2810,
	2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820,
	2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830,
	2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840,
	2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850,
	2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860,
	2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870,
	2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880,
	2881, 2882, 2883, 2884, 2885, 2886, 2789, 77, 0, 2754,
	82, 0, 2754, 0, -2, 95, 0, 108, 0, 135,
	-2, -2, -2, 116, 0, 2754, 0, 2268, -2, 0,
	221, 302, 303, 304, 0, 1069, -2, 0, 1273, 1275,
	1275, 0, -2, 0, 0, 0, 1022, 2265, 2270, 1023,
	2289, 1024, 2275, 0, 349, 350, 351, 352, 353, 0,
	354, 2754, 356, 357, 0, 359, 360, 2754, 362, 363,
	0, 365, 0, 367, 0, 261, 265, 2754, 314, 315,
	2351, 2352, 2359, 2360, 2361, 2362, 2754, 391, 393, 0,
	395, 396, 0, 398, 0, 0, 0, 402, -2, 418,
	0, 415, 405, 406, 408, 409, 410, 411, 412, 0,
	458, 456, 2304, 0, 0, -2, 2754, 0, 1066, 0,
	0, 1320, -2, 0, 1266, 0, 1327, 2754, 1323, 0,
	-2, 0, 1605, 2754, 1482, 1098, 1099, 1100, 1101, 1750,
	485, 0, 1513, 0, 1515, 0, 1534, 1744, 1687, 0,
	0, 1749, 0, -2, 604, 2321, -2, 554, 0, 555,
	0, -2, 0, 328, 0, 0, 1047, 1049, 1050, 1052,
	1053, 1056, 1057, 1058, 1059, 0, 1061, 1724, 280, 282,
	0, 0, 0, 1046, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 0, 0, 675, 0, 0, 824, 825,
	0, 0, 841, 842, 843, 0, 328, 2653, 2610, 2460,
	850, 0, 853, 856, -2, 0, 0, 0, 0, 860,
	0, 865, 866, 867, 0, -2, 0, 874, 876, 1030,
	878, 0, 0, 880, 0, 884, 0, 887, 0, 889,
	0, 891, -2, -2, -2, 899, 900, -2, 905, -2,
	0, 909, -2, 0, 912, 0, 915, -2, 0, 925,
	921, 922, 0, 0, 0, 0, 942, 943, 0, 952,
	0, 955, 956, 957, 0, 961, 962, 0, 964, 965,
	966, 967, 0, 2724, 2658, 2424, 0, 975, -2, 981,
	983, 0, -2, 0, 999, 0, 1003, 0, 0, 1011,
	0, 0, 827, 0, 835, 836, 209, 1742, 1444, -2,
	1446, 0, -2, 0, 655, 0, 658, 1637, 1563, 1560,
	0, 1634, 1635, 1564, 0, 0, 0, 1571, 0, 1610,
	1611, 0, 0, 0, 1550, 1551, 0, 0, 0, 0,
	2150, 2151, 2152, 2153, 2166, 2154, 2155, 2165, 2163, 2164,
	2156, 2157, 2162, 2176, 2177, 2167, 2168, 2158, 2171, 2169,
	2170, 2172, 2173, 2174, 2175, 0, 0, 2181, 0, 2159,
	2160, 2161, 2189, 0, 0, 2190, 0, 2192, 0, 2182,
	2178, 2179, 2180, 0, 1952, 1954, 2256, 0, 0, 0,
	2188, 2183, 2184, 1890, 1891, 1892, 1893, 1894, 1927, 1931,
	1932, 0, 0, 2007, 2253, 2252, 2009, 0, 0, 2204,
	0, 2022, -2, 0, 2145, 2199, 0, 0, 2031, 2032,
	2033, 0, 0, 2204, 0, 0, 2247, 2043, 2044, 1882,
	0, 0, 2113, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1831, 1830, 0, 1832, 0, 1833, 1834, 1841, 1854,
	0, 0, 0, 0, 1858, 0, 0, 0, 0, 0,
	0, 0, 2228, -2, 0, 0, 0, 0, 1846, 0,
	1597, 0, 0, 1668, 2257, 2261, 2262, 1668, 1668, 0,
	0, 2205, 1735, 1735, 0, 0, 1730, 1730, 1730, 1728,
	1711, 0, 1711, 1721, 0, 1711, 1711, 0, -2, 1692,
	0, 0, 1721, 0, 1705, 592, 594, 596, 598, 599,
	600, 602, 1739, 1740, 0, 0, 0, 0, 2339, 0,
	0, 0, 0, 2311, 0, 0, 2324, 0, 0, 2298,
	374, 0, 0, 0, 2707, 2652, 0, -2, 622, 645,
	1607, 0, 2207, 1765, 1769, 0, 1771, 1772, 1773, 1774,
	1775, 0, 0, 1766, -2, 1842, 1844, 1865, 2356, 2357,
	2358, 1825, 1826, 1827, 1828, 1829, 1837, 1824, 1824, 1824,
	1835, 1864, 1856, 1864, 1860, 1810, 1811, 1812, 1847, 1848,
	1849, 1850, 0, 2707, 2652, 0, -2, 0, 632, 0,
	0, 1545, 419, 0, 426, 427, 428, 0, 515, 0,
	207, 208, 0, 209, 2754, 520, 0, 523, 0, 209,
	2754, 2263, 529, 0, 532, 0, 0, 538, 0, 0,
	0, 0, 0, 209, 1547, 0, 0, 0, 0, -2,
	704, 712, 713, 714, 0, 1467, 0, 1474, 733, 734,
	735, 1476, 1477, 0, 1479, 707, 736, 737, 738, 739,
	740, 741, 0, 2277, 2278, 2279, 2280, 2283, 2284, 0,
	0, 705, 726, 708, 0, 720, 117, 1417, 0, 0,
	164, 0, 1417, 1417, 0, 0, 0, 0, 192, 0,
	1132, 0, 0, 0, 0, 135, 149, 160, 129, 130,
	131, 0, 0, 0, 0, 0, 0, 83, 1242, 0,
	1245, 0, 0, 0, 0, 0, 0, 0, 1258, 0,
	0, 0, 0, 0, 97, 98, 0, 0, 103, 104,
	0, 148, 0, 0, 0, 0, 0, 1510, 0, 139,
	135, 0, 0, 134, 136, 119, 0, 0, 135, 150,
	162, 0, 196, 198, 1129, 0, 0, 0, 0, 0,
	0, 0, 0, 220, 231, 0, 0, 0, 1267, 0,
	0, 0, 1604, 0, 0, 0, 0, 2754, 1415, 0,
	1400, 0, 1724, 2509, -2, -2, 280, 1724, 1021, 0,
	0, 2339, 2273, 0, 0, 0, 0, 0, 0, 366,
	0, 0, 0, 394, 397, 399, 400, 401, 0, 1319,
	0, 407, 448, 1191, 2754, 0, 0, 475, 470, 0,
	472, 0, 0, 0, 1241, 2754, 1239, 2308, 0, 1264,
	0, 1220, 2754, 2306, 0, 0, 0, 1328, 2348, 1337,
	1341, 1500, 0, 487, 0, 1516, 1518, 0, 0, 1745,
	0, 1747, 1687, 1607, 0, 0, 0, 0, 306, 0,
	0, 0, 0, 0, 0, 1060, 286, 0, 1723, 0,
	0, 316, 1724, 280, 2627, 1045, 328, 328, 1724, 677,
	1724, 679, 0, 0, 844, 845, 0, 328, 328, 328,
	851, 852, 854, 855, -2, -2, -2, -2, 857, 858,
	949, 0, 0, 0, 948, 868, 0, 870, 873, 877,
	0, 1015, 2636, 2652, 2707, 1028, 949, 2424, 949, 2424,
	949, 2424, 949, 949, 893, 937, 945, 904, 911, 0,
	906, 910, 913, 916, 0, 918, 926, 0, -2, 0,
	929, 0, 931, 0, 933, 949, 950, 953, 960, 963,
	968, 969, 970, 971, 2319, 972, 973, 974, -2, 978,
	979, 0, 990, 995, 996, 992, 0, 0, 0, 0,
	0, 0, 1006, 1007, 0, 0, 1014, 0, 837, 1259,
	0, 1457, 1637, 1563, 657, 1554, 1636, 1555, 1562, 1565,
	0, 0, 1567, 0, 1569, 0, 1632, 1633, 1640, 1641,
	0, 1651, 1652, 1644, 0, -2, 0, 0, 1647, 1648,
	1573, 0, 1590, 1591, 1592, 1621, 1624, 1356, 0, 2887,
	1886, 1760, 1887, 1888, 2292, 0, 1895, 1896, 1897, 1898,
	1899, 1900, 1901, 1902, 1903, 1904, -2, -2, -2, -2,
	-2, -2, -2, -2, 1913, 1914, 1915, 1916, 1917, 1918,
	1919, 1920, 1921, 1922, 1923, -2, -2, -2, 1928, 1929,
	1930, -2, 2191, 2193, 0, 2256, 0, -2, 0, -2,
	-2, -2, -2, 1949, 0, 1951, 1956, 1958, 1960, 0,
	0, 0, 0, 2255, 1970, 2239, 2240, 0, 0, 2147,
	2148, 2149, 1955, 0, 1974, 2254, 2251, 0, 0, 2185,
	0, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158,
	2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168,
	2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178,
	2179, 2180, 2181, 2182, 0, 2203, 1620, 2035, 0, 0,
	0, 0, 2042, 2027, 2201, 0, 2200, 0, 0, 0,
	2211, 0, 2246, 2242, 0, 2290, 1881, 1868, 1869, 1870,
	1871, 1872, 1873, 1883, 0, 2287, 2325, 2331, 2121, 0,
	0, 0, 2072, 2073, 2074, 2075, 2076, 0, 2078, 2079,
	0, 2081, 2082, 0, 2084, 2085, 0, 2087, 2088, 2089,
	2090, 2091, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1778,
	1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788,
	1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798,
	1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808,
	1809, 0, 0, 2093, 0, 2214, -2, -2, -2, -2,
	-2, -2, -2, -2, 0, 2095, 0, 2097, 2205, 2225,
	0, 0, 1975, 0, 0, 0, 0, 2145, 0, 2100,
	2205, 2233, 0, 0, 0, 0, 0, 2205, 0, 2238,
	0, 2107, 0, 2109, 1599, 0, 0, 1755, 0, 0,
	0, 2260, 1755, 1755, 0, 1663, 0, 0, 1731, 1732,
	1733, 1734, 0, 0, 1735, 0, 1725, 1729, 1726, 1727,
	1721, 1684, 0, 0, 2294, 1721, 1690, 1720, 0, 1220,
	1710, 1721, 1721, 0, -2, 1694, 1711, 0, 0, 593,
	595, 597, 601, 603, 0, 0, 1620, -2, 0, -2,
	330, 1219, 0, 0, 0, 0, 0, 0, 612, 614,
	0, 0, 535, 0, 0, 628, 0, 606, 0, 609,
	0, 1756, 1759, 0, 0, 1770, 1776, 1777, 0, -2,
	0, 0, 1866, 0, 0, 0, 0, 0, 640, 0,
	643, 0, 0, 0, 430, 545, 209, 517, 0, 209,
	209, 526, 0, 0, 209, 537, 209, 2315, 209, 2313,
	230, 542, 1546, 242, 0, 693, 0, 1466, 1475, 0,
	730, 0, 732, 0, 2281, 2285, 2282, 2286, 0, 721,
	0, 0, 0, 0, 1416, 0, 1363, 0, 0, 168,
	2754, 0, 211, 0, 0, 1184, 2300, 0, 1174, 0,
	0, 2446, 0, 0, 0, 0, 0, 185, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 126, 0, 132,
	133, 0, 0, 0, 0, 0, 0, 0, 0, 1243,
	1244, 1246, 1253, 1255, 0, 1249, 2288, 0, 0, 1250,
	0, 1252, 1254, 1256, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 1276, 0, 0, 1277, 1278, 1488,
	1489, 0, 1509, 1510, 0, 0, 0, 0, 0, 0,
	0, 128, 0, 0, 0, 0, 2267, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1269, 0, 1315, 1313, 1291, 1292, 1293, 1294, 1295, 1296,
	1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
	1307, 1308, 1309, 1310, 1311, 1312, 0, 0, 0, 0,
	-2, 1271, 1272, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 252, 0, 319, 2266, 2276, 0, 1054, 1055,
	355, 358, 361, 364, 248, 0, 0, 403, 0, 0,
	1104, 1079, 0, 0, 457, 328, 0, 0, 471, 475,
	2317, 1064, 1237, 1240, 0, 1220, 2754, 1287, 0, 0,
	0, 0, 0, 0, 1326, 0, 0, 2754, 2295, 2347,
	2348, 1502, 1510, 0, 1755, 0, 1532, 1519, 0, 0,
	0, 1532, 1536, 1537, 1539, 1540, 0, 0, 1746, 1752,
	553, 605, 1607, 1607, 328, 326, 2577, 324, 321, 323,
	0, 0, 1522, 1524, 0, 0, 0, 274, 0, 283,
	1724, 281, 0, 286, 0, 0, 0, 469, 676, 681,
	839, 0, 328, 847, 848, 849, 895, 939, 947, 994,
	859, 861, 862, 863, 0, 0, 0, 1029, 1025, 1026,
	1027, 879, 949, 882, 949, 885, 949, 888, 890, 908,
	914, 927, 920, 928, 0, 0, 0, 941, 958, 0,
	977, 0, 0, 0, 0, 0, 0, 0, 1000, 1001,
	1002, 1004, 1009, 1008, 1013, 838, 1743, 1558, 1559, 1561,
	0, 1570, 0, 0, 1646, -2, -2, 1645, 1649, 1650,
	-2, -2, -2, -2, 1566, 0, 1575, 1572, 0, 1631,
	1354, 1355, 0, 0, 0, 0, -2, -2, 0, 0,
	0, 1971, 0, -2, 1950, 1953, 1957, 1959, 1961, 0,
	0, 0, 0, 0, 0, 2194, 0, 2196, 1972, 2249,
	2252, 2187, 0, 2143, 0, 0, 1619, 1620, 1620, 0,
	2041, 0, 2202, 0, 2209, 2210, 0, 2034, 0, 2243,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2045,
	0, 0, 0, 0, 2077, 2080, 2083, 2086, 0, 0,
	0, 0, 2066, 0, 0, 0, 2070, 1836, 1822, 0,
	1864, 1862, 1863, 1857, 1864, 1861, 1814, 0, 1813, 0,
	2092, 0, 2094, 2096, 0, 0, 2098, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1978, 1979, 1980, 2000, 2099, 2231, 2232, 0, 0,
	0, 0, 0, 0, 2105, 0, 2237, 2106, 2108, 1607,
	0, 1600, 0, 1665, 1654, 1754, 0, 2258, 1724, 1667,
	1669, 2259, 2297, 1654, 1654, 0, 2206, 0, 0, 1715,
	0, 0, 0, 1717, 1688, 0, 0, 1682, 0, 1673,
	1674, 1675, 1676, 1677, 1678, 1679, 1689, 1220, 1719, 1691,
	1695, 2325, 0, 1721, 0, 1706, 0, 1708, 1741, 0,
	1700, 1703, 0, 0, 2340, 1755, 0, 368, 375, 376,
	369, 370, 371, 372, 0, 1403, 0, 0, 0, 0,
	0, 2208, 0, 1761, 0, 1767, 0, 0, 0, 0,
	630, 0, 0, 0, 0, 0, 1544, 425, 516, 209,
	521, 524, 2264, 209, 530, 533, 539, 238, 0, 689,
	-2, 728, 729, 731, 0, 727, 165, 1417, 0, 0,
	1359, 1361, 1365, 1371, 1374, 0, 170, 2754, 182, 0,
	2754, 0, 1148, 0, 0, 0, 0, 0, 0, 1419,
	0, 0, 2754, 209, 2754, 209, 186, 188, 191, 0,
	195, 193, 0, 1136, 0, 0, 1139, 118, 1417, 0,
	0, 121, 125, 137, 0, 0, 0, 147, 0, 0,
	0, 1376, 1380, 1388, 0, 0, 0, 1247, 1248, 1251,
	1257, 84, 0, 0, 0, 1384, 1386, 1392, 96, 99,
	2754, 2309, 101, 2754, 0, 1358, 0, 0, 0, 0,
	0, 0, 0, 0, 197, 123, 127, 138, 0, 1394,
	120, 0, 224, 0, 0, 214, 209, 2754, 0, 216,
	0, 217, 218, 232, 0, 0, 0, 1067, 1068, 1314,
	0, 1262, 1263, 0, 1274, 1268, 0, 0, 0, 0,
	0, 1396, 1397, 0, 0, 0, 1415, 1412, 1724, 244,
	0, 1724, 252, 0, 2272, 0, 266, 390, 0, 0,
	0, 0, 1103, 1202, 1105, 1107, 1108, 1109, 211, 0,
	2348, 1174, 2498, 2348, 0, 0, 1074, 0, 0, 0,
	463, 459, 0, 468, 474, 473, 479, -2, 0, 0,
	0, 0, -2, 0, 0, 1330, 1324, 1325, 0, 0,
	0, 0, 2754, 1504, 1510, 0, 1605, 1620, 486, 1511,
	1532, 0, 0, 0, 1521, 1517, 1514, 1755, 0, 0,
	0, 0, 0, 1748, 1751, 556, 557, 305, 0, 0,
	0, 0, 0, 328, 0, 0, 0, 0, 0, 0,
	284, 0, 287, 0, 0, 0, 292, 293, 294, 295,
	296, 297, 0, 0, 0, 286, 317, 276, 1724, 0,
	0, 678, 0, 0, 846, 0, 869, 872, 881, 883,
	886, 930, 932, 949, 959, 984, 2296, 985, 1126, 0,
	1126, 0, 0, 1005, 1568, 0, 1643, 1574, 1625, 1626,
	0, 1356, 0, 1889, 1934, 0, 0, -2, 0, 0,
	1938, 0, 0, 0, -2, 0, 0, 0, 2195, 2197,
	0, 2251, 2186, 2036, 0, 0, 0, 2040, 2024, 2025,
	0, 2146, 2212, 2241, 2245, 0, 1874, 1875, 1876, 1877,
	1878, 1879, 1880, 0, 2291, 2326, 2330, 2119, 2120, 2124,
	2305, 0, 0, 0, 2049, 0, 0, 0, 0, 0,
	0, 0, 0, 1855, 1859, 0, 0, 2213, 2224, 2226,
	1976, 1977, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988,
	1989, 1990, -2, -2, -2, 1994, 1995, 1996, -2, -2,
	-2, 2001, 0, 0, 0, 2227, 2229, 2230, 2234, 2235,
	0, 2102, 2103, 2104, 2236, 0, 1607, 1601, 1662, 0,
	1753, 1666, 0, 1662, 1662, 1614, 1713, 0, 0, 1737,
	0, 1685, 0, 1686, 0, 0, 1718, 0, 1693, 1696,
	1697, 1707, 0, 1699, 0, 1702, 0, 2036, -2, 329,
	331, 333, 0, 336, 337, 0, 0, 0, 621, 0,
	1403, 1403, 0, 623, 607, 0, 0, 1763, 0, 0,
	1839, 1843, 1867, 634, 636, 0, 0, 2707, 2652, 0,
	633, 518, 527, 240, 0, 1722, 0, 0, 0, 0,
	0, 0, 210, 0, 1183, 0, 1146, 0, 0, 1173,
	0, 0, 1189, 172, 173, 174, 0, 0, 0, 0,
	184, 0, 0, 180, 0, 190, 194, 1133, 0, 0,
	0, 0, 1364, 0, 0, 0, 144, 145, 146, 0,
	151, 0, 152, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1494, 1495, 0, 1485, 141, 0, 0,
	0, 0, 0, 0, 212, 0, 0, 0, 1353, 234,
	0, 0, 0, 0, 0, 1261, 1317, 1318, 1270, 1377,
	1381, 1389, 0, 0, 0, 0, 0, 648, 1414, 0,
	252, 250, 0, 253, 0, 256, 257, 0, 0, 252,
	246, 0, 0, 0, 1220, 404, 1077, 1190, 0, 0,
	1192, 1110, 1114, 0, 2348, 2348, 0, 2302, 0, 1075,
	0, 0, 1191, 455, 0, 462, 0, 476, 0, 0,
	1241, 0, 0, 1265, 1290, 1220, 0, 1329, 1331, 0,
	1339, 0, 0, 0, 1506, 1510, 0, 1499, 1500, 1639,
	1512, 1530, -2, 0, 0, 1620, 1538, 1535, 1541, 1542,
	0, 325, 0, 320, 322, 0, 308, 0, 1523, 1525,
	0, 1048, 1051, 0, 0, 0, 0, 0, 0, 0,
	0, 275, 286, 1724, 312, 0, 840, 864, 940, 986,
	1125, 0, 0, 988, 0, 0, 1642, 1629, 1630, 1627,
	1356, 1936, 1940, 0, 0, 0, 1942, -2, 0, 1964,
	-2, -2, 2198, 2250, 2015, 1620, 2037, 2039, 2026, 2244,
	1884, 0, 2126, 2123, 0, 2110, 0, 2061, 2062, 0,
	0, 2065, 2067, 2068, 2069, 1823, 1816, 1815, 2223, 0,
	0, 0, 0, 2101, 1602, 0, 2115, 0, 0, 1670,
	2115, 2115, 1714, 0, 1716, 1683, 1671, 0, 1680, 0,
	2326, 1709, 1701, 0, 0, 334, 0, 338, 339, 373,
	0, 624, 625, 0, 0, 1757, 1762, 0, 1768, 1838,
	0, 0, 0, 0, 0, 241, 166, 167, 1368, 1372,
	1369, 0, 169, 0, 0, 1147, 0, 1150, 0, 0,
	0, 0, 1157, 1174, 0, 0, 0, 0, 0, 0,
	1176, 0, 1175, 0, 0, 1206, 0, 1344, 1351, 0,
	-2, 0, 0, 0, 176, 200, 0, 0, 0, 0,
	203, 1418, 178, 0, 0, 209, 209, 0, 0, 1360,
	1362, 1375, 0, 0, 0, 0, 154, 0, 0, 1378,
	1382, 1390, 1385, 1387, 1393, 0, 102, 0, 1496, 0,
	140, 0, 0, 0, 1395, 222, 223, 0, 209, 0,
	209, 215, 209, 1353, 0, 0, 0, 0, 0, 0,
	0, 1398, 1399, 243, 0, 0, 0, 0, 0, 245,
	318, 252, 392, 0, 1135, 0, 1202, 1194, 1195, 1196,
	0, 1106, 1201, 1203, 0, 0, 1111, 0, 0, 0,
	0, 1091, 1076, 0, 1087, 0, 0, 1104, 1079, 0,
	460, 477, 0, 480, 0, 483, 1065, 1238, 1282, 1220,
	1285, 0, 0, 1321, 0, 0, 0, 0, 0, 0,
	0, 1508, 1510, 0, 1501, 1502, 1532, 1638, 0, 0,
	0, 1520, 1639, 0, 327, 328, 0, 328, 288, 0,
	289, 290, 291, 298, 299, 300, 277, 278, 680, 682,
	0, 0, 688, 1124, 0, 0, 0, 0, 1628, 1944,
	-2, -2, 1965, 0, 2327, 2329, 1620, 0, 2112, 1622,
	0, 0, -2, 0, 0, 0, 1603, 1586, 0, 1661,
	1653, 1655, 1657, 2639, 2419, 2753, 1587, 1588, 1736, 0,
	0, 1704, 335, 1402, 626, 0, 0, 1764, 0, 631,
	0, 0, 0, 0, 0, 1370, 171, 0, 0, 1151,
	1152, 2301, 1154, 0, 1156, 1158, 1159, 1160, 0, 1163,
	0, 2350, 0, 1168, 1171, 1172, 0, 0, 1185, 1207,
	0, 1216, 0, 1346, 1356, 1350, 0, 1348, 1218, 0,
	175, 202, 177, 204, 199, 0, 1353, 0, 179, 189,
	0, 0, 122, 0, 0, 2413, 157, 155, 153, 100,
	1357, 143, 0, 124, 0, 224, 233, 1352, 235, 219,
	209, 0, 1379, 1383, 1391, 0, 1406, 1407, 1408, 1409,
	0, 0, 0, 0, 254, 0, 255, 258, 259, 0,
	0, 1079, 1134, 1078, 1193, 0, 1204, 1205, 0, 0,
	0, 0, 0, 0, 1081, 0, 1080, 0, 0, 0,
	0, 0, 461, 464, 0, 467, 0, 0, 0, 0,
	0, 1289, 0, 1332, 1330, 0, 1338, 0, 0, 0,
	1484, 0, 0, 1503, 1504, 484, 1526, 0, 0, 1532,
	1543, 307, 0, 310, 285, 0, 684, 0, 686, 0,
	987, 989, 0, 0, 2038, 2130, 0, 0, 2063, 2064,
	-2, 0, 2004, 2114, 2116, 0, 0, 0, 0, 0,
	1672, 1681, 1403, 1758, 638, 635, 637, 0, 1366, 0,
	1373, 211, 1149, 1153, 0, 0, 0, 1164, 1224, 0,
	0, 1241, 1241, 1177, 0, 0, 1210, 1211, 1131, 0,
	1212, 1213, 1214, 1345, 1631, 1351, 1187, 0, 0, 201,
	206, 0, 0, 0, 0, 0, 0, 142, 0, 213,
	236, 1353, 0, 1410, 1411, 0, 0, 251, 270, 0,
	1283, 1081, 0, 1112, 1115, 1116, 1117, 1118, 1119, 1120,
	1121, 1122, 1123, 1113, 1218, 0, 0, 1182, 1089, 0,
	1092, 0, 1088, 1085, 1086, 1077, 0, 465, 466, 481,
	0, 482, 0, 0, 1290, 0, 0, 1339, 0, 0,
	1491, 1483, 1510, 1505, 1506, 1755, 1529, 1533, 0, 683,
	0, 0, 997, 998, 0, 0, 0, 0, 2125, 1623,
	2005, 0, 0, 1656, 1658, 1659, 1660, 627, 0, 1367,
	183, 0, 0, 1162, 1229, 0, 0, 0, 0, 0,
	1178, 1208, 1209, 1206, 1130, 0, 1349, 1347, 0, 1220,
	181, 0, 1218, 0, 1140, 0, 0, 1143, 0, 0,
	158, 2413, 156, 0, 209, 1403, 209, 0, 273, 0,
	264, 262, 263, 1073, 0, 1198, 1200, 1216, 1218, 1131,
	0, 1093, 1135, 1091, 478, 1284, 1288, 1286, 1322, 1218,
	0, 1216, 0, 1498, 1510, 1492, 1493, 0, 1508, 0,
	328, 685, 687, 2122, 2142, 2131, -2, 2710, 2420, 0,
	2142, 2142, 2117, 2118, 0, 0, 0, 1165, 1225, 1226,
	0, 1221, 1222, 1223, 2349, 1166, 1167, 1169, 1170, 1755,
	0, 0, 1224, 205, 187, 1137, 0, 0, 1138, 0,
	0, 161, 0, 163, 237, 1401, 1404, 0, 260, 0,
	0, 1070, 1072, 1197, 0, 1131, 1216, 1079, 0, 0,
	0, 1079, 1081, 1216, 0, 1131, 0, 1487, 1497, 0,
	1507, 1484, 0, 309, 2127, 0, 0, 2133, 2134, 2135,
	2136, 2137, 2128, 2129, 639, 1155, 0, 1227, 0, 1228,
	0, 0, 0, 1186, 1215, 0, 1229, 1141, 0, 1144,
	0, 159, 0, 0, 268, 269, 1199, 1079, 1131, 1755,
	0, 1082, 0, 1084, 1081, 1090, 1131, 0, 1079, 0,
	1480, 1486, 1490, 2310, 1491, 1527, 0, 0, 2139, 2140,
	0, 0, 0, 1230, 0, 1233, 1234, 0, 1231, 0,
	1206, 0, 0, 209, 0, 1755, 1079, 1181, 1083, 1073,
	1079, 1218, 1755, 1216, 1498, 0, 2138, 2141, 2132, 1161,
	1232, 1235, 1236, 1217, 1188, 0, 0, 1405, 271, 0,
	1179, 1755, 1071, 1755, 1216, 1335, 1131, 1487, 1755, 1128,
	0, 0, 1180, 1333, 1131, 1079, 1481, 1528, 1142, 1127,
	0, 272, 1079, 1755, 0, 1755, 1336, 0, 1334, 1128,
	1145,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 593, 3, 599, 594, 3,
	605, 606, 597, 595, 610, 596, 607, 598, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 613, 3,
	585, 587, 586, 590, 609, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 603, 3, 604, 600, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 611, 592, 612, 588,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 578, 57921, 579, 57922, 580, 57923, 581, 57924, 582,
	57925, 583, 57926, 584, 57927, 589, 57928, 591, 57929, 601,
	57930, 602, 57931, 608, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1483
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1490
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1493
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1494
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1495
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1496
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1497
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1498
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1499
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1500
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1501
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1502
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1503
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1510
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1519
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1521
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1524
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1525
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1526
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1527
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1528
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1529
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1530
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1531
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1532
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1533
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 71:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1593
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 73:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1619
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 77:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1633
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 82:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1652
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1656
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 84:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1660
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 95:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1690
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 96:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1694
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.roleSpec()}
		}
	case 97:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1701
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1713
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1747
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1757
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1766
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1773
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1802
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 116:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1834
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1838
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 118:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1842
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1848
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1852
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1858
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1867
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1878
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1882
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1888
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1896
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1906
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1910
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1922
		{
			sqlVAL.union.val = tree.RelocateLease
		}
	case 134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1928
		{
			sqlVAL.union.val = tree.RelocateVoters
		}
	case 135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1932
		{

			sqlVAL.union.val = tree.RelocateVoters
		}
	case 136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1937
		{
			sqlVAL.union.val = tree.RelocateNonVoters
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1943
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    tree.TableIndexName{Table: name},
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1955
		{

			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:    sqlDollar[3].union.tableIndexName(),
				Rows:            sqlDollar[6].union.slct(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1976
		{
			var zoneName string
			switch e := sqlDollar[3].union.expr().(type) {
			case *tree.UnresolvedName:
				if e.NumParts != 1 {
					return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
				}
				zoneName = e.Parts[0]
			case tree.DefaultVal:
				zoneName = "default"
			default:
				return setErr(sqllex, errors.New("only simple names are supported in ALTER RANGE ... CONFIGURE ZONE"))
			}
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(zoneName)}
			sqlVAL.union.val = s
		}
	case 140:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1996
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[8].union.slct(),
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[6].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 141:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2005
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     tree.DNull,
				ToStoreID:       sqlDollar[7].union.expr(),
				SubjectReplicas: tree.RelocateLease,
			}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2016
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows:            sqlDollar[10].union.slct(),
				FromStoreID:     sqlDollar[6].union.expr(),
				ToStoreID:       sqlDollar[8].union.expr(),
				SubjectReplicas: sqlDollar[4].union.relocateSubject(),
			}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2025
		{
			sqlVAL.union.val = &tree.RelocateRange{
				Rows: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				FromStoreID:     sqlDollar[7].union.expr(),
				ToStoreID:       sqlDollar[9].union.expr(),
				SubjectReplicas: sqlDollar[5].union.relocateSubject(),
			}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2038
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2043
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2047
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 147:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2052
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 148:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2058
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2066
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2077
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2087
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 152:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2097
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 153:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2106
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 154:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2117
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 155:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2123
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 156:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2131
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2139
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 159:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2143
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 160:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2149
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2154
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 163:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2169
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2175
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2179
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2186
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2191
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2196
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2201
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2206
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2211
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2216
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2221
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2226
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2231
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 176:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2241
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2245
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 179:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2250
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2259
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 181:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2271
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 183:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2289
		{
			def := sqlDollar[7].union.constraintDef()
			def.SetName(tree.Name(sqlDollar[6].str))
			def.SetIfNotExists()
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      def,
				ValidationBehavior: sqlDollar[8].union.validationBehavior(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2299
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2302
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2308
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 187:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2315
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns: sqlDollar[7].union.idxElems(),
				Sharded: sqlDollar[9].union.shardedIndexDef(),
			}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2322
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2329
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 191:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2347
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2352
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2359
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2367
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2368
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2372
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 197:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2376
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2382
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2390
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 200:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2394
		{
			sqlVAL.union.val = nil
		}
	case 201:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2400
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2404
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = true
		}
	case 204:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2414
		{
			sqlVAL.union.val = false
		}
	case 205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2420
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2424
		{
			sqlVAL.union.val = nil
		}
	case 207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2431
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 208:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2435
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 209:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2439
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2445
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2449
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 212:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2485
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2496
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2505
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 216:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2515
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2524
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 218:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2533
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2542
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 220:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2546
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 221:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2549
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2553
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2560
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2567
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2573
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2580
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.RoleName,
				Name:         sqlDollar[1].str,
			}
		}
	case 227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2587
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.CurrentUser,
			}
		}
	case 228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = tree.RoleSpec{
				RoleSpecType: tree.SessionUser,
			}
		}
	case 229:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2601
		{
			sqlVAL.union.val = tree.RoleSpecList{sqlDollar[1].union.roleSpec()}
		}
	case 230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2605
		{
			sqlVAL.union.val = append(sqlDollar[1].union.roleSpecList(), sqlDollar[3].union.roleSpec())
		}
	case 238:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2626
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2633
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2637
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2641
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 242:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2645
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 243:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2688
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 244:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2700
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 245:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2710
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 246:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2721
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 247:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2730
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2734
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2738
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2746
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 251:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2750
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2754
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2761
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 254:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2765
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2774
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2778
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2782
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2786
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2790
		{
			sqlVAL.union.val = &tree.BackupOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 260:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2872
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabelSpec: *(sqlDollar[3].union.scheduleLabelSpec()),
				Recurrence:        sqlDollar[10].union.expr(),
				FullBackup:        sqlDollar[11].union.fullBackupClause(),
				To:                sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:           sqlDollar[6].union.targetListPtr(),
				BackupOptions:     *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions:   sqlDollar[12].union.kvOptions(),
			}
		}
	case 261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2883
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2888
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2892
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 264:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2908
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[1].union.expr(), IfNotExists: false}
		}
	case 266:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2912
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{Label: sqlDollar[4].union.expr(), IfNotExists: true}
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2916
		{
			sqlVAL.union.val = &tree.ScheduleLabelSpec{IfNotExists: false}
		}
	case 268:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2925
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2929
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2933
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 271:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2939
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 272:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2943
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 273:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2947
		{
			sqlVAL.union.val = nil
		}
	case 274:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2981
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 276:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3009
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 278:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3019
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 279:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3026
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3030
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3034
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3040
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3044
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 284:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3051
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3055
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 286:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3059
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3066
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 288:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3070
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3079
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3083
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3087
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3091
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3095
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3099
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3103
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3107
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3111
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3115
		{
			sqlVAL.union.val = &tree.RestoreOptions{DebugPauseOn: sqlDollar[3].union.expr()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3119
		{
			sqlVAL.union.val = &tree.RestoreOptions{NewDBName: sqlDollar[3].union.expr()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3123
		{
			sqlVAL.union.val = &tree.RestoreOptions{IncrementalStorage: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3128
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 302:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3134
		{
			return unimplemented(sqllex, "alter function")
		}
	case 303:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3138
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 304:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3142
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3179
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3184
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 307:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3188
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 308:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3194
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 309:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3199
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3204
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3208
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 312:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3225
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 313:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3228
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3232
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 315:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3236
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3244
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3248
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3254
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3258
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 320:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3264
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 321:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3268
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 322:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3276
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 324:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 326:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3292
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3296
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 328:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3300
		{
			sqlVAL.union.val = nil
		}
	case 329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3312
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3326
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3332
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 332:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3336
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 333:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3342
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3346
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 335:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 336:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 337:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3362
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3366
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3370
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3378
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 343:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3379
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3380
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 347:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3381
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3382
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3392
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3400
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3402
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3406
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3409
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3419
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3428
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3438
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3442
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3445
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 360:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3464
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3472
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 364:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3478
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3481
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 366:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3489
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.CancelJob}
		}
	case 367:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3492
		{
			return helpWith(sqllex, "CANCEL ALL JOBS")
		}
	case 368:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3496
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 369:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3500
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 370:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3504
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 371:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3508
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 372:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3521
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 373:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3526
		{
			sqlVAL.union.val = &tree.CommentOnConstraint{Constraint: tree.Name(sqlDollar[4].str), Table: sqlDollar[6].union.unresolvedObjectName(), Comment: sqlDollar[8].union.strPtr()}
		}
	case 374:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3529
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3533
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3538
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 378:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3550
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3552
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3553
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3556
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3557
		{
		}
	case 389:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3558
		{
			return helpWith(sqllex, "CREATE")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3565
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3568
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 392:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3571
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3572
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 394:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3575
		{
			return unimplemented(sqllex, "create access method")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3576
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3577
		{
			return unimplemented(sqllex, "create cast")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3578
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3579
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3580
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3581
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3582
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3583
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 403:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3584
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3585
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 405:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3586
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 406:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3587
		{
			return unimplemented(sqllex, "create publication")
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3588
		{
			return unimplemented(sqllex, "create rule")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3589
		{
			return unimplemented(sqllex, "create server")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3590
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3591
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3592
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3593
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3596
		{
		}
	case 414:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3597
		{
		}
	case 415:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3600
		{
		}
	case 416:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3601
		{
		}
	case 417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3604
		{
		}
	case 418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3605
		{
		}
	case 419:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3608
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3609
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3610
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3611
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3612
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3613
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3614
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 426:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3615
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 427:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3616
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 428:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3617
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3618
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 430:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3619
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3620
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3621
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3622
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3623
		{
			return unimplemented(sqllex, "drop server")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3624
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3625
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 437:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3626
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3629
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 441:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3630
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3631
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3632
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3633
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3635
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3636
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3637
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3638
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 455:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3648
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3656
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 457:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3660
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 458:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3664
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3670
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 460:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3674
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3683
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3690
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3696
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 464:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3702
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3706
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 466:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3717
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3729
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3744
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 469:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3752
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3762
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3766
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3772
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3776
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3783
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3787
		{

			sqlVAL.union.val = nil
		}
	case 476:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3804
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 478:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 479:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3823
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 480:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 481:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3834
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3843
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 483:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3847
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 484:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3860
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 485:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3870
		{
			return helpWith(sqllex, "DELETE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3873
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3874
		{
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3882
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3885
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3886
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 491:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3887
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3888
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3889
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3898
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3899
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 499:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3900
		{
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3901
		{
			return helpWith(sqllex, "DROP")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3904
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 504:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3905
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 506:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3906
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 510:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3908
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 512:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3909
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3910
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 515:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3918
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3922
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 517:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3926
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3935
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3943
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3951
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3955
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3958
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3966
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3970
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3973
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 526:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3981
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3990
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3998
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4006
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4014
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4021
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4028
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4036
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4043
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 535:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4047
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 536:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4053
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4057
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 538:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4066
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 539:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4074
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4089
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.roleSpecList(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4093
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.roleSpecList(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4096
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 544:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4100
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4105
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 546:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4118
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4123
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 548:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 549:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4130
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 550:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4134
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4157
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4164
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 553:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4166
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 554:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4174
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 555:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4182
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 556:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4190
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 557:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4198
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 558:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4209
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 563:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4220
		{
			return helpWith(sqllex, "DELETE")
		}
	case 570:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4222
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4223
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4224
		{
			return helpWith(sqllex, "INSERT")
		}
	case 578:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4227
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4229
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4232
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 587:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4237
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4238
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4239
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4244
		{
			return helpWith(sqllex, "DELETE")
		}
	case 595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4245
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4246
		{
			return helpWith(sqllex, "INSERT")
		}
	case 598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4252
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4253
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4257
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4261
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 606:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4271
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4279
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4287
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4291
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 610:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4295
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 611:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4305
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4312
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4320
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 614:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4324
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 615:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4328
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 616:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4338
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 617:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4342
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 618:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4346
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4350
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4353
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4376
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), WithGrantOption: sqlDollar[7].union.bool()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4380
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4384
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: true}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4388
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), WithGrantOption: sqlDollar[8].union.bool()}
		}
	case 625:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:4392
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:        sqlDollar[7].union.roleSpecList(),
				WithGrantOption: sqlDollar[8].union.bool(),
			}
		}
	case 626:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4403
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 627:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:4407
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:        sqlDollar[10].union.roleSpecList(),
				WithGrantOption: sqlDollar[11].union.bool(),
			}
		}
	case 628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4419
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			return helpWith(sqllex, "GRANT")
		}
	case 630:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4445
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.roleSpecList(), Targets: sqlDollar[4].union.targetList(), GrantOptionFor: false}
		}
	case 631:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4449
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Grantees: sqlDollar[9].union.roleSpecList(), Targets: sqlDollar[7].union.targetList(), GrantOptionFor: true}
		}
	case 632:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4453
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.roleSpecList(), AdminOption: false}
		}
	case 633:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4457
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.roleSpecList(), AdminOption: true}
		}
	case 634:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4461
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.roleSpecList(), GrantOptionFor: false}
		}
	case 635:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4465
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[5].union.privilegeList(), Targets: sqlDollar[8].union.targetList(), Grantees: sqlDollar[10].union.roleSpecList(), GrantOptionFor: true}
		}
	case 636:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[7].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 637:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4480
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[8].union.objectNamePrefixList(),
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 638:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4491
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[10].union.roleSpecList(),
				GrantOptionFor: false,
			}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:4503
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[5].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[11].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees:       sqlDollar[13].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4515
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4518
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 642:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4524
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 643:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4528
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 644:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4542
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4556
		{
			return helpWith(sqllex, "RESET")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4557
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 654:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4565
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 655:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4569
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 656:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4572
		{
			return helpWith(sqllex, "RESET")
		}
	case 657:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4580
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4583
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4594
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4597
		{
			return helpWith(sqllex, "USE")
		}
	case 662:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4601
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4602
		{
		}
	case 664:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4603
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 666:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4607
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 668:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4608
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 670:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 672:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4610
		{
			return helpWith(sqllex, "USE")
		}
	case 675:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4626
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4641
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4644
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 678:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4662
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 679:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4670
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4674
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 681:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4678
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4684
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4688
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4694
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4698
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4702
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4706
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4721
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4724
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4734
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4750
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 695:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4753
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4755
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 697:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4758
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 698:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4761
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 699:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4775
		{
			ret := sqlDollar[3].union.setVar()
			ret.Local = true
			sqlVAL.union.val = ret
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4780
		{
			return helpWith(sqllex, "SET LOCAL")
		}
	case 701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4797
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4800
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 703:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4802
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 704:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4805
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4809
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4828
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 708:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4832
		{
			return unimplemented(sqllex, "set from current")
		}
	case 709:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4850
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 713:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4855
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 714:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4871
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4876
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 718:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4883
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4887
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4893
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 721:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 723:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4904
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 726:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4925
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 727:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4929
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4935
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4939
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4943
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 731:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4947
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4951
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4957
		{
			sqlVAL.union.val = tree.Low
		}
	case 734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4961
		{
			sqlVAL.union.val = tree.Normal
		}
	case 735:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4965
		{
			sqlVAL.union.val = tree.High
		}
	case 736:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4976
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4980
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4984
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4989
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4993
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5008
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5009
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5010
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5011
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 751:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5013
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 755:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5014
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 757:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5015
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5016
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5018
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5019
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5020
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5021
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5022
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 773:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5024
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 775:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5025
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5026
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5028
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 783:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5030
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 785:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5031
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 787:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5032
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5033
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5035
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5036
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 797:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5037
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5038
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5039
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 803:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5040
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5041
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 807:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5042
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 809:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 810:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5044
		{
			return helpWith(sqllex, "SHOW")
		}
	case 814:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5047
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 815:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5052
		{
		}
	case 816:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5053
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 817:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5056
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 818:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5060
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 819:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5065
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 820:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5070
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5075
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5080
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 823:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5090
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5091
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 825:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5092
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 827:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5097
		{
			sqlVAL.str = sqlDollar[1].str + "." + strings.Join(sqlDollar[2].union.strs(), ".")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5107
		{
			sqlVAL.str = "client_encoding"
		}
	case 835:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5113
		{
			sqlVAL.str = "timezone"
		}
	case 836:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5114
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 837:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5118
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5122
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 839:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5138
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 840:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5142
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5146
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5157
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 845:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5179
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5187
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5196
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5205
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 849:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5214
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5232
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 853:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5239
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 854:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5241
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 855:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5244
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5246
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5250
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5253
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5261
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5264
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 861:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5272
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 862:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5276
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5280
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 864:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5284
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5298
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5304
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.roleSpecList(),
			}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5309
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 870:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5314
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 871:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5321
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 872:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5325
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 873:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5335
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 875:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5351
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5354
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 877:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5367
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.roleSpecList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.roleSpecList()}
			}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5375
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5383
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5386
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5388
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5392
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5396
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5399
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 885:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5401
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 886:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5405
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5408
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5416
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5419
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5421
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5424
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5432
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5435
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5437
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 895:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5440
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 896:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5444
		{
			sqlVAL.union.val = true
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5446
		{
			sqlVAL.union.val = true
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5448
		{
			sqlVAL.union.val = false
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5465
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 902:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5469
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5473
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 904:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5476
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5477
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5478
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5480
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 908:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5484
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5488
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 910:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5492
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5495
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5497
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5505
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 914:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5513
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5521
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5522
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5532
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5538
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5540
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 920:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5546
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5548
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5554
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 923:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5558
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 924:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5562
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 925:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5568
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 926:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5572
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 927:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5576
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 928:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5587
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5590
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5592
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5595
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5597
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5601
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 934:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5604
		{
			sqlVAL.union.val = true
		}
	case 935:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5605
		{
			sqlVAL.union.val = false
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5613
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5616
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 938:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5618
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5621
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 940:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5629
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 941:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5639
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5649
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5652
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5659
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5662
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5667
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5670
		{
			sqlVAL.union.val = true
		}
	case 949:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = false
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5678
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5682
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5685
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5692
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5696
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5699
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5706
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5710
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 958:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5714
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5721
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 960:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5725
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 961:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5736
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5739
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5747
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5752
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 965:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5757
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5761
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 967:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5773
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 968:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5777
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 969:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5782
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5787
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5792
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5797
		{
			sqlVAL.union.val = &tree.ShowCreateAllSchemas{}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5801
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5805
		{
			sqlVAL.union.val = &tree.ShowCreateAllTypes{}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5808
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5818
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5821
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5826
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5834
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5837
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5845
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5848
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5858
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5862
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5866
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5874
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 988:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5882
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 989:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5889
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5895
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5897
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5900
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5902
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5905
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 996:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5909
		{
		}
	case 997:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5918
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5926
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5932
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 1000:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5941
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5946
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5950
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 1003:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5953
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5962
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 1005:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5966
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5982
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5988
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 1008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5994
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6000
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 1010:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6007
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6012
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6016
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6022
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6029
		{
			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6035
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6040
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6160
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6164
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6168
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6207
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6211
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6216
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6220
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6228
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6237
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.roleSpecList()}
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6241
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6245
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6252
		{
			sqlVAL.union.val = sqlDollar[2].union.roleSpecList()
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6256
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6269
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6270
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6271
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6272
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6282
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6283
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6284
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6285
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6293
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.ResumeJob}
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6296
		{
			return helpWith(sqllex, "RESUME ALL JOBS")
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6315
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6324
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6326
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6330
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6334
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6337
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6342
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6346
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6361
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6369
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6371
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6377
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6385
		{
			sqlVAL.union.val = &tree.ControlJobsOfType{Type: sqlDollar[3].str, Command: tree.PauseJob}
		}
	case 1061:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6388
		{
			return helpWith(sqllex, "PAUSE ALL JOBS")
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6397
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6403
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6410
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.roleSpec(),
			}
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6417
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.roleSpec(),
			}
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6424
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6435
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6444
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.roleSpec(),
				},
			}
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6452
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6488
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[9].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				OnCommit:         sqlDollar[11].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[12].union.locality(),
			}
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:6503
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[12].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[13].union.storageParams(),
				OnCommit:         sqlDollar[14].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[15].union.locality(),
			}
		}
	case 1072:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1073:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6524
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6531
		{

			sqlVAL.union.val = nil
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6537
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6543
		{
			sqlVAL.str = ""
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6547
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6553
		{
			sqlVAL.union.val = nil
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6557
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6562
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6566
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6570
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6574
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6580
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6584
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6590
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6594
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6600
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6613
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6627
		{
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6628
		{
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6629
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1094:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6647
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6648
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1096:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6653
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6654
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6655
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6656
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6657
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6662
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6668
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6672
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6684
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6697
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6706
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6710
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6716
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6721
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6722
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6723
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6724
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6725
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6727
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6728
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6729
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6741
		{
			sqlVAL.str = ""
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6754
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6762
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6768
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6774
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6780
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6809
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6816
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6826
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6832
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6842
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1145:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6852
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6866
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6877
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6881
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6887
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6895
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6899
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6903
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6907
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6911
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6929
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6933
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6937
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6941
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6958
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6962
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6966
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6970
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6980
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6984
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6988
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6993
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6999
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7005
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7009
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7015
		{

			sqlVAL.union.val = true
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7020
		{
			sqlVAL.union.val = false
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7025
		{
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7029
		{
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7032
		{
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
				StorageParams:    sqlDollar[9].union.storageParams(),
				Predicate:        sqlDollar[10].union.expr(),
			}
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7048
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
					StorageParams:    sqlDollar[10].union.storageParams(),
					Predicate:        sqlDollar[11].union.expr(),
				},
			}
		}
	case 1181:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7062
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1182:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7075
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7087
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7098
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7105
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
					Predicate:        sqlDollar[9].union.expr(),
				},
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7117
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
					Sharded: sqlDollar[6].union.shardedIndexDef(),
				},
				PrimaryKey: true,
			}
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7128
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7139
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7146
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7150
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7156
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7166
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7181
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7188
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7194
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7205
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7209
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7215
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7221
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7225
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7231
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7235
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7241
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7246
		{
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7247
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7248
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7249
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7250
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7269
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7273
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7279
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7285
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7291
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7295
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7315
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7319
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7323
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7327
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7336
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7340
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7344
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7348
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7352
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7358
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7364
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7372
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7380
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7384
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7388
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7408
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7417
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7425
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7429
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7432
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7433
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7436
		{

			parsedType := sqlDollar[2].union.colType()
			if parsedType.Family() != types.IntFamily {
				sqllex.Error(fmt.Sprintf("invalid integer type: %s", parsedType.SQLString()))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptAs, AsIntegerType: parsedType}
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7445
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7447
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7449
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7459
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7461
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7463
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7465
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7467
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7468
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7470
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7471
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7473
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7475
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7483
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7486
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7490
		{

			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[2].str), Value: sqlDollar[3].union.expr()}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7510
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7514
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.roleSpec(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7517
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7528
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.roleSpec(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7532
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.roleSpec(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7536
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.roleSpec(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7540
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.roleSpec(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7544
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7548
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7551
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7555
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1275:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7559
		{
			sqlVAL.str = ""
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7565
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7569
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7573
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7581
		{
			sqlVAL.union.val = true
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7585
		{

			sqlVAL.union.val = true
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7590
		{
			sqlVAL.union.val = false
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7600
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7614
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7626
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7638
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7648
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7658
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7662
		{
			return unimplementedWithIssue(sqllex, 74083)
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7666
		{
			sqlVAL.union.val = true
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7670
		{
			sqlVAL.union.val = true
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7676
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7680
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7684
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7688
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7692
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7696
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7700
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7704
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7708
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7712
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7716
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7720
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7732
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7736
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7740
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7752
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7760
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7764
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7770
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7774
		{
			sqlVAL.union.val = nil
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7780
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: sqlDollar[3].union.expr()}
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7784
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name("valid until"), Value: tree.DNull}
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7789
		{
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7790
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7799
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7807
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7815
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7817
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7819
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7821
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7823
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7825
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7829
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7833
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7839
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7843
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7860
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7877
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-15 : sqlpt+1]
//line sql-gen.y:7895
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				PartitionByIndex: sqlDollar[13].union.partitionByIndex(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				Predicate:        sqlDollar[15].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-18 : sqlpt+1]
//line sql-gen.y:7911
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				PartitionByIndex: sqlDollar[16].union.partitionByIndex(),
				StorageParams:    sqlDollar[17].union.storageParams(),
				Predicate:        sqlDollar[18].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7927
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7931
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7946
		{
			sqlVAL.union.val = false
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7952
		{
			sqlVAL.union.val = true
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7956
		{
			sqlVAL.union.val = false
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7962
		{
			sqlVAL.union.val = true
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7966
		{
			sqlVAL.union.val = false
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7972
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7976
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7985
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7991
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7997
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8005
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8029
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8030
		{
			sqlVAL.str = ""
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8034
		{
			sqlVAL.str = ""
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8038
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8042
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8046
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8052
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8058
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8064
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8070
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8078
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8084
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8092
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8100
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8110
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8116
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8129
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8142
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8148
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8154
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8160
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8169
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
			}
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8177
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
			}
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8187
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8193
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8209
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8221
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.roleSpec(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8230
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.roleSpec(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.roleSpec(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.roleSpec(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8261
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8267
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8275
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.roleSpec(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.roleSpec(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8295
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8301
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8313
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8319
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8333
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8339
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8347
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8351
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8363
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8372
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.roleSpecList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8381
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8390
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1400:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8398
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8402
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.roleSpecList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1402:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8413
		{
			sqlVAL.union.val = true
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8417
		{
			sqlVAL.union.val = false
		}
	case 1404:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8423
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.roleSpecList(),
			}
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8431
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.roleSpecList(),
				GrantOptionFor: true,
			}
		}
	case 1406:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8442
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8446
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8450
		{
			sqlVAL.union.val = tree.Types
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8458
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8462
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = sqlDollar[3].union.roleSpecList()
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8471
		{
			sqlVAL.union.val = tree.RoleSpecList(nil)
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8477
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8481
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8486
		{
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8487
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8490
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8491
		{
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8499
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8502
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8512
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8520
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8522
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8529
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8550
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8552
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8558
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8579
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8581
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8587
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8595
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8598
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8602
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8603
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8604
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8620
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8623
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1446:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8628
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1449:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8641
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8643
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8646
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8650
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8655
		{
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8656
		{
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8657
		{
		}
	case 1456:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8667
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8674
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8677
		{
		}
	case 1460:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8678
		{
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8682
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8686
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8692
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8696
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8702
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8706
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8719
		{
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8721
		{
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8725
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8734
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8738
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8742
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8748
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8754
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8760
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8764
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8770
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8774
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8784
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8799
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8814
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8819
		{
			sqlVAL.str = ""
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8824
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1487:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8831
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8837
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8842
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8849
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8853
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8859
		{

		}
	case 1494:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8866
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8870
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8874
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8883
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8889
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8893
		{
			sqlVAL.str = ""
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1502:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8903
		{
			sqlVAL.str = ""
		}
	case 1503:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8913
		{
			sqlVAL.str = ""
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8919
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8923
		{
			sqlVAL.str = ""
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8929
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8937
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8942
		{
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8943
		{
		}
	case 1511:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8958
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8965
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8972
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8983
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8990
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8994
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9003
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9014
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9018
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9022
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9028
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9032
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9052
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9056
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9063
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:9071
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9079
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9083
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9092
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:9109
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9121
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9124
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9127
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9133
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9137
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1541:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9150
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9153
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9157
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9168
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.roleSpecList(),
				NewRole:  sqlDollar[6].union.roleSpec(),
			}
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9174
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1546:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9183
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.roleSpecList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9189
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9230
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9236
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9255
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9263
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9267
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9271
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9275
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9279
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9283
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9289
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9292
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9293
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9297
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9301
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9307
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9316
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9317
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9318
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9319
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9322
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9323
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9326
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9327
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9328
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9333
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9368
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9369
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9370
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9392
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9405
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9419
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9431
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9435
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9453
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9468
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9475
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9496
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1598:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9502
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9512
		{
			sqlVAL.union.val = true
		}
	case 1601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9516
		{
			sqlVAL.union.val = false
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9522
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9532
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9544
		{
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9545
		{
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9549
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9553
		{
			sqlVAL.union.val = nil
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9558
		{
		}
	case 1609:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9559
		{
		}
	case 1610:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9563
		{
			sqlVAL.union.val = true
		}
	case 1611:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9567
		{
			sqlVAL.union.val = false
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9571
		{
			sqlVAL.union.val = false
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = true
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9583
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9588
		{
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9589
		{
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9592
		{
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9593
		{
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9597
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9601
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9607
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9613
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9617
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9624
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9628
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9634
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9646
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9651
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9663
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9667
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9671
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9677
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9686
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9697
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9698
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9702
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9706
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9710
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9724
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9728
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9736
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9743
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9765
		{
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9766
		{
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9769
		{
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9770
		{
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9787
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9791
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9796
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9797
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9803
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9804
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9805
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9806
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9810
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9814
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9836
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9838
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9853
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9855
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9861
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9865
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9871
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9875
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9880
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9885
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9891
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9896
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9901
		{
			sqlVAL.union.val = &tree.IndexFlags{NoFullScan: true}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9906
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1679:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9912
		{
			sqlVAL.union.val = &tree.IndexFlags{ForceZigzag: true}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexes: []tree.UnrestrictedName{tree.UnrestrictedName(sqlDollar[3].str)}}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9922
		{

			sqlVAL.union.val = &tree.IndexFlags{ZigzagIndexIDs: []tree.IndexID{tree.IndexID(sqlDollar[4].union.int64())}}
		}
	case 1682:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9934
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9945
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9949
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9953
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9961
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9995
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10005
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10015
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10023
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10036
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10040
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10051
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10075
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10081
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10092
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10096
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10102
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10104
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10108
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10114
		{
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10116
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10119
		{
			sqlVAL.union.val = nil
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10121
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10125
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10135
		{
			sqlVAL.union.val = true
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10139
		{
			sqlVAL.union.val = false
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10159
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1713:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10163
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10167
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10171
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10175
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10179
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10185
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10189
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10196
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10202
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10209
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1725:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10215
		{
			sqlVAL.str = tree.AstFull
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10219
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10223
		{
			sqlVAL.str = tree.AstRight
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10227
		{
			sqlVAL.str = tree.AstInner
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10233
		{
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10234
		{
		}
	case 1731:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10258
		{
			sqlVAL.str = tree.AstHash
		}
	case 1732:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10262
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1733:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10266
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1734:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10270
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10274
		{
			sqlVAL.str = ""
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10287
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10308
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10322
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10326
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10332
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10338
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10348
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10358
		{
			sqlVAL.union.val = true
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10362
		{
			sqlVAL.union.val = false
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10368
		{
			sqlVAL.union.val = true
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10372
		{
			sqlVAL.union.val = false
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10378
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10385
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10397
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10410
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10418
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10419
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10429
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10436
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10437
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10439
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10447
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10448
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10460
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10467
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10476
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.QChar
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10516
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10521
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10528
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1777:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10529
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1778:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10532
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1779:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10533
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1780:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10534
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10535
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10536
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10539
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10540
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10541
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10542
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10544
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10545
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10546
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10547
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10548
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10549
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10550
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10551
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10552
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10553
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10554
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10555
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10556
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10557
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10558
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10559
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10560
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10561
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10562
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1809:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10563
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10566
		{
			sqlVAL.union.val = types.Geography
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10568
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10570
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10574
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10578
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10586
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10612
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10620
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10628
		{
			sqlVAL.union.val = nil
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10635
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10639
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10643
		{
			sqlVAL.union.val = types.Int2
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10647
		{
			sqlVAL.union.val = types.Int
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10651
		{
			sqlVAL.union.val = types.Float4
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10655
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10659
		{
			sqlVAL.union.val = types.Float
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10663
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10671
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10679
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10687
		{
			sqlVAL.union.val = types.Bool
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10706
		{
			sqlVAL.union.val = types.Float
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10712
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10718
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1840:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10726
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10730
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10734
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10740
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1844:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10752
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10758
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10762
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10766
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10770
		{
			sqlVAL.union.val = types.String
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10779
		{
			sqlVAL.union.val = true
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10780
		{
			sqlVAL.union.val = false
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10785
		{
			sqlVAL.union.val = types.Date
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10789
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10797
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10809
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10811
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10820
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10828
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10845
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10855
		{
			sqlVAL.union.val = true
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10856
		{
			sqlVAL.union.val = false
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = false
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = types.Interval
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10869
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10880
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10888
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10896
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10904
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10912
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10920
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10926
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10935
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10944
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10953
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10959
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10968
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10974
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10984
		{
			sqlVAL.union.val = nil
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10990
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10998
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11058
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11087
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11091
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11095
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11099
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11103
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11107
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11111
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11115
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11119
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11123
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11127
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11131
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11135
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11139
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11143
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11147
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11151
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11155
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11159
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11163
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11167
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11171
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11175
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11179
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11183
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11187
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11191
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11195
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11199
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11203
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11207
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11215
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11225
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11229
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11233
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11237
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11241
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1934:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11245
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11249
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11253
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11257
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11261
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11265
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11269
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11273
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11277
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11281
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11285
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11289
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11293
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11297
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11301
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11305
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.EQ),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11313
		{
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator: tree.MakeComparisonOperator(tree.NE),
				Left:     sqlDollar[1].union.expr(),
				Right:    tree.NewNumVal(constant.MakeFloat64(math.NaN()), "NaN", false),
			}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11321
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11325
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11329
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11333
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11336
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11338
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11342
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11346
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11350
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11354
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11358
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11362
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11366
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1965:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1967:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11386
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11390
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11394
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11398
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11402
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11419
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11424
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11436
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11440
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11444
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11448
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11472
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11476
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1987:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11480
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11484
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11488
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11492
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11496
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11500
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11504
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11508
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11512
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11516
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11520
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11524
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11528
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11532
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11540
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11550
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11554
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11558
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11562
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11576
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11584
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11620
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11624
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11628
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11632
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11636
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11641
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11643
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11647
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11651
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11655
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11659
		{
			sqlVAL.union.val = tree.DNull
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11663
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11667
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11676
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11683
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11687
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11691
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			if idx <= 0 {
				err := errors.New("invalid numeric tuple index: indexes must be > 0")
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11701
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11706
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2030:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11710
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11722
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11725
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11729
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11733
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11736
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11737
		{
			return unimplemented(sqllex, "variadic")
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11739
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11745
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11749
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11752
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11761
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.QChar, SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11814
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11827
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11839
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11848
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11849
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11854
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11858
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11862
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11868
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11872
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11876
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11880
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11884
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11888
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11894
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11898
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("session_user")}
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11902
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11910
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11918
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11926
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11934
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11938
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11942
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11952
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11954
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11957
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11959
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11963
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11966
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11968
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11972
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11975
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2082:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11984
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11986
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11990
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11993
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11995
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11998
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12000
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12003
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12008
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12010
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12013
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12015
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12018
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12020
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12024
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12027
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12028
		{
			return unimplemented(sqllex, "treat")
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12030
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12034
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2104:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12038
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12042
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12046
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12049
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12051
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12054
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12060
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12064
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12070
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12074
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12081
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12101
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:12124
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12144
		{
			sqlVAL.str = ""
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12150
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12154
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12160
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12168
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12176
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12184
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12190
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12203
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12235
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12239
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12243
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12250
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12259
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12263
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12271
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12276
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12289
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12293
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12300
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2147:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12312
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2148:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12316
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12320
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12337
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12338
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12339
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12341
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12342
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12343
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12345
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12346
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12347
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2162:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12349
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12350
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12351
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12353
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12354
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12355
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12356
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12357
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12359
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12360
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2174:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12361
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2175:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12362
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12363
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2177:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2178:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12365
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2179:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12366
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2180:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12367
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2181:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12368
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12369
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12371
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12376
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12392
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12399
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12400
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12401
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12402
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12425
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12429
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12435
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12439
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12443
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12454
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12458
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12464
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12468
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12475
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12481
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2206:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12485
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12491
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12495
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12501
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2210:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12505
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12511
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12515
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12521
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12525
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12548
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12552
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12556
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12562
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12569
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12573
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2229:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12590
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12594
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12598
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12602
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12606
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12618
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12624
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2237:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2238:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12632
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2239:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12638
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12650
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2242:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12657
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2243:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12661
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12667
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12673
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12677
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12684
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12690
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12694
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2252:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12701
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2253:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12707
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2254:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12711
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2255:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12716
		{
		}
	case 2256:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12717
		{
		}
	case 2257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12721
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2258:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12725
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2259:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12731
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2260:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12740
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12744
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12748
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12756
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2264:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12760
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12766
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2266:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12770
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2267:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12789
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12797
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12820
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12829
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12833
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12837
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12841
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2275:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12847
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12851
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2281:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12866
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12870
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12882
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12886
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12895
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12906
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12915
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12923
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12940
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2310:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13025
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2312:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13033
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13037
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13043
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13047
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2317:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13055
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2323:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13082
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2325:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13089
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13093
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13097
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2329:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:13111
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2330:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13115
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2331:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13119
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2332:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13132
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2334:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13141
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2338:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:13159
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2339:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13172
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2340:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:13179
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2348:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13204
		{
			sqlVAL.str = ""
		}
	case 2349:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:13210
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2350:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:13214
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
