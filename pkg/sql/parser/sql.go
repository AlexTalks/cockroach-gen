// Code generated by goyacc. DO NOT EDIT.
// GENERATED FILE DO NOT EDIT
// Code generated by goyacc -p sql -o sql.go.tmp sql-gen.y. DO NOT EDIT.

//line sql-gen.y:24
package parser

import (
	"fmt"
	__yyfmt__ "fmt"
	"go/constant"
	"strings"

	"github.com/cockroachdb/cockroach/pkg/geo/geopb"
	"github.com/cockroachdb/cockroach/pkg/roachpb"
	"github.com/cockroachdb/cockroach/pkg/security"
	"github.com/cockroachdb/cockroach/pkg/sql/lexbase"
	"github.com/cockroachdb/cockroach/pkg/sql/privilege"
	"github.com/cockroachdb/cockroach/pkg/sql/scanner"
	"github.com/cockroachdb/cockroach/pkg/sql/sem/tree"
	"github.com/cockroachdb/cockroach/pkg/sql/types"
	"github.com/cockroachdb/errors"
	"github.com/lib/pq/oid"
)

//line sql-gen.y:24

const MaxUint = ^uint(0)

const MaxInt = int(MaxUint >> 1)

func unimplemented(sqllex sqlLexer, feature string) int {
	sqllex.(*lexer).Unimplemented(feature)
	return 1
}

func purposelyUnimplemented(sqllex sqlLexer, feature string, reason string) int {
	sqllex.(*lexer).PurposelyUnimplemented(feature, reason)
	return 1
}

func setErr(sqllex sqlLexer, err error) int {
	sqllex.(*lexer).setErr(err)
	return 1
}

func unimplementedWithIssue(sqllex sqlLexer, issue int) int {
	sqllex.(*lexer).UnimplementedWithIssue(issue)
	return 1
}

func unimplementedWithIssueDetail(sqllex sqlLexer, issue int, detail string) int {
	sqllex.(*lexer).UnimplementedWithIssueDetail(issue, detail)
	return 1
}

func processBinaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	lhs tree.Expr,
	rhs tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.BinaryOperator:
		op.IsExplicitOperator = true
		return &tree.BinaryExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.ComparisonOperator:
		op.IsExplicitOperator = true
		return &tree.ComparisonExpr{Operator: op, Left: lhs, Right: rhs}, 0
	case tree.UnaryOperator:

		switch op.Symbol {
		case tree.UnaryComplement:
			return &tree.ComparisonExpr{
				Operator: tree.ComparisonOperator{
					Symbol:             tree.RegMatch,
					IsExplicitOperator: true,
				},
				Left:  lhs,
				Right: rhs,
			}, 0
		default:
			sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
			return nil, -1
		}
	default:
		sqllex.Error(fmt.Sprintf("unknown binary operator %s", op))
		return nil, 1
	}
}

func processUnaryQualOp(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	e, code := processUnaryQualOpInternal(sqllex, op, expr)
	if code != 0 {
		return e, code
	}
	if e, ok := e.(*tree.UnaryExpr); ok {
		e.Operator.IsExplicitOperator = true
	}
	return e, code
}

func processUnaryQualOpInternal(
	sqllex sqlLexer,
	op tree.Operator,
	expr tree.Expr,
) (tree.Expr, int) {
	switch op := op.(type) {
	case tree.UnaryOperator:
		return &tree.UnaryExpr{Operator: op, Expr: expr}, 0
	case tree.BinaryOperator:

		switch op.Symbol {
		case tree.Plus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryPlus),
				Expr:     expr,
			}, 0
		case tree.Minus:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryMinus),
				Expr:     expr,
			}, 0
		}
	case tree.ComparisonOperator:
		switch op.Symbol {
		case tree.RegMatch:
			return &tree.UnaryExpr{
				Operator: tree.MakeUnaryOperator(tree.UnaryComplement),
				Expr:     expr,
			}, 0
		}
	}
	sqllex.Error(fmt.Sprintf("unknown unary operator %s", op))
	return nil, 1
}

//line sql-gen.y:165

var _ scanner.ScanSymType = &sqlSymType{}

func (s *sqlSymType) ID() int32 {
	return s.id
}

func (s *sqlSymType) SetID(id int32) {
	s.id = id
}

func (s *sqlSymType) Pos() int32 {
	return s.pos
}

func (s *sqlSymType) SetPos(pos int32) {
	s.pos = pos
}

func (s *sqlSymType) Str() string {
	return s.str
}

func (s *sqlSymType) SetStr(str string) {
	s.str = str
}

func (s *sqlSymType) UnionVal() interface{} {
	return s.union.val
}

func (s *sqlSymType) SetUnionVal(val interface{}) {
	s.union.val = val
}

type sqlSymUnion struct {
	val interface{}
}

func (u *sqlSymUnion) numVal() *tree.NumVal {
	return u.val.(*tree.NumVal)
}
func (u *sqlSymUnion) strVal() *tree.StrVal {
	if stmt, ok := u.val.(*tree.StrVal); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) placeholder() *tree.Placeholder {
	return u.val.(*tree.Placeholder)
}
func (u *sqlSymUnion) auditMode() tree.AuditMode {
	return u.val.(tree.AuditMode)
}
func (u *sqlSymUnion) bool() bool {
	return u.val.(bool)
}
func (u *sqlSymUnion) strPtr() *string {
	return u.val.(*string)
}
func (u *sqlSymUnion) strs() []string {
	return u.val.([]string)
}
func (u *sqlSymUnion) user() security.SQLUsername {
	return u.val.(security.SQLUsername)
}
func (u *sqlSymUnion) userPtr() *security.SQLUsername {
	return u.val.(*security.SQLUsername)
}
func (u *sqlSymUnion) users() []security.SQLUsername {
	return u.val.([]security.SQLUsername)
}
func (u *sqlSymUnion) newTableIndexName() *tree.TableIndexName {
	tn := u.val.(tree.TableIndexName)
	return &tn
}
func (u *sqlSymUnion) tableIndexName() tree.TableIndexName {
	return u.val.(tree.TableIndexName)
}
func (u *sqlSymUnion) newTableIndexNames() tree.TableIndexNames {
	return u.val.(tree.TableIndexNames)
}
func (u *sqlSymUnion) shardedIndexDef() *tree.ShardedIndexDef {
	return u.val.(*tree.ShardedIndexDef)
}
func (u *sqlSymUnion) nameList() tree.NameList {
	return u.val.(tree.NameList)
}
func (u *sqlSymUnion) enumValueList() tree.EnumValueList {
	return u.val.(tree.EnumValueList)
}
func (u *sqlSymUnion) unresolvedName() *tree.UnresolvedName {
	return u.val.(*tree.UnresolvedName)
}
func (u *sqlSymUnion) unresolvedObjectName() *tree.UnresolvedObjectName {
	return u.val.(*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) unresolvedObjectNames() []*tree.UnresolvedObjectName {
	return u.val.([]*tree.UnresolvedObjectName)
}
func (u *sqlSymUnion) functionReference() tree.FunctionReference {
	return u.val.(tree.FunctionReference)
}
func (u *sqlSymUnion) tablePatterns() tree.TablePatterns {
	return u.val.(tree.TablePatterns)
}
func (u *sqlSymUnion) tableNames() tree.TableNames {
	return u.val.(tree.TableNames)
}
func (u *sqlSymUnion) indexFlags() *tree.IndexFlags {
	return u.val.(*tree.IndexFlags)
}
func (u *sqlSymUnion) arraySubscript() *tree.ArraySubscript {
	return u.val.(*tree.ArraySubscript)
}
func (u *sqlSymUnion) arraySubscripts() tree.ArraySubscripts {
	if as, ok := u.val.(tree.ArraySubscripts); ok {
		return as
	}
	return nil
}
func (u *sqlSymUnion) stmt() tree.Statement {
	if stmt, ok := u.val.(tree.Statement); ok {
		return stmt
	}
	return nil
}
func (u *sqlSymUnion) cte() *tree.CTE {
	if cte, ok := u.val.(*tree.CTE); ok {
		return cte
	}
	return nil
}
func (u *sqlSymUnion) ctes() []*tree.CTE {
	return u.val.([]*tree.CTE)
}
func (u *sqlSymUnion) with() *tree.With {
	if with, ok := u.val.(*tree.With); ok {
		return with
	}
	return nil
}
func (u *sqlSymUnion) slct() *tree.Select {
	return u.val.(*tree.Select)
}
func (u *sqlSymUnion) selectStmt() tree.SelectStatement {
	return u.val.(tree.SelectStatement)
}
func (u *sqlSymUnion) colDef() *tree.ColumnTableDef {
	return u.val.(*tree.ColumnTableDef)
}
func (u *sqlSymUnion) constraintDef() tree.ConstraintTableDef {
	return u.val.(tree.ConstraintTableDef)
}
func (u *sqlSymUnion) tblDef() tree.TableDef {
	return u.val.(tree.TableDef)
}
func (u *sqlSymUnion) tblDefs() tree.TableDefs {
	return u.val.(tree.TableDefs)
}
func (u *sqlSymUnion) likeTableOption() tree.LikeTableOption {
	return u.val.(tree.LikeTableOption)
}
func (u *sqlSymUnion) likeTableOptionList() []tree.LikeTableOption {
	return u.val.([]tree.LikeTableOption)
}
func (u *sqlSymUnion) colQual() tree.NamedColumnQualification {
	return u.val.(tree.NamedColumnQualification)
}
func (u *sqlSymUnion) colQualElem() tree.ColumnQualification {
	return u.val.(tree.ColumnQualification)
}
func (u *sqlSymUnion) colQuals() []tree.NamedColumnQualification {
	return u.val.([]tree.NamedColumnQualification)
}
func (u *sqlSymUnion) storageParam() tree.StorageParam {
	return u.val.(tree.StorageParam)
}
func (u *sqlSymUnion) storageParams() []tree.StorageParam {
	if params, ok := u.val.([]tree.StorageParam); ok {
		return params
	}
	return nil
}
func (u *sqlSymUnion) persistence() tree.Persistence {
	return u.val.(tree.Persistence)
}
func (u *sqlSymUnion) colType() *types.T {
	if colType, ok := u.val.(*types.T); ok && colType != nil {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) tableRefCols() []tree.ColumnID {
	if refCols, ok := u.val.([]tree.ColumnID); ok {
		return refCols
	}
	return nil
}
func (u *sqlSymUnion) colTypes() []*types.T {
	return u.val.([]*types.T)
}
func (u *sqlSymUnion) int32() int32 {
	return u.val.(int32)
}
func (u *sqlSymUnion) int64() int64 {
	return u.val.(int64)
}
func (u *sqlSymUnion) seqOpt() tree.SequenceOption {
	return u.val.(tree.SequenceOption)
}
func (u *sqlSymUnion) seqOpts() []tree.SequenceOption {
	return u.val.([]tree.SequenceOption)
}
func (u *sqlSymUnion) expr() tree.Expr {
	if expr, ok := u.val.(tree.Expr); ok {
		return expr
	}
	return nil
}
func (u *sqlSymUnion) exprs() tree.Exprs {
	return u.val.(tree.Exprs)
}
func (u *sqlSymUnion) selExpr() tree.SelectExpr {
	return u.val.(tree.SelectExpr)
}
func (u *sqlSymUnion) selExprs() tree.SelectExprs {
	return u.val.(tree.SelectExprs)
}
func (u *sqlSymUnion) retClause() tree.ReturningClause {
	return u.val.(tree.ReturningClause)
}
func (u *sqlSymUnion) aliasClause() tree.AliasClause {
	return u.val.(tree.AliasClause)
}
func (u *sqlSymUnion) asOfClause() tree.AsOfClause {
	return u.val.(tree.AsOfClause)
}
func (u *sqlSymUnion) tblExpr() tree.TableExpr {
	return u.val.(tree.TableExpr)
}
func (u *sqlSymUnion) tblExprs() tree.TableExprs {
	return u.val.(tree.TableExprs)
}
func (u *sqlSymUnion) from() tree.From {
	return u.val.(tree.From)
}
func (u *sqlSymUnion) int32s() []int32 {
	return u.val.([]int32)
}
func (u *sqlSymUnion) joinCond() tree.JoinCond {
	return u.val.(tree.JoinCond)
}
func (u *sqlSymUnion) when() *tree.When {
	return u.val.(*tree.When)
}
func (u *sqlSymUnion) whens() []*tree.When {
	return u.val.([]*tree.When)
}
func (u *sqlSymUnion) lockingClause() tree.LockingClause {
	return u.val.(tree.LockingClause)
}
func (u *sqlSymUnion) lockingItem() *tree.LockingItem {
	return u.val.(*tree.LockingItem)
}
func (u *sqlSymUnion) lockingStrength() tree.LockingStrength {
	return u.val.(tree.LockingStrength)
}
func (u *sqlSymUnion) lockingWaitPolicy() tree.LockingWaitPolicy {
	return u.val.(tree.LockingWaitPolicy)
}
func (u *sqlSymUnion) updateExpr() *tree.UpdateExpr {
	return u.val.(*tree.UpdateExpr)
}
func (u *sqlSymUnion) updateExprs() tree.UpdateExprs {
	return u.val.(tree.UpdateExprs)
}
func (u *sqlSymUnion) limit() *tree.Limit {
	return u.val.(*tree.Limit)
}
func (u *sqlSymUnion) targetList() tree.TargetList {
	return u.val.(tree.TargetList)
}
func (u *sqlSymUnion) targetListPtr() *tree.TargetList {
	return u.val.(*tree.TargetList)
}
func (u *sqlSymUnion) privilegeType() privilege.Kind {
	return u.val.(privilege.Kind)
}
func (u *sqlSymUnion) privilegeList() privilege.List {
	return u.val.(privilege.List)
}
func (u *sqlSymUnion) onConflict() *tree.OnConflict {
	return u.val.(*tree.OnConflict)
}
func (u *sqlSymUnion) orderBy() tree.OrderBy {
	return u.val.(tree.OrderBy)
}
func (u *sqlSymUnion) order() *tree.Order {
	return u.val.(*tree.Order)
}
func (u *sqlSymUnion) orders() []*tree.Order {
	return u.val.([]*tree.Order)
}
func (u *sqlSymUnion) groupBy() tree.GroupBy {
	return u.val.(tree.GroupBy)
}
func (u *sqlSymUnion) windowFrame() *tree.WindowFrame {
	return u.val.(*tree.WindowFrame)
}
func (u *sqlSymUnion) windowFrameBounds() tree.WindowFrameBounds {
	return u.val.(tree.WindowFrameBounds)
}
func (u *sqlSymUnion) windowFrameBound() *tree.WindowFrameBound {
	return u.val.(*tree.WindowFrameBound)
}
func (u *sqlSymUnion) windowFrameExclusion() tree.WindowFrameExclusion {
	return u.val.(tree.WindowFrameExclusion)
}
func (u *sqlSymUnion) distinctOn() tree.DistinctOn {
	return u.val.(tree.DistinctOn)
}
func (u *sqlSymUnion) dir() tree.Direction {
	return u.val.(tree.Direction)
}
func (u *sqlSymUnion) nullsOrder() tree.NullsOrder {
	return u.val.(tree.NullsOrder)
}
func (u *sqlSymUnion) alterTableCmd() tree.AlterTableCmd {
	return u.val.(tree.AlterTableCmd)
}
func (u *sqlSymUnion) alterTableCmds() tree.AlterTableCmds {
	return u.val.(tree.AlterTableCmds)
}
func (u *sqlSymUnion) alterIndexCmd() tree.AlterIndexCmd {
	return u.val.(tree.AlterIndexCmd)
}
func (u *sqlSymUnion) alterIndexCmds() tree.AlterIndexCmds {
	return u.val.(tree.AlterIndexCmds)
}
func (u *sqlSymUnion) isoLevel() tree.IsolationLevel {
	return u.val.(tree.IsolationLevel)
}
func (u *sqlSymUnion) userPriority() tree.UserPriority {
	return u.val.(tree.UserPriority)
}
func (u *sqlSymUnion) readWriteMode() tree.ReadWriteMode {
	return u.val.(tree.ReadWriteMode)
}
func (u *sqlSymUnion) deferrableMode() tree.DeferrableMode {
	return u.val.(tree.DeferrableMode)
}
func (u *sqlSymUnion) idxElem() tree.IndexElem {
	return u.val.(tree.IndexElem)
}
func (u *sqlSymUnion) idxElems() tree.IndexElemList {
	return u.val.(tree.IndexElemList)
}
func (u *sqlSymUnion) dropBehavior() tree.DropBehavior {
	return u.val.(tree.DropBehavior)
}
func (u *sqlSymUnion) validationBehavior() tree.ValidationBehavior {
	return u.val.(tree.ValidationBehavior)
}
func (u *sqlSymUnion) interleave() *tree.InterleaveDef {
	return u.val.(*tree.InterleaveDef)
}
func (u *sqlSymUnion) partitionBy() *tree.PartitionBy {
	return u.val.(*tree.PartitionBy)
}
func (u *sqlSymUnion) partitionByTable() *tree.PartitionByTable {
	return u.val.(*tree.PartitionByTable)
}
func (u *sqlSymUnion) partitionByIndex() *tree.PartitionByIndex {
	return u.val.(*tree.PartitionByIndex)
}
func (u *sqlSymUnion) createTableOnCommitSetting() tree.CreateTableOnCommitSetting {
	return u.val.(tree.CreateTableOnCommitSetting)
}
func (u *sqlSymUnion) listPartition() tree.ListPartition {
	return u.val.(tree.ListPartition)
}
func (u *sqlSymUnion) listPartitions() []tree.ListPartition {
	return u.val.([]tree.ListPartition)
}
func (u *sqlSymUnion) rangePartition() tree.RangePartition {
	return u.val.(tree.RangePartition)
}
func (u *sqlSymUnion) rangePartitions() []tree.RangePartition {
	return u.val.([]tree.RangePartition)
}
func (u *sqlSymUnion) setZoneConfig() *tree.SetZoneConfig {
	return u.val.(*tree.SetZoneConfig)
}
func (u *sqlSymUnion) tuples() []*tree.Tuple {
	return u.val.([]*tree.Tuple)
}
func (u *sqlSymUnion) tuple() *tree.Tuple {
	return u.val.(*tree.Tuple)
}
func (u *sqlSymUnion) windowDef() *tree.WindowDef {
	return u.val.(*tree.WindowDef)
}
func (u *sqlSymUnion) window() tree.Window {
	return u.val.(tree.Window)
}
func (u *sqlSymUnion) op() tree.Operator {
	return u.val.(tree.Operator)
}
func (u *sqlSymUnion) cmpOp() tree.ComparisonOperator {
	return u.val.(tree.ComparisonOperator)
}
func (u *sqlSymUnion) intervalTypeMetadata() types.IntervalTypeMetadata {
	return u.val.(types.IntervalTypeMetadata)
}
func (u *sqlSymUnion) kvOption() tree.KVOption {
	return u.val.(tree.KVOption)
}
func (u *sqlSymUnion) kvOptions() []tree.KVOption {
	if colType, ok := u.val.([]tree.KVOption); ok {
		return colType
	}
	return nil
}
func (u *sqlSymUnion) backupOptions() *tree.BackupOptions {
	return u.val.(*tree.BackupOptions)
}
func (u *sqlSymUnion) replicationOptions() *tree.ReplicationOptions {
	return u.val.(*tree.ReplicationOptions)
}
func (u *sqlSymUnion) copyOptions() *tree.CopyOptions {
	return u.val.(*tree.CopyOptions)
}
func (u *sqlSymUnion) restoreOptions() *tree.RestoreOptions {
	return u.val.(*tree.RestoreOptions)
}
func (u *sqlSymUnion) transactionModes() tree.TransactionModes {
	return u.val.(tree.TransactionModes)
}
func (u *sqlSymUnion) compositeKeyMatchMethod() tree.CompositeKeyMatchMethod {
	return u.val.(tree.CompositeKeyMatchMethod)
}
func (u *sqlSymUnion) referenceAction() tree.ReferenceAction {
	return u.val.(tree.ReferenceAction)
}
func (u *sqlSymUnion) referenceActions() tree.ReferenceActions {
	return u.val.(tree.ReferenceActions)
}
func (u *sqlSymUnion) createStatsOptions() *tree.CreateStatsOptions {
	return u.val.(*tree.CreateStatsOptions)
}
func (u *sqlSymUnion) scrubOptions() tree.ScrubOptions {
	return u.val.(tree.ScrubOptions)
}
func (u *sqlSymUnion) scrubOption() tree.ScrubOption {
	return u.val.(tree.ScrubOption)
}
func (u *sqlSymUnion) resolvableFuncRefFromName() tree.ResolvableFunctionReference {
	return tree.ResolvableFunctionReference{FunctionReference: u.unresolvedName()}
}
func (u *sqlSymUnion) rowsFromExpr() *tree.RowsFromExpr {
	return u.val.(*tree.RowsFromExpr)
}
func (u *sqlSymUnion) stringOrPlaceholderOptList() tree.StringOrPlaceholderOptList {
	return u.val.(tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) listOfStringOrPlaceholderOptList() []tree.StringOrPlaceholderOptList {
	return u.val.([]tree.StringOrPlaceholderOptList)
}
func (u *sqlSymUnion) fullBackupClause() *tree.FullBackupClause {
	return u.val.(*tree.FullBackupClause)
}
func (u *sqlSymUnion) geoShapeType() geopb.ShapeType {
	return u.val.(geopb.ShapeType)
}
func newNameFromStr(s string) *tree.Name {
	return (*tree.Name)(&s)
}
func (u *sqlSymUnion) typeReference() tree.ResolvableTypeReference {
	return u.val.(tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) typeReferences() []tree.ResolvableTypeReference {
	return u.val.([]tree.ResolvableTypeReference)
}
func (u *sqlSymUnion) alterTypeAddValuePlacement() *tree.AlterTypeAddValuePlacement {
	return u.val.(*tree.AlterTypeAddValuePlacement)
}
func (u *sqlSymUnion) scheduleState() tree.ScheduleState {
	return u.val.(tree.ScheduleState)
}
func (u *sqlSymUnion) executorType() tree.ScheduledJobExecutorType {
	return u.val.(tree.ScheduledJobExecutorType)
}
func (u *sqlSymUnion) refreshDataOption() tree.RefreshDataOption {
	return u.val.(tree.RefreshDataOption)
}
func (u *sqlSymUnion) locality() *tree.Locality {
	return u.val.(*tree.Locality)
}
func (u *sqlSymUnion) survivalGoal() tree.SurvivalGoal {
	return u.val.(tree.SurvivalGoal)
}
func (u *sqlSymUnion) dataPlacement() tree.DataPlacement {
	return u.val.(tree.DataPlacement)
}
func (u *sqlSymUnion) objectNamePrefix() tree.ObjectNamePrefix {
	return u.val.(tree.ObjectNamePrefix)
}
func (u *sqlSymUnion) objectNamePrefixList() tree.ObjectNamePrefixList {
	return u.val.(tree.ObjectNamePrefixList)
}
func (u *sqlSymUnion) abbreviatedGrant() tree.AbbreviatedGrant {
	return u.val.(tree.AbbreviatedGrant)
}
func (u *sqlSymUnion) abbreviatedRevoke() tree.AbbreviatedRevoke {
	return u.val.(tree.AbbreviatedRevoke)
}
func (u *sqlSymUnion) alterDefaultPrivilegesTargetObject() tree.AlterDefaultPrivilegesTargetObject {
	return u.val.(tree.AlterDefaultPrivilegesTargetObject)
}
func (u *sqlSymUnion) setVar() *tree.SetVar {
	return u.val.(*tree.SetVar)
}

//line sql-gen.y:868
type sqlSymType struct {
	yys   int
	id    int32
	pos   int32
	str   string
	union sqlSymUnion
}

const IDENT = lexbase.IDENT
const SCONST = lexbase.SCONST
const BCONST = lexbase.BCONST
const BITCONST = lexbase.BITCONST
const ICONST = lexbase.ICONST
const FCONST = lexbase.FCONST
const PLACEHOLDER = lexbase.PLACEHOLDER
const TYPECAST = lexbase.TYPECAST
const TYPEANNOTATE = lexbase.TYPEANNOTATE
const DOT_DOT = lexbase.DOT_DOT
const LESS_EQUALS = lexbase.LESS_EQUALS
const GREATER_EQUALS = lexbase.GREATER_EQUALS
const NOT_EQUALS = lexbase.NOT_EQUALS
const NOT_REGMATCH = lexbase.NOT_REGMATCH
const REGIMATCH = lexbase.REGIMATCH
const NOT_REGIMATCH = lexbase.NOT_REGIMATCH
const ERROR = lexbase.ERROR
const ABORT = lexbase.ABORT
const ACCESS = lexbase.ACCESS
const ACTION = lexbase.ACTION
const ADD = lexbase.ADD
const ADMIN = lexbase.ADMIN
const AFTER = lexbase.AFTER
const AGGREGATE = lexbase.AGGREGATE
const ALL = lexbase.ALL
const ALTER = lexbase.ALTER
const ALWAYS = lexbase.ALWAYS
const ANALYSE = lexbase.ANALYSE
const ANALYZE = lexbase.ANALYZE
const AND = lexbase.AND
const AND_AND = lexbase.AND_AND
const ANY = lexbase.ANY
const ANNOTATE_TYPE = lexbase.ANNOTATE_TYPE
const ARRAY = lexbase.ARRAY
const AS = lexbase.AS
const ASC = lexbase.ASC
const ASYMMETRIC = lexbase.ASYMMETRIC
const AT = lexbase.AT
const ATTRIBUTE = lexbase.ATTRIBUTE
const AUTHORIZATION = lexbase.AUTHORIZATION
const AUTOMATIC = lexbase.AUTOMATIC
const AVAILABILITY = lexbase.AVAILABILITY
const BACKUP = lexbase.BACKUP
const BACKUPS = lexbase.BACKUPS
const BEFORE = lexbase.BEFORE
const BEGIN = lexbase.BEGIN
const BETWEEN = lexbase.BETWEEN
const BIGINT = lexbase.BIGINT
const BIGSERIAL = lexbase.BIGSERIAL
const BINARY = lexbase.BINARY
const BIT = lexbase.BIT
const BUCKET_COUNT = lexbase.BUCKET_COUNT
const BOOLEAN = lexbase.BOOLEAN
const BOTH = lexbase.BOTH
const BOX2D = lexbase.BOX2D
const BUNDLE = lexbase.BUNDLE
const BY = lexbase.BY
const CACHE = lexbase.CACHE
const CANCEL = lexbase.CANCEL
const CANCELQUERY = lexbase.CANCELQUERY
const CASCADE = lexbase.CASCADE
const CASE = lexbase.CASE
const CAST = lexbase.CAST
const CBRT = lexbase.CBRT
const CHANGEFEED = lexbase.CHANGEFEED
const CHAR = lexbase.CHAR
const CHARACTER = lexbase.CHARACTER
const CHARACTERISTICS = lexbase.CHARACTERISTICS
const CHECK = lexbase.CHECK
const CLOSE = lexbase.CLOSE
const CLUSTER = lexbase.CLUSTER
const COALESCE = lexbase.COALESCE
const COLLATE = lexbase.COLLATE
const COLLATION = lexbase.COLLATION
const COLUMN = lexbase.COLUMN
const COLUMNS = lexbase.COLUMNS
const COMMENT = lexbase.COMMENT
const COMMENTS = lexbase.COMMENTS
const COMMIT = lexbase.COMMIT
const COMMITTED = lexbase.COMMITTED
const COMPACT = lexbase.COMPACT
const COMPLETE = lexbase.COMPLETE
const CONCAT = lexbase.CONCAT
const CONCURRENTLY = lexbase.CONCURRENTLY
const CONFIGURATION = lexbase.CONFIGURATION
const CONFIGURATIONS = lexbase.CONFIGURATIONS
const CONFIGURE = lexbase.CONFIGURE
const CONFLICT = lexbase.CONFLICT
const CONNECTION = lexbase.CONNECTION
const CONSTRAINT = lexbase.CONSTRAINT
const CONSTRAINTS = lexbase.CONSTRAINTS
const CONTAINS = lexbase.CONTAINS
const CONTROLCHANGEFEED = lexbase.CONTROLCHANGEFEED
const CONTROLJOB = lexbase.CONTROLJOB
const CONVERSION = lexbase.CONVERSION
const CONVERT = lexbase.CONVERT
const COPY = lexbase.COPY
const COVERING = lexbase.COVERING
const CREATE = lexbase.CREATE
const CREATEDB = lexbase.CREATEDB
const CREATELOGIN = lexbase.CREATELOGIN
const CREATEROLE = lexbase.CREATEROLE
const CROSS = lexbase.CROSS
const CSV = lexbase.CSV
const CUBE = lexbase.CUBE
const CURRENT = lexbase.CURRENT
const CURRENT_CATALOG = lexbase.CURRENT_CATALOG
const CURRENT_DATE = lexbase.CURRENT_DATE
const CURRENT_SCHEMA = lexbase.CURRENT_SCHEMA
const CURRENT_ROLE = lexbase.CURRENT_ROLE
const CURRENT_TIME = lexbase.CURRENT_TIME
const CURRENT_TIMESTAMP = lexbase.CURRENT_TIMESTAMP
const CURRENT_USER = lexbase.CURRENT_USER
const CURSOR = lexbase.CURSOR
const CYCLE = lexbase.CYCLE
const DATA = lexbase.DATA
const DATABASE = lexbase.DATABASE
const DATABASES = lexbase.DATABASES
const DATE = lexbase.DATE
const DAY = lexbase.DAY
const DEC = lexbase.DEC
const DECIMAL = lexbase.DECIMAL
const DEFAULT = lexbase.DEFAULT
const DEFAULTS = lexbase.DEFAULTS
const DEALLOCATE = lexbase.DEALLOCATE
const DECLARE = lexbase.DECLARE
const DEFERRABLE = lexbase.DEFERRABLE
const DEFERRED = lexbase.DEFERRED
const DELETE = lexbase.DELETE
const DELIMITER = lexbase.DELIMITER
const DESC = lexbase.DESC
const DESTINATION = lexbase.DESTINATION
const DETACHED = lexbase.DETACHED
const DISCARD = lexbase.DISCARD
const DISTINCT = lexbase.DISTINCT
const DO = lexbase.DO
const DOMAIN = lexbase.DOMAIN
const DOUBLE = lexbase.DOUBLE
const DROP = lexbase.DROP
const ELSE = lexbase.ELSE
const ENCODING = lexbase.ENCODING
const ENCRYPTION_PASSPHRASE = lexbase.ENCRYPTION_PASSPHRASE
const END = lexbase.END
const ENUM = lexbase.ENUM
const ENUMS = lexbase.ENUMS
const ESCAPE = lexbase.ESCAPE
const EXCEPT = lexbase.EXCEPT
const EXCLUDE = lexbase.EXCLUDE
const EXCLUDING = lexbase.EXCLUDING
const EXISTS = lexbase.EXISTS
const EXECUTE = lexbase.EXECUTE
const EXECUTION = lexbase.EXECUTION
const EXPERIMENTAL = lexbase.EXPERIMENTAL
const EXPERIMENTAL_FINGERPRINTS = lexbase.EXPERIMENTAL_FINGERPRINTS
const EXPERIMENTAL_REPLICA = lexbase.EXPERIMENTAL_REPLICA
const EXPERIMENTAL_AUDIT = lexbase.EXPERIMENTAL_AUDIT
const EXPIRATION = lexbase.EXPIRATION
const EXPLAIN = lexbase.EXPLAIN
const EXPORT = lexbase.EXPORT
const EXTENSION = lexbase.EXTENSION
const EXTRACT = lexbase.EXTRACT
const EXTRACT_DURATION = lexbase.EXTRACT_DURATION
const FAILURE = lexbase.FAILURE
const FALSE = lexbase.FALSE
const FAMILY = lexbase.FAMILY
const FETCH = lexbase.FETCH
const FETCHVAL = lexbase.FETCHVAL
const FETCHTEXT = lexbase.FETCHTEXT
const FETCHVAL_PATH = lexbase.FETCHVAL_PATH
const FETCHTEXT_PATH = lexbase.FETCHTEXT_PATH
const FILES = lexbase.FILES
const FILTER = lexbase.FILTER
const FIRST = lexbase.FIRST
const FLOAT = lexbase.FLOAT
const FLOAT4 = lexbase.FLOAT4
const FLOAT8 = lexbase.FLOAT8
const FLOORDIV = lexbase.FLOORDIV
const FOLLOWING = lexbase.FOLLOWING
const FOR = lexbase.FOR
const FORCE = lexbase.FORCE
const FORCE_INDEX = lexbase.FORCE_INDEX
const FOREIGN = lexbase.FOREIGN
const FROM = lexbase.FROM
const FULL = lexbase.FULL
const FUNCTION = lexbase.FUNCTION
const FUNCTIONS = lexbase.FUNCTIONS
const GENERATED = lexbase.GENERATED
const GEOGRAPHY = lexbase.GEOGRAPHY
const GEOMETRY = lexbase.GEOMETRY
const GEOMETRYM = lexbase.GEOMETRYM
const GEOMETRYZ = lexbase.GEOMETRYZ
const GEOMETRYZM = lexbase.GEOMETRYZM
const GEOMETRYCOLLECTION = lexbase.GEOMETRYCOLLECTION
const GEOMETRYCOLLECTIONM = lexbase.GEOMETRYCOLLECTIONM
const GEOMETRYCOLLECTIONZ = lexbase.GEOMETRYCOLLECTIONZ
const GEOMETRYCOLLECTIONZM = lexbase.GEOMETRYCOLLECTIONZM
const GLOBAL = lexbase.GLOBAL
const GOAL = lexbase.GOAL
const GRANT = lexbase.GRANT
const GRANTS = lexbase.GRANTS
const GREATEST = lexbase.GREATEST
const GROUP = lexbase.GROUP
const GROUPING = lexbase.GROUPING
const GROUPS = lexbase.GROUPS
const HAVING = lexbase.HAVING
const HASH = lexbase.HASH
const HIGH = lexbase.HIGH
const HISTOGRAM = lexbase.HISTOGRAM
const HOUR = lexbase.HOUR
const IDENTITY = lexbase.IDENTITY
const IF = lexbase.IF
const IFERROR = lexbase.IFERROR
const IFNULL = lexbase.IFNULL
const IGNORE_FOREIGN_KEYS = lexbase.IGNORE_FOREIGN_KEYS
const ILIKE = lexbase.ILIKE
const IMMEDIATE = lexbase.IMMEDIATE
const IMPORT = lexbase.IMPORT
const IN = lexbase.IN
const INCLUDE = lexbase.INCLUDE
const INCLUDE_DEPRECATED_INTERLEAVES = lexbase.INCLUDE_DEPRECATED_INTERLEAVES
const INCLUDING = lexbase.INCLUDING
const INCREMENT = lexbase.INCREMENT
const INCREMENTAL = lexbase.INCREMENTAL
const INET = lexbase.INET
const INET_CONTAINED_BY_OR_EQUALS = lexbase.INET_CONTAINED_BY_OR_EQUALS
const INET_CONTAINS_OR_EQUALS = lexbase.INET_CONTAINS_OR_EQUALS
const INDEX = lexbase.INDEX
const INDEXES = lexbase.INDEXES
const INHERITS = lexbase.INHERITS
const INJECT = lexbase.INJECT
const INTERLEAVE = lexbase.INTERLEAVE
const INITIALLY = lexbase.INITIALLY
const INNER = lexbase.INNER
const INSERT = lexbase.INSERT
const INT = lexbase.INT
const INTEGER = lexbase.INTEGER
const INTERSECT = lexbase.INTERSECT
const INTERVAL = lexbase.INTERVAL
const INTO = lexbase.INTO
const INTO_DB = lexbase.INTO_DB
const INVERTED = lexbase.INVERTED
const IS = lexbase.IS
const ISERROR = lexbase.ISERROR
const ISNULL = lexbase.ISNULL
const ISOLATION = lexbase.ISOLATION
const JOB = lexbase.JOB
const JOBS = lexbase.JOBS
const JOIN = lexbase.JOIN
const JSON = lexbase.JSON
const JSONB = lexbase.JSONB
const JSON_SOME_EXISTS = lexbase.JSON_SOME_EXISTS
const JSON_ALL_EXISTS = lexbase.JSON_ALL_EXISTS
const KEY = lexbase.KEY
const KEYS = lexbase.KEYS
const KMS = lexbase.KMS
const KV = lexbase.KV
const LANGUAGE = lexbase.LANGUAGE
const LAST = lexbase.LAST
const LATERAL = lexbase.LATERAL
const LATEST = lexbase.LATEST
const LC_CTYPE = lexbase.LC_CTYPE
const LC_COLLATE = lexbase.LC_COLLATE
const LEADING = lexbase.LEADING
const LEASE = lexbase.LEASE
const LEAST = lexbase.LEAST
const LEFT = lexbase.LEFT
const LESS = lexbase.LESS
const LEVEL = lexbase.LEVEL
const LIKE = lexbase.LIKE
const LIMIT = lexbase.LIMIT
const LINESTRING = lexbase.LINESTRING
const LINESTRINGM = lexbase.LINESTRINGM
const LINESTRINGZ = lexbase.LINESTRINGZ
const LINESTRINGZM = lexbase.LINESTRINGZM
const LIST = lexbase.LIST
const LOCAL = lexbase.LOCAL
const LOCALITY = lexbase.LOCALITY
const LOCALTIME = lexbase.LOCALTIME
const LOCALTIMESTAMP = lexbase.LOCALTIMESTAMP
const LOCKED = lexbase.LOCKED
const LOGIN = lexbase.LOGIN
const LOOKUP = lexbase.LOOKUP
const LOW = lexbase.LOW
const LSHIFT = lexbase.LSHIFT
const MATCH = lexbase.MATCH
const MATERIALIZED = lexbase.MATERIALIZED
const MERGE = lexbase.MERGE
const MINVALUE = lexbase.MINVALUE
const MAXVALUE = lexbase.MAXVALUE
const METHOD = lexbase.METHOD
const MINUTE = lexbase.MINUTE
const MODIFYCLUSTERSETTING = lexbase.MODIFYCLUSTERSETTING
const MONTH = lexbase.MONTH
const MULTILINESTRING = lexbase.MULTILINESTRING
const MULTILINESTRINGM = lexbase.MULTILINESTRINGM
const MULTILINESTRINGZ = lexbase.MULTILINESTRINGZ
const MULTILINESTRINGZM = lexbase.MULTILINESTRINGZM
const MULTIPOINT = lexbase.MULTIPOINT
const MULTIPOINTM = lexbase.MULTIPOINTM
const MULTIPOINTZ = lexbase.MULTIPOINTZ
const MULTIPOINTZM = lexbase.MULTIPOINTZM
const MULTIPOLYGON = lexbase.MULTIPOLYGON
const MULTIPOLYGONM = lexbase.MULTIPOLYGONM
const MULTIPOLYGONZ = lexbase.MULTIPOLYGONZ
const MULTIPOLYGONZM = lexbase.MULTIPOLYGONZM
const NAN = lexbase.NAN
const NAME = lexbase.NAME
const NAMES = lexbase.NAMES
const NATURAL = lexbase.NATURAL
const NEVER = lexbase.NEVER
const NEXT = lexbase.NEXT
const NO = lexbase.NO
const NOCANCELQUERY = lexbase.NOCANCELQUERY
const NOCONTROLCHANGEFEED = lexbase.NOCONTROLCHANGEFEED
const NOCONTROLJOB = lexbase.NOCONTROLJOB
const NOCREATEDB = lexbase.NOCREATEDB
const NOCREATELOGIN = lexbase.NOCREATELOGIN
const NOCREATEROLE = lexbase.NOCREATEROLE
const NOLOGIN = lexbase.NOLOGIN
const NOMODIFYCLUSTERSETTING = lexbase.NOMODIFYCLUSTERSETTING
const NO_INDEX_JOIN = lexbase.NO_INDEX_JOIN
const NO_ZIGZAG_JOIN = lexbase.NO_ZIGZAG_JOIN
const NONE = lexbase.NONE
const NON_VOTERS = lexbase.NON_VOTERS
const NORMAL = lexbase.NORMAL
const NOT = lexbase.NOT
const NOTHING = lexbase.NOTHING
const NOTNULL = lexbase.NOTNULL
const NOVIEWACTIVITY = lexbase.NOVIEWACTIVITY
const NOWAIT = lexbase.NOWAIT
const NULL = lexbase.NULL
const NULLIF = lexbase.NULLIF
const NULLS = lexbase.NULLS
const NUMERIC = lexbase.NUMERIC
const OF = lexbase.OF
const OFF = lexbase.OFF
const OFFSET = lexbase.OFFSET
const OID = lexbase.OID
const OIDS = lexbase.OIDS
const OIDVECTOR = lexbase.OIDVECTOR
const ON = lexbase.ON
const ONLY = lexbase.ONLY
const OPT = lexbase.OPT
const OPTION = lexbase.OPTION
const OPTIONS = lexbase.OPTIONS
const OR = lexbase.OR
const ORDER = lexbase.ORDER
const ORDINALITY = lexbase.ORDINALITY
const OTHERS = lexbase.OTHERS
const OUT = lexbase.OUT
const OUTER = lexbase.OUTER
const OVER = lexbase.OVER
const OVERLAPS = lexbase.OVERLAPS
const OVERLAY = lexbase.OVERLAY
const OWNED = lexbase.OWNED
const OWNER = lexbase.OWNER
const OPERATOR = lexbase.OPERATOR
const PARENT = lexbase.PARENT
const PARTIAL = lexbase.PARTIAL
const PARTITION = lexbase.PARTITION
const PARTITIONS = lexbase.PARTITIONS
const PASSWORD = lexbase.PASSWORD
const PAUSE = lexbase.PAUSE
const PAUSED = lexbase.PAUSED
const PHYSICAL = lexbase.PHYSICAL
const PLACEMENT = lexbase.PLACEMENT
const PLACING = lexbase.PLACING
const PLAN = lexbase.PLAN
const PLANS = lexbase.PLANS
const POINT = lexbase.POINT
const POINTM = lexbase.POINTM
const POINTZ = lexbase.POINTZ
const POINTZM = lexbase.POINTZM
const POLYGON = lexbase.POLYGON
const POLYGONM = lexbase.POLYGONM
const POLYGONZ = lexbase.POLYGONZ
const POLYGONZM = lexbase.POLYGONZM
const POSITION = lexbase.POSITION
const PRECEDING = lexbase.PRECEDING
const PRECISION = lexbase.PRECISION
const PREPARE = lexbase.PREPARE
const PRESERVE = lexbase.PRESERVE
const PRIMARY = lexbase.PRIMARY
const PRIORITY = lexbase.PRIORITY
const PRIVILEGES = lexbase.PRIVILEGES
const PROCEDURAL = lexbase.PROCEDURAL
const PUBLIC = lexbase.PUBLIC
const PUBLICATION = lexbase.PUBLICATION
const QUERIES = lexbase.QUERIES
const QUERY = lexbase.QUERY
const RANGE = lexbase.RANGE
const RANGES = lexbase.RANGES
const READ = lexbase.READ
const REAL = lexbase.REAL
const REASON = lexbase.REASON
const REASSIGN = lexbase.REASSIGN
const RECURSIVE = lexbase.RECURSIVE
const RECURRING = lexbase.RECURRING
const REF = lexbase.REF
const REFERENCES = lexbase.REFERENCES
const REFRESH = lexbase.REFRESH
const REGCLASS = lexbase.REGCLASS
const REGION = lexbase.REGION
const REGIONAL = lexbase.REGIONAL
const REGIONS = lexbase.REGIONS
const REGNAMESPACE = lexbase.REGNAMESPACE
const REGPROC = lexbase.REGPROC
const REGPROCEDURE = lexbase.REGPROCEDURE
const REGROLE = lexbase.REGROLE
const REGTYPE = lexbase.REGTYPE
const REINDEX = lexbase.REINDEX
const REMOVE_PATH = lexbase.REMOVE_PATH
const RENAME = lexbase.RENAME
const REPEATABLE = lexbase.REPEATABLE
const REPLACE = lexbase.REPLACE
const REPLICATION = lexbase.REPLICATION
const RELEASE = lexbase.RELEASE
const RESET = lexbase.RESET
const RESTORE = lexbase.RESTORE
const RESTRICT = lexbase.RESTRICT
const RESTRICTED = lexbase.RESTRICTED
const RESUME = lexbase.RESUME
const RETURNING = lexbase.RETURNING
const RETRY = lexbase.RETRY
const REVISION_HISTORY = lexbase.REVISION_HISTORY
const REVOKE = lexbase.REVOKE
const RIGHT = lexbase.RIGHT
const ROLE = lexbase.ROLE
const ROLES = lexbase.ROLES
const ROLLBACK = lexbase.ROLLBACK
const ROLLUP = lexbase.ROLLUP
const ROUTINES = lexbase.ROUTINES
const ROW = lexbase.ROW
const ROWS = lexbase.ROWS
const RSHIFT = lexbase.RSHIFT
const RULE = lexbase.RULE
const RUNNING = lexbase.RUNNING
const SAVEPOINT = lexbase.SAVEPOINT
const SCANS = lexbase.SCANS
const SCATTER = lexbase.SCATTER
const SCHEDULE = lexbase.SCHEDULE
const SCHEDULES = lexbase.SCHEDULES
const SCHEMA = lexbase.SCHEMA
const SCHEMAS = lexbase.SCHEMAS
const SCRUB = lexbase.SCRUB
const SEARCH = lexbase.SEARCH
const SECOND = lexbase.SECOND
const SELECT = lexbase.SELECT
const SEQUENCE = lexbase.SEQUENCE
const SEQUENCES = lexbase.SEQUENCES
const SERIALIZABLE = lexbase.SERIALIZABLE
const SERVER = lexbase.SERVER
const SESSION = lexbase.SESSION
const SESSIONS = lexbase.SESSIONS
const SESSION_USER = lexbase.SESSION_USER
const SET = lexbase.SET
const SETS = lexbase.SETS
const SETTING = lexbase.SETTING
const SETTINGS = lexbase.SETTINGS
const SHARE = lexbase.SHARE
const SHOW = lexbase.SHOW
const SIMILAR = lexbase.SIMILAR
const SIMPLE = lexbase.SIMPLE
const SKIP = lexbase.SKIP
const SKIP_LOCALITIES_CHECK = lexbase.SKIP_LOCALITIES_CHECK
const SKIP_MISSING_FOREIGN_KEYS = lexbase.SKIP_MISSING_FOREIGN_KEYS
const SKIP_MISSING_SEQUENCES = lexbase.SKIP_MISSING_SEQUENCES
const SKIP_MISSING_SEQUENCE_OWNERS = lexbase.SKIP_MISSING_SEQUENCE_OWNERS
const SKIP_MISSING_VIEWS = lexbase.SKIP_MISSING_VIEWS
const SMALLINT = lexbase.SMALLINT
const SMALLSERIAL = lexbase.SMALLSERIAL
const SNAPSHOT = lexbase.SNAPSHOT
const SOME = lexbase.SOME
const SPLIT = lexbase.SPLIT
const SQL = lexbase.SQL
const START = lexbase.START
const STATISTICS = lexbase.STATISTICS
const STATUS = lexbase.STATUS
const STDIN = lexbase.STDIN
const STREAM = lexbase.STREAM
const STRICT = lexbase.STRICT
const STRING = lexbase.STRING
const STORAGE = lexbase.STORAGE
const STORE = lexbase.STORE
const STORED = lexbase.STORED
const STORING = lexbase.STORING
const SUBSTRING = lexbase.SUBSTRING
const SURVIVE = lexbase.SURVIVE
const SURVIVAL = lexbase.SURVIVAL
const SYMMETRIC = lexbase.SYMMETRIC
const SYNTAX = lexbase.SYNTAX
const SYSTEM = lexbase.SYSTEM
const SQRT = lexbase.SQRT
const SUBSCRIPTION = lexbase.SUBSCRIPTION
const STATEMENTS = lexbase.STATEMENTS
const TABLE = lexbase.TABLE
const TABLES = lexbase.TABLES
const TABLESPACE = lexbase.TABLESPACE
const TEMP = lexbase.TEMP
const TEMPLATE = lexbase.TEMPLATE
const TEMPORARY = lexbase.TEMPORARY
const TENANT = lexbase.TENANT
const TESTING_RELOCATE = lexbase.TESTING_RELOCATE
const EXPERIMENTAL_RELOCATE = lexbase.EXPERIMENTAL_RELOCATE
const TEXT = lexbase.TEXT
const THEN = lexbase.THEN
const TIES = lexbase.TIES
const TIME = lexbase.TIME
const TIMETZ = lexbase.TIMETZ
const TIMESTAMP = lexbase.TIMESTAMP
const TIMESTAMPTZ = lexbase.TIMESTAMPTZ
const TO = lexbase.TO
const THROTTLING = lexbase.THROTTLING
const TRAILING = lexbase.TRAILING
const TRACE = lexbase.TRACE
const TRANSACTION = lexbase.TRANSACTION
const TRANSACTIONS = lexbase.TRANSACTIONS
const TREAT = lexbase.TREAT
const TRIGGER = lexbase.TRIGGER
const TRIM = lexbase.TRIM
const TRUE = lexbase.TRUE
const TRUNCATE = lexbase.TRUNCATE
const TRUSTED = lexbase.TRUSTED
const TYPE = lexbase.TYPE
const TYPES = lexbase.TYPES
const TRACING = lexbase.TRACING
const UNBOUNDED = lexbase.UNBOUNDED
const UNCOMMITTED = lexbase.UNCOMMITTED
const UNION = lexbase.UNION
const UNIQUE = lexbase.UNIQUE
const UNKNOWN = lexbase.UNKNOWN
const UNLOGGED = lexbase.UNLOGGED
const UNSPLIT = lexbase.UNSPLIT
const UPDATE = lexbase.UPDATE
const UPSERT = lexbase.UPSERT
const UNTIL = lexbase.UNTIL
const USE = lexbase.USE
const USER = lexbase.USER
const USERS = lexbase.USERS
const USING = lexbase.USING
const UUID = lexbase.UUID
const VALID = lexbase.VALID
const VALIDATE = lexbase.VALIDATE
const VALUE = lexbase.VALUE
const VALUES = lexbase.VALUES
const VARBIT = lexbase.VARBIT
const VARCHAR = lexbase.VARCHAR
const VARIADIC = lexbase.VARIADIC
const VIEW = lexbase.VIEW
const VARYING = lexbase.VARYING
const VIEWACTIVITY = lexbase.VIEWACTIVITY
const VIRTUAL = lexbase.VIRTUAL
const VISIBLE = lexbase.VISIBLE
const VOTERS = lexbase.VOTERS
const WHEN = lexbase.WHEN
const WHERE = lexbase.WHERE
const WINDOW = lexbase.WINDOW
const WITH = lexbase.WITH
const WITHIN = lexbase.WITHIN
const WITHOUT = lexbase.WITHOUT
const WORK = lexbase.WORK
const WRITE = lexbase.WRITE
const YEAR = lexbase.YEAR
const ZONE = lexbase.ZONE
const NOT_LA = lexbase.NOT_LA
const NULLS_LA = lexbase.NULLS_LA
const WITH_LA = lexbase.WITH_LA
const AS_LA = lexbase.AS_LA
const GENERATED_ALWAYS = lexbase.GENERATED_ALWAYS
const GENERATED_BY_DEFAULT = lexbase.GENERATED_BY_DEFAULT
const RESET_ALL = lexbase.RESET_ALL
const ROLE_ALL = lexbase.ROLE_ALL
const USER_ALL = lexbase.USER_ALL
const ON_LA = lexbase.ON_LA
const CONTAINED_BY = lexbase.CONTAINED_BY
const POSTFIXOP = lexbase.POSTFIXOP
const UMINUS = lexbase.UMINUS
const HELPTOKEN = lexbase.HELPTOKEN

var sqlToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"IDENT",
	"SCONST",
	"BCONST",
	"BITCONST",
	"ICONST",
	"FCONST",
	"PLACEHOLDER",
	"TYPECAST",
	"TYPEANNOTATE",
	"DOT_DOT",
	"LESS_EQUALS",
	"GREATER_EQUALS",
	"NOT_EQUALS",
	"NOT_REGMATCH",
	"REGIMATCH",
	"NOT_REGIMATCH",
	"ERROR",
	"ABORT",
	"ACCESS",
	"ACTION",
	"ADD",
	"ADMIN",
	"AFTER",
	"AGGREGATE",
	"ALL",
	"ALTER",
	"ALWAYS",
	"ANALYSE",
	"ANALYZE",
	"AND",
	"AND_AND",
	"ANY",
	"ANNOTATE_TYPE",
	"ARRAY",
	"AS",
	"ASC",
	"ASYMMETRIC",
	"AT",
	"ATTRIBUTE",
	"AUTHORIZATION",
	"AUTOMATIC",
	"AVAILABILITY",
	"BACKUP",
	"BACKUPS",
	"BEFORE",
	"BEGIN",
	"BETWEEN",
	"BIGINT",
	"BIGSERIAL",
	"BINARY",
	"BIT",
	"BUCKET_COUNT",
	"BOOLEAN",
	"BOTH",
	"BOX2D",
	"BUNDLE",
	"BY",
	"CACHE",
	"CANCEL",
	"CANCELQUERY",
	"CASCADE",
	"CASE",
	"CAST",
	"CBRT",
	"CHANGEFEED",
	"CHAR",
	"CHARACTER",
	"CHARACTERISTICS",
	"CHECK",
	"CLOSE",
	"CLUSTER",
	"COALESCE",
	"COLLATE",
	"COLLATION",
	"COLUMN",
	"COLUMNS",
	"COMMENT",
	"COMMENTS",
	"COMMIT",
	"COMMITTED",
	"COMPACT",
	"COMPLETE",
	"CONCAT",
	"CONCURRENTLY",
	"CONFIGURATION",
	"CONFIGURATIONS",
	"CONFIGURE",
	"CONFLICT",
	"CONNECTION",
	"CONSTRAINT",
	"CONSTRAINTS",
	"CONTAINS",
	"CONTROLCHANGEFEED",
	"CONTROLJOB",
	"CONVERSION",
	"CONVERT",
	"COPY",
	"COVERING",
	"CREATE",
	"CREATEDB",
	"CREATELOGIN",
	"CREATEROLE",
	"CROSS",
	"CSV",
	"CUBE",
	"CURRENT",
	"CURRENT_CATALOG",
	"CURRENT_DATE",
	"CURRENT_SCHEMA",
	"CURRENT_ROLE",
	"CURRENT_TIME",
	"CURRENT_TIMESTAMP",
	"CURRENT_USER",
	"CURSOR",
	"CYCLE",
	"DATA",
	"DATABASE",
	"DATABASES",
	"DATE",
	"DAY",
	"DEC",
	"DECIMAL",
	"DEFAULT",
	"DEFAULTS",
	"DEALLOCATE",
	"DECLARE",
	"DEFERRABLE",
	"DEFERRED",
	"DELETE",
	"DELIMITER",
	"DESC",
	"DESTINATION",
	"DETACHED",
	"DISCARD",
	"DISTINCT",
	"DO",
	"DOMAIN",
	"DOUBLE",
	"DROP",
	"ELSE",
	"ENCODING",
	"ENCRYPTION_PASSPHRASE",
	"END",
	"ENUM",
	"ENUMS",
	"ESCAPE",
	"EXCEPT",
	"EXCLUDE",
	"EXCLUDING",
	"EXISTS",
	"EXECUTE",
	"EXECUTION",
	"EXPERIMENTAL",
	"EXPERIMENTAL_FINGERPRINTS",
	"EXPERIMENTAL_REPLICA",
	"EXPERIMENTAL_AUDIT",
	"EXPIRATION",
	"EXPLAIN",
	"EXPORT",
	"EXTENSION",
	"EXTRACT",
	"EXTRACT_DURATION",
	"FAILURE",
	"FALSE",
	"FAMILY",
	"FETCH",
	"FETCHVAL",
	"FETCHTEXT",
	"FETCHVAL_PATH",
	"FETCHTEXT_PATH",
	"FILES",
	"FILTER",
	"FIRST",
	"FLOAT",
	"FLOAT4",
	"FLOAT8",
	"FLOORDIV",
	"FOLLOWING",
	"FOR",
	"FORCE",
	"FORCE_INDEX",
	"FOREIGN",
	"FROM",
	"FULL",
	"FUNCTION",
	"FUNCTIONS",
	"GENERATED",
	"GEOGRAPHY",
	"GEOMETRY",
	"GEOMETRYM",
	"GEOMETRYZ",
	"GEOMETRYZM",
	"GEOMETRYCOLLECTION",
	"GEOMETRYCOLLECTIONM",
	"GEOMETRYCOLLECTIONZ",
	"GEOMETRYCOLLECTIONZM",
	"GLOBAL",
	"GOAL",
	"GRANT",
	"GRANTS",
	"GREATEST",
	"GROUP",
	"GROUPING",
	"GROUPS",
	"HAVING",
	"HASH",
	"HIGH",
	"HISTOGRAM",
	"HOUR",
	"IDENTITY",
	"IF",
	"IFERROR",
	"IFNULL",
	"IGNORE_FOREIGN_KEYS",
	"ILIKE",
	"IMMEDIATE",
	"IMPORT",
	"IN",
	"INCLUDE",
	"INCLUDE_DEPRECATED_INTERLEAVES",
	"INCLUDING",
	"INCREMENT",
	"INCREMENTAL",
	"INET",
	"INET_CONTAINED_BY_OR_EQUALS",
	"INET_CONTAINS_OR_EQUALS",
	"INDEX",
	"INDEXES",
	"INHERITS",
	"INJECT",
	"INTERLEAVE",
	"INITIALLY",
	"INNER",
	"INSERT",
	"INT",
	"INTEGER",
	"INTERSECT",
	"INTERVAL",
	"INTO",
	"INTO_DB",
	"INVERTED",
	"IS",
	"ISERROR",
	"ISNULL",
	"ISOLATION",
	"JOB",
	"JOBS",
	"JOIN",
	"JSON",
	"JSONB",
	"JSON_SOME_EXISTS",
	"JSON_ALL_EXISTS",
	"KEY",
	"KEYS",
	"KMS",
	"KV",
	"LANGUAGE",
	"LAST",
	"LATERAL",
	"LATEST",
	"LC_CTYPE",
	"LC_COLLATE",
	"LEADING",
	"LEASE",
	"LEAST",
	"LEFT",
	"LESS",
	"LEVEL",
	"LIKE",
	"LIMIT",
	"LINESTRING",
	"LINESTRINGM",
	"LINESTRINGZ",
	"LINESTRINGZM",
	"LIST",
	"LOCAL",
	"LOCALITY",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"LOCKED",
	"LOGIN",
	"LOOKUP",
	"LOW",
	"LSHIFT",
	"MATCH",
	"MATERIALIZED",
	"MERGE",
	"MINVALUE",
	"MAXVALUE",
	"METHOD",
	"MINUTE",
	"MODIFYCLUSTERSETTING",
	"MONTH",
	"MULTILINESTRING",
	"MULTILINESTRINGM",
	"MULTILINESTRINGZ",
	"MULTILINESTRINGZM",
	"MULTIPOINT",
	"MULTIPOINTM",
	"MULTIPOINTZ",
	"MULTIPOINTZM",
	"MULTIPOLYGON",
	"MULTIPOLYGONM",
	"MULTIPOLYGONZ",
	"MULTIPOLYGONZM",
	"NAN",
	"NAME",
	"NAMES",
	"NATURAL",
	"NEVER",
	"NEXT",
	"NO",
	"NOCANCELQUERY",
	"NOCONTROLCHANGEFEED",
	"NOCONTROLJOB",
	"NOCREATEDB",
	"NOCREATELOGIN",
	"NOCREATEROLE",
	"NOLOGIN",
	"NOMODIFYCLUSTERSETTING",
	"NO_INDEX_JOIN",
	"NO_ZIGZAG_JOIN",
	"NONE",
	"NON_VOTERS",
	"NORMAL",
	"NOT",
	"NOTHING",
	"NOTNULL",
	"NOVIEWACTIVITY",
	"NOWAIT",
	"NULL",
	"NULLIF",
	"NULLS",
	"NUMERIC",
	"OF",
	"OFF",
	"OFFSET",
	"OID",
	"OIDS",
	"OIDVECTOR",
	"ON",
	"ONLY",
	"OPT",
	"OPTION",
	"OPTIONS",
	"OR",
	"ORDER",
	"ORDINALITY",
	"OTHERS",
	"OUT",
	"OUTER",
	"OVER",
	"OVERLAPS",
	"OVERLAY",
	"OWNED",
	"OWNER",
	"OPERATOR",
	"PARENT",
	"PARTIAL",
	"PARTITION",
	"PARTITIONS",
	"PASSWORD",
	"PAUSE",
	"PAUSED",
	"PHYSICAL",
	"PLACEMENT",
	"PLACING",
	"PLAN",
	"PLANS",
	"POINT",
	"POINTM",
	"POINTZ",
	"POINTZM",
	"POLYGON",
	"POLYGONM",
	"POLYGONZ",
	"POLYGONZM",
	"POSITION",
	"PRECEDING",
	"PRECISION",
	"PREPARE",
	"PRESERVE",
	"PRIMARY",
	"PRIORITY",
	"PRIVILEGES",
	"PROCEDURAL",
	"PUBLIC",
	"PUBLICATION",
	"QUERIES",
	"QUERY",
	"RANGE",
	"RANGES",
	"READ",
	"REAL",
	"REASON",
	"REASSIGN",
	"RECURSIVE",
	"RECURRING",
	"REF",
	"REFERENCES",
	"REFRESH",
	"REGCLASS",
	"REGION",
	"REGIONAL",
	"REGIONS",
	"REGNAMESPACE",
	"REGPROC",
	"REGPROCEDURE",
	"REGROLE",
	"REGTYPE",
	"REINDEX",
	"REMOVE_PATH",
	"RENAME",
	"REPEATABLE",
	"REPLACE",
	"REPLICATION",
	"RELEASE",
	"RESET",
	"RESTORE",
	"RESTRICT",
	"RESTRICTED",
	"RESUME",
	"RETURNING",
	"RETRY",
	"REVISION_HISTORY",
	"REVOKE",
	"RIGHT",
	"ROLE",
	"ROLES",
	"ROLLBACK",
	"ROLLUP",
	"ROUTINES",
	"ROW",
	"ROWS",
	"RSHIFT",
	"RULE",
	"RUNNING",
	"SAVEPOINT",
	"SCANS",
	"SCATTER",
	"SCHEDULE",
	"SCHEDULES",
	"SCHEMA",
	"SCHEMAS",
	"SCRUB",
	"SEARCH",
	"SECOND",
	"SELECT",
	"SEQUENCE",
	"SEQUENCES",
	"SERIALIZABLE",
	"SERVER",
	"SESSION",
	"SESSIONS",
	"SESSION_USER",
	"SET",
	"SETS",
	"SETTING",
	"SETTINGS",
	"SHARE",
	"SHOW",
	"SIMILAR",
	"SIMPLE",
	"SKIP",
	"SKIP_LOCALITIES_CHECK",
	"SKIP_MISSING_FOREIGN_KEYS",
	"SKIP_MISSING_SEQUENCES",
	"SKIP_MISSING_SEQUENCE_OWNERS",
	"SKIP_MISSING_VIEWS",
	"SMALLINT",
	"SMALLSERIAL",
	"SNAPSHOT",
	"SOME",
	"SPLIT",
	"SQL",
	"START",
	"STATISTICS",
	"STATUS",
	"STDIN",
	"STREAM",
	"STRICT",
	"STRING",
	"STORAGE",
	"STORE",
	"STORED",
	"STORING",
	"SUBSTRING",
	"SURVIVE",
	"SURVIVAL",
	"SYMMETRIC",
	"SYNTAX",
	"SYSTEM",
	"SQRT",
	"SUBSCRIPTION",
	"STATEMENTS",
	"TABLE",
	"TABLES",
	"TABLESPACE",
	"TEMP",
	"TEMPLATE",
	"TEMPORARY",
	"TENANT",
	"TESTING_RELOCATE",
	"EXPERIMENTAL_RELOCATE",
	"TEXT",
	"THEN",
	"TIES",
	"TIME",
	"TIMETZ",
	"TIMESTAMP",
	"TIMESTAMPTZ",
	"TO",
	"THROTTLING",
	"TRAILING",
	"TRACE",
	"TRANSACTION",
	"TRANSACTIONS",
	"TREAT",
	"TRIGGER",
	"TRIM",
	"TRUE",
	"TRUNCATE",
	"TRUSTED",
	"TYPE",
	"TYPES",
	"TRACING",
	"UNBOUNDED",
	"UNCOMMITTED",
	"UNION",
	"UNIQUE",
	"UNKNOWN",
	"UNLOGGED",
	"UNSPLIT",
	"UPDATE",
	"UPSERT",
	"UNTIL",
	"USE",
	"USER",
	"USERS",
	"USING",
	"UUID",
	"VALID",
	"VALIDATE",
	"VALUE",
	"VALUES",
	"VARBIT",
	"VARCHAR",
	"VARIADIC",
	"VIEW",
	"VARYING",
	"VIEWACTIVITY",
	"VIRTUAL",
	"VISIBLE",
	"VOTERS",
	"WHEN",
	"WHERE",
	"WINDOW",
	"WITH",
	"WITHIN",
	"WITHOUT",
	"WORK",
	"WRITE",
	"YEAR",
	"ZONE",
	"NOT_LA",
	"NULLS_LA",
	"WITH_LA",
	"AS_LA",
	"GENERATED_ALWAYS",
	"GENERATED_BY_DEFAULT",
	"RESET_ALL",
	"ROLE_ALL",
	"USER_ALL",
	"ON_LA",
	"'<'",
	"'>'",
	"'='",
	"'~'",
	"CONTAINED_BY",
	"'?'",
	"POSTFIXOP",
	"'|'",
	"'#'",
	"'&'",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"'%'",
	"'^'",
	"UMINUS",
	"'['",
	"']'",
	"'('",
	"')'",
	"'.'",
	"HELPTOKEN",
	"'@'",
	"','",
	"'{'",
	"'}'",
	"':'",
}

var sqlStatenames = [...]string{}

const sqlEofCode = 1
const sqlErrCode = 2
const sqlInitialStackSize = 16

//line sql-gen.y:13581

//line yacctab:1
var sqlExca = [...]int{
	-1, 0,
	1, 35,
	-2, 1570,
	-1, 1,
	1, -1,
	-2, 0,
	-1, 57,
	260, 406,
	-2, 0,
	-1, 74,
	242, 243,
	515, 243,
	-2, 0,
	-1, 87,
	230, 1306,
	244, 1306,
	260, 402,
	389, 402,
	400, 1060,
	439, 402,
	452, 1060,
	499, 1060,
	526, 402,
	552, 1060,
	-2, 0,
	-1, 93,
	132, 1570,
	237, 1570,
	537, 1570,
	538, 1570,
	-2, 0,
	-1, 109,
	150, 1541,
	169, 1541,
	182, 1541,
	240, 1541,
	273, 1541,
	340, 1541,
	350, 1541,
	532, 1541,
	-2, 1512,
	-1, 149,
	158, 909,
	259, 909,
	392, 870,
	457, 870,
	498, 870,
	518, 909,
	520, 870,
	-2, 0,
	-1, 153,
	4, 1572,
	21, 1572,
	22, 1572,
	23, 1572,
	24, 1572,
	25, 1572,
	26, 1572,
	27, 1572,
	29, 1572,
	30, 1572,
	36, 1572,
	41, 1572,
	42, 1572,
	44, 1572,
	45, 1572,
	46, 1572,
	47, 1572,
	48, 1572,
	49, 1572,
	50, 1572,
	51, 1572,
	53, 1572,
	54, 1572,
	55, 1572,
	56, 1572,
	58, 1572,
	59, 1572,
	60, 1572,
	61, 1572,
	62, 1572,
	63, 1572,
	64, 1572,
	68, 1572,
	69, 1572,
	70, 1572,
	71, 1572,
	73, 1572,
	74, 1572,
	75, 1572,
	79, 1572,
	80, 1572,
	81, 1572,
	82, 1572,
	83, 1572,
	84, 1572,
	85, 1572,
	88, 1572,
	89, 1572,
	90, 1572,
	91, 1572,
	92, 1572,
	94, 1572,
	96, 1572,
	97, 1572,
	98, 1572,
	99, 1572,
	100, 1572,
	101, 1572,
	103, 1572,
	104, 1572,
	105, 1572,
	107, 1572,
	108, 1572,
	109, 1572,
	117, 1572,
	118, 1572,
	119, 1572,
	120, 1572,
	121, 1572,
	123, 1572,
	124, 1572,
	125, 1572,
	127, 1572,
	128, 1572,
	129, 1572,
	131, 1572,
	132, 1572,
	133, 1572,
	135, 1572,
	136, 1572,
	137, 1572,
	140, 1572,
	141, 1572,
	142, 1572,
	144, 1572,
	145, 1572,
	147, 1572,
	148, 1572,
	149, 1572,
	151, 1572,
	152, 1572,
	153, 1572,
	154, 1572,
	155, 1572,
	156, 1572,
	157, 1572,
	158, 1572,
	159, 1572,
	160, 1572,
	161, 1572,
	162, 1572,
	163, 1572,
	164, 1572,
	165, 1572,
	166, 1572,
	168, 1572,
	174, 1572,
	175, 1572,
	176, 1572,
	177, 1572,
	181, 1572,
	183, 1572,
	184, 1572,
	188, 1572,
	189, 1572,
	190, 1572,
	191, 1572,
	192, 1572,
	193, 1572,
	194, 1572,
	195, 1572,
	196, 1572,
	197, 1572,
	198, 1572,
	199, 1572,
	200, 1572,
	201, 1572,
	203, 1572,
	204, 1572,
	206, 1572,
	207, 1572,
	209, 1572,
	210, 1572,
	211, 1572,
	212, 1572,
	213, 1572,
	214, 1572,
	215, 1572,
	216, 1572,
	217, 1572,
	219, 1572,
	220, 1572,
	222, 1572,
	223, 1572,
	224, 1572,
	225, 1572,
	226, 1572,
	230, 1572,
	231, 1572,
	232, 1572,
	233, 1572,
	234, 1572,
	237, 1572,
	238, 1572,
	239, 1572,
	241, 1572,
	243, 1572,
	244, 1572,
	246, 1572,
	248, 1572,
	249, 1572,
	250, 1572,
	252, 1572,
	256, 1572,
	257, 1572,
	258, 1572,
	259, 1572,
	260, 1572,
	261, 1572,
	263, 1572,
	264, 1572,
	265, 1572,
	267, 1572,
	268, 1572,
	270, 1572,
	271, 1572,
	274, 1572,
	278, 1572,
	279, 1572,
	280, 1572,
	283, 1572,
	284, 1572,
	285, 1572,
	286, 1572,
	288, 1572,
	289, 1572,
	290, 1572,
	291, 1572,
	292, 1572,
	293, 1572,
	294, 1572,
	295, 1572,
	296, 1572,
	297, 1572,
	298, 1572,
	299, 1572,
	300, 1572,
	301, 1572,
	302, 1572,
	303, 1572,
	304, 1572,
	305, 1572,
	306, 1572,
	307, 1572,
	308, 1572,
	309, 1572,
	311, 1572,
	313, 1572,
	314, 1572,
	315, 1572,
	316, 1572,
	317, 1572,
	318, 1572,
	319, 1572,
	320, 1572,
	321, 1572,
	322, 1572,
	323, 1572,
	324, 1572,
	325, 1572,
	327, 1572,
	328, 1572,
	330, 1572,
	332, 1572,
	333, 1572,
	335, 1572,
	336, 1572,
	337, 1572,
	338, 1572,
	339, 1572,
	342, 1572,
	345, 1572,
	346, 1572,
	347, 1572,
	348, 1572,
	351, 1572,
	352, 1572,
	353, 1572,
	355, 1572,
	357, 1572,
	358, 1572,
	359, 1572,
	360, 1572,
	361, 1572,
	362, 1572,
	363, 1572,
	364, 1572,
	365, 1572,
	366, 1572,
	367, 1572,
	368, 1572,
	369, 1572,
	371, 1572,
	372, 1572,
	373, 1572,
	374, 1572,
	375, 1572,
	376, 1572,
	377, 1572,
	378, 1572,
	379, 1572,
	380, 1572,
	381, 1572,
	382, 1572,
	383, 1572,
	384, 1572,
	385, 1572,
	387, 1572,
	388, 1572,
	390, 1572,
	391, 1572,
	392, 1572,
	393, 1572,
	394, 1572,
	395, 1572,
	396, 1572,
	397, 1572,
	398, 1572,
	399, 1572,
	400, 1572,
	401, 1572,
	402, 1572,
	404, 1572,
	406, 1572,
	407, 1572,
	408, 1572,
	414, 1572,
	416, 1572,
	417, 1572,
	418, 1572,
	419, 1572,
	420, 1572,
	421, 1572,
	422, 1572,
	423, 1572,
	424, 1572,
	425, 1572,
	427, 1572,
	428, 1572,
	429, 1572,
	431, 1572,
	432, 1572,
	433, 1572,
	434, 1572,
	435, 1572,
	436, 1572,
	437, 1572,
	439, 1572,
	440, 1572,
	441, 1572,
	442, 1572,
	443, 1572,
	444, 1572,
	445, 1572,
	446, 1572,
	447, 1572,
	448, 1572,
	449, 1572,
	450, 1572,
	452, 1572,
	453, 1572,
	454, 1572,
	455, 1572,
	456, 1572,
	457, 1572,
	459, 1572,
	460, 1572,
	461, 1572,
	462, 1572,
	463, 1572,
	464, 1572,
	466, 1572,
	467, 1572,
	468, 1572,
	469, 1572,
	470, 1572,
	471, 1572,
	472, 1572,
	473, 1572,
	475, 1572,
	477, 1572,
	478, 1572,
	479, 1572,
	480, 1572,
	481, 1572,
	482, 1572,
	483, 1572,
	484, 1572,
	485, 1572,
	486, 1572,
	487, 1572,
	488, 1572,
	489, 1572,
	490, 1572,
	491, 1572,
	492, 1572,
	494, 1572,
	495, 1572,
	497, 1572,
	498, 1572,
	500, 1572,
	501, 1572,
	502, 1572,
	503, 1572,
	504, 1572,
	505, 1572,
	506, 1572,
	507, 1572,
	508, 1572,
	510, 1572,
	511, 1572,
	512, 1572,
	513, 1572,
	514, 1572,
	516, 1572,
	518, 1572,
	519, 1572,
	520, 1572,
	521, 1572,
	522, 1572,
	523, 1572,
	525, 1572,
	526, 1572,
	527, 1572,
	528, 1572,
	530, 1572,
	531, 1572,
	534, 1572,
	535, 1572,
	536, 1572,
	537, 1572,
	538, 1572,
	539, 1572,
	540, 1572,
	542, 1572,
	545, 1572,
	546, 1572,
	547, 1572,
	548, 1572,
	549, 1572,
	550, 1572,
	552, 1572,
	553, 1572,
	554, 1572,
	555, 1572,
	557, 1572,
	562, 1572,
	563, 1572,
	564, 1572,
	565, 1572,
	566, 1572,
	567, 1572,
	-2, 0,
	-1, 154,
	1, 1423,
	130, 1423,
	248, 1423,
	329, 1423,
	387, 1423,
	396, 1423,
	571, 1423,
	600, 1423,
	-2, 0,
	-1, 156,
	1, 1423,
	600, 1423,
	-2, 0,
	-1, 157,
	1, 1423,
	600, 1423,
	-2, 0,
	-1, 158,
	1, 1423,
	515, 1423,
	600, 1423,
	-2, 0,
	-1, 187,
	150, 1540,
	169, 1540,
	182, 1540,
	240, 1540,
	273, 1540,
	340, 1540,
	350, 1540,
	532, 1540,
	-2, 1515,
	-1, 235,
	4, 1579,
	5, 1579,
	6, 1579,
	7, 1579,
	8, 1579,
	9, 1579,
	10, 1579,
	21, 1579,
	22, 1579,
	23, 1579,
	24, 1579,
	25, 1579,
	26, 1579,
	27, 1579,
	29, 1579,
	30, 1579,
	36, 1579,
	37, 1579,
	41, 1579,
	42, 1579,
	43, 1579,
	44, 1579,
	45, 1579,
	46, 1579,
	47, 1579,
	48, 1579,
	49, 1579,
	50, 1579,
	51, 1579,
	53, 1579,
	54, 1579,
	55, 1579,
	56, 1579,
	58, 1579,
	59, 1579,
	60, 1579,
	61, 1579,
	62, 1579,
	63, 1579,
	64, 1579,
	65, 1579,
	66, 1579,
	67, 1579,
	68, 1579,
	69, 1579,
	70, 1579,
	71, 1579,
	73, 1579,
	74, 1579,
	75, 1579,
	77, 1579,
	79, 1579,
	80, 1579,
	81, 1579,
	82, 1579,
	83, 1579,
	84, 1579,
	85, 1579,
	88, 1579,
	89, 1579,
	90, 1579,
	91, 1579,
	92, 1579,
	94, 1579,
	96, 1579,
	97, 1579,
	98, 1579,
	99, 1579,
	100, 1579,
	101, 1579,
	103, 1579,
	104, 1579,
	105, 1579,
	106, 1579,
	107, 1579,
	108, 1579,
	109, 1579,
	110, 1579,
	111, 1579,
	112, 1579,
	113, 1579,
	114, 1579,
	115, 1579,
	116, 1579,
	117, 1579,
	118, 1579,
	119, 1579,
	120, 1579,
	121, 1579,
	122, 1579,
	123, 1579,
	124, 1579,
	125, 1579,
	126, 1579,
	127, 1579,
	128, 1579,
	129, 1579,
	131, 1579,
	132, 1579,
	133, 1579,
	135, 1579,
	136, 1579,
	137, 1579,
	140, 1579,
	141, 1579,
	142, 1579,
	144, 1579,
	145, 1579,
	147, 1579,
	148, 1579,
	149, 1579,
	151, 1579,
	152, 1579,
	153, 1579,
	154, 1579,
	155, 1579,
	156, 1579,
	157, 1579,
	158, 1579,
	159, 1579,
	160, 1579,
	161, 1579,
	162, 1579,
	163, 1579,
	164, 1579,
	165, 1579,
	166, 1579,
	167, 1579,
	168, 1579,
	174, 1579,
	175, 1579,
	176, 1579,
	177, 1579,
	181, 1579,
	183, 1579,
	184, 1579,
	187, 1579,
	188, 1579,
	189, 1579,
	190, 1579,
	191, 1579,
	192, 1579,
	193, 1579,
	194, 1579,
	195, 1579,
	196, 1579,
	197, 1579,
	198, 1579,
	199, 1579,
	200, 1579,
	201, 1579,
	203, 1579,
	204, 1579,
	206, 1579,
	207, 1579,
	209, 1579,
	210, 1579,
	211, 1579,
	212, 1579,
	213, 1579,
	214, 1579,
	215, 1579,
	216, 1579,
	217, 1579,
	218, 1579,
	219, 1579,
	220, 1579,
	222, 1579,
	223, 1579,
	224, 1579,
	225, 1579,
	226, 1579,
	230, 1579,
	231, 1579,
	232, 1579,
	233, 1579,
	234, 1579,
	236, 1579,
	237, 1579,
	238, 1579,
	239, 1579,
	241, 1579,
	243, 1579,
	244, 1579,
	245, 1579,
	246, 1579,
	247, 1579,
	248, 1579,
	249, 1579,
	250, 1579,
	251, 1579,
	252, 1579,
	256, 1579,
	257, 1579,
	258, 1579,
	259, 1579,
	260, 1579,
	261, 1579,
	263, 1579,
	264, 1579,
	265, 1579,
	267, 1579,
	268, 1579,
	269, 1579,
	270, 1579,
	271, 1579,
	272, 1579,
	274, 1579,
	278, 1579,
	279, 1579,
	280, 1579,
	281, 1579,
	282, 1579,
	283, 1579,
	284, 1579,
	285, 1579,
	286, 1579,
	288, 1579,
	289, 1579,
	290, 1579,
	291, 1579,
	292, 1579,
	293, 1579,
	294, 1579,
	295, 1579,
	296, 1579,
	297, 1579,
	298, 1579,
	299, 1579,
	300, 1579,
	301, 1579,
	302, 1579,
	303, 1579,
	304, 1579,
	305, 1579,
	306, 1579,
	307, 1579,
	308, 1579,
	309, 1579,
	311, 1579,
	312, 1579,
	313, 1579,
	314, 1579,
	315, 1579,
	316, 1579,
	317, 1579,
	318, 1579,
	319, 1579,
	320, 1579,
	321, 1579,
	322, 1579,
	323, 1579,
	324, 1579,
	325, 1579,
	326, 1579,
	327, 1579,
	328, 1579,
	329, 1579,
	330, 1579,
	331, 1579,
	332, 1579,
	333, 1579,
	334, 1579,
	335, 1579,
	336, 1579,
	337, 1579,
	338, 1579,
	339, 1579,
	342, 1579,
	346, 1579,
	347, 1579,
	348, 1579,
	351, 1579,
	352, 1579,
	353, 1579,
	354, 1579,
	355, 1579,
	356, 1579,
	357, 1579,
	358, 1579,
	359, 1579,
	360, 1579,
	361, 1579,
	362, 1579,
	363, 1579,
	364, 1579,
	365, 1579,
	366, 1579,
	367, 1579,
	368, 1579,
	369, 1579,
	371, 1579,
	372, 1579,
	373, 1579,
	374, 1579,
	375, 1579,
	376, 1579,
	377, 1579,
	378, 1579,
	379, 1579,
	380, 1579,
	381, 1579,
	382, 1579,
	383, 1579,
	384, 1579,
	385, 1579,
	387, 1579,
	388, 1579,
	390, 1579,
	391, 1579,
	392, 1579,
	393, 1579,
	394, 1579,
	395, 1579,
	396, 1579,
	397, 1579,
	398, 1579,
	399, 1579,
	400, 1579,
	401, 1579,
	402, 1579,
	404, 1579,
	406, 1579,
	407, 1579,
	408, 1579,
	414, 1579,
	416, 1579,
	417, 1579,
	418, 1579,
	419, 1579,
	420, 1579,
	421, 1579,
	422, 1579,
	423, 1579,
	424, 1579,
	425, 1579,
	427, 1579,
	428, 1579,
	429, 1579,
	430, 1579,
	431, 1579,
	432, 1579,
	433, 1579,
	434, 1579,
	435, 1579,
	436, 1579,
	437, 1579,
	439, 1579,
	440, 1579,
	441, 1579,
	442, 1579,
	443, 1579,
	444, 1579,
	445, 1579,
	446, 1579,
	447, 1579,
	448, 1579,
	449, 1579,
	450, 1579,
	452, 1579,
	453, 1579,
	454, 1579,
	455, 1579,
	456, 1579,
	457, 1579,
	458, 1579,
	459, 1579,
	460, 1579,
	461, 1579,
	462, 1579,
	463, 1579,
	464, 1579,
	465, 1579,
	466, 1579,
	467, 1579,
	468, 1579,
	469, 1579,
	470, 1579,
	471, 1579,
	472, 1579,
	473, 1579,
	475, 1579,
	477, 1579,
	478, 1579,
	479, 1579,
	480, 1579,
	481, 1579,
	482, 1579,
	483, 1579,
	484, 1579,
	485, 1579,
	486, 1579,
	487, 1579,
	488, 1579,
	489, 1579,
	490, 1579,
	491, 1579,
	492, 1579,
	494, 1579,
	495, 1579,
	496, 1579,
	497, 1579,
	498, 1579,
	500, 1579,
	501, 1579,
	502, 1579,
	503, 1579,
	504, 1579,
	505, 1579,
	506, 1579,
	507, 1579,
	508, 1579,
	510, 1579,
	511, 1579,
	512, 1579,
	513, 1579,
	514, 1579,
	516, 1579,
	518, 1579,
	519, 1579,
	520, 1579,
	521, 1579,
	522, 1579,
	523, 1579,
	524, 1579,
	525, 1579,
	526, 1579,
	527, 1579,
	528, 1579,
	530, 1579,
	531, 1579,
	533, 1579,
	534, 1579,
	535, 1579,
	536, 1579,
	537, 1579,
	538, 1579,
	539, 1579,
	540, 1579,
	541, 1579,
	542, 1579,
	545, 1579,
	546, 1579,
	547, 1579,
	548, 1579,
	549, 1579,
	550, 1579,
	552, 1579,
	553, 1579,
	554, 1579,
	555, 1579,
	557, 1579,
	562, 1579,
	563, 1579,
	564, 1579,
	565, 1579,
	566, 1579,
	567, 1579,
	568, 1579,
	581, 1579,
	588, 1579,
	589, 1579,
	590, 1579,
	597, 1579,
	601, 1579,
	-2, 0,
	-1, 740,
	4, 1304,
	21, 1304,
	22, 1304,
	23, 1304,
	24, 1304,
	25, 1304,
	26, 1304,
	27, 1304,
	29, 1304,
	30, 1304,
	36, 1304,
	41, 1304,
	42, 1304,
	44, 1304,
	45, 1304,
	46, 1304,
	47, 1304,
	48, 1304,
	49, 1304,
	50, 1304,
	51, 1304,
	53, 1304,
	54, 1304,
	55, 1304,
	56, 1304,
	58, 1304,
	59, 1304,
	60, 1304,
	61, 1304,
	62, 1304,
	63, 1304,
	64, 1304,
	68, 1304,
	69, 1304,
	70, 1304,
	71, 1304,
	73, 1304,
	74, 1304,
	75, 1304,
	79, 1304,
	80, 1304,
	81, 1304,
	82, 1304,
	83, 1304,
	84, 1304,
	85, 1304,
	88, 1304,
	89, 1304,
	90, 1304,
	91, 1304,
	92, 1304,
	94, 1304,
	96, 1304,
	97, 1304,
	98, 1304,
	99, 1304,
	100, 1304,
	101, 1304,
	103, 1304,
	104, 1304,
	105, 1304,
	107, 1304,
	108, 1304,
	109, 1304,
	117, 1304,
	118, 1304,
	119, 1304,
	120, 1304,
	121, 1304,
	123, 1304,
	124, 1304,
	125, 1304,
	127, 1304,
	128, 1304,
	129, 1304,
	131, 1304,
	132, 1304,
	133, 1304,
	135, 1304,
	136, 1304,
	137, 1304,
	140, 1304,
	141, 1304,
	142, 1304,
	144, 1304,
	145, 1304,
	147, 1304,
	148, 1304,
	149, 1304,
	151, 1304,
	152, 1304,
	153, 1304,
	154, 1304,
	155, 1304,
	156, 1304,
	157, 1304,
	158, 1304,
	159, 1304,
	160, 1304,
	161, 1304,
	162, 1304,
	163, 1304,
	164, 1304,
	165, 1304,
	166, 1304,
	168, 1304,
	174, 1304,
	175, 1304,
	176, 1304,
	177, 1304,
	181, 1304,
	183, 1304,
	184, 1304,
	188, 1304,
	189, 1304,
	190, 1304,
	191, 1304,
	192, 1304,
	193, 1304,
	194, 1304,
	195, 1304,
	196, 1304,
	197, 1304,
	198, 1304,
	199, 1304,
	200, 1304,
	201, 1304,
	203, 1304,
	204, 1304,
	206, 1304,
	207, 1304,
	209, 1304,
	210, 1304,
	211, 1304,
	212, 1304,
	213, 1304,
	214, 1304,
	215, 1304,
	216, 1304,
	217, 1304,
	219, 1304,
	220, 1304,
	222, 1304,
	223, 1304,
	224, 1304,
	225, 1304,
	226, 1304,
	230, 1304,
	231, 1304,
	232, 1304,
	233, 1304,
	234, 1304,
	237, 1304,
	238, 1304,
	239, 1304,
	241, 1304,
	243, 1304,
	244, 1304,
	246, 1304,
	248, 1304,
	249, 1304,
	250, 1304,
	252, 1304,
	256, 1304,
	257, 1304,
	258, 1304,
	259, 1304,
	260, 1304,
	261, 1304,
	263, 1304,
	264, 1304,
	265, 1304,
	267, 1304,
	268, 1304,
	270, 1304,
	271, 1304,
	274, 1304,
	278, 1304,
	279, 1304,
	280, 1304,
	283, 1304,
	284, 1304,
	285, 1304,
	286, 1304,
	288, 1304,
	289, 1304,
	290, 1304,
	291, 1304,
	292, 1304,
	293, 1304,
	294, 1304,
	295, 1304,
	296, 1304,
	297, 1304,
	298, 1304,
	299, 1304,
	300, 1304,
	301, 1304,
	302, 1304,
	303, 1304,
	304, 1304,
	305, 1304,
	306, 1304,
	307, 1304,
	308, 1304,
	309, 1304,
	311, 1304,
	313, 1304,
	314, 1304,
	315, 1304,
	316, 1304,
	317, 1304,
	318, 1304,
	319, 1304,
	320, 1304,
	321, 1304,
	322, 1304,
	323, 1304,
	324, 1304,
	325, 1304,
	327, 1304,
	328, 1304,
	330, 1304,
	332, 1304,
	333, 1304,
	335, 1304,
	336, 1304,
	337, 1304,
	338, 1304,
	339, 1304,
	342, 1304,
	346, 1304,
	347, 1304,
	348, 1304,
	351, 1304,
	352, 1304,
	353, 1304,
	355, 1304,
	357, 1304,
	358, 1304,
	359, 1304,
	360, 1304,
	361, 1304,
	362, 1304,
	363, 1304,
	364, 1304,
	365, 1304,
	366, 1304,
	367, 1304,
	368, 1304,
	369, 1304,
	371, 1304,
	372, 1304,
	373, 1304,
	374, 1304,
	375, 1304,
	376, 1304,
	377, 1304,
	378, 1304,
	379, 1304,
	380, 1304,
	381, 1304,
	382, 1304,
	383, 1304,
	384, 1304,
	385, 1304,
	387, 1304,
	388, 1304,
	390, 1304,
	391, 1304,
	392, 1304,
	393, 1304,
	394, 1304,
	395, 1304,
	396, 1304,
	397, 1304,
	398, 1304,
	399, 1304,
	400, 1304,
	401, 1304,
	402, 1304,
	404, 1304,
	406, 1304,
	407, 1304,
	408, 1304,
	414, 1304,
	416, 1304,
	417, 1304,
	418, 1304,
	419, 1304,
	420, 1304,
	421, 1304,
	422, 1304,
	423, 1304,
	424, 1304,
	425, 1304,
	427, 1304,
	428, 1304,
	429, 1304,
	431, 1304,
	432, 1304,
	433, 1304,
	434, 1304,
	435, 1304,
	436, 1304,
	437, 1304,
	439, 1304,
	440, 1304,
	441, 1304,
	442, 1304,
	443, 1304,
	444, 1304,
	445, 1304,
	446, 1304,
	447, 1304,
	448, 1304,
	449, 1304,
	450, 1304,
	452, 1304,
	453, 1304,
	454, 1304,
	455, 1304,
	456, 1304,
	457, 1304,
	459, 1304,
	460, 1304,
	461, 1304,
	462, 1304,
	463, 1304,
	464, 1304,
	466, 1304,
	467, 1304,
	468, 1304,
	469, 1304,
	470, 1304,
	471, 1304,
	472, 1304,
	473, 1304,
	475, 1304,
	477, 1304,
	478, 1304,
	479, 1304,
	480, 1304,
	481, 1304,
	482, 1304,
	483, 1304,
	484, 1304,
	485, 1304,
	486, 1304,
	487, 1304,
	488, 1304,
	489, 1304,
	490, 1304,
	491, 1304,
	492, 1304,
	494, 1304,
	495, 1304,
	497, 1304,
	498, 1304,
	500, 1304,
	501, 1304,
	502, 1304,
	503, 1304,
	504, 1304,
	505, 1304,
	506, 1304,
	507, 1304,
	508, 1304,
	510, 1304,
	511, 1304,
	512, 1304,
	513, 1304,
	514, 1304,
	516, 1304,
	518, 1304,
	519, 1304,
	520, 1304,
	521, 1304,
	522, 1304,
	523, 1304,
	525, 1304,
	526, 1304,
	527, 1304,
	528, 1304,
	530, 1304,
	531, 1304,
	534, 1304,
	535, 1304,
	536, 1304,
	537, 1304,
	538, 1304,
	539, 1304,
	540, 1304,
	542, 1304,
	545, 1304,
	546, 1304,
	547, 1304,
	548, 1304,
	549, 1304,
	550, 1304,
	552, 1304,
	553, 1304,
	554, 1304,
	555, 1304,
	557, 1304,
	562, 1304,
	563, 1304,
	564, 1304,
	565, 1304,
	566, 1304,
	567, 1304,
	-2, 0,
	-1, 759,
	186, 2367,
	515, 2367,
	580, 2367,
	599, 2367,
	-2, 0,
	-1, 760,
	186, 2474,
	515, 2474,
	580, 2474,
	599, 2474,
	-2, 0,
	-1, 761,
	186, 2354,
	515, 2354,
	580, 2354,
	599, 2354,
	-2, 0,
	-1, 763,
	186, 2611,
	515, 2611,
	580, 2611,
	599, 2611,
	-2, 0,
	-1, 765,
	186, 2652,
	515, 2652,
	580, 2652,
	599, 2652,
	-2, 0,
	-1, 774,
	186, 2501,
	515, 2501,
	580, 2501,
	599, 2501,
	-2, 696,
	-1, 809,
	599, 2303,
	602, 2303,
	-2, 989,
	-1, 810,
	599, 2305,
	602, 2305,
	-2, 990,
	-1, 811,
	599, 2304,
	602, 2304,
	-2, 991,
	-1, 812,
	602, 2229,
	-2, 992,
	-1, 835,
	182, 258,
	-2, 0,
	-1, 859,
	43, 2276,
	-2, 0,
	-1, 860,
	552, 1282,
	-2, 1061,
	-1, 876,
	4, 1709,
	21, 1709,
	22, 1709,
	23, 1709,
	24, 1709,
	25, 1709,
	26, 1709,
	27, 1709,
	29, 1709,
	30, 1709,
	36, 1709,
	41, 1709,
	42, 1709,
	44, 1709,
	45, 1709,
	46, 1709,
	47, 1709,
	48, 1709,
	49, 1709,
	50, 1709,
	51, 1709,
	53, 1709,
	54, 1709,
	55, 1709,
	56, 1709,
	58, 1709,
	59, 1709,
	60, 1709,
	61, 1709,
	62, 1709,
	63, 1709,
	64, 1709,
	68, 1709,
	69, 1709,
	70, 1709,
	71, 1709,
	73, 1709,
	74, 1709,
	75, 1709,
	79, 1709,
	80, 1709,
	81, 1709,
	82, 1709,
	83, 1709,
	84, 1709,
	85, 1709,
	88, 1709,
	89, 1709,
	90, 1709,
	91, 1709,
	92, 1709,
	94, 1709,
	96, 1709,
	97, 1709,
	98, 1709,
	99, 1709,
	100, 1709,
	101, 1709,
	103, 1709,
	104, 1709,
	105, 1709,
	107, 1709,
	108, 1709,
	109, 1709,
	117, 1709,
	118, 1709,
	119, 1709,
	120, 1709,
	121, 1709,
	123, 1709,
	124, 1709,
	125, 1709,
	127, 1709,
	128, 1709,
	129, 1709,
	131, 1709,
	132, 1709,
	133, 1709,
	135, 1709,
	136, 1709,
	137, 1709,
	140, 1709,
	141, 1709,
	142, 1709,
	144, 1709,
	145, 1709,
	147, 1709,
	148, 1709,
	149, 1709,
	151, 1709,
	152, 1709,
	153, 1709,
	154, 1709,
	155, 1709,
	156, 1709,
	157, 1709,
	158, 1709,
	159, 1709,
	160, 1709,
	161, 1709,
	162, 1709,
	163, 1709,
	164, 1709,
	165, 1709,
	166, 1709,
	168, 1709,
	174, 1709,
	175, 1709,
	176, 1709,
	177, 1709,
	181, 1709,
	183, 1709,
	184, 1709,
	188, 1709,
	189, 1709,
	190, 1709,
	191, 1709,
	192, 1709,
	193, 1709,
	194, 1709,
	195, 1709,
	196, 1709,
	197, 1709,
	198, 1709,
	199, 1709,
	200, 1709,
	201, 1709,
	203, 1709,
	204, 1709,
	206, 1709,
	207, 1709,
	209, 1709,
	210, 1709,
	211, 1709,
	212, 1709,
	213, 1709,
	214, 1709,
	215, 1709,
	216, 1709,
	217, 1709,
	219, 1709,
	220, 1709,
	222, 1709,
	223, 1709,
	224, 1709,
	225, 1709,
	226, 1709,
	230, 1709,
	231, 1709,
	232, 1709,
	233, 1709,
	234, 1709,
	237, 1709,
	238, 1709,
	239, 1709,
	241, 1709,
	243, 1709,
	244, 1709,
	246, 1709,
	248, 1709,
	249, 1709,
	250, 1709,
	252, 1709,
	256, 1709,
	257, 1709,
	258, 1709,
	259, 1709,
	260, 1709,
	261, 1709,
	263, 1709,
	264, 1709,
	265, 1709,
	267, 1709,
	268, 1709,
	270, 1709,
	271, 1709,
	274, 1709,
	278, 1709,
	279, 1709,
	280, 1709,
	283, 1709,
	284, 1709,
	285, 1709,
	286, 1709,
	288, 1709,
	289, 1709,
	290, 1709,
	291, 1709,
	292, 1709,
	293, 1709,
	294, 1709,
	295, 1709,
	296, 1709,
	297, 1709,
	298, 1709,
	299, 1709,
	300, 1709,
	301, 1709,
	302, 1709,
	303, 1709,
	304, 1709,
	305, 1709,
	306, 1709,
	307, 1709,
	308, 1709,
	309, 1709,
	311, 1709,
	313, 1709,
	314, 1709,
	315, 1709,
	316, 1709,
	317, 1709,
	318, 1709,
	319, 1709,
	320, 1709,
	321, 1709,
	322, 1709,
	323, 1709,
	324, 1709,
	325, 1709,
	327, 1709,
	328, 1709,
	330, 1709,
	332, 1709,
	333, 1709,
	335, 1709,
	336, 1709,
	337, 1709,
	338, 1709,
	339, 1709,
	342, 1709,
	346, 1709,
	347, 1709,
	348, 1709,
	351, 1709,
	352, 1709,
	353, 1709,
	355, 1709,
	357, 1709,
	358, 1709,
	359, 1709,
	360, 1709,
	361, 1709,
	362, 1709,
	363, 1709,
	364, 1709,
	365, 1709,
	366, 1709,
	367, 1709,
	368, 1709,
	369, 1709,
	371, 1709,
	372, 1709,
	373, 1709,
	374, 1709,
	375, 1709,
	376, 1709,
	377, 1709,
	378, 1709,
	379, 1709,
	380, 1709,
	381, 1709,
	382, 1709,
	383, 1709,
	384, 1709,
	385, 1709,
	387, 1709,
	388, 1709,
	390, 1709,
	391, 1709,
	392, 1709,
	393, 1709,
	394, 1709,
	395, 1709,
	396, 1709,
	397, 1709,
	398, 1709,
	399, 1709,
	400, 1709,
	401, 1709,
	402, 1709,
	404, 1709,
	406, 1709,
	407, 1709,
	408, 1709,
	414, 1709,
	416, 1709,
	417, 1709,
	418, 1709,
	419, 1709,
	420, 1709,
	421, 1709,
	422, 1709,
	423, 1709,
	424, 1709,
	425, 1709,
	427, 1709,
	428, 1709,
	429, 1709,
	431, 1709,
	432, 1709,
	433, 1709,
	434, 1709,
	435, 1709,
	436, 1709,
	437, 1709,
	439, 1709,
	440, 1709,
	441, 1709,
	442, 1709,
	443, 1709,
	444, 1709,
	445, 1709,
	446, 1709,
	447, 1709,
	448, 1709,
	449, 1709,
	450, 1709,
	452, 1709,
	453, 1709,
	454, 1709,
	455, 1709,
	456, 1709,
	457, 1709,
	459, 1709,
	460, 1709,
	461, 1709,
	462, 1709,
	463, 1709,
	464, 1709,
	466, 1709,
	467, 1709,
	468, 1709,
	469, 1709,
	470, 1709,
	471, 1709,
	472, 1709,
	473, 1709,
	475, 1709,
	477, 1709,
	478, 1709,
	479, 1709,
	480, 1709,
	481, 1709,
	482, 1709,
	483, 1709,
	484, 1709,
	485, 1709,
	486, 1709,
	487, 1709,
	488, 1709,
	489, 1709,
	490, 1709,
	491, 1709,
	492, 1709,
	494, 1709,
	495, 1709,
	497, 1709,
	498, 1709,
	500, 1709,
	501, 1709,
	502, 1709,
	503, 1709,
	504, 1709,
	505, 1709,
	506, 1709,
	507, 1709,
	508, 1709,
	510, 1709,
	511, 1709,
	512, 1709,
	513, 1709,
	514, 1709,
	516, 1709,
	518, 1709,
	519, 1709,
	520, 1709,
	521, 1709,
	522, 1709,
	523, 1709,
	525, 1709,
	526, 1709,
	527, 1709,
	528, 1709,
	530, 1709,
	531, 1709,
	534, 1709,
	535, 1709,
	536, 1709,
	537, 1709,
	538, 1709,
	539, 1709,
	540, 1709,
	542, 1709,
	545, 1709,
	546, 1709,
	547, 1709,
	548, 1709,
	549, 1709,
	550, 1709,
	552, 1709,
	553, 1709,
	554, 1709,
	555, 1709,
	557, 1709,
	562, 1709,
	563, 1709,
	564, 1709,
	565, 1709,
	566, 1709,
	567, 1709,
	-2, 0,
	-1, 886,
	260, 406,
	-2, 0,
	-1, 958,
	392, 871,
	457, 871,
	498, 871,
	520, 871,
	-2, 0,
	-1, 959,
	392, 870,
	457, 870,
	498, 870,
	520, 870,
	-2, 806,
	-1, 963,
	1, 923,
	596, 923,
	598, 923,
	600, 923,
	-2, 0,
	-1, 965,
	1, 845,
	596, 845,
	598, 845,
	600, 845,
	-2, 0,
	-1, 966,
	1, 849,
	596, 849,
	598, 849,
	600, 849,
	-2, 0,
	-1, 967,
	1, 988,
	182, 988,
	596, 988,
	598, 988,
	600, 988,
	-2, 0,
	-1, 975,
	1, 876,
	596, 876,
	598, 876,
	600, 876,
	-2, 0,
	-1, 982,
	1, 923,
	596, 923,
	598, 923,
	600, 923,
	-2, 0,
	-1, 983,
	1, 925,
	596, 925,
	598, 925,
	600, 925,
	-2, 0,
	-1, 984,
	1, 928,
	596, 928,
	598, 928,
	600, 928,
	-2, 0,
	-1, 990,
	1, 952,
	596, 952,
	598, 952,
	600, 952,
	-2, 0,
	-1, 991,
	1, 954,
	596, 954,
	598, 954,
	600, 954,
	-2, 0,
	-1, 996,
	1, 982,
	596, 982,
	598, 982,
	600, 982,
	-2, 0,
	-1, 1046,
	169, 1583,
	182, 1583,
	273, 1583,
	340, 1583,
	-2, 1519,
	-1, 1061,
	169, 1582,
	182, 1582,
	273, 1582,
	340, 1582,
	-2, 1516,
	-1, 1088,
	599, 2302,
	-2, 704,
	-1, 1117,
	5, 2294,
	597, 2292,
	-2, 2283,
	-1, 1125,
	5, 2315,
	597, 2312,
	-2, 2303,
	-1, 1126,
	5, 2316,
	597, 2313,
	-2, 2304,
	-1, 1134,
	599, 2300,
	-2, 2282,
	-1, 1135,
	597, 2735,
	-2, 2301,
	-1, 1158,
	597, 2734,
	-2, 2317,
	-1, 1159,
	5, 1784,
	-2, 2705,
	-1, 1160,
	5, 1785,
	-2, 2706,
	-1, 1161,
	5, 1786,
	-2, 2720,
	-1, 1162,
	5, 1787,
	-2, 2684,
	-1, 1163,
	5, 1788,
	-2, 2718,
	-1, 1164,
	5, 1796,
	-2, 2697,
	-1, 1165,
	5, 1783,
	-2, 2693,
	-1, 1166,
	5, 1783,
	-2, 2692,
	-1, 1167,
	5, 1783,
	-2, 2711,
	-1, 1168,
	5, 1794,
	-2, 2686,
	-1, 1169,
	5, 1799,
	-2, 2685,
	-1, 1170,
	5, 1801,
	-2, 2730,
	-1, 1173,
	5, 1823,
	-2, 2723,
	-1, 1174,
	5, 1815,
	-2, 2724,
	-1, 1175,
	5, 1823,
	-2, 2725,
	-1, 1176,
	5, 1819,
	-2, 2726,
	-1, 1177,
	5, 1769,
	-2, 2698,
	-1, 1178,
	5, 1770,
	-2, 2699,
	-1, 1179,
	5, 1771,
	-2, 2687,
	-1, 1207,
	5, 1806,
	-2, 2731,
	-1, 1208,
	5, 1807,
	-2, 2721,
	-1, 1209,
	5, 1808,
	553, 1808,
	-2, 2688,
	-1, 1210,
	5, 1809,
	553, 1809,
	-2, 2689,
	-1, 1247,
	597, 2312,
	-2, 2303,
	-1, 1248,
	597, 2313,
	-2, 2304,
	-1, 1349,
	186, 2652,
	515, 2652,
	580, 2652,
	599, 2652,
	-2, 0,
	-1, 1352,
	1, 680,
	600, 680,
	-2, 1431,
	-1, 1481,
	359, 2277,
	416, 2277,
	459, 2277,
	590, 2277,
	-2, 2267,
	-1, 1492,
	601, 2277,
	-2, 2279,
	-1, 1500,
	1, 1279,
	421, 1243,
	459, 1243,
	574, 1243,
	596, 1279,
	598, 1279,
	600, 1279,
	-2, 1568,
	-1, 1506,
	202, 1376,
	221, 1376,
	429, 1376,
	-2, 0,
	-1, 1551,
	400, 1060,
	552, 1060,
	-2, 401,
	-1, 1568,
	43, 2275,
	-2, 1026,
	-1, 1575,
	1, 1279,
	596, 1279,
	598, 1279,
	600, 1279,
	-2, 1568,
	-1, 1583,
	4, 1304,
	21, 1304,
	22, 1304,
	23, 1304,
	24, 1304,
	25, 1304,
	26, 1304,
	27, 1304,
	29, 1304,
	30, 1304,
	36, 1304,
	41, 1304,
	42, 1304,
	44, 1304,
	45, 1304,
	46, 1304,
	47, 1304,
	48, 1304,
	49, 1304,
	50, 1304,
	51, 1304,
	53, 1304,
	54, 1304,
	55, 1304,
	56, 1304,
	58, 1304,
	59, 1304,
	60, 1304,
	61, 1304,
	62, 1304,
	63, 1304,
	64, 1304,
	68, 1304,
	69, 1304,
	70, 1304,
	71, 1304,
	73, 1304,
	74, 1304,
	75, 1304,
	79, 1304,
	80, 1304,
	81, 1304,
	82, 1304,
	83, 1304,
	84, 1304,
	85, 1304,
	88, 1304,
	89, 1304,
	90, 1304,
	91, 1304,
	92, 1304,
	94, 1304,
	96, 1304,
	97, 1304,
	98, 1304,
	99, 1304,
	100, 1304,
	101, 1304,
	103, 1304,
	104, 1304,
	105, 1304,
	107, 1304,
	108, 1304,
	109, 1304,
	117, 1304,
	118, 1304,
	119, 1304,
	120, 1304,
	121, 1304,
	123, 1304,
	124, 1304,
	125, 1304,
	127, 1304,
	128, 1304,
	129, 1304,
	131, 1304,
	132, 1304,
	133, 1304,
	135, 1304,
	136, 1304,
	137, 1304,
	140, 1304,
	141, 1304,
	142, 1304,
	144, 1304,
	145, 1304,
	147, 1304,
	148, 1304,
	149, 1304,
	151, 1304,
	152, 1304,
	153, 1304,
	154, 1304,
	155, 1304,
	156, 1304,
	157, 1304,
	158, 1304,
	159, 1304,
	160, 1304,
	161, 1304,
	162, 1304,
	163, 1304,
	164, 1304,
	165, 1304,
	166, 1304,
	174, 1304,
	175, 1304,
	176, 1304,
	177, 1304,
	181, 1304,
	183, 1304,
	184, 1304,
	188, 1304,
	189, 1304,
	190, 1304,
	191, 1304,
	192, 1304,
	193, 1304,
	194, 1304,
	195, 1304,
	196, 1304,
	197, 1304,
	198, 1304,
	199, 1304,
	200, 1304,
	201, 1304,
	203, 1304,
	204, 1304,
	206, 1304,
	207, 1304,
	209, 1304,
	210, 1304,
	211, 1304,
	212, 1304,
	213, 1304,
	214, 1304,
	215, 1304,
	216, 1304,
	217, 1304,
	219, 1304,
	220, 1304,
	222, 1304,
	223, 1304,
	224, 1304,
	225, 1304,
	226, 1304,
	231, 1304,
	232, 1304,
	233, 1304,
	234, 1304,
	237, 1304,
	238, 1304,
	239, 1304,
	241, 1304,
	243, 1304,
	244, 1304,
	246, 1304,
	248, 1304,
	249, 1304,
	250, 1304,
	252, 1304,
	256, 1304,
	257, 1304,
	258, 1304,
	259, 1304,
	260, 1304,
	261, 1304,
	263, 1304,
	264, 1304,
	265, 1304,
	267, 1304,
	268, 1304,
	270, 1304,
	271, 1304,
	274, 1304,
	278, 1304,
	279, 1304,
	280, 1304,
	283, 1304,
	284, 1304,
	285, 1304,
	286, 1304,
	288, 1304,
	289, 1304,
	290, 1304,
	291, 1304,
	292, 1304,
	293, 1304,
	294, 1304,
	295, 1304,
	296, 1304,
	297, 1304,
	298, 1304,
	299, 1304,
	300, 1304,
	301, 1304,
	302, 1304,
	303, 1304,
	304, 1304,
	305, 1304,
	306, 1304,
	307, 1304,
	308, 1304,
	309, 1304,
	311, 1304,
	313, 1304,
	314, 1304,
	315, 1304,
	316, 1304,
	317, 1304,
	318, 1304,
	319, 1304,
	320, 1304,
	321, 1304,
	322, 1304,
	323, 1304,
	324, 1304,
	325, 1304,
	327, 1304,
	328, 1304,
	332, 1304,
	333, 1304,
	335, 1304,
	336, 1304,
	337, 1304,
	338, 1304,
	339, 1304,
	342, 1304,
	344, 1304,
	346, 1304,
	347, 1304,
	348, 1304,
	351, 1304,
	352, 1304,
	353, 1304,
	355, 1304,
	357, 1304,
	358, 1304,
	359, 1304,
	360, 1304,
	361, 1304,
	362, 1304,
	363, 1304,
	364, 1304,
	365, 1304,
	366, 1304,
	367, 1304,
	368, 1304,
	369, 1304,
	371, 1304,
	372, 1304,
	373, 1304,
	374, 1304,
	375, 1304,
	376, 1304,
	377, 1304,
	378, 1304,
	379, 1304,
	380, 1304,
	381, 1304,
	382, 1304,
	383, 1304,
	384, 1304,
	385, 1304,
	387, 1304,
	388, 1304,
	390, 1304,
	391, 1304,
	392, 1304,
	393, 1304,
	394, 1304,
	395, 1304,
	396, 1304,
	397, 1304,
	398, 1304,
	399, 1304,
	400, 1304,
	401, 1304,
	402, 1304,
	404, 1304,
	406, 1304,
	407, 1304,
	408, 1304,
	414, 1304,
	416, 1304,
	417, 1304,
	418, 1304,
	419, 1304,
	420, 1304,
	421, 1304,
	422, 1304,
	423, 1304,
	424, 1304,
	425, 1304,
	427, 1304,
	428, 1304,
	429, 1304,
	431, 1304,
	432, 1304,
	433, 1304,
	434, 1304,
	435, 1304,
	436, 1304,
	437, 1304,
	439, 1304,
	440, 1304,
	441, 1304,
	442, 1304,
	443, 1304,
	444, 1304,
	445, 1304,
	446, 1304,
	447, 1304,
	448, 1304,
	449, 1304,
	450, 1304,
	452, 1304,
	453, 1304,
	454, 1304,
	455, 1304,
	456, 1304,
	457, 1304,
	459, 1304,
	460, 1304,
	461, 1304,
	462, 1304,
	463, 1304,
	464, 1304,
	466, 1304,
	467, 1304,
	468, 1304,
	469, 1304,
	470, 1304,
	471, 1304,
	472, 1304,
	473, 1304,
	475, 1304,
	477, 1304,
	478, 1304,
	479, 1304,
	480, 1304,
	481, 1304,
	482, 1304,
	483, 1304,
	484, 1304,
	485, 1304,
	486, 1304,
	487, 1304,
	488, 1304,
	489, 1304,
	490, 1304,
	491, 1304,
	492, 1304,
	494, 1304,
	495, 1304,
	497, 1304,
	498, 1304,
	500, 1304,
	501, 1304,
	502, 1304,
	503, 1304,
	504, 1304,
	505, 1304,
	506, 1304,
	507, 1304,
	508, 1304,
	510, 1304,
	511, 1304,
	512, 1304,
	513, 1304,
	514, 1304,
	516, 1304,
	518, 1304,
	519, 1304,
	520, 1304,
	521, 1304,
	522, 1304,
	523, 1304,
	525, 1304,
	526, 1304,
	527, 1304,
	528, 1304,
	530, 1304,
	531, 1304,
	534, 1304,
	535, 1304,
	536, 1304,
	537, 1304,
	538, 1304,
	539, 1304,
	540, 1304,
	542, 1304,
	545, 1304,
	546, 1304,
	547, 1304,
	548, 1304,
	549, 1304,
	550, 1304,
	552, 1304,
	553, 1304,
	554, 1304,
	555, 1304,
	557, 1304,
	562, 1304,
	563, 1304,
	564, 1304,
	565, 1304,
	566, 1304,
	567, 1304,
	-2, 0,
	-1, 1606,
	1, 546,
	596, 546,
	598, 546,
	600, 546,
	-2, 1539,
	-1, 1609,
	4, 2729,
	11, 2729,
	12, 2729,
	14, 2729,
	15, 2729,
	16, 2729,
	17, 2729,
	18, 2729,
	19, 2729,
	21, 2729,
	22, 2729,
	23, 2729,
	24, 2729,
	25, 2729,
	26, 2729,
	27, 2729,
	29, 2729,
	30, 2729,
	33, 2729,
	34, 2729,
	36, 2729,
	38, 2729,
	41, 2729,
	42, 2729,
	44, 2729,
	45, 2729,
	46, 2729,
	47, 2729,
	48, 2729,
	49, 2729,
	50, 2729,
	51, 2729,
	53, 2729,
	54, 2729,
	55, 2729,
	56, 2729,
	58, 2729,
	59, 2729,
	60, 2729,
	61, 2729,
	62, 2729,
	63, 2729,
	64, 2729,
	67, 2729,
	68, 2729,
	69, 2729,
	70, 2729,
	71, 2729,
	73, 2729,
	74, 2729,
	75, 2729,
	76, 2729,
	79, 2729,
	80, 2729,
	81, 2729,
	82, 2729,
	83, 2729,
	84, 2729,
	85, 2729,
	86, 2729,
	88, 2729,
	89, 2729,
	90, 2729,
	91, 2729,
	92, 2729,
	94, 2729,
	95, 2729,
	96, 2729,
	97, 2729,
	98, 2729,
	99, 2729,
	100, 2729,
	101, 2729,
	103, 2729,
	104, 2729,
	105, 2729,
	106, 2729,
	107, 2729,
	108, 2729,
	109, 2729,
	117, 2729,
	118, 2729,
	119, 2729,
	120, 2729,
	121, 2729,
	123, 2729,
	124, 2729,
	125, 2729,
	127, 2729,
	128, 2729,
	129, 2729,
	131, 2729,
	132, 2729,
	133, 2729,
	135, 2729,
	136, 2729,
	137, 2729,
	140, 2729,
	141, 2729,
	142, 2729,
	144, 2729,
	145, 2729,
	147, 2729,
	148, 2729,
	149, 2729,
	151, 2729,
	152, 2729,
	153, 2729,
	154, 2729,
	155, 2729,
	156, 2729,
	157, 2729,
	158, 2729,
	159, 2729,
	160, 2729,
	161, 2729,
	162, 2729,
	163, 2729,
	164, 2729,
	165, 2729,
	166, 2729,
	170, 2729,
	171, 2729,
	172, 2729,
	173, 2729,
	174, 2729,
	175, 2729,
	176, 2729,
	177, 2729,
	180, 2729,
	181, 2729,
	183, 2729,
	184, 2729,
	187, 2729,
	188, 2729,
	189, 2729,
	190, 2729,
	191, 2729,
	192, 2729,
	193, 2729,
	194, 2729,
	195, 2729,
	196, 2729,
	197, 2729,
	198, 2729,
	199, 2729,
	200, 2729,
	201, 2729,
	203, 2729,
	204, 2729,
	206, 2729,
	207, 2729,
	209, 2729,
	210, 2729,
	211, 2729,
	212, 2729,
	213, 2729,
	214, 2729,
	215, 2729,
	216, 2729,
	217, 2729,
	218, 2729,
	219, 2729,
	220, 2729,
	221, 2729,
	222, 2729,
	223, 2729,
	224, 2729,
	225, 2729,
	226, 2729,
	228, 2729,
	229, 2729,
	231, 2729,
	232, 2729,
	233, 2729,
	234, 2729,
	236, 2729,
	237, 2729,
	238, 2729,
	239, 2729,
	241, 2729,
	243, 2729,
	244, 2729,
	245, 2729,
	246, 2729,
	247, 2729,
	248, 2729,
	249, 2729,
	250, 2729,
	251, 2729,
	252, 2729,
	254, 2729,
	255, 2729,
	256, 2729,
	257, 2729,
	258, 2729,
	259, 2729,
	260, 2729,
	261, 2729,
	263, 2729,
	264, 2729,
	265, 2729,
	267, 2729,
	268, 2729,
	269, 2729,
	270, 2729,
	271, 2729,
	272, 2729,
	274, 2729,
	278, 2729,
	279, 2729,
	280, 2729,
	283, 2729,
	284, 2729,
	285, 2729,
	286, 2729,
	287, 2729,
	288, 2729,
	289, 2729,
	290, 2729,
	291, 2729,
	292, 2729,
	293, 2729,
	294, 2729,
	295, 2729,
	296, 2729,
	297, 2729,
	298, 2729,
	299, 2729,
	300, 2729,
	301, 2729,
	302, 2729,
	303, 2729,
	304, 2729,
	305, 2729,
	306, 2729,
	307, 2729,
	308, 2729,
	309, 2729,
	311, 2729,
	312, 2729,
	313, 2729,
	314, 2729,
	315, 2729,
	316, 2729,
	317, 2729,
	318, 2729,
	319, 2729,
	320, 2729,
	321, 2729,
	322, 2729,
	323, 2729,
	324, 2729,
	325, 2729,
	327, 2729,
	328, 2729,
	331, 2729,
	332, 2729,
	333, 2729,
	335, 2729,
	336, 2729,
	337, 2729,
	338, 2729,
	339, 2729,
	342, 2729,
	346, 2729,
	347, 2729,
	348, 2729,
	349, 2729,
	351, 2729,
	352, 2729,
	353, 2729,
	355, 2729,
	357, 2729,
	358, 2729,
	359, 2729,
	360, 2729,
	361, 2729,
	362, 2729,
	363, 2729,
	364, 2729,
	365, 2729,
	366, 2729,
	367, 2729,
	368, 2729,
	369, 2729,
	371, 2729,
	372, 2729,
	373, 2729,
	374, 2729,
	375, 2729,
	376, 2729,
	377, 2729,
	378, 2729,
	379, 2729,
	380, 2729,
	381, 2729,
	382, 2729,
	383, 2729,
	384, 2729,
	385, 2729,
	387, 2729,
	388, 2729,
	390, 2729,
	391, 2729,
	392, 2729,
	393, 2729,
	394, 2729,
	395, 2729,
	396, 2729,
	397, 2729,
	398, 2729,
	399, 2729,
	400, 2729,
	401, 2729,
	402, 2729,
	404, 2729,
	406, 2729,
	407, 2729,
	408, 2729,
	414, 2729,
	415, 2729,
	416, 2729,
	417, 2729,
	418, 2729,
	419, 2729,
	420, 2729,
	421, 2729,
	422, 2729,
	423, 2729,
	424, 2729,
	425, 2729,
	427, 2729,
	428, 2729,
	429, 2729,
	430, 2729,
	431, 2729,
	432, 2729,
	433, 2729,
	434, 2729,
	435, 2729,
	436, 2729,
	437, 2729,
	438, 2729,
	439, 2729,
	440, 2729,
	441, 2729,
	442, 2729,
	443, 2729,
	444, 2729,
	445, 2729,
	446, 2729,
	447, 2729,
	448, 2729,
	449, 2729,
	450, 2729,
	452, 2729,
	453, 2729,
	454, 2729,
	455, 2729,
	456, 2729,
	457, 2729,
	459, 2729,
	460, 2729,
	461, 2729,
	462, 2729,
	463, 2729,
	464, 2729,
	465, 2729,
	466, 2729,
	467, 2729,
	468, 2729,
	469, 2729,
	470, 2729,
	471, 2729,
	472, 2729,
	473, 2729,
	475, 2729,
	477, 2729,
	478, 2729,
	479, 2729,
	480, 2729,
	481, 2729,
	482, 2729,
	483, 2729,
	484, 2729,
	485, 2729,
	486, 2729,
	487, 2729,
	488, 2729,
	489, 2729,
	490, 2729,
	491, 2729,
	492, 2729,
	494, 2729,
	495, 2729,
	496, 2729,
	497, 2729,
	498, 2729,
	500, 2729,
	501, 2729,
	502, 2729,
	503, 2729,
	504, 2729,
	505, 2729,
	506, 2729,
	507, 2729,
	508, 2729,
	510, 2729,
	511, 2729,
	512, 2729,
	513, 2729,
	514, 2729,
	516, 2729,
	518, 2729,
	519, 2729,
	520, 2729,
	521, 2729,
	522, 2729,
	523, 2729,
	525, 2729,
	526, 2729,
	527, 2729,
	528, 2729,
	530, 2729,
	531, 2729,
	534, 2729,
	535, 2729,
	536, 2729,
	537, 2729,
	538, 2729,
	539, 2729,
	540, 2729,
	542, 2729,
	545, 2729,
	546, 2729,
	547, 2729,
	548, 2729,
	549, 2729,
	550, 2729,
	552, 2729,
	553, 2729,
	554, 2729,
	555, 2729,
	557, 2729,
	562, 2729,
	563, 2729,
	564, 2729,
	565, 2729,
	566, 2729,
	567, 2729,
	568, 2729,
	570, 2729,
	578, 2729,
	579, 2729,
	580, 2729,
	581, 2729,
	582, 2729,
	583, 2729,
	585, 2729,
	586, 2729,
	587, 2729,
	588, 2729,
	589, 2729,
	590, 2729,
	591, 2729,
	592, 2729,
	593, 2729,
	595, 2729,
	598, 2729,
	599, 2729,
	601, 2729,
	602, 2729,
	-2, 0,
	-1, 1614,
	186, 2611,
	515, 2611,
	580, 2611,
	599, 2611,
	-2, 0,
	-1, 1663,
	392, 871,
	457, 871,
	498, 871,
	520, 871,
	-2, 0,
	-1, 1674,
	1, 1376,
	596, 1376,
	598, 1376,
	600, 1376,
	-2, 0,
	-1, 1691,
	1, 866,
	596, 866,
	598, 866,
	600, 866,
	-2, 0,
	-1, 1692,
	1, 910,
	596, 910,
	598, 910,
	600, 910,
	-2, 0,
	-1, 1693,
	1, 918,
	596, 918,
	598, 918,
	600, 918,
	-2, 0,
	-1, 1696,
	1, 875,
	596, 875,
	598, 875,
	600, 875,
	-2, 0,
	-1, 1698,
	1, 881,
	596, 881,
	598, 881,
	600, 881,
	-2, 0,
	-1, 1701,
	1, 877,
	596, 877,
	598, 877,
	600, 877,
	-2, 0,
	-1, 1706,
	1, 891,
	596, 891,
	598, 891,
	600, 891,
	-2, 0,
	-1, 1737,
	1, 2594,
	596, 2594,
	598, 2594,
	599, 2594,
	600, 2594,
	-2, 0,
	-1, 1741,
	1, 963,
	596, 963,
	598, 963,
	600, 963,
	-2, 0,
	-1, 1756,
	1, 1426,
	600, 1426,
	-2, 1431,
	-1, 1759,
	169, 1582,
	182, 1582,
	273, 1582,
	340, 1582,
	-2, 1520,
	-1, 1859,
	150, 1541,
	169, 1541,
	182, 1541,
	240, 1541,
	273, 1541,
	340, 1541,
	350, 1541,
	532, 1541,
	-2, 1988,
	-1, 1920,
	598, 2163,
	-2, 0,
	-1, 1955,
	150, 1541,
	169, 1541,
	182, 1541,
	240, 1541,
	273, 1541,
	340, 1541,
	350, 1541,
	532, 1541,
	-2, 1670,
	-1, 1992,
	515, 2608,
	599, 2608,
	602, 2608,
	-2, 0,
	-1, 2009,
	597, 1811,
	-2, 1799,
	-1, 2041,
	186, 2608,
	599, 2608,
	602, 2608,
	-2, 0,
	-1, 2083,
	1, 682,
	600, 682,
	-2, 1431,
	-1, 2223,
	221, 259,
	-2, 2311,
	-1, 2224,
	221, 260,
	-2, 308,
	-1, 2330,
	1, 868,
	596, 868,
	598, 868,
	600, 868,
	-2, 0,
	-1, 2331,
	1, 912,
	596, 912,
	598, 912,
	600, 912,
	-2, 0,
	-1, 2332,
	1, 920,
	596, 920,
	598, 920,
	600, 920,
	-2, 0,
	-1, 2333,
	1, 965,
	596, 965,
	598, 965,
	600, 965,
	-2, 0,
	-1, 2374,
	1, 893,
	596, 893,
	598, 893,
	600, 893,
	-2, 0,
	-1, 2392,
	1, 948,
	596, 948,
	598, 948,
	600, 948,
	-2, 0,
	-1, 2437,
	436, 1609,
	437, 1609,
	-2, 1844,
	-1, 2468,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1864,
	-1, 2469,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1865,
	-1, 2470,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1866,
	-1, 2471,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1867,
	-1, 2472,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1868,
	-1, 2473,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1869,
	-1, 2474,
	95, 0,
	254, 0,
	255, 0,
	582, 0,
	583, 0,
	-2, 1870,
	-1, 2475,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1871,
	-1, 2487,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1883,
	-1, 2488,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1884,
	-1, 2489,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1885,
	-1, 2493,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1892,
	-1, 2499,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1896,
	-1, 2501,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1904,
	-1, 2502,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1905,
	-1, 2503,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1906,
	-1, 2504,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1907,
	-1, 2678,
	5, 2315,
	186, 2174,
	597, 2312,
	-2, 2303,
	-1, 2679,
	186, 2175,
	-2, 2680,
	-1, 2680,
	186, 2176,
	-2, 2500,
	-1, 2681,
	186, 2177,
	-2, 2385,
	-1, 2682,
	186, 2178,
	-2, 2440,
	-1, 2683,
	186, 2179,
	-2, 2485,
	-1, 2684,
	186, 2180,
	-2, 2606,
	-1, 2685,
	186, 2181,
	-2, 1971,
	-1, 2756,
	1, 1671,
	2, 1671,
	106, 1671,
	150, 1671,
	169, 1671,
	182, 1671,
	187, 1671,
	205, 1671,
	208, 1671,
	236, 1671,
	240, 1671,
	251, 1671,
	269, 1671,
	273, 1671,
	312, 1671,
	340, 1671,
	344, 1671,
	350, 1671,
	426, 1671,
	430, 1671,
	532, 1671,
	543, 1671,
	559, 1671,
	560, 1671,
	561, 1671,
	571, 1671,
	596, 1671,
	598, 1671,
	600, 1671,
	602, 1671,
	-2, 1670,
	-1, 2769,
	597, 2284,
	-2, 2298,
	-1, 2771,
	1, 325,
	559, 325,
	-2, 1568,
	-1, 2800,
	597, 1810,
	-2, 1800,
	-1, 2985,
	1, 1279,
	421, 1243,
	459, 1243,
	574, 1243,
	596, 1279,
	598, 1279,
	600, 1279,
	-2, 1568,
	-1, 3170,
	345, 1612,
	-2, 2719,
	-1, 3171,
	345, 1613,
	-2, 2591,
	-1, 3175,
	436, 2240,
	437, 2240,
	-2, 1969,
	-1, 3176,
	436, 2244,
	437, 2244,
	-2, 1970,
	-1, 3177,
	436, 2241,
	437, 2241,
	-2, 1969,
	-1, 3178,
	436, 2245,
	437, 2245,
	-2, 1970,
	-1, 3191,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1894,
	-1, 3192,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1898,
	-1, 3198,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1900,
	-1, 3421,
	1, 679,
	596, 679,
	598, 679,
	600, 679,
	-2, 1431,
	-1, 3585,
	43, 2275,
	-2, 1027,
	-1, 3590,
	1, 1279,
	596, 1279,
	598, 1279,
	600, 1279,
	-2, 1568,
	-1, 3700,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1902,
	-1, 3707,
	245, 0,
	247, 0,
	331, 0,
	-2, 1921,
	-1, 3775,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1950,
	-1, 3776,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1951,
	-1, 3777,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1952,
	-1, 3781,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1956,
	-1, 3782,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1957,
	-1, 3783,
	14, 0,
	15, 0,
	16, 0,
	578, 0,
	579, 0,
	580, 0,
	-2, 1958,
	-1, 3830,
	597, 2285,
	-2, 2299,
	-1, 4004,
	599, 2837,
	-2, 1494,
	-1, 4064,
	245, 0,
	247, 0,
	331, 0,
	-2, 1922,
	-1, 4067,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1925,
	-1, 4068,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1927,
	-1, 4166,
	599, 2300,
	-2, 1314,
	-1, 4319,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1926,
	-1, 4320,
	17, 0,
	18, 0,
	19, 0,
	50, 0,
	218, 0,
	221, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 1928,
	-1, 4331,
	245, 0,
	-2, 1961,
	-1, 4518,
	245, 0,
	-2, 1962,
	-1, 4718,
	50, 0,
	218, 0,
	272, 0,
	465, 0,
	568, 0,
	581, 0,
	-2, 2683,
}

const sqlPrivate = 57344

const sqlLast = 131809

var sqlAct = [...]int{
	271, 4822, 4914, 3574, 4835, 3329, 4711, 3072, 2862, 3059,
	4380, 4776, 4699, 4717, 4551, 4559, 4728, 3573, 4851, 4587,
	4608, 4686, 4710, 2133, 4583, 2052, 1240, 2220, 4667, 4644,
	4664, 4729, 4471, 4047, 4730, 2295, 4440, 4789, 4362, 4447,
	4425, 1251, 4522, 3740, 4162, 2906, 4275, 4270, 4385, 4236,
	4716, 4211, 3692, 4340, 2931, 1321, 2447, 3029, 4308, 1325,
	3996, 3442, 4259, 3988, 4456, 1071, 4257, 1314, 4250, 700,
	3607, 3924, 3184, 4163, 2711, 811, 2306, 3502, 4143, 2516,
	4485, 2065, 3601, 4280, 3569, 1515, 1062, 3969, 1630, 1768,
	3953, 2455, 3951, 3559, 2141, 3445, 1997, 1996, 2448, 1386,
	771, 811, 3081, 4336, 2944, 3648, 3048, 1961, 3083, 3650,
	3552, 3096, 3833, 3373, 3352, 3015, 3551, 3344, 1070, 178,
	1478, 884, 4, 4046, 711, 1316, 4103, 3312, 3045, 3074,
	3043, 888, 3060, 3091, 2992, 3080, 2168, 1671, 2209, 3333,
	4823, 1930, 3464, 2152, 2864, 2452, 2207, 3801, 2749, 1906,
	3311, 4523, 2748, 2594, 1867, 1837, 2529, 3168, 3439, 1485,
	1319, 1570, 806, 108, 879, 2961, 2203, 3335, 2208, 3019,
	2184, 766, 2751, 3090, 1367, 2905, 1231, 2191, 2268, 2596,
	2125, 3030, 2121, 2063, 1121, 1950, 1293, 2729, 1931, 1756,
	3380, 1126, 2585, 2513, 1117, 265, 2111, 2419, 2436, 2417,
	1128, 3025, 2783, 744, 3571, 1628, 1607, 2255, 3053, 808,
	1573, 2887, 178, 812, 2850, 4609, 1901, 813, 264, 2708,
	3084, 952, 687, 2304, 2782, 1354, 709, 3945, 2738, 2588,
	1213, 1234, 1947, 1940, 2719, 2566, 187, 2674, 1248, 1769,
	1304, 188, 2640, 1851, 752, 2418, 1770, 1706, 2420, 1691,
	1171, 2217, 1119, 1979, 1605, 764, 2254, 1230, 1124, 2281,
	1510, 4777, 1598, 2140, 4836, 704, 44, 2441, 1102, 1123,
	817, 3026, 43, 727, 1211, 41, 32, 801, 30, 860,
	701, 28, 712, 1236, 3221, 1755, 1521, 1775, 973, 3282,
	3283, 861, 3815, 820, 3816, 3331, 817, 3215, 4927, 2054,
	4917, 4901, 2728, 4757, 3626, 2728, 2054, 2054, 2054, 2054,
	903, 2054, 4900, 4890, 4871, 4355, 2728, 2229, 4384, 820,
	4869, 1514, 4808, 4765, 4384, 4754, 2229, 4766, 4752, 2728,
	4749, 3617, 2728, 4746, 4750, 1783, 1784, 4747, 3616, 4714,
	4352, 4713, 4712, 2229, 2229, 2229, 2075, 4707, 4706, 1066,
	4697, 2075, 2075, 1067, 4384, 4695, 3282, 3283, 1814, 4384,
	4692, 1066, 4662, 4633, 4459, 1786, 4384, 2791, 4626, 4625,
	4620, 1100, 2728, 2728, 4384, 2542, 2543, 2544, 2561, 2562,
	2563, 4619, 4613, 4579, 4520, 4384, 2229, 4227, 2791, 4502,
	4499, 1839, 4496, 4033, 2229, 2564, 4384, 4449, 4124, 3406,
	1785, 4450, 1214, 1214, 3389, 1228, 4403, 3626, 1056, 4402,
	2229, 1307, 4391, 2229, 4390, 1047, 2229, 4383, 4384, 4347,
	1046, 4384, 4321, 2229, 1363, 4299, 2791, 2072, 1839, 2075,
	4288, 4206, 1246, 2229, 3626, 2728, 1783, 1784, 4189, 2229,
	4066, 4012, 2728, 3404, 2791, 3643, 4006, 2554, 3967, 3825,
	3643, 1363, 3968, 3826, 3183, 2305, 2550, 2811, 3288, 1814,
	3823, 3282, 3283, 3808, 3824, 3724, 1786, 2728, 3720, 2229,
	3230, 3642, 2728, 1061, 93, 3643, 3231, 2721, 2787, 3633,
	1783, 1784, 3805, 3634, 3328, 3323, 3322, 1264, 2728, 2728,
	2728, 2072, 1839, 3273, 3271, 3263, 1243, 3274, 3272, 3264,
	2728, 1785, 3261, 1814, 1791, 1215, 2728, 1242, 3232, 3100,
	1786, 3070, 2728, 2075, 3069, 2291, 2834, 2790, 2291, 2229,
	2728, 2791, 1217, 4634, 1218, 3288, 1783, 1784, 1637, 4524,
	1697, 2555, 2556, 2557, 2558, 2780, 1839, 4515, 2773, 2728,
	1271, 2549, 2229, 2727, 2229, 1785, 2290, 2728, 4503, 4459,
	2291, 2075, 1813, 1815, 3805, 1805, 1786, 2720, 4268, 4227,
	2072, 1265, 4190, 4033, 1802, 3298, 3634, 2934, 2849, 2090,
	2053, 2069, 3021, 2228, 1265, 2954, 2847, 2145, 1926, 1509,
	1783, 1784, 3907, 1816, 1817, 1818, 1827, 1828, 1829, 3695,
	3669, 1785, 1948, 2196, 2765, 3618, 1673, 2764, 2763, 1514,
	2762, 2728, 1820, 1814, 2761, 1791, 1219, 1216, 1055, 1244,
	1786, 1806, 235, 3220, 3619, 2559, 2560, 1054, 4060, 1833,
	1783, 1784, 1053, 1052, 1623, 1051, 1050, 1049, 1045, 1044,
	3288, 1043, 3298, 235, 3142, 4119, 1839, 1042, 1836, 1808,
	1809, 1810, 1811, 1041, 1040, 1785, 1039, 263, 2552, 1791,
	1786, 1038, 1037, 1813, 1815, 1805, 1036, 1035, 2055, 1034,
	237, 1033, 1032, 1031, 1802, 2055, 2055, 2055, 2055, 1030,
	2055, 1029, 1028, 1010, 950, 949, 948, 947, 946, 2591,
	945, 237, 1535, 944, 1836, 1785, 943, 942, 941, 940,
	939, 938, 937, 936, 935, 1791, 934, 1813, 1815, 933,
	932, 931, 930, 929, 928, 1836, 927, 926, 1523, 236,
	1523, 925, 1806, 924, 923, 922, 3299, 3282, 3283, 921,
	3300, 3301, 3302, 1800, 1801, 920, 919, 918, 917, 4078,
	236, 2072, 916, 906, 905, 901, 900, 3298, 894, 1808,
	1809, 1810, 1811, 229, 893, 1330, 1126, 3616, 878, 1791,
	877, 834, 230, 833, 832, 831, 1806, 823, 189, 822,
	2366, 3847, 1807, 821, 235, 787, 778, 777, 2592, 776,
	758, 259, 258, 1126, 1126, 1126, 257, 149, 256, 189,
	255, 254, 4282, 3299, 253, 1836, 39, 1824, 252, 1791,
	1834, 1389, 3297, 251, 250, 1389, 249, 1813, 1815, 2553,
	248, 247, 1330, 246, 1523, 245, 244, 243, 242, 241,
	1836, 240, 237, 3819, 1830, 1265, 1831, 239, 238, 1529,
	1838, 3644, 3376, 1800, 1801, 3243, 1126, 3226, 1126, 1836,
	1126, 3217, 3124, 3326, 4375, 3002, 1330, 2229, 1371, 1372,
	1373, 1822, 1358, 2623, 2821, 2053, 2072, 2069, 2795, 2412,
	2593, 1909, 2590, 1909, 3038, 2770, 1806, 1838, 1908, 2072,
	1908, 236, 1330, 1807, 1493, 3292, 3284, 3285, 3286, 3287,
	3289, 3290, 2755, 3327, 229, 1836, 1951, 1488, 2298, 2119,
	2621, 2607, 1330, 230, 1812, 1912, 3288, 1907, 3299, 1330,
	2605, 2074, 1974, 2720, 1534, 1878, 1517, 1126, 1375, 1126,
	1832, 3056, 1250, 1330, 1782, 4739, 4738, 1807, 1869, 1126,
	189, 1126, 1787, 1788, 1789, 1790, 1792, 1793, 1821, 4735,
	4715, 1838, 4506, 1513, 4694, 1298, 1301, 4594, 4512, 1836,
	4504, 1579, 1582, 3284, 3285, 3286, 3287, 3289, 3290, 2539,
	2540, 2541, 2565, 2551, 2545, 1311, 2547, 2548, 2546, 2533,
	2534, 2535, 2536, 2537, 2538, 1352, 1265, 4335, 1330, 3972,
	4527, 1498, 2297, 4289, 4267, 1838, 1382, 4130, 1475, 1480,
	4101, 3282, 3283, 4100, 4094, 1641, 4093, 235, 1126, 235,
	4092, 1126, 4085, 4084, 1812, 4082, 4077, 4284, 4074, 4073,
	3966, 3851, 3850, 3298, 3849, 3829, 3796, 3795, 3794, 3716,
	3711, 178, 178, 3371, 3319, 3310, 2595, 1807, 3281, 3278,
	817, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 1347,
	1568, 3277, 3282, 3283, 3275, 237, 1522, 237, 1512, 3270,
	1627, 1528, 1511, 820, 1825, 3293, 3291, 3292, 3284, 3285,
	3286, 3287, 3289, 3290, 1642, 1067, 3297, 1610, 1612, 3282,
	3283, 1803, 1799, 3269, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 3268, 3265, 1838, 1836, 1870, 3262, 1868,
	1783, 1784, 3242, 235, 236, 3225, 236, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1876, 1699, 229, 3905, 229,
	3218, 1358, 3216, 1814, 1358, 1338, 230, 1871, 230, 3071,
	1786, 3040, 2756, 1787, 1788, 1789, 1790, 1792, 1793, 2578,
	1126, 1782, 1227, 4921, 1869, 2271, 1126, 2236, 2234, 1781,
	1715, 237, 2589, 189, 4861, 189, 1839, 4860, 3973, 4824,
	4775, 235, 4773, 1760, 1601, 1785, 1252, 1823, 3742, 4654,
	3288, 3324, 1069, 4586, 3299, 1805, 4570, 1797, 1798, 1804,
	1826, 1803, 1799, 2804, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 4567, 4566, 4565, 3396, 4088, 4545, 4544,
	236, 4087, 4542, 4526, 1327, 1647, 4525, 4500, 4484, 237,
	4483, 2519, 4469, 229, 1622, 4466, 4465, 4460, 1754, 3368,
	4399, 3288, 230, 4370, 4333, 4316, 1636, 4315, 4296, 1789,
	1790, 1792, 1793, 4295, 4253, 1483, 1523, 4228, 4118, 235,
	4099, 4034, 4026, 4023, 3973, 1858, 3893, 3892, 3288, 189,
	3875, 1126, 1126, 1126, 3874, 3872, 235, 1126, 236, 1808,
	1809, 1810, 1811, 3811, 1248, 3799, 1248, 3706, 1856, 1791,
	4283, 229, 3645, 3627, 3593, 3519, 3477, 3298, 1664, 3444,
	230, 1389, 3398, 3247, 3246, 3241, 1928, 237, 3207, 3014,
	1915, 1126, 1700, 1914, 811, 1913, 1910, 1902, 235, 1900,
	2014, 811, 2802, 1067, 237, 2525, 2801, 189, 1585, 1761,
	2767, 2760, 2726, 2603, 3294, 3295, 3296, 1813, 1815, 1855,
	1973, 3293, 3291, 3292, 3284, 3285, 3286, 3287, 3289, 3290,
	1929, 1937, 1924, 1757, 3039, 1923, 236, 1047, 1765, 1922,
	1921, 1764, 1046, 1920, 1919, 1918, 237, 1917, 1916, 229,
	1836, 1897, 1896, 236, 2059, 1911, 1895, 2061, 230, 1894,
	1893, 1759, 1892, 2066, 1891, 1987, 229, 2068, 1977, 1984,
	1890, 1889, 2071, 1888, 1887, 230, 1806, 1126, 1886, 1885,
	1993, 1330, 1778, 1779, 1884, 189, 178, 2042, 1883, 2044,
	1882, 1871, 1857, 1934, 1935, 236, 1783, 1784, 1126, 1854,
	1849, 1836, 3055, 2299, 1599, 1346, 1389, 1269, 229, 1260,
	4528, 4256, 4126, 1903, 1904, 1214, 4070, 230, 3846, 2135,
	1315, 3822, 3814, 3229, 2758, 2793, 1786, 4353, 3299, 1067,
	4128, 3282, 3283, 1958, 3845, 1870, 1604, 3394, 1852, 2110,
	3622, 1969, 2108, 1370, 189, 4858, 2110, 4192, 4850, 1836,
	2932, 2081, 1959, 4568, 235, 2077, 1358, 4461, 1246, 4374,
	1246, 1785, 4452, 2117, 4451, 4287, 4230, 4229, 1368, 2622,
	1481, 1982, 2110, 1492, 1315, 2080, 4191, 4121, 4037, 4036,
	4035, 1983, 3817, 3647, 3646, 3629, 3628, 2102, 2101, 817,
	4731, 2110, 2112, 4804, 1949, 1951, 817, 1956, 2910, 3480,
	2008, 4457, 237, 1988, 1812, 235, 2620, 2606, 1369, 235,
	2037, 4802, 820, 3976, 2057, 1363, 2604, 1927, 3693, 820,
	1752, 4507, 1243, 1363, 1243, 2193, 3919, 1807, 3267, 4505,
	2179, 3266, 3189, 1242, 1968, 1242, 2892, 1366, 1330, 1330,
	1967, 1315, 1315, 1966, 1964, 2096, 1963, 1953, 1389, 1962,
	2011, 236, 2002, 237, 3890, 1909, 1363, 237, 3511, 1026,
	3446, 1994, 1908, 1337, 229, 2591, 1716, 2210, 2959, 2083,
	3576, 3638, 3575, 230, 235, 3293, 3291, 3292, 3284, 3285,
	3286, 3287, 3289, 3290, 1663, 1838, 1880, 4787, 2296, 4448,
	1672, 1892, 1892, 2322, 4761, 4742, 4727, 3282, 3283, 3560,
	189, 3235, 236, 3097, 1027, 1673, 236, 2211, 2175, 2105,
	2183, 3980, 2079, 2188, 2145, 229, 3963, 3921, 3916, 229,
	3898, 235, 237, 3666, 230, 3419, 2221, 2226, 230, 3284,
	3285, 3286, 3287, 3289, 3290, 1244, 2303, 1244, 4337, 3331,
	3744, 2940, 1330, 1520, 1330, 1527, 1330, 1533, 2889, 2800,
	2586, 189, 2086, 4394, 2592, 189, 4366, 1925, 3286, 3287,
	3289, 3290, 1330, 1330, 2113, 2103, 1905, 4736, 3567, 237,
	2265, 236, 1578, 1330, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 2178, 229, 1330, 1603, 1330, 1330, 1330,
	2151, 1505, 2948, 230, 1341, 1978, 1297, 2951, 4751, 4748,
	3612, 2939, 2213, 2214, 2272, 3867, 2946, 1877, 2888, 4560,
	1651, 811, 2215, 3543, 1621, 4271, 1626, 2308, 236, 4661,
	189, 2321, 4806, 2261, 2107, 4538, 1635, 3449, 1640, 2173,
	3885, 229, 3078, 1126, 4737, 817, 2593, 1226, 2590, 3052,
	230, 2084, 4805, 4397, 4393, 4372, 3687, 1604, 4421, 4179,
	1714, 1545, 2266, 1512, 2278, 2835, 4177, 1511, 820, 1024,
	4916, 3423, 2106, 4174, 4840, 2097, 3288, 189, 1126, 1022,
	4574, 1507, 4414, 1020, 4405, 2172, 1553, 1065, 2169, 1018,
	2301, 1015, 2187, 4158, 3395, 4220, 3123, 2994, 2380, 1006,
	4219, 2326, 1698, 3932, 3931, 2866, 3923, 1370, 3934, 2378,
	2227, 3913, 1126, 2286, 1126, 1067, 3912, 1067, 873, 2411,
	3910, 1126, 3909, 1353, 2014, 2014, 1389, 4151, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 2275, 1126, 2247, 1126, 1126, 1126,
	1126, 2246, 1369, 1554, 2288, 2145, 3933, 1064, 2309, 1364,
	3897, 4152, 1713, 3298, 3870, 4395, 2853, 1370, 4367, 2853,
	1601, 3862, 2283, 1126, 2283, 2280, 2284, 1126, 1126, 2429,
	1649, 2851, 2595, 2416, 2851, 1126, 2292, 3861, 2293, 1126,
	1347, 1126, 1126, 3425, 3446, 3479, 817, 2211, 2869, 1389,
	2453, 2454, 3549, 874, 3548, 1126, 1126, 1126, 1126, 3509,
	2351, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 820,
	2313, 2890, 3388, 2296, 3240, 1492, 2427, 3239, 2890, 3238,
	3237, 1364, 1369, 3193, 2330, 3204, 1836, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 2341, 2636, 1364, 2957,
	1126, 2567, 2568, 750, 750, 2956, 4173, 2142, 2953, 2942,
	2926, 4841, 1248, 1712, 3202, 2567, 2583, 1066, 1793, 1389,
	2925, 4175, 1492, 2794, 2920, 2919, 2374, 1360, 1248, 2918,
	2897, 2896, 2914, 2857, 2781, 2425, 2500, 1603, 2635, 1758,
	2440, 2138, 2631, 2457, 1126, 1389, 3049, 1591, 2589, 1590,
	1589, 2808, 1588, 3290, 2008, 2008, 2586, 2785, 4136, 2907,
	2908, 2677, 2677, 2691, 3299, 2567, 2907, 2908, 2712, 2714,
	2143, 2144, 4845, 2413, 2718, 4193, 2415, 2392, 2428, 2414,
	1012, 2531, 1047, 2421, 1508, 1047, 1047, 2444, 1067, 3667,
	2445, 2446, 2907, 2908, 1965, 2582, 2409, 1549, 1067, 1360,
	2139, 1283, 1067, 2842, 2011, 2011, 2002, 2002, 1365, 2318,
	1750, 2114, 2115, 2153, 4147, 1562, 1360, 1665, 2768, 4148,
	3510, 4135, 2515, 2743, 4430, 1751, 1608, 2314, 2245, 4153,
	2181, 4314, 2391, 2894, 2515, 699, 2157, 3103, 1567, 3137,
	2880, 1729, 2427, 1725, 2772, 2170, 1330, 1330, 1644, 2868,
	2404, 2384, 2633, 2816, 1969, 3181, 3199, 2634, 1763, 2820,
	2637, 694, 2638, 2639, 2527, 1673, 1361, 4805, 4846, 1214,
	3166, 4150, 1345, 2831, 2401, 1362, 2580, 2338, 2194, 2735,
	1365, 3200, 2757, 2426, 178, 3205, 2784, 2788, 4154, 1673,
	1389, 1067, 2335, 2154, 4553, 1958, 1695, 1365, 2734, 1063,
	2329, 2425, 2830, 2742, 2372, 2747, 1246, 2824, 2753, 2754,
	2950, 2145, 3291, 3292, 3284, 3285, 3286, 3287, 3289, 3290,
	2176, 4873, 1246, 2879, 2014, 2686, 2703, 2716, 2673, 749,
	749, 2190, 2285, 4176, 2523, 2807, 1358, 2947, 1361, 2724,
	2725, 2521, 2949, 2740, 2741, 1661, 2736, 1362, 1911, 3422,
	2796, 2945, 1000, 876, 875, 1361, 2838, 2424, 2189, 1956,
	2403, 2331, 3676, 2171, 1362, 2511, 1645, 1389, 3675, 2827,
	1243, 4733, 1711, 2595, 3882, 4218, 1060, 2840, 4848, 785,
	1695, 1242, 2423, 1330, 3139, 1574, 1243, 2339, 914, 3180,
	2264, 1650, 2185, 4171, 2509, 3733, 2867, 1242, 3911, 2858,
	2158, 2856, 1694, 2826, 1126, 1126, 2856, 1126, 4158, 3908,
	1903, 1904, 2803, 2815, 2841, 4555, 1016, 2818, 4149, 2819,
	2900, 2143, 2144, 3854, 2332, 2833, 1016, 2126, 2832, 811,
	1016, 1330, 2127, 2806, 2855, 2839, 1017, 1572, 1016, 751,
	751, 2810, 4151, 2825, 2379, 1692, 4144, 2943, 3841, 2426,
	1363, 2186, 1075, 3894, 2915, 2377, 2852, 4159, 4160, 3555,
	3547, 3507, 1330, 4142, 3063, 2899, 2159, 2160, 1001, 1256,
	4431, 3201, 4146, 2952, 2917, 3942, 1330, 4854, 1330, 3092,
	3036, 3203, 4429, 1244, 2883, 2836, 1694, 1726, 4427, 783,
	2155, 3148, 3880, 1330, 2895, 1708, 4152, 2898, 3496, 1244,
	4313, 1648, 2893, 1000, 2909, 2911, 2912, 2913, 1693, 3018,
	2916, 1253, 2871, 2874, 4819, 2958, 2924, 2861, 3104, 3105,
	2986, 2987, 1363, 2424, 2008, 2233, 2232, 1060, 3488, 3111,
	3112, 3113, 3943, 2156, 2410, 4426, 2505, 4827, 4145, 1363,
	2989, 1126, 871, 2400, 870, 2128, 4734, 4494, 4826, 3730,
	3658, 2595, 2390, 4876, 1258, 3497, 2506, 2779, 2497, 3651,
	2923, 2507, 2132, 4428, 3098, 2512, 4630, 3895, 4794, 2938,
	1939, 2928, 2854, 4847, 2011, 3941, 2002, 1548, 269, 178,
	2167, 1282, 4052, 2693, 2126, 3489, 3173, 3174, 4051, 2127,
	2180, 3121, 2995, 3670, 817, 3556, 4169, 2990, 3495, 3077,
	4486, 3151, 3125, 1126, 3126, 695, 3609, 2182, 2930, 1126,
	1126, 4172, 1512, 4487, 3032, 2997, 3000, 820, 3145, 1001,
	2999, 1257, 3553, 1551, 817, 3067, 1727, 3012, 3487, 2402,
	3065, 3731, 3433, 4904, 3022, 2129, 2134, 2177, 3023, 2054,
	2988, 2194, 2179, 3610, 3118, 3127, 4488, 820, 4561, 2823,
	4732, 1943, 4581, 3153, 2161, 3155, 2337, 3653, 2367, 1002,
	3129, 4640, 3131, 3058, 3133, 1126, 1126, 4701, 3068, 4702,
	4358, 1126, 3652, 3095, 3079, 3195, 1574, 1013, 2933, 2922,
	2174, 2165, 4554, 3099, 1126, 1126, 696, 2514, 3047, 3143,
	1126, 1126, 3066, 2921, 3522, 2087, 1126, 3424, 3956, 4147,
	1946, 3094, 2128, 3101, 4148, 784, 2126, 3954, 3106, 4490,
	3107, 2127, 2181, 2148, 4153, 1941, 2995, 1762, 2130, 2132,
	1728, 907, 1724, 3128, 2771, 3609, 2495, 824, 4852, 2498,
	2162, 1344, 4489, 1944, 3150, 697, 2373, 698, 2166, 3465,
	2206, 1126, 1126, 1126, 1723, 1646, 3461, 1126, 3196, 748,
	4491, 2508, 2334, 4628, 786, 4170, 4150, 1126, 782, 3161,
	2328, 2510, 3471, 1943, 3172, 3147, 2136, 1674, 915, 1088,
	2149, 1506, 1267, 4154, 1126, 4245, 1942, 1939, 2182, 1003,
	2494, 2164, 2522, 3163, 3162, 3958, 3392, 2595, 895, 1898,
	2180, 3467, 2129, 2134, 4793, 2178, 4629, 2205, 2194, 2440,
	3182, 3167, 2136, 3460, 1660, 1662, 1004, 1315, 3346, 3881,
	1002, 2853, 1946, 2147, 4048, 4310, 3223, 3224, 4768, 3469,
	3957, 3227, 4326, 4816, 2128, 3219, 2872, 2737, 4769, 3956,
	2197, 4684, 4672, 3228, 4203, 2204, 4853, 1254, 3954, 3434,
	3245, 2132, 717, 1848, 2739, 1944, 4877, 2752, 1066, 3554,
	3746, 4864, 4255, 1067, 2577, 3466, 1315, 4042, 1943, 1005,
	4862, 3194, 3470, 4223, 3842, 1272, 1126, 1126, 1126, 1126,
	3149, 4053, 4855, 3689, 3164, 2130, 1126, 1126, 1126, 4588,
	4677, 1126, 3659, 3654, 3655, 3656, 3657, 1315, 1315, 4607,
	1255, 1126, 1248, 1389, 1945, 4468, 4222, 1126, 1679, 1126,
	3338, 3339, 4221, 4149, 1773, 3994, 2929, 1946, 1248, 4260,
	3952, 3597, 2253, 3971, 2129, 2134, 3958, 1936, 1270, 4049,
	3120, 1263, 1941, 2136, 686, 2443, 1389, 2146, 4261, 2098,
	1003, 3785, 3381, 4392, 4882, 3130, 4477, 3132, 1248, 3134,
	1944, 1389, 4159, 4160, 1772, 4097, 4537, 3234, 2198, 2131,
	3995, 3957, 4309, 3927, 3914, 3321, 1608, 1004, 1608, 3866,
	3440, 3598, 2014, 3361, 3374, 3589, 1389, 3436, 908, 909,
	2095, 3340, 3037, 2496, 825, 826, 3428, 3835, 3658, 3031,
	3016, 1481, 1330, 1942, 2279, 2273, 3156, 3651, 1772, 3158,
	3955, 1084, 4905, 4246, 2267, 4792, 2259, 2130, 2055, 4492,
	3729, 1767, 2239, 1542, 1126, 4493, 1945, 3345, 4589, 3858,
	1005, 3409, 2901, 1492, 3411, 3412, 1274, 2433, 1126, 3415,
	757, 3416, 3350, 3417, 3800, 3375, 2135, 2730, 1330, 3429,
	3430, 3836, 4645, 2014, 3690, 896, 897, 3387, 3370, 2856,
	1772, 2124, 4610, 2385, 2091, 2136, 2093, 3997, 1771, 4276,
	3450, 1126, 2319, 3454, 3354, 3013, 1285, 3837, 3393, 3834,
	2135, 3402, 2733, 4054, 3813, 3349, 4446, 1330, 4444, 3420,
	3359, 4767, 3343, 3413, 3342, 3348, 3362, 3363, 3367, 3332,
	3379, 4369, 1358, 3426, 3452, 3653, 1246, 3448, 2094, 1330,
	4311, 1330, 1771, 3360, 3347, 3316, 3317, 3318, 2122, 3447,
	3652, 1945, 1246, 2732, 3451, 3187, 2131, 3456, 2731, 3165,
	3458, 2193, 3365, 1389, 3366, 1773, 1696, 828, 827, 2873,
	2193, 3955, 3786, 2778, 1330, 3525, 2777, 3527, 1330, 3441,
	3531, 3787, 1246, 3437, 3537, 3962, 3383, 3384, 3385, 3386,
	4258, 2123, 4881, 2776, 1771, 4098, 3482, 2775, 4055, 3355,
	1243, 3399, 3400, 1330, 3401, 2434, 2774, 1492, 3512, 1773,
	3020, 1242, 2008, 910, 911, 2201, 1243, 1330, 1315, 1330,
	3505, 1597, 1848, 1389, 3410, 1595, 3414, 1242, 1702, 1701,
	811, 829, 830, 3407, 1583, 2902, 2903, 1064, 913, 3003,
	3649, 1330, 3006, 3572, 3008, 3421, 1243, 4548, 1584, 3353,
	3427, 4381, 4441, 4237, 4590, 3859, 1330, 1242, 2877, 1058,
	3500, 1000, 2011, 3873, 2002, 3639, 2277, 3520, 3563, 1492,
	3863, 1492, 2199, 1248, 4813, 3581, 4293, 3605, 2131, 3435,
	898, 899, 3358, 2008, 3092, 1060, 3468, 3478, 3054, 2746,
	1680, 3054, 4585, 3092, 3588, 4356, 3486, 2993, 1330, 1330,
	3405, 3557, 3390, 3102, 2998, 3558, 3492, 3561, 3838, 3491,
	3493, 3382, 2996, 1244, 2307, 2200, 2210, 3494, 3485, 1983,
	1654, 4364, 4377, 1330, 3603, 4376, 4658, 3625, 3432, 1244,
	3596, 1059, 3513, 2011, 3521, 2002, 4651, 3523, 4642, 4104,
	3499, 3534, 3501, 3802, 4549, 2602, 3540, 4817, 4292, 3614,
	1746, 2924, 3545, 2396, 4679, 1748, 4382, 756, 4818, 1244,
	3659, 3654, 3655, 3656, 3657, 1745, 3668, 4365, 1389, 3484,
	1743, 1389, 3135, 1720, 3546, 3533, 1718, 1001, 1690, 3539,
	4815, 1688, 1686, 4753, 4577, 1684, 4569, 4332, 3550, 3356,
	3357, 3498, 3565, 1682, 2899, 1676, 1670, 1668, 3599, 1593,
	4096, 1088, 1088, 1088, 1126, 3585, 3586, 3961, 178, 178,
	1126, 1126, 3606, 3584, 1126, 1126, 1126, 3313, 1126, 1473,
	3705, 3664, 2376, 1473, 4652, 817, 3532, 1126, 2014, 3663,
	3538, 3864, 4550, 3661, 3403, 3276, 1126, 3637, 3641, 1067,
	3206, 1126, 3017, 2343, 2941, 2891, 2805, 1389, 820, 3611,
	3613, 3678, 2405, 3683, 3623, 3624, 1126, 1976, 3620, 1972,
	1749, 1596, 1632, 3635, 1389, 1594, 4433, 1246, 3314, 2219,
	3682, 3685, 3684, 1767, 2014, 2014, 1126, 1126, 912, 1126,
	1126, 1126, 3141, 3140, 3109, 2422, 1707, 2346, 3672, 2258,
	3673, 2238, 3674, 2043, 1881, 1643, 1566, 1126, 2601, 4726,
	4204, 1126, 3691, 2014, 2014, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126, 1126,
	1126, 1126, 1126, 1126, 1126, 3708, 1126, 3679, 3662, 3718,
	3719, 1243, 3918, 2398, 1126, 1126, 2014, 2397, 3758, 1747,
	3759, 1126, 1242, 3660, 3917, 3688, 3524, 4205, 4188, 1744,
	4790, 4641, 1126, 4274, 1742, 4210, 4201, 1719, 3508, 1014,
	1717, 4140, 1689, 1248, 1248, 1687, 1685, 1126, 1002, 1683,
	2453, 3749, 3993, 4269, 3984, 3930, 3915, 1681, 3888, 1675,
	1669, 1667, 3886, 1592, 3865, 3592, 3587, 3577, 3050, 3042,
	3035, 3024, 3713, 3715, 4806, 3010, 2991, 1389, 2822, 2453,
	3764, 2817, 2375, 2237, 3831, 2235, 3725, 2212, 2195, 2163,
	2150, 2137, 3732, 3734, 3735, 3797, 3544, 3741, 2076, 3748,
	4781, 2073, 3818, 2342, 2070, 2067, 2062, 2060, 2008, 2056,
	2047, 3726, 3793, 3602, 1776, 3756, 1986, 3185, 4260, 3757,
	2099, 3736, 3535, 1223, 1244, 4547, 1126, 2204, 3763, 2218,
	3761, 2408, 3159, 3157, 2984, 2087, 3856, 4261, 4689, 3789,
	3857, 4298, 4291, 178, 3755, 1126, 3798, 4290, 4217, 1224,
	4132, 3093, 2118, 1547, 2008, 2008, 4479, 2853, 2011, 2878,
	2002, 2853, 3604, 3790, 4472, 4005, 1608, 2145, 1003, 1492,
	1492, 2333, 2851, 2276, 3839, 3840, 2875, 2406, 1126, 1126,
	3887, 1306, 3889, 2008, 2008, 1305, 3806, 3807, 2340, 3852,
	3853, 2370, 3855, 1057, 2365, 1004, 1019, 1021, 1023, 1740,
	1741, 4688, 4180, 4212, 2011, 2011, 2002, 2002, 1666, 2881,
	3809, 3810, 3186, 4514, 3820, 4379, 2008, 1783, 1784, 3821,
	1126, 1783, 1784, 2407, 1777, 4105, 4083, 3463, 2882, 2904,
	1780, 4809, 1339, 2011, 2011, 2002, 2002, 1246, 1246, 1273,
	3536, 2882, 1492, 4800, 1330, 260, 4762, 1786, 1005, 1330,
	3926, 3009, 3899, 3929, 3981, 2260, 1350, 3804, 1306, 1225,
	3680, 2948, 2946, 2955, 2935, 4650, 2011, 2264, 2002, 3686,
	1306, 2937, 3925, 2014, 2884, 2886, 3904, 3906, 3848, 4635,
	3903, 4849, 1785, 4601, 2936, 4378, 1785, 3869, 2885, 4595,
	3920, 4546, 683, 3928, 3922, 4463, 4439, 4357, 3991, 3983,
	3970, 1243, 1243, 3828, 1330, 3591, 3891, 3057, 2717, 2082,
	1126, 3896, 1242, 1242, 1995, 4681, 2927, 1504, 1248, 1126,
	4682, 4007, 1503, 3944, 3946, 3063, 3391, 4880, 4597, 1330,
	1330, 1330, 3282, 3283, 4681, 4014, 1783, 1784, 2899, 4682,
	4821, 2845, 2846, 2843, 2844, 1653, 1330, 1330, 1330, 1514,
	4075, 1652, 3092, 2597, 3844, 3977, 3960, 3998, 2845, 1473,
	2843, 2632, 1722, 3999, 1330, 1721, 3990, 4018, 4464, 3441,
	1389, 3472, 3473, 4415, 3474, 3475, 3476, 4214, 4209, 4002,
	4208, 3948, 4071, 3937, 3843, 1134, 3737, 3529, 3978, 3526,
	1315, 3949, 4001, 1875, 1874, 4866, 1389, 4828, 4639, 1126,
	1126, 4030, 4638, 4637, 4576, 1126, 1126, 2014, 3982, 4575,
	1126, 1126, 4530, 1126, 1244, 1244, 4442, 4409, 1126, 4354,
	4351, 4349, 3514, 3515, 4248, 3516, 3517, 3518, 3940, 1126,
	4234, 267, 267, 267, 4178, 689, 690, 3985, 705, 689,
	705, 715, 4127, 4000, 755, 1126, 3964, 4029, 775, 4008,
	3939, 4003, 4040, 781, 4011, 3965, 4013, 4009, 3884, 3876,
	267, 3595, 3594, 3457, 4019, 4020, 3408, 4056, 4025, 4024,
	4021, 3987, 4038, 2008, 4027, 3146, 1088, 4028, 3138, 3117,
	892, 3116, 3950, 3115, 1473, 3959, 267, 4069, 3114, 3041,
	3011, 2876, 2813, 2809, 2798, 2797, 2786, 2526, 2399, 1492,
	4057, 3938, 2371, 2364, 4065, 2363, 1248, 4050, 2362, 2361,
	2360, 2274, 1246, 2248, 1248, 4045, 2244, 2243, 1389, 2242,
	1389, 2241, 2240, 2011, 2050, 2002, 2049, 1248, 2048, 2046,
	1985, 1739, 1738, 1677, 1561, 1560, 1559, 1558, 1330, 1330,
	1557, 1556, 1555, 1550, 1546, 1544, 1543, 1497, 1389, 1496,
	1495, 1380, 1379, 3374, 1378, 1377, 1376, 1343, 1342, 1292,
	1387, 1291, 1290, 1289, 1486, 1288, 1287, 1286, 1284, 1279,
	4133, 4134, 1278, 1248, 1277, 1248, 1243, 1276, 1275, 885,
	8, 1206, 2089, 1025, 1011, 4552, 4039, 1242, 4157, 4095,
	4156, 4155, 2395, 92, 1552, 4181, 847, 4110, 1330, 4164,
	86, 4164, 2202, 3883, 4756, 979, 4678, 2008, 1389, 1536,
	1330, 4580, 855, 1330, 4660, 689, 689, 3979, 178, 4167,
	3459, 4102, 4113, 267, 1389, 2960, 1473, 2345, 4109, 1678,
	4112, 1861, 4116, 4107, 4108, 1866, 2347, 3369, 2759, 4213,
	4117, 4215, 4137, 4627, 4079, 4120, 3244, 4521, 4325, 2600,
	4182, 1879, 3325, 88, 1110, 1156, 4244, 2011, 4243, 2002,
	4141, 4168, 1330, 1330, 3868, 3082, 4241, 4125, 4139, 4240,
	1999, 2001, 1074, 4106, 1392, 4700, 2100, 4238, 4183, 4184,
	4131, 4111, 1330, 1116, 2116, 2109, 2087, 2799, 2676, 1244,
	1133, 1130, 2003, 4202, 1389, 2005, 1132, 1131, 2004, 1330,
	1246, 4216, 1899, 1129, 1998, 3989, 4235, 3061, 1246, 3621,
	1602, 1600, 981, 2104, 2520, 2584, 3233, 4232, 1872, 1090,
	1112, 1246, 2581, 1268, 1248, 1101, 1089, 3351, 4207, 4266,
	3330, 3608, 2087, 3827, 4200, 2432, 1330, 1330, 1330, 865,
	4263, 3279, 2587, 1259, 4226, 2700, 2692, 2688, 3418, 1389,
	4164, 4233, 4277, 4231, 3051, 1753, 2437, 4339, 4278, 1850,
	4225, 1126, 1126, 1126, 1243, 3062, 4224, 1246, 4294, 1246,
	1374, 2087, 1243, 1094, 2518, 1242, 1863, 4239, 3211, 1389,
	2442, 3615, 3372, 1242, 1126, 1243, 2792, 1126, 1126, 4197,
	4254, 4281, 4685, 2087, 4286, 2087, 1242, 1126, 4272, 4187,
	2014, 3745, 3144, 2252, 1222, 1126, 1126, 4279, 1221, 1266,
	1220, 4196, 4297, 4666, 4199, 4663, 2192, 4022, 3570, 2092,
	1389, 2837, 1330, 2530, 3578, 4303, 1106, 1491, 2087, 2389,
	4317, 1243, 2087, 1243, 3336, 3640, 1563, 780, 4386, 1118,
	4301, 1835, 1242, 4300, 1242, 1389, 2981, 2980, 4312, 4186,
	4541, 4305, 1359, 1126, 1357, 1356, 1355, 4837, 4903, 4322,
	3879, 3878, 4195, 4265, 3877, 4198, 1126, 234, 3179, 1774,
	1766, 231, 233, 1315, 232, 1126, 4249, 1244, 3832, 3378,
	2014, 4760, 4328, 4262, 3901, 1244, 3562, 23, 22, 1126,
	21, 112, 1126, 42, 1473, 20, 151, 4334, 1244, 129,
	148, 147, 2694, 121, 4360, 146, 1126, 4400, 4401, 145,
	144, 4345, 4346, 1389, 143, 4389, 150, 142, 1246, 141,
	1330, 136, 4348, 140, 139, 138, 137, 135, 133, 134,
	1330, 1330, 128, 132, 131, 2264, 4361, 4416, 130, 4418,
	127, 4419, 126, 4359, 1244, 4368, 1244, 125, 124, 123,
	122, 120, 152, 119, 118, 117, 116, 4408, 115, 114,
	113, 767, 3572, 4432, 4306, 769, 61, 60, 4420, 111,
	110, 19, 4454, 40, 14, 1389, 4398, 65, 1330, 4411,
	66, 18, 1243, 13, 4445, 35, 91, 1473, 102, 4410,
	101, 4406, 36, 1242, 99, 98, 1248, 1248, 34, 17,
	2008, 16, 15, 96, 4417, 95, 33, 4462, 31, 11,
	9, 37, 1960, 12, 5, 183, 1126, 1126, 4434, 4437,
	1975, 4435, 4164, 4164, 182, 4482, 4443, 4438, 185, 181,
	184, 4473, 4458, 1126, 2014, 4501, 90, 4474, 4453, 180,
	4497, 4498, 179, 89, 29, 10, 175, 4455, 3975, 81,
	2011, 4476, 2002, 177, 176, 174, 173, 1473, 172, 82,
	79, 171, 4475, 85, 170, 80, 84, 4481, 83, 4478,
	4480, 1126, 27, 1126, 4495, 1126, 4281, 1261, 3986, 4470,
	2008, 6, 64, 1473, 7, 1248, 4307, 3665, 105, 106,
	4510, 4511, 38, 77, 76, 1244, 4509, 75, 1126, 4424,
	1248, 26, 63, 4536, 25, 169, 216, 215, 214, 213,
	1281, 4164, 4513, 212, 211, 210, 209, 204, 203, 208,
	206, 4423, 267, 205, 267, 267, 4164, 1310, 267, 1320,
	2011, 4519, 2002, 207, 4532, 202, 226, 225, 4529, 4535,
	1340, 4531, 219, 218, 4564, 2120, 4572, 2135, 224, 775,
	4563, 4041, 1126, 1126, 223, 222, 221, 220, 4556, 4557,
	217, 228, 1126, 201, 4584, 200, 199, 1248, 197, 193,
	1248, 192, 4422, 196, 1330, 267, 198, 267, 267, 1310,
	195, 267, 267, 194, 1330, 1330, 1320, 4571, 191, 4573,
	1246, 1246, 227, 4164, 72, 167, 4164, 168, 71, 166,
	267, 1330, 1516, 4578, 165, 164, 163, 162, 161, 160,
	70, 4604, 4618, 24, 4606, 1126, 1126, 4592, 4593, 4591,
	4596, 2, 4598, 1540, 1, 1126, 0, 4599, 1473, 4603,
	0, 0, 4458, 4611, 2008, 0, 4612, 0, 0, 4616,
	4617, 4614, 1565, 0, 0, 1320, 0, 0, 0, 267,
	267, 4615, 1310, 0, 1243, 1243, 4621, 0, 0, 0,
	0, 2264, 4622, 0, 0, 1242, 1242, 0, 1126, 1126,
	0, 1126, 4632, 775, 0, 267, 267, 0, 4636, 1246,
	0, 1315, 0, 0, 2011, 0, 2002, 2230, 4653, 4631,
	0, 4623, 0, 4624, 1246, 4687, 4657, 0, 892, 4665,
	4668, 4683, 4648, 4649, 0, 1473, 0, 4656, 0, 4680,
	4655, 0, 0, 0, 0, 4412, 0, 0, 0, 4705,
	0, 0, 0, 0, 0, 4674, 0, 0, 0, 1126,
	1126, 1126, 0, 4708, 4670, 4709, 0, 0, 0, 0,
	0, 0, 4669, 1243, 4690, 4673, 0, 0, 0, 0,
	0, 0, 0, 4696, 1242, 0, 0, 0, 1243, 4704,
	4675, 1246, 1126, 4676, 1246, 4703, 0, 1244, 1244, 1242,
	2524, 0, 0, 0, 0, 267, 4740, 4724, 4745, 4725,
	4722, 4723, 0, 0, 0, 0, 1861, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	4755, 4743, 4758, 4763, 0, 0, 0, 0, 0, 0,
	0, 4772, 4774, 0, 4786, 3169, 0, 0, 4759, 1126,
	0, 0, 0, 2087, 4785, 1243, 0, 4770, 1243, 0,
	2225, 4771, 4791, 0, 0, 0, 1242, 4780, 0, 1242,
	4741, 2699, 4782, 4783, 0, 4784, 0, 0, 4788, 4779,
	0, 4807, 0, 0, 0, 4778, 1244, 4247, 0, 0,
	4797, 4798, 4803, 0, 4801, 4799, 0, 0, 0, 0,
	4264, 1244, 0, 4810, 1248, 4687, 1248, 2135, 4812, 4814,
	0, 4665, 4811, 0, 4668, 0, 0, 4831, 4825, 0,
	4820, 4830, 4844, 4285, 4584, 4829, 2694, 2694, 0, 0,
	4164, 4839, 4164, 0, 0, 0, 0, 4842, 0, 0,
	0, 4833, 0, 4857, 0, 0, 0, 0, 4832, 0,
	4834, 0, 4843, 0, 0, 4856, 0, 4859, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1244, 0,
	0, 1244, 0, 0, 0, 0, 4874, 4867, 0, 0,
	1126, 1126, 4872, 0, 0, 2456, 4870, 0, 0, 1126,
	0, 1126, 1126, 4878, 4838, 0, 4875, 0, 4868, 0,
	4884, 0, 4888, 0, 4894, 0, 0, 0, 0, 4899,
	4898, 0, 3063, 4897, 4896, 4893, 4895, 4891, 0, 4887,
	0, 4892, 0, 4906, 0, 0, 4907, 4902, 689, 0,
	4909, 4911, 0, 4912, 4863, 4913, 0, 4915, 4908, 0,
	4865, 0, 0, 4918, 0, 0, 0, 0, 0, 267,
	0, 267, 1126, 0, 4923, 267, 4925, 3208, 3209, 4926,
	4929, 4928, 4910, 4920, 4915, 4885, 4886, 0, 1516, 1310,
	1980, 267, 4922, 267, 0, 4919, 0, 0, 2598, 267,
	1516, 705, 0, 0, 0, 0, 267, 1516, 0, 1516,
	0, 0, 1492, 0, 0, 0, 0, 0, 1246, 0,
	1246, 2051, 0, 0, 0, 2976, 0, 0, 2694, 2694,
	2694, 2694, 0, 267, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 4924, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2968, 2966,
	0, 0, 0, 0, 0, 2970, 2972, 2962, 0, 0,
	0, 0, 0, 1783, 1784, 1516, 0, 0, 0, 0,
	775, 0, 1243, 0, 1243, 0, 0, 0, 0, 0,
	0, 0, 0, 1242, 2769, 1242, 1814, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1315,
	0, 0, 2087, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 2087, 0, 0, 2087, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 3306,
	3307, 3308, 3309, 0, 0, 3282, 3283, 0, 3300, 3301,
	3302, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1473, 0, 0, 0, 0, 0, 4062, 0, 0,
	0, 0, 0, 0, 0, 1244, 0, 1244, 0, 0,
	0, 0, 0, 0, 0, 0, 2087, 0, 0, 0,
	0, 3704, 0, 0, 1473, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1473,
	0, 0, 1808, 1809, 1810, 1811, 0, 0, 0, 2848,
	3297, 267, 1791, 0, 0, 267, 2964, 0, 0, 0,
	0, 0, 0, 0, 1473, 0, 0, 2978, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 4582, 0, 2977, 2969,
	2967, 2971, 2973, 2963, 2965, 2979, 0, 0, 0, 0,
	1813, 1815, 1088, 0, 2975, 0, 0, 0, 267, 0,
	4602, 0, 267, 0, 2699, 0, 1088, 0, 267, 0,
	0, 0, 0, 0, 267, 0, 1800, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2982, 0, 0,
	267, 0, 267, 0, 3288, 0, 689, 0, 267, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1806,
	775, 0, 0, 0, 892, 0, 0, 0, 0, 0,
	0, 3282, 3283, 0, 3300, 3301, 3302, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	0, 1310, 267, 4061, 0, 2699, 2699, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 775, 0, 0, 3304,
	0, 1473, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 2344, 0, 0, 0, 0, 267, 267, 0, 267,
	0, 267, 1836, 267, 0, 267, 0, 0, 0, 0,
	0, 0, 4691, 0, 0, 0, 3297, 0, 4693, 0,
	0, 3298, 0, 0, 2087, 0, 0, 0, 0, 0,
	2381, 0, 0, 2382, 0, 2383, 0, 0, 0, 0,
	0, 1473, 0, 0, 0, 0, 0, 267, 267, 267,
	267, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 755, 0, 0, 0, 775, 0,
	1807, 0, 0, 0, 0, 0, 0, 2983, 0, 0,
	0, 0, 0, 0, 1836, 0, 2974, 0, 0, 1783,
	1784, 0, 0, 0, 0, 1324, 0, 2694, 2694, 0,
	3288, 0, 0, 0, 0, 0, 3282, 3283, 0, 3300,
	3301, 3302, 1814, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 2699, 2699, 2699,
	2699, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 1500, 0, 1785, 0, 0, 0, 0, 0,
	0, 2532, 3299, 0, 0, 3304, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1473, 0, 0, 1473,
	0, 3297, 0, 0, 0, 0, 1538, 2694, 2694, 2694,
	2694, 2694, 2694, 2694, 2694, 2694, 2694, 2694, 2694, 2694,
	2694, 2694, 2694, 2694, 2694, 2694, 2694, 3298, 2694, 0,
	0, 0, 1575, 0, 1803, 1799, 0, 1796, 1794, 1795,
	1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 3701, 3702,
	0, 0, 689, 0, 0, 0, 0, 0, 0, 1616,
	0, 0, 0, 0, 0, 0, 0, 267, 0, 0,
	0, 0, 0, 1629, 0, 1473, 689, 0, 1791, 0,
	0, 0, 0, 267, 0, 689, 0, 0, 0, 0,
	0, 0, 1473, 0, 0, 3288, 0, 267, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 1320, 0, 0, 0,
	0, 0, 3294, 3295, 3296, 0, 1813, 1815, 1655, 3293,
	3291, 3292, 3284, 3285, 3286, 3287, 3289, 3290, 3765, 3766,
	3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776,
	3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 0, 3788,
	3304, 0, 0, 0, 267, 1320, 0, 0, 0, 705,
	0, 0, 0, 2812, 0, 0, 0, 0, 3299, 267,
	0, 0, 267, 0, 0, 1806, 267, 0, 267, 0,
	0, 0, 0, 1310, 0, 267, 267, 0, 1320, 1320,
	2828, 0, 3298, 0, 0, 267, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1473, 0, 0, 0, 0,
	0, 159, 3337, 0, 0, 0, 0, 0, 0, 73,
	0, 46, 45, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2865, 0, 0, 0, 74, 0, 1836, 154,
	0, 0, 0, 267, 0, 3364, 0, 0, 0, 0,
	0, 0, 78, 0, 0, 1836, 267, 0, 0, 0,
	3377, 788, 0, 67, 0, 0, 0, 0, 0, 267,
	48, 0, 156, 0, 0, 0, 0, 0, 0, 0,
	775, 0, 0, 0, 0, 3397, 799, 0, 0, 0,
	47, 0, 87, 0, 0, 0, 0, 0, 3294, 3295,
	3296, 267, 0, 0, 0, 3293, 3291, 3292, 3284, 3285,
	3286, 3287, 3289, 3290, 0, 0, 1807, 0, 50, 68,
	0, 0, 0, 0, 0, 0, 0, 51, 0, 0,
	0, 0, 57, 3299, 267, 3001, 157, 0, 0, 0,
	0, 0, 0, 0, 49, 0, 107, 0, 0, 0,
	0, 93, 104, 0, 0, 0, 0, 0, 0, 1516,
	0, 0, 267, 0, 267, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 1838, 0, 0, 0, 0, 793,
	0, 3046, 0, 0, 73, 805, 0, 0, 0, 0,
	0, 2865, 52, 689, 0, 0, 0, 0, 0, 798,
	0, 74, 3075, 892, 0, 2865, 2865, 0, 0, 0,
	94, 0, 0, 0, 0, 0, 0, 78, 0, 0,
	0, 0, 0, 0, 267, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2699, 2699, 0, 0,
	0, 0, 0, 267, 1310, 267, 0, 797, 0, 0,
	0, 0, 1516, 0, 1516, 1320, 267, 87, 0, 1310,
	0, 1310, 0, 1310, 750, 1795, 1787, 1788, 1789, 1790,
	1792, 1793, 1081, 3294, 3295, 3296, 0, 0, 0, 0,
	3293, 3291, 3292, 3284, 3285, 3286, 3287, 3289, 3290, 795,
	0, 0, 3377, 0, 0, 0, 0, 886, 1473, 0,
	0, 0, 0, 0, 0, 0, 267, 267, 267, 267,
	1310, 107, 0, 1310, 0, 267, 93, 104, 267, 0,
	0, 0, 0, 0, 1473, 0, 2699, 2699, 2699, 2699,
	2699, 2699, 2699, 2699, 2699, 2699, 2699, 2699, 2699, 2699,
	2699, 2699, 2699, 2699, 2699, 2699, 0, 2699, 804, 267,
	0, 0, 0, 0, 0, 0, 97, 267, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 53, 94, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 56,
	0, 0, 0, 0, 59, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 69, 0, 1783, 1784, 0, 0,
	58, 186, 100, 0, 0, 103, 0, 0, 0, 54,
	0, 0, 790, 158, 0, 0, 0, 0, 0, 1814,
	0, 55, 0, 0, 0, 0, 1786, 1486, 0, 0,
	1387, 235, 0, 0, 0, 0, 1473, 0, 1473, 62,
	0, 0, 0, 794, 149, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 0, 0, 0, 155,
	0, 1785, 0, 0, 0, 0, 1473, 0, 0, 0,
	0, 0, 0, 1516, 0, 0, 0, 0, 0, 237,
	749, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2789, 0, 0, 0, 800, 0, 0, 0, 0,
	0, 792, 0, 0, 0, 153, 3722, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	190, 0, 0, 3738, 0, 0, 1473, 0, 236, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 229, 1473, 0, 0, 0, 0, 0, 789, 0,
	230, 0, 0, 0, 0, 0, 2294, 0, 0, 0,
	0, 0, 0, 0, 0, 1791, 186, 100, 0, 0,
	103, 0, 1324, 2310, 0, 0, 796, 189, 0, 0,
	3, 0, 0, 2312, 0, 0, 0, 0, 0, 2694,
	751, 0, 0, 0, 0, 2320, 235, 2323, 2324, 2325,
	0, 791, 0, 0, 887, 0, 0, 0, 0, 149,
	0, 0, 1473, 1813, 1815, 0, 0, 267, 0, 0,
	0, 0, 0, 0, 802, 803, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 689, 1783,
	1784, 0, 0, 689, 237, 2694, 689, 0, 0, 689,
	689, 0, 0, 0, 0, 689, 3830, 0, 0, 0,
	0, 0, 1814, 267, 0, 0, 0, 1473, 0, 1786,
	153, 0, 1806, 0, 0, 0, 0, 1516, 0, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	0, 0, 0, 236, 0, 1839, 0, 1473, 0, 0,
	0, 1516, 0, 0, 1785, 0, 229, 0, 0, 0,
	0, 0, 0, 267, 1805, 230, 0, 267, 267, 0,
	4331, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1473, 0,
	0, 0, 189, 0, 0, 1836, 2865, 2865, 267, 0,
	1980, 0, 0, 0, 0, 0, 2865, 0, 0, 3443,
	0, 0, 0, 1473, 0, 0, 0, 2865, 3443, 0,
	2865, 3443, 0, 0, 3443, 0, 4371, 3699, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 267,
	267, 1980, 0, 267, 0, 0, 0, 0, 1808, 1809,
	1810, 1811, 0, 0, 0, 0, 0, 0, 1791, 0,
	1088, 0, 0, 1980, 0, 267, 0, 3504, 3504, 0,
	0, 0, 1310, 1807, 0, 2694, 0, 0, 0, 0,
	0, 1473, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2865, 0, 2865, 0, 3530, 2865, 1980, 0,
	0, 2865, 1980, 0, 0, 775, 1813, 1815, 0, 0,
	0, 0, 0, 0, 0, 2694, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1310, 1838, 1800, 1801, 0, 0, 0, 267, 0, 0,
	2694, 1516, 0, 1473, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 267, 3566, 0, 0, 3568,
	2865, 0, 0, 267, 0, 1806, 0, 267, 0, 0,
	1320, 0, 0, 0, 0, 0, 0, 1783, 1784, 0,
	1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 267, 0,
	0, 0, 0, 3046, 0, 0, 1310, 0, 267, 1820,
	1814, 2865, 0, 689, 0, 0, 4518, 1786, 0, 0,
	2865, 0, 0, 0, 0, 0, 1833, 0, 0, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0,
	0, 267, 3046, 1839, 0, 3046, 0, 0, 1836, 0,
	0, 0, 1785, 0, 0, 0, 4540, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 0, 0, 0, 0, 2829, 1324, 0, 0,
	3671, 4562, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 0, 3677, 0,
	0, 1516, 0, 1812, 1310, 267, 0, 267, 0, 0,
	0, 0, 0, 1310, 0, 0, 0, 0, 1814, 0,
	0, 0, 0, 0, 0, 1786, 1807, 0, 0, 0,
	1088, 1088, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 1808, 1809, 1810, 1811,
	0, 1839, 0, 0, 0, 0, 1791, 0, 0, 4115,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 3282, 3283, 1802,
	3300, 3301, 3302, 0, 1838, 0, 0, 4129, 2699, 0,
	0, 0, 0, 0, 1824, 0, 0, 1834, 0, 3710,
	0, 3743, 0, 0, 1813, 1815, 0, 0, 0, 0,
	0, 0, 0, 2985, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 1831, 0, 0, 0, 0, 0, 0,
	1800, 1801, 0, 3698, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2699, 0, 0, 1088, 1822, 0,
	0, 0, 3297, 0, 1808, 1809, 1810, 1811, 0, 0,
	0, 0, 0, 1806, 1791, 0, 0, 880, 0, 0,
	1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790,
	1792, 1793, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 73, 0, 883, 882, 267, 267,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 74, 1813, 1815, 0, 0, 0, 0, 0, 0,
	0, 689, 689, 3110, 0, 1821, 0, 78, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 1800, 1801,
	0, 0, 0, 0, 1516, 1516, 3288, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1516,
	1516, 0, 1516, 0, 0, 0, 0, 87, 0, 0,
	0, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1387, 0,
	0, 1812, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 886, 0, 0,
	0, 3304, 0, 0, 1807, 0, 0, 0, 4323, 49,
	0, 107, 0, 0, 2699, 0, 93, 104, 0, 0,
	0, 0, 0, 0, 0, 775, 0, 0, 0, 0,
	0, 1825, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 3298, 0, 0, 0, 0, 0, 4323,
	0, 0, 0, 0, 2699, 0, 0, 0, 3504, 0,
	0, 0, 1838, 0, 0, 0, 0, 0, 0, 0,
	0, 267, 0, 0, 2456, 94, 0, 0, 0, 2699,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1812,
	0, 0, 0, 1980, 0, 267, 0, 0, 0, 705,
	705, 1320, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 267, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 267, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 1823, 0, 0, 0, 267, 0,
	0, 0, 2456, 267, 1797, 1798, 1804, 1826, 1803, 1799,
	0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	0, 0, 2865, 267, 3257, 0, 0, 0, 3258, 0,
	1838, 0, 3075, 3075, 0, 0, 0, 0, 892, 892,
	2865, 0, 0, 0, 3046, 3046, 0, 0, 892, 2865,
	0, 0, 0, 0, 3299, 0, 0, 73, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 267, 74, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	87, 0, 0, 0, 0, 0, 186, 100, 0, 0,
	103, 0, 0, 0, 0, 0, 0, 0, 4080, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 235, 0, 0, 0,
	886, 0, 0, 0, 887, 0, 0, 0, 0, 149,
	0, 0, 49, 0, 107, 0, 0, 0, 0, 93,
	104, 0, 0, 0, 3294, 3295, 3296, 0, 0, 0,
	0, 3293, 3291, 3292, 3284, 3285, 3286, 3287, 3289, 3290,
	0, 267, 0, 0, 237, 0, 0, 1516, 0, 267,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 267, 0, 0, 0, 0, 0, 0, 0,
	153, 0, 0, 0, 0, 0, 0, 1320, 94, 0,
	0, 0, 0, 0, 0, 190, 0, 0, 0, 0,
	1320, 0, 0, 236, 0, 0, 0, 2865, 2865, 0,
	3504, 2865, 0, 0, 0, 0, 229, 0, 4166, 0,
	4166, 1516, 0, 0, 0, 230, 0, 0, 0, 0,
	0, 1819, 2865, 0, 3443, 0, 0, 1819, 1516, 1516,
	267, 1980, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 73, 881, 0, 1980, 0, 267, 1980, 0, 267,
	0, 3504, 0, 0, 0, 0, 0, 0, 74, 0,
	0, 0, 0, 0, 0, 0, 2865, 0, 2865, 267,
	0, 0, 0, 0, 78, 0, 0, 1783, 1784, 0,
	1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	1814, 0, 0, 0, 2865, 0, 0, 1786, 0, 4251,
	0, 0, 0, 0, 87, 0, 1833, 0, 0, 0,
	267, 0, 1819, 0, 97, 0, 0, 1819, 0, 0,
	267, 0, 0, 1839, 0, 0, 1819, 0, 0, 0,
	0, 1819, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 886, 0, 0, 0, 0, 4166,
	0, 1802, 1516, 3541, 0, 0, 49, 0, 107, 0,
	0, 0, 0, 93, 104, 0, 0, 0, 0, 186,
	100, 0, 1938, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 73, 0, 0,
	0, 3582, 0, 0, 0, 0, 1819, 0, 0, 235,
	0, 0, 1819, 0, 74, 0, 3590, 887, 0, 0,
	0, 0, 149, 0, 0, 0, 0, 0, 0, 0,
	78, 0, 94, 0, 0, 0, 1808, 1809, 1810, 1811,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 237, 3631, 3632,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 0, 0, 0, 0, 0, 2865, 0, 3443, 0,
	0, 4363, 0, 153, 1824, 0, 0, 1834, 0, 0,
	267, 0, 0, 0, 1813, 1815, 0, 0, 190, 0,
	4387, 0, 4387, 0, 0, 0, 236, 0, 0, 0,
	886, 1830, 0, 1831, 0, 0, 0, 0, 0, 229,
	1800, 1801, 49, 0, 107, 0, 775, 0, 230, 93,
	104, 0, 0, 0, 0, 0, 0, 3504, 1822, 1310,
	0, 0, 0, 1819, 1819, 1819, 1819, 1819, 1819, 1819,
	1819, 0, 0, 1806, 1980, 189, 267, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1073, 0, 0, 1819, 0, 97, 0,
	0, 4363, 0, 0, 0, 0, 0, 0, 94, 2865,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4467, 0, 0,
	0, 0, 0, 0, 0, 1821, 0, 0, 0, 1516,
	0, 0, 2698, 0, 0, 0, 1836, 0, 0, 0,
	0, 4166, 4166, 186, 100, 1819, 0, 103, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 267,
	267, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 235, 0, 0, 0, 0, 0, 0,
	0, 887, 0, 3743, 0, 0, 149, 0, 0, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 1516, 0,
	0, 1516, 3504, 4534, 0, 0, 0, 0, 0, 0,
	4363, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 237, 0, 0, 0, 0, 0, 0, 0, 0,
	4166, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1825, 0, 0, 97, 4166, 0, 153, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 190, 0, 0, 0, 0, 267, 0, 0,
	236, 0, 1838, 0, 0, 0, 0, 0, 0, 705,
	0, 0, 0, 229, 0, 0, 0, 0, 0, 0,
	0, 0, 230, 0, 0, 0, 4251, 0, 0, 186,
	100, 0, 0, 103, 0, 0, 0, 0, 0, 0,
	0, 0, 4166, 0, 267, 4166, 0, 0, 0, 1613,
	0, 0, 0, 0, 0, 3443, 0, 0, 0, 235,
	0, 0, 0, 0, 0, 0, 0, 887, 0, 0,
	0, 0, 149, 0, 1823, 0, 0, 0, 0, 0,
	0, 1516, 0, 1516, 1797, 1798, 1804, 1826, 1803, 1799,
	0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	0, 0, 0, 0, 2575, 0, 0, 237, 2576, 0,
	0, 0, 1783, 1784, 0, 0, 0, 0, 4646, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 153, 4387, 1814, 0, 267, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 190, 0,
	1516, 0, 0, 1516, 0, 0, 236, 0, 0, 0,
	0, 0, 2865, 0, 3935, 0, 0, 0, 1839, 229,
	0, 0, 0, 0, 0, 0, 0, 1785, 230, 0,
	0, 0, 0, 267, 0, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 1611, 0, 0, 0, 0,
	3743, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1516, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 4015,
	4016, 4017, 0, 0, 0, 0, 0, 0, 0, 0,
	267, 0, 0, 0, 0, 0, 1324, 4031, 4032, 0,
	0, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 4363, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1813,
	1815, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 2865, 0, 0, 0, 0, 0, 0, 4166,
	0, 4166, 0, 0, 1516, 1800, 1801, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1335, 0,
	0, 0, 0, 0, 1819, 0, 0, 0, 1819, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 1819, 0, 1516, 1073, 1073, 1073, 0, 0,
	1516, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819,
	1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819,
	1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819, 1819,
	1819, 1819, 1819, 1819, 1819, 1819, 1819, 0, 0, 0,
	3075, 0, 1819, 0, 1819, 1819, 1819, 1819, 1518, 2865,
	1524, 0, 1530, 0, 0, 0, 2698, 2698, 4122, 4123,
	0, 1836, 0, 0, 0, 3075, 0, 0, 0, 0,
	0, 1819, 73, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 74,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 78, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1812, 0, 0, 1619,
	0, 1624, 1819, 0, 0, 0, 0, 0, 0, 0,
	0, 1633, 0, 1638, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 87, 0, 0, 0, 0,
	0, 0, 1819, 0, 0, 1819, 0, 0, 1819, 0,
	0, 1819, 0, 0, 0, 0, 0, 1819, 1819, 1819,
	1819, 1819, 1819, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 1324, 0, 0, 886, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 107,
	1703, 0, 0, 1709, 93, 104, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 3303, 0, 2698, 2698,
	2698, 2698, 0, 0, 0, 1819, 0, 1819, 0, 0,
	0, 0, 1819, 0, 0, 0, 4302, 0, 4304, 0,
	0, 0, 0, 94, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 0, 0, 0, 1840,
	1841, 1842, 1843, 1844, 1845, 1846, 1847, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1783, 1784,
	0, 1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0,
	0, 0, 1860, 0, 1158, 0, 0, 0, 1873, 0,
	1820, 1814, 4350, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 1784, 0, 1839, 0, 0, 1827, 1828, 1829,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 1814, 3282, 3283, 0, 3300, 3301,
	3302, 1786, 1802, 0, 0, 0, 0, 0, 0, 97,
	1833, 0, 0, 0, 0, 0, 0, 3709, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 1932, 1932, 1932, 1805, 0, 0, 0,
	4436, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 186, 100, 0, 0, 103, 0,
	3297, 0, 0, 0, 0, 0, 0, 1808, 1809, 1810,
	1811, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 0, 235, 0, 0, 0, 0, 0,
	0, 0, 887, 0, 0, 0, 0, 149, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 1834, 0,
	1808, 1809, 1810, 1811, 0, 1813, 1815, 0, 0, 0,
	1791, 0, 237, 0, 0, 0, 0, 1819, 1819, 0,
	1819, 0, 1830, 0, 1831, 0, 0, 0, 0, 0,
	0, 1800, 1801, 0, 3288, 0, 0, 0, 153, 0,
	0, 0, 1249, 0, 0, 0, 0, 0, 1824, 1822,
	0, 1834, 0, 190, 0, 0, 0, 0, 1813, 1815,
	1073, 236, 0, 0, 1806, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 229, 0, 0, 0, 0, 0,
	0, 0, 0, 230, 1800, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 3304,
	0, 0, 1822, 0, 0, 0, 0, 0, 1832, 0,
	189, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 1821, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1836, 0, 0,
	0, 3298, 0, 0, 0, 0, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1324, 1324, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 1324, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1819, 0, 2698, 2698, 0,
	0, 1819, 0, 0, 1836, 1807, 0, 0, 0, 0,
	0, 3303, 3303, 0, 0, 1819, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 1819, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 1812, 0, 0, 0, 1819,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 0, 0, 0, 0, 0, 0, 1807, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 3299, 0, 0, 1825, 0, 2698, 2698, 2698,
	2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698, 2698,
	2698, 2698, 2698, 2698, 2698, 2698, 2698, 0, 2698, 3303,
	3303, 3303, 3303, 0, 0, 0, 1838, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 1819, 1797, 1798, 1804, 1826, 1803,
	1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 4086,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2368, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 0, 0, 0, 0, 0,
	2393, 0, 3294, 3295, 3296, 0, 0, 0, 0, 3293,
	3291, 3292, 3284, 3285, 3286, 3287, 3289, 3290, 0, 0,
	0, 0, 0, 3282, 3283, 0, 3300, 3301, 3302, 0,
	0, 0, 0, 0, 2431, 0, 2435, 0, 0, 0,
	0, 0, 0, 2449, 0, 1819, 0, 0, 0, 0,
	2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467,
	2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477,
	2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487,
	2488, 2489, 2490, 2491, 2492, 2493, 0, 2499, 0, 2501,
	2502, 2503, 2504, 0, 0, 0, 0, 0, 3297, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2528, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 1860, 0, 0,
	0, 2579, 2669, 2670, 2671, 2672, 2665, 2666, 2667, 2668,
	0, 0, 0, 0, 0, 0, 0, 2609, 2612, 2615,
	2618, 0, 0, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 1249, 0, 0, 0,
	0, 2690, 0, 2702, 2704, 2709, 0, 0, 0, 0,
	0, 0, 3288, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1249, 0, 0, 0, 2645, 2646, 2647, 2648, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3305, 0, 0, 1249, 2657, 2658, 2659,
	2660, 2653, 2654, 2655, 2656, 2661, 2662, 2663, 2664, 0,
	0, 0, 0, 0, 0, 0, 1249, 3304, 0, 0,
	0, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 0, 1819,
	1819, 0, 0, 1819, 3303, 3303, 1819, 0, 0, 0,
	1819, 0, 0, 0, 0, 0, 0, 1819, 0, 3298,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1819, 0, 0, 2641, 2642, 2643, 2644, 2649, 2650, 2651,
	2652, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 1819, 1819, 1819, 1819, 1819, 0, 0,
	0, 0, 0, 1819, 0, 1819, 0, 0, 3303, 3303,
	3303, 3303, 3303, 3303, 3303, 3303, 3303, 3303, 3303, 3303,
	3303, 3303, 3303, 3303, 3303, 3303, 3303, 3303, 0, 1783,
	1784, 3303, 1836, 0, 1819, 1819, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 1814, 0, 0, 1819, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1839, 0, 0, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 1805, 0, 0, 0, 0, 0,
	3299, 0, 0, 1802, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3004, 3005, 0, 3007,
	0, 0, 0, 0, 0, 0, 0, 3197, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 1809,
	1810, 1811, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1813, 1815, 0, 0,
	3294, 3295, 3296, 1819, 0, 0, 0, 3293, 3291, 3292,
	3284, 3285, 3286, 3287, 3289, 3290, 0, 0, 1249, 0,
	1249, 0, 1800, 1801, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 3136, 0, 0, 0, 0, 0, 0,
	0, 1819, 1819, 0, 2015, 1806, 1819, 1819, 0, 0,
	1819, 1819, 0, 0, 0, 1819, 0, 0, 0, 1819,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2698,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1840, 1841, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2698, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 3191, 3192, 0,
	0, 0, 0, 3198, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 0, 0, 0, 0, 0, 0,
	0, 0, 3212, 3213, 0, 0, 0, 0, 2579, 0,
	0, 0, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 1783, 1784, 0, 1816, 1817, 1818,
	1827, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1814, 0, 0,
	0, 0, 0, 3222, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 0, 0, 0, 0, 3236,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	1839, 0, 0, 0, 0, 0, 3248, 0, 0, 1785,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1805,
	0, 0, 1249, 1249, 0, 0, 0, 0, 1802, 0,
	0, 0, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 1819, 1819, 1819, 0, 0, 0, 0, 0, 0,
	0, 0, 1819, 1819, 3303, 2698, 0, 0, 0, 0,
	0, 1819, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790,
	1792, 1793, 0, 0, 3303, 2698, 0, 0, 0, 0,
	0, 0, 0, 1808, 1809, 1810, 1811, 0, 2709, 2709,
	2709, 1819, 0, 1791, 0, 0, 0, 0, 0, 1819,
	2698, 0, 0, 1932, 0, 0, 1249, 1819, 1249, 0,
	1249, 3341, 0, 0, 0, 0, 1819, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1249, 1249, 0, 0,
	0, 1824, 0, 0, 1834, 0, 0, 1249, 0, 0,
	0, 1813, 1815, 0, 0, 0, 0, 0, 0, 1249,
	0, 1249, 1249, 1249, 0, 0, 0, 0, 1830, 0,
	1831, 0, 0, 0, 0, 0, 0, 1800, 1801, 0,
	0, 0, 0, 735, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1822, 0, 0, 0, 0,
	0, 0, 0, 718, 0, 0, 0, 0, 719, 0,
	1806, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 1073, 0, 0, 0,
	0, 3303, 0, 1820, 1814, 0, 0, 0, 0, 0,
	1073, 1786, 0, 0, 0, 0, 0, 720, 0, 0,
	1833, 0, 1819, 3303, 1832, 0, 1819, 0, 721, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 1821, 3462, 0, 3303, 1785, 0, 0, 722,
	0, 0, 0, 1836, 0, 0, 1805, 0, 2015, 2015,
	1249, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 741, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1819, 0, 0, 0, 0, 0, 0,
	0, 723, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 724, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1807, 0, 0, 0, 0, 725, 0, 0, 726,
	1808, 1809, 1810, 1811, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 1249, 0, 0, 750, 0, 1825, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 740, 0, 0, 0, 0, 0, 0, 1824, 1838,
	0, 1834, 0, 0, 0, 0, 0, 0, 1813, 1815,
	0, 0, 0, 0, 1819, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 1249, 1831, 0, 0,
	0, 0, 0, 1249, 1800, 1801, 0, 1819, 0, 0,
	0, 0, 1249, 0, 0, 0, 0, 0, 0, 0,
	737, 0, 1822, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 0,
	0, 0, 0, 0, 0, 3712, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 747,
	0, 728, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	748, 0, 729, 0, 0, 0, 2449, 0, 0, 0,
	1249, 1249, 3696, 3697, 0, 0, 3700, 0, 0, 0,
	3703, 0, 1819, 0, 0, 0, 1819, 0, 0, 3707,
	0, 0, 0, 0, 0, 0, 0, 0, 3714, 0,
	0, 0, 749, 3341, 0, 1812, 0, 0, 0, 0,
	730, 0, 0, 0, 1249, 745, 746, 743, 3727, 0,
	0, 0, 0, 738, 0, 0, 731, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 3750, 3751,
	0, 3752, 3753, 3754, 0, 0, 0, 0, 2015, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 3760,
	0, 0, 0, 3762, 0, 0, 0, 0, 732, 0,
	739, 0, 0, 0, 0, 0, 0, 0, 0, 733,
	0, 0, 0, 0, 0, 0, 1838, 0, 0, 0,
	0, 1249, 0, 734, 0, 0, 3791, 3792, 742, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 0, 0,
	0, 0, 751, 0, 3803, 0, 0, 0, 0, 0,
	0, 0, 0, 736, 0, 0, 0, 0, 0, 3812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 0, 1249, 0, 0, 0,
	0, 0, 3260, 0, 0, 0, 0, 0, 0, 0,
	1249, 0, 1249, 0, 0, 0, 0, 0, 3860, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 1783, 1784,
	0, 1816, 1817, 1818, 1827, 1828, 1829, 3871, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1820, 1814, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 3900, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1808, 1809, 1810,
	1811, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 1932, 0, 0, 0, 0, 0, 0, 0,
	0, 4010, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1824, 0, 0, 1834, 0,
	0, 0, 0, 0, 0, 1813, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 1831, 0, 0, 0, 0, 0,
	0, 1800, 1801, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1822,
	0, 4058, 4059, 0, 0, 0, 0, 4063, 4064, 0,
	0, 0, 4067, 4068, 1806, 0, 0, 0, 1783, 1784,
	4072, 1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0,
	0, 4076, 0, 0, 0, 0, 0, 0, 1122, 0,
	1820, 1814, 0, 0, 0, 0, 0, 4081, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 1821, 0, 0, 0,
	0, 0, 0, 1785, 266, 266, 266, 1836, 0, 0,
	0, 0, 0, 1805, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 818, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1783, 1784, 0, 0, 0, 0, 1249, 1249, 0, 818,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 1814, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 1807, 0, 0, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 1808, 1809, 1810,
	1811, 0, 1249, 0, 0, 1249, 1839, 1791, 0, 0,
	0, 0, 1825, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 2015, 0, 0, 0,
	1249, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 1824, 1249, 0, 1834, 0,
	0, 0, 0, 0, 0, 1813, 1815, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 1831, 0, 0, 0, 0, 0,
	0, 1800, 1801, 0, 0, 0, 0, 0, 3190, 0,
	0, 0, 1249, 0, 0, 0, 1245, 2015, 0, 1822,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	1809, 1810, 1811, 0, 1806, 1823, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803,
	1799, 1249, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 3259,
	0, 0, 0, 1249, 0, 1249, 0, 0, 1832, 0,
	0, 0, 0, 0, 0, 0, 0, 1813, 1815, 0,
	0, 0, 0, 0, 0, 0, 1821, 1249, 0, 0,
	0, 0, 0, 4318, 4319, 4320, 0, 1836, 1249, 0,
	0, 0, 1249, 1800, 1801, 0, 0, 0, 0, 0,
	836, 0, 0, 0, 0, 0, 2449, 0, 0, 4329,
	4330, 0, 0, 0, 0, 0, 0, 1249, 0, 0,
	838, 0, 0, 0, 0, 839, 1806, 4338, 4341, 0,
	0, 1249, 0, 1249, 0, 0, 0, 1249, 0, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 840, 1807, 857, 0, 0, 0,
	1249, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 4388, 0,
	0, 841, 1825, 0, 0, 0, 842, 4396, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 4404, 1249, 1249, 1073, 0, 0, 0, 866, 0,
	0, 0, 0, 1838, 843, 0, 0, 0, 4413, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 864, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 837, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 1249, 844, 0, 1249, 845, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 868, 0,
	0, 0, 0, 750, 0, 1797, 1798, 1804, 1826, 1803,
	1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792,
	1793, 0, 0, 0, 0, 0, 0, 0, 0, 3256,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 2015, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 867, 1249, 0,
	0, 0, 0, 0, 0, 735, 0, 862, 2015, 2015,
	0, 0, 0, 4539, 0, 0, 0, 4543, 0, 0,
	0, 0, 0, 0, 0, 718, 0, 0, 0, 0,
	719, 0, 0, 0, 0, 0, 0, 2015, 2015, 0,
	0, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 846, 0, 720,
	2015, 0, 0, 0, 0, 0, 0, 0, 848, 0,
	721, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1073, 1073, 0, 1249, 1249, 0,
	0, 722, 0, 0, 4600, 0, 0, 0, 0, 849,
	0, 0, 0, 0, 0, 266, 0, 266, 266, 0,
	0, 266, 0, 741, 0, 0, 0, 0, 0, 0,
	0, 1249, 0, 0, 0, 0, 0, 858, 0, 0,
	0, 0, 0, 723, 0, 0, 0, 0, 0, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 2449, 0,
	0, 0, 835, 0, 859, 0, 724, 4341, 266, 0,
	266, 266, 0, 850, 266, 266, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 725, 0,
	0, 726, 0, 818, 0, 0, 0, 0, 856, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 750, 0,
	0, 1073, 0, 0, 0, 851, 0, 0, 0, 852,
	871, 0, 870, 0, 0, 0, 853, 0, 0, 0,
	0, 0, 0, 740, 0, 0, 0, 0, 0, 0,
	854, 0, 266, 266, 0, 863, 0, 0, 0, 0,
	0, 872, 0, 869, 0, 0, 0, 0, 0, 751,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 266,
	0, 4721, 4721, 4721, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 737, 0, 0, 0, 0, 0, 1249, 0,
	0, 0, 0, 1249, 4744, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2015, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	0, 4721, 0, 728, 0, 0, 0, 0, 266, 0,
	0, 0, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 1249, 1249, 1111, 109, 0, 1135,
	266, 0, 748, 0, 729, 0, 0, 0, 0, 0,
	1249, 1249, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	0, 0, 0, 0, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 749, 268, 268, 268, 0, 0,
	0, 0, 730, 0, 0, 0, 0, 745, 746, 743,
	1249, 0, 0, 0, 0, 738, 0, 0, 731, 0,
	0, 2015, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 4721, 4879, 0, 0, 0, 0, 0, 0,
	732, 4883, 739, 0, 0, 0, 0, 0, 0, 0,
	0, 733, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 734, 0, 0, 0, 0,
	742, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 751, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 736, 0, 0, 0, 0,
	1249, 0, 0, 0, 0, 1048, 0, 0, 1249, 0,
	0, 0, 1249, 0, 1249, 0, 1068, 0, 0, 0,
	0, 1249, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1954, 0, 1245, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 1232, 0, 0, 1249, 0, 1249,
	0, 0, 0, 0, 266, 1954, 266, 0, 0, 0,
	0, 0, 818, 0, 0, 0, 0, 0, 0, 818,
	0, 0, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1249, 0, 1249, 0, 0, 1249, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 1249, 0,
	0, 0, 0, 266, 0, 1238, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1249, 1249, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 262, 262, 685, 0, 0, 1249, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	0, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1249, 1249, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1249, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 0, 1249, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 0, 0, 818, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2015, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 266, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1249, 0, 0,
	0, 0, 0, 266, 1249, 266, 0, 0, 0, 0,
	0, 266, 0, 0, 1249, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 266, 0, 0, 0, 1249,
	0, 0, 1249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	1249, 1249, 0, 0, 0, 0, 0, 0, 0, 818,
	266, 0, 266, 0, 266, 0, 266, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2015, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	266, 266, 266, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 268, 268,
	0, 0, 268, 109, 1333, 0, 0, 0, 0, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1249, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 268,
	1333, 268, 268, 0, 1333, 268, 268, 0, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 109, 0, 109, 0, 109, 0, 0,
	0, 1249, 0, 0, 1249, 1333, 0, 0, 1249, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 1249,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 268, 268, 1249, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1068, 109,
	109, 1333, 0, 0, 0, 0, 0, 0, 1333, 268,
	268, 0, 0, 0, 109, 0, 109, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 109, 0, 109, 0,
	0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 0, 1820, 1814, 0, 0, 0, 0, 0,
	0, 1786, 0, 0, 0, 0, 1245, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 0, 109, 0, 0, 0, 1785, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 268,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 266, 0, 0,
	0, 0, 1296, 0, 1296, 1296, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 266, 0, 0, 0, 266,
	0, 266, 0, 0, 0, 0, 0, 0, 266, 266,
	0, 0, 0, 0, 0, 0, 0, 1048, 266, 0,
	1808, 1809, 1810, 1811, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 1384, 0, 0, 1853, 0,
	0, 1490, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1859, 0, 0, 0,
	1865, 0, 0, 0, 0, 0, 0, 0, 1824, 0,
	0, 1834, 0, 0, 0, 0, 266, 0, 1813, 1815,
	0, 0, 0, 0, 0, 0, 0, 0, 1249, 266,
	1249, 0, 0, 0, 0, 1830, 0, 1831, 0, 0,
	0, 0, 266, 0, 1800, 1801, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 1617, 1618, 1806, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 818, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1952, 1832, 1955, 0, 109, 0, 0, 0, 0, 268,
	0, 0, 0, 0, 0, 266, 0, 818, 0, 1821,
	1333, 0, 0, 0, 266, 268, 268, 268, 0, 0,
	1836, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1730, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 266, 0, 0,
	0, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1807, 266,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1825, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 266,
	266, 266, 266, 0, 0, 0, 1838, 0, 266, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 0, 0, 0, 0, 0,
	0, 0, 3255, 0, 0, 268, 0, 1333, 1333, 268,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1970, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1981, 0, 1490, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 268, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 268, 0, 268, 0, 0, 0,
	1490, 0, 268, 0, 0, 0, 0, 0, 1068, 0,
	1068, 1333, 0, 1333, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 1333, 0, 0, 0, 0, 272, 0, 0,
	0, 0, 1333, 268, 0, 0, 268, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 1333, 1333, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 268, 0, 268, 0, 268, 0, 268, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1245, 0, 810, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 268, 268, 268, 268, 0, 0, 0, 810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1954, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1048, 0, 0, 1048, 1048, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	266, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2517, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1068, 0, 0, 0, 0, 0, 0, 2250, 0,
	0, 1859, 2257, 0, 0, 1859, 0, 0, 0, 0,
	0, 0, 0, 0, 2270, 0, 0, 0, 1333, 0,
	0, 0, 266, 266, 0, 0, 266, 0, 0, 0,
	2282, 0, 2282, 1954, 0, 0, 0, 0, 2289, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1232, 2257,
	0, 0, 2316, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 0, 1955, 0, 0, 0, 0, 0,
	0, 0, 0, 2336, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 1333, 0, 0, 2352, 0, 2354,
	266, 2356, 0, 2358, 0, 2359, 0, 0, 0, 268,
	0, 0, 109, 0, 0, 0, 0, 0, 818, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 2386, 2387, 2388,
	0, 266, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 1245, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 268, 0, 0, 0,
	268, 0, 268, 0, 0, 0, 0, 0, 0, 268,
	268, 0, 0, 0, 266, 1333, 1333, 0, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 266, 0,
	266, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 268, 1333, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 109,
	0, 0, 109, 0, 109, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 268, 0, 268, 0,
	1333, 0, 0, 0, 0, 268, 0, 2766, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 109, 0,
	0, 109, 0, 0, 0, 0, 0, 109, 0, 0,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 1245, 1245, 0, 0, 0, 0, 268, 0, 268,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 2814,
	268, 0, 1296, 0, 0, 0, 1296, 0, 1296, 0,
	0, 0, 109, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2270, 0, 0, 0, 0,
	0, 0, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	268, 268, 268, 268, 0, 0, 0, 0, 0, 268,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1390, 0,
	0, 0, 1390, 0, 0, 0, 0, 0, 0, 1331,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1490, 0, 0, 0, 2517, 0, 0, 0, 1331,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 266, 0, 1859, 0, 0, 1331,
	0, 0, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 266, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2257, 0, 0, 0, 266, 0, 0, 0,
	0, 2270, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 266, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1245, 0, 0, 0,
	0, 0, 0, 0, 3108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3119, 0, 3122, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 266, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1127,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 3152, 1490, 3154, 1490,
	0, 0, 0, 0, 0, 3160, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1232, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1232, 0, 0, 0, 0, 1296,
	0, 0, 0, 0, 0, 0, 0, 3188, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1245, 1333, 0, 0, 0, 0,
	0, 0, 1245, 0, 0, 0, 0, 0, 0, 0,
	0, 1333, 0, 0, 0, 1954, 0, 268, 0, 0,
	0, 268, 268, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 1333, 0, 0,
	0, 1954, 0, 1954, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 109, 109, 266, 109, 109, 109, 0, 1390, 0,
	0, 0, 0, 268, 268, 0, 1333, 268, 0, 266,
	0, 810, 266, 0, 268, 0, 0, 0, 810, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 268,
	1333, 0, 266, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 109, 109, 0, 109, 109, 109, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 266, 0, 0, 0, 0, 1331, 0,
	0, 268, 0, 0, 0, 0, 1333, 0, 1333, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 268,
	0, 0, 1954, 1390, 0, 0, 0, 268, 0, 0,
	1333, 268, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 268, 0, 0, 0, 0, 0, 0, 1232,
	0, 0, 1068, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 1333, 0,
	0, 0, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1296, 0, 0, 0, 1490, 1490, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 266, 0, 1331, 1331, 1333, 3431, 268,
	1333, 268, 0, 0, 0, 1390, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 268, 0, 3481,
	3483, 0, 0, 2270, 1820, 1814, 0, 0, 0, 0,
	0, 0, 1786, 0, 0, 0, 0, 0, 0, 266,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1333, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 1805, 0, 1331,
	0, 1331, 0, 1331, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 0, 0, 1954, 1954, 0, 0, 0, 0,
	0, 0, 1331, 0, 1331, 1331, 1331, 0, 0, 0,
	0, 0, 266, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3579, 0, 0, 0, 3583, 810, 0,
	0, 109, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 1232,
	1232, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1954, 0, 0, 1333, 0, 0, 1824,
	0, 3636, 1834, 0, 0, 0, 0, 0, 1954, 1813,
	1815, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 0,
	266, 0, 0, 0, 1332, 1800, 1801, 0, 0, 0,
	0, 0, 0, 1390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3681, 0, 1490, 1806, 0,
	0, 0, 0, 0, 0, 1954, 0, 266, 1954, 0,
	1391, 0, 0, 0, 1391, 0, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3694, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	1821, 0, 0, 0, 0, 0, 1390, 0, 0, 0,
	0, 1836, 0, 0, 0, 268, 0, 0, 0, 0,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 1333, 268,
	266, 1332, 0, 0, 0, 0, 0, 0, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 268, 0, 0,
	0, 0, 1332, 0, 0, 0, 1812, 268, 0, 0,
	0, 0, 0, 0, 0, 0, 1390, 268, 109, 0,
	0, 0, 268, 0, 0, 0, 266, 268, 0, 1807,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 0, 1232, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1825, 1332, 1333, 1333,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 1333, 1333, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	0, 109, 0, 1333, 0, 0, 0, 268, 0, 1333,
	0, 0, 0, 266, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 0, 1390, 0, 0,
	0, 0, 1954, 3254, 1954, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 109, 0, 0, 0,
	0, 0, 1232, 0, 0, 0, 0, 0, 0, 0,
	1232, 0, 0, 0, 0, 0, 0, 1333, 0, 1333,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1390, 0, 0, 1333, 1333, 0,
	0, 0, 0, 0, 0, 2270, 0, 1333, 0, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2270, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 3974, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 2270, 0,
	0, 0, 0, 3992, 268, 0, 810, 1333, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 1333, 0, 1333,
	268, 0, 1333, 268, 0, 0, 0, 0, 0, 0,
	1391, 0, 0, 1333, 0, 0, 0, 0, 0, 1331,
	0, 0, 0, 268, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 1333, 1333, 4043, 0, 0, 0, 109, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	109, 1333, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 268, 0, 0, 0, 1333, 0,
	0, 0, 0, 109, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1333, 1333, 1333, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1333, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	0, 1333, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 0, 0,
	4185, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2270, 0, 0, 0,
	0, 0, 1333, 0, 0, 0, 0, 0, 0, 1333,
	268, 0, 0, 0, 0, 0, 0, 0, 0, 1333,
	1333, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1333, 0, 0, 1333, 0, 0,
	2270, 1332, 0, 1332, 2517, 1332, 0, 0, 0, 0,
	4273, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1332, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 268, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1332, 0, 1332, 1332, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 0, 0, 0, 0, 0, 0,
	1390, 0, 0, 0, 0, 0, 0, 1820, 1814, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 1390, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 0, 0, 0, 1390, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 268, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 1390, 0, 0, 109, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	4373, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	109, 0, 0, 0, 0, 0, 0, 0, 268, 0,
	0, 0, 0, 1333, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1333, 1333, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 0, 0,
	1333, 0, 0, 0, 1808, 1809, 1810, 1811, 0, 0,
	0, 0, 0, 0, 1791, 0, 2270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 0,
	0, 0, 1824, 0, 0, 1834, 1331, 0, 1331, 0,
	0, 268, 1813, 1815, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	1390, 1831, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1331, 109, 0, 0, 1331, 0, 0, 109, 0,
	0, 0, 0, 0, 0, 0, 1822, 268, 0, 4508,
	1490, 0, 0, 0, 0, 0, 0, 0, 1391, 0,
	1331, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1331, 0, 1331, 0, 0, 0,
	1390, 0, 0, 0, 1391, 0, 0, 810, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1331, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 1331, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 268, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1331, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1331, 0, 0, 0, 0, 1332, 1332, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 4605, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1390, 0, 0, 1390, 1391,
	1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829, 1825,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 1814, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 0, 0, 1785, 0, 4659, 0, 0,
	0, 0, 0, 0, 1390, 1805, 1391, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 1390, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 4698, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	1332, 0, 0, 0, 0, 0, 2576, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	1809, 1810, 1811, 0, 0, 0, 0, 0, 0, 1791,
	0, 1332, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 1332, 0, 0,
	4764, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 1824, 0, 0,
	1834, 0, 0, 0, 0, 0, 0, 1813, 1815, 0,
	0, 0, 0, 0, 1390, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 1831, 0, 0, 0,
	0, 0, 0, 1800, 1801, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1331, 1331, 1331, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	0, 0, 0, 1331, 1331, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 1390, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1390, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1798, 1804,
	1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 0, 0, 0, 0, 4647, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 0, 1391, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 1814, 0,
	1391, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1390, 0, 1390, 0, 0,
	0, 0, 0, 0, 0, 1391, 0, 0, 0, 0,
	0, 1839, 0, 0, 0, 1331, 1331, 0, 0, 0,
	1785, 1332, 0, 0, 0, 1390, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1390, 0, 1331, 0, 0,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1390, 0, 0, 0, 0, 1332, 0, 0, 0,
	0, 0, 0, 0, 1808, 1809, 1810, 1811, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 1332, 0,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 1331,
	1331, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 0, 0, 0, 0, 0, 1331,
	0, 0, 1824, 1332, 0, 1834, 0, 1332, 0, 0,
	0, 1390, 1813, 1815, 0, 0, 1331, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1831, 1332, 0, 0, 0, 0, 0, 1800, 1801,
	0, 0, 0, 0, 0, 0, 1332, 0, 1332, 0,
	0, 0, 1391, 1331, 1331, 1331, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1390, 0, 0, 0,
	1332, 1806, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1390, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1332, 1332, 0,
	0, 0, 0, 1821, 0, 0, 0, 1390, 0, 1331,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 1332, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1783,
	1784, 0, 1816, 1817, 1818, 1827, 1828, 1829, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 0, 1812,
	1391, 1820, 1814, 0, 0, 0, 0, 0, 0, 1786,
	0, 0, 0, 0, 0, 0, 0, 0, 1833, 0,
	0, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	1390, 0, 0, 0, 0, 1839, 0, 1331, 0, 0,
	0, 0, 0, 0, 1785, 0, 0, 1331, 1331, 1825,
	0, 0, 0, 0, 1805, 0, 0, 0, 0, 0,
	0, 0, 0, 1802, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1391, 0, 0, 0,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1390, 1391, 0, 1331, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1808, 1809,
	1810, 1811, 0, 0, 0, 0, 0, 0, 1791, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	0, 0, 4643, 0, 0, 0, 1824, 0, 0, 1834,
	0, 0, 0, 0, 0, 0, 1813, 1815, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1830, 0, 1831, 0, 0, 0, 0,
	0, 0, 1800, 1801, 0, 0, 1391, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1822, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1806, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1331, 0, 0, 0, 0, 0, 0, 0, 1832,
	0, 1331, 1331, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1821, 1331, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1836, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1812, 1820, 1814, 0, 0, 0, 0,
	0, 0, 1786, 1332, 0, 0, 0, 0, 1332, 0,
	0, 1833, 0, 0, 0, 0, 1807, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1839, 0,
	0, 0, 0, 0, 0, 0, 0, 1785, 0, 0,
	0, 0, 0, 1825, 0, 0, 0, 1805, 0, 0,
	0, 0, 0, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1838, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1332, 1332,
	1332, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 1332, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 0, 0, 0, 0, 0, 1391,
	0, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 0,
	0, 1791, 0, 0, 0, 0, 1823, 0, 0, 0,
	0, 0, 0, 0, 0, 1391, 1797, 1798, 1804, 1826,
	1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789, 1790,
	1792, 1793, 0, 0, 0, 0, 4558, 0, 0, 1824,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1813,
	1815, 0, 0, 0, 0, 0, 951, 0, 1000, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 0,
	0, 0, 0, 0, 0, 1800, 1801, 0, 0, 0,
	0, 0, 959, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 974, 0,
	957, 956, 0, 0, 0, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 976, 0, 0, 0, 0, 0, 958, 0,
	0, 0, 0, 961, 0, 0, 0, 1391, 1009, 1391,
	0, 0, 0, 0, 0, 0, 0, 971, 972, 0,
	0, 0, 1832, 0, 0, 0, 989, 1332, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 0, 0,
	1821, 0, 0, 0, 1001, 963, 0, 0, 0, 0,
	964, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 965, 0, 0, 0, 0, 0, 0, 0,
	0, 998, 0, 0, 0, 0, 0, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1391, 0, 1332,
	0, 0, 1332, 0, 0, 0, 1812, 0, 0, 0,
	0, 999, 0, 1391, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 967, 0, 1807,
	0, 0, 0, 0, 0, 955, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1332, 1332, 0, 968, 969, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1332, 0, 977, 975, 0, 0, 0, 0, 0,
	0, 970, 0, 1391, 0, 986, 0, 1838, 1332, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1006, 997, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1332, 1332, 1332, 0, 0,
	0, 0, 0, 0, 0, 1002, 0, 0, 1391, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 1391, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 0, 0, 962, 4517,
	0, 1008, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1391,
	0, 1332, 0, 0, 960, 0, 0, 0, 993, 994,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 996, 0, 1391, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1003, 991, 0, 0, 0,
	0, 0, 0, 0, 1007, 987, 0, 0, 980, 978,
	0, 983, 0, 0, 0, 0, 0, 984, 0, 0,
	953, 0, 1004, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1391, 0, 954, 0, 0, 0, 0, 1332,
	0, 0, 0, 0, 0, 0, 995, 0, 985, 1332,
	1332, 0, 0, 0, 982, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1005, 0, 0, 0, 0,
	0, 0, 0, 988, 0, 0, 0, 0, 0, 0,
	0, 0, 966, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1391, 0, 990, 1332, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 992, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1388, 0, 0, 1332, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1332, 1332, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 1393, 283, 284, 1394, 1395, 1396,
	1332, 1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 1402, 636, 295, 296, 297, 298, 299,
	300, 1403, 1404, 0, 301, 637, 638, 639, 1405, 302,
	303, 640, 1406, 1334, 1407, 304, 305, 306, 307, 308,
	309, 310, 0, 1408, 312, 313, 314, 311, 315, 1409,
	316, 0, 317, 318, 319, 320, 321, 322, 1410, 323,
	324, 325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413,
	1415, 1416, 1417, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 1418, 338, 335, 336, 1419, 339, 337, 340,
	1420, 341, 342, 343, 1421, 1422, 344, 345, 346, 1423,
	347, 348, 1424, 349, 350, 351, 1425, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 1426, 273, 1427, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 1428, 370,
	371, 1429, 1430, 1191, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 1431, 384,
	649, 1432, 650, 385, 1433, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 1193, 391, 392, 1434, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 1435, 1192, 401, 654, 655, 1436, 656, 1437, 403,
	404, 1194, 657, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 1438, 415,
	417, 416, 1439, 418, 658, 1197, 419, 420, 1198, 1440,
	421, 0, 0, 0, 422, 423, 426, 1441, 1442, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1443, 275, 1201, 467, 468,
	1444, 659, 469, 660, 471, 472, 1445, 0, 473, 0,
	1446, 1447, 475, 476, 477, 1448, 1449, 478, 479, 661,
	1202, 480, 1203, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 1450, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 1451, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 1452,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 1453, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 1454, 557, 558,
	556, 559, 560, 561, 1455, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 1456, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 1457,
	589, 590, 0, 586, 577, 1458, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 1459, 599, 672, 673, 674,
	675, 1460, 608, 1461, 600, 601, 602, 676, 603, 677,
	1462, 604, 605, 606, 607, 0, 609, 610, 1463, 1464,
	611, 612, 613, 615, 616, 614, 617, 1465, 618, 1466,
	0, 619, 620, 621, 678, 679, 680, 1467, 623, 622,
	624, 681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1388, 0, 0, 0, 0, 0, 0,
	0, 2744, 0, 0, 0, 0, 0, 0, 0, 2745,
	276, 278, 277, 279, 280, 281, 282, 1393, 283, 284,
	1394, 1395, 1396, 0, 1397, 631, 1398, 1399, 1400, 1401,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 1402, 636, 295, 296,
	297, 298, 299, 300, 1403, 1404, 0, 301, 637, 638,
	639, 1405, 302, 303, 640, 1406, 1334, 1407, 304, 305,
	306, 307, 308, 309, 310, 0, 1408, 312, 313, 314,
	311, 315, 1409, 316, 0, 317, 318, 319, 320, 321,
	322, 1410, 323, 324, 325, 1190, 326, 327, 328, 1411,
	1412, 1414, 1413, 1415, 1416, 1417, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 1418, 338, 335, 336, 1419,
	339, 337, 340, 1420, 341, 342, 343, 1421, 1422, 344,
	345, 346, 1423, 347, 348, 1424, 349, 350, 351, 1425,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 1426, 273, 1427, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 1428, 370, 371, 1429, 1430, 1191, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 1431, 384, 649, 1432, 650, 385, 1433, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 1193, 391, 392,
	1434, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 1435, 1192, 401, 654, 655, 1436,
	656, 1437, 403, 404, 1194, 657, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 1438, 415, 417, 416, 1439, 418, 658, 1197, 419,
	420, 1198, 1440, 421, 0, 0, 0, 422, 423, 426,
	1441, 1442, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1443, 275,
	1201, 467, 468, 1444, 659, 469, 660, 471, 472, 1445,
	0, 473, 0, 1446, 1447, 475, 476, 477, 1448, 1449,
	478, 479, 661, 1202, 480, 1203, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 1450,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 1451, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 1452, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 1453, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	1454, 557, 558, 556, 559, 560, 561, 1455, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 1456, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 1457, 589, 590, 0, 586, 577, 1458, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 1459, 599,
	672, 673, 674, 675, 1460, 608, 1461, 600, 601, 602,
	676, 603, 677, 1462, 604, 605, 606, 607, 0, 609,
	610, 1463, 1464, 611, 612, 613, 615, 616, 614, 617,
	1465, 618, 1466, 0, 619, 620, 621, 678, 679, 680,
	1467, 623, 622, 624, 681, 1468, 625, 1469, 1470, 1471,
	1472, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1388, 0, 0, 0, 0, 3721,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3723, 276, 278, 277, 279, 280, 281, 282, 1393, 283,
	284, 1394, 1395, 1396, 0, 1397, 631, 1398, 1399, 1400,
	1401, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 1402, 636, 295,
	296, 297, 298, 299, 300, 1403, 1404, 0, 301, 637,
	638, 639, 1405, 302, 303, 640, 1406, 1334, 1407, 304,
	305, 306, 307, 308, 309, 310, 0, 1408, 312, 313,
	314, 311, 315, 1409, 316, 0, 317, 318, 319, 320,
	321, 322, 1410, 323, 324, 325, 1190, 326, 327, 328,
	1411, 1412, 1414, 1413, 1415, 1416, 1417, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 1418, 338, 335, 336,
	1419, 339, 337, 340, 1420, 341, 342, 343, 1421, 1422,
	344, 345, 346, 1423, 347, 348, 1424, 349, 350, 351,
	1425, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 1426, 273, 1427,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 1428, 370, 371, 1429, 1430, 1191, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 1431, 384, 649, 1432, 650, 385, 1433, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 1193, 391,
	392, 1434, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 1435, 1192, 401, 654, 655,
	1436, 656, 1437, 403, 404, 1194, 657, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 1438, 415, 417, 416, 1439, 418, 658, 1197,
	419, 420, 1198, 1440, 421, 0, 0, 0, 422, 423,
	426, 1441, 1442, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1443,
	275, 1201, 467, 468, 1444, 659, 469, 660, 471, 472,
	1445, 0, 473, 0, 1446, 1447, 475, 476, 477, 1448,
	1449, 478, 479, 661, 1202, 480, 1203, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	1450, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 1451, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 1452, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 1453, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 1454, 557, 558, 556, 559, 560, 561, 1455, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 1456, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 1457, 589, 590, 0, 586, 577, 1458,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 1459,
	599, 672, 673, 674, 675, 1460, 608, 1461, 600, 601,
	602, 676, 603, 677, 1462, 604, 605, 606, 607, 0,
	609, 610, 1463, 1464, 611, 612, 613, 615, 616, 614,
	617, 1465, 618, 1466, 0, 619, 620, 621, 678, 679,
	680, 1467, 623, 622, 624, 681, 1468, 625, 1469, 1470,
	1471, 1472, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4114, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 0,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4324, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 0,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4194, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 0,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4044, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 0,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3739, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 0,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 3564, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 0,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2599, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 0,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 1484, 0, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 2231, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 0,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 1385, 0, 1388, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 1393,
	283, 284, 1394, 1395, 1396, 0, 1397, 631, 1398, 1399,
	1400, 1401, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 1402, 636,
	295, 296, 297, 298, 299, 300, 1403, 1404, 0, 301,
	637, 638, 639, 1405, 302, 303, 640, 1406, 1334, 1407,
	304, 305, 306, 307, 308, 309, 310, 0, 1408, 312,
	313, 314, 311, 315, 1409, 316, 0, 317, 318, 319,
	320, 321, 322, 1410, 323, 324, 325, 1190, 326, 327,
	328, 1411, 1412, 1414, 1413, 1415, 1416, 1417, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 1418, 338, 335,
	336, 1419, 339, 337, 340, 1420, 341, 342, 343, 1421,
	1422, 344, 345, 346, 1423, 347, 348, 1424, 349, 350,
	351, 1425, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 1426, 273,
	1427, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 1428, 370, 371, 1429, 1430, 1191, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 1431, 384, 649, 1432, 650, 385, 1433,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 1193,
	391, 392, 1434, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 1435, 1192, 401, 654,
	655, 1436, 656, 1437, 403, 404, 1194, 657, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 1438, 415, 417, 416, 1439, 418, 658,
	1197, 419, 420, 1198, 1440, 421, 0, 0, 0, 422,
	423, 426, 1441, 1442, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1443, 275, 1201, 467, 468, 1444, 659, 469, 660, 471,
	472, 1445, 0, 473, 0, 1446, 1447, 475, 476, 477,
	1448, 1449, 478, 479, 661, 1202, 480, 1203, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 1450, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 1451, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 1452, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 1453, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 1454, 557, 558, 556, 559, 560, 561, 1455,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 1456, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 1457, 589, 590, 0, 586, 577,
	1458, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	1459, 599, 672, 673, 674, 675, 1460, 608, 1461, 600,
	601, 602, 676, 603, 677, 1462, 604, 605, 606, 607,
	0, 609, 610, 1463, 1464, 611, 612, 613, 615, 616,
	614, 617, 1465, 618, 1466, 0, 619, 620, 621, 678,
	679, 680, 1467, 623, 622, 624, 681, 1468, 625, 1469,
	1470, 1471, 1472, 626, 627, 682, 628, 629, 630, 1388,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 1393, 283, 284, 1394, 1395, 1396, 0,
	1397, 631, 1398, 1399, 1400, 1401, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 1402, 636, 295, 296, 297, 298, 299, 300,
	1403, 1404, 0, 301, 637, 638, 639, 1405, 302, 303,
	640, 1406, 1334, 1407, 304, 305, 306, 307, 308, 309,
	310, 0, 1408, 312, 313, 314, 311, 315, 1409, 316,
	0, 317, 318, 319, 320, 321, 322, 1410, 323, 324,
	325, 1190, 326, 327, 328, 1411, 1412, 1414, 1413, 1415,
	1416, 1417, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 1418, 338, 335, 336, 1419, 339, 337, 340, 1420,
	341, 342, 343, 1421, 1422, 344, 345, 346, 1423, 347,
	348, 1424, 349, 350, 351, 1425, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 1426, 273, 1427, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 1428, 370, 371,
	1429, 1430, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 1431, 384, 649,
	1432, 650, 385, 1433, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 1434, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	1435, 1192, 401, 654, 655, 1436, 656, 1437, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1438, 415, 417,
	416, 1439, 418, 658, 1197, 419, 420, 1198, 1440, 421,
	0, 0, 0, 422, 423, 426, 1441, 1442, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1443, 275, 1201, 467, 468, 1444,
	659, 469, 660, 471, 472, 1445, 0, 473, 0, 1446,
	1447, 475, 476, 477, 1448, 1449, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 1450, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 1451, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 1452, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 1453, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 1454, 557, 558, 556,
	559, 560, 561, 1455, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 1456, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 1457, 589,
	590, 0, 586, 577, 1458, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 1459, 599, 672, 673, 674, 675,
	1460, 608, 1461, 600, 601, 602, 676, 603, 677, 1462,
	604, 605, 606, 607, 0, 609, 610, 1463, 1464, 611,
	612, 613, 615, 616, 614, 617, 1465, 618, 1466, 0,
	619, 620, 621, 678, 679, 680, 1467, 623, 622, 624,
	681, 1468, 625, 1469, 1470, 1471, 1472, 626, 627, 682,
	628, 629, 630, 2574, 0, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 2571,
	283, 284, 0, 0, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 2572,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 1114, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 609, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	1170, 1207, 2570, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1083,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 2573, 0, 0, 0, 0, 0, 0, 1109, 2569,
	0, 1069, 1107, 1125, 1097, 1098, 1099, 1095, 1096, 1108,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 334, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 389, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	235, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 237, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 1609, 1170, 1207,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	229, 626, 627, 682, 628, 629, 630, 1083, 0, 230,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 1864, 1862, 0, 0,
	1107, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 235, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 237, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 1609, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 229, 626, 627, 682,
	628, 629, 630, 1083, 0, 230, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1078, 0, 0, 0,
	0, 0, 0, 1076, 1077, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 1864, 3210, 0, 0, 1107, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 1114, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 235, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	237, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 609, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 1609,
	1170, 1207, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 229, 626, 627, 682, 628, 629, 630, 1083,
	0, 230, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 1864, 1862,
	0, 0, 1107, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 1149, 1113, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 1162, 0,
	293, 1169, 294, 1168, 2705, 1179, 295, 296, 297, 298,
	299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 1172,
	334, 1166, 1165, 1085, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 1157, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	1091, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 1104, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 1164, 0, 0, 0, 369, 0,
	370, 371, 0, 2710, 1191, 372, 373, 374, 1177, 1178,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 1114, 385, 0, 386, 387, 388, 389,
	390, 1150, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 1159, 1160, 0, 1120, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 2706, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 1082, 275, 1201, 467,
	468, 1105, 1153, 469, 1167, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 1092, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 1163, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 1093, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	1161, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 1208, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 1079, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 1173, 1174,
	1175, 1176, 0, 608, 2707, 600, 601, 602, 1185, 603,
	1186, 1103, 604, 605, 606, 607, 0, 609, 610, 0,
	1086, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 678, 1170, 1207, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1083, 0, 0, 2619, 0,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0,
	0, 0, 0, 0, 0, 1076, 1077, 276, 278, 277,
	279, 280, 281, 282, 1109, 283, 284, 0, 1107, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 1085, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1082, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 1079, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 1086,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1078, 0, 0,
	0, 0, 0, 0, 1076, 1077, 0, 0, 0, 0,
	0, 0, 0, 1109, 2617, 0, 2616, 1107, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 1201, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 609, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1083, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1078, 0, 0, 0, 0,
	0, 0, 1076, 1077, 0, 0, 0, 0, 0, 0,
	0, 1109, 2614, 0, 2613, 1107, 1125, 1097, 1098, 1099,
	1095, 1096, 1108, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 1149, 1113,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 1162, 0, 293, 1169, 294, 1168, 0,
	1179, 295, 296, 297, 298, 299, 300, 1115, 1148, 1080,
	301, 1209, 1210, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 1172, 334, 1166, 1165, 1085, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 1157, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 1091, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 1104,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 1164,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 1177, 1178, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 1114, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 1092, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 1163,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 1093, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 1161, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 1208, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 1079, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 1173, 1174, 1175, 1176, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 1103, 604, 605, 606,
	607, 0, 609, 610, 0, 1086, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 1170, 1207, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1078, 0, 0, 0, 0, 0, 0,
	1076, 1077, 0, 0, 0, 0, 0, 0, 0, 1109,
	2611, 0, 2610, 1107, 1125, 1097, 1098, 1099, 1095, 1096,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 334, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 1114, 385, 0, 386,
	387, 388, 389, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 678, 1170,
	1207, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1083, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	0, 0, 0, 0, 0, 0, 0, 1109, 2608, 0,
	1705, 1107, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 1149, 1113, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 1162,
	0, 293, 1169, 294, 1168, 0, 1179, 295, 296, 297,
	298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	1172, 334, 1166, 1165, 1085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 1157,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 1091, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 1104, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 1164, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 1177,
	1178, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 1114, 385, 0, 386, 387, 388,
	389, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 1159, 1160, 0, 1120,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1082, 275, 1201,
	467, 468, 1105, 1153, 469, 1167, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 1092, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 1163, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 1093, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 1161, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 1208, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 1079, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 1173,
	1174, 1175, 1176, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 1103, 604, 605, 606, 607, 0, 609, 610,
	0, 1086, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 678, 1170, 1207, 0,
	623, 622, 624, 681, 0, 625, 1704, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 1083, 0, 0, 1072,
	0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078,
	0, 0, 0, 0, 0, 0, 1076, 1077, 276, 278,
	277, 279, 280, 281, 282, 1109, 283, 284, 0, 1107,
	0, 0, 0, 1149, 1113, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 1162, 0,
	293, 1169, 294, 1168, 0, 1179, 295, 296, 297, 298,
	299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 1172,
	334, 1166, 1165, 1085, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 1157, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	1091, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 1104, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 1164, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 1177, 1178,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 1114, 385, 0, 386, 387, 388, 389,
	390, 1150, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 1159, 1160, 0, 1120, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 1082, 275, 1201, 467,
	468, 1105, 1153, 469, 1167, 471, 472, 0, 0, 473,
	0, 1087, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 1092, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 1163, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 1093, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	1161, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 1208, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 1079, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 1173, 1174,
	1175, 1176, 0, 608, 0, 600, 601, 602, 1185, 603,
	1186, 1103, 604, 605, 606, 607, 0, 609, 610, 0,
	1086, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 678, 1170, 1207, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1083, 0, 0, 0, 0,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0,
	0, 0, 0, 0, 0, 1076, 1077, 276, 278, 277,
	279, 280, 281, 282, 1109, 283, 284, 0, 1107, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 4671, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 1085, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1082, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	1087, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 1079, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 1086,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1083, 0, 0, 0, 0, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0,
	0, 0, 0, 0, 1076, 1077, 276, 278, 277, 279,
	280, 281, 282, 1109, 283, 284, 0, 1107, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 2451, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 2450, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1083, 0, 0, 0, 0, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0,
	0, 0, 0, 1076, 1077, 276, 278, 277, 279, 280,
	281, 282, 1109, 283, 284, 0, 1107, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 1201, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 1087, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 609, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1083, 0, 0, 0, 0, 1125, 1097, 1098,
	1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0, 0,
	0, 0, 1076, 1077, 276, 278, 277, 279, 280, 281,
	282, 1109, 283, 284, 0, 1107, 0, 0, 0, 1149,
	1113, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 1162, 0, 293, 1169, 294, 1168,
	0, 1179, 295, 296, 297, 298, 299, 300, 1115, 1148,
	1080, 301, 1209, 1210, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 4407, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 1172, 334, 1166, 1165, 1085,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 1157, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 1091, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	1104, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	1164, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 1177, 1178, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 1114,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 1082, 275, 1201, 467, 468, 1105, 1153, 469,
	1167, 471, 472, 0, 0, 473, 0, 1087, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 1092, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	1163, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 1093,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 1161, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 1208, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 1079,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 1173, 1174, 1175, 1176, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 1103, 604, 605,
	606, 607, 0, 609, 610, 0, 1086, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 1170, 1207, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1083, 0, 0, 0, 0, 1125, 1097, 1098, 1099,
	1095, 1096, 1108, 0, 1078, 0, 0, 0, 0, 0,
	0, 1076, 1077, 276, 278, 277, 279, 280, 281, 282,
	1109, 283, 284, 0, 1107, 0, 0, 0, 1149, 1113,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 1162, 0, 293, 1169, 294, 1168, 0,
	1179, 295, 296, 297, 298, 299, 300, 1115, 1148, 1080,
	301, 1209, 1210, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 1172, 334, 1166, 1165, 1085, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 1157, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 1091, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 1104,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 1164,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 1177, 1178, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 1114, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 1082, 4004, 1201, 467, 468, 1105, 1153, 469, 1167,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 1092, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 1163,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 1093, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 1161, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 1208, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 1079, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 1173, 1174, 1175, 1176, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 1103, 604, 605, 606,
	607, 0, 609, 610, 0, 1086, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 1170, 1207, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1083, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1078, 0, 0, 0, 0, 0, 0,
	1076, 1077, 1933, 0, 0, 0, 0, 0, 0, 1109,
	0, 0, 0, 1107, 1125, 1097, 1098, 1099, 1095, 1096,
	1108, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 334, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 1114, 385, 0, 386,
	387, 388, 389, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 678, 1170,
	1207, 3717, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1083, 0,
	0, 0, 0, 1125, 1097, 1098, 1099, 1095, 1096, 1108,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	276, 278, 277, 279, 280, 281, 282, 1109, 283, 284,
	0, 1107, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 334, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 389, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 1170, 1207,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 1083, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 1933,
	0, 0, 0, 0, 0, 0, 1109, 0, 0, 0,
	1107, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 1149, 1113, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 1162, 0,
	293, 1169, 294, 1168, 0, 1179, 295, 296, 297, 298,
	299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 1172,
	334, 1166, 1165, 1085, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 1157, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	1091, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 1104, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 1164, 0, 0, 0, 369, 0,
	370, 371, 0, 2710, 1191, 372, 373, 374, 1177, 1178,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 1114, 385, 0, 386, 387, 388, 389,
	390, 1150, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 1159, 1160, 0, 1120, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 1082, 275, 1201, 467,
	468, 1105, 1153, 469, 1167, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 1092, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 1163, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 1093, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	1161, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 1208, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 1079, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 1173, 1174,
	1175, 1176, 0, 608, 0, 600, 601, 602, 1185, 603,
	1186, 1103, 604, 605, 606, 607, 0, 609, 610, 0,
	1086, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 678, 1170, 1207, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1083, 0, 0, 0, 0,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0,
	0, 0, 0, 0, 0, 1076, 1077, 276, 278, 277,
	279, 280, 281, 282, 1109, 283, 284, 0, 1107, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 1085, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1082, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 1079, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 1086,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1083, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1078, 0, 0,
	0, 0, 0, 0, 1076, 1077, 0, 0, 0, 0,
	0, 0, 0, 1109, 1862, 0, 2715, 1107, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 1201, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 609, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1083, 0, 0, 2713, 0, 1125, 1097, 1098,
	1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0, 0,
	0, 0, 1076, 1077, 276, 278, 277, 279, 280, 281,
	282, 1109, 283, 284, 0, 1107, 0, 0, 0, 1149,
	1113, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 1162, 0, 293, 1169, 294, 1168,
	0, 1179, 295, 296, 297, 298, 299, 300, 1115, 1148,
	1080, 301, 1209, 1210, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 1172, 334, 1166, 1165, 1085,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 1157, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 1091, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	1104, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	1164, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 1177, 1178, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 1114,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 1082, 275, 1201, 467, 468, 1105, 1153, 469,
	1167, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 1092, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	1163, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 1093,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 1161, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 1208, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 1079,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 1173, 1174, 1175, 1176, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 1103, 604, 605,
	606, 607, 0, 609, 610, 0, 1086, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 1170, 1207, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1083, 0, 0, 2701, 0, 1125, 1097, 1098, 1099,
	1095, 1096, 1108, 0, 1078, 0, 0, 0, 0, 0,
	0, 1076, 1077, 276, 278, 277, 279, 280, 281, 282,
	1109, 283, 284, 0, 1107, 0, 0, 0, 1149, 1113,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 1162, 0, 293, 1169, 294, 1168, 0,
	1179, 295, 296, 297, 298, 299, 300, 1115, 1148, 1080,
	301, 1209, 1210, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 1172, 334, 1166, 1165, 1085, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 1157, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 1091, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 1104,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 1164,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 1177, 1178, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 1114, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 1092, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 1163,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 1093, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 1161, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 1208, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 1079, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 1173, 1174, 1175, 1176, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 1103, 604, 605, 606,
	607, 0, 609, 610, 0, 1086, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 1170, 1207, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1083, 0, 0, 2689, 0, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 0, 1078, 0, 0, 0, 0, 0, 0,
	1076, 1077, 276, 278, 277, 279, 280, 281, 282, 1109,
	283, 284, 0, 1107, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 1114, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 609, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	1170, 1207, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1083,
	0, 0, 2687, 0, 2678, 2685, 1098, 1099, 1095, 1096,
	1108, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 276, 278, 277, 279, 280, 281, 282, 1109, 283,
	284, 0, 1107, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 2681, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 1114, 385, 0, 386,
	387, 388, 2682, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 2683, 436, 2680, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	2684, 0, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 678, 1170,
	1207, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 2679, 630, 1083, 0,
	0, 2675, 0, 2678, 2685, 1098, 1099, 1095, 1096, 1108,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	276, 278, 277, 279, 280, 281, 282, 1109, 283, 284,
	0, 1107, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 2681, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 2682, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 2683, 436, 2680, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 2684,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 1170, 1207,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 2679, 630, 1083, 0, 0,
	0, 0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 276,
	278, 277, 279, 280, 281, 282, 1109, 283, 284, 0,
	1107, 0, 0, 0, 1149, 1113, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 1162,
	0, 293, 1169, 294, 1168, 0, 1179, 295, 296, 297,
	298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	1172, 334, 1166, 1165, 1085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 1157,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 1091, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 1104, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 1164, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 1177,
	1178, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 1114, 385, 0, 386, 387, 388,
	389, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 1159, 1160, 0, 1120,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1082, 275, 1201,
	467, 468, 1105, 1153, 469, 1167, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 1092, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 1163, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 1093, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 1161, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 1208, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 1079, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 1173,
	1174, 1175, 1176, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 1103, 604, 605, 606, 607, 0, 609, 610,
	0, 1086, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 678, 1170, 1207, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 1083, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1078,
	0, 0, 0, 0, 0, 0, 1076, 1077, 0, 0,
	0, 0, 0, 1870, 0, 1109, 0, 0, 0, 1107,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 2430, 283, 284, 0, 0, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 1085, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1082, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 1079, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 1086,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1083, 0, 0, 2394, 0, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0,
	0, 0, 0, 0, 1076, 1077, 276, 278, 277, 279,
	280, 281, 282, 1109, 283, 284, 0, 1107, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1083, 0, 0, 2369, 0, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0,
	0, 0, 0, 1076, 1077, 276, 278, 277, 279, 280,
	281, 282, 1109, 283, 284, 0, 1107, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 1201, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 609, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1083, 0, 0, 1710, 0, 1125, 1097, 1098,
	1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0, 0,
	0, 0, 1076, 1077, 276, 278, 277, 279, 280, 281,
	282, 1109, 283, 284, 0, 1107, 0, 0, 0, 1149,
	1113, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 1162, 0, 293, 1169, 294, 1168,
	0, 1179, 295, 296, 297, 298, 299, 300, 1115, 1148,
	1080, 301, 1209, 1210, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 1172, 334, 1166, 1165, 1085,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 1157, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 1091, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	1104, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	1164, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 1177, 1178, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 1114,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 1082, 275, 1201, 467, 468, 1105, 1153, 469,
	1167, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 1092, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	1163, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 1093,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 1161, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 1208, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 1079,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 1173, 1174, 1175, 1176, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 1103, 604, 605,
	606, 607, 0, 609, 610, 0, 1086, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 1170, 1207, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1083, 0, 0, 1639, 0, 1125, 1097, 1098, 1099,
	1095, 1096, 1108, 0, 1078, 0, 0, 0, 0, 0,
	0, 1076, 1077, 276, 278, 277, 279, 280, 281, 282,
	1109, 283, 284, 0, 1107, 0, 0, 0, 1149, 1113,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 1162, 0, 293, 1169, 294, 1168, 0,
	1179, 295, 296, 297, 298, 299, 300, 1115, 1148, 1080,
	301, 1209, 1210, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 1172, 334, 1166, 1165, 1085, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 1157, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 1091, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 1104,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 1164,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 1177, 1178, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 1114, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 1092, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 1163,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 1093, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 1161, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 1208, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 1079, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 1173, 1174, 1175, 1176, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 1103, 604, 605, 606,
	607, 0, 609, 610, 0, 1086, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 1170, 1207, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1083, 0, 0, 1634, 0, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 0, 1078, 0, 0, 0, 0, 0, 0,
	1076, 1077, 276, 278, 277, 279, 280, 281, 282, 1109,
	283, 284, 0, 1107, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 1114, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 609, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	1170, 1207, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1083,
	0, 0, 1625, 0, 1125, 1097, 1098, 1099, 1095, 1096,
	1108, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 276, 278, 277, 279, 280, 281, 282, 1109, 283,
	284, 0, 1107, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 334, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 1114, 385, 0, 386,
	387, 388, 389, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 678, 1170,
	1207, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1083, 0,
	0, 1620, 0, 1125, 1097, 1098, 1099, 1095, 1096, 1108,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	276, 278, 277, 279, 280, 281, 282, 1109, 283, 284,
	0, 1107, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 334, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 389, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 1170, 1207,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 1083, 0, 0,
	1532, 0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 276,
	278, 277, 279, 280, 281, 282, 1109, 283, 284, 0,
	1107, 0, 0, 0, 1149, 1113, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 1162,
	0, 293, 1169, 294, 1168, 0, 1179, 295, 296, 297,
	298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	1172, 334, 1166, 1165, 1085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 1157,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 1091, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 1104, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 1164, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 1177,
	1178, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 1114, 385, 0, 386, 387, 388,
	389, 390, 1531, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 1159, 1160, 0, 1120,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1082, 275, 1201,
	467, 468, 1105, 1153, 469, 1167, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 1092, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 1163, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 1093, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 1161, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 1208, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 1079, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 1173,
	1174, 1175, 1176, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 1103, 604, 605, 606, 607, 0, 609, 610,
	0, 1086, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 678, 1170, 1207, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 1083, 0, 0, 1526,
	0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078,
	0, 0, 0, 0, 0, 0, 1076, 1077, 276, 278,
	277, 279, 280, 281, 282, 1109, 283, 284, 0, 1107,
	0, 0, 0, 1149, 1113, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 1162, 0,
	293, 1169, 294, 1168, 0, 1179, 295, 296, 297, 298,
	299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 1172,
	334, 1166, 1165, 1085, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 1157, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	1091, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 1104, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 1164, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 1177, 1178,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 1114, 385, 0, 386, 387, 388, 389,
	390, 1525, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 1159, 1160, 0, 1120, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 1082, 275, 1201, 467,
	468, 1105, 1153, 469, 1167, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 1092, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 1163, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 1093, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	1161, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 1208, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 1079, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 1173, 1174,
	1175, 1176, 0, 608, 0, 600, 601, 602, 1185, 603,
	1186, 1103, 604, 605, 606, 607, 0, 609, 610, 0,
	1086, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 678, 1170, 1207, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1083, 0, 0, 1519, 0,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0,
	0, 0, 0, 0, 0, 1076, 1077, 276, 278, 277,
	279, 280, 281, 282, 1109, 283, 284, 0, 1107, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 1085, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 1082, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 1092, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 1093, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 1079, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 1086,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 1083, 0, 0, 1336, 0, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0,
	0, 0, 0, 0, 1076, 1077, 276, 278, 277, 279,
	280, 281, 282, 1109, 283, 284, 0, 1107, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 1201, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 609, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1083, 0, 0, 0, 0, 1125, 1097,
	1098, 1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0,
	0, 0, 0, 1076, 1077, 276, 278, 277, 279, 280,
	281, 282, 1109, 283, 284, 0, 1107, 0, 0, 0,
	1149, 1113, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 1162, 0, 293, 1169, 294,
	1168, 0, 1179, 295, 296, 297, 298, 299, 300, 1115,
	1148, 1080, 301, 1209, 1210, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 1172, 334, 1166, 1165,
	1085, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 1157, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 1091, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 1104, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 1164, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 1177, 1178, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	1114, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 1159, 1160, 0, 1120, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 1082, 275, 1201, 467, 468, 1105, 1153,
	469, 1167, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 1092, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 1163, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	1093, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 1161, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 1208,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	1079, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 1173, 1174, 1175, 1176, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 1103, 604,
	605, 606, 607, 0, 609, 610, 0, 1086, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 1170, 1207, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 1083, 0, 0, 0, 0, 1125, 1097, 1098,
	1099, 1095, 1096, 1108, 0, 1078, 0, 0, 0, 0,
	0, 0, 1076, 1077, 276, 278, 277, 279, 280, 281,
	282, 1109, 283, 284, 0, 1107, 0, 0, 0, 1149,
	1113, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 1162, 0, 293, 1169, 294, 1168,
	0, 1179, 295, 296, 297, 298, 299, 300, 1115, 1148,
	1080, 301, 1209, 1210, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 4720, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 1172, 334, 1166, 1165, 1085,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 1157, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 1091, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	1104, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	1164, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 1177, 1178, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 1114,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 1082, 275, 1201, 467, 468, 1105, 1153, 469,
	1167, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 1092, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	1163, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 1093,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 1161, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 1208, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 1079,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 1173, 1174, 1175, 1176, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 1103, 604, 605,
	606, 607, 0, 4719, 610, 0, 1086, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 1170, 1207, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1083, 0, 0, 0, 0, 1125, 1097, 1098, 1099,
	1095, 1096, 1108, 0, 1078, 0, 0, 0, 0, 0,
	0, 1076, 1077, 276, 278, 277, 279, 280, 281, 282,
	1109, 283, 284, 0, 1107, 0, 0, 0, 1149, 1113,
	0, 0, 0, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 4718, 1162, 0, 293, 1169, 294, 1168, 0,
	1179, 295, 296, 297, 298, 299, 300, 1115, 1148, 1080,
	301, 1209, 1210, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 4720, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 1172, 334, 1166, 1165, 1085, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 1157, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 1091, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 1104,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 1164,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 1177, 1178, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 1114, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	1159, 1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 1092, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 1163,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 1093, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 1161, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 1208, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 1079, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 1173, 1174, 1175, 1176, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 1103, 604, 605, 606,
	607, 0, 4719, 610, 0, 1086, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 1170, 1207, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1083, 0, 0, 0, 0, 1125, 1097, 1098, 1099, 1095,
	1096, 1108, 0, 1078, 0, 0, 0, 0, 0, 0,
	1076, 1077, 276, 278, 277, 279, 280, 281, 282, 1109,
	283, 284, 0, 1107, 0, 0, 0, 1149, 1113, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 1162, 0, 293, 1169, 294, 1168, 0, 1179,
	295, 296, 297, 298, 299, 300, 1115, 1148, 1080, 301,
	1209, 1210, 639, 0, 302, 303, 1155, 0, 1136, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 4343,
	328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330,
	331, 332, 333, 1172, 334, 1166, 1165, 1085, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 1157, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 1091, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 1180, 1181, 365, 1104, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 1164, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 1177, 1178, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 1187, 0, 4344, 385, 0,
	386, 387, 388, 389, 390, 1150, 1151, 1154, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 1192, 401, 1159,
	1160, 0, 1120, 0, 403, 404, 1194, 1152, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 1188,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 1143, 1142, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	1082, 275, 1201, 467, 468, 1105, 1153, 469, 1167, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 1182, 481,
	482, 1092, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 1183, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 1163, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 4342, 539, 1093, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 1146,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 1161, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 1208, 580, 581, 582,
	583, 1184, 587, 588, 0, 589, 590, 1079, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 1173, 1174, 1175, 1176, 0, 608, 0, 600,
	601, 602, 1185, 603, 1186, 1103, 604, 605, 606, 607,
	0, 609, 610, 0, 1086, 611, 612, 613, 615, 616,
	614, 617, 1147, 618, 0, 0, 619, 620, 621, 678,
	1170, 1207, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1083,
	0, 0, 0, 0, 1125, 1097, 1098, 1099, 3177, 3178,
	1108, 0, 1078, 0, 0, 0, 0, 0, 0, 1076,
	1077, 276, 278, 277, 279, 280, 281, 282, 1109, 283,
	284, 0, 1107, 0, 0, 0, 1149, 1113, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 1162, 0, 293, 1169, 294, 1168, 0, 1179, 295,
	296, 297, 298, 299, 300, 1115, 1148, 1080, 301, 1209,
	1210, 639, 0, 302, 303, 1155, 0, 1136, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	1139, 1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331,
	332, 333, 1172, 334, 1166, 1165, 1085, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 1091, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 1180, 1181, 365, 1104, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 1164, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 1177, 1178, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 1187, 0, 1114, 385, 0, 386,
	387, 388, 389, 390, 1150, 1151, 1154, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 1192, 401, 1159, 1160,
	0, 1120, 0, 403, 404, 1194, 1152, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 1188, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 1143, 1142, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 1082,
	275, 1201, 467, 468, 1105, 1153, 469, 1167, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 1182, 481, 482,
	1092, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 1183, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 1163, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 1093, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 1146, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 1161, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 1208, 580, 581, 582, 583,
	1184, 587, 588, 0, 589, 590, 1079, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 1173, 1174, 1175, 1176, 0, 608, 0, 600, 601,
	602, 1185, 603, 1186, 1103, 604, 605, 606, 607, 0,
	609, 610, 0, 1086, 611, 612, 613, 615, 616, 614,
	617, 1147, 618, 0, 0, 619, 620, 621, 678, 1170,
	1207, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 1083, 0,
	0, 0, 0, 1125, 1097, 1098, 1099, 3175, 3176, 1108,
	0, 1078, 0, 0, 0, 0, 0, 0, 1076, 1077,
	276, 278, 277, 279, 280, 281, 282, 1109, 283, 284,
	0, 1107, 0, 0, 0, 1149, 1113, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	1162, 0, 293, 1169, 294, 1168, 0, 1179, 295, 296,
	297, 298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 1172, 334, 1166, 1165, 1085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	1157, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 1091, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 1104, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 1164, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	1177, 1178, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 1114, 385, 0, 386, 387,
	388, 389, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 1159, 1160, 0,
	1120, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 1082, 275,
	1201, 467, 468, 1105, 1153, 469, 1167, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 1092,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 1163, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 1093, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 1161, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 1208, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 1079, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	1173, 1174, 1175, 1176, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 1103, 604, 605, 606, 607, 0, 609,
	610, 0, 1086, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 1170, 1207,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 1083, 0, 0,
	0, 0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0,
	1078, 0, 0, 0, 0, 0, 0, 1076, 1077, 276,
	278, 277, 279, 280, 281, 282, 1109, 283, 284, 0,
	1107, 0, 0, 0, 1149, 1113, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 1162,
	0, 293, 1169, 294, 1168, 0, 1179, 295, 296, 297,
	298, 299, 300, 1115, 1148, 1080, 301, 1209, 1210, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	1172, 334, 1166, 1165, 1085, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 1157,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 1091, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 1104, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 1164, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 1177,
	1178, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 1114, 385, 0, 386, 387, 388,
	389, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 1159, 1160, 0, 1120,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 1082, 275, 1201,
	467, 468, 1105, 1153, 469, 1167, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 1092, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 1163, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 1093, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 1161, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 1208, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 1079, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 1173,
	1174, 1175, 1176, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 1103, 604, 605, 606, 607, 0, 609, 610,
	0, 1086, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 678, 1170, 1207, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 1083, 0, 0, 0,
	0, 1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 1078,
	0, 0, 0, 0, 0, 0, 2438, 2439, 276, 278,
	277, 279, 280, 281, 282, 1109, 283, 284, 0, 1107,
	0, 0, 0, 1149, 1113, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 1162, 0,
	293, 1169, 294, 1168, 0, 1179, 295, 296, 297, 298,
	299, 300, 1115, 1148, 0, 301, 1209, 1210, 639, 0,
	302, 303, 1155, 0, 1136, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 1139, 1137, 1138,
	1145, 1141, 1140, 1144, 329, 330, 331, 332, 333, 1172,
	334, 1166, 1165, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 1157, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	1091, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 1180, 1181, 365, 1104, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 1164, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 1177, 1178,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 1187, 0, 1114, 385, 0, 386, 387, 388, 389,
	390, 1150, 1151, 1154, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 1192, 401, 1159, 1160, 0, 1120, 0,
	403, 404, 1194, 1152, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 1188, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 1143, 1142,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 0, 275, 1201, 467,
	468, 1105, 1153, 469, 1167, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 1182, 481, 482, 1092, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 1183, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 1163, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 1093, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 1146, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	1161, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 1208, 580, 581, 582, 583, 1184, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 1173, 1174,
	1175, 1176, 0, 608, 0, 600, 601, 602, 1185, 603,
	1186, 1103, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 1147, 618,
	0, 0, 619, 620, 621, 678, 1170, 1207, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	1125, 1097, 1098, 1099, 1095, 1096, 1108, 0, 2697, 0,
	0, 0, 0, 0, 0, 2695, 2696, 276, 278, 277,
	279, 280, 281, 282, 1109, 283, 284, 0, 1107, 0,
	0, 0, 1149, 1113, 0, 0, 0, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 1162, 0, 293,
	1169, 294, 1168, 0, 1179, 295, 296, 297, 298, 299,
	300, 1115, 1148, 0, 301, 1209, 1210, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 1172, 334,
	1166, 1165, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 1157, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 1091,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 1104, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 1164, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 1177, 1178, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 1114, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 1159, 1160, 0, 1120, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 0, 275, 1201, 467, 468,
	1105, 1153, 469, 1167, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 1163, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 3170, 3171, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 1161,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 1208, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 1173, 1174, 1175,
	1176, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	1103, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 1170, 1207, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 1125,
	1097, 1098, 1099, 1095, 1096, 1108, 0, 0, 0, 0,
	0, 0, 0, 0, 2114, 2115, 276, 278, 277, 279,
	280, 281, 282, 1109, 283, 284, 0, 1107, 0, 0,
	0, 1149, 1113, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 0, 1162, 0, 293, 1169,
	294, 1168, 0, 1179, 295, 296, 297, 298, 299, 300,
	1115, 1148, 1080, 301, 1209, 1210, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 4720, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 1172, 334, 1166,
	1165, 1085, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 1157, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 1091, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 1104, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 1164, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 1177, 1178, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 1114, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 1159, 1160, 0, 1120, 0, 403, 404,
	0, 1152, 0, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 1082, 275, 0, 467, 468, 1105,
	1153, 469, 1167, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 1092, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 1163, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 1093, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 1161, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	1208, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 1079, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 1173, 1174, 1175, 1176,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 1103,
	604, 605, 606, 607, 0, 4719, 610, 0, 1086, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 1170, 1207, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 1069, 0, 1247, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1076, 1077, 276, 278, 277, 279, 280,
	281, 282, 1109, 283, 284, 0, 1107, 0, 0, 0,
	1149, 0, 0, 0, 0, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	1148, 0, 301, 637, 638, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 654, 655, 0, 656, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 1233, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 0, 275, 1201, 467, 468, 0, 1153,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 1239,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 1241, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 235, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	0, 586, 577, 237, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 1609, 679, 680, 0, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 229, 626, 627, 682, 628,
	629, 630, 1247, 0, 230, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 1237,
	0, 1957, 0, 0, 1149, 0, 0, 0, 0, 285,
	286, 1189, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 1148, 0, 301, 637, 638, 639,
	0, 302, 303, 1155, 0, 1136, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 1190, 326, 327, 328, 1139, 1137,
	1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 1180, 1181, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 1191, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 1187, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 1150, 1151, 1154, 470, 1193, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 1192, 401, 654, 655, 0, 656,
	0, 403, 404, 1194, 1152, 1195, 405, 406, 407, 1196,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	1233, 415, 417, 416, 0, 418, 1188, 1197, 419, 420,
	1198, 0, 421, 0, 0, 0, 422, 423, 426, 1143,
	1142, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	1199, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 1200, 466, 455, 0, 275, 1201,
	467, 468, 0, 1153, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 1239, 475, 476, 477, 0, 0, 478,
	479, 661, 1202, 480, 1203, 1182, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 1183,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 1204, 535,
	536, 537, 538, 539, 668, 1241, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 235,
	557, 558, 556, 559, 560, 561, 1146, 562, 563, 545,
	546, 564, 565, 1205, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 1184, 587,
	588, 0, 589, 590, 0, 586, 577, 237, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 1185,
	603, 1186, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 1147,
	618, 0, 0, 619, 620, 621, 1609, 679, 680, 0,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 229,
	626, 627, 682, 628, 629, 630, 0, 0, 230, 0,
	0, 0, 0, 0, 0, 0, 0, 3334, 0, 1247,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1237, 0, 1957, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 1149, 0, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 1148, 0, 301, 637, 638, 639, 0, 302, 303,
	1155, 0, 1136, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141,
	1140, 1144, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 1180,
	1181, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 1187,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 1150,
	1151, 1154, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 1192, 401, 654, 655, 0, 656, 0, 403, 404,
	1194, 1152, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 1233, 415, 417,
	416, 0, 418, 1188, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 1143, 1142, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 0, 275, 1201, 467, 468, 0,
	1153, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	1239, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 1182, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 1183, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 1241, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 1146, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 1184, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 1185, 603, 1186, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 1147, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 0, 625, 0, 1229, 0, 1247, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 1149, 0,
	1237, 0, 1235, 285, 286, 1189, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 1148, 0,
	301, 637, 638, 639, 0, 302, 303, 1155, 0, 1136,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 1190, 326,
	327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 1180, 1181, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 1191,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 1187, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 1150, 1151, 1154, 470,
	1193, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 1192, 401,
	654, 655, 0, 656, 0, 403, 404, 1194, 1152, 1195,
	405, 406, 407, 1196, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 1233, 415, 417, 416, 0, 418,
	1188, 1197, 419, 420, 1198, 0, 421, 0, 0, 0,
	422, 423, 426, 1143, 1142, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 1199, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 1200, 466,
	455, 0, 275, 1201, 467, 468, 0, 1153, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 1239, 475, 476,
	477, 0, 0, 478, 479, 661, 1202, 480, 1203, 1182,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 1183, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 1204, 535, 536, 537, 538, 539, 668, 1241,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	1146, 562, 563, 545, 546, 564, 565, 1205, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 1184, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 1185, 603, 1186, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 1147, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 1247, 626, 627, 682, 628, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 1149, 0, 1237, 0, 1235,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 1148, 0, 301, 637, 638,
	639, 0, 302, 303, 1155, 0, 1136, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 1139,
	1137, 1138, 1145, 1141, 1140, 1144, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 1180, 1181, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 1187, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 1150, 1151, 1154, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 1192, 401, 654, 655, 0,
	656, 0, 403, 404, 1194, 1152, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 1233, 415, 417, 416, 0, 418, 1188, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	1143, 1142, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 0, 275,
	1201, 467, 468, 0, 1153, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 1239, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 1182, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	1183, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 668, 1241, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 1146, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 1184,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	1185, 603, 1186, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	1147, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	1247, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 1149, 0, 1237, 0, 1235, 285, 286, 1189,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 1148, 0, 301, 637, 638, 639, 0, 302,
	303, 1155, 0, 1136, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 1190, 326, 327, 328, 1139, 1137, 1138, 1145,
	1141, 1140, 1144, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	1180, 1181, 365, 0, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 1191, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	1187, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	1150, 1151, 1154, 470, 1193, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 1192, 401, 654, 655, 0, 656, 0, 403,
	404, 1194, 1152, 1195, 405, 406, 407, 1196, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 1188, 1197, 419, 420, 1198, 0,
	421, 0, 0, 0, 422, 423, 426, 1143, 1142, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 1199, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 1200, 466, 455, 0, 275, 1201, 467, 468,
	0, 1153, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	1202, 480, 1203, 1182, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 1183, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 1204, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 1146, 562, 563, 545, 546, 564,
	565, 1205, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 1184, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 1185, 603, 1186,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 1147, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 1247, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 1149,
	0, 0, 0, 4165, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 1148,
	0, 301, 637, 638, 639, 0, 302, 303, 1155, 0,
	1136, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140, 1144,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 1180, 1181, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 1187, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 1150, 1151, 1154,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 1192,
	401, 654, 655, 0, 656, 0, 403, 404, 1194, 1152,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 1188, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 1143, 1142, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 0, 275, 1201, 467, 468, 0, 1153, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	1182, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 1183, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 668,
	1241, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 1146, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 1184, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 1185, 603, 1186, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 1147, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 0,
	625, 270, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 2542, 2543, 2544, 2561, 2562, 2563, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 2564, 0, 631, 0, 0, 0, 0, 285, 286,
	1854, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 1839, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 2554, 0, 312, 313, 314, 311, 315,
	0, 316, 2550, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 2555, 2556, 2557,
	2558, 366, 367, 368, 646, 0, 0, 2549, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 2559, 2560, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 2552, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 2553, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 1838, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 1069, 0, 1329, 2539, 2540, 2541, 2565, 2551,
	2545, 0, 2547, 2548, 2546, 2533, 2534, 2535, 2536, 2537,
	2538, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 1334, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 1192, 401, 654, 655,
	0, 656, 0, 403, 404, 1194, 657, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 0,
	0, 1201, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 235, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 237,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 1609, 679,
	680, 0, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 229, 626, 627, 682, 628, 629, 630, 0, 0,
	230, 1606, 0, 1329, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 189, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 1334, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 1192, 401, 654, 655, 0,
	656, 0, 403, 404, 1194, 657, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 0, 0,
	1201, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	235, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 237, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 1609, 679, 680,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	229, 626, 627, 682, 628, 629, 630, 1329, 1328, 230,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 189, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	1334, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 1192,
	401, 654, 655, 0, 656, 0, 403, 404, 1194, 657,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 0, 0, 1201, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1329, 1328, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	1631, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 1334, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 1192, 401, 654, 655, 0, 656, 0,
	403, 404, 1194, 657, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 0, 0, 1201, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1329, 1328, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 3630, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 1334, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 1192, 401, 654,
	655, 0, 656, 0, 403, 404, 1194, 657, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	0, 0, 1201, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	2311, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1329,
	2223, 0, 0, 0, 0, 2224, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 1631, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 1334, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 1192, 401, 654, 655, 0, 656, 0, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 2222, 417,
	416, 0, 418, 658, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 0, 0, 1201, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1329, 1328, 0, 0, 0, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 1631, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 1334, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 1192, 401, 654, 655, 0,
	656, 0, 403, 404, 1194, 657, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 0, 0,
	1201, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 1069, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 1615, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 235, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 237, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 1609, 679, 680, 0, 623, 622, 624, 681, 0,
	625, 270, 0, 0, 229, 626, 627, 682, 628, 629,
	630, 0, 0, 230, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	189, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 275, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 1247, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	1149, 0, 0, 0, 1971, 285, 286, 1189, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	1148, 0, 301, 637, 638, 639, 0, 302, 303, 1155,
	0, 1136, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	1190, 326, 327, 328, 1139, 1137, 1138, 1145, 1141, 1140,
	1144, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 1180, 1181,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 1191, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 1187, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 1150, 1151,
	1154, 470, 1193, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	1192, 401, 654, 655, 0, 656, 0, 403, 404, 1194,
	1152, 1195, 405, 406, 407, 1196, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 1188, 1197, 419, 420, 1198, 0, 421, 0,
	0, 0, 422, 423, 426, 1143, 1142, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 1199, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	1200, 466, 455, 0, 275, 1201, 467, 468, 0, 1153,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 1202, 480,
	1203, 1182, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 1183, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 1204, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 1146, 562, 563, 545, 546, 564, 565, 1205,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 1184, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 1185, 603, 1186, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 1147, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	0, 625, 270, 3076, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 0, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 4889, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 275, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 270, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 3580, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 275, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	270, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 1603,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 0, 625, 270, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 3064, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 0, 625, 270, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 3742, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	904, 625, 809, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 2300, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 816, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 902, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 814, 591, 592,
	593, 594, 595, 815, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 809,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 2040, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 819, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 816, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 275, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 2039, 552, 553, 554, 555, 0, 2041, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 814, 591, 592, 593, 594, 595,
	815, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 2038, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 809, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 276, 278, 277, 279, 280, 281, 282,
	1991, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 819, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 816, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 275, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 1990, 552,
	553, 554, 555, 0, 1992, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 814, 591, 592, 593, 594, 595, 815, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 1989,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 0, 625,
	807, 0, 809, 0, 626, 627, 682, 628, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 819, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 816, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 814, 591, 592,
	593, 594, 595, 815, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 2013, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 0, 0, 819, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	0, 2019, 0, 293, 2009, 294, 2025, 0, 2032, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 2035,
	2036, 0, 0, 302, 303, 0, 0, 1334, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 1172, 334, 2023, 2022, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 1157, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 0, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 0, 0, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 2021, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 2030, 2031, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 0, 0, 0, 385, 0, 386,
	387, 388, 389, 390, 0, 0, 0, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 1192, 401, 2016, 2017,
	0, 2012, 0, 403, 404, 1194, 0, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 0, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 0,
	0, 1201, 467, 468, 0, 0, 469, 2024, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 0, 1202, 480, 1203, 0, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 2006, 494, 495, 496, 2007, 497, 498,
	499, 0, 500, 0, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 2020, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 0, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 2018, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 2034, 580, 581, 582, 583,
	0, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 2026, 2027, 2028, 2029, 0, 608, 0, 600, 601,
	602, 0, 603, 0, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 0, 2010,
	2033, 0, 623, 622, 624, 0, 0, 625, 0, 0,
	0, 0, 626, 627, 0, 628, 629, 630, 809, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 2000, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 816, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 275, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 814, 591, 592, 593, 594, 595, 815,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 809, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 819, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 816, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 275, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 2348, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 2349, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	814, 591, 592, 593, 594, 595, 815, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 2350, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 270, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 819, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 0, 625, 0, 1329, 2088, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 819, 631,
	0, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	1334, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 3027,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 1192,
	401, 654, 655, 0, 656, 0, 403, 404, 1194, 657,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 0, 0, 1201, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 3028, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1329, 1328, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 1334, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 1192, 401, 654, 655, 0, 656, 0,
	403, 404, 1194, 657, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 0, 0, 1201, 467,
	468, 3936, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1329, 1328, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 1334, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 1192, 401, 654,
	655, 0, 656, 0, 403, 404, 1194, 657, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	0, 0, 1201, 467, 468, 3542, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1659,
	0, 1329, 1328, 0, 0, 0, 0, 1326, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	1189, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 1334, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 1190, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 1658, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 1191, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 1193, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 1192, 401, 654, 655, 0, 656, 0,
	403, 404, 1194, 657, 1195, 405, 406, 407, 1196, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 1197, 419, 420, 1198,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 1199,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 1200, 466, 455, 0, 0, 1201, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 1202, 480, 1203, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 1657, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 1204, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 1656, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 1205, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 1577, 0, 1329, 1328, 0,
	0, 0, 0, 1326, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	1334, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 1576, 652, 653,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 1192,
	401, 654, 655, 0, 656, 0, 403, 404, 1194, 657,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 0, 0, 1201, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 1537, 0, 1329, 1328, 0, 0, 0, 0, 1326,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 1334, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 1192, 401, 654, 655, 0,
	656, 0, 403, 404, 1194, 657, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 0, 0,
	1201, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 1502, 0, 1329,
	1328, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 1334, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 1501,
	652, 653, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 1192, 401, 654, 655, 0, 656, 0, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 0, 0, 1201, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 1323, 0, 1329, 1328, 0, 0, 0,
	0, 1326, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 1189, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 1334, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 1190, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 1191, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 1322, 652, 653, 470, 1193,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 1192, 401, 654,
	655, 0, 656, 0, 403, 404, 1194, 657, 1195, 405,
	406, 407, 1196, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	1197, 419, 420, 1198, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 1199, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 1200, 466, 455,
	0, 0, 1201, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 1202, 480, 1203, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 1204, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 1205, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 1329,
	1328, 0, 0, 0, 0, 1326, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 1189, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 1334, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 1190, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 1191, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 1193, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 1192, 401, 654, 655, 0, 656, 0, 403, 404,
	1194, 657, 1195, 405, 406, 407, 1196, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 1197, 419, 420, 1198, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 1199, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 1200, 466, 455, 0, 0, 1201, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 1202,
	480, 1203, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 1204, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	1205, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 0, 625, 1329, 2088, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 1189, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 1334, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 1190, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 2085, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 1191, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 1193, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 1192, 401, 654, 655, 0,
	656, 0, 403, 404, 1194, 657, 1195, 405, 406, 407,
	1196, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 1197, 419,
	420, 1198, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 1199, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 1200, 466, 455, 0, 0,
	1201, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 1202, 480, 1203, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 1204,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 1205, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 0, 625, 1329, 1328, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 1189, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	1334, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 1190,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	1191, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 1193, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 1192,
	401, 654, 655, 0, 656, 0, 403, 404, 1194, 657,
	1195, 405, 406, 407, 1196, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 1197, 419, 420, 1198, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 1199, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 1200,
	466, 455, 0, 0, 1201, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 1202, 480, 1203,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 1204, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 1205, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 1329, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 1189, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 1334, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 1190, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 1191, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 1193, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 1192, 401, 654, 655,
	0, 656, 0, 403, 404, 1194, 657, 1195, 405, 406,
	407, 1196, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 1197,
	419, 420, 1198, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 1199, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 1200, 466, 455, 0,
	0, 1201, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 1202, 480, 1203, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	1204, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 1205, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 2866,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	2863, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 2870, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 3089, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 2869, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 3086, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 3088, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 3085,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 2868, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	3087, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 270, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 2866, 302, 303, 640,
	0, 0, 2860, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 2863, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 2870, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 2869,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 2859, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	2868, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 2867, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	1736, 625, 270, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 1735, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 1734, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 1737, 544, 551, 552, 553, 554, 555, 0,
	1733, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 1731, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	1732, 622, 624, 681, 1477, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 1479, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 275, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 1239, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 1474, 625,
	270, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	1476, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 275, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 1239, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 1381, 625, 270, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 1383, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	275, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 1239, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 714, 625, 270, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 713,
	281, 282, 703, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 706, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 707, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 708, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	702, 625, 270, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 703, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	706, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	707, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 708,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 270,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 703, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 706, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 707, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 708, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 270, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 276, 278, 277, 279, 280, 281, 282,
	703, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 706, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 3947, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 708, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 270, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 275,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 1239, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 3490, 466, 455, 0, 275, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 3034, 625, 270, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 3033, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	275, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 2317, 625, 270, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 275, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 270, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 275, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	2256, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 2263, 625, 270,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 273, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 2262,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 274, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 275, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 2249, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 2251, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 275,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	2216, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 275, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 1239, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 1581, 625, 270, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 1580, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	275, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 1494, 625, 270, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 275, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	1487, 625, 270, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 1489, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 1313, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 1312, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 275, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 1303, 625,
	270, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	0, 0, 0, 0, 0, 0, 0, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 273, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	1302, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 274, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 275, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 0, 623, 622,
	624, 681, 1300, 625, 270, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 0, 0, 0, 0, 0, 0,
	0, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 1299, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	275, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 0, 623, 622, 624, 681, 1295, 625, 270, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 0, 0,
	0, 0, 0, 0, 0, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 1294, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 275, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 0, 623, 622, 624, 681,
	684, 625, 270, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 0, 0, 0, 0, 0, 0, 0, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 261, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	273, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 274, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 275, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 270, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 273, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 274,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 275,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 706, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 707, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 708, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 270, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 2357, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 273, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 274, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 275, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 270, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	2355, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 273, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	274, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	275, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 2353, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 273, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 274, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 275, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 270, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 273, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 2269, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 274, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 275, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 270, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 273,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 2064, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 274, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 275, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 270, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 273, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 2058, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 274, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 275, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 0,
	623, 622, 624, 681, 891, 625, 270, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 0, 0, 0, 0,
	0, 0, 0, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 890, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 889, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 270, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 3089, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 4242, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 768, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 1350, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 1348, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 774, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 773, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 772,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 1351,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 770, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 768,
	625, 270, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	1350, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 1348, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 774, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 773, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 772, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 1351, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 770, 673,
	674, 675, 0, 608, 0, 600, 1349, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 693, 625, 270, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 692,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 691, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 0, 625, 270,
	3076, 0, 0, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 0, 625, 270, 4252, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	651, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 4533, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 270, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 4138,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 270, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 3902, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 2750, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 0, 625, 270, 3076, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 3073,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 270, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 2182, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 773,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 772, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 770,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 270,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 2327, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 2315, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 2078, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 2045,
	625, 270, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 768, 625, 270, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 761, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 774, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 773, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 772, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 1614, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 770, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 1587, 625, 270,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 1586,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 1571, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 1569, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 1564, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 1541,
	625, 270, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 1539, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 1499, 625, 270, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 1482, 625, 270,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 1318, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 1317, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 1309, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 1308, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 270, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 1262, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 651, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 779, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 0, 623,
	622, 624, 681, 768, 625, 270, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 0, 0, 0, 0, 0,
	0, 0, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 761, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 759, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	760, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 774, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 773, 536, 537, 538, 539, 762, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 772, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 763, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 770, 673, 674, 675, 0, 608, 0, 600,
	765, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 0, 623, 622, 624, 681, 753, 625, 270,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 0,
	0, 0, 0, 0, 0, 0, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 754, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 0, 623, 622, 624,
	681, 716, 625, 270, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 0, 0, 0, 0, 0, 0, 0,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 651, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	0, 623, 622, 624, 681, 710, 625, 270, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 0, 0, 0,
	0, 0, 0, 0, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 651, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 0, 623, 622, 624, 681, 688,
	625, 270, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 0, 0, 0, 0, 0, 0, 0, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 651, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 270, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 548, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 270, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 0,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 3600, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	562, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 270, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 651, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 773,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 772, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 770,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 270,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 3528,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 515, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 270, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 385,
	0, 386, 387, 388, 389, 390, 3506, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 485, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 509, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 540,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 270, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	276, 278, 277, 279, 280, 281, 282, 0, 283, 284,
	0, 0, 0, 0, 0, 631, 0, 0, 0, 0,
	285, 286, 0, 287, 288, 289, 290, 291, 292, 632,
	633, 0, 293, 634, 294, 635, 0, 636, 295, 296,
	297, 298, 299, 300, 0, 0, 0, 301, 637, 638,
	639, 0, 302, 303, 640, 0, 0, 0, 304, 305,
	306, 307, 308, 309, 310, 0, 0, 312, 313, 314,
	311, 315, 0, 316, 0, 317, 318, 319, 320, 321,
	322, 0, 323, 324, 325, 0, 326, 327, 328, 0,
	0, 0, 0, 0, 0, 0, 329, 330, 331, 332,
	333, 0, 334, 641, 642, 0, 338, 335, 336, 0,
	339, 337, 340, 0, 341, 342, 343, 0, 0, 344,
	345, 346, 0, 347, 348, 0, 349, 350, 351, 0,
	352, 353, 643, 354, 355, 356, 358, 360, 357, 361,
	362, 363, 364, 644, 645, 365, 0, 0, 0, 0,
	0, 0, 0, 366, 367, 368, 646, 0, 0, 0,
	369, 0, 370, 371, 0, 0, 0, 372, 373, 374,
	647, 648, 375, 376, 377, 378, 379, 380, 381, 382,
	383, 0, 384, 649, 0, 650, 385, 0, 386, 387,
	388, 389, 390, 3503, 652, 653, 470, 0, 391, 392,
	0, 393, 394, 395, 396, 397, 0, 0, 0, 0,
	398, 399, 400, 402, 0, 0, 401, 654, 655, 0,
	656, 0, 403, 404, 0, 657, 0, 405, 406, 407,
	0, 408, 0, 0, 0, 409, 410, 411, 412, 413,
	414, 0, 415, 417, 416, 0, 418, 658, 0, 419,
	420, 0, 0, 421, 0, 0, 0, 422, 423, 426,
	0, 0, 424, 425, 427, 428, 0, 429, 430, 432,
	435, 431, 433, 434, 436, 449, 437, 438, 439, 440,
	441, 442, 443, 444, 445, 446, 447, 448, 451, 0,
	450, 0, 452, 453, 454, 460, 462, 463, 458, 459,
	461, 464, 465, 456, 457, 0, 466, 455, 0, 0,
	0, 467, 468, 0, 659, 469, 660, 471, 472, 0,
	0, 473, 0, 0, 0, 475, 476, 477, 0, 0,
	478, 479, 661, 0, 480, 0, 662, 481, 482, 474,
	483, 484, 485, 486, 487, 488, 489, 490, 491, 0,
	492, 493, 663, 494, 495, 496, 664, 497, 498, 499,
	665, 500, 666, 501, 502, 0, 503, 504, 0, 505,
	506, 507, 508, 509, 510, 511, 667, 512, 513, 515,
	514, 516, 0, 517, 0, 518, 519, 520, 0, 0,
	0, 0, 0, 521, 0, 523, 524, 525, 526, 522,
	527, 528, 529, 530, 531, 0, 532, 533, 534, 0,
	535, 536, 537, 538, 539, 668, 540, 0, 541, 542,
	548, 549, 550, 543, 544, 551, 552, 553, 554, 555,
	0, 557, 558, 556, 559, 560, 561, 0, 562, 563,
	545, 546, 564, 565, 0, 566, 567, 568, 569, 570,
	571, 572, 669, 0, 573, 0, 574, 575, 576, 578,
	547, 579, 584, 585, 670, 580, 581, 582, 583, 671,
	587, 588, 0, 589, 590, 0, 586, 577, 0, 591,
	592, 593, 594, 595, 596, 597, 359, 598, 0, 599,
	672, 673, 674, 675, 0, 608, 0, 600, 601, 602,
	676, 603, 677, 0, 604, 605, 606, 607, 0, 609,
	610, 0, 0, 611, 612, 613, 615, 616, 614, 617,
	0, 618, 0, 0, 619, 620, 621, 678, 679, 680,
	270, 623, 622, 624, 681, 0, 625, 0, 0, 0,
	0, 626, 627, 682, 628, 629, 630, 276, 278, 277,
	279, 280, 281, 282, 0, 283, 284, 0, 0, 0,
	0, 0, 631, 0, 0, 0, 0, 285, 286, 0,
	287, 288, 289, 290, 291, 292, 632, 633, 0, 293,
	634, 294, 635, 0, 636, 295, 296, 297, 298, 299,
	300, 0, 0, 0, 301, 637, 638, 639, 0, 302,
	303, 640, 0, 0, 0, 304, 305, 306, 307, 308,
	309, 310, 0, 0, 312, 313, 314, 311, 315, 0,
	316, 0, 317, 318, 319, 320, 321, 322, 0, 323,
	324, 325, 0, 326, 327, 328, 0, 0, 0, 0,
	0, 0, 0, 329, 330, 331, 332, 333, 0, 334,
	641, 642, 0, 338, 335, 336, 0, 339, 337, 340,
	0, 341, 342, 343, 0, 0, 344, 345, 346, 0,
	347, 348, 0, 349, 350, 351, 0, 352, 353, 643,
	354, 355, 356, 358, 360, 357, 361, 362, 363, 364,
	644, 645, 365, 0, 0, 0, 0, 0, 0, 0,
	366, 367, 368, 646, 0, 0, 0, 369, 0, 370,
	371, 0, 0, 0, 372, 373, 374, 647, 648, 375,
	376, 377, 378, 379, 380, 381, 382, 383, 0, 384,
	649, 0, 650, 385, 0, 386, 387, 388, 389, 390,
	3455, 652, 653, 470, 0, 391, 392, 0, 393, 394,
	395, 396, 397, 0, 0, 0, 0, 398, 399, 400,
	402, 0, 0, 401, 654, 655, 0, 656, 0, 403,
	404, 0, 657, 0, 405, 406, 407, 0, 408, 0,
	0, 0, 409, 410, 411, 412, 413, 414, 0, 415,
	417, 416, 0, 418, 658, 0, 419, 420, 0, 0,
	421, 0, 0, 0, 422, 423, 426, 0, 0, 424,
	425, 427, 428, 0, 429, 430, 432, 435, 431, 433,
	434, 436, 449, 437, 438, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 451, 0, 450, 0, 452,
	453, 454, 460, 462, 463, 458, 459, 461, 464, 465,
	456, 457, 0, 466, 455, 0, 0, 0, 467, 468,
	0, 659, 469, 660, 471, 472, 0, 0, 473, 0,
	0, 0, 475, 476, 477, 0, 0, 478, 479, 661,
	0, 480, 0, 662, 481, 482, 474, 483, 484, 485,
	486, 487, 488, 489, 490, 491, 0, 492, 493, 663,
	494, 495, 496, 664, 497, 498, 499, 665, 500, 666,
	501, 502, 0, 503, 504, 0, 505, 506, 507, 508,
	509, 510, 511, 667, 512, 513, 515, 514, 516, 0,
	517, 0, 518, 519, 520, 0, 0, 0, 0, 0,
	521, 0, 523, 524, 525, 526, 522, 527, 528, 529,
	530, 531, 0, 532, 533, 534, 0, 535, 536, 537,
	538, 539, 668, 540, 0, 541, 542, 548, 549, 550,
	543, 544, 551, 552, 553, 554, 555, 0, 557, 558,
	556, 559, 560, 561, 0, 562, 563, 545, 546, 564,
	565, 0, 566, 567, 568, 569, 570, 571, 572, 669,
	0, 573, 0, 574, 575, 576, 578, 547, 579, 584,
	585, 670, 580, 581, 582, 583, 671, 587, 588, 0,
	589, 590, 0, 586, 577, 0, 591, 592, 593, 594,
	595, 596, 597, 359, 598, 0, 599, 672, 673, 674,
	675, 0, 608, 0, 600, 601, 602, 676, 603, 677,
	0, 604, 605, 606, 607, 0, 609, 610, 0, 0,
	611, 612, 613, 615, 616, 614, 617, 0, 618, 0,
	0, 619, 620, 621, 678, 679, 680, 270, 623, 622,
	624, 681, 0, 625, 0, 0, 0, 0, 626, 627,
	682, 628, 629, 630, 276, 278, 277, 279, 280, 281,
	282, 0, 283, 284, 0, 0, 0, 0, 0, 631,
	0, 0, 0, 0, 285, 286, 0, 287, 288, 289,
	290, 291, 292, 632, 633, 0, 293, 634, 294, 635,
	0, 636, 295, 296, 297, 298, 299, 300, 0, 0,
	0, 301, 637, 638, 639, 0, 302, 303, 640, 0,
	0, 0, 304, 305, 306, 307, 308, 309, 310, 0,
	0, 312, 313, 314, 311, 315, 0, 316, 0, 317,
	318, 319, 320, 321, 322, 0, 323, 324, 325, 0,
	326, 327, 328, 0, 0, 0, 0, 0, 0, 0,
	329, 330, 331, 332, 333, 0, 334, 641, 642, 0,
	338, 335, 336, 0, 339, 337, 340, 0, 341, 342,
	343, 0, 0, 344, 345, 346, 0, 347, 348, 0,
	349, 350, 351, 0, 352, 353, 643, 354, 355, 356,
	358, 360, 357, 361, 362, 363, 364, 644, 645, 365,
	0, 0, 0, 0, 0, 0, 0, 366, 367, 368,
	646, 0, 0, 0, 369, 0, 370, 371, 0, 0,
	0, 372, 373, 374, 647, 648, 375, 376, 377, 378,
	379, 380, 381, 382, 383, 0, 384, 649, 0, 650,
	385, 0, 386, 387, 388, 389, 390, 3453, 652, 653,
	470, 0, 391, 392, 0, 393, 394, 395, 396, 397,
	0, 0, 0, 0, 398, 399, 400, 402, 0, 0,
	401, 654, 655, 0, 656, 0, 403, 404, 0, 657,
	0, 405, 406, 407, 0, 408, 0, 0, 0, 409,
	410, 411, 412, 413, 414, 0, 415, 417, 416, 0,
	418, 658, 0, 419, 420, 0, 0, 421, 0, 0,
	0, 422, 423, 426, 0, 0, 424, 425, 427, 428,
	0, 429, 430, 432, 435, 431, 433, 434, 436, 449,
	437, 438, 439, 440, 441, 442, 443, 444, 445, 446,
	447, 448, 451, 0, 450, 0, 452, 453, 454, 460,
	462, 463, 458, 459, 461, 464, 465, 456, 457, 0,
	466, 455, 0, 0, 0, 467, 468, 0, 659, 469,
	660, 471, 472, 0, 0, 473, 0, 0, 0, 475,
	476, 477, 0, 0, 478, 479, 661, 0, 480, 0,
	662, 481, 482, 474, 483, 484, 485, 486, 487, 488,
	489, 490, 491, 0, 492, 493, 663, 494, 495, 496,
	664, 497, 498, 499, 665, 500, 666, 501, 502, 0,
	503, 504, 0, 505, 506, 507, 508, 509, 510, 511,
	667, 512, 513, 515, 514, 516, 0, 517, 0, 518,
	519, 520, 0, 0, 0, 0, 0, 521, 0, 523,
	524, 525, 526, 522, 527, 528, 529, 530, 531, 0,
	532, 533, 534, 0, 535, 536, 537, 538, 539, 668,
	540, 0, 541, 542, 548, 549, 550, 543, 544, 551,
	552, 553, 554, 555, 0, 557, 558, 556, 559, 560,
	561, 0, 562, 563, 545, 546, 564, 565, 0, 566,
	567, 568, 569, 570, 571, 572, 669, 0, 573, 0,
	574, 575, 576, 578, 547, 579, 584, 585, 670, 580,
	581, 582, 583, 671, 587, 588, 0, 589, 590, 0,
	586, 577, 0, 591, 592, 593, 594, 595, 596, 597,
	359, 598, 0, 599, 672, 673, 674, 675, 0, 608,
	0, 600, 601, 602, 676, 603, 677, 0, 604, 605,
	606, 607, 0, 609, 610, 0, 0, 611, 612, 613,
	615, 616, 614, 617, 0, 618, 0, 0, 619, 620,
	621, 678, 679, 680, 270, 623, 622, 624, 681, 0,
	625, 0, 0, 0, 0, 626, 627, 682, 628, 629,
	630, 276, 278, 277, 279, 280, 281, 282, 0, 283,
	284, 0, 0, 0, 0, 0, 631, 0, 0, 0,
	0, 285, 286, 0, 287, 288, 289, 290, 291, 292,
	632, 633, 0, 293, 634, 294, 635, 0, 636, 295,
	296, 297, 298, 299, 300, 0, 0, 0, 301, 637,
	638, 639, 0, 302, 303, 640, 0, 0, 0, 304,
	305, 306, 307, 308, 309, 310, 0, 0, 312, 313,
	314, 311, 315, 0, 316, 0, 317, 318, 319, 320,
	321, 322, 0, 323, 324, 325, 0, 326, 327, 328,
	0, 0, 0, 0, 0, 0, 0, 329, 330, 331,
	332, 333, 0, 334, 641, 642, 0, 338, 335, 336,
	0, 339, 337, 340, 0, 341, 342, 343, 0, 0,
	344, 345, 346, 0, 347, 348, 0, 349, 350, 351,
	0, 352, 353, 643, 354, 355, 356, 358, 360, 357,
	361, 362, 363, 364, 644, 645, 365, 0, 0, 0,
	0, 0, 0, 0, 366, 367, 368, 646, 0, 0,
	0, 369, 0, 370, 371, 0, 0, 0, 372, 373,
	374, 647, 648, 375, 376, 377, 378, 379, 380, 381,
	382, 383, 0, 384, 649, 0, 650, 385, 0, 386,
	387, 388, 389, 390, 3438, 652, 653, 470, 0, 391,
	392, 0, 393, 394, 395, 396, 397, 0, 0, 0,
	0, 398, 399, 400, 402, 0, 0, 401, 654, 655,
	0, 656, 0, 403, 404, 0, 657, 0, 405, 406,
	407, 0, 408, 0, 0, 0, 409, 410, 411, 412,
	413, 414, 0, 415, 417, 416, 0, 418, 658, 0,
	419, 420, 0, 0, 421, 0, 0, 0, 422, 423,
	426, 0, 0, 424, 425, 427, 428, 0, 429, 430,
	432, 435, 431, 433, 434, 436, 449, 437, 438, 439,
	440, 441, 442, 443, 444, 445, 446, 447, 448, 451,
	0, 450, 0, 452, 453, 454, 460, 462, 463, 458,
	459, 461, 464, 465, 456, 457, 0, 466, 455, 0,
	0, 0, 467, 468, 0, 659, 469, 660, 471, 472,
	0, 0, 473, 0, 0, 0, 475, 476, 477, 0,
	0, 478, 479, 661, 0, 480, 0, 662, 481, 482,
	474, 483, 484, 485, 486, 487, 488, 489, 490, 491,
	0, 492, 493, 663, 494, 495, 496, 664, 497, 498,
	499, 665, 500, 666, 501, 502, 0, 503, 504, 0,
	505, 506, 507, 508, 509, 510, 511, 667, 512, 513,
	515, 514, 516, 0, 517, 0, 518, 519, 520, 0,
	0, 0, 0, 0, 521, 0, 523, 524, 525, 526,
	522, 527, 528, 529, 530, 531, 0, 532, 533, 534,
	0, 535, 536, 537, 538, 539, 668, 540, 0, 541,
	542, 548, 549, 550, 543, 544, 551, 552, 553, 554,
	555, 0, 557, 558, 556, 559, 560, 561, 0, 562,
	563, 545, 546, 564, 565, 0, 566, 567, 568, 569,
	570, 571, 572, 669, 0, 573, 0, 574, 575, 576,
	578, 547, 579, 584, 585, 670, 580, 581, 582, 583,
	671, 587, 588, 0, 589, 590, 0, 586, 577, 0,
	591, 592, 593, 594, 595, 596, 597, 359, 598, 0,
	599, 672, 673, 674, 675, 0, 608, 0, 600, 601,
	602, 676, 603, 677, 0, 604, 605, 606, 607, 0,
	609, 610, 0, 0, 611, 612, 613, 615, 616, 614,
	617, 0, 618, 0, 0, 619, 620, 621, 678, 679,
	680, 270, 623, 622, 624, 681, 0, 625, 0, 0,
	0, 0, 626, 627, 682, 628, 629, 630, 276, 278,
	277, 279, 280, 281, 282, 0, 283, 284, 0, 0,
	0, 0, 0, 631, 0, 0, 0, 0, 285, 286,
	0, 287, 288, 289, 290, 291, 292, 632, 633, 0,
	293, 634, 294, 635, 0, 636, 295, 296, 297, 298,
	299, 300, 0, 0, 0, 301, 637, 638, 639, 0,
	302, 303, 640, 0, 0, 0, 304, 305, 306, 307,
	308, 309, 310, 0, 0, 312, 313, 314, 311, 315,
	0, 316, 0, 317, 318, 319, 320, 321, 322, 0,
	323, 324, 325, 0, 326, 327, 328, 0, 0, 0,
	0, 0, 0, 0, 329, 330, 331, 332, 333, 0,
	334, 641, 642, 0, 338, 335, 336, 0, 339, 337,
	340, 0, 341, 342, 343, 0, 0, 344, 345, 346,
	0, 347, 348, 0, 349, 350, 351, 0, 352, 353,
	643, 354, 355, 356, 358, 360, 357, 361, 362, 363,
	364, 644, 645, 365, 0, 0, 0, 0, 0, 0,
	0, 366, 367, 368, 646, 0, 0, 0, 369, 0,
	370, 371, 0, 0, 0, 372, 373, 374, 647, 648,
	375, 376, 377, 378, 379, 380, 381, 382, 383, 0,
	384, 649, 0, 650, 385, 0, 386, 387, 388, 389,
	390, 3044, 652, 653, 470, 0, 391, 392, 0, 393,
	394, 395, 396, 397, 0, 0, 0, 0, 398, 399,
	400, 402, 0, 0, 401, 654, 655, 0, 656, 0,
	403, 404, 0, 657, 0, 405, 406, 407, 0, 408,
	0, 0, 0, 409, 410, 411, 412, 413, 414, 0,
	415, 417, 416, 0, 418, 658, 0, 419, 420, 0,
	0, 421, 0, 0, 0, 422, 423, 426, 0, 0,
	424, 425, 427, 428, 0, 429, 430, 432, 435, 431,
	433, 434, 436, 449, 437, 438, 439, 440, 441, 442,
	443, 444, 445, 446, 447, 448, 451, 0, 450, 0,
	452, 453, 454, 460, 462, 463, 458, 459, 461, 464,
	465, 456, 457, 0, 466, 455, 0, 0, 0, 467,
	468, 0, 659, 469, 660, 471, 472, 0, 0, 473,
	0, 0, 0, 475, 476, 477, 0, 0, 478, 479,
	661, 0, 480, 0, 662, 481, 482, 474, 483, 484,
	485, 486, 487, 488, 489, 490, 491, 0, 492, 493,
	663, 494, 495, 496, 664, 497, 498, 499, 665, 500,
	666, 501, 502, 0, 503, 504, 0, 505, 506, 507,
	508, 509, 510, 511, 667, 512, 513, 515, 514, 516,
	0, 517, 0, 518, 519, 520, 0, 0, 0, 0,
	0, 521, 0, 523, 524, 525, 526, 522, 527, 528,
	529, 530, 531, 0, 532, 533, 534, 0, 535, 536,
	537, 538, 539, 668, 540, 0, 541, 542, 548, 549,
	550, 543, 544, 551, 552, 553, 554, 555, 0, 557,
	558, 556, 559, 560, 561, 0, 562, 563, 545, 546,
	564, 565, 0, 566, 567, 568, 569, 570, 571, 572,
	669, 0, 573, 0, 574, 575, 576, 578, 547, 579,
	584, 585, 670, 580, 581, 582, 583, 671, 587, 588,
	0, 589, 590, 0, 586, 577, 0, 591, 592, 593,
	594, 595, 596, 597, 359, 598, 0, 599, 672, 673,
	674, 675, 0, 608, 0, 600, 601, 602, 676, 603,
	677, 0, 604, 605, 606, 607, 0, 609, 610, 0,
	0, 611, 612, 613, 615, 616, 614, 617, 0, 618,
	0, 0, 619, 620, 621, 678, 679, 680, 270, 623,
	622, 624, 681, 0, 625, 0, 0, 0, 0, 626,
	627, 682, 628, 629, 630, 276, 278, 277, 279, 280,
	281, 282, 0, 283, 284, 0, 0, 0, 0, 0,
	631, 0, 0, 0, 0, 285, 286, 0, 287, 288,
	289, 290, 291, 292, 632, 633, 0, 293, 634, 294,
	635, 0, 636, 295, 296, 297, 298, 299, 300, 0,
	0, 0, 301, 637, 638, 639, 0, 302, 303, 640,
	0, 0, 0, 304, 305, 306, 307, 308, 309, 310,
	0, 0, 312, 313, 314, 311, 315, 0, 316, 0,
	317, 318, 319, 320, 321, 322, 0, 323, 324, 325,
	0, 326, 327, 328, 0, 0, 0, 0, 0, 0,
	0, 329, 330, 331, 332, 333, 0, 334, 641, 642,
	0, 338, 335, 336, 0, 339, 337, 340, 0, 341,
	342, 343, 0, 0, 344, 345, 346, 0, 347, 348,
	0, 349, 350, 351, 0, 352, 353, 643, 354, 355,
	356, 358, 360, 357, 361, 362, 363, 364, 644, 645,
	365, 0, 0, 0, 0, 0, 0, 0, 366, 367,
	368, 646, 0, 0, 0, 369, 0, 370, 371, 0,
	0, 0, 372, 373, 374, 647, 648, 375, 376, 377,
	378, 379, 380, 381, 382, 383, 0, 384, 649, 0,
	650, 385, 0, 386, 387, 388, 389, 390, 651, 652,
	653, 470, 0, 391, 392, 0, 393, 394, 395, 396,
	397, 0, 0, 0, 0, 398, 399, 400, 402, 0,
	0, 401, 654, 655, 0, 656, 0, 403, 404, 0,
	657, 0, 405, 406, 407, 0, 408, 0, 0, 0,
	409, 410, 411, 412, 413, 414, 0, 415, 417, 416,
	0, 418, 658, 0, 419, 420, 0, 0, 421, 0,
	0, 0, 422, 423, 426, 0, 0, 424, 425, 427,
	428, 0, 429, 430, 432, 435, 431, 433, 434, 436,
	449, 437, 438, 439, 440, 441, 442, 443, 444, 445,
	446, 447, 448, 451, 0, 450, 0, 452, 453, 454,
	460, 462, 463, 458, 459, 461, 464, 465, 456, 457,
	0, 466, 455, 0, 0, 0, 467, 468, 0, 659,
	469, 660, 471, 472, 0, 0, 473, 0, 0, 0,
	475, 476, 477, 0, 0, 478, 479, 661, 0, 480,
	0, 662, 481, 482, 474, 483, 484, 485, 486, 487,
	488, 489, 490, 491, 0, 492, 493, 663, 494, 495,
	496, 664, 497, 498, 499, 665, 500, 666, 501, 502,
	0, 503, 504, 0, 505, 506, 507, 508, 509, 510,
	511, 667, 512, 513, 515, 514, 516, 0, 517, 0,
	518, 519, 520, 0, 0, 0, 0, 0, 521, 0,
	523, 524, 525, 526, 522, 527, 528, 529, 530, 531,
	0, 532, 533, 534, 0, 535, 536, 537, 538, 539,
	668, 540, 0, 541, 542, 754, 549, 550, 543, 544,
	551, 552, 553, 554, 555, 0, 557, 558, 556, 559,
	560, 561, 0, 562, 563, 545, 546, 564, 565, 0,
	566, 567, 568, 569, 570, 571, 572, 669, 0, 573,
	0, 574, 575, 576, 578, 547, 579, 584, 585, 670,
	580, 581, 582, 583, 671, 587, 588, 0, 589, 590,
	0, 586, 577, 0, 591, 592, 593, 594, 595, 596,
	597, 359, 598, 0, 599, 672, 673, 674, 675, 0,
	608, 0, 600, 601, 602, 676, 603, 677, 0, 604,
	605, 606, 607, 0, 609, 610, 0, 0, 611, 612,
	613, 615, 616, 614, 617, 0, 618, 0, 0, 619,
	620, 621, 678, 679, 680, 270, 623, 622, 624, 681,
	0, 625, 0, 0, 0, 0, 626, 627, 682, 628,
	629, 630, 276, 278, 277, 279, 280, 281, 282, 0,
	283, 284, 0, 0, 0, 0, 0, 631, 0, 2287,
	0, 0, 285, 286, 0, 287, 288, 289, 290, 291,
	292, 632, 633, 0, 293, 634, 294, 635, 0, 636,
	295, 296, 297, 298, 299, 300, 0, 0, 0, 301,
	637, 638, 639, 0, 302, 303, 640, 0, 0, 0,
	304, 305, 306, 307, 308, 309, 310, 0, 0, 312,
	313, 314, 311, 315, 0, 316, 0, 317, 318, 319,
	320, 321, 322, 0, 323, 324, 325, 0, 326, 327,
	328, 0, 0, 0, 0, 0, 0, 0, 329, 330,
	331, 332, 333, 0, 334, 641, 642, 0, 338, 335,
	336, 0, 339, 337, 340, 0, 341, 342, 343, 0,
	0, 344, 345, 346, 0, 347, 348, 0, 349, 350,
	351, 0, 352, 353, 643, 354, 355, 356, 358, 360,
	357, 361, 362, 363, 364, 644, 645, 365, 0, 0,
	0, 0, 0, 0, 0, 366, 367, 368, 646, 0,
	0, 0, 369, 0, 370, 371, 0, 0, 0, 372,
	373, 374, 647, 648, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 0, 384, 649, 0, 650, 385, 0,
	386, 387, 388, 389, 390, 651, 652, 653, 470, 0,
	391, 392, 0, 393, 394, 395, 396, 397, 0, 0,
	0, 0, 398, 399, 400, 402, 0, 0, 401, 654,
	655, 0, 656, 0, 403, 404, 0, 657, 0, 405,
	406, 407, 0, 408, 0, 0, 0, 409, 410, 411,
	412, 413, 414, 0, 415, 417, 416, 0, 418, 658,
	0, 419, 420, 0, 0, 421, 0, 0, 0, 422,
	423, 426, 0, 0, 424, 425, 427, 428, 0, 429,
	430, 432, 435, 431, 433, 434, 436, 449, 437, 438,
	439, 440, 441, 442, 443, 444, 445, 446, 447, 448,
	451, 0, 450, 0, 452, 453, 454, 460, 462, 463,
	458, 459, 461, 464, 465, 456, 457, 0, 466, 455,
	0, 0, 0, 467, 468, 0, 659, 469, 660, 471,
	472, 0, 0, 473, 0, 0, 0, 475, 476, 477,
	0, 0, 478, 479, 661, 0, 480, 0, 662, 481,
	482, 474, 483, 484, 485, 486, 487, 488, 489, 490,
	491, 0, 492, 493, 663, 494, 495, 496, 664, 497,
	498, 499, 665, 500, 666, 501, 502, 0, 503, 504,
	0, 505, 506, 507, 508, 509, 510, 511, 667, 512,
	513, 515, 514, 516, 0, 517, 0, 518, 519, 520,
	0, 0, 0, 0, 0, 521, 0, 523, 524, 525,
	526, 522, 527, 528, 529, 530, 531, 0, 532, 533,
	534, 0, 535, 536, 537, 538, 539, 668, 540, 0,
	541, 542, 548, 549, 550, 543, 544, 551, 552, 553,
	554, 555, 0, 557, 558, 556, 559, 560, 561, 0,
	0, 563, 545, 546, 564, 565, 0, 566, 567, 568,
	569, 570, 571, 572, 669, 0, 573, 0, 574, 575,
	576, 578, 547, 579, 584, 585, 670, 580, 581, 582,
	583, 671, 587, 588, 0, 589, 590, 0, 586, 577,
	0, 591, 592, 593, 594, 595, 596, 597, 359, 598,
	0, 599, 672, 673, 674, 675, 0, 608, 0, 600,
	601, 602, 676, 603, 677, 0, 604, 605, 606, 607,
	0, 609, 610, 0, 0, 611, 612, 613, 615, 616,
	614, 617, 0, 618, 0, 0, 619, 620, 621, 678,
	679, 680, 270, 623, 622, 624, 681, 0, 625, 0,
	0, 0, 0, 626, 627, 682, 628, 629, 630, 276,
	278, 277, 279, 280, 281, 282, 0, 283, 284, 0,
	0, 0, 0, 0, 631, 0, 0, 0, 0, 285,
	286, 0, 287, 288, 289, 290, 291, 292, 632, 633,
	0, 293, 634, 294, 635, 0, 636, 295, 296, 297,
	298, 299, 300, 0, 0, 0, 301, 637, 638, 639,
	0, 302, 303, 640, 0, 0, 0, 304, 305, 306,
	307, 308, 309, 310, 0, 0, 312, 313, 314, 311,
	315, 0, 316, 0, 317, 318, 319, 320, 321, 322,
	0, 323, 324, 325, 0, 326, 327, 328, 0, 0,
	0, 0, 0, 0, 0, 329, 330, 331, 332, 333,
	0, 334, 641, 642, 0, 338, 335, 336, 0, 339,
	337, 340, 0, 341, 342, 343, 0, 0, 344, 345,
	346, 0, 347, 348, 0, 349, 350, 351, 0, 352,
	353, 643, 354, 355, 356, 358, 360, 357, 361, 362,
	363, 364, 644, 645, 365, 0, 0, 0, 0, 0,
	0, 0, 366, 367, 368, 646, 0, 0, 0, 369,
	0, 370, 371, 0, 0, 0, 372, 373, 374, 647,
	648, 375, 376, 377, 378, 379, 380, 381, 382, 383,
	0, 384, 649, 0, 650, 385, 0, 386, 387, 388,
	389, 390, 1280, 652, 653, 470, 0, 391, 392, 0,
	393, 394, 395, 396, 397, 0, 0, 0, 0, 398,
	399, 400, 402, 0, 0, 401, 654, 655, 0, 656,
	0, 403, 404, 0, 657, 0, 405, 406, 407, 0,
	408, 0, 0, 0, 409, 410, 411, 412, 413, 414,
	0, 415, 417, 416, 0, 418, 658, 0, 419, 420,
	0, 0, 421, 0, 0, 0, 422, 423, 426, 0,
	0, 424, 425, 427, 428, 0, 429, 430, 432, 435,
	431, 433, 434, 436, 449, 437, 438, 439, 440, 441,
	442, 443, 444, 445, 446, 447, 448, 451, 0, 450,
	0, 452, 453, 454, 460, 462, 463, 458, 459, 461,
	464, 465, 456, 457, 0, 466, 455, 0, 0, 0,
	467, 468, 0, 659, 469, 660, 471, 472, 0, 0,
	473, 0, 0, 0, 475, 476, 477, 0, 0, 478,
	479, 661, 0, 480, 0, 662, 481, 482, 474, 483,
	484, 485, 486, 487, 488, 489, 490, 491, 0, 492,
	493, 663, 494, 495, 496, 664, 497, 498, 499, 665,
	500, 666, 501, 502, 0, 503, 504, 0, 505, 506,
	507, 508, 509, 510, 511, 667, 512, 513, 515, 514,
	516, 0, 517, 0, 518, 519, 520, 0, 0, 0,
	0, 0, 521, 0, 523, 524, 525, 526, 522, 527,
	528, 529, 530, 531, 0, 532, 533, 534, 0, 535,
	536, 537, 538, 539, 668, 540, 0, 541, 542, 548,
	549, 550, 543, 544, 551, 552, 553, 554, 555, 0,
	557, 558, 556, 559, 560, 561, 0, 562, 563, 545,
	546, 564, 565, 0, 566, 567, 568, 569, 570, 571,
	572, 669, 0, 573, 0, 574, 575, 576, 578, 547,
	579, 584, 585, 670, 580, 581, 582, 583, 671, 587,
	588, 0, 589, 590, 0, 586, 577, 0, 591, 592,
	593, 594, 595, 596, 597, 359, 598, 0, 599, 672,
	673, 674, 675, 0, 608, 0, 600, 601, 602, 676,
	603, 677, 0, 604, 605, 606, 607, 0, 609, 610,
	0, 0, 611, 612, 613, 615, 616, 614, 617, 0,
	618, 0, 0, 619, 620, 621, 678, 679, 680, 270,
	623, 622, 624, 681, 0, 625, 0, 0, 0, 0,
	626, 627, 682, 628, 629, 630, 276, 278, 277, 279,
	280, 281, 282, 0, 283, 284, 0, 0, 0, 0,
	0, 631, 0, 0, 0, 0, 285, 286, 0, 287,
	288, 289, 290, 291, 292, 632, 633, 0, 293, 634,
	294, 635, 0, 636, 295, 296, 297, 298, 299, 300,
	0, 0, 0, 301, 637, 638, 639, 0, 302, 303,
	640, 0, 0, 0, 304, 305, 306, 307, 308, 309,
	310, 0, 0, 312, 313, 314, 311, 315, 0, 316,
	0, 317, 318, 319, 320, 321, 322, 0, 323, 324,
	325, 0, 326, 327, 328, 0, 0, 0, 0, 0,
	0, 0, 329, 330, 331, 332, 333, 0, 334, 641,
	642, 0, 338, 335, 336, 0, 339, 337, 340, 0,
	341, 342, 343, 0, 0, 344, 345, 346, 0, 347,
	348, 0, 349, 350, 351, 0, 352, 353, 643, 354,
	355, 356, 358, 360, 357, 361, 362, 363, 364, 644,
	645, 365, 0, 0, 0, 0, 0, 0, 0, 366,
	367, 368, 646, 0, 0, 0, 369, 0, 370, 371,
	0, 0, 0, 372, 373, 374, 647, 648, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 0, 384, 649,
	0, 650, 385, 0, 386, 387, 388, 389, 390, 651,
	652, 653, 470, 0, 391, 392, 0, 393, 394, 395,
	396, 397, 0, 0, 0, 0, 398, 399, 400, 402,
	0, 0, 401, 654, 655, 0, 656, 0, 403, 404,
	0, 657, 0, 405, 406, 407, 0, 408, 0, 0,
	0, 409, 410, 411, 412, 413, 414, 0, 415, 417,
	416, 0, 418, 658, 0, 419, 420, 0, 0, 421,
	0, 0, 0, 422, 423, 426, 0, 0, 424, 425,
	427, 428, 0, 429, 430, 432, 435, 431, 433, 434,
	436, 449, 437, 438, 439, 440, 441, 442, 443, 444,
	445, 446, 447, 448, 451, 0, 450, 0, 452, 453,
	454, 460, 462, 463, 458, 459, 461, 464, 465, 456,
	457, 0, 466, 455, 0, 0, 0, 467, 468, 0,
	659, 469, 660, 471, 472, 0, 0, 473, 0, 0,
	0, 475, 476, 477, 0, 0, 478, 479, 661, 0,
	480, 0, 662, 481, 482, 474, 483, 484, 485, 486,
	487, 488, 489, 490, 491, 0, 492, 493, 663, 494,
	495, 496, 664, 497, 498, 499, 665, 500, 666, 501,
	502, 0, 503, 504, 0, 505, 506, 507, 508, 509,
	510, 511, 667, 512, 513, 1212, 514, 516, 0, 517,
	0, 518, 519, 520, 0, 0, 0, 0, 0, 521,
	0, 523, 524, 525, 526, 522, 527, 528, 529, 530,
	531, 0, 532, 533, 534, 0, 535, 536, 537, 538,
	539, 668, 540, 0, 541, 542, 548, 549, 550, 543,
	544, 551, 552, 553, 554, 555, 0, 557, 558, 556,
	559, 560, 561, 0, 562, 563, 545, 546, 564, 565,
	0, 566, 567, 568, 569, 570, 571, 572, 669, 0,
	573, 0, 574, 575, 576, 578, 547, 579, 584, 585,
	670, 580, 581, 582, 583, 671, 587, 588, 0, 589,
	590, 0, 586, 577, 0, 591, 592, 593, 594, 595,
	596, 597, 359, 598, 0, 599, 672, 673, 674, 675,
	0, 608, 0, 600, 601, 602, 676, 603, 677, 0,
	604, 605, 606, 607, 0, 609, 610, 0, 0, 611,
	612, 613, 615, 616, 614, 617, 0, 618, 0, 0,
	619, 620, 621, 678, 679, 680, 270, 623, 622, 624,
	681, 0, 625, 0, 0, 0, 0, 626, 627, 682,
	628, 629, 630, 276, 278, 277, 279, 280, 281, 282,
	0, 283, 284, 0, 0, 0, 0, 0, 631, 0,
	0, 0, 0, 285, 286, 0, 287, 288, 289, 290,
	291, 292, 632, 633, 0, 293, 634, 294, 635, 0,
	636, 295, 296, 297, 298, 299, 300, 0, 0, 0,
	301, 637, 638, 639, 0, 302, 303, 640, 0, 0,
	0, 304, 305, 306, 307, 308, 309, 310, 0, 0,
	312, 313, 314, 311, 315, 0, 316, 0, 317, 318,
	319, 320, 321, 322, 0, 323, 324, 325, 0, 326,
	327, 328, 0, 0, 0, 0, 0, 0, 0, 329,
	330, 331, 332, 333, 0, 334, 641, 642, 0, 338,
	335, 336, 0, 339, 337, 340, 0, 341, 342, 343,
	0, 0, 344, 345, 346, 0, 347, 348, 0, 349,
	350, 351, 0, 352, 353, 643, 354, 355, 356, 358,
	360, 357, 361, 362, 363, 364, 644, 645, 365, 0,
	0, 0, 0, 0, 0, 0, 366, 367, 368, 646,
	0, 0, 0, 369, 0, 370, 371, 0, 0, 0,
	372, 373, 374, 647, 648, 375, 376, 377, 378, 379,
	380, 381, 382, 383, 0, 384, 649, 0, 650, 0,
	0, 386, 387, 388, 389, 390, 651, 652, 653, 470,
	0, 391, 392, 0, 393, 394, 395, 396, 397, 0,
	0, 0, 0, 398, 399, 400, 402, 0, 0, 401,
	654, 655, 0, 656, 0, 403, 404, 0, 657, 0,
	405, 406, 407, 0, 408, 0, 0, 0, 409, 410,
	411, 412, 413, 414, 0, 415, 417, 416, 0, 418,
	658, 0, 419, 420, 0, 0, 421, 0, 0, 0,
	422, 423, 426, 0, 0, 424, 425, 427, 428, 0,
	429, 430, 432, 435, 431, 433, 434, 436, 449, 437,
	438, 439, 440, 441, 442, 443, 444, 445, 446, 447,
	448, 451, 0, 450, 0, 452, 453, 454, 460, 462,
	463, 458, 459, 461, 464, 465, 456, 457, 0, 466,
	455, 0, 0, 0, 467, 468, 0, 659, 469, 660,
	471, 472, 0, 0, 473, 0, 0, 0, 475, 476,
	477, 0, 0, 478, 479, 661, 0, 480, 0, 662,
	481, 482, 474, 483, 484, 0, 486, 487, 488, 489,
	490, 491, 0, 492, 493, 663, 494, 495, 496, 664,
	497, 498, 499, 665, 500, 666, 501, 502, 0, 503,
	504, 0, 505, 506, 507, 508, 0, 510, 511, 667,
	512, 513, 515, 514, 516, 0, 517, 0, 518, 519,
	520, 0, 0, 0, 0, 0, 521, 0, 523, 524,
	525, 526, 522, 527, 528, 529, 530, 531, 0, 532,
	533, 534, 0, 535, 536, 537, 538, 539, 668, 0,
	0, 541, 542, 548, 549, 550, 543, 544, 551, 552,
	553, 554, 555, 0, 557, 558, 556, 559, 560, 561,
	0, 562, 563, 545, 546, 564, 565, 0, 566, 567,
	568, 569, 570, 571, 572, 669, 0, 573, 0, 574,
	575, 576, 578, 547, 579, 584, 585, 670, 580, 581,
	582, 583, 671, 587, 588, 0, 589, 590, 0, 586,
	577, 0, 591, 592, 593, 594, 595, 596, 597, 359,
	598, 0, 599, 672, 673, 674, 675, 0, 608, 0,
	600, 601, 602, 676, 603, 677, 0, 604, 605, 606,
	607, 0, 609, 610, 0, 0, 611, 612, 613, 615,
	616, 614, 617, 0, 618, 0, 0, 619, 620, 621,
	678, 679, 680, 0, 623, 622, 624, 681, 0, 625,
	0, 0, 0, 0, 626, 627, 682, 628, 629, 630,
	1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 1814, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 0,
	0, 0, 0, 1783, 1784, 1785, 1816, 1817, 1818, 1827,
	1828, 1829, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 1820, 1814, 0, 0, 0,
	0, 0, 0, 1786, 0, 0, 0, 0, 0, 0,
	0, 0, 1833, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1839,
	0, 0, 0, 0, 0, 0, 0, 0, 1785, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1805, 0,
	0, 0, 0, 0, 0, 0, 0, 1802, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	1809, 1810, 1811, 0, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1814, 0, 1824, 0, 0,
	1834, 0, 1786, 0, 0, 0, 0, 1813, 1815, 0,
	0, 1833, 1808, 1809, 1810, 1811, 0, 0, 0, 0,
	0, 0, 1791, 0, 1830, 0, 1831, 0, 1839, 0,
	0, 0, 0, 1800, 1801, 0, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 1822, 0, 0, 0, 0, 1802, 0, 0, 0,
	1824, 0, 0, 1834, 0, 0, 1806, 0, 0, 0,
	1813, 1815, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1830, 0, 1831,
	0, 0, 0, 0, 0, 0, 1800, 1801, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 1822, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 1806,
	0, 1808, 1809, 1810, 1811, 0, 0, 0, 0, 1836,
	0, 1791, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1832, 0, 0, 0, 0, 0, 1824,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1813,
	1815, 1821, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 1836, 0, 0, 0, 1830, 0, 1831, 0,
	0, 0, 0, 0, 0, 1800, 1801, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1822, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 0, 1806, 0,
	0, 0, 0, 0, 0, 0, 0, 1812, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1838, 0, 0, 0, 0,
	1807, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1825, 0, 0,
	1821, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1838, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1798, 1804,
	1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 0, 0, 0, 1812, 4516, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1823, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1797, 1798, 1804, 1826, 1803, 1799, 1825, 1796, 1794, 1795,
	1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 1783, 1784,
	4327, 1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 0, 0,
	1820, 1814, 0, 0, 0, 0, 0, 0, 1786, 0,
	0, 0, 0, 0, 0, 0, 0, 1833, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1839, 0, 0, 0, 0, 0,
	0, 0, 0, 1785, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1805, 0, 0, 0, 0, 0, 0,
	0, 0, 1802, 0, 0, 0, 0, 0, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 0, 0, 1783, 1784, 4161,
	1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	1814, 0, 0, 0, 0, 0, 0, 1786, 0, 0,
	0, 0, 0, 0, 0, 0, 1833, 1808, 1809, 1810,
	1811, 0, 0, 0, 0, 0, 0, 1791, 0, 0,
	0, 0, 0, 1839, 0, 0, 0, 0, 0, 0,
	1783, 1784, 1785, 1816, 1817, 1818, 1827, 1828, 1829, 0,
	0, 0, 1805, 0, 0, 0, 0, 0, 0, 0,
	0, 1802, 1820, 1814, 0, 1824, 0, 0, 1834, 0,
	1786, 0, 0, 0, 0, 1813, 1815, 0, 0, 1833,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1830, 0, 1831, 0, 1839, 0, 0, 0,
	0, 1800, 1801, 0, 0, 1785, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1805, 0, 0, 0, 1822,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1806, 0, 1808, 1809, 1810, 1811,
	0, 0, 0, 0, 0, 0, 1791, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1832, 0,
	0, 0, 0, 0, 1824, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 1813, 1815, 1821, 0, 0, 1808,
	1809, 1810, 1811, 0, 0, 0, 0, 1836, 0, 1791,
	0, 1830, 0, 1831, 0, 0, 0, 0, 0, 0,
	1800, 1801, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1822, 0,
	0, 0, 0, 0, 0, 0, 0, 1824, 0, 0,
	1834, 0, 0, 1806, 0, 0, 0, 1813, 1815, 0,
	0, 0, 1812, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 1831, 0, 0, 0,
	0, 0, 0, 1800, 1801, 1807, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1832, 0, 0,
	0, 1822, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1825, 0, 0, 1821, 1806, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1838, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 1836,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1823, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803,
	1799, 1825, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792,
	1793, 0, 0, 0, 1812, 4091, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 0, 0, 0, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 1825, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 1814, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 1823, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799,
	1785, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	1805, 0, 0, 0, 4090, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1798, 1804,
	1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 0, 0, 0, 0, 4089, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 1809, 1810, 1811, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 1784, 0, 1816,
	1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 1814,
	0, 0, 1824, 0, 0, 1834, 1786, 0, 0, 0,
	0, 0, 1813, 1815, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1831, 1839, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 1822, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 1783, 1784, 0, 1816, 1817, 1818,
	1827, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1814, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 1821, 0, 1808, 1809, 1810, 1811, 1785,
	0, 0, 0, 0, 1836, 1791, 0, 0, 0, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 1813, 1815, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 1831, 0, 0, 0, 0, 0, 0, 1800,
	1801, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 1809, 1810, 1811, 1822, 0, 0,
	0, 0, 0, 1791, 0, 0, 0, 0, 0, 1825,
	0, 0, 1806, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 1814, 0,
	1838, 1824, 0, 0, 1834, 1786, 0, 0, 0, 0,
	0, 1813, 1815, 0, 1833, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	1831, 1839, 0, 0, 1821, 0, 0, 1800, 1801, 0,
	1785, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 1822, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	1812, 0, 3747, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 1808, 1809, 1810, 1811, 0, 0,
	0, 0, 0, 1836, 1791, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 1824, 0, 0, 1834, 0, 0, 0, 0,
	0, 0, 1813, 1815, 0, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1831, 0, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1822, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 1806, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 1838,
	0, 0, 0, 3252, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1836, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 1812,
	0, 3251, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1807, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 1814, 1825,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1838, 1839, 0, 0, 0, 0, 0, 0, 0, 0,
	1785, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	0, 0, 3250, 0, 1808, 1809, 1810, 1811, 0, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 1784, 0, 1816,
	1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 1814,
	0, 0, 1824, 0, 0, 1834, 1786, 0, 0, 0,
	0, 0, 1813, 1815, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1831, 1839, 0, 0, 0, 0, 0, 1800, 1801,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 1822, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 0, 1783, 1784, 0, 1816, 1817, 1818,
	1827, 1828, 1829, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1820, 1814, 0, 0,
	0, 0, 0, 0, 1786, 0, 0, 0, 0, 0,
	0, 0, 0, 1833, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1839, 0, 0, 1821, 0, 1808, 1809, 1810, 1811, 1785,
	0, 0, 0, 0, 1836, 1791, 0, 0, 0, 1805,
	0, 0, 0, 0, 0, 0, 0, 0, 1802, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 1813, 1815, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 1831, 0, 0, 0, 0, 0, 0, 1800,
	1801, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1808, 1809, 1810, 1811, 1822, 0, 0,
	0, 0, 0, 1791, 4796, 0, 0, 0, 0, 1825,
	0, 0, 1806, 0, 0, 0, 1783, 1784, 0, 1816,
	1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 1814,
	1838, 1824, 0, 0, 1834, 0, 1786, 0, 0, 0,
	0, 1813, 1815, 0, 0, 1833, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1830, 0,
	1831, 0, 1839, 0, 1821, 0, 0, 1800, 1801, 0,
	0, 1785, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 1822, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1806, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	1812, 0, 3249, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1832, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 1821, 0, 0, 1808, 1809, 1810, 1811, 0,
	0, 0, 0, 1836, 0, 1791, 0, 3314, 0, 0,
	1825, 3313, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 4795, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 1824, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 1813, 1815, 0, 0, 0, 1812, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 1831, 0, 0, 0, 0, 0, 0, 1800,
	1801, 1807, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1825, 0,
	0, 0, 1806, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 1838,
	0, 3214, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1823, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796, 1794,
	1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 1784, 1807, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1814, 0, 0, 0, 0, 3185,
	1825, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 1838, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3186, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0,
	1808, 1809, 1810, 1811, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 2723, 0, 0, 0, 0,
	0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1814, 0, 0, 1824, 2722,
	0, 1834, 1786, 0, 0, 0, 0, 0, 1813, 1815,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 1831, 1839, 0,
	0, 0, 0, 0, 1800, 1801, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 1822, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 1814, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 1821,
	0, 1808, 1809, 1810, 1811, 1785, 0, 0, 0, 0,
	1836, 1791, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1813,
	1815, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 0,
	0, 0, 0, 0, 0, 1800, 1801, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	1809, 1810, 1811, 1822, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 1825, 0, 0, 1806, 0,
	0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1814, 0, 1838, 1824, 0, 0,
	1834, 1786, 0, 0, 0, 0, 0, 1813, 1815, 0,
	1833, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 1831, 1839, 0, 0,
	1821, 0, 0, 1800, 1801, 0, 1785, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 1822, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1806, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 1821, 1066,
	1808, 1809, 1810, 1811, 0, 0, 0, 0, 0, 1836,
	1791, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1824, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 1813, 1815,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 1831, 0, 0,
	0, 0, 0, 0, 1800, 1801, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 1806, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1821,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1798, 1804,
	1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 1784, 1807, 1816,
	1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 1814,
	0, 0, 0, 0, 0, 1825, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 1838, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 3728,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 1808, 1809, 1810, 1811, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 3320, 0, 0, 0, 0, 0, 1783, 1784, 0,
	1816, 1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1820,
	1814, 0, 0, 1824, 3315, 0, 1834, 1786, 0, 0,
	0, 0, 0, 1813, 1815, 0, 1833, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 1831, 1839, 0, 0, 0, 0, 0, 1800,
	1801, 0, 1785, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1805, 0, 0, 0, 0, 1822, 0, 0,
	0, 1802, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 1783, 1784, 0, 1816, 1817,
	1818, 1827, 1828, 1829, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1820, 1814, 0,
	0, 0, 0, 0, 0, 1786, 0, 0, 0, 0,
	0, 0, 0, 0, 1833, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1839, 0, 0, 1821, 0, 1808, 1809, 1810, 1811,
	1785, 0, 0, 0, 0, 1836, 1791, 0, 0, 0,
	1805, 0, 0, 0, 0, 0, 0, 0, 0, 1802,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1824, 0, 0, 1834, 0, 0,
	0, 0, 0, 0, 1813, 1815, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1830, 0, 1831, 0, 0, 0, 0, 0, 0,
	1800, 1801, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1808, 1809, 1810, 1811, 1822, 0,
	0, 0, 0, 0, 1791, 0, 0, 0, 0, 0,
	1825, 0, 0, 1806, 0, 0, 1783, 1784, 0, 1816,
	1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1820, 1814,
	0, 1838, 1824, 3253, 0, 1834, 1786, 0, 0, 0,
	0, 0, 1813, 1815, 0, 1833, 0, 1832, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1830,
	0, 1831, 1839, 0, 0, 1821, 0, 0, 1800, 1801,
	0, 1785, 0, 0, 0, 0, 1836, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 1822, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1806, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0,
	0, 1812, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1832, 0, 0, 0, 0,
	0, 0, 0, 0, 1807, 0, 0, 0, 0, 0,
	0, 0, 0, 1821, 0, 1808, 1809, 1810, 1811, 0,
	0, 0, 0, 0, 1836, 1791, 0, 0, 0, 0,
	0, 1825, 0, 0, 3280, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1838, 1824, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 1813, 1815, 0, 0, 0, 0, 1812,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1830, 0, 1831, 0, 0, 0, 0, 0, 0, 1800,
	1801, 0, 1807, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1825,
	0, 0, 1806, 0, 1823, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799,
	0, 1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
	1838, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1832, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1821, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1823, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0, 1796,
	1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1783, 1784, 1807, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1820, 1814, 0, 0, 0, 0, 0,
	1825, 1786, 0, 0, 0, 0, 0, 0, 0, 0,
	1833, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1839, 0, 0,
	0, 1838, 0, 0, 0, 0, 1785, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 0, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793, 0,
	1808, 1809, 1810, 1811, 0, 0, 0, 0, 0, 0,
	1791, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828,
	1829, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1820, 1814, 0, 0, 1824, 0,
	0, 1834, 1786, 0, 0, 0, 0, 0, 1813, 1815,
	0, 1833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 1831, 1839, 0,
	0, 0, 0, 0, 1800, 1801, 0, 1785, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1805, 0, 0,
	0, 0, 1822, 0, 0, 0, 1802, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1806, 0, 0,
	1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1820, 1814, 0, 0, 0, 0, 0, 0,
	1786, 0, 0, 0, 0, 0, 0, 0, 0, 1833,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1839, 0, 0, 1821,
	0, 1808, 1809, 1810, 1811, 1785, 0, 0, 0, 0,
	1836, 1791, 0, 0, 0, 1805, 0, 0, 0, 0,
	0, 0, 0, 0, 1802, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1824,
	0, 0, 1834, 0, 0, 0, 0, 0, 0, 1813,
	1815, 0, 0, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1830, 0, 1831, 0,
	0, 0, 0, 0, 0, 1800, 1801, 0, 1807, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1808,
	1809, 1810, 1811, 1822, 0, 0, 0, 0, 0, 1791,
	0, 0, 0, 0, 0, 1825, 0, 0, 1806, 0,
	0, 1783, 1784, 0, 1816, 1817, 1818, 1827, 1828, 1829,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1814, 0, 1838, 1824, 0, 0,
	1834, 1786, 0, 0, 0, 0, 0, 1813, 1815, 0,
	1833, 0, 1832, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1830, 0, 1831, 1839, 0, 0,
	1821, 0, 0, 1800, 1801, 0, 1785, 0, 0, 0,
	0, 1836, 0, 0, 0, 0, 1805, 0, 0, 0,
	0, 1822, 0, 0, 0, 1802, 0, 0, 0, 0,
	0, 2302, 0, 0, 0, 0, 1806, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 0, 1812, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1832, 0, 0, 0, 0, 0, 0, 0, 0, 1807,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1808, 1809, 1810, 1811, 0, 0, 0, 0, 0, 1836,
	1791, 0, 0, 0, 0, 0, 1825, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1838, 1824, 0,
	0, 1834, 0, 0, 0, 0, 0, 0, 1813, 1815,
	0, 0, 0, 0, 1812, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1830, 0, 1831, 0, 0,
	0, 0, 0, 0, 1800, 1801, 0, 1807, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1822, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1825, 0, 0, 1806, 0, 1823,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1797,
	1798, 1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787,
	1788, 1789, 1790, 1792, 1793, 1838, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1832, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1836, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1823, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1797, 1798, 1804,
	1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788, 1789,
	1790, 1792, 1793, 0, 0, 1812, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1783, 1784, 1807, 1816,
	1817, 1818, 1827, 1828, 1829, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1814,
	0, 0, 0, 0, 0, 1825, 1786, 0, 0, 0,
	0, 0, 0, 0, 0, 1833, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1839, 0, 0, 0, 1838, 0, 0, 0,
	0, 1785, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1805, 0, 0, 0, 0, 0, 0, 0, 0,
	1802, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1823, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1797, 1798,
	1804, 1826, 1803, 1799, 0, 1796, 1794, 1795, 1787, 1788,
	1789, 1790, 1792, 1793, 0, 1808, 1809, 1810, 1811, 0,
	0, 0, 0, 0, 0, 1791, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1824, 0, 0, 1834, 0, 0, 0,
	0, 0, 0, 1813, 1815, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1800,
	1801, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1822, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1806, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1836, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1812, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1807, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1825, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1838, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1823, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1797, 1798, 1804, 1826, 1803, 1799, 0,
	1796, 1794, 1795, 1787, 1788, 1789, 1790, 1792, 1793,
}

var sqlPact = [...]int{
	5770, -1000, -1000, -1000, -1000, 218, -1000, -1000, 217, 211,
	209, 208, 207, 206, 205, 203, 201, 200, 196, -1000,
	-1000, -1000, -1000, -1000, -1000, 194, -1000, -1000, 193, -1000,
	188, 184, 181, -1000, -1000, 180, -1000, 178, -1000, -1000,
	-1000, -1000, 176, 172, 171, 94152, 93598, 94699, 2410, 116747,
	101291, 2063, 83668, 116193, 83114, 115639, 2314, 10521, 115085, 2848,
	170, -1000, 114531, 169, 167, 166, -1000, 113977, -1000, 2089,
	-1000, 165, -1000, 5839, 70308, 163, 159, 157, 2555, 155,
	-1000, 154, 153, -1000, -1000, 151, -1000, 11808, 1646, -1000,
	150, 148, -1000, 6995, 99082, 144, 138, 2616, 136, 135,
	68658, 134, 133, 2549, 3016, -1000, -1000, 2150, -1000, -1000,
	132, 128, 127, 126, 125, 119, 115, 114, 113, 111,
	107, 106, -1000, 104, 103, 102, 101, 100, -1000, 99,
	96, 94, -1000, 93, -1000, 92, 91, 90, 89, 88,
	87, 86, 83, 80, 78, 77, 76, 75, 74, 18884,
	-1000, -1000, 73, 2008, 1749, 1747, 1741, 1737, 1727, 1010,
	72, 71, 69, 63, 62, 61, 59, 57, 56, 52,
	51, 46, 44, 43, 37, 31, 29, 28, 161, 27,
	26, 25, 23, 22, 17, 8, 3037, -1000, 1597, 1140,
	32927, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 124405,
	117294, 7, -78, 6, -1000, 3421, 1110, 56932, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 303, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 539, 2221, 782, -1000, -1000,
	-1000, 113430, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2407, -28, -1000, 2214, -1000, -1000, -1000, -1000, -1000, 780,
	-1000, 2404, 354, 2348, -1000, -1000, -1000, 3479, 2553, 3876,
	3875, 3872, 3870, 3867, 123858, 1912, 3866, 2626, 3865, 3864,
	3863, 3861, 3860, 3859, 3857, -1000, 93044, 1114, 92490, 91936,
	3483, 112883, 91382, 112329, 77031, 48975, 1093, 3472, -1000, -1000,
	-1000, -1000, -1000, -1000, 117294, -1000, 1112, -1000, -1000, 3856,
	3855, 2100, 778, 100737, -1000, 1781, -1000, -1000, -1000, -1000,
	940, 1252, 34634, 34634, 34634, 299, -1000, -1000, -1000, -1000,
	-1000, -1000, 3854, 3853, 3852, 3850, 3849, -1000, -1000, 82560,
	25911, 82006, 81452, 111775, 25345, 90828, 90274, 3848, 3847, 3845,
	111221, 76465, 3594, 3589, 1109, 2213, 1499, -1000, -1000, -1000,
	-1000, -1000, -1000, -23, 72518, 3641, 117294, -1000, 297, -1000,
	-1000, -1000, -1000, -1000, -1000, 48406, 1024, 47837, 817, 47268,
	680, -1000, -1000, -1000, -1000, 75899, -1000, 110667, 2540, 3844,
	3843, 1199, 3842, 3355, 1908, 3841, 2035, 1307, 3840, 3839,
	3838, 3835, 3834, 3833, 3832, 1546, 110113, 3094, 1585, 109559,
	1815, 75333, 1090, 89720, 94699, 2784, 109005, 1478, 1475, -1000,
	-1000, -1000, -1000, 3177, 3003, 2999, 1372, -1000, -1000, -1000,
	-1000, 60299, 7718, 7562, -1000, -1000, 12093, 108451, 63119, 94699,
	94699, -1000, -1000, -1000, -1000, -1000, 46699, 622, 46130, 1028,
	-1000, -1000, 60863, 3056, -1000, -1000, -1000, -1000, 45561, 526,
	44992, 973, 117294, -1000, 3093, 2076, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 2329, 1678, 3643, 2879, 74767, 2173, 1480,
	3434, 3175, 3174, 1558, 2209, 3173, 3831, 2726, 3171, 3163,
	3160, 3159, 3156, 1818, 2696, 528, 2759, 32358, 3084, 1880,
	44423, 1684, 1534, 3154, 3151, 3660, 2181, 2071, 2069, 80898,
	3830, 3829, 3411, 3148, 3143, 2929, 3133, -1000, 3054, 1541,
	-1000, -1000, -1000, -1000, -1000, 1488, -1000, -1000, -1000, -1000,
	-1000, 85309, -1000, -1000, 1798, -1000, -1000, 1798, -1000, -1000,
	-1000, -1000, -1000, 1454, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1597, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2178, -1000, 2086,
	-1000, -1000, 2649, 3386, 3386, 3386, 3470, 521, 513, -1000,
	161, -1000, -1000, 130511, -1000, -1000, 49544, 49544, 49544, 49544,
	49544, 49544, 49544, 49544, 2317, -1000, 773, -1000, -1000, 813,
	-1000, 772, 692, 641, -1000, -1000, -1000, -1000, -1000, -1000,
	765, -1000, -1000, -1000, -1000, -1000, -1000, 3641, -1000, 28811,
	-1000, -1000, -1000, 472, 764, 49544, -1000, -1000, 3689, 3688,
	1080, -1000, 296, 994, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 3092, 763, 761, -1000,
	757, 752, 751, 747, 746, -1000, 744, -1000, 743, 737,
	735, 733, 732, 729, 725, 724, -1000, 2236, -1000, -1000,
	-1000, -1000, -1000, -1000, 672, 670, 670, 670, -1000, 1083,
	-1000, -1000, -1000, 290, 669, 288, 668, 666, 663, -1000,
	721, 720, 718, 717, 716, 713, 712, 708, 705, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1074, -1000, -1000, -1000,
	-1000, -24, 117294, -1000, 539, -24, -1000, -1000, 703, -1000,
	36939, 36939, 36939, -1000, -1000, 2403, 49544, -1000, 2501, -1000,
	-9, -9, 895, 58603, -1000, 55798, 895, 313, 821, 64227,
	-1000, 3053, -1000, -1000, 693, 293, -1000, -1000, -1000, -1000,
	26475, 3051, 117294, 117294, 117294, 94699, 94699, 94699, 3828, 3279,
	49544, -1000, -1000, 69752, 117294, 95246, -1000, -1000, 3576, 70860,
	69205, 117294, 3091, 107897, 3827, -1000, -1000, -1000, -1000, -1000,
	3257, 3826, 3824, 3822, -1000, 117294, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 243, 3256, -1000, -1000, 98528, 243, 3254,
	-1000, 243, 3253, -1000, 97981, -1000, -1000, 2405, 3252, -1000,
	-1000, 245, 3251, -1000, -1000, -1000, 244, 3248, -1000, -1000,
	292, -51, 3245, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 130511, -1000, -1000, -1000, 107343,
	-1000, 3394, -1000, -1000, 117294, -1000, 49544, -1000, 3571, 1709,
	78149, 3513, -33, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2603, 2590, 1170, 2421, -1000, 3290, 1453, 34634, 3343, -1000,
	-1000, -1000, -1000, -1000, 280, 26475, -1000, -1000, -1000, -1000,
	-1000, -1000, 2512, 3238, 1494, -1000, 2419, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 2184, 3237, -1000, 2005, 3236,
	2152, -1000, -1000, 2051, -1000, 3377, -1000, -1000, 1745, 3235,
	-8, -1000, -1000, 2636, -1000, -1000, -1000, -1000, 2211, -1000,
	1316, 3234, -1000, 2875, 2875, 89166, 3247, 62555, 60863, 72518,
	-29, -1000, -1000, -1000, -1000, -169, -1000, 24775, 130511, -1000,
	-1000, -1000, -1000, 1911, 130511, 965, -1000, -1000, 3232, -1000,
	130511, 964, -1000, -1000, 3230, -1000, 3089, -1000, -1000, 2503,
	-1000, -1000, 3820, -1000, -1000, 3819, -1000, 3817, 3815, 3814,
	-1000, 1870, 2190, 3811, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 88619, 2398, -1000, -1000, 87511, 3087, -1000, 2497,
	3512, -1000, 88065, 1088, -1000, 1016, 2495, -1000, 97434, 1077,
	2486, -1000, 3809, 3471, 2816, 1016, 2485, -1000, -1000, -1000,
	-1000, -1000, 1061, -1000, 66444, -1000, 66444, -1000, 1703, -1000,
	123311, -9, 94699, 3641, -1000, -52, -1000, -1000, -1000, 1110,
	-1000, 59730, -1000, 59730, 100183, 77595, 997, 776, 68104, 130330,
	-1000, 1045, -1000, -1000, 130511, -1000, -1000, -1000, -147, 2873,
	-1000, 77595, 61991, 130511, -1000, -1000, -1000, -1000, 130511, -1000,
	-1000, -1000, 77595, 87511, -1000, 106789, 86964, -1000, -1000, 1540,
	2630, -1000, -1000, -1000, 77595, 1342, 77595, 77595, 77595, -1000,
	106235, -1000, -1000, 2128, 1734, 3382, 2120, 94699, -1000, 1987,
	-1000, -1000, -1000, 3408, 3221, 117294, -1000, -1000, 3085, -1000,
	71971, 96887, -1000, 96340, -1000, 95793, -1000, 94699, -1000, 94699,
	-1000, 3808, 3807, 3806, -1000, -1000, 3803, -1000, 3801, 3409,
	-1000, 758, 43854, 130511, 3406, -1000, 3800, 2088, 3084, 130511,
	-1000, 3200, 1767, 1756, 117294, -1000, -1000, 117294, -1000, 117294,
	-1000, -1000, -1000, 1601, -1000, -1000, 2602, -1000, -1000, -1000,
	-1000, 94699, 94699, 94699, 94699, 1562, -1000, 43285, -1000, -1000,
	3131, 3796, 1874, -1000, 1960, -1000, 3046, 3403, -1000, 1527,
	1922, -1000, -1000, 247, -1000, -1000, -33, -1000, 122764, -1000,
	2649, -1000, 117294, -1000, 2605, 3071, 3083, 1816, 2394, 2701,
	-1000, 42716, 2671, 52958, 2417, 161, -1000, -1000, 161, 161,
	34065, -1000, -1000, 70860, 70860, 26475, 1462, 49544, 49544, 49544,
	49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544,
	49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544,
	49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544,
	49544, 49544, 49544, 2338, 49544, 1451, 49544, 49544, 49544, 49544,
	2057, -1000, -1000, 2024, 584, 2136, 692, -1000, -1000, -1000,
	3625, 3625, 3625, 515, 515, 515, 130790, 130790, 678, 3795,
	813, -1000, 49544, -1000, 182, 59157, 49544, 27041, -1000, 513,
	7616, 2646, -1000, 511, 27639, -1000, -1000, -1000, 28811, 641,
	42118, 49544, 1062, 130511, -1000, -1000, 1412, 3645, 24205, 3103,
	2920, 686, 888, 879, 31760, 31162, 30564, 29966, 878, 841,
	49544, 49544, 49544, 49544, 49544, 49544, 49544, 49544, -1000, -1000,
	3653, -1000, 3645, -1000, -1000, -1000, -1000, 3645, 1457, 1416,
	3645, -1000, 3645, 3645, 9410, 9410, 41549, 40980, 40411, 53527,
	39842, 49544, 29397, 39273, 38704, -1000, 117294, -24, 3570, 49544,
	291, -1000, 128741, -1000, 291, 291, 685, -55, 130511, 2648,
	2648, 57489, 2406, 2320, 2320, 2320, -1000, 895, 19616, 895,
	104587, 2326, 895, 895, 273, 306, 504, 55234, 2501, 104587,
	798, 684, 4, 0, -2, -1000, -1000, -3, -6, -1000,
	-1000, 94699, 683, 27041, 26475, 256, 2072, -60, 2741, 2732,
	-1000, 2728, 2711, -1000, 2708, -1000, 1950, -63, 1449, 94699,
	117294, 1487, 3794, -83, -1000, 5935, -81, -1000, 1358, 249,
	3645, -1000, -1000, -1000, -1000, -1000, 3793, 3792, -1000, 1066,
	679, 675, 556, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 672, 670, 670, 670, -1000, 290, 669, 288, 668,
	666, 663, -1000, -1000, -1000, -1000, -1000, 3040, 94699, 117294,
	1481, 3791, -169, 95246, -58, -1000, -1000, 117294, -1000, -1000,
	-1000, 3790, -1000, 94699, -1000, -1000, 94699, 243, 3228, -1000,
	94699, -1000, 94699, 242, 3225, -1000, -1000, 117294, -1000, 94699,
	94699, -1000, 117294, 117294, 117294, 77595, 77595, 235, -1000, 94699,
	898, -82, 1206, -33, -1000, -1000, -1000, -1000, -1000, 1798,
	-1000, 1790, -1000, -1000, -1000, -1000, -1000, -1000, 1538, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1080, -1000, -1000,
	-1000, -1000, -1000, -1000, 3635, 3633, -26, -1000, -1000, 26475,
	-1000, -34, 1771, 1956, 1448, -1000, 80344, 2563, 3383, 3789,
	2806, 3366, 1694, -1000, 1590, -1000, 3481, 85309, 3533, 3547,
	1351, -1000, 3039, -1000, -1000, 939, 1833, 1878, 1446, 1445,
	85309, 2005, -1000, 70860, -1000, 2724, 3469, 1434, 1408, 1434,
	1434, 1401, -1000, 85309, 1858, 1444, 1440, 1439, -1000, -1000,
	2117, 2103, -1000, -1000, 105688, -1000, 1435, 1425, 3588, 2178,
	2312, 840, 2102, -1000, -35, 3523, 3543, 1344, -1000, 3038,
	1424, -1000, -1000, -1000, 3468, 94699, 26475, 1634, 1620, 1625,
	1857, 1423, -27, -1000, 3521, 1420, 1414, -1000, 1079, 4912,
	3314, -1000, 77595, 1079, 1079, 2011, 3223, 2856, 1729, -1000,
	2871, 914, 2863, -1000, -1000, -1000, 914, -29, 72518, 117294,
	236, -1000, 182, 49544, 49544, 182, 49544, 182, 3505, 3222,
	-1000, -1000, -1000, -1000, -1000, 3788, 2106, 2625, -1000, -1000,
	662, 2481, 3036, 117294, 2748, -30, 94699, -1000, 71424, 3218,
	73073, 2005, 2480, -1000, -1000, 86410, -1000, 3217, 539, 2473,
	-1000, 707, 3787, 3216, -1000, 122217, -1000, 3394, 1473, 3215,
	1166, 775, 3569, -1000, 775, 66996, -1000, 117294, -1000, -9,
	7308, 79250, -84, -87, 501, -1000, 105141, 117294, 1159, 79797,
	117294, 3332, 2133, 2105, 1012, 60863, -1000, 60863, -89, -147,
	2862, 1584, 997, 997, 914, -1000, 914, -1000, 94699, 3082,
	-1000, -1000, 77595, 997, 997, 997, -1000, -1000, -1000, -1000,
	3786, 3781, 3779, 3777, -1000, -1000, 1014, 94699, 117294, 94699,
	-1000, -1000, 1728, -1000, 233, -1000, 117294, -1000, 117294, 117294,
	94699, -1000, 1014, 117294, 1014, 117294, 1014, 117294, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 182, -1000, -1000, 130511, -1000,
	49544, -1000, -1000, 1589, 3776, 1758, -1000, 3081, -1000, 3080,
	-1000, 35, -1000, -1000, 2022, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 3773, 130511, -1000, 2201, -1000, -1000, -1000, -1000,
	94699, 94699, 94699, 94699, 117294, 3313, -1000, 117294, 3311, 94699,
	-1000, -1000, 85309, -1000, 2605, 3071, -1000, -1000, -1000, -1000,
	-1000, -1000, 1650, 2359, -1000, 2683, -1000, 1637, -1000, -1000,
	-1000, 130511, 54096, -1000, -1000, 130511, 1980, -1000, 52389, 51820,
	-1000, -1000, 1752, 94699, 2777, -1000, 2777, -148, -1000, 128560,
	2679, 94699, -1000, -1000, -1000, -1000, -1000, 935, 609, 609,
	1355, 1355, 1355, 1355, 3506, 5458, 324, 425, 8870, 8870,
	1059, 1059, 1059, 1059, 1059, 8870, 6175, 515, 515, 6175,
	6175, 6175, 6175, 6175, 515, 515, 515, 8870, 8870, 8870,
	515, 130790, 130609, 11549, 49544, 49544, 1398, 2012, 584, 9828,
	49544, 8211, 8211, 8211, 8211, -1000, 1777, -1000, -1000, -1000,
	-1000, 3034, 661, 53527, 53527, -1000, -1000, -1000, -1000, 28225,
	49544, -1000, -1000, -1000, -1000, 38106, -1000, -1000, 127855, -308,
	494, -1000, 232, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 492, -102, 11, -1000,
	49544, 49544, 49544, 477, -1000, 228, 49544, 117294, -1000, 16814,
	797, -126, -1000, -90, 1428, -1000, 49544, -1000, -1000, 1395,
	-1000, 1394, 1392, 1389, -1000, 658, 474, -1000, 226, -1000,
	2315, 657, 656, 49544, -1000, -1000, -1000, -1000, -1000, 127674,
	-1000, -1000, 127244, -1000, -1000, 127063, -1000, -1000, 126965, -1000,
	-1000, -1000, -1000, -1000, 129905, 15641, 13380, 11437, 6706, 11157,
	10540, -96, 470, -103, 466, 934, 931, 465, 455, 431,
	-104, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -105, 426, -1000, 3029, -102, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 423, -1000, 411, -1000,
	129724, -102, 410, 9482, -1000, 53527, 53527, 53527, 53527, -1000,
	407, -1000, 128135, -1000, 129626, 37537, 37537, 37537, 406, 129445,
	49544, -102, -112, -1000, -113, -1000, -1000, 544, -114, 1050,
	36939, 56375, 26475, -1000, 1050, 1050, 49544, -1000, 49544, 2653,
	-1000, -1000, -1000, -1000, 2651, 2294, 2648, 57489, -1000, -1000,
	-1000, -1000, 104587, -1000, 3641, 2845, -1000, 104587, -1000, -1000,
	117294, 539, -1000, 104587, 104587, 26475, 895, -1000, 895, 104587,
	591, -1000, -1000, -1000, -1000, -1000, 405, 64784, 11, 223,
	26475, 1016, -1000, -1000, 2757, 2757, 2757, 2757, 2757, -1000,
	-1000, 117294, 1387, -31, -111, 2861, -1000, 3601, -1000, 2245,
	-1000, 70860, -1000, 812, 1158, 26475, -1000, -1000, -1000, 655,
	-1000, 3645, 3645, -1000, 3645, 117294, 3028, 257, 2859, -1000,
	213, 73073, 3764, -1000, -1000, 243, -1000, 94699, 243, 243,
	-1000, 94699, 94699, 2405, -1000, 245, -1000, 244, -1000, -1000,
	-51, -1000, 1034, 34634, -1000, 1798, -1000, -1000, 1648, -1000,
	2131, -1000, 1362, -1000, -1000, -1000, -1000, 34634, -1000, 2390,
	117294, 117294, 94699, -1000, 117294, -1000, 2262, 73073, -1000, 2468,
	121670, 2461, 70860, 117294, -1000, -1000, 652, 967, 2673, 2661,
	1154, 117294, 117294, 2658, 121123, 120576, -1000, 3761, 117294, 2237,
	49544, 3467, 2291, 2233, 182, 182, -1000, 182, 182, 182,
	-1000, 649, 1332, 94699, 94699, 117294, 73073, 94699, 1999, -1000,
	-1000, -1000, -1000, -1000, 85856, -1000, -1000, 3652, 3650, -1000,
	1434, -1000, -1000, -1000, 1434, 2005, 1969, 117294, 73073, 94699,
	73073, 120029, 119482, -1000, -1000, 1845, 117294, -1000, -1000, -1000,
	-1000, 1483, -1000, 840, 2265, 182, 182, -1000, 182, 182,
	182, 648, 26475, 2108, -1000, 3112, 117294, 3684, 118935, 3682,
	117294, 117294, 117294, 73073, 3398, 117294, 117294, 73073, -1000, 118388,
	4912, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 74201, 1144, 117294, 1316, -1000, -1000, 1844, 1369,
	1367, 85309, 2250, 1843, 1993, 117294, 60863, 1008, 60863, 2822,
	-1000, -1000, 23635, -1000, 130511, 130511, -1000, 130511, -1000, 71424,
	117294, -1000, 1086, 117294, 79797, 979, 3214, 65892, -169, 997,
	77595, 94699, -30, 2748, 117294, -1000, -1000, -1000, -1000, -1000,
	2005, 3213, 539, 2466, -1000, 77595, 3567, 3212, 647, 3760,
	3759, -1000, 94699, 2397, 2462, -1000, -1000, 117841, 3269, 840,
	117294, 1050, 57489, 2129, -1000, 63673, 1122, 117294, 2010, 145,
	-1000, -1000, -1000, 15, 117294, -1000, 820, -1000, -1000, 7308,
	7308, 997, -195, 646, -1000, 876, 875, 61427, 77595, -119,
	-1000, -1000, -1000, -1000, 2461, 94699, 117294, 1311, 2815, 117294,
	-127, -1000, 222, 645, 874, 873, -1000, 2672, -1000, -147,
	-1000, 1012, 60863, 3023, 3015, -1000, -1000, 1032, -1000, 1520,
	997, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -11, 1991, 117294, -169, -169, -42, -31, -1000,
	1014, -1000, 1014, -1000, 1014, -1000, 130511, -1000, -1000, -1000,
	1742, 1736, 117294, -1000, -1000, 117294, -1000, 26475, 117294, 94699,
	26475, 94699, 3070, 3069, -1000, -1000, -1000, 117294, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1179, -1000, 1980, 2358, -1000,
	641, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2581, -1000, -32, 34065, 919, -1000, -1000, 94699, -12, 49544,
	49544, 6814, 6418, 49544, 53527, 53527, -1000, 49544, 5012, -1000,
	-1000, -1000, -1000, -1000, 3014, 640, 49544, 70860, 8894, 6896,
	-1000, 402, 10263, 6175, -1000, 49544, -1000, 361, -1000, 401,
	36370, -1000, 128839, -1, -130, -1000, 20199, -102, -133, -1000,
	-1000, 810, -1000, 3265, -1000, 49544, 129020, 2534, 2167, 1931,
	1753, 3645, 3681, 23065, -1000, 67550, 1051, 2330, 126784, -1000,
	-1000, -1000, -1000, 70860, 70860, 49544, 49544, -1000, 49544, 49544,
	49544, -1000, -1000, -1000, 3645, 962, -1000, -1000, -1000, 962,
	-1000, -1000, 1434, -1000, 1434, -1000, 49544, -1000, -1000, 3011,
	49544, -1000, 70860, 70860, 53527, 53527, 53527, 53527, 53527, 53527,
	53527, 53527, 53527, 53527, 53527, 53527, 53527, 53527, 53527, 53527,
	53527, 53527, 53527, 53527, 2623, 53527, 3621, 3621, 3621, 1011,
	-1000, 3066, 3011, 49544, 49544, 70860, 400, 399, 398, -1000,
	49544, -102, -1000, -1000, 8553, 638, -1000, 2565, -1000, 2918,
	-1000, 49544, -1000, -120, -1000, 2501, -1000, -1000, 2918, 2918,
	-135, 130511, 57489, 57489, -1000, 636, 49544, 2643, -1000, -1000,
	796, -310, -1000, 872, -1000, -1000, -1000, -1000, -1000, -1000,
	539, -1000, -1000, -1000, 214, 104587, 104587, 795, -1000, -138,
	-1000, -1000, -149, -1000, 3565, 397, 26475, -1000, 1050, 2754,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -169, 117294, 117294,
	1832, 2347, 3679, -1000, 3646, 809, 792, 162, 3645, 396,
	394, 393, -169, 117294, 117294, 1807, 117294, -1000, -1000, -1000,
	243, -1000, -1000, -1000, 242, -1000, -1000, -1000, -1000, 2720,
	-1000, -33, -1000, -1000, -1000, 49544, -1000, -1000, 3379, 1352,
	1336, -1000, -1000, -1000, 2990, -1000, 3211, -1000, 2460, -1000,
	1130, -1000, 1693, -1000, 49544, 628, 2813, 627, 623, 3757,
	2180, 3756, 1157, 3209, 2405, 3205, 2405, -1000, -1000, -1000,
	959, -1000, 130511, 2291, -1000, 620, 619, -1000, -34, 1768,
	1951, 1325, 1029, -1000, -1000, -1000, -1000, 49544, 49544, 104040,
	-1000, 487, 3377, -19, -1000, -1000, -1000, 1793, 1267, 1265,
	-1000, -1000, -1000, -1000, 2005, 1782, 1261, 1256, -1000, -1000,
	-1000, -1000, -1000, 2455, -1000, -1000, 3203, 1027, -1000, 3158,
	3146, 929, 117294, -1000, 1026, -1000, -1000, -1000, -1000, 49544,
	-1000, -35, 1251, 3524, 2454, 94699, -1000, 2405, 3202, 1249,
	-1000, 1248, -1000, -1000, -1000, 3520, 3519, 1309, -1000, -1000,
	-1000, -1000, -1000, 73637, -1000, -1000, 1079, 117294, 73073, 94699,
	1946, -1000, -1000, 84215, 84762, 117294, 2856, -169, 914, -1000,
	2392, 914, 1008, 3001, -1000, 2723, 1025, 94699, 3753, 392,
	-150, -36, 70860, 3562, -1000, 2401, 617, 94699, 922, -1000,
	3641, -1000, -1000, -1000, 1020, -1000, 3511, 94699, 3561, 3201,
	1016, 182, 94699, 3661, -1000, -1000, 3560, 94699, 3199, 2391,
	2451, 2612, 840, 78703, 1016, 2328, -48, -1000, 2010, 35772,
	3374, -152, -1000, -1000, -1000, 1050, 66996, 57489, 49544, 3752,
	-157, -1000, -1000, -1000, -1000, -1000, 101845, 101845, 77595, 77595,
	77595, 997, 117294, 117294, 79797, -1000, -1000, 616, 117294, 117294,
	615, -1000, 117294, 117294, 3745, 77595, 77595, 77595, -39, 614,
	-1000, 870, 869, 868, -1000, -1000, -1000, -1000, -1000, -1000,
	1012, -1000, -147, 60863, 182, -1000, 2339, 94699, -1000, 22495,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 1014, -169, -1000,
	-1000, 2281, 2411, 2281, 1982, 1976, -1000, -1000, 2356, -1000,
	-1000, -1000, -1000, 2717, 3378, 26475, 3510, 8211, 49544, 49544,
	469, 5300, 5104, 8211, 49544, 49544, 70860, 131215, -158, 49544,
	49544, -1000, 49544, 790, 130511, -1000, 3677, 49544, 391, 390,
	-1000, -1000, -1000, 3642, -1000, -1000, -1000, 130511, 49544, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 388, -1000, 130, -1000,
	-1000, -1000, 124952, -1000, 49544, 387, 3466, -1000, 385, 384,
	8817, 569, 126339, 126276, 126157, 382, -1000, -1000, 378, 376,
	130511, 3066, 130511, -1000, -1000, 1038, 1038, 1390, 1390, 1390,
	1390, 3621, 278, 345, 1556, 960, 960, 960, 450, 1011,
	1011, 960, 960, 960, 1011, 2994, 2637, 613, 5475, -1000,
	-1000, 130511, 130511, 375, -1000, -1000, -1000, -102, 372, 8553,
	-1000, 2911, 3465, 130511, -1000, 57489, 2911, 2911, -1000, -1000,
	2294, 117294, 130511, 57489, -1000, 2845, -1000, 20780, -1000, 26475,
	-1000, -1000, -1000, -1000, 3641, -1000, 64784, -1000, 611, -1000,
	36, -1000, 2754, -1000, 867, -1000, -1000, 77595, 77595, -169,
	-163, 117294, -1000, -1000, 786, 3740, 805, 26475, 369, -1000,
	-1000, -1000, -169, -169, 117294, -169, -1000, -1000, -1000, 3331,
	130511, 117294, 117294, 1552, 103493, 117294, 3188, -1000, 2200, -1000,
	1154, 125691, 58046, -1000, 58046, 117294, -1000, -1000, -1000, -1000,
	2097, 1607, 3732, 1192, -1000, 3423, 117294, -1000, 117294, -1000,
	-1000, -1000, 117294, 117294, 94699, 117294, -1000, 73073, 3168, -160,
	130511, -40, -1000, 866, -1000, 1415, -1000, 21925, 117294, 73073,
	94699, 117294, 73073, 94699, 3183, 117294, 2303, -1000, -1000, 3114,
	-1000, 3167, -167, 26475, -1000, 3675, 3673, 3182, 3427, -1000,
	117294, 3672, 117294, 94699, 3329, -1000, -1000, -1000, -1000, -1000,
	-1000, 1759, 1245, 1240, 2388, -41, 2382, 2346, -42, 2250,
	1008, -43, 610, -1000, 857, -1000, -1000, 856, -1000, 1008,
	-1000, 77595, 60863, 3728, 539, -1000, 2801, -1000, 99629, 2437,
	182, -1000, 3722, 102399, 607, -1000, 2334, -1000, 785, -1000,
	2622, 73073, 2005, 182, 94699, -1000, -1000, 539, 366, -44,
	-1000, 3206, 1142, 26475, 94699, 3180, 2615, 840, 78703, -1000,
	1473, 2701, -1000, -45, -1000, 643, 182, 2328, -1000, -48,
	130511, -1000, 855, -1000, -168, -1000, -1000, 365, -1000, 3328,
	3323, -1000, 2904, 58046, 606, 601, 117294, 3322, -1000, -1000,
	-173, -1000, -1000, 2244, 2244, 77595, 60863, 77595, -1000, 1012,
	914, -1000, 2552, -1000, -1000, -1000, -1000, -1000, 26475, 1831,
	-1000, 600, 598, -1000, -1000, -1000, -1000, 3378, 8211, 8211,
	49544, 49544, 49544, 8211, 131215, -176, -1000, 8211, 8211, -102,
	-1000, -1000, 128839, -1000, -1000, -1000, 130511, -1000, 21355, 2289,
	-1000, 125572, -1000, 34065, -1000, -1000, 49544, 49544, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 53527, 2981, 597, 70860,
	-1000, -1000, 359, 1048, 49544, 51251, 2501, 1048, 1048, -1000,
	-179, -1000, -1000, -1000, 3641, 36, -1000, -1000, 3719, 26475,
	-1000, 77595, -1000, -1000, 3718, -175, 802, -1000, 3717, -1000,
	-1000, 129, -1000, -1000, -1000, 2854, 3559, -1000, 2094, -1000,
	117294, -1000, 117294, -1000, 26475, 117294, 2933, 1292, -1000, 967,
	2655, 596, 53527, 1178, 94699, 832, 2892, 2889, -1000, 3555,
	3455, 2901, -181, -1000, 117294, 49544, 117294, -184, -186, 2429,
	-1000, -1000, 1177, 1289, 49544, 1176, -1000, -1000, -1000, 70860,
	593, 2405, 2405, -189, -192, -1000, -1000, -1000, 49544, 1229,
	117294, 35203, -1000, 3715, 3377, -1000, -1000, -1000, -1000, -1000,
	-1000, 117294, -1000, 117294, -1000, 49544, 1227, -1000, -1000, -1000,
	3668, 2405, 26475, 2405, -1000, 2405, 3427, 1191, 117294, 73073,
	94699, 1865, 1865, 3064, -1000, -1000, -1000, 2523, 2523, 77595,
	60863, -1000, -51, 1008, -1000, 3558, 2798, 3714, -1000, -1000,
	-1000, -1000, 2642, -1000, -1000, 117294, 2640, 998, -1000, -201,
	-1000, 854, 852, 79797, 979, 955, -1000, -53, 590, -1000,
	847, -1000, -1000, -1000, -1000, 539, 3557, -1000, 3663, 589,
	588, 117294, 2381, 585, 26475, 3372, 840, 78703, -1000, 3269,
	2010, -1000, 2436, 117294, 3363, -1000, 2701, 584, -1000, 997,
	583, 581, 2349, 2349, -206, 58046, 58046, -208, 580, 997,
	-1000, -209, -1000, -1000, -1000, -1000, -1000, -54, -1000, 902,
	894, -1000, -1000, 94699, 94699, 49544, 49544, -1000, 8211, 8211,
	8211, -1000, 330, -1000, -1000, 2328, 3453, -1000, -65, 125509,
	18651, 706, 53527, 70860, -214, -1000, -1000, 117294, 130511, -73,
	-1000, 130511, 579, 576, 500, -1000, -1000, -1000, 784, -1000,
	-1000, -1000, 117294, 3710, -1000, 117294, 102946, 117294, -1000, -1000,
	1715, -1000, -1000, -1000, 117294, 2447, -1000, -1000, -1000, 1152,
	49544, 5475, 53527, 575, 49544, -1000, 572, 571, 3553, 3299,
	-1000, 2792, 2993, 2023, 58046, -1000, 3378, -1000, 18268, -1000,
	1136, 2075, -1000, -1000, -1000, -1000, 130511, 53527, 3427, 58046,
	-1000, -1000, 568, 567, 130511, 566, 843, 2980, -1000, -1000,
	-1000, -1000, -1000, 130511, 549, 3524, -1000, -1000, -1000, -1000,
	2405, 94699, -1000, -1000, -1000, 1225, -1000, -1000, -1000, -1000,
	3707, 3702, 2978, 84215, -1000, -215, -1000, -1000, 2081, 182,
	2269, 2851, -1000, 2437, 546, -1000, -1000, 2365, 2719, -1000,
	102399, 34634, 34634, 329, 3551, 955, -1000, 3619, -1000, 3301,
	3301, 49544, 3545, 182, -1000, 3661, 58046, -1000, 94699, 58046,
	2375, 2222, 2599, 78703, -1000, 2612, -1000, -1000, -216, 117294,
	2010, -1000, -1000, 77595, 77595, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 1136, -217, -228, -1000,
	77595, -1000, -1000, 2552, -1000, 117294, -1000, 117294, -1000, -1000,
	-229, -230, -1000, 2189, 49544, 34065, -1000, -1000, 706, -235,
	-1000, -79, -1000, 3541, 51251, 3701, 3700, 3696, -1000, -169,
	-1000, -169, -1000, 2085, -1000, -1000, -1000, 3178, 2909, 17884,
	5475, 2574, 117294, 17259, 2005, 2005, -1000, 3527, 2985, -1000,
	-1000, 2798, 542, -1000, -1000, -1000, -1000, 919, 117294, 2798,
	2897, 94699, 5475, 1146, -236, 2281, 2281, 49544, 33496, 2301,
	49544, -1000, -1000, 3427, 117294, -1000, -1000, 117294, 2366, -1000,
	2947, 3629, -1000, 979, -1000, 2300, 117294, -1000, 3419, -1000,
	3319, -1000, -1000, -1000, 2801, 182, -1000, -1000, -1000, -238,
	130511, 182, -1000, 326, -243, 1142, -248, 94699, 2091, -1000,
	840, -1000, 2615, 1050, -1000, -1000, -250, -251, 2023, 1136,
	2265, -256, -1000, -257, -259, -1000, -1000, 322, 50682, 50682,
	50682, -102, -148, -1000, 117294, 541, -1000, -1000, -1000, -1000,
	-1000, 3111, 1005, -1000, 883, 2014, 321, 1149, 308, 307,
	-1000, -1000, -1000, 2265, 117294, -1000, -1000, -1000, 1004, 539,
	-1000, 49544, 1136, -265, -1000, 1121, -268, -1000, 1120, -270,
	-1000, 2977, -1000, -273, 2405, -258, 235, 1865, 1003, 3500,
	-1000, -1000, -1000, 2365, 94699, -275, -1000, -1000, 2516, -1000,
	2798, 998, -1000, -1000, -1000, 1136, 535, 2023, 533, 1569,
	840, -1000, -1000, 1434, 3372, 3261, 997, 997, 2798, 2023,
	996, -1000, 997, -1000, -1000, -1000, 3179, -1000, 54665, 2443,
	1962, 127953, 3179, 3179, -1000, -1000, 117294, 3488, -1000, 904,
	886, 1560, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	2901, -276, 3476, 2574, 130511, 2798, -1000, 2281, 2833, -1000,
	2281, 2974, -1000, 2292, -1000, -1000, -1000, 2925, -1000, 2952,
	-1000, 1900, 3610, 2589, 532, -1000, 117294, 1941, 1930, 3695,
	2269, 2365, 2023, 58046, 2798, 58046, 2251, -1000, 117294, -1000,
	2222, 1404, -1000, -1000, 2265, 2798, 1050, 531, -1000, -1000,
	1893, 3548, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	838, -1000, 3242, -1000, 1175, 2243, 2243, 1050, -1000, 835,
	883, -1000, -1000, 530, -1000, 527, -1000, 2343, 117294, 2333,
	-1000, -1000, -1000, -1000, 117294, -1000, -1000, 3693, -1000, 979,
	-1000, 2798, -278, 2265, -284, -1000, -1000, -1000, -169, 2091,
	-1000, 1692, 996, 2265, -1000, 1947, -1000, -1000, 2324, 50113,
	49544, -1000, 3604, -1000, -1000, 2638, -1000, -1000, 49544, 2901,
	49544, 49544, -1000, 235, 65338, -285, -1000, 2365, 2265, 1136,
	996, 2023, 1569, 66996, 1050, 996, -1000, -1000, -1000, 130511,
	-1000, -1000, -1000, 130511, -1000, -286, -297, -1000, -195, 101845,
	2399, 2589, 996, 2023, 1050, 2798, 2251, -264, -1000, 1050,
	2265, 1215, -298, -1000, -1000, -1000, -1000, 1050, 2798, -1000,
	2265, -1000, -1000, -1000, -1000, -1000, 516, -1000, -1000, 2265,
	996, 49544, 996, 1050, -300, 1050, -1000, 2265, -1000, -1000,
}

var sqlPgo = [...]int{
	0, 4524, 4521, 4513, 4510, 4509, 4508, 4507, 4506, 4505,
	4504, 4499, 4498, 136, 4497, 4495, 4494, 4492, 4488, 4483,
	4480, 4476, 4473, 4471, 4469, 4468, 4466, 4465, 4463, 4461,
	4460, 4457, 4456, 4455, 4454, 4448, 4443, 4442, 4437, 4436,
	4435, 4433, 4423, 4420, 4419, 4418, 4417, 4416, 4415, 4414,
	4413, 4409, 4408, 4407, 4406, 4405, 4404, 4402, 4401, 4397,
	4394, 4393, 4392, 4389, 4388, 4387, 4386, 58, 4384, 4382,
	4381, 4372, 4368, 4366, 4365, 4364, 4363, 4361, 4360, 4359,
	4358, 4356, 4355, 4354, 4353, 4349, 4348, 4347, 64, 4346,
	281, 4345, 4344, 4343, 4342, 4339, 4336, 4330, 4329, 4328,
	4324, 4315, 4314, 278, 4313, 121, 164, 4312, 4311, 3879,
	4310, 4309, 276, 4308, 4306, 4305, 4303, 286, 4302, 4301,
	4299, 4298, 4295, 4294, 4292, 4290, 4288, 4286, 4285, 88,
	205, 4283, 4281, 786, 4280, 4277, 4274, 4273, 4271, 4270,
	4269, 4267, 4266, 4265, 255, 171, 4261, 275, 4260, 4259,
	4258, 4256, 4255, 4254, 4253, 4252, 4251, 4250, 4249, 4248,
	4247, 4242, 4240, 4238, 4234, 4233, 4232, 4229, 4228, 4227,
	4226, 4225, 4224, 4223, 4221, 4219, 4217, 4216, 4214, 4210,
	4209, 4205, 4203, 4201, 4200, 4199, 4196, 249, 221, 190,
	4195, 4193, 272, 266, 4191, 4190, 4188, 4187, 4186, 129,
	7, 35, 4184, 4181, 93, 90, 92, 111, 109, 105,
	4179, 112, 4178, 131, 68, 4176, 17, 3, 163, 241,
	12476, 236, 4174, 4172, 4171, 248, 197, 4170, 246, 4169,
	4168, 4167, 4164, 4161, 4160, 72, 52, 180, 182, 177,
	170, 25, 4158, 158, 106, 82, 60, 46, 12, 77,
	215, 20, 4, 264, 4157, 261, 11, 140, 1, 32,
	4156, 4155, 4154, 4152, 3685, 128, 4150, 265, 244, 165,
	4147, 4146, 4141, 371, 4139, 4138, 51, 4137, 411, 104,
	130, 8, 133, 4136, 151, 168, 38, 4135, 172, 61,
	4134, 159, 99, 91, 11468, 12775, 4129, 4127, 120, 67,
	178, 647, 218, 195, 202, 253, 160, 161, 125, 217,
	213, 184, 194, 4126, 259, 4124, 3545, 81, 183, 155,
	6052, 4123, 4121, 4119, 84, 204, 115, 4118, 4117, 80,
	19, 36, 2, 6, 142, 24, 23, 22, 4116, 33,
	123, 49, 30, 4115, 28, 4113, 4110, 4109, 4108, 4104,
	41, 173, 4103, 4102, 284, 4101, 86, 56, 44, 4092,
	85, 227, 4086, 234, 139, 4082, 4081, 260, 207, 186,
	4080, 74, 235, 4078, 4076, 4074, 4073, 4070, 141, 9,
	132, 4065, 4059, 147, 4057, 53, 245, 199, 4055, 70,
	4054, 4048, 181, 57, 143, 287, 137, 228, 117, 233,
	187, 237, 4047, 4046, 4045, 219, 4043, 4042, 229, 153,
	4041, 4039, 240, 288, 95, 47, 89, 239, 83, 198,
	157, 4035, 208, 4033, 4031, 285, 189, 225, 15, 14,
	102, 135, 4030, 5, 243, 156, 232, 114, 4027, 7732,
	2413, 2282, 4026, 4025, 150, 127, 79, 126, 154, 268,
	97, 4023, 4022, 2821, 4020, 4019, 4018, 4016, 192, 4015,
	4014, 4013, 148, 152, 185, 4012, 98, 73, 48, 21,
	167, 257, 283, 113, 231, 176, 262, 4011, 4010, 4009,
	188, 4007, 76, 223, 169, 206, 254, 63, 4005, 96,
	4004, 145, 252, 71, 149, 4003, 216, 4002, 3998, 3997,
	3996, 3995, 3992, 3991, 250, 242, 3990, 3988, 3987, 45,
	196, 3985, 267, 179, 175, 107, 65, 3984, 100, 3069,
	3983, 200, 1174, 59, 271, 201, 3976, 4730, 55, 3975,
	0, 15149, 8844, 12479, 14117, 3974, 2408, 3972, 3971, 3970,
	220, 144, 3969, 3966, 3965, 108, 3964, 87, 3960, 3958,
	78, 3956, 29, 16, 18, 34, 31, 269, 258, 3955,
	3954, 26, 138, 118, 3953, 274, 230, 3952, 3951, 3949,
	3948, 103, 3947, 42, 3946, 43, 3944, 3943, 50, 13,
	37, 3938, 3937, 209, 3936, 224, 256, 3929, 162, 3927,
	69, 146, 3925, 3920, 3917, 62, 66, 263, 94, 3914,
	279, 3912, 203, 3911, 3909, 27, 3906, 3905, 247, 116,
	110, 3904, 251, 134, 40, 211, 174, 214, 3903, 3902,
	166, 3900, 3896, 3894, 273, 3893, 3892, 39, 3891, 3890,
	3888, 10, 3885, 3884, 210, 3339, 3883, 3882, 54, 3881,
	193,
}

var sqlR1 = [...]int{
	0, 1, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 2, 2, 3, 3, 3, 3,
	3, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 5, 5, 5, 5, 5, 5, 5, 5, 5,
	5, 5, 5, 11, 11, 7, 7, 7, 7, 8,
	8, 8, 8, 8, 52, 52, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 37, 39, 38,
	32, 32, 33, 33, 34, 35, 35, 10, 10, 6,
	6, 6, 6, 6, 6, 6, 6, 6, 18, 18,
	40, 40, 19, 19, 42, 42, 20, 20, 43, 43,
	597, 597, 615, 615, 23, 23, 45, 45, 24, 46,
	17, 598, 598, 598, 598, 36, 25, 47, 29, 29,
	29, 29, 29, 202, 202, 202, 202, 22, 22, 41,
	41, 238, 238, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	237, 237, 237, 237, 237, 237, 237, 237, 237, 237,
	593, 593, 240, 240, 239, 232, 232, 233, 233, 234,
	234, 599, 599, 241, 241, 241, 243, 243, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 14, 493, 493,
	493, 525, 525, 525, 524, 524, 619, 619, 620, 620,
	620, 620, 620, 132, 132, 391, 391, 391, 56, 56,
	56, 56, 56, 588, 588, 204, 204, 204, 206, 206,
	205, 205, 205, 205, 205, 79, 79, 604, 604, 605,
	605, 603, 606, 606, 606, 203, 203, 203, 128, 128,
	128, 128, 128, 128, 129, 129, 130, 130, 207, 207,
	207, 209, 209, 208, 208, 208, 208, 208, 208, 208,
	208, 208, 213, 16, 16, 16, 113, 113, 113, 113,
	113, 113, 113, 113, 113, 108, 108, 527, 527, 528,
	528, 198, 198, 199, 199, 199, 199, 200, 200, 201,
	201, 201, 70, 70, 210, 210, 212, 212, 211, 211,
	211, 211, 211, 58, 58, 58, 58, 58, 58, 58,
	59, 59, 59, 59, 59, 60, 60, 60, 60, 60,
	60, 61, 61, 61, 61, 61, 61, 68, 68, 68,
	68, 68, 68, 189, 189, 71, 71, 71, 71, 71,
	71, 71, 71, 71, 71, 71, 71, 71, 76, 76,
	76, 76, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 621, 621, 621, 621, 621, 621, 621, 621, 621,
	621, 622, 622, 623, 623, 624, 624, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 625, 625, 625, 625,
	625, 625, 625, 625, 625, 625, 74, 74, 74, 74,
	74, 74, 74, 74, 74, 74, 74, 74, 74, 74,
	74, 74, 74, 85, 85, 352, 352, 315, 315, 86,
	86, 86, 87, 87, 88, 88, 72, 72, 586, 586,
	368, 368, 484, 484, 73, 594, 594, 594, 596, 596,
	595, 595, 90, 90, 390, 390, 91, 91, 91, 91,
	91, 91, 92, 92, 92, 92, 92, 92, 92, 93,
	93, 93, 93, 93, 93, 93, 93, 93, 93, 93,
	93, 93, 93, 100, 100, 100, 100, 100, 101, 101,
	101, 98, 98, 98, 95, 95, 95, 94, 94, 94,
	99, 99, 99, 585, 304, 304, 97, 97, 97, 96,
	96, 96, 369, 369, 102, 102, 102, 102, 316, 103,
	103, 103, 103, 103, 103, 103, 103, 106, 106, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	105, 105, 105, 105, 105, 105, 105, 105, 105, 105,
	107, 107, 107, 107, 107, 107, 107, 107, 107, 107,
	107, 107, 486, 486, 104, 104, 104, 451, 451, 109,
	109, 109, 406, 406, 110, 110, 110, 110, 110, 111,
	111, 111, 111, 111, 111, 111, 111, 111, 131, 131,
	131, 131, 131, 131, 131, 131, 590, 590, 361, 361,
	267, 267, 267, 267, 121, 121, 121, 121, 122, 122,
	122, 123, 123, 194, 194, 138, 138, 138, 138, 138,
	137, 137, 137, 137, 137, 137, 62, 62, 62, 63,
	63, 64, 64, 65, 65, 66, 66, 67, 67, 67,
	67, 67, 140, 140, 616, 616, 142, 139, 139, 139,
	141, 141, 141, 141, 143, 145, 145, 145, 145, 145,
	144, 144, 144, 144, 144, 146, 146, 518, 518, 377,
	377, 516, 516, 537, 537, 517, 517, 322, 322, 322,
	322, 322, 323, 323, 323, 526, 526, 526, 526, 526,
	526, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 147, 147, 147, 147, 147, 147,
	147, 147, 147, 147, 195, 195, 196, 197, 197, 197,
	197, 197, 172, 172, 172, 188, 188, 188, 188, 188,
	188, 188, 188, 175, 175, 175, 159, 159, 148, 148,
	148, 148, 148, 148, 148, 153, 153, 153, 153, 153,
	153, 153, 153, 149, 149, 161, 161, 161, 161, 161,
	154, 154, 155, 155, 155, 156, 156, 156, 156, 182,
	182, 158, 158, 160, 160, 160, 160, 160, 160, 160,
	160, 160, 150, 150, 150, 150, 163, 163, 163, 163,
	413, 413, 413, 187, 187, 162, 162, 162, 162, 162,
	162, 162, 162, 162, 162, 162, 162, 162, 162, 162,
	162, 185, 185, 185, 185, 185, 185, 607, 607, 608,
	608, 608, 179, 179, 179, 179, 179, 179, 465, 465,
	173, 173, 173, 173, 178, 178, 178, 178, 181, 181,
	181, 181, 396, 396, 170, 170, 170, 171, 171, 171,
	176, 176, 177, 353, 353, 174, 174, 180, 180, 180,
	180, 151, 151, 151, 151, 151, 151, 151, 152, 152,
	152, 152, 183, 183, 169, 169, 184, 184, 184, 184,
	184, 184, 184, 184, 184, 184, 184, 626, 626, 165,
	165, 165, 164, 164, 164, 164, 167, 167, 168, 168,
	168, 168, 168, 168, 166, 157, 186, 587, 587, 583,
	583, 583, 583, 583, 583, 583, 583, 584, 584, 584,
	584, 589, 589, 114, 114, 114, 114, 114, 124, 124,
	124, 124, 124, 115, 115, 115, 115, 115, 115, 115,
	117, 117, 116, 116, 116, 116, 80, 80, 80, 80,
	80, 15, 15, 15, 81, 81, 258, 258, 216, 216,
	216, 341, 341, 217, 217, 330, 330, 330, 330, 214,
	214, 215, 215, 82, 82, 627, 627, 627, 600, 600,
	600, 601, 601, 601, 601, 601, 601, 324, 324, 325,
	325, 431, 431, 431, 431, 431, 328, 328, 328, 329,
	329, 329, 329, 329, 329, 329, 329, 329, 331, 331,
	242, 242, 242, 339, 340, 340, 332, 332, 338, 337,
	337, 336, 336, 335, 335, 333, 334, 334, 334, 343,
	343, 342, 345, 345, 344, 430, 546, 546, 548, 548,
	548, 548, 548, 548, 548, 550, 550, 550, 550, 550,
	550, 550, 550, 550, 550, 550, 550, 550, 550, 550,
	550, 550, 414, 414, 628, 628, 629, 630, 544, 544,
	544, 545, 540, 540, 541, 541, 541, 541, 541, 326,
	326, 327, 327, 327, 327, 542, 543, 359, 359, 469,
	547, 547, 549, 549, 551, 631, 631, 631, 631, 631,
	631, 632, 632, 632, 429, 429, 428, 428, 350, 350,
	552, 552, 552, 552, 553, 553, 553, 553, 553, 556,
	555, 554, 554, 554, 554, 554, 84, 84, 84, 393,
	393, 392, 392, 394, 394, 394, 394, 394, 394, 394,
	394, 394, 394, 394, 394, 394, 394, 394, 191, 191,
	270, 270, 78, 78, 78, 12, 12, 12, 12, 12,
	12, 12, 285, 285, 13, 13, 13, 602, 602, 602,
	83, 83, 83, 83, 83, 83, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 269, 269, 592, 592, 591, 591,
	271, 271, 634, 634, 89, 89, 89, 89, 89, 89,
	89, 89, 487, 487, 488, 488, 77, 77, 77, 77,
	77, 415, 415, 412, 412, 411, 411, 358, 358, 467,
	467, 467, 468, 275, 275, 276, 276, 235, 235, 235,
	31, 30, 21, 21, 26, 26, 27, 27, 257, 257,
	257, 257, 257, 257, 257, 257, 257, 28, 28, 49,
	49, 49, 49, 50, 50, 50, 50, 53, 53, 54,
	54, 48, 48, 48, 48, 51, 51, 44, 44, 55,
	55, 55, 55, 55, 609, 611, 611, 610, 610, 614,
	614, 614, 614, 614, 614, 612, 612, 613, 613, 617,
	617, 618, 618, 120, 120, 125, 125, 125, 125, 125,
	126, 126, 126, 126, 127, 127, 127, 127, 136, 136,
	190, 190, 190, 190, 190, 190, 190, 57, 57, 57,
	57, 69, 69, 69, 69, 134, 636, 636, 636, 135,
	135, 135, 635, 635, 268, 268, 425, 425, 426, 426,
	637, 637, 427, 427, 427, 427, 427, 261, 260, 262,
	262, 263, 263, 75, 75, 75, 251, 251, 250, 252,
	252, 253, 253, 248, 248, 529, 529, 255, 255, 255,
	256, 256, 244, 244, 245, 245, 246, 246, 247, 247,
	259, 259, 638, 638, 112, 112, 112, 193, 193, 314,
	314, 314, 422, 422, 422, 351, 351, 282, 282, 424,
	424, 424, 424, 389, 389, 389, 192, 192, 366, 366,
	379, 379, 380, 380, 481, 481, 381, 118, 118, 119,
	119, 133, 133, 220, 220, 218, 218, 218, 218, 218,
	218, 218, 218, 225, 225, 226, 226, 227, 227, 228,
	229, 229, 229, 229, 370, 370, 230, 230, 230, 219,
	219, 219, 221, 221, 221, 221, 221, 221, 221, 224,
	224, 224, 224, 231, 231, 231, 223, 223, 563, 563,
	563, 565, 565, 567, 567, 566, 566, 562, 562, 564,
	564, 633, 633, 395, 395, 395, 348, 349, 346, 346,
	347, 347, 356, 356, 354, 355, 355, 357, 357, 466,
	466, 466, 236, 236, 236, 386, 386, 386, 386, 387,
	387, 418, 418, 416, 416, 416, 416, 417, 417, 419,
	419, 419, 420, 420, 421, 421, 383, 383, 384, 384,
	385, 385, 385, 385, 447, 447, 222, 222, 222, 363,
	363, 363, 364, 364, 437, 437, 437, 437, 437, 437,
	437, 438, 438, 436, 436, 436, 436, 470, 470, 470,
	470, 470, 470, 470, 470, 470, 471, 472, 472, 365,
	365, 473, 423, 423, 581, 581, 581, 582, 582, 464,
	464, 474, 474, 474, 474, 474, 474, 462, 462, 463,
	463, 482, 483, 483, 399, 399, 399, 399, 397, 397,
	400, 400, 400, 400, 400, 398, 398, 475, 475, 475,
	475, 388, 388, 476, 476, 476, 476, 477, 478, 478,
	479, 479, 432, 433, 433, 489, 489, 489, 489, 491,
	362, 362, 362, 362, 362, 539, 538, 538, 490, 490,
	490, 490, 490, 490, 490, 490, 490, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 505,
	505, 505, 505, 505, 505, 505, 505, 505, 505, 506,
	506, 506, 506, 506, 506, 506, 492, 492, 492, 492,
	492, 496, 496, 496, 495, 495, 495, 495, 495, 495,
	495, 495, 495, 495, 495, 497, 497, 502, 502, 503,
	503, 503, 498, 499, 504, 504, 504, 504, 639, 639,
	508, 508, 500, 500, 500, 500, 500, 500, 500, 500,
	500, 494, 494, 494, 501, 501, 501, 408, 408, 408,
	408, 408, 408, 408, 408, 408, 408, 408, 408, 408,
	407, 407, 409, 409, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 439, 439, 439, 439, 439, 439,
	439, 439, 439, 439, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 440, 440, 440, 440, 440,
	440, 440, 440, 440, 440, 441, 441, 441, 441, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 442, 442, 442, 442, 442, 442,
	442, 442, 442, 442, 557, 557, 557, 557, 557, 557,
	557, 557, 443, 443, 560, 560, 561, 561, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 558, 558, 558, 558, 558, 558, 558, 558, 558,
	558, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 559,
	559, 559, 559, 559, 559, 559, 559, 559, 559, 568,
	568, 569, 569, 571, 571, 572, 572, 573, 574, 574,
	574, 575, 576, 576, 570, 570, 577, 577, 577, 577,
	578, 578, 579, 579, 579, 579, 579, 580, 580, 580,
	580, 580, 453, 453, 454, 454, 460, 460, 460, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	319, 319, 319, 319, 321, 321, 320, 272, 272, 272,
	272, 272, 272, 375, 375, 373, 373, 373, 376, 376,
	374, 374, 372, 372, 371, 371, 450, 450, 448, 448,
	452, 452, 401, 401, 507, 507, 507, 507, 507, 507,
	507, 507, 402, 402, 402, 410, 403, 403, 404, 404,
	404, 404, 404, 444, 445, 405, 405, 405, 446, 446,
	455, 459, 459, 458, 457, 457, 456, 456, 434, 434,
	435, 435, 382, 382, 640, 640, 378, 378, 480, 480,
	480, 480, 318, 318, 367, 367, 317, 317, 309, 309,
	310, 310, 310, 310, 360, 360, 461, 461, 509, 509,
	510, 510, 511, 511, 512, 512, 513, 514, 515, 449,
	449, 293, 292, 279, 280, 291, 290, 289, 278, 281,
	286, 287, 288, 283, 284, 300, 299, 298, 249, 254,
	305, 306, 306, 308, 308, 307, 307, 295, 296, 297,
	485, 277, 311, 311, 312, 312, 312, 313, 313, 313,
	313, 273, 273, 274, 274, 301, 301, 302, 303, 303,
	294, 294, 294, 264, 264, 264, 265, 265, 266, 266,
	523, 523, 520, 520, 520, 521, 521, 521, 522, 522,
	522, 522, 519, 519, 519, 519, 519, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 530, 530, 530, 530, 530, 530, 530, 530,
	530, 530, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 534, 534, 534, 534, 534, 534,
	534, 534, 534, 534, 531, 531, 532, 532, 532, 532,
	532, 532, 532, 532, 532, 532, 532, 532, 532, 532,
	532, 532, 532, 532, 533, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 535, 535, 535, 535,
	535, 535, 535, 535, 535, 535, 536, 536,
}

var sqlR2 = [...]int{
	0, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 1, 1, 1, 0, 1, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 3, 1,
	1, 1, 1, 3, 4, 6, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 6, 4, 4,
	6, 9, 6, 8, 4, 4, 5, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 3, 4, 6,
	4, 6, 6, 9, 6, 9, 6, 5, 6, 5,
	1, 1, 1, 0, 6, 6, 6, 6, 6, 6,
	4, 4, 4, 4, 3, 4, 4, 4, 7, 7,
	9, 8, 9, 5, 3, 5, 7, 4, 12, 4,
	12, 1, 3, 5, 5, 2, 5, 3, 6, 4,
	4, 4, 6, 5, 6, 5, 6, 4, 8, 3,
	4, 2, 3, 10, 3, 6, 4, 3, 1, 3,
	2, 1, 1, 3, 1, 3, 2, 4, 3, 2,
	3, 2, 0, 1, 1, 0, 2, 0, 7, 10,
	6, 8, 6, 6, 6, 9, 4, 3, 2, 2,
	0, 1, 1, 1, 1, 1, 1, 3, 6, 4,
	6, 7, 9, 6, 2, 2, 3, 0, 8, 6,
	8, 7, 2, 0, 1, 2, 5, 0, 1, 3,
	3, 1, 1, 3, 1, 12, 3, 1, 0, 1,
	1, 2, 3, 3, 0, 4, 6, 0, 5, 7,
	6, 8, 8, 2, 1, 3, 1, 3, 2, 5,
	0, 1, 3, 3, 3, 3, 1, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 6, 4, 9, 7,
	12, 12, 12, 9, 2, 7, 2, 1, 1, 1,
	3, 3, 0, 3, 1, 3, 1, 1, 3, 2,
	5, 0, 7, 5, 2, 0, 1, 2, 3, 1,
	1, 2, 2, 1, 2, 1, 2, 1, 2, 2,
	3, 3, 3, 3, 3, 3, 5, 3, 3, 5,
	3, 3, 5, 3, 3, 5, 3, 6, 6, 6,
	6, 6, 4, 1, 1, 1, 2, 1, 1, 2,
	1, 2, 1, 1, 1, 2, 1, 2, 6, 3,
	8, 3, 4, 3, 3, 4, 3, 4, 4, 4,
	3, 5, 7, 3, 3, 4, 3, 3, 3, 3,
	3, 2, 0, 1, 0, 1, 0, 4, 3, 3,
	3, 3, 3, 6, 4, 4, 4, 3, 5, 3,
	3, 3, 3, 3, 3, 3, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 4, 1, 2, 1,
	2, 1, 2, 7, 3, 2, 0, 1, 3, 3,
	1, 0, 1, 2, 2, 1, 6, 5, 1, 2,
	1, 3, 2, 0, 7, 2, 5, 0, 1, 3,
	3, 1, 9, 3, 2, 0, 2, 2, 2, 2,
	2, 2, 1, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 4, 6, 5, 7, 3, 4, 6,
	3, 4, 6, 3, 5, 7, 3, 4, 6, 3,
	4, 6, 3, 1, 1, 3, 4, 6, 3, 3,
	5, 3, 1, 3, 2, 2, 2, 2, 1, 2,
	2, 5, 3, 3, 6, 6, 3, 1, 1, 1,
	1, 2, 1, 1, 1, 2, 1, 1, 2, 1,
	2, 1, 2, 1, 1, 1, 2, 1, 1, 2,
	1, 1, 1, 1, 1, 2, 1, 2, 1, 2,
	1, 2, 1, 2, 1, 2, 1, 1, 1, 2,
	1, 2, 1, 3, 5, 7, 2, 3, 0, 3,
	5, 2, 3, 0, 2, 3, 2, 3, 2, 6,
	4, 7, 7, 7, 9, 10, 5, 2, 6, 4,
	7, 7, 7, 10, 5, 2, 2, 1, 1, 3,
	1, 1, 1, 1, 1, 2, 1, 2, 2, 3,
	2, 4, 3, 2, 2, 1, 2, 1, 3, 3,
	1, 2, 1, 2, 1, 2, 1, 1, 3, 5,
	4, 6, 4, 3, 0, 1, 3, 2, 4, 2,
	4, 1, 6, 3, 1, 1, 5, 3, 2, 6,
	3, 3, 4, 4, 3, 1, 3, 3, 2, 2,
	1, 3, 3, 1, 1, 2, 1, 1, 2, 2,
	3, 1, 1, 1, 1, 1, 3, 2, 2, 1,
	2, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	1, 2, 1, 2, 1, 2, 1, 2, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 1, 2,
	1, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 1,
	2, 1, 2, 1, 2, 1, 2, 1, 2, 2,
	1, 1, 1, 2, 2, 2, 1, 3, 3, 3,
	3, 3, 2, 3, 3, 1, 1, 1, 1, 1,
	1, 2, 2, 5, 7, 3, 3, 3, 4, 4,
	6, 5, 5, 5, 3, 4, 4, 3, 4, 4,
	3, 4, 4, 5, 3, 5, 5, 5, 7, 3,
	3, 3, 4, 6, 4, 2, 6, 4, 3, 2,
	3, 4, 3, 5, 3, 6, 5, 6, 3, 5,
	6, 3, 4, 3, 4, 3, 3, 4, 4, 5,
	0, 1, 1, 1, 1, 3, 2, 3, 4, 3,
	4, 3, 5, 3, 4, 4, 3, 4, 5, 3,
	4, 3, 4, 4, 5, 3, 3, 1, 1, 0,
	2, 3, 5, 4, 6, 4, 6, 4, 1, 0,
	3, 4, 4, 5, 7, 5, 3, 3, 3, 4,
	4, 5, 2, 0, 4, 2, 3, 4, 2, 3,
	3, 3, 5, 2, 0, 3, 3, 4, 3, 3,
	3, 3, 4, 4, 4, 4, 4, 3, 4, 5,
	4, 4, 2, 3, 2, 3, 6, 6, 7, 9,
	7, 9, 4, 3, 4, 4, 5, 1, 1, 10,
	10, 3, 5, 5, 5, 3, 5, 6, 4, 4,
	5, 5, 2, 3, 2, 5, 4, 2, 0, 1,
	1, 1, 1, 3, 2, 2, 2, 2, 2, 2,
	1, 2, 0, 1, 2, 1, 2, 2, 1, 2,
	1, 2, 2, 3, 7, 3, 3, 7, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 6, 5, 8,
	3, 6, 6, 3, 13, 16, 1, 0, 1, 2,
	3, 0, 2, 0, 4, 0, 4, 5, 4, 3,
	3, 1, 3, 10, 13, 0, 2, 3, 1, 1,
	0, 1, 2, 2, 2, 2, 1, 1, 0, 1,
	3, 1, 1, 1, 2, 3, 3, 3, 0, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 8, 0,
	1, 1, 0, 2, 1, 0, 1, 0, 1, 1,
	0, 1, 4, 1, 0, 3, 7, 7, 1, 1,
	3, 7, 1, 3, 11, 3, 2, 0, 3, 1,
	2, 2, 3, 2, 6, 2, 1, 2, 2, 2,
	8, 4, 2, 3, 5, 5, 5, 2, 5, 5,
	2, 2, 2, 0, 1, 1, 3, 4, 11, 12,
	9, 5, 3, 1, 5, 10, 7, 11, 3, 3,
	0, 2, 4, 3, 3, 1, 5, 1, 3, 1,
	2, 0, 1, 2, 2, 0, 1, 3, 3, 2,
	2, 1, 1, 1, 4, 0, 6, 0, 3, 0,
	2, 2, 2, 0, 1, 1, 2, 2, 0, 3,
	3, 2, 1, 1, 2, 2, 5, 8, 4, 1,
	0, 1, 2, 2, 1, 2, 3, 3, 2, 2,
	3, 2, 2, 2, 2, 2, 3, 1, 4, 2,
	2, 2, 4, 7, 3, 4, 6, 5, 7, 5,
	5, 3, 3, 0, 2, 2, 2, 1, 1, 1,
	8, 10, 11, 7, 10, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 2, 2, 0,
	3, 3, 0, 1, 8, 11, 3, 6, 6, 5,
	3, 4, 1, 0, 1, 3, 17, 20, 16, 19,
	4, 2, 0, 1, 0, 1, 0, 1, 3, 2,
	4, 2, 3, 1, 0, 2, 0, 1, 1, 0,
	9, 6, 6, 8, 6, 8, 5, 7, 2, 6,
	7, 4, 4, 5, 2, 4, 6, 6, 8, 6,
	7, 8, 9, 6, 7, 8, 9, 6, 8, 6,
	8, 6, 7, 8, 9, 6, 8, 6, 8, 6,
	6, 8, 8, 4, 7, 3, 0, 7, 10, 1,
	1, 1, 1, 2, 2, 3, 0, 3, 0, 1,
	0, 2, 0, 2, 2, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	1, 2, 1, 2, 1, 2, 1, 3, 2, 3,
	2, 2, 2, 2, 2, 2, 1, 1, 0, 2,
	4, 2, 1, 0, 2, 1, 1, 0, 1, 3,
	1, 0, 1, 1, 1, 1, 1, 2, 3, 2,
	2, 1, 2, 13, 16, 3, 1, 0, 4, 1,
	0, 2, 2, 3, 0, 1, 1, 4, 4, 5,
	1, 0, 3, 0, 3, 0, 3, 0, 3, 0,
	4, 0, 1, 0, 6, 7, 3, 6, 3, 1,
	3, 1, 1, 4, 2, 1, 3, 1, 3, 4,
	8, 11, 5, 2, 2, 0, 10, 3, 2, 0,
	1, 3, 1, 1, 3, 3, 5, 6, 4, 5,
	4, 1, 1, 3, 3, 1, 2, 4, 4, 2,
	3, 5, 5, 1, 3, 1, 0, 1, 2, 3,
	2, 4, 2, 3, 0, 2, 0, 2, 1, 2,
	1, 1, 1, 2, 1, 2, 1, 2, 1, 8,
	8, 8, 2, 4, 4, 4, 2, 2, 2, 2,
	3, 1, 3, 1, 2, 6, 7, 1, 0, 1,
	0, 1, 0, 1, 1, 0, 1, 5, 1, 0,
	1, 0, 1, 0, 3, 3, 5, 1, 3, 3,
	4, 5, 2, 2, 0, 2, 2, 1, 1, 1,
	0, 1, 0, 2, 2, 5, 4, 2, 3, 1,
	1, 1, 1, 1, 1, 1, 3, 0, 1, 3,
	1, 3, 3, 3, 2, 0, 4, 2, 5, 3,
	2, 0, 1, 3, 3, 5, 1, 1, 1, 1,
	1, 1, 3, 2, 4, 4, 0, 4, 4, 3,
	4, 1, 5, 3, 4, 5, 5, 1, 5, 1,
	3, 2, 0, 3, 0, 2, 3, 1, 3, 2,
	0, 3, 5, 6, 4, 6, 4, 3, 2, 1,
	0, 5, 1, 0, 2, 2, 2, 1, 1, 0,
	1, 1, 1, 1, 0, 4, 2, 1, 2, 2,
	4, 1, 3, 1, 2, 3, 2, 4, 1, 0,
	1, 0, 2, 1, 0, 2, 5, 7, 2, 1,
	2, 4, 3, 5, 0, 1, 3, 5, 1, 2,
	1, 1, 1, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 4, 6, 6, 1, 1, 1, 1,
	1, 3, 5, 0, 1, 1, 1, 1, 1, 2,
	2, 2, 2, 2, 1, 3, 0, 5, 4, 1,
	2, 1, 4, 1, 1, 2, 1, 1, 1, 1,
	1, 0, 1, 2, 5, 1, 4, 2, 5, 1,
	4, 3, 3, 0, 1, 2, 4, 1, 1, 1,
	1, 1, 1, 3, 3, 3, 3, 3, 3, 3,
	1, 0, 1, 4, 1, 3, 3, 3, 5, 2,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 3, 3, 3,
	2, 2, 3, 5, 4, 6, 3, 5, 4, 6,
	4, 6, 5, 7, 3, 3, 3, 3, 3, 4,
	3, 2, 4, 2, 3, 3, 4, 3, 4, 3,
	4, 5, 6, 6, 7, 6, 7, 6, 7, 3,
	4, 4, 1, 3, 1, 3, 3, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	3, 5, 6, 6, 7, 1, 2, 1, 2, 1,
	1, 1, 1, 1, 6, 1, 1, 1, 1, 1,
	1, 2, 1, 5, 5, 6, 3, 1, 1, 1,
	2, 2, 2, 4, 3, 5, 6, 8, 6, 5,
	4, 3, 2, 2, 4, 1, 1, 1, 5, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	6, 6, 8, 8, 6, 4, 6, 6, 6, 4,
	1, 3, 3, 3, 3, 3, 4, 3, 3, 4,
	3, 3, 4, 3, 3, 4, 3, 3, 3, 3,
	3, 4, 3, 4, 3, 4, 3, 4, 4, 3,
	6, 5, 5, 5, 4, 4, 3, 4, 3, 5,
	0, 5, 0, 2, 0, 1, 3, 3, 2, 2,
	0, 6, 1, 0, 3, 0, 3, 3, 3, 0,
	1, 4, 2, 2, 2, 2, 2, 3, 2, 2,
	3, 0, 4, 1, 1, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 3, 4, 1, 1, 1,
	2, 1, 2, 2, 3, 1, 2, 3, 2, 3,
	2, 3, 1, 0, 1, 3, 1, 3, 3, 3,
	1, 3, 3, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 4, 3, 1, 2, 3, 0, 3, 3,
	2, 2, 1, 2, 2, 3, 2, 1, 1, 1,
	5, 1, 2, 4, 2, 0, 1, 0, 3, 5,
	1, 0, 1, 2, 1, 0, 1, 3, 3, 2,
	1, 1, 1, 3, 1, 3, 3, 1, 1, 1,
	1, 5, 3, 1, 1, 3, 1, 1, 1, 1,
	2, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	5, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 0, 1, 1, 1,
	1, 1, 1, 1, 3, 5, 7, 1, 7, 5,
	3, 1, 1, 1, 1, 1, 1, 1, 3, 5,
	1, 1, 1, 1, 1, 1, 1, 0, 3, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
}

var sqlChk = [...]int{
	-1000, -1, -2, 600, -105, -102, -70, -68, -109, -110,
	-91, -111, -104, -131, -136, -118, -119, -120, -132, -138,
	-190, -195, -196, -197, -3, -56, -58, -71, -90, -92,
	-103, -113, -112, -114, -121, -128, -124, -108, -62, -133,
	-137, -147, -191, -192, -193, 32, 31, 100, 80, 154,
	128, 137, 202, 384, 429, 441, 399, 142, 420, 404,
	-141, -142, 459, -57, -69, -135, -134, 73, 129, 414,
	-4, -12, -16, 29, 46, -59, -60, -61, 62, -78,
	-74, -85, -79, -72, -73, -76, -621, 102, -564, -93,
	-96, -127, -625, 161, 220, -115, -116, 366, -122, -123,
	422, -125, -126, 425, 162, -64, -63, 156, -218, -220,
	-139, -140, -194, -148, -149, -150, -151, -152, -153, -154,
	-156, -182, -157, -158, -159, -160, -161, -162, -166, -185,
	-163, -164, -165, -168, -167, -169, -174, -170, -171, -172,
	-173, -175, -176, -178, -179, -180, -181, -183, -184, 464,
	-177, -186, -155, 525, 49, 479, 82, 146, 433, 21,
	-5, -6, -7, -8, -9, -10, -11, -15, -14, -55,
	-75, -77, -80, -81, -82, -89, -83, -84, -563, -94,
	-95, -98, -100, -101, -97, -99, 421, -221, -219, 597,
	540, -18, -23, -24, -19, -20, -22, -25, -21, -26,
	-27, -28, -40, -45, -46, -42, -43, -41, -44, -47,
	-48, -49, -50, -51, -52, -53, -54, -30, -36, -37,
	-31, -32, -33, -34, -35, -38, -39, -17, -29, 561,
	570, -224, -222, -223, -231, 451, 548, 499, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	-316, 2, -295, -301, -302, -303, -294, -264, -533, -536,
	4, -530, -534, 168, 230, 330, 21, 23, 22, 24,
	25, 26, 27, 29, 30, 41, 42, 44, 45, 46,
	47, 48, 49, 53, 55, 59, 60, 61, 62, 63,
	64, 68, 73, 74, 79, 80, 81, 82, 83, 84,
	85, 91, 88, 89, 90, 92, 94, 96, 97, 98,
	99, 100, 101, 103, 104, 105, 107, 108, 109, 117,
	118, 119, 120, 121, 123, 128, 129, 132, 127, 131,
	133, 135, 136, 137, 140, 141, 142, 144, 145, 147,
	148, 149, 151, 152, 154, 155, 156, 159, 157, 507,
	158, 160, 161, 162, 163, 166, 174, 175, 176, 181,
	183, 184, 188, 189, 190, 193, 194, 195, 196, 197,
	198, 199, 200, 201, 203, 207, 209, 210, 211, 212,
	213, 219, 220, 222, 223, 224, 225, 226, 231, 232,
	233, 237, 234, 243, 244, 248, 249, 250, 252, 256,
	257, 258, 259, 260, 261, 263, 265, 264, 267, 270,
	271, 274, 278, 279, 283, 284, 280, 285, 286, 288,
	289, 292, 290, 293, 294, 291, 295, 297, 298, 299,
	300, 301, 302, 303, 304, 305, 306, 307, 308, 296,
	311, 309, 313, 314, 315, 328, 324, 325, 319, 320,
	316, 321, 317, 318, 322, 323, 327, 332, 333, 336,
	217, 338, 339, 342, 360, 346, 347, 348, 351, 352,
	355, 358, 359, 361, 362, 363, 364, 365, 366, 367,
	368, 369, 371, 372, 374, 375, 376, 378, 379, 380,
	382, 384, 385, 387, 388, 390, 391, 392, 393, 394,
	395, 396, 398, 399, 401, 400, 402, 404, 406, 407,
	408, 414, 420, 416, 417, 418, 419, 421, 422, 423,
	424, 425, 427, 428, 429, 431, 432, 433, 434, 435,
	437, 439, 440, 444, 445, 461, 462, 481, 441, 442,
	443, 446, 447, 448, 449, 450, 454, 452, 453, 455,
	456, 457, 459, 460, 463, 464, 466, 467, 468, 469,
	470, 471, 472, 475, 477, 478, 479, 498, 480, 482,
	486, 487, 488, 489, 483, 484, 497, 491, 492, 494,
	495, 500, 501, 502, 503, 504, 505, 506, 508, 510,
	518, 519, 520, 522, 525, 526, 527, 528, 516, 530,
	531, 534, 535, 536, 539, 537, 538, 540, 542, 545,
	546, 547, 553, 552, 554, 557, 562, 563, 565, 566,
	567, 36, 50, 51, 54, 56, 58, 69, 70, 71,
	75, 124, 125, 153, 164, 165, 177, 191, 192, 204,
	206, 214, 215, 216, 238, 239, 241, 246, 268, 335,
	337, 353, 357, 373, 377, 381, 383, 397, 436, 473,
	485, 490, 511, 512, 513, 514, 521, 523, 548, 549,
	550, 555, 564, -316, 2, -295, 344, -288, 2, -264,
	-264, 384, 28, 2, 28, 372, 453, 502, 504, 2,
	-590, -361, 2, 28, -267, -264, 102, 202, 451, -288,
	2, -590, -361, 25, 2, -264, 2, 358, 22, 27,
	66, 77, 98, 140, 163, 185, 188, -624, 360, 391,
	439, 455, 497, 508, 522, 2, 552, 289, 452, 499,
	230, 120, 527, 446, -602, 444, 445, 358, 389, 431,
	205, 541, -268, 2, 441, -264, 289, 2, 600, 94,
	279, 74, 436, 456, -144, 519, -145, -146, 2, -143,
	511, -518, 446, 431, 311, -264, 600, 600, 600, 28,
	-277, -264, 499, 230, 446, 120, 495, 600, 2, 499,
	363, 552, 452, 120, 394, 230, 527, 188, 140, 27,
	446, -602, 575, 576, 289, 126, -588, 2, -583, 4,
	-534, -530, -310, -309, 499, 505, 120, -303, -294, 590,
	-302, 600, 600, 600, 2, 249, 250, 393, 392, 456,
	457, 600, 600, 600, 600, 444, 2, 163, 22, 27,
	66, 93, 98, 126, 185, 188, 349, -622, 360, 391,
	455, 497, 501, 508, 522, -601, 480, 68, 419, 446,
	-600, -602, 289, 527, 140, -411, 120, 279, 200, 535,
	504, 502, 533, 132, 237, 538, 537, 600, 600, -106,
	2, 597, 32, 31, -105, -109, 142, 459, -213, 499,
	242, 2, -264, 600, 600, 2, 249, 250, 444, 445,
	600, 600, 186, -583, 2, 600, 600, 2, 249, 250,
	444, 445, 242, 2, 68, 448, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 2, -188, 456, 480, 211, 47, 46, 74, 28,
	390, 79, 364, 121, 126, 148, 528, 203, 230, 231,
	257, 93, 94, -413, 44, 250, 68, 249, 445, -607,
	444, -465, 500, 447, 453, 494, 261, 441, 519, 102,
	542, 432, 567, 394, 395, 492, 408, 280, 157, 187,
	4, 120, 311, 431, 458, 511, 279, 440, 367, 84,
	600, -633, 2, 499, -635, 2, 519, 519, 2, -635,
	2, -635, 2, -635, 2, -636, 519, 564, 600, 600,
	600, 600, 600, 600, 600, 600, 600, 600, 600, 600,
	600, 600, 600, 600, 600, 600, -219, -221, -220, 600,
	600, 600, 600, 600, 600, 600, -188, 456, 2, 74,
	28, -354, -356, 532, 240, 150, 350, -218, -220, 2,
	-563, -516, 2, -439, -537, -441, 588, 589, 581, 496,
	67, -320, 329, 568, -453, 126, 533, 344, -536, -442,
	-455, 153, 360, 436, -376, 8, 9, 5, 6, 7,
	-273, -443, -449, 524, 167, 334, -313, 601, 10, 597,
	-560, -220, -454, 37, 206, 65, -520, -312, -274, -492,
	241, -311, -294, -557, -558, 4, -530, -531, -521, -495,
	-503, -499, -500, -506, -264, -533, 77, 111, 112, 110,
	115, 114, 282, 281, 116, 113, 458, 541, 66, 36,
	214, 215, 246, 335, 216, 75, -559, 141, -532, 238,
	239, 473, 51, 397, 177, 125, 124, 337, 56, 54,
	549, -504, 122, 511, 512, 513, 514, 191, 192, 58,
	164, 165, 357, 381, 490, 521, 523, 204, 268, 43,
	106, 187, 236, 218, 245, 247, 251, 269, 272, 312,
	326, 331, 354, 356, 430, 465, -639, 550, 485, 69,
	70, -565, 400, -566, -288, -565, 600, 600, 602, 600,
	-346, -348, -349, 2, 28, 138, 597, 2, -470, 2,
	-471, -475, -220, 262, -474, 597, -472, 595, -295, 345,
	-561, 437, -557, -558, -273, -294, -312, 4, -530, -532,
	599, -350, 597, 120, 446, 499, 78, 230, 163, -406,
	597, -264, 28, 344, 515, 602, -347, 388, -451, 597,
	344, 186, 347, 60, 293, 2, 2, 2, 2, 2,
	214, -264, 499, 119, 2, 260, 2, 2, 2, 2,
	2, 2, 2, -369, 214, 2, -295, 552, -369, 214,
	2, -369, 214, 2, -412, 2, 87, -278, 214, 2,
	-264, -304, 214, 2, -299, -301, -308, 214, 2, -306,
	-264, -528, 214, 2, -527, -523, 10, -522, 5, 4,
	-530, -534, -531, -533, 77, -439, 2, -133, 2, 60,
	-264, 552, 2, 2, 461, 2, 597, -144, 71, 519,
	43, 456, -426, 2, -427, -260, -261, -262, -482, -263,
	248, 387, 396, 571, 130, 329, 567, -616, 186, 580,
	515, -516, -516, -516, -377, 599, 2, 2, 2, 2,
	2, 2, -475, 214, -295, 2, -292, -519, 4, -530,
	-534, -531, -535, 28, 31, 32, 33, 35, 37, 38,
	39, 40, 57, 65, 66, 72, 76, 78, 87, 93,
	102, 110, 111, 113, 112, 114, 115, 116, 126, 130,
	134, 138, 139, 143, 146, 150, 167, 169, 182, 185,
	186, 202, 205, 208, 221, 235, 240, 242, 262, 266,
	273, 281, 282, 329, 334, 340, 344, 345, 349, 350,
	370, 386, 403, 426, 451, 458, 476, 493, 499, 509,
	515, 517, 524, 532, 533, 541, 543, 551, 556, 558,
	559, 560, 561, -536, 2, -475, 214, 2, -298, 214,
	-475, -301, 2, -278, 2, -291, -519, 2, -317, 214,
	-295, -297, -301, -299, 2, 2, 2, 2, -306, 2,
	-527, 214, 2, 28, 28, 552, 388, 242, 515, 602,
	-367, -309, -310, -515, 8, -360, -264, 599, -439, 2,
	-133, -117, 2, 182, -439, 214, 2, -133, 214, 2,
	-439, 214, 2, -133, 214, 2, -604, 2, -527, 214,
	-264, 2, 293, 2, 2, 522, 2, 98, 499, 119,
	2, 418, -623, 439, 526, 2, 2, 2, 2, 2,
	2, 2, 499, -283, 2, -264, 182, 483, -306, 214,
	-307, 2, 452, -634, 400, -527, 214, 2, 552, -299,
	214, 2, -299, 230, 244, -278, 214, 2, 504, 502,
	504, 502, 186, 2, 242, 2, 242, 2, -476, 2,
	-477, -471, -478, 595, 345, -486, 2, -485, -522, 548,
	-106, 597, -106, 597, 456, 597, -527, -295, -295, -439,
	2, -133, -117, 2, -439, 2, -133, 2, -130, -527,
	-129, 597, 186, -439, 2, -133, -117, 2, -439, 2,
	-133, 2, -213, 182, 2, 120, 499, -188, 2, 182,
	543, 2, 8, 2, 221, -527, 447, 395, 174, 2,
	461, 2, 462, 74, -413, 567, 74, 186, 2, 186,
	2, -396, 2, 561, 388, 186, 2, 2, -587, 2,
	344, 186, 2, 186, 2, 186, 2, 186, 2, 186,
	2, -187, 457, 520, 498, 392, 250, 2, -133, 558,
	-117, 250, 249, -439, 558, 2, -608, 182, 445, -439,
	2, 518, 259, 158, 186, -396, 2, 186, 2, 186,
	2, 5, 2, 393, 481, 2, 248, 387, 481, 2,
	-295, 499, 552, 452, 120, 28, 2, 444, 2, 2,
	88, 89, 186, 2, 186, 2, 201, 186, 2, 186,
	499, 567, 2, -388, -475, -425, -426, -425, 515, -354,
	-356, -188, 461, 2, -225, -386, -227, 182, -416, -417,
	-228, 273, 169, 340, -229, -395, 28, 138, -395, -395,
	60, 598, 598, 11, 12, 76, 41, 588, 589, 590,
	591, 180, 592, 593, 586, 587, 585, 578, 579, 583,
	254, 255, 95, 582, 580, 86, 287, 438, 170, 171,
	172, 173, 415, 228, 34, 229, 14, 15, 16, -320,
	33, 349, 272, 568, 218, 465, 581, 17, 18, 19,
	245, 247, 331, 50, 221, -272, 360, -319, 496, 67,
	-439, -439, -439, -439, -439, -439, -439, -439, 356, 597,
	-382, -434, 595, -220, 597, 597, 597, 597, -515, -220,
	-439, -453, 598, -374, 597, -220, -453, -448, 597, 436,
	595, 597, -456, -439, 5, 5, 5, 597, 599, -568,
	562, 182, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 597, 597, 597, 383, -497,
	597, -496, 597, -496, -496, 553, -494, 597, 570, 563,
	597, -494, 597, 597, 597, 597, 597, 597, 597, 597,
	597, 597, 597, 597, 597, 553, 602, -565, -350, 597,
	-378, -480, -439, 590, -378, -378, 344, -371, -439, 106,
	-399, 251, 312, 187, 269, 430, 236, -436, 601, -436,
	-464, 570, -220, -472, -294, -220, -474, 597, -470, -464,
	-107, -515, -90, -103, -112, -133, -147, -192, -193, 590,
	-295, 597, 186, 597, 599, -519, 186, -360, -278, -305,
	-264, -295, -311, -312, -317, 2, 137, -371, -583, 527,
	446, 28, 452, -360, -267, 38, -450, -489, -490, -539,
	601, -538, -492, -502, -498, -501, 373, 377, -521, 54,
	549, -504, 241, 4, -530, -532, 238, 239, 473, 51,
	397, 177, 125, 124, 337, 56, 511, 512, 513, 514,
	191, 192, 58, 550, 485, 69, 70, -583, 527, 446,
	28, 452, -360, 182, -360, 2, 2, 153, 2, 2,
	2, -264, -241, 602, 64, 423, 153, -369, 214, -241,
	153, -241, 153, -318, 214, -317, -241, 153, -241, 602,
	153, -241, 602, 153, 599, 602, 153, -360, 2, -412,
	-518, -371, 38, -426, 2, 126, -524, -522, 5, -637,
	602, 271, -323, 286, 328, 210, 345, 565, 338, 130,
	-526, 5, 4, -449, -461, 126, 279, 241, -509, -511,
	8, -510, 9, -512, 588, 589, -517, -516, 109, 599,
	-519, -238, 416, 459, 359, -237, 24, 29, 142, 232,
	315, 546, 159, -336, 233, -333, 363, 153, 477, 536,
	-597, -598, 443, 506, 507, 90, 338, 459, 359, 416,
	153, -392, -394, 38, 118, 315, 358, 61, 225, 291,
	292, 479, 555, 153, 459, 359, 416, 359, -13, -253,
	24, 142, -255, -250, 459, -598, 99, 416, 574, 421,
	369, 491, 386, -598, -240, 477, 536, -597, -598, 443,
	416, -239, -338, -333, 363, 153, 601, 24, 142, 416,
	459, 359, -619, -620, 29, 416, 359, -591, -285, -562,
	221, 561, 153, -285, -285, -475, 214, -612, 182, 2,
	-605, -129, 263, 5, 10, -527, -129, -367, 602, 602,
	-519, 590, 445, 444, 153, 153, 153, 153, 182, 329,
	2, 2, 2, 2, 2, 188, -600, -624, 2, 2,
	-295, 214, -352, 344, -586, -368, 499, -295, 182, 329,
	43, -298, 214, 2, -301, 552, -591, 329, -300, 214,
	-295, 38, 597, 329, 2, -412, 2, 230, -562, 329,
	-476, -314, -295, -471, -314, 459, -288, 38, -436, -295,
	598, 602, -486, -486, -527, -201, 561, 186, 102, 597,
	597, -213, 561, 561, -483, 602, -482, 221, -528, -130,
	-527, 419, -527, -586, -278, 2, -295, 2, 499, 252,
	-527, -201, 221, -527, -527, -527, -518, 28, 462, 2,
	-187, 457, 520, 89, 462, 2, -295, 499, 120, 230,
	80, -612, 182, 2, -264, -589, 182, -584, 431, 446,
	527, -583, -295, 120, -295, 120, -295, 120, -295, -295,
	2, 2, 2, 2, 2, 85, 2, -133, -439, 2,
	85, 2, 46, 478, -608, 182, 2, 518, 2, 518,
	2, -264, -264, -264, 480, 271, -295, -295, -295, -296,
	-301, 500, 445, -439, 2, -626, 2, 186, 182, 2,
	499, 230, 499, 230, 120, 186, 74, 120, 28, 499,
	442, -241, 602, -268, -225, -386, -518, -387, -386, -226,
	-225, -228, 182, 396, 537, 315, 463, 256, -417, -416,
	28, -439, -421, 176, 314, -439, -419, -441, 588, 589,
	-510, -512, -370, 338, -219, -219, -219, -357, -466, -439,
	386, 230, -491, -489, -489, -293, -519, 511, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -439, -439, -439, -439, -439, -439, -439, -439, -439,
	-439, -439, -439, -439, 272, 218, 465, 50, 221, -439,
	515, -439, -439, -439, -439, 309, 329, 334, 524, 167,
	534, 138, 338, -640, 493, 40, -446, -220, -375, 597,
	-460, 35, 476, 28, -453, 597, 2, -434, -439, -435,
	-321, -319, -264, 588, 589, 590, 591, 592, 593, 578,
	579, 580, 14, 15, 16, 583, 587, 585, 586, 180,
	95, 582, 287, 438, 86, 170, 171, 172, 173, 254,
	255, 17, 18, 19, 34, 581, -372, -371, -371, 598,
	551, 28, 138, 590, 2, 598, 602, 38, 598, -439,
	-372, -452, -448, -371, -459, -458, 558, -407, -408, 566,
	296, 123, 212, 294, -409, 450, -513, 8, -519, 590,
	-569, 175, 205, 597, 598, 2, 598, 2, 598, -439,
	2, 598, -439, 2, 598, -439, 2, 598, -439, 2,
	598, 2, 598, 2, -439, -439, -439, -439, -439, -439,
	-439, -371, 8, -513, -513, 511, 511, -513, -513, -513,
	-505, 373, 374, 375, 376, 274, 275, 276, 277, 377,
	378, 379, 380, 301, 302, 303, 304, 297, 298, 299,
	300, 305, 306, 307, 308, 196, 197, 198, 199, 192,
	193, 194, 195, -505, -401, 2, -507, -371, 4, 566,
	296, 123, 212, 294, 450, 5, -401, 2, -402, 2,
	-439, -371, -403, -440, -441, 588, 589, 581, -320, -453,
	-404, 2, -439, -372, -439, 57, 266, 517, -405, -439,
	186, -371, -371, 2, -371, 2, -566, 38, -371, -363,
	602, 186, 38, 4, -363, -363, 597, 598, 602, -400,
	209, 290, 285, 244, -400, -470, -399, 251, -397, 354,
	-397, -397, -464, -279, 595, 603, -519, -464, -463, -462,
	38, -288, 351, -464, -464, 599, 598, -463, 596, -581,
	597, 600, 600, 600, 600, 600, -295, 597, -371, -519,
	599, 482, 2, 598, 245, 245, 245, 245, 245, 437,
	598, 515, -585, -304, -308, 500, 2, 561, -105, 346,
	598, 602, -362, 37, 595, 599, -513, 2, 2, -508,
	553, 597, 597, -408, 597, 186, -585, -308, 500, 2,
	-361, 515, -264, 2, -295, -369, -241, 153, -369, -369,
	-241, 602, 153, -278, -299, -304, -306, -308, -264, -527,
	-528, -241, -300, -616, 598, 519, -427, -322, 396, 475,
	417, 454, 495, 8, 9, 8, 9, 602, -519, 602,
	-617, 93, 515, 78, 446, -257, 280, 515, -430, 214,
	78, -540, -281, 93, -541, -264, 72, 533, 386, 185,
	151, -617, 93, 386, -617, 93, 2, 232, 93, 459,
	480, 28, 60, -475, 41, 41, 28, -615, 327, 267,
	557, 186, 567, 499, 230, 446, 515, 515, -475, -394,
	-489, 118, 291, 292, 60, -514, -509, 588, 589, -514,
	60, -514, -514, -514, 561, -298, -475, 446, 515, 515,
	515, 406, 406, -250, -145, 515, 515, 28, -188, 424,
	126, -638, 580, 406, 602, 41, 41, 28, -615, 327,
	267, 186, 515, -317, -279, 547, 42, 547, 42, 547,
	515, 42, 446, 515, 602, 42, 515, 515, -13, 459,
	-592, -269, 105, 321, 284, 322, 97, 318, 96, 317,
	103, 319, 104, 320, 554, 332, 63, 316, 295, 323,
	-270, -271, 365, 545, 120, -527, -13, -13, 459, 359,
	416, 153, -613, 221, 28, -602, 221, -483, 221, -483,
	-309, -264, 599, -133, -439, -439, -133, -439, -133, 46,
	153, 2, -634, 260, 597, -326, 329, 186, -360, -484,
	242, 602, -368, -583, 153, -525, -524, 116, 458, -393,
	-392, 329, -300, 214, 2, 153, -350, 329, 147, 597,
	394, 2, 153, -280, 214, -265, -264, -412, -244, 503,
	153, -390, 543, -422, -133, 597, 126, 38, -422, -379,
	-380, -481, -381, -281, 597, -288, -436, -106, -485, 598,
	598, 598, -200, 348, -199, -264, 5, -213, 543, -325,
	-431, -430, -544, -545, -540, 272, 230, 533, 244, 168,
	-351, -282, -281, 119, 398, 398, -207, 561, -129, -130,
	598, -483, 221, 483, -201, -201, -483, -483, -295, 182,
	-527, -201, -201, -201, 2, 2, 2, 2, -396, -295,
	-278, -317, -295, 28, 599, -360, -360, -308, -304, -396,
	-278, -396, -278, -396, -278, -133, -439, 480, 2, 456,
	182, 182, 599, -396, -353, 426, 2, 394, 120, 499,
	363, 230, -295, -317, -295, -317, -278, 120, -278, 121,
	-295, -475, -387, -226, 345, 256, 463, -419, -420, -441,
	436, 437, -420, 436, 437, 8, 9, 8, 9, -230,
	467, 333, -369, 602, -235, 39, 134, 256, -295, 567,
	149, -439, -439, 515, -640, 493, -446, 149, -439, 309,
	334, 524, 167, 534, 138, 338, 186, 597, -440, -440,
	598, -373, -439, -439, 596, 605, 598, 599, 598, -356,
	602, -354, -439, -371, -371, 598, 599, -371, -360, 596,
	596, 602, 598, -457, -458, 143, -439, 515, 515, 515,
	515, 597, 598, 599, -574, 355, 597, 597, -439, 598,
	598, 598, 598, 38, 602, 602, 602, 598, 602, 602,
	602, 598, 598, 598, 602, 598, 567, 567, 598, 598,
	598, 598, 602, 598, 602, 598, 186, 598, 598, -410,
	370, 598, 11, 12, 588, 589, 590, 591, 180, 592,
	593, 586, 587, 585, 578, 579, 580, 86, 287, 438,
	14, 15, 16, -320, 245, 221, -440, -440, -440, -440,
	598, -444, -445, 186, 182, 38, -405, -405, -405, 598,
	186, -371, 598, 598, 597, -567, 289, 329, 598, -433,
	-432, 559, -480, -364, 2, -470, -290, -519, -433, -433,
	-371, -439, 251, 251, -398, 543, 344, -400, -470, -463,
	-515, -438, -437, 184, 39, 134, 324, 325, 217, -463,
	-288, -350, -463, -463, -519, -464, -464, -462, 598, -582,
	-515, 598, -365, -473, -561, -356, 599, -519, -210, -562,
	-189, 5, 334, -189, -189, -189, -189, -360, 515, 515,
	221, 25, 371, -489, 595, 596, 8, -519, 597, -513,
	-513, -513, -360, 186, 186, 221, 186, -525, 2, -241,
	-369, -241, -241, -317, -318, -241, -241, -241, -391, 561,
	-516, -426, 531, 83, 396, 511, -516, -237, 416, -281,
	-281, -295, -305, 200, 407, -525, 329, -430, 214, -243,
	329, -489, -289, -264, 597, -414, 563, 256, 256, 543,
	-281, -289, 256, 214, -281, 214, -289, 2, -289, -593,
	396, 339, -439, 60, -334, 278, 394, 330, -238, 416,
	459, 359, -133, -133, -133, -133, -133, 597, -616, 543,
	137, -295, -317, -295, -305, -525, -300, 459, 359, 416,
	326, -311, -514, -514, -392, 459, 359, 416, -305, -525,
	-298, -525, -249, 214, -264, -249, 214, 446, -278, 406,
	567, 45, -638, -239, -133, -133, -133, -133, -133, 597,
	-279, -240, 416, 5, 214, -281, 5, -281, 214, 5,
	-264, -281, -305, -525, -620, 24, 142, -281, -305, -525,
	-269, -527, 334, 539, -278, -591, -285, 446, 515, 515,
	-475, -609, -610, 202, 429, 446, 432, -360, -129, -204,
	561, -129, -198, 226, 590, -588, -264, 552, -264, -324,
	-327, -325, -281, -216, -217, 563, 561, 153, -315, -295,
	595, -201, -527, -295, -484, -306, -307, 153, -350, 329,
	-527, 38, 153, 597, 2, 2, -299, 344, 329, -280,
	214, -245, 144, -638, -278, -433, -364, -389, -424, 426,
	344, -351, 548, -288, -389, -366, 602, 186, 580, 599,
	-351, -479, 590, -106, -106, -201, 602, 597, 580, 580,
	597, -527, -527, 598, 602, -243, -295, -280, 230, 230,
	-287, -265, 598, 602, 599, 597, 580, 580, -209, 348,
	-208, 145, 258, 243, 469, 470, 471, 472, 136, 468,
	-483, -207, -130, 186, 186, -65, 561, 499, -201, 601,
	432, -264, -396, -396, -396, 456, 456, -264, -360, -291,
	-278, -295, -292, -317, 182, 182, -278, 537, -420, 345,
	283, -466, -236, 569, -295, 601, -439, -439, 149, 149,
	-439, -440, -440, -439, 149, 186, 597, -439, -450, 33,
	33, 598, 602, -435, -439, -319, 598, 551, -356, -356,
	598, 590, -519, 601, 598, -448, 146, -439, 509, 296,
	212, 294, -409, 294, -409, -409, -513, 5, -519, 590,
	-575, -284, 597, -264, 559, -355, 350, 598, -491, -489,
	-439, -439, -439, -439, -439, -513, -494, -494, -509, -509,
	-439, -444, -439, -491, -489, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, -440, -440, -440, -440, -440,
	-440, -440, -440, -440, -440, 138, 329, 338, -440, -445,
	-444, -439, -439, -489, 598, 598, 598, -371, -105, 597,
	289, -383, 205, -439, -483, 602, -383, -383, 598, -470,
	-470, 597, -439, 251, 596, 602, 604, 580, -350, 599,
	-462, -463, 596, 598, 602, 598, 602, -423, 38, 598,
	-519, -433, -212, -211, 135, 53, 107, 133, 334, -360,
	-360, 446, 347, 5, 8, 595, 596, 599, -513, 598,
	598, 598, -360, -360, 446, -360, -241, -241, 119, 315,
	-439, 515, 515, 60, 221, 153, 329, 545, -546, -541,
	151, -439, 597, 230, 597, 597, 2, -232, -233, -234,
	142, 459, 24, -618, 2, 543, 153, -241, 153, -241,
	565, -334, 597, 597, 515, 446, -257, 515, 561, -371,
	-439, -202, 126, -518, -598, 601, -598, 601, 446, 515,
	515, 446, 515, 515, 329, 153, 561, 166, 166, 567,
	-249, 561, -371, 515, -493, 48, 26, 329, -299, -241,
	153, 515, 515, 527, 459, -527, 334, -13, -305, -525,
	-300, 459, 359, 416, -590, -361, -590, 202, -308, -613,
	-483, -206, 348, -205, 145, 428, 136, 258, 223, -483,
	-204, 186, 242, 561, -300, 2, 598, 598, 602, -547,
	38, 342, 342, 597, -295, -86, 561, -482, -515, -594,
	561, 43, -298, 38, 153, -591, -133, -300, -487, -488,
	5, 38, -295, 153, 344, 329, -246, 265, -638, -523,
	-562, -356, -389, -378, 330, 91, 598, -433, -380, -364,
	-439, 2, 598, -199, -200, -527, -527, -527, -201, -213,
	-213, -431, -328, 597, -280, -265, 597, -213, -282, 2,
	-528, -527, -527, 602, 597, 580, 580, 580, -207, -483,
	-129, -133, 348, -295, 590, -396, -340, -339, 363, 338,
	-340, 436, 436, 345, 176, 261, -235, -279, -439, -439,
	149, 33, 33, -439, -439, -450, 598, -439, -439, -371,
	596, 5, -439, 598, 598, 8, -439, 598, 599, -576,
	-264, -439, 598, 60, 598, 598, 602, 602, 598, 598,
	598, 598, 598, 598, 598, -445, 186, 138, 338, 597,
	598, 598, -105, -447, 208, 60, -470, -447, -447, -398,
	-360, -470, -437, -279, 595, -519, -515, -473, 597, 599,
	-211, 580, -527, -527, 561, -308, 596, 2, 595, -519,
	598, -308, 119, -281, -281, 499, 436, -249, 386, -430,
	153, -548, 93, -550, 76, 168, 102, 329, 334, 533,
	386, 72, 126, 344, 403, -628, -629, -630, 38, 572,
	573, 598, -358, -467, -561, 597, -264, -358, -360, 329,
	488, 126, 344, 329, 126, 344, 556, 119, 2, 527,
	79, -281, -289, -360, -360, -295, -305, -525, 160, 598,
	602, 580, 2, 590, 590, -305, -525, -300, -305, -525,
	-298, 153, -249, 361, 166, 160, 598, -279, 5, 5,
	153, -276, 76, -281, 5, -281, -299, 119, 446, 515,
	515, 344, 344, 347, -609, -610, -204, 602, 597, 580,
	580, -204, -528, -129, 2, -350, -341, 232, -281, -545,
	-542, -543, 386, -549, -551, 168, 386, -133, 2, -215,
	-214, -264, 5, 597, -326, 348, 596, -596, 348, -595,
	117, 136, -525, -393, -133, -300, -350, 598, 602, 147,
	-415, 543, -279, -295, 153, -247, 264, -638, -523, -244,
	-418, -416, 139, 597, 344, -133, -356, 580, 598, 598,
	119, 119, 224, 152, -358, 597, 597, -360, 119, 598,
	-208, -209, -527, -129, -527, -207, -483, -66, -67, 230,
	93, 368, -292, 499, 230, 597, 597, -235, -439, -439,
	-439, 598, -356, -519, 590, -570, 363, 598, -466, -439,
	-439, -440, 186, 597, -450, 598, -571, 560, -439, -384,
	-385, -439, 434, 108, 206, -571, -571, 598, -515, 2,
	-527, 2, 515, 595, 2, 186, 221, 38, 406, -430,
	-289, -293, -286, -264, 168, 214, 334, 556, -414, 256,
	597, -440, 537, -295, 597, 2, 213, 213, 30, 60,
	-631, 130, 235, 598, 602, -468, -275, -264, -439, -468,
	598, 598, 334, 537, 334, 556, -439, 537, -489, 597,
	-241, -241, 598, 598, -439, 515, -518, 100, -516, 2,
	-598, -249, -278, -439, 515, 5, -241, -293, -241, -241,
	-276, 527, -305, -525, -300, -614, 500, 453, 528, 447,
	189, 435, -614, 182, -205, -206, -527, -129, -204, 38,
	-331, 234, 2, -547, 256, -286, 256, -627, 561, 598,
	602, 580, 580, -324, -216, -87, -88, 516, -482, 602,
	597, 580, -350, 38, 5, 597, 597, -264, 344, 597,
	-279, -259, 92, -638, -523, -245, -389, 330, -360, 93,
	-418, -446, -201, 597, 597, -329, 81, 94, 127, 213,
	190, 231, 480, 486, 28, -329, 598, -358, -358, 598,
	597, -201, 598, 602, 28, 597, 28, 597, -295, -317,
	-371, -371, 598, -356, 60, 602, 598, 598, -440, -450,
	598, -572, -573, -284, 602, 597, 597, 460, 596, -360,
	2, -360, -249, 386, -264, -550, -286, 329, 543, -439,
	-440, -266, 597, -439, 597, 597, 38, 126, 235, 131,
	219, -429, -632, 101, 489, 222, -467, -235, 598, -428,
	543, 403, -440, -276, -358, 597, 597, 597, 580, 186,
	597, -493, -241, -299, 515, 2, 2, 186, -590, 598,
	-603, 401, -133, -335, -336, 221, 597, -330, 344, 119,
	315, -214, -516, -516, 598, 38, -88, 9, -595, -596,
	-439, 38, -133, -487, -358, -295, -358, 344, -251, -250,
	273, -523, -246, 598, -289, -389, -528, -528, -428, 598,
	598, -528, -67, -360, -360, 598, 598, -577, 394, 437,
	207, -371, -357, 598, 602, 38, -385, 2, 2, 2,
	406, 153, 209, 598, -552, 288, -264, 598, -393, -393,
	38, 131, 219, -331, 597, -236, -468, -331, 209, -295,
	-599, 543, 598, -343, -342, -339, -345, -344, -339, -371,
	-516, 100, 361, -371, -276, -360, -360, 344, -606, 187,
	-605, 5, 10, -216, 361, -359, -469, -281, 82, 119,
	-341, -133, 598, -133, 598, 598, -415, 598, -295, -248,
	-529, 406, 408, -638, -247, -433, 598, 598, -429, -428,
	-337, -333, 598, 598, 598, 598, -578, -579, 50, 530,
	109, -439, -578, -578, -573, -575, 168, 561, -553, -556,
	-555, 577, 466, 187, 362, 598, 488, 555, 598, 598,
	-337, -360, 561, -350, -439, -428, 598, 602, 548, 598,
	602, 548, 598, 186, 598, -241, -611, 561, -241, -614,
	-203, 561, 46, -330, -295, 598, 602, 385, 132, 142,
	-331, -627, -428, 597, -429, 597, -256, -255, -638, -509,
	-259, 139, -201, -201, -331, -429, -217, 561, -201, -580,
	151, -579, 382, 181, 436, 382, 181, -580, -580, -286,
	55, -555, 577, -556, 577, 537, 132, -631, 598, 55,
	-552, -331, -342, 221, -344, 186, 361, 202, 186, 444,
	-605, 30, -258, -257, 597, -469, 437, 437, 2, -335,
	-330, -429, -358, -331, -358, -252, -253, -254, -360, -251,
	330, 537, -337, -331, -433, 109, 205, 510, 315, 33,
	580, -554, 315, 423, 64, 459, -554, -433, 580, -553,
	597, 597, 347, -360, 348, -360, 2, -216, -331, 598,
	-337, 598, -248, 459, -217, -337, 436, 352, -579, -439,
	23, 334, 126, -439, -631, -371, -371, -241, -200, 597,
	598, -330, -337, -428, -217, -429, -256, -379, -433, -217,
	598, 598, -200, -242, 64, 423, -258, -217, -429, -433,
	-331, -252, -433, -433, -332, -333, 515, 598, -433, -331,
	-337, 597, -337, -217, -371, -217, -433, 598, -433, -332,
}

var sqlDef = [...]int{
	-2, -2, 1, 2, 3, 4, 6, 7, 8, 10,
	12, 14, 16, 18, 20, 22, 24, 26, 28, 30,
	31, 32, 33, 34, 549, 550, 552, 553, 554, 556,
	557, 559, 561, 563, 564, 565, 567, 568, 570, 571,
	572, 573, 574, 576, 578, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, -2, 0, 0,
	645, 647, 0, 1400, 1402, 1404, 1406, 0, 796, 0,
	36, 37, 39, 0, -2, 333, 335, 337, 0, 365,
	367, 368, 370, 372, 373, 374, 376, -2, 0, 482,
	483, 485, 487, -2, 0, 1003, 1005, 0, 634, 636,
	0, 1008, 1010, 0, 0, 656, 657, 0, 1511, -2,
	650, 652, 654, 721, 723, 725, 727, 729, 731, 733,
	735, 737, 739, 740, 742, 744, 746, 748, 750, 751,
	753, 755, 757, 758, 760, 761, 763, 765, 767, 769,
	771, 773, 775, 777, 779, 781, 783, 785, 787, -2,
	790, 791, 792, -2, -2, 0, -2, -2, -2, 1418,
	41, 43, 45, 47, 49, 51, 53, 55, 57, 59,
	426, 428, 430, 432, 434, 437, 439, 441, 1569, 489,
	491, 493, 495, 497, 499, 501, 0, -2, 1583, 0,
	0, 61, 62, 63, 64, 65, 66, 67, 68, 69,
	70, 71, 109, 110, 111, 112, 113, 114, 115, 116,
	75, 76, 77, 79, 80, 81, 82, 86, 87, 88,
	89, 90, 91, 92, 93, 94, 95, 107, 73, 0,
	0, 1542, 1544, 1546, 1548, -2, 0, 0, 5, 9,
	11, 13, 15, 17, 19, 21, 23, 25, 27, 29,
	551, 555, 558, 560, 562, 566, 569, 575, 577, 579,
	534, 535, 538, 2277, 2295, 2296, 2297, 2300, 2301, 2302,
	2303, 2304, 2305, 2754, 2836, 2837, 2327, 2328, 2329, 2330,
	2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340,
	2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350,
	2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360,
	2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370,
	2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
	2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390,
	2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400,
	2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410,
	2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420,
	2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430,
	2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440,
	2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450,
	2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460,
	2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470,
	2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480,
	2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490,
	2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500,
	2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510,
	2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520,
	2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530,
	2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540,
	2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550,
	2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560,
	2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570,
	2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580,
	2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590,
	2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600,
	2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610,
	2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620,
	2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630,
	2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640,
	2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650,
	2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660,
	2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670,
	2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680,
	2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690,
	2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700,
	2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710,
	2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720,
	2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730,
	2731, 2732, 2733, 536, 537, 1189, 0, 603, 601, 2262,
	604, 2552, 606, 608, 476, 477, 478, 479, 480, 481,
	0, 627, 617, 1581, 628, 630, 631, 632, 633, 598,
	596, 0, 627, 2331, 625, 1398, 1399, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 488, 0, 0, 0, 0,
	-2, 0, 0, 0, 0, 0, 0, 0, 405, 1247,
	1248, 1249, 1383, 1384, 2599, 1425, 0, 234, 646, -2,
	-2, -2, 2719, -2, 678, -2, 690, 693, 694, 685,
	2723, 0, 2602, 2586, -2, 697, 1401, 1403, 1405, 794,
	795, 2281, 0, 0, 0, 0, 0, 38, 40, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 242, 244, -2,
	-2, -2, -2, 0, 0, 2647, 2383, 2230, 2297, 2233,
	2228, 334, 336, 338, 339, 0, 0, 0, 0, 0,
	0, 366, 369, 371, 375, -2, 377, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 404, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	-2, 0, 0, 0, 0, 0, 0, 0, 0, 1066,
	1058, 1059, 1305, 0, 0, 0, -2, 484, 486, 539,
	540, 0, 1570, 1570, 547, 548, -2, 0, 0, 0,
	0, 304, 292, 1004, 1006, 1007, 0, 0, 0, 0,
	635, 637, 0, 0, 273, 1009, 1011, 1012, 0, 0,
	0, 0, 0, 306, 0, 0, 651, 653, 655, 722,
	724, 726, 728, 730, 732, 734, 736, 738, 741, 743,
	745, 747, 749, 752, 754, 756, 759, 762, 764, 766,
	768, 770, 772, 774, 776, 778, 780, 782, 784, 786,
	788, 789, 802, 0, 0, 0, 0, 0, -2, -2,
	0, 0, 0, -2, 0, -2, -2, -2, 0, 0,
	0, 0, 0, 0, 0, -2, 0, 0, 899, 0,
	0, 0, -2, -2, -2, 0, 0, 0, 0, 0,
	-2, -2, 0, 0, 0, 0, -2, 984, 0, 0,
	805, 807, 808, 809, 810, 0, 872, 897, 898, 908,
	793, 0, 1229, 1571, 1427, 1408, 1422, 1427, 1410, 1411,
	1412, 1413, 1414, 1419, 1421, 1415, 1416, 1417, 42, 44,
	46, 48, 50, 52, 54, 56, 58, 60, 427, 429,
	431, 433, 435, 438, 440, 442, -2, 1540, 1541, 490,
	492, 494, 496, 498, 500, 502, 638, 0, 640, 0,
	806, -2, 0, 1575, 1575, 1575, 0, 0, 1541, 1539,
	0, 643, 644, 701, 702, 1844, 0, 0, 0, 0,
	0, 0, 0, 0, 2104, 1932, 0, 703, -2, 1965,
	1967, 2694, 2525, 2719, 2103, 1969, 1970, 1971, 1972, 1973,
	0, 1975, 1976, 1977, 1978, 1979, 1980, 0, 1982, 0,
	1987, 1988, 1989, 0, 2701, 2207, 2291, -2, 0, 0,
	2707, 2287, 0, 2070, 2005, -2, -2, 2314, 2293, 1776,
	1777, 1778, 1779, 1780, -2, -2, 2737, 2009, 2010, 2011,
	2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 0, 2682,
	2702, 2703, 2708, 2710, 2704, 2691, 2030, 2396, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, 1803, 1812, -2, -2, -2, -2, -2, -2, -2,
	2695, 2696, 2713, 2716, 2722, 2727, 2728, 2700, 2709, 2736,
	2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747,
	2748, 2749, 2750, 2751, 2752, 2753, 1804, -2, -2, -2,
	-2, 1558, 2566, 1561, 1189, 1559, 1543, 1545, 0, 1547,
	0, 0, 0, 1552, 1578, 1576, 0, 1627, 1556, 1557,
	1646, 1646, 1670, 0, 1651, 0, 1670, 1570, 1697, 0,
	1657, 2591, 2006, 2007, 0, 2297, 2292, -2, -2, 2734,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 599,
	0, 605, 607, 0, 0, 0, 626, 1580, 0, 0,
	0, 0, 0, 0, 0, 408, 409, 410, 411, 412,
	2702, 0, 0, 0, 417, 0, 419, 420, 421, 422,
	423, 424, 425, 205, 2702, 507, 532, 0, 205, 2702,
	510, 205, 2702, 513, 0, 516, 1303, 205, 2702, 519,
	2258, 205, 2702, 522, 524, 2266, 205, 2702, 528, 2273,
	2271, 529, 2702, 531, 309, 307, 308, 2310, 2311, 2318,
	2319, 2320, 2321, 2735, 2737, 1394, 1395, 1396, 1397, 0,
	1424, 1304, 648, 649, 0, 673, 0, 677, 2690, -2,
	0, 2611, -2, 681, 1428, 1432, 1433, 1434, 1435, 1436,
	0, 0, 0, 0, 1441, 0, 0, 0, 0, 674,
	675, 688, 689, 695, 698, 0, 797, 798, 799, 800,
	801, 72, 0, 2702, 1697, 74, 0, 2252, 2322, 2323,
	2324, 2325, 2326, 2755, 2756, 2757, 2758, 2759, 2760, 2761,
	2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771,
	2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781,
	2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791,
	2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801,
	2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811,
	2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821,
	2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831,
	2832, 2833, 2834, 2835, 78, 0, 2702, 83, 0, 2702,
	0, -2, 96, 0, 108, 0, 2255, 117, 0, 2702,
	0, 2227, -2, 0, 217, 293, 294, 295, 0, 1033,
	-2, 2702, 1241, 1243, 1243, 0, -2, 0, 0, 0,
	994, 2224, 2229, 995, 2248, 996, 2234, 0, 340, 341,
	342, 343, 344, 0, 345, 2702, 347, 348, 0, 350,
	351, 2702, 353, 354, 0, 356, 0, 256, 257, 2702,
	379, 381, 0, 383, 384, 0, 386, 0, 0, 0,
	390, -2, 406, 0, 403, 393, 394, 396, 397, 398,
	399, 400, 0, 446, 444, 2263, 0, 0, -2, 2702,
	0, 1030, 0, 0, 1283, -2, 2702, 1234, 0, 1290,
	2702, 1286, 0, -2, 0, 1568, 2702, 1445, 1062, 1063,
	1064, 1065, 1709, 473, 0, 1476, 0, 1478, 0, 1497,
	1703, 1646, 0, 0, 1708, 0, -2, 592, 2280, -2,
	542, 0, 543, 0, -2, 0, 321, 0, 0, 1013,
	1015, 1016, 1018, 1019, 1022, 1023, 1024, 1025, 1683, 274,
	276, 0, 0, 1385, 1386, 1387, 1388, 1389, 1390, 1391,
	1392, 1393, 0, 0, 658, 0, 0, 803, 804, 0,
	0, 815, 816, 817, 0, 321, 2603, 2561, 2417, 824,
	0, 827, 830, -2, 0, 0, 0, 0, 834, 0,
	839, 840, 841, 0, -2, 0, 848, 850, 1002, 852,
	0, 0, 854, 0, 858, 0, 861, 0, 863, 0,
	865, -2, -2, -2, 873, 874, -2, 879, -2, 0,
	883, -2, 0, 886, 0, 889, -2, 0, 899, 895,
	896, 0, 0, 0, 0, 916, 917, 0, 926, 0,
	929, 930, 931, 0, 935, 936, 0, 938, 939, 940,
	941, 0, 2674, 2608, 2383, 0, 947, -2, 953, 955,
	0, -2, 0, 971, 0, 975, 0, 0, 983, 0,
	0, 811, 812, 205, 1701, 1407, -2, 1409, 0, -2,
	0, 639, 0, 642, 1600, 1526, 1523, 0, 1597, 1598,
	1527, 0, 0, 0, 1534, 0, 1573, 1574, 0, 0,
	0, 1513, 1514, 0, 0, 0, 0, 2109, 2110, 2111,
	2112, 2125, 2113, 2114, 2124, 2122, 2123, 2115, 2116, 2121,
	2135, 2136, 2126, 2127, 2117, 2130, 2128, 2129, 2131, 2132,
	2133, 2134, 0, 0, 2140, 0, 2118, 2119, 2120, 2148,
	0, 0, 2149, 0, 2151, 0, 2141, 2137, 2138, 2139,
	0, 1911, 1913, 2215, 0, 0, 0, 2147, 2142, 2143,
	1849, 1850, 1851, 1852, 1853, 1886, 1890, 1891, 0, 0,
	1966, 2212, 2211, 1968, 0, 0, 2163, 0, 1981, -2,
	0, 2104, 2158, 0, 0, 1990, 1991, 1992, 0, 0,
	2163, 0, 0, 2206, 2002, 2003, 1841, 0, 0, 2072,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1790, 1789,
	0, 1791, 0, 1792, 1793, 1800, 1813, 0, 0, 0,
	0, 1817, 0, 0, 0, 0, 0, 0, 0, 2187,
	-2, 0, 0, 0, 0, 1805, 0, 1560, 0, 0,
	1631, 2216, 2220, 2221, 1631, 1631, 0, 0, 2164, 1694,
	1694, 0, 0, 1689, 1689, 1689, 1687, 1670, 0, 1670,
	1680, 0, 1670, 1670, 0, -2, 1651, 0, 0, 1680,
	0, 1664, 580, 582, 584, 586, 587, 588, 590, 1698,
	1699, 0, 0, 0, 0, 2298, 0, 0, 0, 0,
	2270, 0, 0, 2283, 0, 362, 0, 0, 0, 2657,
	2602, 0, -2, 610, 629, 1570, 0, 2166, 1724, 1728,
	0, 1730, 1731, 1732, 1733, 1734, 0, 0, 1725, -2,
	1801, 1803, 1824, 2315, 2316, 2317, 1784, 1785, 1786, 1787,
	1788, 1796, 1783, 1783, 1783, 1794, 1823, 1815, 1823, 1819,
	1769, 1770, 1771, 1806, 1807, 1808, 1809, 0, 2657, 2602,
	0, -2, 619, 0, 0, 1508, 407, 0, 414, 415,
	416, 0, 503, 0, 203, 204, 0, 205, 2702, 508,
	0, 511, 0, 205, 2702, 2222, 517, 0, 520, 0,
	0, 526, 0, 0, 0, 0, 0, 205, 1510, 0,
	0, 0, 0, -2, 683, 691, 692, 224, 225, 0,
	1430, 0, 1437, 712, 713, 714, 1439, 1440, 0, 1442,
	686, 715, 716, 717, 718, 719, 720, 0, 2236, 2237,
	2238, 2239, 2242, 2243, 0, 0, 684, 705, 687, 0,
	699, 118, 1380, 0, 0, 161, 0, 1380, 1380, 0,
	0, 0, 0, 188, 0, 1101, 0, 0, 0, 0,
	133, 146, 157, 130, 131, 0, 0, 0, 0, 0,
	0, 84, 1211, 0, 1214, 0, 0, 0, 0, 0,
	0, 0, 1227, 0, 0, 0, 0, 0, 98, 99,
	0, 0, 104, 105, 0, 145, 0, 0, 0, 0,
	0, 1473, 0, 140, 120, 0, 0, 133, 147, 159,
	0, 192, 194, 1098, 0, 0, 0, 0, 0, 0,
	0, 0, 216, 226, 0, 0, 0, 1235, 0, 0,
	0, 1567, 0, 0, 0, 0, 2702, 1378, 0, 1363,
	0, 1683, 2466, -2, -2, 274, 1683, 993, 0, 0,
	2298, 2232, 0, 0, 0, 0, 0, 0, 0, 0,
	382, 385, 387, 388, 389, 0, 1282, 0, 395, 436,
	1160, 2702, 0, 0, 463, 458, 0, 460, 0, 0,
	0, 1210, 2702, 1208, 2267, 0, 1232, 0, 1189, 2702,
	2265, 0, 0, 0, 1291, 2307, 1300, 1304, 1463, 0,
	475, 0, 1479, 1481, 0, 0, 1704, 0, 1706, 1646,
	1570, 0, 0, 0, 0, 297, 0, 0, 0, 0,
	0, 0, 0, 0, 280, 0, 1682, 0, 0, 1683,
	274, 2577, 321, 321, 1683, 660, 1683, 662, 0, 0,
	818, 819, 0, 321, 321, 321, 825, 826, 828, 829,
	-2, -2, -2, -2, 831, 832, 923, 0, 0, 0,
	922, 842, 0, 844, 847, 851, 0, 987, 2586, 2602,
	2657, 1000, 923, 2383, 923, 2383, 923, 2383, 862, 864,
	867, 911, 919, 878, 885, 0, 880, 884, 887, 890,
	0, 892, 900, 0, -2, 0, 903, 0, 905, 0,
	907, 923, 924, 927, 934, 937, 942, 943, 944, 945,
	2278, 946, -2, 950, 951, 0, 962, 967, 968, 964,
	0, 0, 0, 0, 0, 0, 978, 979, 0, 0,
	986, 1228, 0, 1420, 1600, 1526, 641, 1517, 1599, 1518,
	1525, 1528, 0, 0, 1530, 0, 1532, 0, 1595, 1596,
	1603, 1604, 0, 1614, 1615, 1607, 0, -2, 0, 0,
	1610, 1611, 1536, 0, 1553, 1554, 1555, 1584, 1587, 1319,
	0, 2836, 1845, 1719, 1846, 1847, 2251, 0, 1854, 1855,
	1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, -2, -2,
	-2, -2, -2, -2, -2, -2, 1872, 1873, 1874, 1875,
	1876, 1877, 1878, 1879, 1880, 1881, 1882, -2, -2, -2,
	1887, 1888, 1889, -2, 2150, 2152, 0, 2215, 0, -2,
	0, -2, -2, -2, -2, 1908, 0, 1910, 1915, 1917,
	1919, 0, 0, 0, 0, 2214, 1929, 2198, 2199, 0,
	0, 2106, 2107, 2108, 1914, 0, 1933, 2213, 2210, 0,
	0, 2144, 0, 2109, 2110, 2111, 2112, 2113, 2114, 2115,
	2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125,
	2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135,
	2136, 2137, 2138, 2139, 2140, 2141, 0, 2162, 1583, 1994,
	0, 0, 0, 0, 2001, 1986, 2160, 0, 2159, 0,
	0, 0, 2170, 0, 2205, 2201, 0, 2249, 1840, 1827,
	1828, 1829, 1830, 1831, 1832, 1842, 0, 2246, 2284, 2290,
	2080, 0, 0, 0, 2031, 2032, 2033, 2034, 2035, 0,
	2037, 2038, 0, 2040, 2041, 0, 2043, 2044, 0, 2046,
	2047, 2048, 2049, 2050, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745,
	1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755,
	1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765,
	1766, 1767, 1768, 0, 0, 2052, 0, 2173, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 2054, 0, 2056,
	2164, 2184, 0, 0, 1934, 0, 0, 0, 0, 2104,
	0, 2059, 2164, 2192, 0, 0, 0, 0, 0, 2164,
	0, 2197, 0, 2066, 0, 2068, 1562, 0, 0, 1714,
	0, 0, 0, 2219, 1714, 1714, 0, 1626, 0, 0,
	1690, 1691, 1692, 1693, 0, 0, 1694, 0, 1684, 1688,
	1685, 1686, 1680, 1643, 0, 0, 2253, 1680, 1649, 1679,
	0, 1189, 1669, 1680, 1680, 0, -2, 1653, 1670, 0,
	0, 581, 583, 585, 589, 591, 0, 0, 1583, -2,
	0, -2, 323, 1188, 0, 0, 0, 0, 0, 600,
	602, 0, 0, 523, 0, 0, 616, 0, 594, 0,
	597, 0, 1715, 1718, 0, 0, 1729, 1735, 1736, 0,
	-2, 0, 0, 1825, 0, 0, 0, 0, 0, 624,
	0, 0, 0, 418, 533, 205, 505, 0, 205, 205,
	514, 0, 0, 205, 525, 205, 2274, 205, 2272, 310,
	530, 1509, 237, 0, 676, 0, 1429, 1438, 0, 709,
	0, 711, 0, 2240, 2244, 2241, 2245, 0, 700, 0,
	0, 0, 0, 1379, 0, 1326, 0, 0, 165, 2702,
	0, 207, 0, 0, 1153, 2259, 0, 1143, 0, 0,
	2403, 0, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 127, 0, 0, 0,
	132, 0, 0, 0, 0, 0, 0, 0, 0, 1212,
	1213, 1215, 1222, 1224, 0, 1218, 2247, 0, 0, 1219,
	0, 1221, 1223, 1225, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 106, 1244, 0, 0, 1245, 1246, 1451,
	1452, 0, 1472, 1473, 0, 0, 0, 129, 0, 0,
	0, 0, 0, 0, 2226, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1237, 0,
	1278, 1276, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263,
	1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273,
	1274, 1275, 0, 0, 0, -2, 1239, 1240, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 247, 0, 312,
	2225, 2235, 0, 1020, 1021, 346, 349, 352, 355, 243,
	0, 391, 0, 0, 1068, 1043, 0, 0, 445, 321,
	0, 0, 459, 463, 2276, 1028, 221, 222, 223, 1206,
	1209, 0, 1189, 2702, 1255, 0, 0, 0, 0, 0,
	0, 1289, 0, 0, 2702, 2254, 2306, 2307, 1465, 1473,
	0, 1714, 0, 1495, 1482, 0, 0, 0, 1495, 1499,
	1500, 1502, 1503, 0, 0, 1705, 1711, 541, 593, 1570,
	1570, 321, 319, 2528, 317, 314, 316, 0, 0, 0,
	1069, 1071, 1072, 1073, 207, 0, 2307, 1143, 2455, 2307,
	0, 1485, 1487, 0, 0, 0, 268, 0, 277, 1683,
	275, 280, 0, 0, 0, 457, 659, 664, 813, 0,
	321, 821, 822, 823, 869, 913, 921, 966, 833, 835,
	836, 837, 0, 0, 0, 1001, 997, 998, 999, 853,
	923, 856, 923, 859, 923, 882, 888, 901, 894, 902,
	0, 0, 0, 915, 932, 0, 949, 0, 0, 0,
	0, 0, 0, 0, 972, 973, 974, 976, 981, 980,
	985, 1702, 1521, 1522, 1524, 0, 1533, 0, 0, 1609,
	-2, -2, 1608, 1612, 1613, -2, -2, -2, -2, 1529,
	0, 1538, 1535, 0, 1594, 1317, 1318, 0, 0, 0,
	0, -2, -2, 0, 0, 0, 1930, 0, -2, 1909,
	1912, 1916, 1918, 1920, 0, 0, 0, 0, 0, 0,
	2153, 0, 2155, 1931, 2208, 2211, 2146, 0, 2102, 0,
	0, 1582, 1583, 1583, 0, 2000, 0, 2161, 0, 2168,
	2169, 0, 1993, 0, 2202, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2004, 0, 0, 0, 0, 2036,
	2039, 2042, 2045, 0, 0, 0, 0, 2025, 0, 0,
	0, 2029, 1795, 1781, 0, 1823, 1821, 1822, 1816, 1823,
	1820, 1773, 0, 1772, 0, 2051, 0, 2053, 2055, 0,
	0, 2057, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1937, 1938, 1939, 1959,
	2058, 2190, 2191, 0, 0, 0, 0, 0, 0, 2064,
	0, 2196, 2065, 2067, 1570, 0, 1563, 0, 1628, 1617,
	1713, 0, 2217, 1683, 1630, 1632, 2218, 2256, 1617, 1617,
	0, 2165, 0, 0, 1674, 0, 0, 0, 1676, 1647,
	0, 0, 1641, 0, 1636, 1637, 1638, 1639, 1640, 1648,
	1189, 1678, 1650, 1654, 2284, 0, 1680, 0, 1665, 0,
	1667, 1700, 0, 1659, 1662, 0, 0, 2299, 1714, 0,
	357, 363, 364, 358, 359, 360, 361, 609, 0, 0,
	0, 0, 0, 2167, 0, 1720, 0, 1726, 0, 0,
	0, 0, 618, 0, 0, 0, 0, 1507, 413, 504,
	205, 509, 512, 2223, 205, 518, 521, 527, 233, 0,
	672, -2, 707, 708, 710, 0, 706, 162, 1380, 0,
	0, 1322, 1324, 1328, 1334, 1337, 0, 167, 2702, 179,
	0, 1117, 0, 2257, 0, 0, 0, 0, 0, 0,
	1382, 0, 0, 2702, 205, 2702, 205, 182, 184, 187,
	0, 191, 189, 0, 1105, 0, 0, 1108, 119, 1380,
	0, 0, 122, 126, 134, 135, 138, 0, 0, 0,
	144, 0, 0, 0, 1339, 1343, 1351, 0, 0, 0,
	1216, 1217, 1220, 1226, 85, 0, 0, 0, 1347, 1349,
	1355, 97, 100, 2702, 2268, 102, 2702, 0, 1321, 0,
	0, 0, 0, 193, 124, 128, 136, 137, 139, 0,
	1357, 121, 0, 220, 0, 0, 210, 205, 2702, 0,
	212, 0, 213, 214, 227, 0, 0, 0, 1031, 1032,
	1277, 1230, 1231, 0, 1242, 1236, 0, 0, 0, 0,
	0, 1359, 1360, 0, 0, 0, 1378, 1375, 1683, 239,
	0, 1683, 247, 0, 2231, 0, 378, 0, 0, 0,
	0, 1067, 1171, 0, 1038, 0, 0, 0, 451, 447,
	0, 456, 462, 461, 467, -2, 0, 0, 0, 0,
	-2, 0, 0, 1293, 1287, 1288, 0, 0, 0, 0,
	2702, 1467, 1473, 0, 1568, 1583, 474, 1474, 1495, 0,
	0, 0, 1484, 1480, 1477, 1714, 0, 0, 0, 0,
	0, 1707, 1710, 544, 545, 296, 0, 0, 0, 0,
	0, 321, 0, 0, 0, 1074, 1078, 0, 2307, 2307,
	0, 2261, 0, 0, 0, 0, 0, 0, 278, 0,
	281, 0, 0, 0, 286, 287, 288, 289, 290, 291,
	280, 270, 1683, 0, 0, 661, 0, 0, 820, 0,
	843, 846, 855, 857, 860, 904, 906, 923, 933, 956,
	957, 1095, 0, 1095, 0, 0, 977, 1531, 0, 1606,
	1537, 1588, 1589, 0, 1319, 0, 1848, 1893, 0, 0,
	-2, 0, 0, 1897, 0, 0, 0, -2, 0, 0,
	0, 2154, 2156, 0, 2210, 2145, 1995, 0, 0, 0,
	1999, 1983, 1984, 0, 2105, 2171, 2200, 2204, 0, 1833,
	1834, 1835, 1836, 1837, 1838, 1839, 0, 2250, 2285, 2289,
	2078, 2079, 2083, 2264, 0, 0, 0, 2008, 0, 0,
	0, 0, 0, 0, 0, 0, 1814, 1818, 0, 0,
	2172, 2183, 2185, 1935, 1936, 1940, 1941, 1942, 1943, 1944,
	1945, 1946, 1947, 1948, 1949, -2, -2, -2, 1953, 1954,
	1955, -2, -2, -2, 1960, 0, 0, 0, 2186, 2188,
	2189, 2193, 2194, 0, 2061, 2062, 2063, 2195, 0, 1570,
	1564, 1625, 0, 1712, 1629, 0, 1625, 1625, 1577, 1672,
	0, 0, 1696, 0, 1644, 0, 1645, 0, 1677, 0,
	1652, 1655, 1656, 1666, 0, 1658, 0, 1661, 0, 1995,
	-2, 322, 324, 326, 0, 329, 330, 0, 0, 612,
	613, 0, 611, 595, 0, 0, 1722, 0, 0, 1798,
	1802, 1826, 621, 622, 0, 620, 506, 515, 235, 0,
	1681, 0, 0, 0, 0, 0, 0, 206, 1115, 1152,
	0, 0, 0, 1142, 0, 0, 1158, 169, 170, 171,
	0, 0, 0, 0, 180, 0, 0, 177, 0, 186,
	190, 1102, 0, 0, 0, 0, 1327, 0, 0, 0,
	141, 142, 143, 0, 148, 0, 149, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 1457, 1458, 0,
	1448, 0, 0, 0, 208, 0, 0, 0, 1316, 229,
	0, 0, 0, 0, 0, 1280, 1281, 1238, 1340, 1344,
	1352, 0, 0, 0, 0, 627, 0, 632, 1377, 0,
	247, 245, 0, 248, 0, 251, 252, 0, 254, 247,
	241, 0, 0, 0, 1189, 392, 1041, 1159, 0, 1161,
	0, 1039, 0, 0, 1160, 443, 0, 450, 0, 464,
	0, 0, 1210, 0, 0, 1233, 1253, 1189, 0, 1292,
	1294, 0, 1302, 0, 0, 0, 1469, 1473, 0, 1462,
	1463, 1602, 1475, 1493, -2, 0, 0, 1583, 1501, 1498,
	1504, 1505, 0, 318, 0, 313, 315, 0, 299, 0,
	0, 1070, 1075, 0, 0, 0, 0, 0, 1486, 1488,
	0, 1014, 1017, 0, 0, 0, 0, 0, 269, 280,
	1683, 305, 0, 814, 838, 914, 958, 1094, 0, 0,
	960, 0, 0, 1605, 1592, 1593, 1590, 1319, 1895, 1899,
	0, 0, 0, 1901, -2, 0, 1923, -2, -2, 2157,
	2209, 1974, 1583, 1996, 1998, 1985, 2203, 1843, 0, 2085,
	2082, 0, 2069, 0, 2020, 2021, 0, 0, 2024, 2026,
	2027, 2028, 1782, 1775, 1774, 2182, 0, 0, 0, 0,
	2060, 1565, 0, 2074, 0, 0, 1633, 2074, 2074, 1673,
	0, 1675, 1642, 1634, 0, 2285, 1668, 1660, 0, 0,
	327, 0, 331, 332, 0, 0, 1716, 1721, 0, 1727,
	1797, 0, 236, 163, 164, 1331, 1335, 1332, 0, 166,
	0, 1116, 0, 1119, 0, 0, 0, 0, 1126, 1143,
	0, 0, 0, 0, 0, 0, 1145, 0, 1144, 0,
	0, 1175, 0, 1307, 1314, 0, -2, 0, 0, 0,
	173, 196, 0, 0, 0, 0, 199, 1381, 175, 0,
	0, 205, 205, 0, 0, 1323, 1325, 1338, 0, 0,
	0, 0, 151, 0, 0, 1341, 1345, 1353, 1348, 1350,
	1356, 0, 103, 0, 1459, 0, 0, 1358, 218, 219,
	0, 205, 0, 205, 211, 205, 1316, 0, 0, 0,
	0, 0, 0, 0, 1361, 1362, 238, 0, 0, 0,
	0, 240, 311, 247, 380, 0, 1089, 0, 1171, 1163,
	1164, 1165, 0, 1170, 1172, 0, 0, 1055, 1040, 0,
	1051, 0, 0, 1068, 1043, 0, 448, 465, 0, 468,
	0, 471, 1029, 1207, 1250, 1189, 0, 1284, 0, 0,
	0, 0, 0, 0, 0, 1471, 1473, 0, 1464, 1465,
	1495, 1601, 0, 0, 0, 1483, 1602, 0, 320, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 321,
	282, 0, 283, 284, 285, 271, 272, 663, 665, 0,
	0, 671, 1093, 0, 0, 0, 0, 1591, 1903, -2,
	-2, 1924, 0, 2286, 2288, 1583, 0, 2071, 1585, 0,
	0, -2, 0, 0, 0, 1566, 1549, 0, 1624, 1616,
	1618, 1620, 2589, 2378, 2701, 1550, 1551, 1695, 0, 1663,
	328, 614, 0, 0, 1723, 0, 0, 0, 1333, 168,
	0, 1120, 1121, 2260, 1123, 0, 1125, 1127, 1128, 1129,
	0, 1132, 0, 2309, 0, 1137, 1140, 1141, 0, 0,
	1154, 1176, 0, 1185, 0, 1309, 1319, 1313, 0, 1311,
	1187, 0, 172, 198, 174, 200, 195, 0, 1316, 0,
	176, 185, 0, 0, 123, 0, 0, 2372, 154, 152,
	150, 101, 1320, 125, 0, 220, 228, 1315, 230, 215,
	205, 0, 1342, 1346, 1354, 0, 1369, 1370, 1371, 1372,
	0, 0, 0, 0, 249, 0, 250, 253, 0, 0,
	1104, 0, 1042, 1162, 0, 1173, 1174, 1045, 0, 1044,
	0, 0, 0, 0, 0, 449, 452, 0, 455, 0,
	0, 0, 0, 0, 1295, 1293, 0, 1301, 0, 0,
	0, 1447, 0, 0, 1466, 1467, 472, 1489, 0, 0,
	1495, 1506, 298, 0, 0, 1076, 1079, 1080, 1081, 1082,
	1083, 1084, 1085, 1086, 1087, 1077, 1187, 0, 0, 1151,
	0, 303, 279, 0, 667, 0, 669, 0, 959, 961,
	0, 0, 1997, 2089, 0, 0, 2022, 2023, -2, 0,
	1963, 2073, 2075, 0, 0, 0, 0, 0, 1635, 615,
	1717, 623, 1329, 0, 1336, 1118, 1122, 0, 0, 0,
	1133, 1193, 0, 0, 1210, 1210, 1146, 0, 0, 1179,
	1180, 1089, 0, 1181, 1182, 1183, 1308, 1594, 1314, 1089,
	0, 0, 197, 202, 0, 0, 0, 0, 0, 0,
	0, 209, 231, 1316, 0, 1373, 1374, 0, 0, 246,
	264, 0, 1251, 1043, 1103, 0, 0, 1053, 0, 1056,
	0, 1052, 1049, 1050, 1041, 0, 453, 454, 469, 0,
	470, 0, 1254, 0, 0, 1302, 0, 0, 1454, 1446,
	1473, 1468, 1469, 1714, 1492, 1496, 0, 0, 1185, 1187,
	1100, 0, 666, 0, 0, 969, 970, 0, 0, 0,
	0, 2084, 1586, 1964, 0, 0, 1619, 1621, 1622, 1623,
	1330, 0, 0, 1131, 1198, 0, 0, 0, 0, 0,
	1147, 1177, 1178, 1100, 0, 1312, 1310, 1156, 0, 1189,
	178, 0, 1187, 0, 1109, 0, 0, 1112, 0, 0,
	155, 2372, 153, 0, 205, 1366, 205, 0, 267, 0,
	261, 259, 260, 1045, 0, 0, 1167, 1169, 0, 1057,
	1089, 1055, 466, 1252, 1285, 1187, 0, 1185, 0, 1461,
	1473, 1455, 1456, 0, 1471, 0, 321, 321, 1089, 1185,
	1043, 1099, 321, 668, 670, 2081, 2101, 2090, -2, 2660,
	2379, 0, 2101, 2101, 2076, 2077, 0, 0, 1134, 1194,
	1195, 0, 1190, 1191, 1192, 2308, 1135, 1136, 1138, 1139,
	1175, 0, 0, 1193, 201, 1089, 1106, 0, 0, 1107,
	0, 0, 158, 0, 160, 232, 1364, 0, 1367, 0,
	255, 0, 0, 1037, 0, 1166, 0, 0, 0, 0,
	1104, 1045, 1185, 0, 1089, 0, 1450, 1460, 0, 1470,
	1447, 0, 300, 301, 1100, 1089, 1714, 0, 302, 2086,
	0, 0, 2092, 2093, 2094, 2095, 2096, 2087, 2088, 1124,
	0, 1196, 0, 1197, 0, 0, 0, 1714, 1184, 0,
	1198, 183, 1110, 0, 1113, 0, 156, 0, 0, 0,
	262, 263, 1034, 1036, 0, 1168, 1046, 0, 1048, 1043,
	1054, 1089, 0, 1100, 0, 1443, 1449, 1453, 2269, 1454,
	1490, 0, 1043, 1100, 1150, 0, 2098, 2099, 0, 0,
	0, 1199, 0, 1202, 1203, 0, 1200, 1155, 0, 1175,
	0, 0, 1365, 205, 0, 0, 1047, 1045, 1100, 1187,
	1043, 1185, 1461, 0, 1714, 1043, 2097, 2100, 2091, 1130,
	1201, 1204, 1205, 1186, 1157, 0, 0, 1368, 265, 0,
	1092, 1037, 1043, 1185, 1714, 1089, 1450, 1714, 1148, 1714,
	1097, 0, 0, 1088, 1090, 1091, 1035, 1714, 1089, 1298,
	1100, 1444, 1491, 1149, 1111, 1096, 0, 266, 1296, 1100,
	1043, 0, 1043, 1714, 0, 1714, 1299, 1097, 1297, 1114,
}

var sqlTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 586, 3, 592, 587, 3,
	597, 598, 590, 588, 602, 589, 599, 591, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 605, 3,
	578, 580, 579, 583, 601, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 595, 3, 596, 593, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 603, 585, 604, 581,
}

var sqlTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
	182, 183, 184, 185, 186, 187, 188, 189, 190, 191,
	192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 234, 235, 236, 237, 238, 239, 240, 241,
	242, 243, 244, 245, 246, 247, 248, 249, 250, 251,
	252, 253, 254, 255, 256, 257,
}

var sqlTok3 = [...]int{
	57600, 258, 57601, 259, 57602, 260, 57603, 261, 57604, 262,
	57605, 263, 57606, 264, 57607, 265, 57608, 266, 57609, 267,
	57610, 268, 57611, 269, 57612, 270, 57613, 271, 57614, 272,
	57615, 273, 57616, 274, 57617, 275, 57618, 276, 57619, 277,
	57620, 278, 57621, 279, 57622, 280, 57623, 281, 57624, 282,
	57625, 283, 57626, 284, 57627, 285, 57628, 286, 57629, 287,
	57630, 288, 57631, 289, 57632, 290, 57633, 291, 57634, 292,
	57635, 293, 57636, 294, 57637, 295, 57638, 296, 57639, 297,
	57640, 298, 57641, 299, 57642, 300, 57643, 301, 57644, 302,
	57645, 303, 57646, 304, 57647, 305, 57648, 306, 57649, 307,
	57650, 308, 57651, 309, 57652, 310, 57653, 311, 57654, 312,
	57655, 313, 57656, 314, 57657, 315, 57658, 316, 57659, 317,
	57660, 318, 57661, 319, 57662, 320, 57663, 321, 57664, 322,
	57665, 323, 57666, 324, 57667, 325, 57668, 326, 57669, 327,
	57670, 328, 57671, 329, 57672, 330, 57673, 331, 57674, 332,
	57675, 333, 57676, 334, 57677, 335, 57678, 336, 57679, 337,
	57680, 338, 57681, 339, 57682, 340, 57683, 341, 57684, 342,
	57685, 343, 57686, 344, 57687, 345, 57688, 346, 57689, 347,
	57690, 348, 57691, 349, 57692, 350, 57693, 351, 57694, 352,
	57695, 353, 57696, 354, 57697, 355, 57698, 356, 57699, 357,
	57700, 358, 57701, 359, 57702, 360, 57703, 361, 57704, 362,
	57705, 363, 57706, 364, 57707, 365, 57708, 366, 57709, 367,
	57710, 368, 57711, 369, 57712, 370, 57713, 371, 57714, 372,
	57715, 373, 57716, 374, 57717, 375, 57718, 376, 57719, 377,
	57720, 378, 57721, 379, 57722, 380, 57723, 381, 57724, 382,
	57725, 383, 57726, 384, 57727, 385, 57728, 386, 57729, 387,
	57730, 388, 57731, 389, 57732, 390, 57733, 391, 57734, 392,
	57735, 393, 57736, 394, 57737, 395, 57738, 396, 57739, 397,
	57740, 398, 57741, 399, 57742, 400, 57743, 401, 57744, 402,
	57745, 403, 57746, 404, 57747, 405, 57748, 406, 57749, 407,
	57750, 408, 57751, 409, 57752, 410, 57753, 411, 57754, 412,
	57755, 413, 57756, 414, 57757, 415, 57758, 416, 57759, 417,
	57760, 418, 57761, 419, 57762, 420, 57763, 421, 57764, 422,
	57765, 423, 57766, 424, 57767, 425, 57768, 426, 57769, 427,
	57770, 428, 57771, 429, 57772, 430, 57773, 431, 57774, 432,
	57775, 433, 57776, 434, 57777, 435, 57778, 436, 57779, 437,
	57780, 438, 57781, 439, 57782, 440, 57783, 441, 57784, 442,
	57785, 443, 57786, 444, 57787, 445, 57788, 446, 57789, 447,
	57790, 448, 57791, 449, 57792, 450, 57793, 451, 57794, 452,
	57795, 453, 57796, 454, 57797, 455, 57798, 456, 57799, 457,
	57800, 458, 57801, 459, 57802, 460, 57803, 461, 57804, 462,
	57805, 463, 57806, 464, 57807, 465, 57808, 466, 57809, 467,
	57810, 468, 57811, 469, 57812, 470, 57813, 471, 57814, 472,
	57815, 473, 57816, 474, 57817, 475, 57818, 476, 57819, 477,
	57820, 478, 57821, 479, 57822, 480, 57823, 481, 57824, 482,
	57825, 483, 57826, 484, 57827, 485, 57828, 486, 57829, 487,
	57830, 488, 57831, 489, 57832, 490, 57833, 491, 57834, 492,
	57835, 493, 57836, 494, 57837, 495, 57838, 496, 57839, 497,
	57840, 498, 57841, 499, 57842, 500, 57843, 501, 57844, 502,
	57845, 503, 57846, 504, 57847, 505, 57848, 506, 57849, 507,
	57850, 508, 57851, 509, 57852, 510, 57853, 511, 57854, 512,
	57855, 513, 57856, 514, 57857, 515, 57858, 516, 57859, 517,
	57860, 518, 57861, 519, 57862, 520, 57863, 521, 57864, 522,
	57865, 523, 57866, 524, 57867, 525, 57868, 526, 57869, 527,
	57870, 528, 57871, 529, 57872, 530, 57873, 531, 57874, 532,
	57875, 533, 57876, 534, 57877, 535, 57878, 536, 57879, 537,
	57880, 538, 57881, 539, 57882, 540, 57883, 541, 57884, 542,
	57885, 543, 57886, 544, 57887, 545, 57888, 546, 57889, 547,
	57890, 548, 57891, 549, 57892, 550, 57893, 551, 57894, 552,
	57895, 553, 57896, 554, 57897, 555, 57898, 556, 57899, 557,
	57900, 558, 57901, 559, 57902, 560, 57903, 561, 57904, 562,
	57905, 563, 57906, 564, 57907, 565, 57908, 566, 57909, 567,
	57910, 568, 57911, 569, 57912, 570, 57913, 571, 57914, 572,
	57915, 573, 57916, 574, 57917, 575, 57918, 576, 57919, 577,
	57920, 582, 57921, 584, 57922, 594, 57923, 600, 0,
}

var sqlErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

var (
	sqlDebug        = 0
	sqlErrorVerbose = false
)

type sqlLexer interface {
	Lex(lval *sqlSymType) int
	Error(s string)
}

type sqlParser interface {
	Parse(sqlLexer) int
	Lookahead() int
}

type sqlParserImpl struct {
	lval  sqlSymType
	stack [sqlInitialStackSize]sqlSymType
	char  int
}

func (p *sqlParserImpl) Lookahead() int {
	return p.char
}

func sqlNewParser() sqlParser {
	return &sqlParserImpl{}
}

const sqlFlag = -1000

func sqlTokname(c int) string {
	if c >= 1 && c-1 < len(sqlToknames) {
		if sqlToknames[c-1] != "" {
			return sqlToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func sqlStatname(s int) string {
	if s >= 0 && s < len(sqlStatenames) {
		if sqlStatenames[s] != "" {
			return sqlStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func sqlErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !sqlErrorVerbose {
		return "syntax error"
	}

	for _, e := range sqlErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + sqlTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := sqlPact[state]
	for tok := TOKSTART; tok-1 < len(sqlToknames); tok++ {
		if n := base + tok; n >= 0 && n < sqlLast && sqlChk[sqlAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if sqlDef[state] == -2 {
		i := 0
		for sqlExca[i] != -1 || sqlExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; sqlExca[i] >= 0; i += 2 {
			tok := sqlExca[i]
			if tok < TOKSTART || sqlExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if sqlExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += sqlTokname(tok)
	}
	return res
}

func sqllex1(lex sqlLexer, lval *sqlSymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = sqlTok1[0]
		goto out
	}
	if char < len(sqlTok1) {
		token = sqlTok1[char]
		goto out
	}
	if char >= sqlPrivate {
		if char < sqlPrivate+len(sqlTok2) {
			token = sqlTok2[char-sqlPrivate]
			goto out
		}
	}
	for i := 0; i < len(sqlTok3); i += 2 {
		token = sqlTok3[i+0]
		if token == char {
			token = sqlTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = sqlTok2[1] /* unknown char */
	}
	if sqlDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", sqlTokname(token), uint(char))
	}
	return char, token
}

func sqlParse(sqllex sqlLexer) int {
	return sqlNewParser().Parse(sqllex)
}

func (sqlrcvr *sqlParserImpl) Parse(sqllex sqlLexer) int {
	var sqln int
	var sqlVAL sqlSymType
	var sqlDollar []sqlSymType
	_ = sqlDollar // silence set and not used
	sqlS := sqlrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	sqlstate := 0
	sqlrcvr.char = -1
	sqltoken := -1 // sqlrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		sqlstate = -1
		sqlrcvr.char = -1
		sqltoken = -1
	}()
	sqlp := -1
	goto sqlstack

ret0:
	return 0

ret1:
	return 1

sqlstack:
	/* put a state and value onto the stack */
	if sqlDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", sqlTokname(sqltoken), sqlStatname(sqlstate))
	}

	sqlp++
	if sqlp >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlS[sqlp] = sqlVAL
	sqlS[sqlp].yys = sqlstate

sqlnewstate:
	sqln = sqlPact[sqlstate]
	if sqln <= sqlFlag {
		goto sqldefault /* simple state */
	}
	if sqlrcvr.char < 0 {
		sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
	}
	sqln += sqltoken
	if sqln < 0 || sqln >= sqlLast {
		goto sqldefault
	}
	sqln = sqlAct[sqln]
	if sqlChk[sqln] == sqltoken { /* valid shift */
		sqlrcvr.char = -1
		sqltoken = -1
		sqlVAL = sqlrcvr.lval
		sqlstate = sqln
		if Errflag > 0 {
			Errflag--
		}
		goto sqlstack
	}

sqldefault:
	/* default state action */
	sqln = sqlDef[sqlstate]
	if sqln == -2 {
		if sqlrcvr.char < 0 {
			sqlrcvr.char, sqltoken = sqllex1(sqllex, &sqlrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if sqlExca[xi+0] == -1 && sqlExca[xi+1] == sqlstate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			sqln = sqlExca[xi+0]
			if sqln < 0 || sqln == sqltoken {
				break
			}
		}
		sqln = sqlExca[xi+1]
		if sqln < 0 {
			goto ret0
		}
	}
	if sqln == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			sqllex.Error(sqlErrorMessage(sqlstate, sqltoken))
			Nerrs++
			if sqlDebug >= 1 {
				__yyfmt__.Printf("%s", sqlStatname(sqlstate))
				__yyfmt__.Printf(" saw %s\n", sqlTokname(sqltoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for sqlp >= 0 {
				sqln = sqlPact[sqlS[sqlp].yys] + sqlErrCode
				if sqln >= 0 && sqln < sqlLast {
					sqlstate = sqlAct[sqln] /* simulate a shift of "error" */
					if sqlChk[sqlstate] == sqlErrCode {
						goto sqlstack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if sqlDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", sqlS[sqlp].yys)
				}
				sqlp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if sqlDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", sqlTokname(sqltoken))
			}
			if sqltoken == sqlEofCode {
				goto ret1
			}
			sqlrcvr.char = -1
			sqltoken = -1
			goto sqlnewstate /* try again in the same state */
		}
	}

	/* reduction by production sqln */
	if sqlDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", sqln, sqlStatname(sqlstate))
	}

	sqlnt := sqln
	sqlpt := sqlp
	_ = sqlpt // guard against "declared and not used"

	sqlp -= sqlR2[sqln]
	// sqlp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if sqlp+1 >= len(sqlS) {
		nyys := make([]sqlSymType, len(sqlS)*2)
		copy(nyys, sqlS)
		sqlS = nyys
	}
	sqlVAL = sqlS[sqlp+1]

	/* consult goto table to find next state */
	sqln = sqlR1[sqln]
	sqlg := sqlPgo[sqln]
	sqlj := sqlg + sqlS[sqlp].yys + 1

	if sqlj >= sqlLast {
		sqlstate = sqlAct[sqlg]
	} else {
		sqlstate = sqlAct[sqlj]
		if sqlChk[sqlstate] != -sqln {
			sqlstate = sqlAct[sqlg]
		}
	}
	// dummy call; replaced with literal code
	switch sqlnt {

	case 1:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1468
		{
			sqllex.(*lexer).SetStmt(sqlDollar[1].union.stmt())
		}
	case 2:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1473
		{
			return helpWith(sqllex, "")
		}
	case 5:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1475
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 9:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1478
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 11:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1479
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 13:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1480
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 15:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1481
		{
			return helpWith(sqllex, "GRANT")
		}
	case 17:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1482
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 19:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1483
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 21:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1484
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 23:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1485
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 25:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1486
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 27:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1487
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 29:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1488
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 35:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1495
		{
			sqlVAL.union.val = tree.Statement(nil)
		}
	case 38:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1504
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 40:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1506
		{
			return helpWith(sqllex, "ALTER")
		}
	case 42:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1509
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 44:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1510
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 46:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1511
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 48:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1512
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 50:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1513
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 52:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1514
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 54:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1515
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 56:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1516
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 58:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1517
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 60:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:1518
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 72:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1577
		{
			return helpWith(sqllex, "ALTER TABLE")
		}
	case 74:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1603
		{
			return helpWith(sqllex, "ALTER PARTITION")
		}
	case 78:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1617
		{
			return helpWith(sqllex, "ALTER VIEW")
		}
	case 83:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1635
		{
			return helpWith(sqllex, "ALTER SEQUENCE")
		}
	case 84:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1639
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[3].union.unresolvedObjectName(), Options: sqlDollar[4].union.seqOpts(), IfExists: false}
		}
	case 85:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1643
		{
			sqlVAL.union.val = &tree.AlterSequence{Name: sqlDollar[5].union.unresolvedObjectName(), Options: sqlDollar[6].union.seqOpts(), IfExists: true}
		}
	case 96:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1673
		{
			return helpWith(sqllex, "ALTER DATABASE")
		}
	case 97:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1677
		{
			sqlVAL.union.val = &tree.AlterDatabaseOwner{Name: tree.Name(sqlDollar[3].str), Owner: sqlDollar[6].union.user()}
		}
	case 98:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1684
		{

			sqlVAL.union.val = &tree.AlterRoleSet{
				AllRoles:     true,
				DatabaseName: tree.Name(sqlDollar[3].str),
				IsRole:       true,
				SetOrReset:   sqlDollar[4].union.setVar(),
			}
		}
	case 99:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1696
		{

			sqlVAL.union.val = &tree.AlterDatabasePlacement{
				Name:      tree.Name(sqlDollar[3].str),
				Placement: sqlDollar[4].union.dataPlacement(),
			}
		}
	case 100:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1706
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 101:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1713
		{
			sqlVAL.union.val = &tree.AlterDatabaseAddRegion{
				Name:        tree.Name(sqlDollar[3].str),
				Region:      tree.Name(sqlDollar[9].str),
				IfNotExists: true,
			}
		}
	case 102:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1723
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:   tree.Name(sqlDollar[3].str),
				Region: tree.Name(sqlDollar[6].str),
			}
		}
	case 103:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:1730
		{
			sqlVAL.union.val = &tree.AlterDatabaseDropRegion{
				Name:     tree.Name(sqlDollar[3].str),
				Region:   tree.Name(sqlDollar[8].str),
				IfExists: true,
			}
		}
	case 104:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1740
		{
			sqlVAL.union.val = &tree.AlterDatabaseSurvivalGoal{
				Name:         tree.Name(sqlDollar[3].str),
				SurvivalGoal: sqlDollar[4].union.survivalGoal(),
			}
		}
	case 105:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1749
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[4].str),
			}
		}
	case 106:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1756
		{
			sqlVAL.union.val = &tree.AlterDatabasePrimaryRegion{
				Name:          tree.Name(sqlDollar[3].str),
				PrimaryRegion: tree.Name(sqlDollar[5].str),
			}
		}
	case 108:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1780
		{
			return helpWith(sqllex, "ALTER RANGE")
		}
	case 117:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1812
		{
			return helpWith(sqllex, "ALTER INDEX")
		}
	case 118:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1816
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[3].union.unresolvedObjectName(), IfExists: false, Cmds: sqlDollar[4].union.alterTableCmds()}
		}
	case 119:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1820
		{
			sqlVAL.union.val = &tree.AlterTable{Table: sqlDollar[5].union.unresolvedObjectName(), IfExists: true, Cmds: sqlDollar[6].union.alterTableCmds()}
		}
	case 120:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1826
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[3].union.tableIndexName(), IfExists: false, Cmds: sqlDollar[4].union.alterIndexCmds()}
		}
	case 121:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1830
		{
			sqlVAL.union.val = &tree.AlterIndex{Index: sqlDollar[5].union.tableIndexName(), IfExists: true, Cmds: sqlDollar[6].union.alterIndexCmds()}
		}
	case 122:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1836
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   tree.Expr(nil),
			}
		}
	case 123:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1845
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Split{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
				ExpireExpr:   sqlDollar[9].union.expr(),
			}
		}
	case 124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1856
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: tree.Expr(nil)}
		}
	case 125:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:1860
		{
			sqlVAL.union.val = &tree.Split{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), ExpireExpr: sqlDollar[9].union.expr()}
		}
	case 126:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1866
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 127:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1874
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Unsplit{
				TableOrIndex: tree.TableIndexName{Table: name},
				All:          true,
			}
		}
	case 128:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1884
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 129:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:1888
		{
			sqlVAL.union.val = &tree.Unsplit{TableOrIndex: sqlDollar[3].union.tableIndexName(), All: true}
		}
	case 132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:1897
		{
		}
	case 133:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:1898
		{
		}
	case 134:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1902
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex: tree.TableIndexName{Table: name},
				Rows:         sqlDollar[6].union.slct(),
			}
		}
	case 135:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1911
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:      tree.TableIndexName{Table: name},
				Rows:              sqlDollar[6].union.slct(),
				RelocateNonVoters: true,
			}
		}
	case 136:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1923
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct()}
		}
	case 137:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1928
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateNonVoters: true}
		}
	case 138:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1935
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Relocate{
				TableOrIndex:  tree.TableIndexName{Table: name},
				Rows:          sqlDollar[6].union.slct(),
				RelocateLease: true,
			}
		}
	case 139:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:1947
		{

			sqlVAL.union.val = &tree.Relocate{TableOrIndex: sqlDollar[3].union.tableIndexName(), Rows: sqlDollar[6].union.slct(), RelocateLease: true}
		}
	case 140:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1954
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 141:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1962
		{

			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: sqlDollar[4].union.expr()}
		}
	case 142:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1967
		{
			sqlVAL.union.val = &tree.SetZoneConfig{Options: sqlDollar[4].union.kvOptions()}
		}
	case 143:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1971
		{

			sqlVAL.union.val = &tree.SetZoneConfig{SetDefault: true}
		}
	case 144:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:1976
		{
			sqlVAL.union.val = &tree.SetZoneConfig{YAMLConfig: tree.DNull}
		}
	case 145:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1982
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{Database: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = s
		}
	case 146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:1990
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
			}
			sqlVAL.union.val = s
		}
	case 147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2001
		{
			s := sqlDollar[4].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[3].union.tableIndexName(),
			}
			sqlVAL.union.val = s
		}
	case 148:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2011
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 149:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2021
		{
			s := sqlDollar[7].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[3].str),
			}
			sqlVAL.union.val = s
		}
	case 150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2030
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			s := sqlDollar[9].union.setZoneConfig()
			s.ZoneSpecifier = tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[3].str),
			}
			s.AllIndexes = true
			sqlVAL.union.val = s
		}
	case 151:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2041
		{
			err := errors.New("index name should not be specified in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION ... OF INDEX")
			return setErr(sqllex, err)
		}
	case 152:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2047
		{
			err := errors.New("index wildcard unsupported in ALTER PARTITION ... OF TABLE")
			err = errors.WithHint(err, "try ALTER PARTITION <partition> OF INDEX <tablename>@*")
			return setErr(sqllex, err)
		}
	case 153:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2055
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), "."))}}
		}
	case 154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2059
		{
			sqlVAL.union.val = []tree.KVOption{tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[1].union.strs(), ".")), Value: sqlDollar[3].union.expr()}}
		}
	case 155:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2063
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), ".")), Value: sqlDollar[5].union.expr()})
		}
	case 156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2067
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), tree.KVOption{Key: tree.Name(strings.Join(sqlDollar[3].union.strs(), "."))})
		}
	case 157:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2073
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 158:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2078
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Scatter{
				TableOrIndex: tree.TableIndexName{Table: name},
				From:         sqlDollar[7].union.exprs(),
				To:           sqlDollar[11].union.exprs(),
			}
		}
	case 159:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2089
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName()}
		}
	case 160:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2093
		{
			sqlVAL.union.val = &tree.Scatter{TableOrIndex: sqlDollar[3].union.tableIndexName(), From: sqlDollar[7].union.exprs(), To: sqlDollar[11].union.exprs()}
		}
	case 161:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2099
		{
			sqlVAL.union.val = tree.AlterTableCmds{sqlDollar[1].union.alterTableCmd()}
		}
	case 162:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2103
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterTableCmds(), sqlDollar[3].union.alterTableCmd())
		}
	case 163:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2110
		{
			sqlVAL.union.val = &tree.AlterTableRenameColumn{Column: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 164:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2115
		{
			sqlVAL.union.val = &tree.AlterTableRenameConstraint{Constraint: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[5].str)}
		}
	case 165:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2120
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[2].union.colDef()}
		}
	case 166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2125
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[5].union.colDef()}
		}
	case 167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2130
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: false, ColumnDef: sqlDollar[3].union.colDef()}
		}
	case 168:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2135
		{
			sqlVAL.union.val = &tree.AlterTableAddColumn{IfNotExists: true, ColumnDef: sqlDollar[6].union.colDef()}
		}
	case 169:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2140
		{
			sqlVAL.union.val = &tree.AlterTableSetDefault{Column: tree.Name(sqlDollar[3].str), Default: sqlDollar[4].union.expr()}
		}
	case 170:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2145
		{
			sqlVAL.union.val = &tree.AlterTableSetOnUpdate{Column: tree.Name(sqlDollar[3].str), Expr: sqlDollar[4].union.expr()}
		}
	case 171:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2150
		{
			sqlVAL.union.val = &tree.AlterTableSetVisible{Column: tree.Name(sqlDollar[3].str), Visible: sqlDollar[4].union.bool()}
		}
	case 172:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2155
		{
			sqlVAL.union.val = &tree.AlterTableDropNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 173:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2160
		{
			sqlVAL.union.val = &tree.AlterTableDropStored{Column: tree.Name(sqlDollar[3].str)}
		}
	case 174:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2165
		{
			sqlVAL.union.val = &tree.AlterTableSetNotNull{Column: tree.Name(sqlDollar[3].str)}
		}
	case 175:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2169
		{
			return unimplemented(sqllex, "alter table alter column add")
		}
	case 176:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2174
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     true,
				Column:       tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 177:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2183
		{
			sqlVAL.union.val = &tree.AlterTableDropColumn{
				IfExists:     false,
				Column:       tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 178:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2195
		{
			sqlVAL.union.val = &tree.AlterTableAlterColumnType{
				Column:    tree.Name(sqlDollar[3].str),
				ToType:    sqlDollar[6].union.typeReference(),
				Collation: sqlDollar[7].str,
				Using:     sqlDollar[8].union.expr(),
			}
		}
	case 179:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2205
		{
			sqlVAL.union.val = &tree.AlterTableAddConstraint{
				ConstraintDef:      sqlDollar[2].union.constraintDef(),
				ValidationBehavior: sqlDollar[3].union.validationBehavior(),
			}
		}
	case 180:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2212
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "alter constraint")
		}
	case 181:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2215
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table inherits")
		}
	case 182:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2221
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "alter table no inherits")
		}
	case 183:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2228
		{
			sqlVAL.union.val = &tree.AlterTableAlterPrimaryKey{
				Columns:    sqlDollar[7].union.idxElems(),
				Sharded:    sqlDollar[9].union.shardedIndexDef(),
				Interleave: sqlDollar[10].union.interleave(),
			}
		}
	case 184:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2236
		{
			sqlVAL.union.val = &tree.AlterTableValidateConstraint{
				Constraint: tree.Name(sqlDollar[3].str),
			}
		}
	case 185:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2243
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     true,
				Constraint:   tree.Name(sqlDollar[5].str),
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 186:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2252
		{
			sqlVAL.union.val = &tree.AlterTableDropConstraint{
				IfExists:     false,
				Constraint:   tree.Name(sqlDollar[3].str),
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 187:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2261
		{
			sqlVAL.union.val = &tree.AlterTableSetAudit{Mode: sqlDollar[3].union.auditMode()}
		}
	case 188:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2266
		{
			sqlVAL.union.val = &tree.AlterTablePartitionByTable{
				PartitionByTable: sqlDollar[1].union.partitionByTable(),
			}
		}
	case 189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2273
		{

			sqlVAL.union.val = &tree.AlterTableInjectStats{
				Stats: sqlDollar[3].union.expr(),
			}
		}
	case 190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2281
		{
			sqlVAL.union.val = tree.AuditModeReadWrite
		}
	case 191:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2282
		{
			sqlVAL.union.val = tree.AuditModeDisable
		}
	case 192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2286
		{
			sqlVAL.union.val = tree.AlterIndexCmds{sqlDollar[1].union.alterIndexCmd()}
		}
	case 193:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2290
		{
			sqlVAL.union.val = append(sqlDollar[1].union.alterIndexCmds(), sqlDollar[3].union.alterIndexCmd())
		}
	case 194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2296
		{
			sqlVAL.union.val = &tree.AlterIndexPartitionBy{
				PartitionByIndex: sqlDollar[1].union.partitionByIndex(),
			}
		}
	case 195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2304
		{
			sqlVAL.union.val = sqlDollar[3].union.expr()
		}
	case 196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2308
		{
			sqlVAL.union.val = nil
		}
	case 197:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2314
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 198:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2318
		{
			sqlVAL.union.val = nil
		}
	case 199:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2324
		{
			sqlVAL.union.val = true
		}
	case 200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2328
		{
			sqlVAL.union.val = false
		}
	case 201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2334
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 202:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2338
		{
			sqlVAL.union.val = nil
		}
	case 203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2345
		{
			sqlVAL.union.val = tree.DropCascade
		}
	case 204:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2349
		{
			sqlVAL.union.val = tree.DropRestrict
		}
	case 205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2353
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 206:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2359
		{
			sqlVAL.union.val = tree.ValidationSkip
		}
	case 207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2363
		{
			sqlVAL.union.val = tree.ValidationDefault
		}
	case 208:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2388
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[6].str),
					IfNotExists: false,
					Placement:   sqlDollar[7].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 209:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:2399
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeAddValue{
					NewVal:      tree.EnumValue(sqlDollar[9].str),
					IfNotExists: true,
					Placement:   sqlDollar[10].union.alterTypeAddValuePlacement(),
				},
			}
		}
	case 210:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2410
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeDropValue{
					Val: tree.EnumValue(sqlDollar[6].str),
				},
			}
		}
	case 211:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2419
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRenameValue{
					OldVal: tree.EnumValue(sqlDollar[6].str),
					NewVal: tree.EnumValue(sqlDollar[8].str),
				},
			}
		}
	case 212:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2429
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 213:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2438
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeSetSchema{
					Schema: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 214:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2447
		{
			sqlVAL.union.val = &tree.AlterType{
				Type: sqlDollar[3].union.unresolvedObjectName(),
				Cmd: &tree.AlterTypeOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 215:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:2456
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 216:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2460
		{
			return unimplementedWithIssueDetail(sqllex, 48701, "ALTER TYPE ATTRIBUTE")
		}
	case 217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2463
		{
			return helpWith(sqllex, "ALTER TYPE")
		}
	case 218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2467
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      true,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2474
		{
			sqlVAL.union.val = &tree.AlterTypeAddValuePlacement{
				Before:      false,
				ExistingVal: tree.EnumValue(sqlDollar[2].str),
			}
		}
	case 220:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2481
		{
			sqlVAL.union.val = (*tree.AlterTypeAddValuePlacement)(nil)
		}
	case 221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2486
		{
			sqlVAL.union.val = sqlDollar[1].union.user()
		}
	case 222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2488
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 223:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2493
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2500
		{

			sqlVAL.union.val = security.MakeSQLUsernameFromPreNormalizedString(sqlDollar[1].str)
		}
	case 225:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2508
		{

			sqlVAL.union.val, _ = security.MakeSQLUsernameFromUserInput(sqlDollar[1].str, security.UsernameValidation)
		}
	case 233:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2532
		{
			sqlVAL.union.val = &tree.RefreshMaterializedView{
				Name:              sqlDollar[5].union.unresolvedObjectName(),
				Concurrently:      sqlDollar[4].union.bool(),
				RefreshDataOption: sqlDollar[6].union.refreshDataOption(),
			}
		}
	case 234:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2539
		{
			return helpWith(sqllex, "REFRESH")
		}
	case 235:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2543
		{
			sqlVAL.union.val = tree.RefreshDataWithData
		}
	case 236:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2547
		{
			sqlVAL.union.val = tree.RefreshDataClear
		}
	case 237:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2551
		{
			sqlVAL.union.val = tree.RefreshDataDefault
		}
	case 238:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2581
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: false,
				Subdir:         sqlDollar[4].union.expr(),
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 239:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2593
		{
			sqlVAL.union.val = &tree.Backup{
				Targets: sqlDollar[2].union.targetListPtr(),
				To:      sqlDollar[4].union.stringOrPlaceholderOptList(),
				Nested:  true,
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *sqlDollar[6].union.backupOptions(),
			}
		}
	case 240:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2603
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:        sqlDollar[2].union.targetListPtr(),
				To:             sqlDollar[6].union.stringOrPlaceholderOptList(),
				Nested:         true,
				AppendToLatest: true,
				AsOf:           sqlDollar[7].union.asOfClause(),
				Options:        *sqlDollar[8].union.backupOptions(),
			}
		}
	case 241:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2614
		{
			sqlVAL.union.val = &tree.Backup{
				Targets:         sqlDollar[2].union.targetListPtr(),
				To:              sqlDollar[4].union.stringOrPlaceholderOptList(),
				IncrementalFrom: sqlDollar[6].union.exprs(),
				AsOf:            sqlDollar[5].union.asOfClause(),
				Options:         *sqlDollar[7].union.backupOptions(),
			}
		}
	case 242:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2623
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2627
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 244:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2631
		{
			t := sqlDollar[1].union.targetList()
			sqlVAL.union.val = &t
		}
	case 245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2639
		{
			sqlVAL.union.val = sqlDollar[2].union.backupOptions()
		}
	case 246:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2643
		{
			sqlVAL.union.val = sqlDollar[4].union.backupOptions()
		}
	case 247:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2647
		{
			sqlVAL.union.val = &tree.BackupOptions{}
		}
	case 248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2654
		{
			sqlVAL.union.val = sqlDollar[1].union.backupOptions()
		}
	case 249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2658
		{
			if err := sqlDollar[1].union.backupOptions().CombineWith(sqlDollar[3].union.backupOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 250:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2667
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 251:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2671
		{
			sqlVAL.union.val = &tree.BackupOptions{CaptureRevisionHistory: true}
		}
	case 252:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2675
		{
			sqlVAL.union.val = &tree.BackupOptions{Detached: true}
		}
	case 253:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2679
		{
			sqlVAL.union.val = &tree.BackupOptions{EncryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 254:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2683
		{
			sqlVAL.union.val = &tree.BackupOptions{IncludeDeprecatedInterleaves: true}
		}
	case 255:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:2764
		{
			sqlVAL.union.val = &tree.ScheduledBackup{
				ScheduleLabel:   sqlDollar[3].union.expr(),
				Recurrence:      sqlDollar[10].union.expr(),
				FullBackup:      sqlDollar[11].union.fullBackupClause(),
				To:              sqlDollar[8].union.stringOrPlaceholderOptList(),
				Targets:         sqlDollar[6].union.targetListPtr(),
				BackupOptions:   *(sqlDollar[9].union.backupOptions()),
				ScheduleOptions: sqlDollar[12].union.kvOptions(),
			}
		}
	case 256:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2775
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 258:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2780
		{
			sqlVAL.union.val = nil
		}
	case 259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2788
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2792
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 261:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2802
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 262:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2810
		{
			sqlVAL.union.val = &tree.FullBackupClause{Recurrence: sqlDollar[3].union.expr()}
		}
	case 263:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2814
		{
			sqlVAL.union.val = &tree.FullBackupClause{AlwaysFull: true}
		}
	case 264:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2818
		{
			sqlVAL.union.val = (*tree.FullBackupClause)(nil)
		}
	case 265:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:2824
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 266:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2828
		{
			sqlVAL.union.val = sqlDollar[5].union.kvOptions()
		}
	case 267:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2832
		{
			sqlVAL.union.val = nil
		}
	case 268:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2864
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				From:               sqlDollar[3].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[4].union.asOfClause(),
				Options:            *(sqlDollar[5].union.restoreOptions()),
			}
		}
	case 269:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:2873
		{
			sqlVAL.union.val = &tree.Restore{
				DescriptorCoverage: tree.AllDescriptors,
				Subdir:             sqlDollar[3].union.expr(),
				From:               sqlDollar[5].union.listOfStringOrPlaceholderOptList(),
				AsOf:               sqlDollar[6].union.asOfClause(),
				Options:            *(sqlDollar[7].union.restoreOptions()),
			}
		}
	case 270:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:2883
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[4].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: *(sqlDollar[6].union.restoreOptions()),
			}
		}
	case 271:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2892
		{
			sqlVAL.union.val = &tree.Restore{
				Targets: sqlDollar[2].union.targetList(),
				Subdir:  sqlDollar[4].union.expr(),
				From:    sqlDollar[6].union.listOfStringOrPlaceholderOptList(),
				AsOf:    sqlDollar[7].union.asOfClause(),
				Options: *(sqlDollar[8].union.restoreOptions()),
			}
		}
	case 272:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:2902
		{
			sqlVAL.union.val = &tree.StreamIngestion{
				Targets: sqlDollar[2].union.targetList(),
				From:    sqlDollar[7].union.stringOrPlaceholderOptList(),
				AsOf:    sqlDollar[8].union.asOfClause(),
			}
		}
	case 273:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2909
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 274:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2913
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList{sqlDollar[1].union.expr()}
		}
	case 275:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2917
		{
			sqlVAL.union.val = tree.StringOrPlaceholderOptList(sqlDollar[2].union.exprs())
		}
	case 276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2923
		{
			sqlVAL.union.val = []tree.StringOrPlaceholderOptList{sqlDollar[1].union.stringOrPlaceholderOptList()}
		}
	case 277:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2927
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listOfStringOrPlaceholderOptList(), sqlDollar[3].union.stringOrPlaceholderOptList())
		}
	case 278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:2934
		{
			sqlVAL.union.val = sqlDollar[2].union.restoreOptions()
		}
	case 279:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:2938
		{
			sqlVAL.union.val = sqlDollar[4].union.restoreOptions()
		}
	case 280:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:2942
		{
			sqlVAL.union.val = &tree.RestoreOptions{}
		}
	case 281:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2949
		{
			sqlVAL.union.val = sqlDollar[1].union.restoreOptions()
		}
	case 282:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2953
		{
			if err := sqlDollar[1].union.restoreOptions().CombineWith(sqlDollar[3].union.restoreOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 283:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2962
		{
			sqlVAL.union.val = &tree.RestoreOptions{EncryptionPassphrase: sqlDollar[3].union.expr()}
		}
	case 284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2966
		{
			sqlVAL.union.val = &tree.RestoreOptions{DecryptionKMSURI: sqlDollar[3].union.stringOrPlaceholderOptList()}
		}
	case 285:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:2970
		{
			sqlVAL.union.val = &tree.RestoreOptions{IntoDB: sqlDollar[3].union.expr()}
		}
	case 286:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2974
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingFKs: true}
		}
	case 287:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2978
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequences: true}
		}
	case 288:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2982
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingSequenceOwners: true}
		}
	case 289:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2986
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipMissingViews: true}
		}
	case 290:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2990
		{
			sqlVAL.union.val = &tree.RestoreOptions{Detached: true}
		}
	case 291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:2994
		{
			sqlVAL.union.val = &tree.RestoreOptions{SkipLocalitiesCheck: true}
		}
	case 292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3000
		{
			sqlVAL.str = strings.ToUpper(sqlDollar[1].str)
		}
	case 293:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3006
		{
			return unimplemented(sqllex, "alter function")
		}
	case 294:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3010
		{
			return unimplemented(sqllex, "alter domain")
		}
	case 295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3014
		{
			return unimplemented(sqllex, "alter aggregate")
		}
	case 296:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3051
		{

			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[4].union.expr()}, Options: sqlDollar[6].union.kvOptions()}
		}
	case 297:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3056
		{
			sqlVAL.union.val = &tree.Import{Bundle: true, FileFormat: sqlDollar[2].str, Files: tree.Exprs{sqlDollar[3].union.expr()}, Options: sqlDollar[4].union.kvOptions()}
		}
	case 298:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3060
		{

			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[7].union.expr()}, Options: sqlDollar[9].union.kvOptions()}
		}
	case 299:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3066
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Bundle: true, Table: &name, FileFormat: sqlDollar[5].str, Files: tree.Exprs{sqlDollar[6].union.expr()}, Options: sqlDollar[7].union.kvOptions()}
		}
	case 300:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3071
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateFile: sqlDollar[6].union.expr(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 301:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3076
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, CreateDefs: sqlDollar[5].union.tblDefs(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 302:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:3081
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: sqlDollar[5].union.nameList(), FileFormat: sqlDollar[7].str, Files: sqlDollar[10].union.exprs(), Options: sqlDollar[12].union.kvOptions()}
		}
	case 303:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3086
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Import{Table: &name, Into: true, IntoCols: nil, FileFormat: sqlDollar[4].str, Files: sqlDollar[7].union.exprs(), Options: sqlDollar[9].union.kvOptions()}
		}
	case 304:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3090
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 305:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3106
		{
			sqlVAL.union.val = &tree.Export{Query: sqlDollar[7].union.slct(), FileFormat: sqlDollar[3].str, File: sqlDollar[4].union.expr(), Options: sqlDollar[5].union.kvOptions()}
		}
	case 306:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3109
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3113
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 308:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3117
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 309:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3125
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 310:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3129
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 311:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3135
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 312:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3139
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 313:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3145
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 314:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3149
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 315:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3153
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 316:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3157
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str)}
		}
	case 317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3163
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 318:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3167
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[3].union.kvOption())
		}
	case 319:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3173
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 320:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3177
		{
			sqlVAL.union.val = sqlDollar[4].union.kvOptions()
		}
	case 321:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3181
		{
			sqlVAL.union.val = nil
		}
	case 322:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3193
		{

			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			if sqlDollar[7].union.expr() != nil {
				return unimplementedWithIssue(sqllex, 54580)
			}
			sqlVAL.union.val = &tree.CopyFrom{
				Table:   name,
				Columns: sqlDollar[3].union.nameList(),
				Stdin:   true,
				Options: *sqlDollar[6].union.copyOptions(),
			}
		}
	case 323:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3207
		{
			return unimplemented(sqllex, "copy from unsupported format")
		}
	case 324:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3213
		{
			sqlVAL.union.val = sqlDollar[2].union.copyOptions()
		}
	case 325:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3217
		{
			sqlVAL.union.val = &tree.CopyOptions{}
		}
	case 326:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3223
		{
			sqlVAL.union.val = sqlDollar[1].union.copyOptions()
		}
	case 327:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3227
		{
			if err := sqlDollar[1].union.copyOptions().CombineWith(sqlDollar[2].union.copyOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 328:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3235
		{
			sqlVAL.union.val = &tree.CopyOptions{Destination: sqlDollar[3].union.expr()}
		}
	case 329:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3239
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatBinary}
		}
	case 330:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3243
		{
			sqlVAL.union.val = &tree.CopyOptions{CopyFormat: tree.CopyFormatCSV}
		}
	case 331:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3247
		{
			sqlVAL.union.val = &tree.CopyOptions{Delimiter: sqlDollar[2].union.expr()}
		}
	case 332:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3251
		{
			sqlVAL.union.val = &tree.CopyOptions{Null: sqlDollar[2].union.expr()}
		}
	case 334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3259
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 336:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3260
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 338:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3261
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 339:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3262
		{
			return helpWith(sqllex, "CANCEL")
		}
	case 340:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3272
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.CancelJob,
			}
		}
	case 341:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3280
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 342:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3282
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 343:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3286
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.CancelJob}
		}
	case 344:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3289
		{
			return helpWith(sqllex, "CANCEL JOBS")
		}
	case 345:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3299
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 346:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3308
		{
			sqlVAL.union.val = &tree.CancelQueries{
				Queries: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 347:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3316
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 348:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3318
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 349:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3322
		{
			sqlVAL.union.val = &tree.CancelQueries{Queries: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 350:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3325
		{
			return helpWith(sqllex, "CANCEL QUERIES")
		}
	case 351:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3335
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				IfExists: false,
			}
		}
	case 352:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3344
		{
			sqlVAL.union.val = &tree.CancelSessions{
				Sessions: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				IfExists: true,
			}
		}
	case 353:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3352
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 354:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3354
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[3].union.slct(), IfExists: false}
		}
	case 355:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3358
		{
			sqlVAL.union.val = &tree.CancelSessions{Sessions: sqlDollar[5].union.slct(), IfExists: true}
		}
	case 356:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3361
		{
			return helpWith(sqllex, "CANCEL SESSIONS")
		}
	case 357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3365
		{
			sqlVAL.union.val = &tree.CommentOnDatabase{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 358:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3369
		{
			sqlVAL.union.val = &tree.CommentOnSchema{Name: tree.Name(sqlDollar[4].str), Comment: sqlDollar[6].union.strPtr()}
		}
	case 359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3373
		{
			sqlVAL.union.val = &tree.CommentOnTable{Table: sqlDollar[4].union.unresolvedObjectName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3377
		{
			varName, err := sqlDollar[4].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[4].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = &tree.CommentOnColumn{ColumnItem: columnItem, Comment: sqlDollar[6].union.strPtr()}
		}
	case 361:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3390
		{
			sqlVAL.union.val = &tree.CommentOnIndex{Index: sqlDollar[4].union.tableIndexName(), Comment: sqlDollar[6].union.strPtr()}
		}
	case 362:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3393
		{
			return unimplemented(sqllex, "comment on extension")
		}
	case 363:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3397
		{
			t := sqlDollar[1].str
			sqlVAL.union.val = &t
		}
	case 364:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3402
		{
			var str *string
			sqlVAL.union.val = str
		}
	case 366:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3414
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 369:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3416
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 371:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3417
		{
			return helpWith(sqllex, "CREATE SCHEDULE FOR BACKUP")
		}
	case 375:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3420
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 376:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3421
		{
		}
	case 377:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3422
		{
			return helpWith(sqllex, "CREATE")
		}
	case 378:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3429
		{
			sqlVAL.union.val = &tree.CreateExtension{IfNotExists: true, Name: sqlDollar[6].str}
		}
	case 379:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3432
		{
			sqlVAL.union.val = &tree.CreateExtension{Name: sqlDollar[3].str}
		}
	case 380:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:3435
		{
			return unimplemented(sqllex, "create extension if not exists with")
		}
	case 381:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3436
		{
			return helpWith(sqllex, "CREATE EXTENSION")
		}
	case 382:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3439
		{
			return unimplemented(sqllex, "create access method")
		}
	case 383:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3440
		{
			return unimplemented(sqllex, "create aggregate")
		}
	case 384:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3441
		{
			return unimplemented(sqllex, "create cast")
		}
	case 385:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3442
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create constraint")
		}
	case 386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3443
		{
			return unimplemented(sqllex, "create conversion")
		}
	case 387:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3444
		{
			return unimplemented(sqllex, "create def conv")
		}
	case 388:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3445
		{
			return unimplemented(sqllex, "create foreign table")
		}
	case 389:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3446
		{
			return unimplemented(sqllex, "create fdw")
		}
	case 390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3447
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 391:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3448
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create function")
		}
	case 392:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3449
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "create language "+sqlDollar[6].str)
		}
	case 393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3450
		{
			return unimplementedWithIssue(sqllex, 65017)
		}
	case 394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3451
		{
			return unimplemented(sqllex, "create publication")
		}
	case 395:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3452
		{
			return unimplemented(sqllex, "create rule")
		}
	case 396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3453
		{
			return unimplemented(sqllex, "create server")
		}
	case 397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3454
		{
			return unimplemented(sqllex, "create subscription")
		}
	case 398:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3455
		{
			return unimplementedWithIssueDetail(sqllex, 54113, "create tablespace")
		}
	case 399:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3456
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "create text")
		}
	case 400:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3457
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "create trigger")
		}
	case 401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3460
		{
		}
	case 402:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3461
		{
		}
	case 403:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3464
		{
		}
	case 404:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3465
		{
		}
	case 405:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3468
		{
		}
	case 406:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3469
		{
		}
	case 407:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3472
		{
			return unimplemented(sqllex, "drop access method")
		}
	case 408:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3473
		{
			return unimplemented(sqllex, "drop aggregate")
		}
	case 409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3474
		{
			return unimplemented(sqllex, "drop cast")
		}
	case 410:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3475
		{
			return unimplemented(sqllex, "drop collation")
		}
	case 411:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3476
		{
			return unimplemented(sqllex, "drop conversion")
		}
	case 412:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3477
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "drop")
		}
	case 413:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3478
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[5].str)
		}
	case 414:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3479
		{
			return unimplemented(sqllex, "drop extension "+sqlDollar[3].str)
		}
	case 415:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3480
		{
			return unimplemented(sqllex, "drop foreign table")
		}
	case 416:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3481
		{
			return unimplemented(sqllex, "drop fdw")
		}
	case 417:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3482
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop function")
		}
	case 418:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3483
		{
			return unimplementedWithIssueDetail(sqllex, 17511, "drop language "+sqlDollar[4].str)
		}
	case 419:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3484
		{
			return unimplemented(sqllex, "drop operator")
		}
	case 420:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3485
		{
			return unimplemented(sqllex, "drop publication")
		}
	case 421:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3486
		{
			return unimplemented(sqllex, "drop rule")
		}
	case 422:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3487
		{
			return unimplemented(sqllex, "drop server")
		}
	case 423:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3488
		{
			return unimplemented(sqllex, "drop subscription")
		}
	case 424:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3489
		{
			return unimplementedWithIssueDetail(sqllex, 7821, "drop text")
		}
	case 425:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3490
		{
			return unimplementedWithIssueDetail(sqllex, 28296, "drop")
		}
	case 427:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3493
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 429:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3494
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 431:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3495
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 433:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3496
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 435:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3497
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 436:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3499
		{
			return helpWith(sqllex, "CREATE TABLE")
		}
	case 438:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3500
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3501
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3502
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 443:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3512
		{
			sqlVAL.union.val = &tree.CreateStats{
				Name:        tree.Name(sqlDollar[3].str),
				ColumnNames: sqlDollar[4].union.nameList(),
				Table:       sqlDollar[6].union.tblExpr(),
				Options:     *sqlDollar[7].union.createStatsOptions(),
			}
		}
	case 444:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3520
		{
			return helpWith(sqllex, "CREATE STATISTICS")
		}
	case 445:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3524
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 446:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3528
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 447:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3534
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 448:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3538
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
			}
		}
	case 449:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3547
		{

			sqlVAL.union.val = sqlDollar[3].union.createStatsOptions()
		}
	case 450:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3554
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 451:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3560
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{}
		}
	case 452:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3566
		{
			sqlVAL.union.val = sqlDollar[1].union.createStatsOptions()
		}
	case 453:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3570
		{
			a := sqlDollar[1].union.createStatsOptions()
			b := sqlDollar[2].union.createStatsOptions()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 454:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3581
		{

			value, _ := constant.Float64Val(sqlDollar[2].union.numVal().AsConstantValue())
			if value < 0.0 || value >= 1.0 {
				sqllex.Error("THROTTLING fraction must be between 0 and 1")
				return 1
			}
			sqlVAL.union.val = &tree.CreateStatsOptions{
				Throttling: value,
			}
		}
	case 455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3593
		{
			sqlVAL.union.val = &tree.CreateStatsOptions{
				AsOf: sqlDollar[1].union.asOfClause(),
			}
		}
	case 456:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3608
		{
			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				SinkURI: sqlDollar[5].union.expr(),
				Options: sqlDollar[6].union.kvOptions(),
			}
		}
	case 457:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3616
		{

			sqlVAL.union.val = &tree.CreateChangefeed{
				Targets: sqlDollar[4].union.targetList(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 458:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3626
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[1].union.tablePatterns()}
		}
	case 459:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3630
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 460:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3636
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()}
		}
	case 461:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3640
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedObjectName().ToUnresolvedName())
		}
	case 462:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3647
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3651
		{

			sqlVAL.union.val = nil
		}
	case 464:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3668
		{
			sqlVAL.union.val = &tree.ReplicationStream{
				Targets: sqlDollar[5].union.targetList(),
				SinkURI: sqlDollar[6].union.expr(),
				Options: *sqlDollar[7].union.replicationOptions(),
			}
		}
	case 465:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3679
		{
			sqlVAL.union.val = sqlDollar[2].union.replicationOptions()
		}
	case 466:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3683
		{
			sqlVAL.union.val = sqlDollar[4].union.replicationOptions()
		}
	case 467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3687
		{
			sqlVAL.union.val = &tree.ReplicationOptions{}
		}
	case 468:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3694
		{
			sqlVAL.union.val = sqlDollar[1].union.replicationOptions()
		}
	case 469:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3698
		{
			if err := sqlDollar[1].union.replicationOptions().CombineWith(sqlDollar[3].union.replicationOptions()); err != nil {
				return setErr(sqllex, err)
			}
		}
	case 470:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3707
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Cursor: sqlDollar[3].union.expr()}
		}
	case 471:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3711
		{
			sqlVAL.union.val = &tree.ReplicationOptions{Detached: true}
		}
	case 472:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:3724
		{
			sqlVAL.union.val = &tree.Delete{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[4].union.tblExpr(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[6].union.expr()),
				OrderBy:   sqlDollar[7].union.orderBy(),
				Limit:     sqlDollar[8].union.limit(),
				Returning: sqlDollar[9].union.retClause(),
			}
		}
	case 473:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3734
		{
			return helpWith(sqllex, "DELETE")
		}
	case 474:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3737
		{
			return unimplementedWithIssueDetail(sqllex, 40963, "delete using")
		}
	case 475:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:3738
		{
		}
	case 476:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3746
		{
			sqlVAL.union.val = &tree.Discard{Mode: tree.DiscardModeAll}
		}
	case 477:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3749
		{
			return unimplemented(sqllex, "discard plans")
		}
	case 478:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3750
		{
			return unimplemented(sqllex, "discard sequences")
		}
	case 479:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3751
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 480:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3752
		{
			return unimplemented(sqllex, "discard temp")
		}
	case 481:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3753
		{
			return helpWith(sqllex, "DISCARD")
		}
	case 484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3762
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 486:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3763
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 487:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3764
		{
		}
	case 488:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3765
		{
			return helpWith(sqllex, "DROP")
		}
	case 490:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3768
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 492:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3769
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3770
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 496:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3771
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3772
		{
			return helpWith(sqllex, "DROP SEQUENCE")
		}
	case 500:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3773
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 502:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3774
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 503:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3782
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 504:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3786
		{
			sqlVAL.union.val = &tree.DropView{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 505:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3790
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[4].union.tableNames(),
				IfExists:       false,
				DropBehavior:   sqlDollar[5].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 506:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3799
		{
			sqlVAL.union.val = &tree.DropView{
				Names:          sqlDollar[6].union.tableNames(),
				IfExists:       true,
				DropBehavior:   sqlDollar[7].union.dropBehavior(),
				IsMaterialized: true,
			}
		}
	case 507:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3807
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3815
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 509:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3819
		{
			sqlVAL.union.val = &tree.DropSequence{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 510:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3822
		{
			return helpWith(sqllex, "DROP VIEW")
		}
	case 511:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3830
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[3].union.tableNames(), IfExists: false, DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 512:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3834
		{
			sqlVAL.union.val = &tree.DropTable{Names: sqlDollar[5].union.tableNames(), IfExists: true, DropBehavior: sqlDollar[6].union.dropBehavior()}
		}
	case 513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3837
		{
			return helpWith(sqllex, "DROP TABLE")
		}
	case 514:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3845
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[4].union.newTableIndexNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[5].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 515:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:3854
		{
			sqlVAL.union.val = &tree.DropIndex{
				IndexList:    sqlDollar[6].union.newTableIndexNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[7].union.dropBehavior(),
				Concurrently: sqlDollar[3].union.bool(),
			}
		}
	case 516:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3862
		{
			return helpWith(sqllex, "DROP INDEX")
		}
	case 517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3870
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[3].str),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 518:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3878
		{
			sqlVAL.union.val = &tree.DropDatabase{
				Name:         tree.Name(sqlDollar[5].str),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 519:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3885
		{
			return helpWith(sqllex, "DROP DATABASE")
		}
	case 520:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3892
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[3].union.unresolvedObjectNames(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 521:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3900
		{
			sqlVAL.union.val = &tree.DropType{
				Names:        sqlDollar[5].union.unresolvedObjectNames(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 522:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3907
		{
			return helpWith(sqllex, "DROP TYPE")
		}
	case 523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3911
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[1].union.unresolvedObjectNames()}
		}
	case 524:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3917
		{
			sqlVAL.union.val = []*tree.UnresolvedObjectName{sqlDollar[1].union.unresolvedObjectName()}
		}
	case 525:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3921
		{
			sqlVAL.union.val = append(sqlDollar[1].union.unresolvedObjectNames(), sqlDollar[3].union.unresolvedObjectName())
		}
	case 526:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:3930
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[3].union.objectNamePrefixList(),
				IfExists:     false,
				DropBehavior: sqlDollar[4].union.dropBehavior(),
			}
		}
	case 527:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:3938
		{
			sqlVAL.union.val = &tree.DropSchema{
				Names:        sqlDollar[5].union.objectNamePrefixList(),
				IfExists:     true,
				DropBehavior: sqlDollar[6].union.dropBehavior(),
			}
		}
	case 528:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3945
		{
			return helpWith(sqllex, "DROP SCHEMA")
		}
	case 529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3953
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[3].union.exprs(), IfExists: false, IsRole: sqlDollar[2].union.bool()}
		}
	case 530:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:3957
		{
			sqlVAL.union.val = &tree.DropRole{Names: sqlDollar[5].union.exprs(), IfExists: true, IsRole: sqlDollar[2].union.bool()}
		}
	case 531:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3960
		{
			return helpWith(sqllex, "DROP ROLE")
		}
	case 532:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3964
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:3969
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 534:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3982
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3987
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 536:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3989
		{
			sqlVAL.union.val = &tree.Analyze{
				Table: sqlDollar[2].union.tblExpr(),
			}
		}
	case 537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:3994
		{
			return helpWith(sqllex, "ANALYZE")
		}
	case 538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:3998
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4021
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(nil, sqlDollar[2].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 540:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4028
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 541:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4030
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(sqlDollar[3].union.strs(), sqlDollar[5].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 542:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4038
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 543:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4046
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain([]string{"ANALYZE"}, sqlDollar[3].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 544:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4054
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 545:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4062
		{
			var err error
			sqlVAL.union.val, err = tree.MakeExplain(append(sqlDollar[4].union.strs(), "ANALYZE"), sqlDollar[6].union.stmt())
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 546:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4073
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 551:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4081
		{
			return helpWith(sqllex, "BACKUP")
		}
	case 555:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4084
		{
			return helpWith(sqllex, "DELETE")
		}
	case 558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4086
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 560:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4087
		{
			return helpWith(sqllex, "IMPORT")
		}
	case 562:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4088
		{
			return helpWith(sqllex, "INSERT")
		}
	case 566:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4091
		{
			return helpWith(sqllex, "RESTORE")
		}
	case 569:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4093
		{
			return helpWith(sqllex, "EXPORT")
		}
	case 571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4096
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 575:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4101
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 577:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4102
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 579:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4103
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 581:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4108
		{
			return helpWith(sqllex, "DELETE")
		}
	case 583:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4109
		{
			return helpWith(sqllex, "EXPLAIN")
		}
	case 585:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4110
		{
			return helpWith(sqllex, "INSERT")
		}
	case 586:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4112
		{
			sqlVAL.union.val = sqlDollar[1].union.slct()
		}
	case 589:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4116
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 591:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4117
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 592:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4121
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 593:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4125
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 594:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4135
		{
			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: sqlDollar[5].union.stmt(),
			}
		}
	case 595:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4143
		{

			sqlVAL.union.val = &tree.Prepare{
				Name:      tree.Name(sqlDollar[2].str),
				Types:     sqlDollar[3].union.typeReferences(),
				Statement: &tree.CannedOptPlan{Plan: sqlDollar[7].str},
			}
		}
	case 596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4151
		{
			return helpWith(sqllex, "PREPARE")
		}
	case 597:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4155
		{
			sqlVAL.union.val = sqlDollar[2].union.typeReferences()
		}
	case 598:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4159
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference(nil)
		}
	case 599:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4169
		{
			sqlVAL.union.val = &tree.Execute{
				Name:   tree.Name(sqlDollar[2].str),
				Params: sqlDollar[3].union.exprs(),
			}
		}
	case 600:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4176
		{

			sqlVAL.union.val = &tree.Execute{
				Name:        tree.Name(sqlDollar[2].str),
				Params:      sqlDollar[3].union.exprs(),
				DiscardRows: true,
			}
		}
	case 601:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4184
		{
			return helpWith(sqllex, "EXECUTE")
		}
	case 602:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4188
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 603:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4192
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4202
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[2].str)}
		}
	case 605:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4206
		{
			sqlVAL.union.val = &tree.Deallocate{Name: tree.Name(sqlDollar[3].str)}
		}
	case 606:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4210
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 607:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4214
		{
			sqlVAL.union.val = &tree.Deallocate{}
		}
	case 608:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4217
		{
			return helpWith(sqllex, "DEALLOCATE")
		}
	case 609:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4240
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 610:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4244
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 611:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4248
		{
			sqlVAL.union.val = &tree.GrantRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: true}
		}
	case 612:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4252
		{
			sqlVAL.union.val = &tree.Grant{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 613:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4256
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 614:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:4266
		{
			return unimplemented(sqllex, "grant privileges on schema with")
		}
	case 615:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4270
		{
			sqlVAL.union.val = &tree.Grant{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 616:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4281
		{
			return unimplemented(sqllex, "grant privileges on sequence")
		}
	case 617:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4284
		{
			return helpWith(sqllex, "GRANT")
		}
	case 618:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4307
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Grantees: sqlDollar[6].union.nameList(), Targets: sqlDollar[4].union.targetList()}
		}
	case 619:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4311
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[2].union.nameList(), Members: sqlDollar[4].union.nameList(), AdminOption: false}
		}
	case 620:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4315
		{
			sqlVAL.union.val = &tree.RevokeRole{Roles: sqlDollar[5].union.nameList(), Members: sqlDollar[7].union.nameList(), AdminOption: true}
		}
	case 621:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4319
		{
			sqlVAL.union.val = &tree.Revoke{Privileges: sqlDollar[2].union.privilegeList(), Targets: sqlDollar[5].union.targetList(), Grantees: sqlDollar[7].union.nameList()}
		}
	case 622:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4323
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas: sqlDollar[5].union.objectNamePrefixList(),
				},
				Grantees: sqlDollar[7].union.nameList(),
			}
		}
	case 623:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:4333
		{
			sqlVAL.union.val = &tree.Revoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Targets: tree.TargetList{
					Schemas:           sqlDollar[8].union.objectNamePrefixList(),
					AllTablesInSchema: true,
				},
				Grantees: sqlDollar[10].union.nameList(),
			}
		}
	case 624:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4344
		{
			return unimplemented(sqllex, "revoke privileges on sequence")
		}
	case 625:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4347
		{
			return helpWith(sqllex, "REVOKE")
		}
	case 626:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4352
		{
			sqlVAL.union.val = privilege.List{privilege.ALL}
		}
	case 627:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4356
		{
			privList, err := privilege.ListFromStrings(sqlDollar[1].union.nameList().ToStrings())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = privList
		}
	case 628:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4366
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4370
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 635:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4384
		{
			return helpWith(sqllex, "RESET")
		}
	case 637:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4385
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 638:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4393
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 639:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4397
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[3].str, Values: tree.Exprs{tree.DefaultVal{}}, Reset: true}
		}
	case 640:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4400
		{
			return helpWith(sqllex, "RESET")
		}
	case 641:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4408
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: tree.DefaultVal{}}
		}
	case 642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4411
		{
			return helpWith(sqllex, "RESET CLUSTER SETTING")
		}
	case 643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4422
		{
			sqlVAL.union.val = &tree.SetVar{Name: "database", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 644:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4425
		{
			return helpWith(sqllex, "USE")
		}
	case 646:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4429
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 647:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4430
		{
		}
	case 648:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4431
		{
			return unimplemented(sqllex, "set constraints")
		}
	case 649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4432
		{
			return unimplementedWithIssue(sqllex, 32562)
		}
	case 651:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4436
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 653:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4437
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 655:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4438
		{
			return helpWith(sqllex, "USE")
		}
	case 658:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4454
		{
			return helpWith(sqllex, "SCRUB")
		}
	case 659:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4469
		{
			sqlVAL.union.val = &tree.Scrub{Typ: tree.ScrubDatabase, Database: tree.Name(sqlDollar[4].str), AsOf: sqlDollar[5].union.asOfClause()}
		}
	case 660:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4472
		{
			return helpWith(sqllex, "SCRUB DATABASE")
		}
	case 661:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4490
		{
			sqlVAL.union.val = &tree.Scrub{
				Typ:     tree.ScrubTable,
				Table:   sqlDollar[4].union.unresolvedObjectName(),
				AsOf:    sqlDollar[5].union.asOfClause(),
				Options: sqlDollar[6].union.scrubOptions(),
			}
		}
	case 662:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4498
		{
			return helpWith(sqllex, "SCRUB TABLE")
		}
	case 663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4502
		{
			sqlVAL.union.val = sqlDollar[3].union.scrubOptions()
		}
	case 664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:4506
		{
			sqlVAL.union.val = tree.ScrubOptions{}
		}
	case 665:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4512
		{
			sqlVAL.union.val = tree.ScrubOptions{sqlDollar[1].union.scrubOption()}
		}
	case 666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.scrubOptions(), sqlDollar[3].union.scrubOption())
		}
	case 667:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4522
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{}
		}
	case 668:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4526
		{
			sqlVAL.union.val = &tree.ScrubOptionIndex{IndexNames: sqlDollar[3].union.nameList()}
		}
	case 669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4530
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{}
		}
	case 670:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4534
		{
			sqlVAL.union.val = &tree.ScrubOptionConstraint{ConstraintNames: sqlDollar[3].union.nameList()}
		}
	case 671:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4538
		{
			sqlVAL.union.val = &tree.ScrubOptionPhysical{}
		}
	case 672:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4549
		{
			sqlVAL.union.val = &tree.SetClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), "."), Value: sqlDollar[6].union.expr()}
		}
	case 673:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4552
		{
			return helpWith(sqllex, "SET CLUSTER SETTING")
		}
	case 676:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4562
		{
			sqlVAL.union.val = &tree.SetVar{Values: sqlDollar[4].union.exprs()}
		}
	case 677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4578
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4582
		{
			sqlVAL.union.val = sqlDollar[2].union.stmt()
		}
	case 679:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4587
		{
			sqlVAL.union.val = &tree.SetSessionCharacteristics{Modes: sqlDollar[6].union.transactionModes()}
		}
	case 680:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4606
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[3].union.transactionModes()}
		}
	case 681:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4609
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 682:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4611
		{
			sqlVAL.union.val = &tree.SetTransaction{Modes: sqlDollar[4].union.transactionModes()}
		}
	case 683:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4614
		{
			return helpWith(sqllex, "SET TRANSACTION")
		}
	case 684:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4618
		{

			varName := sqlDollar[1].union.strs()
			if len(varName) == 1 && varName[0] == "tracing" {
				sqlVAL.union.val = &tree.SetTracing{Values: sqlDollar[3].union.exprs()}
			} else {
				sqlVAL.union.val = &tree.SetVar{Name: strings.Join(sqlDollar[1].union.strs(), "."), Values: sqlDollar[3].union.exprs()}
			}
		}
	case 686:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4637
		{

			sqlVAL.union.val = &tree.SetVar{Name: "timezone", Values: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 687:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4641
		{
			return unimplemented(sqllex, "set from current")
		}
	case 688:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4645
		{

			sqlVAL.union.val = &tree.SetVar{Name: "search_path", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 689:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4650
		{

			sqlVAL.union.val = &tree.SetVar{Name: "role", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 691:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4659
		{

			sqlVAL.union.val = &tree.SetSessionAuthorizationDefault{}
		}
	case 692:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4664
		{
			return unimplementedWithIssue(sqllex, 40283)
		}
	case 694:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4669
		{
			return helpWith(sqllex, "SET SESSION")
		}
	case 695:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4677
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{sqlDollar[2].union.expr()}}
		}
	case 696:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4682
		{

			sqlVAL.union.val = &tree.SetVar{Name: "client_encoding", Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4689
		{
			sqlVAL.union.val = []string{sqlDollar[1].str}
		}
	case 698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4693
		{
			sqlVAL.union.val = append([]string{sqlDollar[1].str}, sqlDollar[2].union.strs()...)
		}
	case 699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4699
		{
			sqlVAL.union.val = []string{sqlDollar[2].str}
		}
	case 700:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4703
		{
			sqlVAL.union.val = append(sqlDollar[1].union.strs(), sqlDollar[3].str)
		}
	case 702:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4710
		{
			sqlVAL.union.val = tree.Expr(&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}})
		}
	case 705:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4731
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 706:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4735
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 707:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4741
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 708:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4745
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 709:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4749
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 710:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4753
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 711:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4757
		{
			sqlVAL.union.val = tree.SerializableIsolation
		}
	case 712:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4763
		{
			sqlVAL.union.val = tree.Low
		}
	case 713:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4767
		{
			sqlVAL.union.val = tree.Normal
		}
	case 714:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4771
		{
			sqlVAL.union.val = tree.High
		}
	case 715:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4782
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 716:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4786
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 717:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4790
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4795
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 720:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4799
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 722:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4814
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 724:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4815
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 726:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4816
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 728:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4817
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 730:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4818
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 732:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4819
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 734:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4820
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4821
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 738:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4822
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 741:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4824
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 743:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4825
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 745:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4826
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 747:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4827
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 749:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4828
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 752:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4830
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 754:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4831
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 756:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4832
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 759:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4834
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 762:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4836
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 764:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4837
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 766:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4838
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 768:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4839
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 770:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4840
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 772:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4841
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 774:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4842
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 776:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4843
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 778:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4844
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 780:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4845
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 782:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4846
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 784:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4847
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 786:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4848
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 788:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4849
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4850
		{
			return helpWith(sqllex, "SHOW")
		}
	case 793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4853
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 794:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4858
		{
		}
	case 795:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4859
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 796:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4862
		{
			return unimplementedWithIssue(sqllex, 41412)
		}
	case 797:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4866
		{

			return purposelyUnimplemented(sqllex, "reindex table", "CockroachDB does not require reindexing.")
		}
	case 798:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4871
		{

			return purposelyUnimplemented(sqllex, "reindex index", "CockroachDB does not require reindexing.")
		}
	case 799:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4876
		{

			return purposelyUnimplemented(sqllex, "reindex schema", "CockroachDB does not require reindexing.")
		}
	case 800:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4881
		{

			return purposelyUnimplemented(sqllex, "reindex database", "CockroachDB does not require reindexing.")
		}
	case 801:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4886
		{

			return purposelyUnimplemented(sqllex, "reindex system", "CockroachDB does not require reindexing.")
		}
	case 802:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4896
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[2].str}
		}
	case 803:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4897
		{
			sqlVAL.union.val = &tree.ShowVar{Name: sqlDollar[3].str}
		}
	case 804:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4898
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 808:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:4909
		{
			sqlVAL.str = "client_encoding"
		}
	case 811:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4913
		{
			sqlVAL.str = "timezone"
		}
	case 812:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:4914
		{
			return helpWith(sqllex, "SHOW SESSION")
		}
	case 813:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4928
		{
			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 814:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:4932
		{

			sqlVAL.union.val = &tree.ShowTableStats{Table: sqlDollar[7].union.unresolvedObjectName(), UsingJSON: true}
		}
	case 815:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4936
		{
			return helpWith(sqllex, "SHOW STATISTICS")
		}
	case 816:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4947
		{

			id, err := sqlDollar[3].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ShowHistogram{HistogramID: id}
		}
	case 817:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:4955
		{
			return helpWith(sqllex, "SHOW HISTOGRAM")
		}
	case 818:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4963
		{
			sqlVAL.union.val = &tree.ShowBackup{
				InCollection: sqlDollar[4].union.expr(),
			}
		}
	case 819:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:4969
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupDefaultDetails,
				Path:    sqlDollar[3].union.expr(),
				Options: sqlDollar[4].union.kvOptions(),
			}
		}
	case 820:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:4977
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:      tree.BackupDefaultDetails,
				Path:         sqlDollar[3].union.expr(),
				InCollection: sqlDollar[5].union.expr(),
				Options:      sqlDollar[6].union.kvOptions(),
			}
		}
	case 821:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4986
		{
			sqlVAL.union.val = &tree.ShowBackup{
				Details:              tree.BackupDefaultDetails,
				ShouldIncludeSchemas: true,
				Path:                 sqlDollar[4].union.expr(),
				Options:              sqlDollar[5].union.kvOptions(),
			}
		}
	case 822:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:4995
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupRangeDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 823:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5004
		{

			sqlVAL.union.val = &tree.ShowBackup{
				Details: tree.BackupFileDetails,
				Path:    sqlDollar[4].union.expr(),
				Options: sqlDollar[5].union.kvOptions(),
			}
		}
	case 824:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5012
		{
			return helpWith(sqllex, "SHOW BACKUP")
		}
	case 825:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5022
		{
			sqlVAL.union.val = &tree.ShowClusterSetting{Name: strings.Join(sqlDollar[4].union.strs(), ".")}
		}
	case 826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5026
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 827:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5029
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 828:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5031
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{All: true}
		}
	case 829:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5034
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 830:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5036
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 831:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5040
		{
			sqlVAL.union.val = &tree.ShowClusterSettingList{}
		}
	case 832:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5043
		{
			return helpWith(sqllex, "SHOW CLUSTER SETTING")
		}
	case 833:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5051
		{
			sqlVAL.union.val = &tree.ShowColumns{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5054
		{
			return helpWith(sqllex, "SHOW COLUMNS")
		}
	case 835:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5062
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 836:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5066
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsDB: true, Database: tree.Name(sqlDollar[5].str)}
		}
	case 837:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5070
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsIndex: true, Index: sqlDollar[5].union.tableIndexName()}
		}
	case 838:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5074
		{
			sqlVAL.union.val = &tree.ShowPartitions{IsTable: true, Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5077
		{
			return helpWith(sqllex, "SHOW PARTITIONS")
		}
	case 840:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5085
		{
			sqlVAL.union.val = &tree.ShowDatabases{WithComment: sqlDollar[3].union.bool()}
		}
	case 841:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5088
		{
			return helpWith(sqllex, "SHOW DATABASES")
		}
	case 842:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5094
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				Roles: sqlDollar[4].union.nameList(),
			}
		}
	case 843:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5099
		{
			sqlVAL.union.val = &tree.ShowDefaultPrivileges{
				ForAllRoles: true,
			}
		}
	case 844:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5104
		{
			return helpWith(sqllex, "SHOW DEFAULT PRIVILEGES")
		}
	case 845:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5111
		{
			sqlVAL.union.val = &tree.ShowEnums{}
		}
	case 846:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5115
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
			}
		}
	case 847:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5125
		{
			sqlVAL.union.val = &tree.ShowEnums{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
			}
		}
	case 848:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5134
		{
			return helpWith(sqllex, "SHOW ENUMS")
		}
	case 849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5141
		{
			sqlVAL.union.val = &tree.ShowTypes{}
		}
	case 850:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5144
		{
			return helpWith(sqllex, "SHOW TYPES")
		}
	case 851:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5157
		{
			lst := sqlDollar[3].union.targetListPtr()
			if lst != nil && lst.ForRoles {
				sqlVAL.union.val = &tree.ShowRoleGrants{Roles: lst.Roles, Grantees: sqlDollar[4].union.nameList()}
			} else {
				sqlVAL.union.val = &tree.ShowGrants{Targets: lst, Grantees: sqlDollar[4].union.nameList()}
			}
		}
	case 852:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5165
		{
			return helpWith(sqllex, "SHOW GRANTS")
		}
	case 853:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5173
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5176
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 855:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5178
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 856:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5182
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 857:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5186
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5189
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 859:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5191
		{
			sqlVAL.union.val = &tree.ShowIndexes{Table: sqlDollar[4].union.unresolvedObjectName(), WithComment: sqlDollar[5].union.bool()}
		}
	case 860:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5195
		{
			sqlVAL.union.val = &tree.ShowDatabaseIndexes{Database: tree.Name(sqlDollar[5].str), WithComment: sqlDollar[6].union.bool()}
		}
	case 861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5198
		{
			return helpWith(sqllex, "SHOW INDEXES")
		}
	case 862:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5206
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5209
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 864:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5211
		{
			sqlVAL.union.val = &tree.ShowConstraints{Table: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5214
		{
			return helpWith(sqllex, "SHOW CONSTRAINTS")
		}
	case 866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5222
		{
			sqlVAL.union.val = &tree.ShowQueries{All: false, Cluster: sqlDollar[2].union.bool()}
		}
	case 867:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5225
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 868:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5227
		{
			sqlVAL.union.val = &tree.ShowQueries{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 869:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5230
		{
			return helpWith(sqllex, "SHOW STATEMENTS")
		}
	case 870:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5234
		{
			sqlVAL.union.val = true
		}
	case 871:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5236
		{
			sqlVAL.union.val = true
		}
	case 872:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5238
		{
			sqlVAL.union.val = false
		}
	case 875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5255
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: true}
		}
	case 876:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5259
		{
			sqlVAL.union.val = &tree.ShowJobs{Automatic: false}
		}
	case 877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5263
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{}
		}
	case 878:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5266
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5267
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 880:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5268
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5270
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[3].union.slct()}
		}
	case 882:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5274
		{
			sqlVAL.union.val = &tree.ShowJobs{Jobs: sqlDollar[5].union.slct(), Block: true}
		}
	case 883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5278
		{
			sqlVAL.union.val = &tree.ShowJobs{Schedules: sqlDollar[3].union.slct()}
		}
	case 884:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5282
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{Jobs: sqlDollar[4].union.slct()}
		}
	case 885:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5285
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 886:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5287
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
			}
		}
	case 887:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5295
		{
			sqlVAL.union.val = &tree.ShowChangefeedJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[4].union.expr()}}},
				},
			}
		}
	case 888:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5303
		{
			sqlVAL.union.val = &tree.ShowJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[5].union.expr()}}},
				},
				Block: true,
			}
		}
	case 889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5311
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 890:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5312
		{
			return helpWith(sqllex, "SHOW JOBS")
		}
	case 891:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5322
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ExecutorType:   sqlDollar[3].union.executorType(),
			}
		}
	case 892:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5328
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 893:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5330
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: sqlDollar[2].union.scheduleState(),
				ExecutorType:   sqlDollar[4].union.executorType(),
			}
		}
	case 894:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5336
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 895:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5338
		{
			sqlVAL.union.val = &tree.ShowSchedules{
				WhichSchedules: tree.SpecifiedSchedules,
				ScheduleID:     sqlDollar[3].union.expr(),
			}
		}
	case 896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5344
		{
			return helpWith(sqllex, "SHOW SCHEDULES")
		}
	case 897:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5348
		{
			sqlVAL.union.val = tree.ActiveSchedules
		}
	case 898:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5352
		{
			sqlVAL.union.val = tree.PausedSchedules
		}
	case 899:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5358
		{
			sqlVAL.union.val = tree.InvalidExecutor
		}
	case 900:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5362
		{
			sqlVAL.union.val = tree.ScheduledBackupExecutor
		}
	case 901:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5366
		{
			sqlVAL.union.val = tree.ScheduledSQLStatsCompactionExecutor
		}
	case 902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5377
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceRaw, Compact: sqlDollar[2].union.bool()}
		}
	case 903:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5380
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 904:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5382
		{
			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceKV, Compact: sqlDollar[2].union.bool()}
		}
	case 905:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5385
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 906:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5387
		{

			sqlVAL.union.val = &tree.ShowTraceForSession{TraceType: tree.ShowTraceReplica, Compact: sqlDollar[2].union.bool()}
		}
	case 907:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5391
		{
			return helpWith(sqllex, "SHOW TRACE")
		}
	case 908:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5394
		{
			sqlVAL.union.val = true
		}
	case 909:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5395
		{
			sqlVAL.union.val = false
		}
	case 910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5403
		{
			sqlVAL.union.val = &tree.ShowSessions{Cluster: sqlDollar[2].union.bool()}
		}
	case 911:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5406
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5408
		{
			sqlVAL.union.val = &tree.ShowSessions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 913:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5411
		{
			return helpWith(sqllex, "SHOW SESSIONS")
		}
	case 914:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5419
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{
				CatalogName:     tree.Name(sqlDollar[4].str),
				ExplicitCatalog: true,
				SchemaName:      tree.Name(sqlDollar[6].str),
				ExplicitSchema:  true,
			},
				WithComment: sqlDollar[7].union.bool()}
		}
	case 915:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5429
		{
			sqlVAL.union.val = &tree.ShowTables{ObjectNamePrefix: tree.ObjectNamePrefix{

				SchemaName:     tree.Name(sqlDollar[4].str),
				ExplicitSchema: true,
			},
				WithComment: sqlDollar[5].union.bool()}
		}
	case 916:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5439
		{
			sqlVAL.union.val = &tree.ShowTables{WithComment: sqlDollar[3].union.bool()}
		}
	case 917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5442
		{
			return helpWith(sqllex, "SHOW TABLES")
		}
	case 918:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5449
		{
			sqlVAL.union.val = &tree.ShowTransactions{Cluster: sqlDollar[2].union.bool()}
		}
	case 919:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5452
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5454
		{
			sqlVAL.union.val = &tree.ShowTransactions{All: true, Cluster: sqlDollar[3].union.bool()}
		}
	case 921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5457
		{
			return helpWith(sqllex, "SHOW TRANSACTIONS")
		}
	case 922:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5460
		{
			sqlVAL.union.val = true
		}
	case 923:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5461
		{
			sqlVAL.union.val = false
		}
	case 924:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5468
		{
			sqlVAL.union.val = &tree.ShowSchemas{Database: tree.Name(sqlDollar[4].str)}
		}
	case 925:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5472
		{
			sqlVAL.union.val = &tree.ShowSchemas{}
		}
	case 926:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5475
		{
			return helpWith(sqllex, "SHOW SCHEMAS")
		}
	case 927:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5482
		{
			sqlVAL.union.val = &tree.ShowSequences{Database: tree.Name(sqlDollar[4].str)}
		}
	case 928:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5486
		{
			sqlVAL.union.val = &tree.ShowSequences{}
		}
	case 929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5489
		{
			return helpWith(sqllex, "SHOW SEQUENCES")
		}
	case 930:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5496
		{

			sqlVAL.union.val = &tree.ShowSyntax{Statement: sqlDollar[3].str}
		}
	case 931:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5500
		{
			return helpWith(sqllex, "SHOW SYNTAX")
		}
	case 932:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5504
		{

			sqlVAL.union.val = &tree.ShowLastQueryStatistics{Columns: sqlDollar[5].union.nameList()}
		}
	case 933:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5511
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 934:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5515
		{

			sqlVAL.union.val = tree.ShowLastQueryStatisticsDefaultColumns
		}
	case 935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5526
		{
			sqlVAL.union.val = &tree.ShowSavepointStatus{}
		}
	case 936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5529
		{
			return helpWith(sqllex, "SHOW SAVEPOINT")
		}
	case 937:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5537
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_isolation"}
		}
	case 938:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5542
		{

			sqlVAL.union.val = &tree.ShowVar{Name: "transaction_priority"}
		}
	case 939:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5547
		{

			sqlVAL.union.val = &tree.ShowTransactionStatus{}
		}
	case 940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5551
		{
			return helpWith(sqllex, "SHOW TRANSACTION")
		}
	case 941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5561
		{
			sqlVAL.union.val = &tree.ShowCreate{Name: sqlDollar[3].union.unresolvedObjectName()}
		}
	case 942:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5565
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeTable, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 943:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5570
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeView, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 944:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5575
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeSequence, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 945:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5580
		{

			sqlVAL.union.val = &tree.ShowCreate{Mode: tree.ShowCreateModeDatabase, Name: sqlDollar[4].union.unresolvedObjectName()}
		}
	case 946:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5585
		{
			sqlVAL.union.val = &tree.ShowCreateAllTables{}
		}
	case 947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5588
		{
			return helpWith(sqllex, "SHOW CREATE")
		}
	case 948:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5598
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{}
		}
	case 949:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5602
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 950:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5604
		{

			sqlVAL.union.val = &tree.ShowCreateSchedules{ScheduleID: sqlDollar[4].union.expr()}
		}
	case 951:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5608
		{
			return helpWith(sqllex, "SHOW CREATE SCHEDULES")
		}
	case 952:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5616
		{
			sqlVAL.union.val = &tree.ShowUsers{}
		}
	case 953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5619
		{
			return helpWith(sqllex, "SHOW USERS")
		}
	case 954:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5627
		{
			sqlVAL.union.val = &tree.ShowRoles{}
		}
	case 955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5630
		{
			return helpWith(sqllex, "SHOW ROLES")
		}
	case 956:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5640
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{NamedZone: tree.UnrestrictedName(sqlDollar[6].str)}}
		}
	case 957:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5644
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{Database: tree.Name(sqlDollar[6].str)}}
		}
	case 958:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5648
		{
			name := sqlDollar[6].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 959:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5656
		{
			name := sqlDollar[9].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: tree.TableIndexName{Table: name},
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 960:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:5664
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[6].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[7].str),
			}}
		}
	case 961:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:5671
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{ZoneSpecifier: tree.ZoneSpecifier{
				TableOrIndex: sqlDollar[9].union.tableIndexName(),
				Partition:    tree.Name(sqlDollar[6].str),
			}}
		}
	case 962:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5677
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 963:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5679
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 964:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5682
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 965:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5684
		{
			sqlVAL.union.val = &tree.ShowZoneConfig{}
		}
	case 966:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5687
		{
			return helpWith(sqllex, "SHOW ZONE CONFIGURATION")
		}
	case 968:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5691
		{
		}
	case 969:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5700
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: tree.TableIndexName{Table: name},
			}
		}
	case 970:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:5708
		{
			sqlVAL.union.val = &tree.ShowRangeForRow{
				Row:          sqlDollar[9].union.exprs(),
				TableOrIndex: sqlDollar[5].union.tableIndexName(),
			}
		}
	case 971:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5714
		{
			return helpWith(sqllex, "SHOW RANGE")
		}
	case 972:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5723
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: tree.TableIndexName{Table: name}}
		}
	case 973:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5728
		{
			sqlVAL.union.val = &tree.ShowRanges{TableOrIndex: sqlDollar[5].union.tableIndexName()}
		}
	case 974:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5732
		{
			sqlVAL.union.val = &tree.ShowRanges{DatabaseName: tree.Name(sqlDollar[5].str)}
		}
	case 975:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5735
		{
			return helpWith(sqllex, "SHOW RANGES")
		}
	case 976:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5744
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{}
		}
	case 977:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:5748
		{
			sqlVAL.union.val = &tree.ShowSurvivalGoal{
				DatabaseName: tree.Name(sqlDollar[6].str),
			}
		}
	case 978:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5764
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromCluster,
			}
		}
	case 979:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5770
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
			}
		}
	case 980:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5776
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromAllDatabases,
			}
		}
	case 981:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5782
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDatabase,
				DatabaseName:    tree.Name(sqlDollar[5].str),
			}
		}
	case 982:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5789
		{
			sqlVAL.union.val = &tree.ShowRegions{
				ShowRegionsFrom: tree.ShowRegionsFromDefault,
			}
		}
	case 983:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5794
		{
			return helpWith(sqllex, "SHOW REGIONS")
		}
	case 984:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5798
		{
			sqlVAL.union.val = &tree.ShowVar{Name: "locality"}
		}
	case 985:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:5804
		{

			sqlVAL.union.val = &tree.ShowFingerprints{Table: sqlDollar[5].union.unresolvedObjectName()}
		}
	case 986:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:5811
		{

			sqlVAL.union.val = &tree.ShowFullTableScans{}
		}
	case 987:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5818
		{
			tmp := sqlDollar[2].union.targetList()
			sqlVAL.union.val = &tmp
		}
	case 988:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:5823
		{
			sqlVAL.union.val = (*tree.TargetList)(nil)
		}
	case 989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5943
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 990:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5947
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}}}
		}
	case 991:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5951
		{

			sqlVAL.union.val = tree.TargetList{
				Tables:   tree.TablePatterns{&tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}},
				ForRoles: sqlDollar[1].str == "role",
			}
		}
	case 992:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:5990
		{
			sqlVAL.union.val = tree.TargetList{Tables: tree.TablePatterns{sqlDollar[1].union.unresolvedName()}}
		}
	case 993:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:5994
		{
			remainderPats := sqlDollar[3].union.tablePatterns()
			sqlVAL.union.val = tree.TargetList{Tables: append(tree.TablePatterns{sqlDollar[1].union.unresolvedName()}, remainderPats...)}
		}
	case 994:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:5999
		{
			sqlVAL.union.val = tree.TargetList{Tables: sqlDollar[2].union.tablePatterns()}
		}
	case 995:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6003
		{
			tenID := uint64(sqlDollar[2].union.int64())
			if tenID == 0 {
				return setErr(sqllex, errors.New("invalid tenant ID"))
			}
			sqlVAL.union.val = tree.TargetList{Tenant: roachpb.MakeTenantID(tenID)}
		}
	case 996:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6011
		{
			sqlVAL.union.val = tree.TargetList{Databases: sqlDollar[2].union.nameList()}
		}
	case 997:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6020
		{
			sqlVAL.union.val = tree.TargetList{ForRoles: true, Roles: sqlDollar[2].union.nameList()}
		}
	case 998:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6024
		{
			sqlVAL.union.val = tree.TargetList{Schemas: sqlDollar[2].union.objectNamePrefixList()}
		}
	case 999:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6028
		{
			sqlVAL.union.val = tree.TargetList{Types: sqlDollar[2].union.unresolvedObjectNames()}
		}
	case 1001:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6035
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1002:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6039
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1004:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6052
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1006:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6053
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1007:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6054
		{
			return helpWith(sqllex, "PAUSE")
		}
	case 1009:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6064
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1011:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6065
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1012:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6066
		{
			return helpWith(sqllex, "RESUME")
		}
	case 1013:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6076
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
			}
		}
	case 1014:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6085
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseJob,
				Reason:  sqlDollar[7].union.expr(),
			}
		}
	case 1015:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6094
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1016:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6096
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1017:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6100
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.PauseJob, Reason: sqlDollar[7].union.expr()}
		}
	case 1018:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6104
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.PauseJob}
		}
	case 1019:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6107
		{
			return helpWith(sqllex, "PAUSE JOBS")
		}
	case 1020:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6112
		{
			sqlVAL.union.val = sqlDollar[3].union.slct()
		}
	case 1021:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6116
		{
			sqlVAL.union.val = &tree.Select{
				Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
			}
		}
	case 1022:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6131
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.PauseSchedule,
			}
		}
	case 1023:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6139
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1024:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6141
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.PauseSchedule,
			}
		}
	case 1025:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6147
		{
			return helpWith(sqllex, "PAUSE SCHEDULES")
		}
	case 1026:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6155
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
			}
		}
	case 1027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6161
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
			}
		}
	case 1028:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6168
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:   sqlDollar[3].union.objectNamePrefix(),
				AuthRole: sqlDollar[5].union.user(),
			}
		}
	case 1029:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6175
		{
			sqlVAL.union.val = &tree.CreateSchema{
				Schema:      sqlDollar[6].union.objectNamePrefix(),
				IfNotExists: true,
				AuthRole:    sqlDollar[8].union.user(),
			}
		}
	case 1030:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6182
		{
			return helpWith(sqllex, "CREATE SCHEMA")
		}
	case 1031:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6193
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaRename{
					NewName: tree.Name(sqlDollar[6].str),
				},
			}
		}
	case 1032:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6202
		{
			sqlVAL.union.val = &tree.AlterSchema{
				Schema: sqlDollar[3].union.objectNamePrefix(),
				Cmd: &tree.AlterSchemaOwner{
					Owner: sqlDollar[6].union.user(),
				},
			}
		}
	case 1033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6210
		{
			return helpWith(sqllex, "ALTER SCHEMA")
		}
	case 1034:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6249
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      false,
				Interleave:       sqlDollar[9].union.interleave(),
				Defs:             sqlDollar[6].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[10].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[11].union.storageParams(),
				OnCommit:         sqlDollar[12].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[13].union.locality(),
			}
		}
	case 1035:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:6265
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:            name,
				IfNotExists:      true,
				Interleave:       sqlDollar[12].union.interleave(),
				Defs:             sqlDollar[9].union.tblDefs(),
				AsSource:         nil,
				PartitionByTable: sqlDollar[13].union.partitionByTable(),
				Persistence:      sqlDollar[2].union.persistence(),
				StorageParams:    sqlDollar[14].union.storageParams(),
				OnCommit:         sqlDollar[15].union.createTableOnCommitSetting(),
				Locality:         sqlDollar[16].union.locality(),
			}
		}
	case 1036:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6283
		{
			sqlVAL.union.val = sqlDollar[1].union.locality()
		}
	case 1037:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6287
		{
			sqlVAL.union.val = (*tree.Locality)(nil)
		}
	case 1039:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6294
		{

			sqlVAL.union.val = nil
		}
	case 1040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6300
		{
			return unimplemented(sqllex, "create table with oids")
		}
	case 1041:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6306
		{
			sqlVAL.str = ""
		}
	case 1042:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6310
		{

			return unimplementedWithIssueDetail(sqllex, 22456, "create table inherits")
		}
	case 1043:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6316
		{
			sqlVAL.union.val = nil
		}
	case 1044:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6320
		{
			sqlVAL.union.val = sqlDollar[3].union.storageParams()
		}
	case 1045:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6325
		{
			sqlVAL.union.val = tree.CreateTableOnCommitUnset
		}
	case 1046:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6329
		{
			sqlVAL.union.val = tree.CreateTableOnCommitPreserveRows
		}
	case 1047:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6333
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "delete rows")
		}
	case 1048:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6337
		{
			return unimplementedWithIssueDetail(sqllex, 46556, "drop")
		}
	case 1049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6343
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6347
		{
			sqlVAL.union.val = tree.StorageParam{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[3].union.expr()}
		}
	case 1051:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6353
		{
			sqlVAL.union.val = []tree.StorageParam{sqlDollar[1].union.storageParam()}
		}
	case 1052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6357
		{
			sqlVAL.union.val = append(sqlDollar[1].union.storageParams(), sqlDollar[3].union.storageParam())
		}
	case 1053:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6363
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   false,
				Interleave:    nil,
				Defs:          sqlDollar[5].union.tblDefs(),
				AsSource:      sqlDollar[8].union.slct(),
				StorageParams: sqlDollar[6].union.storageParams(),
				OnCommit:      sqlDollar[10].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1054:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:6377
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateTable{
				Table:         name,
				IfNotExists:   true,
				Interleave:    nil,
				Defs:          sqlDollar[8].union.tblDefs(),
				AsSource:      sqlDollar[11].union.slct(),
				StorageParams: sqlDollar[9].union.storageParams(),
				OnCommit:      sqlDollar[13].union.createTableOnCommitSetting(),
				Persistence:   sqlDollar[2].union.persistence(),
			}
		}
	case 1055:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6392
		{
		}
	case 1056:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6393
		{
		}
	case 1057:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6394
		{
			return unimplemented(sqllex, "create table as with no data")
		}
	case 1058:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6412
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1059:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6413
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1060:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6414
		{
			sqlVAL.union.val = tree.PersistencePermanent
		}
	case 1062:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6418
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1063:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6419
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1064:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6420
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1065:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6421
		{
			sqlVAL.union.val = tree.PersistenceTemporary
		}
	case 1066:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6422
		{
			sqlVAL.union.val = tree.PersistenceUnlogged
		}
	case 1068:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6427
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1069:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6433
		{
			sqlVAL.union.val = tree.TableDefs{sqlDollar[1].union.tblDef()}
		}
	case 1070:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6437
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1071:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6443
		{
			sqlVAL.union.val = sqlDollar[1].union.colDef()
		}
	case 1074:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6449
		{
			def := sqlDollar[1].union.constraintDef()
			valBehavior := sqlDollar[2].union.validationBehavior()
			if u, ok := def.(*tree.UniqueConstraintTableDef); ok && valBehavior == tree.ValidationSkip {
				typ := "PRIMARY KEY"
				if !u.PrimaryKey {
					typ = "UNIQUE"
				}
				return purposelyUnimplemented(sqllex, "table constraint", typ+" constraints cannot be marked NOT VALID")
			}
			sqlVAL.union.val = def
		}
	case 1075:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6462
		{
			sqlVAL.union.val = &tree.LikeTableDef{
				Name:    sqlDollar[2].union.unresolvedObjectName().ToTableName(),
				Options: sqlDollar[3].union.likeTableOptionList(),
			}
		}
	case 1076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), sqlDollar[3].union.likeTableOption())
		}
	case 1077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6475
		{
			opt := sqlDollar[3].union.likeTableOption()
			opt.Excluded = true
			sqlVAL.union.val = append(sqlDollar[1].union.likeTableOptionList(), opt)
		}
	case 1078:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6481
		{
			sqlVAL.union.val = []tree.LikeTableOption(nil)
		}
	case 1079:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6486
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding comments")
		}
	case 1080:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6487
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptConstraints}
		}
	case 1081:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6488
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptDefaults}
		}
	case 1082:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6489
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding identity")
		}
	case 1083:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6490
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptGenerated}
		}
	case 1084:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6491
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptIndexes}
		}
	case 1085:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6492
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding statistics")
		}
	case 1086:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6493
		{
			return unimplementedWithIssueDetail(sqllex, 47071, "like table in/excluding storage")
		}
	case 1087:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6494
		{
			sqlVAL.union.val = tree.LikeTableOption{Opt: tree.LikeTableOptAll}
		}
	case 1088:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6499
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.InterleaveDef{
				Parent:       name,
				Fields:       sqlDollar[6].union.nameList(),
				DropBehavior: sqlDollar[8].union.dropBehavior(),
			}
		}
	case 1089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6508
		{
			sqlVAL.union.val = (*tree.InterleaveDef)(nil)
		}
	case 1090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6515
		{

			sqlVAL.union.val = tree.DropCascade
		}
	case 1091:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6520
		{

			sqlVAL.union.val = tree.DropRestrict
		}
	case 1092:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6525
		{
			sqlVAL.union.val = tree.DropDefault
		}
	case 1093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6531
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1095:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6538
		{
			sqlVAL.str = ""
		}
	case 1097:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6545
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1098:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6551
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1099:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6559
		{
			sqlVAL.union.val = &tree.PartitionByIndex{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1100:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6565
		{
			sqlVAL.union.val = (*tree.PartitionByIndex)(nil)
		}
	case 1101:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6571
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				PartitionBy: sqlDollar[1].union.partitionBy(),
			}
		}
	case 1102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6577
		{
			sqlVAL.union.val = &tree.PartitionByTable{
				All:         true,
				PartitionBy: sqlDollar[4].union.partitionBy(),
			}
		}
	case 1104:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6587
		{
			sqlVAL.union.val = (*tree.PartitionByTable)(nil)
		}
	case 1105:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6593
		{
			sqlVAL.union.val = sqlDollar[3].union.partitionBy()
		}
	case 1106:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6599
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				List:   sqlDollar[6].union.listPartitions(),
			}
		}
	case 1107:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6606
		{
			sqlVAL.union.val = &tree.PartitionBy{
				Fields: sqlDollar[3].union.nameList(),
				Range:  sqlDollar[6].union.rangePartitions(),
			}
		}
	case 1108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6613
		{
			sqlVAL.union.val = (*tree.PartitionBy)(nil)
		}
	case 1109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6619
		{
			sqlVAL.union.val = []tree.ListPartition{sqlDollar[1].union.listPartition()}
		}
	case 1110:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6623
		{
			sqlVAL.union.val = append(sqlDollar[1].union.listPartitions(), sqlDollar[3].union.listPartition())
		}
	case 1111:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6629
		{
			sqlVAL.union.val = tree.ListPartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				Exprs:        sqlDollar[5].union.exprs(),
				Subpartition: sqlDollar[7].union.partitionBy(),
			}
		}
	case 1112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6639
		{
			sqlVAL.union.val = []tree.RangePartition{sqlDollar[1].union.rangePartition()}
		}
	case 1113:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6643
		{
			sqlVAL.union.val = append(sqlDollar[1].union.rangePartitions(), sqlDollar[3].union.rangePartition())
		}
	case 1114:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6649
		{
			sqlVAL.union.val = tree.RangePartition{
				Name:         tree.UnrestrictedName(sqlDollar[1].str),
				From:         sqlDollar[5].union.exprs(),
				To:           sqlDollar[9].union.exprs(),
				Subpartition: sqlDollar[11].union.partitionBy(),
			}
		}
	case 1115:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6663
		{
			typ := sqlDollar[2].union.typeReference()
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), typ, tree.IsReferenceSerialType(typ), sqlDollar[3].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = tableDef
		}
	case 1116:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6674
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1117:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6678
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1118:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6684
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Name: tree.Name(sqlDollar[2].str), Qualification: sqlDollar[3].union.colQualElem()}
		}
	case 1119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6688
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1120:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6692
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: tree.ColumnCollation(sqlDollar[2].str)}
		}
	case 1121:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6696
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1122:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6700
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[3].str), Create: true}}
		}
	case 1123:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6704
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Create: true}}
		}
	case 1124:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:6708
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[6].str), Create: true, IfNotExists: true}}
		}
	case 1125:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6726
		{
			sqlVAL.union.val = tree.NotNullConstraint{}
		}
	case 1126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6730
		{
			sqlVAL.union.val = tree.NullConstraint{}
		}
	case 1127:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6734
		{
			sqlVAL.union.val = tree.HiddenConstraint{}
		}
	case 1128:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6738
		{
			sqlVAL.union.val = tree.UniqueConstraint{
				WithoutIndex: sqlDollar[2].union.bool(),
			}
		}
	case 1129:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6744
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1130:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:6748
		{
			sqlVAL.union.val = tree.ShardedPrimaryKeyConstraint{
				Sharded:      true,
				ShardBuckets: sqlDollar[8].union.expr(),
			}
		}
	case 1131:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6755
		{
			sqlVAL.union.val = &tree.ColumnCheckConstraint{Expr: sqlDollar[3].union.expr()}
		}
	case 1132:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6759
		{
			sqlVAL.union.val = &tree.ColumnDefault{Expr: sqlDollar[2].union.expr()}
		}
	case 1133:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6763
		{
			sqlVAL.union.val = &tree.ColumnOnUpdate{Expr: sqlDollar[3].union.expr()}
		}
	case 1134:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6767
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ColumnFKConstraint{
				Table:   name,
				Col:     tree.Name(sqlDollar[3].str),
				Actions: sqlDollar[5].union.referenceActions(),
				Match:   sqlDollar[4].union.compositeKeyMatchMethod(),
			}
		}
	case 1135:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6777
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: false}
		}
	case 1136:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6781
		{
			sqlVAL.union.val = &tree.ColumnComputedDef{Expr: sqlDollar[3].union.expr(), Virtual: true}
		}
	case 1137:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6785
		{
			sqllex.Error("use AS ( <expr> ) STORED or AS ( <expr> ) VIRTUAL")
			return 1
		}
	case 1138:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6790
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1139:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6796
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{
				SeqOptions: sqlDollar[4].union.seqOpts(),
			}
		}
	case 1140:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6802
		{
			sqlVAL.union.val = &tree.GeneratedAlwaysAsIdentity{}
		}
	case 1141:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6806
		{
			sqlVAL.union.val = &tree.GeneratedByDefAsIdentity{}
		}
	case 1142:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6812
		{

			sqlVAL.union.val = true
		}
	case 1143:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6817
		{
			sqlVAL.union.val = false
		}
	case 1144:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6822
		{
		}
	case 1146:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6826
		{
		}
	case 1147:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6829
		{
		}
	case 1148:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6833
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[2].str),
				Columns:          sqlDollar[4].union.idxElems(),
				Sharded:          sqlDollar[6].union.shardedIndexDef(),
				Storing:          sqlDollar[7].union.nameList(),
				Interleave:       sqlDollar[8].union.interleave(),
				PartitionByIndex: sqlDollar[9].union.partitionByIndex(),
				StorageParams:    sqlDollar[10].union.storageParams(),
				Predicate:        sqlDollar[11].union.expr(),
			}
		}
	case 1149:
		sqlDollar = sqlS[sqlpt-12 : sqlpt+1]
//line sql-gen.y:6846
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Name:             tree.Name(sqlDollar[3].str),
					Columns:          sqlDollar[5].union.idxElems(),
					Sharded:          sqlDollar[7].union.shardedIndexDef(),
					Storing:          sqlDollar[8].union.nameList(),
					Interleave:       sqlDollar[9].union.interleave(),
					PartitionByIndex: sqlDollar[10].union.partitionByIndex(),
					StorageParams:    sqlDollar[11].union.storageParams(),
					Predicate:        sqlDollar[12].union.expr(),
				},
			}
		}
	case 1150:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:6861
		{
			sqlVAL.union.val = &tree.IndexTableDef{
				Name:             tree.Name(sqlDollar[3].str),
				Columns:          sqlDollar[5].union.idxElems(),
				Inverted:         true,
				PartitionByIndex: sqlDollar[7].union.partitionByIndex(),
				StorageParams:    sqlDollar[8].union.storageParams(),
				Predicate:        sqlDollar[9].union.expr(),
			}
		}
	case 1151:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6874
		{
			sqlVAL.union.val = &tree.FamilyTableDef{
				Name:    tree.Name(sqlDollar[2].str),
				Columns: sqlDollar[4].union.nameList(),
			}
		}
	case 1152:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6886
		{
			sqlVAL.union.val = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val.(tree.ConstraintTableDef).SetName(tree.Name(sqlDollar[2].str))
		}
	case 1153:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6891
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1154:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6897
		{
			sqlVAL.union.val = &tree.CheckConstraintTableDef{
				Expr: sqlDollar[3].union.expr(),
			}
		}
	case 1155:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:6904
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				WithoutIndex: sqlDollar[2].union.bool(),
				IndexTableDef: tree.IndexTableDef{
					Columns:          sqlDollar[4].union.idxElems(),
					Storing:          sqlDollar[6].union.nameList(),
					Interleave:       sqlDollar[7].union.interleave(),
					PartitionByIndex: sqlDollar[8].union.partitionByIndex(),
					Predicate:        sqlDollar[10].union.expr(),
				},
			}
		}
	case 1156:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:6917
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns:    sqlDollar[4].union.idxElems(),
					Sharded:    sqlDollar[6].union.shardedIndexDef(),
					Interleave: sqlDollar[7].union.interleave(),
				},
				PrimaryKey: true,
			}
		}
	case 1157:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:6929
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.ForeignKeyConstraintTableDef{
				Table:    name,
				FromCols: sqlDollar[4].union.nameList(),
				ToCols:   sqlDollar[8].union.nameList(),
				Match:    sqlDollar[9].union.compositeKeyMatchMethod(),
				Actions:  sqlDollar[10].union.referenceActions(),
			}
		}
	case 1158:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6940
		{
			return unimplementedWithIssueDetail(sqllex, 46657, "add constraint exclude using")
		}
	case 1159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6947
		{
			sqlVAL.union.val = sqlDollar[2].union.val
		}
	case 1160:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:6951
		{
			sqlVAL.union.val = tree.TableDefs(nil)
		}
	case 1161:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:6957
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[1].str), nil, false, sqlDollar[2].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef
			sqlVAL.union.val = tree.TableDefs{colToTableDef}
		}
	case 1162:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:6967
		{
			tableDef, err := tree.NewColumnTableDef(tree.Name(sqlDollar[3].str), nil, false, sqlDollar[4].union.colQuals())
			if err != nil {
				return setErr(sqllex, err)
			}

			var colToTableDef tree.TableDef = tableDef

			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), colToTableDef)
		}
	case 1163:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6978
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), sqlDollar[3].union.tblDef())
		}
	case 1164:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:6982
		{
			var constraintToTableDef tree.TableDef = sqlDollar[3].union.constraintDef()
			sqlVAL.union.val = append(sqlDollar[1].union.tblDefs(), constraintToTableDef)
		}
	case 1165:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:6989
		{
			sqlVAL.union.val = sqlDollar[1].union.constraintDef()
		}
	case 1166:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:6995
		{
			sqlVAL.union.val = &tree.UniqueConstraintTableDef{
				IndexTableDef: tree.IndexTableDef{
					Columns: sqlDollar[4].union.idxElems(),
				},
				PrimaryKey: true,
			}
		}
	case 1167:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7006
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7010
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1169:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7016
		{
			sqlVAL.union.val = tree.IndexElem{Column: tree.Name(sqlDollar[1].str)}
		}
	case 1170:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7022
		{
			sqlVAL.union.val = append(sqlDollar[1].union.colQuals(), sqlDollar[2].union.colQual())
		}
	case 1171:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7026
		{
			sqlVAL.union.val = []tree.NamedColumnQualification(nil)
		}
	case 1172:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7032
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: sqlDollar[1].union.colQualElem()}
		}
	case 1173:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7036
		{
			sqlVAL.union.val = tree.NamedColumnQualification{Qualification: &tree.ColumnFamilyConstraint{Family: tree.Name(sqlDollar[2].str)}}
		}
	case 1174:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7042
		{
			sqlVAL.union.val = tree.PrimaryKeyConstraint{}
		}
	case 1175:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7047
		{
		}
	case 1176:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7048
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "deferrable")
		}
	case 1177:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7049
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially deferred")
		}
	case 1178:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7050
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "def initially immediate")
		}
	case 1179:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7051
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially deferred")
		}
	case 1180:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7052
		{
			return unimplementedWithIssueDetail(sqllex, 31632, "initially immediate")
		}
	case 1184:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7070
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1185:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7074
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1186:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7080
		{
			sqlVAL.union.val = &tree.ShardedIndexDef{
				ShardBuckets: sqlDollar[6].union.expr(),
			}
		}
	case 1187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7086
		{
			sqlVAL.union.val = (*tree.ShardedIndexDef)(nil)
		}
	case 1188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7092
		{
			sqlVAL.union.val = sqlDollar[2].union.nameList()
		}
	case 1189:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7096
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7116
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7120
		{
			sqlVAL.union.val = tree.MatchFull
		}
	case 1192:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7124
		{
			return unimplementedWithIssueDetail(sqllex, 20305, "match partial")
		}
	case 1193:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7128
		{
			sqlVAL.union.val = tree.MatchSimple
		}
	case 1194:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7137
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction()}
		}
	case 1195:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7141
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction()}
		}
	case 1196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7145
		{
			sqlVAL.union.val = tree.ReferenceActions{Update: sqlDollar[1].union.referenceAction(), Delete: sqlDollar[2].union.referenceAction()}
		}
	case 1197:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7149
		{
			sqlVAL.union.val = tree.ReferenceActions{Delete: sqlDollar[1].union.referenceAction(), Update: sqlDollar[2].union.referenceAction()}
		}
	case 1198:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7153
		{
			sqlVAL.union.val = tree.ReferenceActions{}
		}
	case 1199:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7159
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1200:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7165
		{
			sqlVAL.union.val = sqlDollar[3].union.referenceAction()
		}
	case 1201:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7173
		{
			sqlVAL.union.val = tree.NoAction
		}
	case 1202:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7177
		{
			sqlVAL.union.val = tree.Restrict
		}
	case 1203:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7181
		{
			sqlVAL.union.val = tree.Cascade
		}
	case 1204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7185
		{
			sqlVAL.union.val = tree.SetNull
		}
	case 1205:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7189
		{
			sqlVAL.union.val = tree.SetDefault
		}
	case 1206:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7208
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name:        name,
				Persistence: sqlDollar[2].union.persistence(),
				Options:     sqlDollar[5].union.seqOpts(),
			}
		}
	case 1207:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7217
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateSequence{
				Name: name, Options: sqlDollar[8].union.seqOpts(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
			}
		}
	case 1208:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7225
		{
			return helpWith(sqllex, "CREATE SEQUENCE")
		}
	case 1210:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7229
		{
			sqlVAL.union.val = []tree.SequenceOption(nil)
		}
	case 1211:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7232
		{
			sqlVAL.union.val = []tree.SequenceOption{sqlDollar[1].union.seqOpt()}
		}
	case 1212:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7233
		{
			sqlVAL.union.val = append(sqlDollar[1].union.seqOpts(), sqlDollar[2].union.seqOpt())
		}
	case 1213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7236
		{
			return unimplementedWithIssueDetail(sqllex, 25110, sqlDollar[2].union.typeReference().SQLString())
		}
	case 1214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7237
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCycle}
		}
	case 1215:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7239
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptNoCycle}
		}
	case 1216:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7240
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: nil}
		}
	case 1217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7241
		{
			varName, err := sqlDollar[3].union.unresolvedName().NormalizeVarName()
			if err != nil {
				return setErr(sqllex, err)
			}
			columnItem, ok := varName.(*tree.ColumnItem)
			if !ok {
				sqllex.Error(fmt.Sprintf("invalid column name: %q", tree.ErrString(sqlDollar[3].union.unresolvedName())))
				return 1
			}
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptOwnedBy, ColumnItemVal: columnItem}
		}
	case 1218:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7251
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptCache, IntVal: &x}
		}
	case 1219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7253
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x}
		}
	case 1220:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7255
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptIncrement, IntVal: &x, OptionalWord: true}
		}
	case 1221:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7257
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue, IntVal: &x}
		}
	case 1222:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7259
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMinValue}
		}
	case 1223:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7260
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue, IntVal: &x}
		}
	case 1224:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7262
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptMaxValue}
		}
	case 1225:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7263
		{
			x := sqlDollar[2].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x}
		}
	case 1226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7265
		{
			x := sqlDollar[3].union.int64()
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptStart, IntVal: &x, OptionalWord: true}
		}
	case 1227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7267
		{
			sqlVAL.union.val = tree.SequenceOption{Name: tree.SeqOptVirtual}
		}
	case 1228:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7275
		{
			sqlVAL.union.val = &tree.Truncate{Tables: sqlDollar[3].union.tableNames(), DropBehavior: sqlDollar[4].union.dropBehavior()}
		}
	case 1229:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7278
		{
			return helpWith(sqllex, "TRUNCATE")
		}
	case 1230:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7282
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: sqlDollar[2].union.expr()}
		}
	case 1231:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7286
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: tree.DNull}
		}
	case 1232:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7296
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1233:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7300
		{
			sqlVAL.union.val = &tree.CreateRole{Name: sqlDollar[6].union.expr(), IfNotExists: true, KVOptions: sqlDollar[7].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1234:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7303
		{
			return helpWith(sqllex, "CREATE ROLE")
		}
	case 1235:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7314
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[3].union.expr(), KVOptions: sqlDollar[4].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1236:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7318
		{
			sqlVAL.union.val = &tree.AlterRole{Name: sqlDollar[5].union.expr(), IfExists: true, KVOptions: sqlDollar[6].union.kvOptions(), IsRole: sqlDollar[2].union.bool()}
		}
	case 1237:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7322
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[3].union.expr(), DatabaseName: tree.Name(sqlDollar[4].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1238:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7326
		{
			sqlVAL.union.val = &tree.AlterRoleSet{RoleName: sqlDollar[5].union.expr(), IfExists: true, DatabaseName: tree.Name(sqlDollar[6].str), IsRole: sqlDollar[2].union.bool(), SetOrReset: sqlDollar[7].union.setVar()}
		}
	case 1239:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7330
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: true, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1240:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7334
		{
			sqlVAL.union.val = &tree.AlterRoleSet{AllRoles: true, DatabaseName: tree.Name(sqlDollar[4].str), IsRole: false, SetOrReset: sqlDollar[5].union.setVar()}
		}
	case 1241:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7337
		{
			return helpWith(sqllex, "ALTER ROLE")
		}
	case 1242:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7341
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1243:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7345
		{
			sqlVAL.str = ""
		}
	case 1244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7351
		{
			sqlVAL.union.val = sqlDollar[2].union.setVar()
		}
	case 1245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7355
		{
			sqlVAL.union.val = &tree.SetVar{ResetAll: true}
		}
	case 1246:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7359
		{
			sqlVAL.union.val = &tree.SetVar{Name: sqlDollar[2].str, Values: tree.Exprs{tree.DefaultVal{}}}
		}
	case 1247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7367
		{
			sqlVAL.union.val = true
		}
	case 1248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7371
		{

			sqlVAL.union.val = true
		}
	case 1249:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7376
		{
			sqlVAL.union.val = false
		}
	case 1250:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7386
		{
			name := sqlDollar[5].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[6].union.nameList(),
				AsSource:    sqlDollar[8].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: false,
				Replace:     false,
			}
		}
	case 1251:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7400
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[8].union.nameList(),
				AsSource:    sqlDollar[10].union.slct(),
				Persistence: sqlDollar[4].union.persistence(),
				IfNotExists: false,
				Replace:     true,
			}
		}
	case 1252:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7412
		{
			name := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:        name,
				ColumnNames: sqlDollar[9].union.nameList(),
				AsSource:    sqlDollar[11].union.slct(),
				Persistence: sqlDollar[2].union.persistence(),
				IfNotExists: true,
				Replace:     false,
			}
		}
	case 1253:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7424
		{
			name := sqlDollar[4].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[5].union.nameList(),
				AsSource:     sqlDollar[7].union.slct(),
				Materialized: true,
			}
		}
	case 1254:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:7434
		{
			name := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateView{
				Name:         name,
				ColumnNames:  sqlDollar[8].union.nameList(),
				AsSource:     sqlDollar[10].union.slct(),
				Materialized: true,
				IfNotExists:  true,
			}
		}
	case 1255:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7444
		{
			return helpWith(sqllex, "CREATE VIEW")
		}
	case 1256:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7448
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1257:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7452
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1258:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7456
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1259:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7460
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1260:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7464
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1261:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7468
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1262:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7472
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1263:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7476
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1264:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7480
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1265:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7484
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1266:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7488
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1267:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7492
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1268:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7496
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7500
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1270:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7504
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7508
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1272:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7512
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7516
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(sqlDollar[1].str), Value: nil}
		}
	case 1276:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7525
		{
			sqlVAL.union.val = []tree.KVOption{sqlDollar[1].union.kvOption()}
		}
	case 1277:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7529
		{
			sqlVAL.union.val = append(sqlDollar[1].union.kvOptions(), sqlDollar[2].union.kvOption())
		}
	case 1278:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7535
		{
			sqlVAL.union.val = sqlDollar[2].union.kvOptions()
		}
	case 1279:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7539
		{
			sqlVAL.union.val = nil
		}
	case 1280:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7545
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: sqlDollar[3].union.expr()}
		}
	case 1281:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7549
		{
			sqlVAL.union.val = tree.KVOption{Key: tree.Name(fmt.Sprintf("%s_%s", sqlDollar[1].str, sqlDollar[2].str)), Value: tree.DNull}
		}
	case 1282:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7554
		{
		}
	case 1283:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7555
		{
			return unimplemented(sqllex, "create recursive view")
		}
	case 1284:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7564
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:   sqlDollar[3].union.unresolvedObjectName(),
				Variety:    tree.Enum,
				EnumLabels: sqlDollar[7].union.enumValueList(),
			}
		}
	case 1285:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:7572
		{
			sqlVAL.union.val = &tree.CreateType{
				TypeName:    sqlDollar[6].union.unresolvedObjectName(),
				Variety:     tree.Enum,
				EnumLabels:  sqlDollar[10].union.enumValueList(),
				IfNotExists: true,
			}
		}
	case 1286:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7580
		{
			return helpWith(sqllex, "CREATE TYPE")
		}
	case 1287:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7582
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1288:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7584
		{
			return unimplementedWithIssue(sqllex, 27791)
		}
	case 1289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7586
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "base")
		}
	case 1290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7588
		{
			return unimplementedWithIssueDetail(sqllex, 27793, "shell")
		}
	case 1291:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7590
		{
			return unimplementedWithIssueDetail(sqllex, 27796, "create")
		}
	case 1292:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7594
		{
			sqlVAL.union.val = sqlDollar[1].union.enumValueList()
		}
	case 1293:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7598
		{
			sqlVAL.union.val = tree.EnumValueList(nil)
		}
	case 1294:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7604
		{
			sqlVAL.union.val = tree.EnumValueList{tree.EnumValue(sqlDollar[1].str)}
		}
	case 1295:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7608
		{
			sqlVAL.union.val = append(sqlDollar[1].union.enumValueList(), tree.EnumValue(sqlDollar[3].str))
		}
	case 1296:
		sqlDollar = sqlS[sqlpt-17 : sqlpt+1]
//line sql-gen.y:7628
		{
			table := sqlDollar[7].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[5].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Columns:          sqlDollar[10].union.idxElems(),
				Sharded:          sqlDollar[12].union.shardedIndexDef(),
				Storing:          sqlDollar[13].union.nameList(),
				Interleave:       sqlDollar[14].union.interleave(),
				PartitionByIndex: sqlDollar[15].union.partitionByIndex(),
				StorageParams:    sqlDollar[16].union.storageParams(),
				Predicate:        sqlDollar[17].union.expr(),
				Inverted:         sqlDollar[8].union.bool(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1297:
		sqlDollar = sqlS[sqlpt-20 : sqlpt+1]
//line sql-gen.y:7646
		{
			table := sqlDollar[10].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[8].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Sharded:          sqlDollar[15].union.shardedIndexDef(),
				Storing:          sqlDollar[16].union.nameList(),
				Interleave:       sqlDollar[17].union.interleave(),
				PartitionByIndex: sqlDollar[18].union.partitionByIndex(),
				Inverted:         sqlDollar[11].union.bool(),
				StorageParams:    sqlDollar[19].union.storageParams(),
				Predicate:        sqlDollar[20].union.expr(),
				Concurrently:     sqlDollar[4].union.bool(),
			}
		}
	case 1298:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:7665
		{
			table := sqlDollar[8].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[6].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				Columns:          sqlDollar[10].union.idxElems(),
				Storing:          sqlDollar[12].union.nameList(),
				Interleave:       sqlDollar[13].union.interleave(),
				PartitionByIndex: sqlDollar[14].union.partitionByIndex(),
				StorageParams:    sqlDollar[15].union.storageParams(),
				Predicate:        sqlDollar[16].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1299:
		sqlDollar = sqlS[sqlpt-19 : sqlpt+1]
//line sql-gen.y:7682
		{
			table := sqlDollar[11].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.CreateIndex{
				Name:             tree.Name(sqlDollar[9].str),
				Table:            table,
				Unique:           sqlDollar[2].union.bool(),
				Inverted:         true,
				IfNotExists:      true,
				Columns:          sqlDollar[13].union.idxElems(),
				Storing:          sqlDollar[15].union.nameList(),
				Interleave:       sqlDollar[16].union.interleave(),
				PartitionByIndex: sqlDollar[17].union.partitionByIndex(),
				StorageParams:    sqlDollar[18].union.storageParams(),
				Predicate:        sqlDollar[19].union.expr(),
				Concurrently:     sqlDollar[5].union.bool(),
			}
		}
	case 1300:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7699
		{
			return helpWith(sqllex, "CREATE INDEX")
		}
	case 1301:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7703
		{

			switch sqlDollar[2].str {
			case "gin", "gist":
				sqlVAL.union.val = true
			case "btree":
				sqlVAL.union.val = false
			case "hash", "spgist", "brin":
				return unimplemented(sqllex, "index using "+sqlDollar[2].str)
			default:
				sqllex.Error("unrecognized access method: " + sqlDollar[2].str)
				return 1
			}
		}
	case 1302:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7718
		{
			sqlVAL.union.val = false
		}
	case 1303:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7724
		{
			sqlVAL.union.val = true
		}
	case 1304:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7728
		{
			sqlVAL.union.val = false
		}
	case 1305:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7734
		{
			sqlVAL.union.val = true
		}
	case 1306:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7738
		{
			sqlVAL.union.val = false
		}
	case 1307:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7744
		{
			sqlVAL.union.val = tree.IndexElemList{sqlDollar[1].union.idxElem()}
		}
	case 1308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7748
		{
			sqlVAL.union.val = append(sqlDollar[1].union.idxElems(), sqlDollar[3].union.idxElem())
		}
	case 1309:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7757
		{
			e := sqlDollar[2].union.idxElem()
			e.Expr = sqlDollar[1].union.expr()
			sqlVAL.union.val = e
		}
	case 1310:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7763
		{
			e := sqlDollar[4].union.idxElem()
			e.Expr = sqlDollar[2].union.expr()
			sqlVAL.union.val = e
		}
	case 1311:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7769
		{
			e := sqlDollar[2].union.idxElem()
			e.Column = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = e
		}
	case 1312:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:7777
		{

			opClass := sqlDollar[1].str
			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()
			if opClass != "" {
				if opClass == "gin_trgm_ops" || opClass == "gist_trgm_ops" {
					return unimplementedWithIssueDetail(sqllex, 41285, "index using "+opClass)
				}
				return unimplementedWithIssue(sqllex, 47420)
			}

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = tree.IndexElem{Direction: dir, NullsOrder: nullsOrder}
		}
	case 1313:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7801
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1314:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7802
		{
			sqlVAL.str = ""
		}
	case 1315:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7805
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1316:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7806
		{
			sqlVAL.str = ""
		}
	case 1317:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7810
		{
			sqlVAL.union.val = tree.Ascending
		}
	case 1318:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:7814
		{
			sqlVAL.union.val = tree.Descending
		}
	case 1319:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:7818
		{
			sqlVAL.union.val = tree.DefaultDirection
		}
	case 1320:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7824
		{
			sqlVAL.union.val = &tree.ReparentDatabase{Name: tree.Name(sqlDollar[3].str), Parent: tree.Name(sqlDollar[9].str)}
		}
	case 1321:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7830
		{
			sqlVAL.union.val = &tree.RenameDatabase{Name: tree.Name(sqlDollar[3].str), NewName: tree.Name(sqlDollar[6].str)}
		}
	case 1322:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7836
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: false}
		}
	case 1323:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7842
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: false}
		}
	case 1324:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7850
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false,
			}
		}
	case 1325:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7856
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true,
			}
		}
	case 1326:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7864
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Locality: sqlDollar[5].union.locality(),
				IfExists: false,
			}
		}
	case 1327:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7872
		{
			sqlVAL.union.val = &tree.AlterTableLocality{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Locality: sqlDollar[7].union.locality(),
				IfExists: true,
			}
		}
	case 1328:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7882
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelGlobal,
			}
		}
	case 1329:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7888
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[6].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1330:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7895
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1331:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7901
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1332:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7907
		{
			sqlVAL.union.val = &tree.Locality{
				TableRegion:   tree.Name(sqlDollar[4].str),
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1333:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:7914
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1334:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:7920
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelTable,
			}
		}
	case 1335:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:7926
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel: tree.LocalityLevelRow,
			}
		}
	case 1336:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7932
		{
			sqlVAL.union.val = &tree.Locality{
				LocalityLevel:       tree.LocalityLevelRow,
				RegionalByRowColumn: tree.Name(sqlDollar[6].str),
			}
		}
	case 1337:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7941
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
			}
		}
	case 1338:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7949
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
			}
		}
	case 1339:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7959
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsView: true,
			}
		}
	case 1340:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:7965
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[7].str),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1341:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:7975
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsView: true,
			}
		}
	case 1342:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:7981
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Schema:         tree.Name(sqlDollar[9].str),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1343:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:7993
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[3].union.unresolvedObjectName(),
				Owner:    sqlDollar[6].union.user(),
				IfExists: false,
				IsView:   true,
			}
		}
	case 1344:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8002
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[4].union.unresolvedObjectName(),
				Owner:          sqlDollar[7].union.user(),
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1345:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8012
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:     sqlDollar[5].union.unresolvedObjectName(),
				Owner:    sqlDollar[8].union.user(),
				IfExists: true,
				IsView:   true,
			}
		}
	case 1346:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8021
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:           sqlDollar[6].union.unresolvedObjectName(),
				Owner:          sqlDollar[9].union.user(),
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1347:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8033
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[3].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[6].str), IfExists: false, IsSequence: true,
			}
		}
	case 1348:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8039
		{
			sqlVAL.union.val = &tree.AlterTableSetSchema{
				Name: sqlDollar[5].union.unresolvedObjectName(), Schema: tree.Name(sqlDollar[8].str), IfExists: true, IsSequence: true,
			}
		}
	case 1349:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8047
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[3].union.unresolvedObjectName(),
				Owner:      sqlDollar[6].union.user(),
				IfExists:   false,
				IsSequence: true,
			}
		}
	case 1350:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8056
		{
			sqlVAL.union.val = &tree.AlterTableOwner{
				Name:       sqlDollar[5].union.unresolvedObjectName(),
				Owner:      sqlDollar[8].union.user(),
				IfExists:   true,
				IsSequence: true,
			}
		}
	case 1351:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8067
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsView: true}
		}
	case 1352:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8073
		{
			name := sqlDollar[4].union.unresolvedObjectName()
			newName := sqlDollar[7].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       false,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1353:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8085
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsView: true}
		}
	case 1354:
		sqlDollar = sqlS[sqlpt-9 : sqlpt+1]
//line sql-gen.y:8091
		{
			name := sqlDollar[6].union.unresolvedObjectName()
			newName := sqlDollar[9].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{
				Name:           name,
				NewName:        newName,
				IfExists:       true,
				IsView:         true,
				IsMaterialized: true,
			}
		}
	case 1355:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8105
		{
			name := sqlDollar[3].union.unresolvedObjectName()
			newName := sqlDollar[6].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: false, IsSequence: true}
		}
	case 1356:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8111
		{
			name := sqlDollar[5].union.unresolvedObjectName()
			newName := sqlDollar[8].union.unresolvedObjectName()
			sqlVAL.union.val = &tree.RenameTable{Name: name, NewName: newName, IfExists: true, IsSequence: true}
		}
	case 1357:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8119
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[3].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[6].str), IfExists: false}
		}
	case 1358:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8123
		{
			sqlVAL.union.val = &tree.RenameIndex{Index: sqlDollar[5].union.newTableIndexName(), NewName: tree.UnrestrictedName(sqlDollar[8].str), IfExists: true}
		}
	case 1359:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8135
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Grant:   sqlDollar[6].union.abbreviatedGrant(),
				IsGrant: true,
			}
		}
	case 1360:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8144
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				Roles:   sqlDollar[4].union.nameList(),
				Schemas: sqlDollar[5].union.objectNamePrefixList(),
				Revoke:  sqlDollar[6].union.abbreviatedRevoke(),
				IsGrant: false,
			}
		}
	case 1361:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8153
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Grant:       sqlDollar[8].union.abbreviatedGrant(),
				IsGrant:     true,
			}
		}
	case 1362:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8162
		{
			sqlVAL.union.val = &tree.AlterDefaultPrivileges{
				ForAllRoles: true,
				Schemas:     sqlDollar[7].union.objectNamePrefixList(),
				Revoke:      sqlDollar[8].union.abbreviatedRevoke(),
				IsGrant:     false,
			}
		}
	case 1363:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8170
		{
			return helpWith(sqllex, "ALTER DEFAULT PRIVILEGES")
		}
	case 1364:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8174
		{
			sqlVAL.union.val = tree.AbbreviatedGrant{
				Privileges:      sqlDollar[2].union.privilegeList(),
				Target:          sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:        sqlDollar[6].union.nameList(),
				WithGrantOption: sqlDollar[7].union.bool(),
			}
		}
	case 1365:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8185
		{
			sqlVAL.union.val = true
		}
	case 1366:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8189
		{
			sqlVAL.union.val = false
		}
	case 1367:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8195
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges: sqlDollar[2].union.privilegeList(),
				Target:     sqlDollar[4].union.alterDefaultPrivilegesTargetObject(),
				Grantees:   sqlDollar[6].union.nameList(),
			}
		}
	case 1368:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8203
		{
			sqlVAL.union.val = tree.AbbreviatedRevoke{
				Privileges:     sqlDollar[5].union.privilegeList(),
				Target:         sqlDollar[7].union.alterDefaultPrivilegesTargetObject(),
				Grantees:       sqlDollar[9].union.nameList(),
				GrantOptionFor: true,
			}
		}
	case 1369:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8214
		{
			sqlVAL.union.val = tree.Tables
		}
	case 1370:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8218
		{
			sqlVAL.union.val = tree.Sequences
		}
	case 1371:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8222
		{
			sqlVAL.union.val = tree.Types
		}
	case 1372:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8226
		{
			sqlVAL.union.val = tree.Schemas
		}
	case 1373:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8230
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1374:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8234
		{
			return unimplemented(sqllex, "ALTER DEFAULT PRIVILEGES ... ON FUNCTIONS ...")
		}
	case 1375:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8240
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1376:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8243
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1377:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8249
		{
			sqlVAL.union.val = sqlDollar[3].union.objectNamePrefixList()
		}
	case 1378:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8253
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{}
		}
	case 1379:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8258
		{
		}
	case 1380:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8259
		{
		}
	case 1381:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8262
		{
		}
	case 1382:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8263
		{
		}
	case 1383:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8271
		{
			sqlVAL.union.val = &tree.ReleaseSavepoint{Savepoint: tree.Name(sqlDollar[2].str)}
		}
	case 1384:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8274
		{
			return helpWith(sqllex, "RELEASE")
		}
	case 1385:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8284
		{
			sqlVAL.union.val = &tree.ControlJobs{
				Jobs: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeJob,
			}
		}
	case 1386:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8292
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1387:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8294
		{
			sqlVAL.union.val = &tree.ControlJobs{Jobs: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1388:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8298
		{
			sqlVAL.union.val = &tree.ControlJobsForSchedules{Schedules: sqlDollar[3].union.slct(), Command: tree.ResumeJob}
		}
	case 1389:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8301
		{
			return helpWith(sqllex, "RESUME JOBS")
		}
	case 1390:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8314
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.ResumeSchedule,
			}
		}
	case 1391:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8322
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1392:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8324
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.ResumeSchedule,
			}
		}
	case 1393:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8330
		{
			return helpWith(sqllex, "RESUME SCHEDULES")
		}
	case 1394:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8343
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: &tree.Select{
					Select: &tree.ValuesClause{Rows: []tree.Exprs{tree.Exprs{sqlDollar[3].union.expr()}}},
				},
				Command: tree.DropSchedule,
			}
		}
	case 1395:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8351
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1396:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8353
		{
			sqlVAL.union.val = &tree.ControlSchedules{
				Schedules: sqlDollar[3].union.slct(),
				Command:   tree.DropSchedule,
			}
		}
	case 1397:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8359
		{
			return helpWith(sqllex, "DROP SCHEDULES")
		}
	case 1398:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8367
		{
			sqlVAL.union.val = &tree.Savepoint{Name: tree.Name(sqlDollar[2].str)}
		}
	case 1399:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8370
		{
			return helpWith(sqllex, "SAVEPOINT")
		}
	case 1401:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8374
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1403:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8375
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1405:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8376
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1407:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8392
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1408:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8395
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1409:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8397
		{
			sqlVAL.union.val = sqlDollar[3].union.stmt()
		}
	case 1410:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8400
		{
			return helpWith(sqllex, "BEGIN")
		}
	case 1411:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8410
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1412:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8413
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1413:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8415
		{
			sqlVAL.union.val = &tree.CommitTransaction{}
		}
	case 1414:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8418
		{
			return helpWith(sqllex, "COMMIT")
		}
	case 1415:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8422
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1416:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8427
		{
		}
	case 1417:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8428
		{
		}
	case 1418:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8429
		{
		}
	case 1419:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8439
		{
			sqlVAL.union.val = &tree.RollbackTransaction{}
		}
	case 1420:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8443
		{
			sqlVAL.union.val = &tree.RollbackToSavepoint{Savepoint: tree.Name(sqlDollar[4].str)}
		}
	case 1421:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8446
		{
			return helpWith(sqllex, "ROLLBACK")
		}
	case 1422:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8449
		{
		}
	case 1423:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8450
		{
		}
	case 1424:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8454
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 1425:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8458
		{
			sqlVAL.str = sqlDollar[1].str
		}
	case 1426:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8464
		{
			sqlVAL.union.val = &tree.BeginTransaction{Modes: sqlDollar[1].union.transactionModes()}
		}
	case 1427:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8468
		{
			sqlVAL.union.val = &tree.BeginTransaction{}
		}
	case 1428:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8474
		{
			sqlVAL.union.val = sqlDollar[1].union.transactionModes()
		}
	case 1429:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8478
		{
			a := sqlDollar[1].union.transactionModes()
			b := sqlDollar[3].union.transactionModes()
			err := a.Merge(b)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1430:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8491
		{
		}
	case 1431:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8493
		{
		}
	case 1432:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8497
		{

			sqlVAL.union.val = tree.TransactionModes{Isolation: sqlDollar[1].union.isoLevel()}
		}
	case 1433:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8502
		{
			sqlVAL.union.val = tree.TransactionModes{UserPriority: sqlDollar[1].union.userPriority()}
		}
	case 1434:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8506
		{
			sqlVAL.union.val = tree.TransactionModes{ReadWriteMode: sqlDollar[1].union.readWriteMode()}
		}
	case 1435:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8510
		{
			sqlVAL.union.val = tree.TransactionModes{AsOf: sqlDollar[1].union.asOfClause()}
		}
	case 1436:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8514
		{
			sqlVAL.union.val = tree.TransactionModes{Deferrable: sqlDollar[1].union.deferrableMode()}
		}
	case 1437:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8520
		{
			sqlVAL.union.val = sqlDollar[2].union.userPriority()
		}
	case 1438:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8526
		{
			sqlVAL.union.val = sqlDollar[3].union.isoLevel()
		}
	case 1439:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8532
		{
			sqlVAL.union.val = tree.ReadOnly
		}
	case 1440:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8536
		{
			sqlVAL.union.val = tree.ReadWrite
		}
	case 1441:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8542
		{
			sqlVAL.union.val = tree.Deferrable
		}
	case 1442:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8546
		{
			sqlVAL.union.val = tree.NotDeferrable
		}
	case 1443:
		sqlDollar = sqlS[sqlpt-13 : sqlpt+1]
//line sql-gen.y:8556
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				Name:            tree.Name(sqlDollar[3].str),
				Template:        sqlDollar[5].str,
				Encoding:        sqlDollar[6].str,
				Collate:         sqlDollar[7].str,
				CType:           sqlDollar[8].str,
				ConnectionLimit: sqlDollar[9].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[10].str),
				Regions:         sqlDollar[11].union.nameList(),
				SurvivalGoal:    sqlDollar[12].union.survivalGoal(),
				Placement:       sqlDollar[13].union.dataPlacement(),
			}
		}
	case 1444:
		sqlDollar = sqlS[sqlpt-16 : sqlpt+1]
//line sql-gen.y:8571
		{
			sqlVAL.union.val = &tree.CreateDatabase{
				IfNotExists:     true,
				Name:            tree.Name(sqlDollar[6].str),
				Template:        sqlDollar[8].str,
				Encoding:        sqlDollar[9].str,
				Collate:         sqlDollar[10].str,
				CType:           sqlDollar[11].str,
				ConnectionLimit: sqlDollar[12].union.int32(),
				PrimaryRegion:   tree.Name(sqlDollar[13].str),
				Regions:         sqlDollar[14].union.nameList(),
				SurvivalGoal:    sqlDollar[15].union.survivalGoal(),
				Placement:       sqlDollar[16].union.dataPlacement(),
			}
		}
	case 1445:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8586
		{
			return helpWith(sqllex, "CREATE DATABASE")
		}
	case 1447:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8591
		{
			sqlVAL.str = ""
		}
	case 1448:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8596
		{
			sqlVAL.str = sqlDollar[4].str
		}
	case 1450:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8603
		{
			sqlVAL.union.val = tree.DataPlacementUnspecified
		}
	case 1451:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8609
		{

			sqlVAL.union.val = tree.DataPlacementRestricted
		}
	case 1452:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8614
		{

			sqlVAL.union.val = tree.DataPlacementDefault
		}
	case 1453:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8621
		{
			sqlVAL.union.val = sqlDollar[3].union.nameList()
		}
	case 1454:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8625
		{
			sqlVAL.union.val = tree.NameList(nil)
		}
	case 1455:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8631
		{

		}
	case 1457:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8638
		{
			sqlVAL.union.val = tree.SurvivalGoalRegionFailure
		}
	case 1458:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8642
		{
			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1459:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8646
		{

			sqlVAL.union.val = tree.SurvivalGoalZoneFailure
		}
	case 1461:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8655
		{
			sqlVAL.union.val = tree.SurvivalGoalDefault
		}
	case 1462:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8661
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1463:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8665
		{
			sqlVAL.str = ""
		}
	case 1464:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8671
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1465:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8675
		{
			sqlVAL.str = ""
		}
	case 1466:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8681
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1467:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8685
		{
			sqlVAL.str = ""
		}
	case 1468:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8691
		{
			sqlVAL.str = sqlDollar[3].str
		}
	case 1469:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8695
		{
			sqlVAL.str = ""
		}
	case 1470:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8701
		{
			ret, err := sqlDollar[4].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = ret
		}
	case 1471:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8709
		{
			sqlVAL.union.val = int32(-1)
		}
	case 1472:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8714
		{
		}
	case 1473:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8715
		{
		}
	case 1474:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8730
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1475:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:8737
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = sqlDollar[6].union.onConflict()
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[7].union.retClause()
		}
	case 1476:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8744
		{
			return helpWith(sqllex, "INSERT")
		}
	case 1477:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8755
		{
			sqlVAL.union.val = sqlDollar[5].union.stmt()
			sqlVAL.union.val.(*tree.Insert).With = sqlDollar[1].union.with()
			sqlVAL.union.val.(*tree.Insert).Table = sqlDollar[4].union.tblExpr()
			sqlVAL.union.val.(*tree.Insert).OnConflict = &tree.OnConflict{}
			sqlVAL.union.val.(*tree.Insert).Returning = sqlDollar[6].union.retClause()
		}
	case 1478:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8762
		{
			return helpWith(sqllex, "UPSERT")
		}
	case 1479:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8766
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &name
		}
	case 1480:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8775
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &name, As: tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}}
		}
	case 1481:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8780
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1482:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8786
		{
			sqlVAL.union.val = &tree.Insert{Rows: sqlDollar[1].union.slct()}
		}
	case 1483:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8790
		{
			sqlVAL.union.val = &tree.Insert{Columns: sqlDollar[2].union.nameList(), Rows: sqlDollar[4].union.slct()}
		}
	case 1484:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8794
		{
			sqlVAL.union.val = &tree.Insert{Rows: &tree.Select{}}
		}
	case 1485:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8800
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 1486:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8804
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 1488:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8824
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1489:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8828
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:   tree.NameList(nil),
				DoNothing: true,
			}
		}
	case 1490:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:8835
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				DoNothing:        true,
			}
		}
	case 1491:
		sqlDollar = sqlS[sqlpt-11 : sqlpt+1]
//line sql-gen.y:8843
		{
			sqlVAL.union.val = &tree.OnConflict{
				Columns:          sqlDollar[4].union.nameList(),
				ArbiterPredicate: sqlDollar[6].union.expr(),
				Exprs:            sqlDollar[10].union.updateExprs(),
				Where:            tree.NewWhere(tree.AstWhere, sqlDollar[11].union.expr()),
			}
		}
	case 1492:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8851
		{
			return unimplementedWithIssue(sqllex, 28161)
		}
	case 1493:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8855
		{
			ret := tree.ReturningExprs(sqlDollar[2].union.selExprs())
			sqlVAL.union.val = &ret
		}
	case 1494:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8860
		{
			sqlVAL.union.val = tree.ReturningNothingClause
		}
	case 1495:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8864
		{
			sqlVAL.union.val = tree.AbsentReturningClause
		}
	case 1496:
		sqlDollar = sqlS[sqlpt-10 : sqlpt+1]
//line sql-gen.y:8881
		{
			sqlVAL.union.val = &tree.Update{
				With:      sqlDollar[1].union.with(),
				Table:     sqlDollar[3].union.tblExpr(),
				Exprs:     sqlDollar[5].union.updateExprs(),
				From:      sqlDollar[6].union.tblExprs(),
				Where:     tree.NewWhere(tree.AstWhere, sqlDollar[7].union.expr()),
				OrderBy:   sqlDollar[8].union.orderBy(),
				Limit:     sqlDollar[9].union.limit(),
				Returning: sqlDollar[10].union.retClause(),
			}
		}
	case 1497:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8893
		{
			return helpWith(sqllex, "UPDATE")
		}
	case 1498:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:8896
		{
			sqlVAL.union.val = sqlDollar[2].union.tblExprs()
		}
	case 1499:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:8899
		{
			sqlVAL.union.val = tree.TableExprs{}
		}
	case 1500:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:8905
		{
			sqlVAL.union.val = tree.UpdateExprs{sqlDollar[1].union.updateExpr()}
		}
	case 1501:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8909
		{
			sqlVAL.union.val = append(sqlDollar[1].union.updateExprs(), sqlDollar[3].union.updateExpr())
		}
	case 1504:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8922
		{
			sqlVAL.union.val = &tree.UpdateExpr{Names: tree.NameList{tree.Name(sqlDollar[1].str)}, Expr: sqlDollar[3].union.expr()}
		}
	case 1505:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:8925
		{
			return unimplementedWithIssue(sqllex, 27792)
		}
	case 1506:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8929
		{
			sqlVAL.union.val = &tree.UpdateExpr{Tuple: true, Names: sqlDollar[2].union.nameList(), Expr: sqlDollar[5].union.expr()}
		}
	case 1507:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:8940
		{
			sqlVAL.union.val = &tree.ReassignOwnedBy{
				OldRoles: sqlDollar[4].union.nameList(),
				NewRole:  sqlDollar[6].union.user(),
			}
		}
	case 1508:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8946
		{
			return helpWith(sqllex, "REASSIGN OWNED BY")
		}
	case 1509:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:8955
		{
			sqlVAL.union.val = &tree.DropOwnedBy{
				Roles:        sqlDollar[4].union.nameList(),
				DropBehavior: sqlDollar[5].union.dropBehavior(),
			}
		}
	case 1510:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:8961
		{
			return helpWith(sqllex, "DROP OWNED BY")
		}
	case 1512:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9002
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1513:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9008
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: sqlDollar[2].union.slct()}
		}
	case 1514:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9012
		{
			sqlVAL.union.val = &tree.ParenSelect{Select: &tree.Select{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1515:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9027
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1516:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9031
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy()}
		}
	case 1517:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9035
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[3].union.lockingClause()}
		}
	case 1518:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9039
		{
			sqlVAL.union.val = &tree.Select{Select: sqlDollar[1].union.selectStmt(), OrderBy: sqlDollar[2].union.orderBy(), Limit: sqlDollar[3].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1519:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9043
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt()}
		}
	case 1520:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9047
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy()}
		}
	case 1521:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9051
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[5].union.limit(), Locking: sqlDollar[4].union.lockingClause()}
		}
	case 1522:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9055
		{
			sqlVAL.union.val = &tree.Select{With: sqlDollar[1].union.with(), Select: sqlDollar[2].union.selectStmt(), OrderBy: sqlDollar[3].union.orderBy(), Limit: sqlDollar[4].union.limit(), Locking: sqlDollar[5].union.lockingClause()}
		}
	case 1523:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9060
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1524:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9061
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1525:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9064
		{
			sqlVAL.union.val = sqlDollar[1].union.lockingClause()
		}
	case 1526:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9065
		{
			sqlVAL.union.val = (tree.LockingClause)(nil)
		}
	case 1527:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9069
		{
			sqlVAL.union.val = tree.LockingClause{sqlDollar[1].union.lockingItem()}
		}
	case 1528:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9073
		{
			sqlVAL.union.val = append(sqlDollar[1].union.lockingClause(), sqlDollar[2].union.lockingItem())
		}
	case 1529:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9079
		{
			sqlVAL.union.val = &tree.LockingItem{
				Strength:   sqlDollar[1].union.lockingStrength(),
				Targets:    sqlDollar[2].union.tableNames(),
				WaitPolicy: sqlDollar[3].union.lockingWaitPolicy(),
			}
		}
	case 1530:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9088
		{
			sqlVAL.union.val = tree.ForUpdate
		}
	case 1531:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9089
		{
			sqlVAL.union.val = tree.ForNoKeyUpdate
		}
	case 1532:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9090
		{
			sqlVAL.union.val = tree.ForShare
		}
	case 1533:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9091
		{
			sqlVAL.union.val = tree.ForKeyShare
		}
	case 1534:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9094
		{
			sqlVAL.union.val = tree.TableNames{}
		}
	case 1535:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9095
		{
			sqlVAL.union.val = sqlDollar[2].union.tableNames()
		}
	case 1536:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9098
		{
			sqlVAL.union.val = tree.LockWaitBlock
		}
	case 1537:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9099
		{
			sqlVAL.union.val = tree.LockWaitSkip
		}
	case 1538:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9100
		{
			sqlVAL.union.val = tree.LockWaitError
		}
	case 1539:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9105
		{
			return helpWith(sqllex, "<SELECTCLAUSE>")
		}
	case 1543:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9140
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1545:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9141
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1547:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9142
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1549:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9164
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:   sqlDollar[3].union.selExprs(),
				From:    sqlDollar[4].union.from(),
				Where:   tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy: sqlDollar[6].union.groupBy(),
				Having:  tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:  sqlDollar[8].union.window(),
			}
		}
	case 1550:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9177
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct: sqlDollar[2].union.bool(),
				Exprs:    sqlDollar[3].union.selExprs(),
				From:     sqlDollar[4].union.from(),
				Where:    tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:  sqlDollar[6].union.groupBy(),
				Having:   tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:   sqlDollar[8].union.window(),
			}
		}
	case 1551:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:9191
		{
			sqlVAL.union.val = &tree.SelectClause{
				Distinct:   true,
				DistinctOn: sqlDollar[2].union.distinctOn(),
				Exprs:      sqlDollar[3].union.selExprs(),
				From:       sqlDollar[4].union.from(),
				Where:      tree.NewWhere(tree.AstWhere, sqlDollar[5].union.expr()),
				GroupBy:    sqlDollar[6].union.groupBy(),
				Having:     tree.NewWhere(tree.AstHaving, sqlDollar[7].union.expr()),
				Window:     sqlDollar[8].union.window(),
			}
		}
	case 1552:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9203
		{
			return helpWith(sqllex, "SELECT")
		}
	case 1553:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9207
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.UnionOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1554:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9216
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.IntersectOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1555:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9225
		{
			sqlVAL.union.val = &tree.UnionClause{
				Type:  tree.ExceptOp,
				Left:  &tree.Select{Select: sqlDollar[1].union.selectStmt()},
				Right: &tree.Select{Select: sqlDollar[4].union.selectStmt()},
				All:   sqlDollar[3].union.bool(),
			}
		}
	case 1556:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9240
		{
			sqlVAL.union.val = &tree.SelectClause{
				Exprs:       tree.SelectExprs{tree.StarSelectExpr()},
				From:        tree.From{Tables: tree.TableExprs{sqlDollar[2].union.tblExpr()}},
				TableSelect: true,
			}
		}
	case 1557:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9247
		{
			return helpWith(sqllex, "TABLE")
		}
	case 1558:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9259
		{
			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1559:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9263
		{

			sqlVAL.union.val = &tree.With{CTEList: sqlDollar[2].union.ctes()}
		}
	case 1560:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9268
		{
			sqlVAL.union.val = &tree.With{Recursive: true, CTEList: sqlDollar[3].union.ctes()}
		}
	case 1561:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9274
		{
			sqlVAL.union.val = []*tree.CTE{sqlDollar[1].union.cte()}
		}
	case 1562:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9278
		{
			sqlVAL.union.val = append(sqlDollar[1].union.ctes(), sqlDollar[3].union.cte())
		}
	case 1563:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9284
		{
			sqlVAL.union.val = true
		}
	case 1564:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9288
		{
			sqlVAL.union.val = false
		}
	case 1565:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9294
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Set: false,
				},
				Stmt: sqlDollar[5].union.stmt(),
			}
		}
	case 1566:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:9304
		{
			sqlVAL.union.val = &tree.CTE{
				Name: tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()},
				Mtr: tree.MaterializeClause{
					Materialize: sqlDollar[4].union.bool(),
					Set:         true,
				},
				Stmt: sqlDollar[6].union.stmt(),
			}
		}
	case 1567:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9316
		{
		}
	case 1568:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9317
		{
		}
	case 1569:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9321
		{
			sqlVAL.union.val = sqlDollar[1].union.with()
		}
	case 1570:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9325
		{
			sqlVAL.union.val = nil
		}
	case 1571:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9330
		{
		}
	case 1572:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9331
		{
		}
	case 1573:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9335
		{
			sqlVAL.union.val = true
		}
	case 1574:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9339
		{
			sqlVAL.union.val = false
		}
	case 1575:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9343
		{
			sqlVAL.union.val = false
		}
	case 1576:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9349
		{
			sqlVAL.union.val = true
		}
	case 1577:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9355
		{
			sqlVAL.union.val = tree.DistinctOn(sqlDollar[4].union.exprs())
		}
	case 1578:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9360
		{
		}
	case 1579:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9361
		{
		}
	case 1580:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9364
		{
		}
	case 1581:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9365
		{
		}
	case 1582:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9369
		{
			sqlVAL.union.val = sqlDollar[1].union.orderBy()
		}
	case 1583:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9373
		{
			sqlVAL.union.val = tree.OrderBy(nil)
		}
	case 1584:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9379
		{
			sqlVAL.union.val = tree.OrderBy(sqlDollar[3].union.orders())
		}
	case 1585:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9385
		{
			sqlVAL.union.val = tree.OrderBy([]*tree.Order{sqlDollar[3].union.order()})
		}
	case 1586:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9389
		{
			sqllex.Error("multiple ORDER BY clauses are not supported in this function")
			return 1
		}
	case 1587:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9396
		{
			sqlVAL.union.val = []*tree.Order{sqlDollar[1].union.order()}
		}
	case 1588:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9400
		{
			sqlVAL.union.val = append(sqlDollar[1].union.orders(), sqlDollar[3].union.order())
		}
	case 1589:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9406
		{

			dir := sqlDollar[2].union.dir()
			nullsOrder := sqlDollar[3].union.nullsOrder()

			if nullsOrder != tree.DefaultNullsOrder {
				if dir == tree.Descending && nullsOrder == tree.NullsFirst {
					return unimplementedWithIssue(sqllex, 6224)
				}
				if dir != tree.Descending && nullsOrder == tree.NullsLast {
					return unimplementedWithIssue(sqllex, 6224)
				}
			}
			sqlVAL.union.val = &tree.Order{
				OrderType:  tree.OrderByColumn,
				Expr:       sqlDollar[1].union.expr(),
				Direction:  dir,
				NullsOrder: nullsOrder,
			}
		}
	case 1590:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9427
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{OrderType: tree.OrderByIndex, Direction: sqlDollar[4].union.dir(), Table: name}
		}
	case 1591:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9432
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.Order{
				OrderType: tree.OrderByIndex,
				Direction: sqlDollar[5].union.dir(),
				Table:     name,
				Index:     tree.UnrestrictedName(sqlDollar[4].str),
			}
		}
	case 1592:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9444
		{
			sqlVAL.union.val = tree.NullsFirst
		}
	case 1593:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9448
		{
			sqlVAL.union.val = tree.NullsLast
		}
	case 1594:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9452
		{
			sqlVAL.union.val = tree.DefaultNullsOrder
		}
	case 1595:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9458
		{
			if sqlDollar[1].union.limit() == nil {
				sqlVAL.union.val = sqlDollar[2].union.limit()
			} else {
				sqlVAL.union.val = sqlDollar[1].union.limit()
				sqlVAL.union.val.(*tree.Limit).Offset = sqlDollar[2].union.limit().Offset
			}
		}
	case 1596:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9467
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
			if sqlDollar[2].union.limit() != nil {
				sqlVAL.union.val.(*tree.Limit).Count = sqlDollar[2].union.limit().Count
				sqlVAL.union.val.(*tree.Limit).LimitAll = sqlDollar[2].union.limit().LimitAll
			}
		}
	case 1599:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9478
		{
			sqlVAL.union.val = sqlDollar[1].union.limit()
		}
	case 1600:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9479
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1602:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9483
		{
			sqlVAL.union.val = (*tree.Limit)(nil)
		}
	case 1603:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9487
		{
			sqlVAL.union.val = &tree.Limit{LimitAll: true}
		}
	case 1604:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9491
		{
			if sqlDollar[2].union.expr() == nil {
				sqlVAL.union.val = (*tree.Limit)(nil)
			} else {
				sqlVAL.union.val = &tree.Limit{Count: sqlDollar[2].union.expr()}
			}
		}
	case 1605:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9505
		{
			sqlVAL.union.val = &tree.Limit{Count: sqlDollar[3].union.expr()}
		}
	case 1606:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9509
		{
			sqlVAL.union.val = &tree.Limit{
				Count: tree.NewNumVal(constant.MakeInt64(1), "", false),
			}
		}
	case 1607:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9517
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1608:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9524
		{
			sqlVAL.union.val = &tree.Limit{Offset: sqlDollar[2].union.expr()}
		}
	case 1612:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9546
		{
		}
	case 1613:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9547
		{
		}
	case 1614:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9550
		{
		}
	case 1615:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9551
		{
		}
	case 1616:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9568
		{
			sqlVAL.union.val = tree.GroupBy(sqlDollar[3].union.exprs())
		}
	case 1617:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9572
		{
			sqlVAL.union.val = tree.GroupBy(nil)
		}
	case 1618:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9577
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1619:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9578
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1620:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9584
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1621:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9585
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "rollup")
		}
	case 1622:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9586
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "cube")
		}
	case 1623:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9587
		{
			return unimplementedWithIssueDetail(sqllex, 46280, "grouping sets")
		}
	case 1624:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9591
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1625:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9595
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1626:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9614
		{
			sqlVAL.union.val = &tree.ValuesClause{Rows: []tree.Exprs{sqlDollar[3].union.exprs()}}
		}
	case 1627:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9617
		{
			return helpWith(sqllex, "VALUES")
		}
	case 1628:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9619
		{
			valNode := sqlDollar[1].union.selectStmt().(*tree.ValuesClause)
			valNode.Rows = append(valNode.Rows, sqlDollar[4].union.exprs())
			sqlVAL.union.val = valNode
		}
	case 1629:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9631
		{
			sqlVAL.union.val = tree.From{Tables: sqlDollar[2].union.tblExprs(), AsOf: sqlDollar[3].union.asOfClause()}
		}
	case 1630:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9634
		{
			return helpWith(sqllex, "<SOURCE>")
		}
	case 1631:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9636
		{
			sqlVAL.union.val = tree.From{}
		}
	case 1632:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9642
		{
			sqlVAL.union.val = tree.TableExprs{sqlDollar[1].union.tblExpr()}
		}
	case 1633:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9646
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tblExprs(), sqlDollar[3].union.tblExpr())
		}
	case 1634:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9652
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 1635:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9656
		{

			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[4].union.int64())}
		}
	case 1636:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9661
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Ascending}
		}
	case 1637:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9666
		{

			sqlVAL.union.val = &tree.IndexFlags{Direction: tree.Descending}
		}
	case 1638:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9672
		{
			sqlVAL.union.val = &tree.IndexFlags{NoIndexJoin: true}
		}
	case 1639:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9677
		{
			sqlVAL.union.val = &tree.IndexFlags{NoZigzagJoin: true}
		}
	case 1640:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9682
		{

			sqlVAL.union.val = &tree.IndexFlags{IgnoreForeignKeys: true}
		}
	case 1641:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9689
		{
			sqlVAL.union.val = sqlDollar[1].union.indexFlags()
		}
	case 1642:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9694
		{
			a := sqlDollar[1].union.indexFlags()
			b := sqlDollar[3].union.indexFlags()
			if err := a.CombineWith(b); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = a
		}
	case 1643:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9705
		{
			sqlVAL.union.val = &tree.IndexFlags{Index: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 1644:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9709
		{
			sqlVAL.union.val = &tree.IndexFlags{IndexID: tree.IndexID(sqlDollar[3].union.int64())}
		}
	case 1645:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9713
		{
			flags := sqlDollar[3].union.indexFlags()
			if err := flags.Check(); err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = flags
		}
	case 1646:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9721
		{
			sqlVAL.union.val = (*tree.IndexFlags)(nil)
		}
	case 1647:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9753
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1648:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9763
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[2].union.indexFlags(),
				Ordinality: sqlDollar[3].union.bool(),
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1649:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9773
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[1].union.selectStmt()},
				Ordinality: sqlDollar[2].union.bool(),
				As:         sqlDollar[3].union.aliasClause(),
			}
		}
	case 1650:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9781
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &tree.Subquery{Select: sqlDollar[2].union.selectStmt()},
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1651:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9790
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1652:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9794
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1653:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9798
		{
			f := sqlDollar[1].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[2].union.bool(),

				As: sqlDollar[3].union.aliasClause(),
			}
		}
	case 1654:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9809
		{
			f := sqlDollar[2].union.tblExpr()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       f,
				Ordinality: sqlDollar[3].union.bool(),
				Lateral:    true,
				As:         sqlDollar[4].union.aliasClause(),
			}
		}
	case 1655:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9833
		{
			sqlVAL.union.val = &tree.AliasedTableExpr{Expr: &tree.StatementSource{Statement: sqlDollar[2].union.stmt()}, Ordinality: sqlDollar[4].union.bool(), As: sqlDollar[5].union.aliasClause()}
		}
	case 1656:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9839
		{

			sqlVAL.union.val = &tree.TableRef{
				TableID: sqlDollar[2].union.int64(),
				Columns: sqlDollar[3].union.tableRefCols(),
				As:      sqlDollar[4].union.aliasClause(),
			}
		}
	case 1657:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9850
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: tree.Exprs{sqlDollar[1].union.expr()}}
		}
	case 1658:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9854
		{
			sqlVAL.union.val = &tree.RowsFromExpr{Items: sqlDollar[4].union.exprs()}
		}
	case 1659:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9860
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 1660:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9862
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 1661:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9866
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1662:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9872
		{
		}
	case 1663:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9874
		{
			return unimplemented(sqllex, "ROWS FROM with col_def_list")
		}
	case 1664:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9877
		{
			sqlVAL.union.val = nil
		}
	case 1665:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9878
		{
			sqlVAL.union.val = []tree.ColumnID{}
		}
	case 1666:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9879
		{
			sqlVAL.union.val = sqlDollar[2].union.tableRefCols()
		}
	case 1667:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9883
		{
			sqlVAL.union.val = []tree.ColumnID{tree.ColumnID(sqlDollar[1].union.int64())}
		}
	case 1668:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9887
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tableRefCols(), tree.ColumnID(sqlDollar[3].union.int64()))
		}
	case 1669:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9893
		{
			sqlVAL.union.val = true
		}
	case 1670:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9897
		{
			sqlVAL.union.val = false
		}
	case 1671:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9917
		{
			sqlVAL.union.val = &tree.ParenTableExpr{Expr: sqlDollar[2].union.tblExpr()}
		}
	case 1672:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9921
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: tree.AstCross, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Hint: sqlDollar[3].str}
		}
	case 1673:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9925
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[2].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[5].union.tblExpr(), Cond: sqlDollar[6].union.joinCond(), Hint: sqlDollar[3].str}
		}
	case 1674:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9929
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[3].union.tblExpr(), Cond: sqlDollar[4].union.joinCond()}
		}
	case 1675:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:9933
		{
			sqlVAL.union.val = &tree.JoinTableExpr{JoinType: sqlDollar[3].str, Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[6].union.tblExpr(), Cond: tree.NaturalJoinCond{}, Hint: sqlDollar[4].str}
		}
	case 1676:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:9937
		{
			sqlVAL.union.val = &tree.JoinTableExpr{Left: sqlDollar[1].union.tblExpr(), Right: sqlDollar[4].union.tblExpr(), Cond: tree.NaturalJoinCond{}}
		}
	case 1677:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:9943
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str), Cols: sqlDollar[3].union.nameList()}
		}
	case 1678:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9947
		{
			sqlVAL.union.val = tree.AliasClause{Alias: tree.Name(sqlDollar[1].str), Cols: sqlDollar[2].union.nameList()}
		}
	case 1680:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9954
		{
			sqlVAL.union.val = tree.AliasClause{}
		}
	case 1681:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:9960
		{
			sqlVAL.union.val = tree.AsOfClause{Expr: sqlDollar[5].union.expr()}
		}
	case 1683:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9967
		{
			sqlVAL.union.val = tree.AsOfClause{}
		}
	case 1684:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9973
		{
			sqlVAL.str = tree.AstFull
		}
	case 1685:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9977
		{
			sqlVAL.str = tree.AstLeft
		}
	case 1686:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:9981
		{
			sqlVAL.str = tree.AstRight
		}
	case 1687:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9985
		{
			sqlVAL.str = tree.AstInner
		}
	case 1688:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:9991
		{
		}
	case 1689:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:9992
		{
		}
	case 1690:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10016
		{
			sqlVAL.str = tree.AstHash
		}
	case 1691:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10020
		{
			sqlVAL.str = tree.AstMerge
		}
	case 1692:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10024
		{
			sqlVAL.str = tree.AstLookup
		}
	case 1693:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10028
		{
			sqlVAL.str = tree.AstInverted
		}
	case 1694:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10032
		{
			sqlVAL.str = ""
		}
	case 1695:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10045
		{
			sqlVAL.union.val = &tree.UsingJoinCond{Cols: sqlDollar[3].union.nameList()}
		}
	case 1696:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10049
		{
			sqlVAL.union.val = &tree.OnJoinCond{Expr: sqlDollar[2].union.expr()}
		}
	case 1697:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10054
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1698:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10055
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName()
		}
	case 1699:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10056
		{
			sqlVAL.union.val = sqlDollar[2].union.unresolvedObjectName()
		}
	case 1700:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10057
		{
			sqlVAL.union.val = sqlDollar[3].union.unresolvedObjectName()
		}
	case 1701:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10061
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableNames{name}
		}
	case 1702:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10066
		{
			name := sqlDollar[3].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = append(sqlDollar[1].union.tableNames(), name)
		}
	case 1703:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10080
		{
			sqlVAL.union.val = sqlDollar[1].union.tblExpr()
		}
	case 1704:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10084
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[2].str)}
			sqlVAL.union.val = alias
		}
	case 1705:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10090
		{
			alias := sqlDollar[1].union.tblExpr().(*tree.AliasedTableExpr)
			alias.As = tree.AliasClause{Alias: tree.Name(sqlDollar[3].str)}
			sqlVAL.union.val = alias
		}
	case 1706:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10096
		{

			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       sqlDollar[1].union.tblExpr(),
				IndexFlags: sqlDollar[2].union.indexFlags(),
			}
		}
	case 1707:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10106
		{
			name := sqlDollar[2].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = &tree.AliasedTableExpr{
				Expr:       &name,
				IndexFlags: sqlDollar[3].union.indexFlags(),
			}
		}
	case 1708:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10116
		{
			sqlVAL.union.val = true
		}
	case 1709:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10120
		{
			sqlVAL.union.val = false
		}
	case 1710:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10126
		{
			sqlVAL.union.val = true
		}
	case 1711:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10130
		{
			sqlVAL.union.val = false
		}
	case 1712:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10136
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1714:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10143
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 1715:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10155
		{
			if bounds := sqlDollar[2].union.int32s(); bounds != nil {
				var err error
				sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), bounds)
				if err != nil {
					return setErr(sqllex, err)
				}
			} else {
				sqlVAL.union.val = sqlDollar[1].union.typeReference()
			}
		}
	case 1716:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10168
		{

			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1717:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:10176
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1718:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10177
		{
			var err error
			sqlVAL.union.val, err = arrayOf(sqlDollar[1].union.typeReference(), nil)
			if err != nil {
				return setErr(sqllex, err)
			}
		}
	case 1719:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10187
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1720:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10194
		{
			sqlVAL.union.val = []int32{-1}
		}
	case 1721:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10195
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1722:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10197
		{

			bound, err := sqlDollar[2].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = []int32{bound}
		}
	case 1723:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10205
		{
			return unimplementedWithIssue(sqllex, 32552)
		}
	case 1724:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10206
		{
			sqlVAL.union.val = []int32(nil)
		}
	case 1726:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10218
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1727:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10225
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 1728:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10234
		{

			if sqlDollar[1].str == "char" {
				sqlVAL.union.val = types.MakeQChar(0)
			} else if sqlDollar[1].str == "serial" {
				switch sqllex.(*lexer).nakedIntType.Width() {
				case 32:
					sqlVAL.union.val = &types.Serial4Type
				default:
					sqlVAL.union.val = &types.Serial8Type
				}
			} else {

				var ok bool
				var err error
				var unimp int
				sqlVAL.union.val, ok, unimp = types.TypeForNonKeywordTypeName(sqlDollar[1].str)
				if !ok {
					switch unimp {
					case 0:

						aIdx := sqllex.(*lexer).NewAnnotation()
						sqlVAL.union.val, err = tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
						if err != nil {
							return setErr(sqllex, err)
						}
					case -1:
						return unimplemented(sqllex, "type name "+sqlDollar[1].str)
					default:
						return unimplementedWithIssueDetail(sqllex, unimp, sqlDollar[1].str)
					}
				}
			}
		}
	case 1729:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10274
		{
			id := sqlDollar[2].union.int32()
			sqlVAL.union.val = &tree.OIDTypeReference{OID: oid.Oid(id)}
		}
	case 1730:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10279
		{
			sqlVAL.union.val = sqlDollar[1].union.typeReference()
		}
	case 1735:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10286
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "point")
		}
	case 1736:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10287
		{
			return unimplementedWithIssueDetail(sqllex, 21286, "polygon")
		}
	case 1737:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10290
		{
			sqlVAL.union.val = geopb.ShapeType_Point
		}
	case 1738:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10291
		{
			sqlVAL.union.val = geopb.ShapeType_PointM
		}
	case 1739:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10292
		{
			sqlVAL.union.val = geopb.ShapeType_PointZ
		}
	case 1740:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10293
		{
			sqlVAL.union.val = geopb.ShapeType_PointZM
		}
	case 1741:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10294
		{
			sqlVAL.union.val = geopb.ShapeType_LineString
		}
	case 1742:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10295
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringM
		}
	case 1743:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10296
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZ
		}
	case 1744:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10297
		{
			sqlVAL.union.val = geopb.ShapeType_LineStringZM
		}
	case 1745:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10298
		{
			sqlVAL.union.val = geopb.ShapeType_Polygon
		}
	case 1746:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10299
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonM
		}
	case 1747:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10300
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZ
		}
	case 1748:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10301
		{
			sqlVAL.union.val = geopb.ShapeType_PolygonZM
		}
	case 1749:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10302
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPoint
		}
	case 1750:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10303
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointM
		}
	case 1751:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10304
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZ
		}
	case 1752:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10305
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPointZM
		}
	case 1753:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10306
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineString
		}
	case 1754:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10307
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringM
		}
	case 1755:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10308
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZ
		}
	case 1756:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10309
		{
			sqlVAL.union.val = geopb.ShapeType_MultiLineStringZM
		}
	case 1757:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10310
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygon
		}
	case 1758:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10311
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonM
		}
	case 1759:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10312
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZ
		}
	case 1760:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10313
		{
			sqlVAL.union.val = geopb.ShapeType_MultiPolygonZM
		}
	case 1761:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10314
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollection
		}
	case 1762:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10315
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionM
		}
	case 1763:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10316
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZ
		}
	case 1764:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10317
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryCollectionZM
		}
	case 1765:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10318
		{
			sqlVAL.union.val = geopb.ShapeType_Geometry
		}
	case 1766:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10319
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryM
		}
	case 1767:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10320
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZ
		}
	case 1768:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10321
		{
			sqlVAL.union.val = geopb.ShapeType_GeometryZM
		}
	case 1769:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10324
		{
			sqlVAL.union.val = types.Geography
		}
	case 1770:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10325
		{
			sqlVAL.union.val = types.Geometry
		}
	case 1771:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10326
		{
			sqlVAL.union.val = types.Box2D
		}
	case 1772:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10328
		{
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1773:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10332
		{
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), 0)
		}
	case 1774:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10336
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeometry(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1775:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:10344
		{
			val, err := sqlDollar[5].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = types.MakeGeography(sqlDollar[3].union.geoShapeType(), geopb.SRID(val))
		}
	case 1781:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10370
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), 0)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1782:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10378
		{
			dec, err := newDecimal(sqlDollar[2].union.int32(), sqlDollar[4].union.int32())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = dec
		}
	case 1783:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10386
		{
			sqlVAL.union.val = nil
		}
	case 1784:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10393
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1785:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10397
		{
			sqlVAL.union.val = sqllex.(*lexer).nakedIntType
		}
	case 1786:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10401
		{
			sqlVAL.union.val = types.Int2
		}
	case 1787:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10405
		{
			sqlVAL.union.val = types.Int
		}
	case 1788:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10409
		{
			sqlVAL.union.val = types.Float4
		}
	case 1789:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10413
		{
			sqlVAL.union.val = sqlDollar[2].union.colType()
		}
	case 1790:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10417
		{
			sqlVAL.union.val = types.Float
		}
	case 1791:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10421
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1792:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10429
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1793:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10437
		{
			typ := sqlDollar[2].union.colType()
			if typ == nil {
				typ = types.Decimal
			}
			sqlVAL.union.val = typ
		}
	case 1794:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10445
		{
			sqlVAL.union.val = types.Bool
		}
	case 1795:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10451
		{
			nv := sqlDollar[2].union.numVal()
			prec, err := nv.AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			typ, err := newFloat(prec)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = typ
		}
	case 1796:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10464
		{
			sqlVAL.union.val = types.Float
		}
	case 1797:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10470
		{
			bit, err := newBitType(sqlDollar[4].union.int32(), sqlDollar[2].union.bool())
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1798:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10476
		{
			bit, err := newBitType(sqlDollar[3].union.int32(), true)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = bit
		}
	case 1799:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10484
		{
			sqlVAL.union.val = types.MakeBit(1)
		}
	case 1800:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10488
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1801:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10492
		{
			sqlVAL.union.val = types.VarBit
		}
	case 1802:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10498
		{
			colTyp := *sqlDollar[1].union.colType()
			n := sqlDollar[3].union.int32()
			if n == 0 {
				sqllex.Error(fmt.Sprintf("length for type %s must be at least 1", colTyp.SQLString()))
				return 1
			}
			sqlVAL.union.val = types.MakeScalar(types.StringFamily, colTyp.Oid(), colTyp.Precision(), n, colTyp.Locale())
		}
	case 1803:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10510
		{
			sqlVAL.union.val = sqlDollar[1].union.colType()
		}
	case 1804:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10516
		{
			sqlVAL.union.val = types.MakeChar(1)
		}
	case 1805:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10520
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1806:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10524
		{
			sqlVAL.union.val = types.VarChar
		}
	case 1807:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10528
		{
			sqlVAL.union.val = types.String
		}
	case 1810:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10537
		{
			sqlVAL.union.val = true
		}
	case 1811:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10538
		{
			sqlVAL.union.val = false
		}
	case 1812:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10543
		{
			sqlVAL.union.val = types.Date
		}
	case 1813:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10547
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimeTZ
			} else {
				sqlVAL.union.val = types.Time
			}
		}
	case 1814:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10555
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimeTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTime(prec)
			}
		}
	case 1815:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10567
		{
			sqlVAL.union.val = types.TimeTZ
		}
	case 1816:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10569
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimeTZ(prec)
		}
	case 1817:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10578
		{
			if sqlDollar[2].union.bool() {
				sqlVAL.union.val = types.TimestampTZ
			} else {
				sqlVAL.union.val = types.Timestamp
			}
		}
	case 1818:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10586
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			if sqlDollar[5].union.bool() {
				sqlVAL.union.val = types.MakeTimestampTZ(prec)
			} else {
				sqlVAL.union.val = types.MakeTimestamp(prec)
			}
		}
	case 1819:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10599
		{
			sqlVAL.union.val = types.TimestampTZ
		}
	case 1820:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10603
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeTimestampTZ(prec)
		}
	case 1821:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10613
		{
			sqlVAL.union.val = true
		}
	case 1822:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10614
		{
			sqlVAL.union.val = false
		}
	case 1823:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10615
		{
			sqlVAL.union.val = false
		}
	case 1824:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10619
		{
			sqlVAL.union.val = types.Interval
		}
	case 1825:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10623
		{
			sqlVAL.union.val = types.MakeInterval(sqlDollar[2].union.intervalTypeMetadata())
		}
	case 1826:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10627
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.MakeInterval(types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true})
		}
	case 1827:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10638
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_YEAR,
				},
			}
		}
	case 1828:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10646
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1829:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10654
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_DAY,
				},
			}
		}
	case 1830:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10662
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1831:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10670
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1832:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10678
		{
			sqlVAL.union.val = sqlDollar[1].union.intervalTypeMetadata()
		}
	case 1833:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10684
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_YEAR,
					DurationType:     types.IntervalDurationType_MONTH,
				},
			}
		}
	case 1834:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10693
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_HOUR,
				},
			}
		}
	case 1835:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10702
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_DAY,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1836:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10711
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_DAY
			sqlVAL.union.val = ret
		}
	case 1837:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10717
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					FromDurationType: types.IntervalDurationType_HOUR,
					DurationType:     types.IntervalDurationType_MINUTE,
				},
			}
		}
	case 1838:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10726
		{
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_HOUR
			sqlVAL.union.val = ret
		}
	case 1839:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10732
		{
			sqlVAL.union.val = sqlDollar[3].union.intervalTypeMetadata()
			ret := sqlDollar[3].union.intervalTypeMetadata()
			ret.DurationField.FromDurationType = types.IntervalDurationType_MINUTE
			sqlVAL.union.val = ret
		}
	case 1841:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:10742
		{
			sqlVAL.union.val = nil
		}
	case 1842:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:10748
		{
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
			}
		}
	case 1843:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:10756
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = types.IntervalTypeMetadata{
				DurationField: types.IntervalDurationField{
					DurationType: types.IntervalDurationType_SECOND,
				},
				PrecisionIsSet: true,
				Precision:      prec,
			}
		}
	case 1845:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10793
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1846:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10797
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1847:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10801
		{
			sqlVAL.union.val = &tree.CollateExpr{Expr: sqlDollar[1].union.expr(), Locale: sqlDollar[3].str}
		}
	case 1848:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:10805
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("timezone"), Exprs: tree.Exprs{sqlDollar[5].union.expr(), sqlDollar[1].union.expr()}}
		}
	case 1849:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10816
		{

			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1850:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10821
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1851:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10825
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1852:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10829
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnarySqrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1853:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10833
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryCbrt), Expr: sqlDollar[2].union.expr()}
		}
	case 1854:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10837
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1855:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10841
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1856:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10845
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1857:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10849
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1858:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10853
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1859:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10857
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1860:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10861
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1861:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10865
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1862:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10869
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1863:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10873
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1864:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10877
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1865:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10881
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1866:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10885
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1867:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10889
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONSomeExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1868:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10893
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.JSONAllExists), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1869:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10897
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Contains), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1870:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10901
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ContainedBy), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1871:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10905
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1872:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10909
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1873:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10913
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1874:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10917
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1875:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10921
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchVal), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1876:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10925
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchText), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1877:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10929
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchValPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1878:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10933
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.JSONFetchTextPath), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1879:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10937
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("json_remove_path"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1880:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10941
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contained_by_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1881:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10945
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Overlaps), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1882:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10949
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("inet_contains_or_equals"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr()}}
		}
	case 1883:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10953
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1884:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10957
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1885:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10961
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1886:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10965
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1887:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10973
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1888:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10983
		{
			sqlVAL.union.val = &tree.AndExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1889:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10987
		{
			sqlVAL.union.val = &tree.OrExpr{Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1890:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10991
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1891:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:10995
		{
			sqlVAL.union.val = &tree.NotExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1892:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:10999
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.Like), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1893:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11003
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1894:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11007
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotLike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1895:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11011
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_like_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1896:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11015
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.ILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1897:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11019
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 1898:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11023
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotILike), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1899:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11027
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_ilike_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1900:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11031
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.SimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1901:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11035
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[4].union.expr(), sqlDollar[6].union.expr()}}
		}
	case 1902:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11039
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotSimilarTo), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1903:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11043
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("not_similar_to_escape"), Exprs: tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[5].union.expr(), sqlDollar[7].union.expr()}}
		}
	case 1904:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11047
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1905:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11051
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1906:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11055
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.RegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1907:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11059
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotRegIMatch), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1908:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11063
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1909:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11067
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: tree.NewStrVal("NaN")}
		}
	case 1910:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11071
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1911:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11075
		{
			sqlVAL.union.val = &tree.IsNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1912:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11079
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1913:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11083
		{
			sqlVAL.union.val = &tree.IsNotNullExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 1914:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11086
		{
			return unimplemented(sqllex, "overlaps")
		}
	case 1915:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11088
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1916:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11092
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(true)}
		}
	case 1917:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11096
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1918:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11100
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.MakeDBool(false)}
		}
	case 1919:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11104
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1920:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11108
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: tree.DNull}
		}
	case 1921:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11112
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1922:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11116
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1923:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11120
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1924:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11124
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1925:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11128
		{
			sqlVAL.union.val = &tree.RangeCond{Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1926:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11132
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1927:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11136
		{
			sqlVAL.union.val = &tree.RangeCond{Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[4].union.expr(), To: sqlDollar[6].union.expr()}
		}
	case 1928:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11140
		{
			sqlVAL.union.val = &tree.RangeCond{Not: true, Symmetric: true, Left: sqlDollar[1].union.expr(), From: sqlDollar[5].union.expr(), To: sqlDollar[7].union.expr()}
		}
	case 1929:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11144
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.In), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1930:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11148
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NotIn), Left: sqlDollar[1].union.expr(), Right: sqlDollar[4].union.expr()}
		}
	case 1931:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11152
		{
			op := sqlDollar[3].union.cmpOp()
			subOp := sqlDollar[2].union.op()
			subOpCmp, ok := subOp.(tree.ComparisonOperator)
			if !ok {
				sqllex.Error(fmt.Sprintf("%s %s <array> is invalid because %q is not a boolean operator",
					subOp, op, subOp))
				return 1
			}
			sqlVAL.union.val = &tree.ComparisonExpr{
				Operator:    op,
				SubOperator: subOpCmp,
				Left:        sqlDollar[1].union.expr(),
				Right:       sqlDollar[4].union.expr(),
			}
		}
	case 1932:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11169
		{
			sqlVAL.union.val = tree.DefaultVal{}
		}
	case 1933:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11174
		{
			return unimplemented(sqllex, "UNIQUE predicate")
		}
	case 1935:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11186
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.CastShort}
		}
	case 1936:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11190
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[1].union.expr(), Type: sqlDollar[3].union.typeReference(), SyntaxMode: tree.AnnotateShort}
		}
	case 1937:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11194
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1938:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11198
		{
			sqlVAL.union.val = unaryNegation(sqlDollar[2].union.expr())
		}
	case 1939:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11202
		{
			sqlVAL.union.val = &tree.UnaryExpr{Operator: tree.MakeUnaryOperator(tree.UnaryComplement), Expr: sqlDollar[2].union.expr()}
		}
	case 1940:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11206
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Plus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1941:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11210
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Minus), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1942:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11214
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mult), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1943:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11218
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Div), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1944:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11222
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.FloorDiv), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1945:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11226
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Mod), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1946:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11230
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Pow), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1947:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11234
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitxor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1948:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11238
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitand), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1949:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11242
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Bitor), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1950:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11246
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1951:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11250
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GT), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1952:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11254
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.EQ), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1953:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11258
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.Concat), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1954:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11262
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.LShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1955:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11266
		{
			sqlVAL.union.val = &tree.BinaryExpr{Operator: tree.MakeBinaryOperator(tree.RShift), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1956:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11270
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.LE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1957:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11274
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.GE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1958:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11278
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.NE), Left: sqlDollar[1].union.expr(), Right: sqlDollar[3].union.expr()}
		}
	case 1959:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11282
		{
			var retCode int
			sqlVAL.union.val, retCode = processUnaryQualOp(sqllex, sqlDollar[1].union.op(), sqlDollar[2].union.expr())
			if retCode != 0 {
				return retCode
			}
		}
	case 1960:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11290
		{
			{
				var retCode int
				sqlVAL.union.val, retCode = processBinaryQualOp(sqllex, sqlDollar[2].union.op(), sqlDollar[1].union.expr(), sqlDollar[3].union.expr())
				if retCode != 0 {
					return retCode
				}
			}
		}
	case 1961:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11300
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[5].union.expr()}
		}
	case 1962:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11304
		{
			sqlVAL.union.val = &tree.ComparisonExpr{Operator: tree.MakeComparisonOperator(tree.IsNotDistinctFrom), Left: sqlDollar[1].union.expr(), Right: sqlDollar[6].union.expr()}
		}
	case 1963:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11308
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Expr: sqlDollar[1].union.expr(), Types: sqlDollar[5].union.typeReferences()}
		}
	case 1964:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:11312
		{
			sqlVAL.union.val = &tree.IsOfTypeExpr{Not: true, Expr: sqlDollar[1].union.expr(), Types: sqlDollar[6].union.typeReferences()}
		}
	case 1966:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11326
		{
			sqlVAL.union.val = &tree.IndirectionExpr{
				Expr:        sqlDollar[1].union.expr(),
				Indirection: sqlDollar[2].union.arraySubscripts(),
			}
		}
	case 1968:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11334
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[2].union.selectStmt(), Exists: true}
		}
	case 1969:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11370
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1970:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11374
		{
			sqlVAL.union.val = sqlDollar[1].union.numVal()
		}
	case 1971:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11378
		{
			sqlVAL.union.val = tree.NewStrVal(sqlDollar[1].str)
		}
	case 1972:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11382
		{
			sqlVAL.union.val = tree.NewBytesStrVal(sqlDollar[1].str)
		}
	case 1973:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11386
		{
			d, err := tree.ParseDBitArray(sqlDollar[1].str)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = d
		}
	case 1974:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11391
		{
			return unimplemented(sqllex, sqlDollar[1].union.unresolvedName().String()+"(...) SCONST")
		}
	case 1975:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11393
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1976:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11397
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 1977:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11401
		{
			sqlVAL.union.val = tree.MakeDBool(true)
		}
	case 1978:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11405
		{
			sqlVAL.union.val = tree.MakeDBool(false)
		}
	case 1979:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11409
		{
			sqlVAL.union.val = tree.DNull
		}
	case 1980:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11413
		{
			sqlVAL.union.val = tree.Expr(sqlDollar[1].union.unresolvedName())
		}
	case 1981:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11417
		{
			colNum := sqlDollar[2].union.int64()
			if colNum < 1 || colNum > int64(MaxInt) {
				sqllex.Error(fmt.Sprintf("invalid column ordinal: @%d", colNum))
				return 1
			}
			sqlVAL.union.val = tree.NewOrdinalReference(int(colNum - 1))
		}
	case 1982:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11426
		{
			p := sqlDollar[1].union.placeholder()
			sqllex.(*lexer).UpdateNumPlaceholders(p)
			sqlVAL.union.val = p
		}
	case 1983:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11433
		{
			sqlVAL.union.val = &tree.TupleStar{Expr: sqlDollar[2].union.expr()}
		}
	case 1984:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11437
		{
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ColName: tree.Name(sqlDollar[5].str)}
		}
	case 1985:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11441
		{
			idx, err := sqlDollar[6].union.numVal().AsInt32()
			if err != nil || idx <= 0 {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = &tree.ColumnAccessExpr{Expr: sqlDollar[2].union.expr(), ByIndex: true, ColIndex: int(idx - 1)}
		}
	case 1986:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11447
		{
			sqlVAL.union.val = &tree.ParenExpr{Expr: sqlDollar[2].union.expr()}
		}
	case 1988:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11452
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 1989:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11456
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 1990:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11460
		{
			sqlVAL.union.val = &tree.ArrayFlatten{Subquery: &tree.Subquery{Select: sqlDollar[2].union.selectStmt()}}
		}
	case 1991:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11464
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.tuple().Exprs}
		}
	case 1992:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11468
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 1993:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11471
		{
			return unimplemented(sqllex, "d_expr grouping")
		}
	case 1994:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11475
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName()}
		}
	case 1995:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11479
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: sqlDollar[3].union.exprs(), OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1996:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11482
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1997:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11483
		{
			return unimplemented(sqllex, "variadic")
		}
	case 1998:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11485
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.AllFuncType, Exprs: sqlDollar[4].union.exprs(), OrderBy: sqlDollar[5].union.orderBy(), AggType: tree.GeneralAgg}
		}
	case 1999:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11491
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Type: tree.DistinctFuncType, Exprs: sqlDollar[4].union.exprs()}
		}
	case 2000:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11495
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: sqlDollar[1].union.resolvableFuncRefFromName(), Exprs: tree.Exprs{tree.StarExpr()}}
		}
	case 2001:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11498
		{
			return helpWithFunction(sqllex, sqlDollar[1].union.resolvableFuncRefFromName())
		}
	case 2002:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11507
		{
			name := sqlDollar[1].union.unresolvedName()
			if name.NumParts == 1 {
				typName := name.Parts[0]

				if typName == "char" {
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: types.MakeQChar(0), SyntaxMode: tree.CastPrepend}
				} else if typName == "serial" {
					switch sqllex.(*lexer).nakedIntType.Width() {
					case 32:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial4Type, SyntaxMode: tree.CastPrepend}
					default:
						sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: &types.Serial8Type, SyntaxMode: tree.CastPrepend}
					}
				} else {

					var typ tree.ResolvableTypeReference
					var ok bool
					var err error
					var unimp int
					typ, ok, unimp = types.TypeForNonKeywordTypeName(typName)
					if !ok {
						switch unimp {
						case 0:

							aIdx := sqllex.(*lexer).NewAnnotation()
							typ, err = name.ToUnresolvedObjectName(aIdx)
							if err != nil {
								return setErr(sqllex, err)
							}
						case -1:
							return unimplemented(sqllex, "type name "+typName)
						default:
							return unimplementedWithIssueDetail(sqllex, unimp, typName)
						}
					}
					sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: typ, SyntaxMode: tree.CastPrepend}
				}
			} else {
				aIdx := sqllex.(*lexer).NewAnnotation()
				res, err := name.ToUnresolvedObjectName(aIdx)
				if err != nil {
					return setErr(sqllex, err)
				}
				sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: res, SyntaxMode: tree.CastPrepend}
			}
		}
	case 2003:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11560
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: tree.NewStrVal(sqlDollar[2].str), Type: sqlDollar[1].union.colType(), SyntaxMode: tree.CastPrepend}
		}
	case 2004:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11573
		{
			f := sqlDollar[1].union.expr().(*tree.FuncExpr)
			w := sqlDollar[2].union.expr().(*tree.FuncExpr)
			if w.AggType != 0 {
				f.AggType = w.AggType
				f.OrderBy = w.OrderBy
			}
			f.Filter = sqlDollar[3].union.expr()
			f.WindowDef = sqlDollar[4].union.windowDef()
			sqlVAL.union.val = f
		}
	case 2005:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11585
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2006:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11594
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2007:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11595
		{
			sqlVAL.union.val = sqlDollar[1].union.expr()
		}
	case 2008:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11600
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("pg_collation_for"), Exprs: tree.Exprs{sqlDollar[4].union.expr()}}
		}
	case 2009:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11604
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2010:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11608
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2011:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11614
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_database")}
		}
	case 2012:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11618
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2013:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11622
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2014:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11626
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2015:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11630
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2016:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11634
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2017:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11640
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2018:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11644
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2019:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11648
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("current_user")}
		}
	case 2020:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11652
		{
			sqlVAL.union.val = &tree.CastExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.CastExplicit}
		}
	case 2021:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11656
		{
			sqlVAL.union.val = &tree.AnnotateTypeExpr{Expr: sqlDollar[3].union.expr(), Type: sqlDollar[5].union.typeReference(), SyntaxMode: tree.AnnotateExplicit}
		}
	case 2022:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11660
		{
			sqlVAL.union.val = &tree.IfExpr{Cond: sqlDollar[3].union.expr(), True: sqlDollar[5].union.expr(), Else: sqlDollar[7].union.expr()}
		}
	case 2023:
		sqlDollar = sqlS[sqlpt-8 : sqlpt+1]
//line sql-gen.y:11664
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr(), ErrCode: sqlDollar[7].union.expr()}
		}
	case 2024:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11668
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), Else: sqlDollar[5].union.expr()}
		}
	case 2025:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11672
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr()}
		}
	case 2026:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11676
		{
			sqlVAL.union.val = &tree.IfErrExpr{Cond: sqlDollar[3].union.expr(), ErrCode: sqlDollar[5].union.expr()}
		}
	case 2027:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11680
		{
			sqlVAL.union.val = &tree.NullIfExpr{Expr1: sqlDollar[3].union.expr(), Expr2: sqlDollar[5].union.expr()}
		}
	case 2028:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11684
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "IFNULL", Exprs: tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[5].union.expr()}}
		}
	case 2029:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11688
		{
			sqlVAL.union.val = &tree.CoalesceExpr{Name: "COALESCE", Exprs: sqlDollar[3].union.exprs()}
		}
	case 2031:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11695
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2032:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11698
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2033:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11700
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2034:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11703
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2035:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11705
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2036:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11709
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2037:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11712
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2038:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11714
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2039:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11718
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2040:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11721
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2041:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11723
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2042:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11727
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2043:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11730
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2044:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11732
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2045:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11736
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: tree.Exprs{sqlDollar[3].union.expr()}}
		}
	case 2046:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11739
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2047:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11741
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2048:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11744
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2049:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11746
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str)}
		}
	case 2050:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11749
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2051:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11751
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2052:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11754
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2053:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11756
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2054:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11759
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2055:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11761
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2056:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11764
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2057:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11766
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("strpos"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2058:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11770
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2059:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11773
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2060:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11774
		{
			return unimplemented(sqllex, "treat")
		}
	case 2061:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11776
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2062:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11780
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("ltrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2063:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11784
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("rtrim"), Exprs: sqlDollar[4].union.exprs()}
		}
	case 2064:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11788
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction("btrim"), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2065:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11792
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2066:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11795
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2067:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11797
		{
			sqlVAL.union.val = &tree.FuncExpr{Func: tree.WrapFunction(sqlDollar[1].str), Exprs: sqlDollar[3].union.exprs()}
		}
	case 2068:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11800
		{
			return helpWithFunctionByName(sqllex, sqlDollar[1].str)
		}
	case 2069:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11806
		{
			sqlVAL.union.val = &tree.FuncExpr{OrderBy: sqlDollar[4].union.orderBy(), AggType: tree.OrderedSetAgg}
		}
	case 2070:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11810
		{
			sqlVAL.union.val = &tree.FuncExpr{}
		}
	case 2071:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:11816
		{
			sqlVAL.union.val = sqlDollar[4].union.expr()
		}
	case 2072:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11820
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2073:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11827
		{
			sqlVAL.union.val = sqlDollar[2].union.window()
		}
	case 2074:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11831
		{
			sqlVAL.union.val = tree.Window(nil)
		}
	case 2075:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11837
		{
			sqlVAL.union.val = tree.Window{sqlDollar[1].union.windowDef()}
		}
	case 2076:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11841
		{
			sqlVAL.union.val = append(sqlDollar[1].union.window(), sqlDollar[3].union.windowDef())
		}
	case 2077:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11847
		{
			n := sqlDollar[3].union.windowDef()
			n.Name = tree.Name(sqlDollar[1].str)
			sqlVAL.union.val = n
		}
	case 2078:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11855
		{
			sqlVAL.union.val = sqlDollar[2].union.windowDef()
		}
	case 2079:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11859
		{
			sqlVAL.union.val = &tree.WindowDef{Name: tree.Name(sqlDollar[2].str)}
		}
	case 2080:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11863
		{
			sqlVAL.union.val = (*tree.WindowDef)(nil)
		}
	case 2081:
		sqlDollar = sqlS[sqlpt-6 : sqlpt+1]
//line sql-gen.y:11870
		{
			sqlVAL.union.val = &tree.WindowDef{
				RefName:    tree.Name(sqlDollar[2].str),
				Partitions: sqlDollar[3].union.exprs(),
				OrderBy:    sqlDollar[4].union.orderBy(),
				Frame:      sqlDollar[5].union.windowFrame(),
			}
		}
	case 2083:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11890
		{
			sqlVAL.str = ""
		}
	case 2084:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11896
		{
			sqlVAL.union.val = sqlDollar[3].union.exprs()
		}
	case 2085:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11900
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2086:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11906
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.RANGE,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2087:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11914
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.ROWS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2088:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:11922
		{
			sqlVAL.union.val = &tree.WindowFrame{
				Mode:      tree.GROUPS,
				Bounds:    sqlDollar[2].union.windowFrameBounds(),
				Exclusion: sqlDollar[3].union.windowFrameExclusion(),
			}
		}
	case 2089:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:11930
		{
			sqlVAL.union.val = (*tree.WindowFrame)(nil)
		}
	case 2090:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:11936
		{
			startBound := sqlDollar[1].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case startBound.BoundType == tree.OffsetFollowing:
				sqllex.Error("frame starting from following row cannot end with current row")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound}
		}
	case 2091:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:11949
		{
			startBound := sqlDollar[2].union.windowFrameBound()
			endBound := sqlDollar[4].union.windowFrameBound()
			switch {
			case startBound.BoundType == tree.UnboundedFollowing:
				sqllex.Error("frame start cannot be UNBOUNDED FOLLOWING")
				return 1
			case endBound.BoundType == tree.UnboundedPreceding:
				sqllex.Error("frame end cannot be UNBOUNDED PRECEDING")
				return 1
			case startBound.BoundType == tree.CurrentRow && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from current row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.OffsetPreceding:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			case startBound.BoundType == tree.OffsetFollowing && endBound.BoundType == tree.CurrentRow:
				sqllex.Error("frame starting from following row cannot have preceding rows")
				return 1
			}
			sqlVAL.union.val = tree.WindowFrameBounds{StartBound: startBound, EndBound: endBound}
		}
	case 2092:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11977
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedPreceding}
		}
	case 2093:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11981
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.UnboundedFollowing}
		}
	case 2094:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11985
		{
			sqlVAL.union.val = &tree.WindowFrameBound{BoundType: tree.CurrentRow}
		}
	case 2095:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11989
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetPreceding,
			}
		}
	case 2096:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:11996
		{
			sqlVAL.union.val = &tree.WindowFrameBound{
				OffsetExpr: sqlDollar[1].union.expr(),
				BoundType:  tree.OffsetFollowing,
			}
		}
	case 2097:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12005
		{
			sqlVAL.union.val = tree.ExcludeCurrentRow
		}
	case 2098:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12009
		{
			sqlVAL.union.val = tree.ExcludeGroup
		}
	case 2099:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12013
		{
			sqlVAL.union.val = tree.ExcludeTies
		}
	case 2100:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12017
		{

			sqlVAL.union.val = tree.NoExclusion
		}
	case 2101:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12022
		{
			sqlVAL.union.val = tree.NoExclusion
		}
	case 2102:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12035
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[3].union.exprs(), Row: true}
		}
	case 2103:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12039
		{
			sqlVAL.union.val = sqlDollar[1].union.tuple()
		}
	case 2105:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12046
		{
			t := sqlDollar[2].union.tuple()
			labels := sqlDollar[4].union.nameList()
			t.Labels = make([]string, len(labels))
			for i, l := range labels {
				t.Labels[i] = string(l)
			}
			sqlVAL.union.val = t
		}
	case 2106:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12058
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Any)
		}
	case 2107:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12062
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Some)
		}
	case 2108:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12066
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.All)
		}
	case 2109:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12082
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Plus)
		}
	case 2110:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12083
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Minus)
		}
	case 2111:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12084
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mult)
		}
	case 2112:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12085
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Div)
		}
	case 2113:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12086
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Mod)
		}
	case 2114:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12087
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Pow)
		}
	case 2115:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12088
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LT)
		}
	case 2116:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12089
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GT)
		}
	case 2117:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12090
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.EQ)
		}
	case 2118:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12091
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.LE)
		}
	case 2119:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12092
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.GE)
		}
	case 2120:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12093
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NE)
		}
	case 2121:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12095
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONExists)
		}
	case 2122:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12096
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitand)
		}
	case 2123:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12097
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitor)
		}
	case 2124:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12098
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Bitxor)
		}
	case 2125:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12099
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.FloorDiv)
		}
	case 2126:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12100
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Contains)
		}
	case 2127:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12101
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ContainedBy)
		}
	case 2128:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12102
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.LShift)
		}
	case 2129:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12103
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.RShift)
		}
	case 2130:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12104
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.Concat)
		}
	case 2131:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12105
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchVal)
		}
	case 2132:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12106
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchText)
		}
	case 2133:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12107
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchValPath)
		}
	case 2134:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12108
		{
			sqlVAL.union.val = tree.MakeBinaryOperator(tree.JSONFetchTextPath)
		}
	case 2135:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12109
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONSomeExists)
		}
	case 2136:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12110
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.JSONAllExists)
		}
	case 2137:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12111
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegMatch)
		}
	case 2138:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12112
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.RegIMatch)
		}
	case 2139:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12113
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotRegIMatch)
		}
	case 2140:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12114
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Overlaps)
		}
	case 2141:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12115
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryComplement)
		}
	case 2142:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12116
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnarySqrt)
		}
	case 2143:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12117
		{
			sqlVAL.union.val = tree.MakeUnaryOperator(tree.UnaryCbrt)
		}
	case 2145:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12122
		{

			if sqlDollar[1].str != "pg_catalog" {
				return unimplementedWithIssue(sqllex, 65017)
			}
			sqlVAL.union = sqlDollar[3].union
		}
	case 2146:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12138
		{
			sqlVAL.union = sqlDollar[3].union
		}
	case 2149:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12145
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.Like)
		}
	case 2150:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12146
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotLike)
		}
	case 2151:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12147
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.ILike)
		}
	case 2152:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12148
		{
			sqlVAL.union.val = tree.MakeComparisonOperator(tree.NotILike)
		}
	case 2153:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12171
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2154:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12175
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2155:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12181
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2156:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12185
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2157:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12189
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2158:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12200
		{
			sqlVAL.union.val = &tree.Tuple{}
		}
	case 2159:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12204
		{
			sqlVAL.union.val = &tree.Tuple{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2160:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12210
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2161:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12214
		{
			sqlVAL.union.val = append(tree.Exprs{sqlDollar[1].union.expr()}, sqlDollar[3].union.exprs()...)
		}
	case 2163:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12221
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2164:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12227
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2165:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12231
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2166:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12237
		{
			sqlVAL.union.val = []tree.ResolvableTypeReference{sqlDollar[1].union.typeReference()}
		}
	case 2167:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12241
		{
			sqlVAL.union.val = append(sqlDollar[1].union.typeReferences(), sqlDollar[3].union.typeReference())
		}
	case 2168:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12247
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2169:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12251
		{
			sqlVAL.union.val = &tree.Array{Exprs: sqlDollar[2].union.exprs()}
		}
	case 2170:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12257
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr()}
		}
	case 2171:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12261
		{
			sqlVAL.union.val = append(sqlDollar[1].union.exprs(), sqlDollar[3].union.expr())
		}
	case 2172:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12267
		{
			sqlVAL.union.val = tree.Exprs{tree.NewStrVal(strings.ToLower(sqlDollar[1].str)), sqlDollar[3].union.expr()}
		}
	case 2173:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12271
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2182:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12294
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr(), sqlDollar[4].union.expr()}
		}
	case 2183:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12298
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2184:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12302
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2185:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12308
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2186:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12315
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[3].union.expr(), sqlDollar[1].union.expr()}
		}
	case 2187:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12319
		{
			sqlVAL.union.val = tree.Exprs(nil)
		}
	case 2188:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12336
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr(), sqlDollar[3].union.expr()}
		}
	case 2189:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12340
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[3].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2190:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12344
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), sqlDollar[2].union.expr()}
		}
	case 2191:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12348
		{
			sqlVAL.union.val = tree.Exprs{sqlDollar[1].union.expr(), tree.NewDInt(1), sqlDollar[2].union.expr()}
		}
	case 2192:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12352
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2193:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12358
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2194:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12364
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2195:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12370
		{
			sqlVAL.union.val = append(sqlDollar[3].union.exprs(), sqlDollar[1].union.expr())
		}
	case 2196:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12374
		{
			sqlVAL.union.val = sqlDollar[2].union.exprs()
		}
	case 2197:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12378
		{
			sqlVAL.union.val = sqlDollar[1].union.exprs()
		}
	case 2198:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12384
		{
			sqlVAL.union.val = &tree.Subquery{Select: sqlDollar[1].union.selectStmt()}
		}
	case 2200:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12396
		{
			sqlVAL.union.val = &tree.CaseExpr{Expr: sqlDollar[2].union.expr(), Whens: sqlDollar[3].union.whens(), Else: sqlDollar[4].union.expr()}
		}
	case 2201:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12403
		{
			sqlVAL.union.val = []*tree.When{sqlDollar[1].union.when()}
		}
	case 2202:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12407
		{
			sqlVAL.union.val = append(sqlDollar[1].union.whens(), sqlDollar[2].union.when())
		}
	case 2203:
		sqlDollar = sqlS[sqlpt-4 : sqlpt+1]
//line sql-gen.y:12413
		{
			sqlVAL.union.val = &tree.When{Cond: sqlDollar[2].union.expr(), Val: sqlDollar[4].union.expr()}
		}
	case 2204:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12419
		{
			sqlVAL.union.val = sqlDollar[2].union.expr()
		}
	case 2205:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12423
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2207:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12430
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2208:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12436
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr()}
		}
	case 2209:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12440
		{
			sqlVAL.union.val = &tree.ArraySubscript{Begin: sqlDollar[2].union.expr(), End: sqlDollar[4].union.expr(), Slice: true}
		}
	case 2211:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12447
		{
			sqlVAL.union.val = tree.Expr(nil)
		}
	case 2212:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12453
		{
			sqlVAL.union.val = tree.ArraySubscripts{sqlDollar[1].union.arraySubscript()}
		}
	case 2213:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12457
		{
			sqlVAL.union.val = append(sqlDollar[1].union.arraySubscripts(), sqlDollar[2].union.arraySubscript())
		}
	case 2214:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12462
		{
		}
	case 2215:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12463
		{
		}
	case 2216:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12467
		{
			sqlVAL.union.val = tree.SelectExprs{sqlDollar[1].union.selExpr()}
		}
	case 2217:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12471
		{
			sqlVAL.union.val = append(sqlDollar[1].union.selExprs(), sqlDollar[3].union.selExpr())
		}
	case 2218:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12477
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[3].str)}
		}
	case 2219:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12486
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr(), As: tree.UnrestrictedName(sqlDollar[2].str)}
		}
	case 2220:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12490
		{
			sqlVAL.union.val = tree.SelectExpr{Expr: sqlDollar[1].union.expr()}
		}
	case 2221:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12494
		{
			sqlVAL.union.val = tree.StarSelectExpr()
		}
	case 2222:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12502
		{
			sqlVAL.union.val = tree.TableIndexNames{sqlDollar[1].union.newTableIndexName()}
		}
	case 2223:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12506
		{
			sqlVAL.union.val = append(sqlDollar[1].union.newTableIndexNames(), sqlDollar[3].union.newTableIndexName())
		}
	case 2224:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12512
		{
			sqlVAL.union.val = tree.TablePatterns{sqlDollar[1].union.unresolvedName()}
		}
	case 2225:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12516
		{
			sqlVAL.union.val = append(sqlDollar[1].union.tablePatterns(), sqlDollar[3].union.unresolvedName())
		}
	case 2226:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12535
		{
			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: tree.UnrestrictedName(sqlDollar[3].str),
			}
		}
	case 2227:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12543
		{

			name := sqlDollar[1].union.unresolvedObjectName().ToTableName()
			indexName := tree.UnrestrictedName(name.ObjectName)
			name.ObjectName = ""
			sqlVAL.union.val = tree.TableIndexName{
				Table: name,
				Index: indexName,
			}
		}
	case 2228:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12566
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2230:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12575
		{
			sqlVAL.union.val = sqlDollar[1].union.unresolvedObjectName().ToUnresolvedName()
		}
	case 2231:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12579
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2232:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12583
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2233:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12587
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 1}
		}
	case 2234:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12593
		{
			sqlVAL.union.val = tree.NameList{tree.Name(sqlDollar[1].str)}
		}
	case 2235:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12597
		{
			sqlVAL.union.val = append(sqlDollar[1].union.nameList(), tree.Name(sqlDollar[3].str))
		}
	case 2240:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12612
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2241:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12616
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2244:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12628
		{
			sqlVAL.union.val = sqlDollar[2].union.numVal()
		}
	case 2245:
		sqlDollar = sqlS[sqlpt-2 : sqlpt+1]
//line sql-gen.y:12632
		{
			n := sqlDollar[2].union.numVal()
			n.SetNegative()
			sqlVAL.union.val = n
		}
	case 2246:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12641
		{
			val, err := sqlDollar[1].union.numVal().AsInt32()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2247:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12652
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2248:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12661
		{
			val, err := sqlDollar[1].union.numVal().AsInt64()
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = val
		}
	case 2249:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12669
		{
			var t *types.T
			if sqlDollar[3].union.val == nil {
				t = types.Interval
			} else {
				t = types.MakeInterval(sqlDollar[3].union.intervalTypeMetadata())
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[2].str),
				Type: t,

				SyntaxMode: tree.CastShort,
			}
		}
	case 2250:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12686
		{
			prec := sqlDollar[3].union.int32()
			if prec < 0 || prec > 6 {
				sqllex.Error(fmt.Sprintf("precision %d out of range", prec))
				return 1
			}
			sqlVAL.union.val = &tree.CastExpr{
				Expr: tree.NewStrVal(sqlDollar[5].str),
				Type: types.MakeInterval(
					types.IntervalTypeMetadata{Precision: prec, PrecisionIsSet: true},
				),

				SyntaxMode: tree.CastShort,
			}
		}
	case 2269:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12771
		{
			sqlVAL.union.val = sqlDollar[1].union.nameList()
		}
	case 2271:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12779
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{SchemaName: tree.Name(sqlDollar[1].str), ExplicitSchema: true}
		}
	case 2272:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12783
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{CatalogName: tree.Name(sqlDollar[1].str), SchemaName: tree.Name(sqlDollar[3].str), ExplicitCatalog: true, ExplicitSchema: true}
		}
	case 2273:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12789
		{
			sqlVAL.union.val = tree.ObjectNamePrefixList{sqlDollar[1].union.objectNamePrefix()}
		}
	case 2274:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12793
		{
			sqlVAL.union.val = append(sqlDollar[1].union.objectNamePrefixList(), sqlDollar[3].union.objectNamePrefix())
		}
	case 2276:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12801
		{
			sqlVAL.union.val = tree.ObjectNamePrefix{ExplicitSchema: false}
		}
	case 2282:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12828
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2284:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12835
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 2, Parts: tree.NameParts{sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2285:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12839
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 3, Parts: tree.NameParts{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2286:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12843
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 4, Parts: tree.NameParts{sqlDollar[7].str, sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2288:
		sqlDollar = sqlS[sqlpt-7 : sqlpt+1]
//line sql-gen.y:12857
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 4, Parts: tree.NameParts{"", sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2289:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12861
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 3, Parts: tree.NameParts{"", sqlDollar[3].str, sqlDollar[1].str}}
		}
	case 2290:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12865
		{
			sqlVAL.union.val = &tree.UnresolvedName{Star: true, NumParts: 2, Parts: tree.NameParts{"", sqlDollar[1].str}}
		}
	case 2291:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12878
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2293:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12887
		{
			sqlVAL.union.val = &tree.UnresolvedName{NumParts: 1, Parts: tree.NameParts{sqlDollar[1].str}}
		}
	case 2297:
		sqlDollar = sqlS[sqlpt-1 : sqlpt+1]
//line sql-gen.y:12905
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(1, [3]string{sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2298:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12918
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(2, [3]string{sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2299:
		sqlDollar = sqlS[sqlpt-5 : sqlpt+1]
//line sql-gen.y:12925
		{
			aIdx := sqllex.(*lexer).NewAnnotation()
			res, err := tree.NewUnresolvedObjectName(3, [3]string{sqlDollar[5].str, sqlDollar[3].str, sqlDollar[1].str}, aIdx)
			if err != nil {
				return setErr(sqllex, err)
			}
			sqlVAL.union.val = res
		}
	case 2307:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12950
		{
			sqlVAL.str = ""
		}
	case 2308:
		sqlDollar = sqlS[sqlpt-3 : sqlpt+1]
//line sql-gen.y:12956
		{
			sqlVAL.str = sqlDollar[2].str
		}
	case 2309:
		sqlDollar = sqlS[sqlpt-0 : sqlpt+1]
//line sql-gen.y:12960
		{
			sqlVAL.str = ""
		}
	}
	goto sqlstack /* stack new state and value */
}
